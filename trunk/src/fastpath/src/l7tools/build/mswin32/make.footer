#
# sccs_id @(#) l7tools/build/make.footer, build, rel2, 8281_v2.1 1.2  9/27/93 14:19:03
#
#######################################################################
##
## Module: l7tools/build/hwsmake.footer, , Tiger1, Apr02
##
## Function:  
##      hwsmake.footer - defines the tasks we perform to build 
##      components and systems
##
## Change Summary:
##   date   SID	Init	Action
## ----------------------------
## 12/05/91 1.1 lhb,jdc	Created
## 01/22/92 1.6 jdc	Stable version for Jan09, 1992 build
## 01/23/92 1.7 jdc	1.6 didn't turn out to be so stable. Fixed
##                      bldlib task to always run lib and shlib.
##
##
#######################################################################

#
# Splint task: Splints all source files
splint: $(LIBOBJS)

#
# Lib task:  Create link-library objects from sources
#        1) compile link-library object modules
# Note: LIBOBJS is defined in user makefiles.  



#
# Exe task:  create an executable module
#        1) compile link-objects from sources per inference rules
#        2) create executable per $(EXE) rule
# Note: EXE and EXEOBJS are defined in user makefiles.  
exe:    $(EXE)

$(FPLIB): $(LIBOBJS)
	$(AR) q $(FPLIB) $(LIBOBJS)

lib: $(FPLIB)

$(EXE): $(EXEOBJS)
	@if [[ "$(EXE)" != "pseudoexe" ]] \
	then echo "******** $(EXEOBJS) ==> $@ ********" ; \
	echo "$(linkcmd)" ; \
	$(linkcmd) ; \
	$(FP_BASE)/src/l7tools/build/nimgbld $(NIMFLAGS) -o $@.img $@; fi 
	

# Bldlib task:  create and install libraries
# bldlib:  lib shlib installlib installshlib
bldlib: lib 

# Installexe task:  Create and install executables
#        1) compile EXEOBJS from sources per inference rules
#        2) create executable per $(EXE) rule
#        3) Copy executable to TGT_xx_EXE directory.
# Note: EXE and EXEOBJS are defined in user makefiles.  
installexe: exe 

clean::
	-$(RM) *.d
	-$(RM) *.o
	-$(RM) $(FPLIB)

# Strip debug symbols and add the object files to fastpath.lib
#
bldobj:
	$(STRIP) -g *.o
	$(AR) -r $(FASTPATH_LIB) *.o

# Generating dependencies.
#
ifneq ($(MAKECMDGOALS),clean)
  ifneq ($(MAKECMDGOALS),splint)
    -include $(LIBOBJS:.o=.d)
  endif
endif
