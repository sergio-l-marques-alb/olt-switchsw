# $Id: Makefile.ecos-common,v 1.1 2011/04/18 17:10:58 mruas Exp $
# $Copyright: Copyright 2008 Broadcom Corporation.
# This program is the proprietary software of Broadcom Corporation
# and/or its licensors, and may only be used, duplicated, modified
# or distributed pursuant to the terms and conditions of a separate,
# written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized
# License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software
# and all intellectual property rights therein.  IF YOU HAVE
# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
# ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of
# Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$

# Configuration Flags

# This will set additional CFGFLAGS in Make.config
ifndef	FEATURE_LIST
ifdef ROBO_CHIPS
FEATURE_LIST =	L3 BCMX
FEATURE_LIST += MSTP
ifdef ROBO_OLD
#FEATURE_LIST += I2C
endif
else
ifdef MODENA_CHIP
FEATURE_LIST = L3 BCMX
else
FEATURE_LIST = L3 I2C BCMX
endif
endif
endif

# Tools

CC	= $(CROSS_COMPILE)gcc
CXX	= $(CROSS_COMPILE)g++
LD	= $(CROSS_COMPILE)ld
AR	= $(CROSS_COMPILE)ar
ARFLAGS	= -rc
STRIP	= $(CROSS_COMPILE)strip
RANLIB  = $(CROSS_COMPILE)ranlib

# Handle differences between gcc 2.x and gcc 3.x
gcc-tune-flag = $(shell export PATH=${PATH}; if ${CC} -dumpspecs | grep mcpu >/dev/null; then echo cpu; else echo tune; fi)

# Configuration Variables

# OSType Defines: This defines the type of RTOS or microkernel which you
# are compiling the SAL (and its associated driver) for. New platforms
# can be created by porting the routines (system.c) to your platform and
# adding the define in this Makefile.

OSTYPE = __ECOS

#
# ORIGIN is used to Optionally select different CFLAGS. It is used to import
# source from other vendors. If SOURCE=Broadcom, then the BCM_ flags are added
# to those passed to the compiler. If SOURCE != Broadcom, BCM_ flags are NOT
# added.
#
# Default specifies Broadcom
#
ifndef ORIGIN
	ORIGIN = Broadcom
endif

#
# STD_{C|CPP|CXX}FLAGS - Standard flags used by ALL compilations
# BCM_{C|CPP|CXX}FLAGS - Flags used for Broadcom source files
# OPT_{C|CPP|CXX}FLAGS - Defined in local make files BEFORE inclusion of 
#			 this Makefile, to define local "Extra" flags.
#


CFGFLAGS += -I$(SDK)/systems/linux/kernel/modules/include \
	    -I$(SDK)/systems/bde/linux/include


CFGFLAGS += -DNO_CTRL_C

CFGFLAGS += -D$(OSTYPE)
ifdef LVL7_FIXUP
CFGFLAGS += -D$(TARGETTYPE)
endif

# Logging is only supported for Mozart without NO_LOGGING defined
ifdef GUI_FEATURE_LIST
ifeq (,$(findstring NO_LOGGING,${GUI_FEATURE_LIST})) 
CFGFLAGS += -DECOS_LOGGING_SUPPORT
endif # !NO_LOGGING
endif # GUI_FEATURE_LIST

# No user sal for the linux kernel
# NO_SAL_APPL=1

STD_CFLAGS = $(KFLAGS) $(CFGFLAGS)


STD_CPPFLAGS = ${STD_CFLAGS}
STD_CXXFLAGS = ${STD_CFLAGS}

BCM_CFLAGS   = -Werror
BCM_CPPFLAGS = ${BCM_CFLAGS}
BCM_CXXFLAGS = ${BCM_CFLAGS}

ifeq (${ORIGIN}, Broadcom)
	CFLAGS   += ${STD_CFLAGS}   ${BCM_CFLAGS}   ${OPT_CFLAGS}
	CPPFLAGS += ${STD_CPPFLAGS} ${BCM_CPPFLAGS} ${OPT_CPPFLAGS}
	CXXFLAGS += ${STD_CXXFLAGS} ${BCM_CXXFLAGS} ${OPT_CXXFLAGS}
else
	CFLAGS   += ${STD_CFLAGS}   ${OPT_CFLAGS}
	CPPFLAGS += ${STD_CPPFLAGS} ${OPT_CPPFLAGS}
	CXXFLAGS += ${STD_CXXFLAGS} ${OPT_CXXFLAGS}
endif

#
# DEPEND is used as a command to generate the list of dependencies.
# The format of the output must be 
#	"file.o : file.c a/b/c.h d/e/f.h ...", 
# if it is on multiple lines, each line must end in a backslash. 
# The output MUST be on standard out.
#
DEPEND = ${CC} -M $(CFLAGS) $< 
