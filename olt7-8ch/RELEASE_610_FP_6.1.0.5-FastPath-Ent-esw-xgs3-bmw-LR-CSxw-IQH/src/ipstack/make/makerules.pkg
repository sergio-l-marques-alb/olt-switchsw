# This file defines special package-level build rules and is included by
# make.magic.pkg as part of the IPSTACK package.
#
# Note: The vendor source files listed here are built into individual archive
#       files which are subsequently referenced during the final link.  The
#       local build flags are defined in the corresponding make.pkg file.
#
# Note: Set 'ARC_EXCLUDE := <list of source files>' that are NOT to be built
#       within a given directory.  Be sure to reset 'ARC_EXCLUDE :=' (i.e. empty)
#       immediately following the include $(arc_pkg_rules_file) line.
#

# Local abbreviations (for convenience).
#
arc_pkg_rules_file := $(FP_ROOT)/src/l7tools/build/makerules.arc.pkg


# Specify the source anchor location of the vendor code tree and the prefix 
# of the output directory names and archive files that are created.
#
ifeq ($(L7_TARGETOS_VARIANT),6.5)
ARC_BASE    := $(FP_BASE)/vendor/wrs/ipstack
else
ARC_BASE    := $(FP_BASE)/src/ipstack/vendor
endif
ARC_TOPOUT  := vendor
ARC_PREFIX  := _$(FP_PREFIX)_vend

# Initialize empty, to accumulate information from the include statements below.
#
ARC_DIRLIST :=



#
ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))


# ipcom
#

ifeq ($(L7_TARGETOS_VARIANT),6.5)
ARC_PATH    := ipcom/port/src
ARC_EXCLUDE := \
	ipcom_ctime.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=

ARC_PATH    := ipcom/port/vxworks/src
ARC_EXCLUDE := \
	ipcom_drv_ppp.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=

ARC_PATH    := ipcom/src
ARC_EXCLUDE := \
	ipcom_auth_login.c \
	ipcom_cmd_echo.c \
	ipcom_cmd_ipd.c \
	ipcom_cmd_socktest.c \
	ipcom_cmd_syslog.c \
	ipcom_cmd_tracert.c \
	ipcom_cmd_ttcp.c \
	ipcom_drv_eth_filter.c \
	ipcom_stdio_syslog.c \
	ipcom_sysvar_conf.c \
	ipcom_telnet.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=


# ipnet2
#

ARC_PATH    := ipnet2/src
ARC_EXCLUDE := \
	ipnet_classifier.c \
	ipnet_cmd_nat.c \
	ipnet_cmd_ping.c \
	ipnet_cmd_qc.c \
	ipnet_diffserv.c \
	ipnet_ds_sm.c \
	ipnet_ds_srtcm.c \
	ipnet_if_mib.c \
	ipnet_if_forward_mib.c \
	ipnet_ipsec.c \
	ipnet_nat.c \
	ipnet_nat_dnsproxy.c \
	ipnet_nat_ftpproxy.c \
	ipnet_pkt_queue_dpaf.c \
	ipnet_pkt_queue_fifo.c \
	ipnet_pkt_queue_htbc.c \
	ipnet_pkt_queue_mbc.c \
	ipnet_pkt_queue_netemu.c \
	ipnet_ppp.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=


# iptcp-any
#

ARC_PATH    := iptcp/src
ARC_EXCLUDE := \
	iptcp_ipv6_tcp_mib.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=

# Don't build osconfig files here. They get included in prjConfig.c and built there.

# These sources are included only if IPV6 flex package is present with VXWORKS.
#
ifeq (1,$(BLD_L7_FLEX_HAS_COMMON_IPV6))

  # ipnet2-ipv6
  #

  ARC_PATH    := ipnet2-ipv6/src
  ARC_EXCLUDE := \
	ipnet_cmd_radvd.c \
	ipnet_radvd.c
  include $(arc_pkg_rules_file)
  ARC_EXCLUDE :=

endif  # ipv6
else

# ipcom-vxworks
#

ARC_PATH    := ipcom-vxworks/config
include $(arc_pkg_rules_file)

ARC_PATH    := ipcom-vxworks/port/src
ARC_EXCLUDE := \
	ipcom_ctime.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=

ARC_PATH    := ipcom-vxworks/port/vxworks/src
ARC_EXCLUDE := \
	ipcom_drv_ppp.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=

ARC_PATH    := ipcom-vxworks/src
ARC_EXCLUDE := \
	ipcom_auth_login.c \
	ipcom_cmd_echo.c \
	ipcom_cmd_ipd.c \
	ipcom_cmd_shellcmds.c \
	ipcom_cmd_socktest.c \
	ipcom_cmd_syslog.c \
	ipcom_cmd_tracert.c \
	ipcom_cmd_ttcp.c \
	ipcom_cmd_user.c \
	ipcom_cmd_version.c \
	ipcom_drv_eth_filter.c \
	ipcom_mshell.c \
	ipcom_shell.c \
	ipcom_shellcmd.c \
	ipcom_shellfile.c \
	ipcom_shellio.c \
	ipcom_stdio_syslog.c \
	ipcom_sysvar_conf.c \
	ipcom_telnet.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=


# ipnet2-any
#

ARC_PATH    := ipnet2-any/config
include $(arc_pkg_rules_file)

ARC_PATH    := ipnet2-any/src
ARC_EXCLUDE := \
	ipnet_classifier.c \
	ipnet_cmd_nat.c \
	ipnet_cmd_ping.c \
	ipnet_cmd_qc.c \
	ipnet_diffserv.c \
	ipnet_ds_sm.c \
	ipnet_ds_srtcm.c \
	ipnet_if_mib.c \
	ipnet_if_forward_mib.c \
	ipnet_ipsec.c \
	ipnet_nat.c \
	ipnet_nat_dnsproxy.c \
	ipnet_nat_ftpproxy.c \
	ipnet_pkt_queue_dpaf.c \
	ipnet_pkt_queue_fifo.c \
	ipnet_pkt_queue_htbc.c \
	ipnet_pkt_queue_mbc.c \
	ipnet_pkt_queue_netemu.c \
	ipnet_ppp.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=


# iptcp-any
#

ARC_PATH    := iptcp-any/config
include $(arc_pkg_rules_file)

ARC_PATH    := iptcp-any/src
ARC_EXCLUDE := \
	iptcp_ipv6_tcp_mib.c
include $(arc_pkg_rules_file)
ARC_EXCLUDE :=


# These sources are included only if IPV6 flex package is present with VXWORKS.
#
ifeq (1,$(BLD_L7_FLEX_HAS_COMMON_IPV6))

  # ipnet2-ipv6
  #

  ARC_PATH    := ipnet2-ipv6/config
  include $(arc_pkg_rules_file)

  ARC_PATH    := ipnet2-ipv6/src
  ARC_EXCLUDE := \
	ipnet_cmd_radvd.c \
	ipnet_radvd.c
  include $(arc_pkg_rules_file)
  ARC_EXCLUDE :=

endif  # ipv6

endif


# Clean vendor output archives and directories
#
.PHONY: clean
clean::
	-$(DBG) $(RM) $(QT)$(ARC_PREFIX)*.a$(QT)
	@echo Removing archive directories: $(ARC_DIRLIST) $(HUSH)
	$(foreach dir, $(ARC_DIRLIST), \
		$(shell [ ! -d $(dir) ] || ($(RM) $(dir)/* && rmdir $(dir))))
	$(shell [ ! -d $(ARC_TOPOUT) ] || rmdir $(ARC_TOPOUT))
      
  
.PHONY: debug-variables
debug-variables::
	@$(echo) ""
	@$(echo) "Vendor Interpeak Stack pkg rules"
	@$(echo) "--------------------------------"
	@$(echo) "ARC_BASE=$(ARC_BASE)"
	@$(echo) "ARC_PREFIX=$(ARC_PREFIX)"
	@$(echo) ""
	@$(echo) "ARC_DIRLIST=$(ARC_DIRLIST)"
	@$(echo) ""

endif  # vxworks
