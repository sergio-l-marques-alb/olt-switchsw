# Local source path abbreviations (for convenience).
#
src_snmp_os   := vendor/snmp/$(CONFIG)
src_snmp_src  := $(src_snmp_os)/src
src_snmpd     := $(src_snmp_src)/snmpd
src_snmp_pkgs := src/mgmt/snmp/packages
src_snmp_util := src/mgmt/snmp/util


# List of all packages in the build (including those considered part of the "base").
#
PKG_BLDLIST := $(sort base security switching metro $(L7_PACKAGE) $(L7_FLEX) $(L7_UI))

# Add chassis to the list if CFM chassis package is being built.
#
ifeq (1,$(BLD_L7_CHASSIS_CFM))
  PKG_BLDLIST += chassis
endif


# Pull in makefile definitions, etc.
#
include $(FP_ROOT)/src/mgmt/snmp/make/make.defs


# Special handling for source directories that must be built with unique
# DEFS flags, thereby requiring customized build rules.
#

# File filter transforms.
#
excl_files = $(addprefix $(FP_BASE)/, $(mastersrc_file_exclude_$(subid)))
all_c_files = $(foreach dir, $(mastersrc_$(subid)), $(wildcard $(FP_BASE)/$(dir)/*.c))
object_files = $(strip $(patsubst %.c, %.$(OBJEXT), $(notdir $(filter-out $(excl_files), $(all_c_files)))))


#
# Specify the snmpd/mibs/coex source files.
#
mastersrc_mibs_coex := \
	$(src_snmp_src)/snmpd/mibs/coex

mastersrc_file_exclude_mibs_coex := \
	$(src_snmp_src)/snmpd/mibs/coex/coexoid.c

# List of target .o files used to establish a unique build rule for these sources.
SNMPD_MIBS_COEX_OBJS := $(foreach subid, mibs_coex, $(object_files))


#
# Specify the snmpd/mibs/snmpv3 source files.
#
mastersrc_mibs_snmpv3 := \
	$(src_snmp_src)/snmpd/mibs/snmpv3

mastersrc_file_exclude_mibs_snmpv3 := \
	$(src_snmp_src)/snmpd/mibs/snmpv3/oidl.c \
	$(src_snmp_src)/snmpd/mibs/snmpv3/v3oid.c

# List of target .o files used to establish a unique build rule for these sources.
SNMPD_MIBS_SNMPV3_OBJS := $(foreach subid, mibs_snmpv3, $(object_files))


#
# Specify the snmpd/unix source files.
#
mastersrc_unix := \
	$(src_snmpd)/unix

# Note: The v_private.c file is generated by the build, so it may or
#       may not actually exist in the source tree. This file will be built
#       from the LIBOBJSEXTRA below, so the source file is excluded here to
#       avoid listing the .o file twice in LIBOBJS when this .c file really
#       does exist.
#
mastersrc_file_exclude_unix := \
	$(src_snmpd)/unix/comunity.c \
	$(src_snmpd)/unix/initext.c \
	$(src_snmpd)/unix/k_ipforw.c \
	$(src_snmpd)/unix/k_solaris.c \
	$(src_snmpd)/unix/linktrap.c \
	$(src_snmpd)/unix/snmpoid.c \
	$(src_snmpd)/unix/td.c \
	$(src_snmpd)/unix/v_if.c \
	$(src_snmpd)/unix/v_private.c

LIBOBJSEXTRA += \
	v_$(EXTEND_BASE).$(OBJEXT)

# List of target .o files used to establish a unique build rule for these sources.
#
# Note: This does not include the package .o files to be built for SNMP,
#       since they are built with the -Werror flag on.
#
SNMPD_UNIX_OBJS := $(foreach subid, unix, $(object_files)) $(LIBOBJSEXTRA)


EXTEND_SRCS := \
	v_$(EXTEND_BASE).c

EXTEND_OBJS := $(EXTEND_SRCS:.c=.$(OBJEXT))


# Specify the snmp/packages files.
#

# Summary list of all possible packages containing MIB support.
#
# Note: This should mirror the list of subdirectories immediately beneath src/mgmt/snmp/packages.
#
mib_pkgs := base bgp chassis ip_mcast ipv6 secure_mgmt qos routing security switching wireless metro

# Translate build package names to package MIB directory names
# (define both lower case and upper case).
#
lc_base        := base
lc_bgp         := bgp
lc_chassis     := chassis
lc_ip_mcast    := ip_mcast
lc_ipv6        := ipv6
lc_secure_mgmt := secure_mgmt
lc_qos         := qos
lc_routing     := routing
lc_security    := security
lc_switching   := switching
lc_metro       := metro
lc_wireless    := wireless

uc_base        := BASE
uc_bgp         := BGP
uc_chassis     := CHASSIS
uc_ip_mcast    := IP_MCAST
uc_ipv6        := IPV6
uc_secure_mgmt := SECURE_MGMT
uc_qos         := QOS
uc_routing     := ROUTING
uc_security    := SECURITY
uc_switching   := SWITCHING
uc_metro       := METRO
uc_wireless    := WIRELESS

# catch all for customer packages
lc_$(L7_CUSTOMER) := $(L7_CUSTOMER)


# Derive the MIB-related packages from the overall package build list.
#
mib_bldlist :=  $(L7_CUSTOMER) $(sort $(filter $(mib_pkgs), $(PKG_BLDLIST)))


# The following are updated by per-package definitions from the included .cfg files.
#
PKG_DEFS                                :=
PKG_PASS_2_MIB_COMP_FLAGS               :=
PKG_PASS_2_MIB_COMP_FLAGS_EXCLUDES      :=
PKG_MIBS_EXCLUDE                        :=
PKG_MIBS_SMILINT_EXCLUDE                :=
PKG_SRCS_SUBDIRS                        :=
PKG_SRCS_EXCLUDE                        :=
PKG_SRCINCPATHS                         :=

# Establish the base directory to be used by included package .cfg files.
#
BASE_DIR := $(src_snmp_pkgs)

# Include MIB config file for each package in the build.
#
-include $(foreach pkgid, $(mib_bldlist), \
		$(FP_ROOT)/$(src_snmp_pkgs)/$(lc_$(pkgid))/$(lc_$(pkgid)).cfg)

# Derive the following on behalf of all packages.
#

PKG_MIBS := $(foreach pkgid, $(mib_bldlist), $(src_snmp_pkgs)/$(lc_$(pkgid))/mibs)

PKG_SRCS := $(foreach pkgid, $(mib_bldlist), $(src_snmp_pkgs)/$(lc_$(pkgid)))
PKG_SRCS := $(sort $(PKG_SRCS) $(PKG_SRCS_SUBDIRS))

mastersrc_pkgs := \
	$(PKG_SRCS) \
	$(PKG_MIBS)

mastersrc_file_exclude_pkgs := \
	$(PKG_SRCS_EXCLUDE) \
	$(PKG_MIBS_EXCLUDE)

# List of package .def files to be built.
#
pkg_mib_mx_files   := $(notdir $(foreach dir, $(PKG_MIBS), $(wildcard $(FP_BASE)/$(dir)/*.mx)))
PKG_MIB_MY_FILES   := $(sort $(strip $(patsubst %.mx, %.my, $(filter-out $(PKG_MIBS_EXCLUDE), $(pkg_mib_mx_files)))))
PKG_MIB_DEF_FILES  := $(patsubst %.my, %.def, $(PKG_MIB_MY_FILES))

PKG_MIB_SMILINT_FILES := $(PKG_MIB_MY_FILES) $(addprefix !,$(PKG_MIBS_SMILINT_EXCLUDE))


# List of package .o files to be built.
#
pkg_excl_files  := $(addprefix $(FP_BASE)/, $(PKG_SRCS_EXCLUDE))
pkg_src_c_files := $(foreach dir, $(PKG_SRCS), $(wildcard $(FP_BASE)/$(dir)/*.c))
PKG_OBJ_FILES   := $(sort $(strip $(patsubst %.c, %.$(OBJEXT), $(notdir $(filter-out $(pkg_excl_files), $(pkg_src_c_files))))))

# List of mib trees to include in sourcecode generation.
#
PKG_PASS_2_MIB_COMP_FLAGS := $(sort $(filter-out $(PKG_PASS_2_MIB_COMP_FLAGS_EXCLUDES), $(PKG_PASS_2_MIB_COMP_FLAGS)))

# Specify the snmp/util files.
#
mastersrc_util := \
	$(src_snmp_util)/base/traps \
	$(src_snmp_util)/base/util \
	$(src_snmp_util)/switching

mastersrc_file_exclude_util := \
	$(src_snmp_util)/switching/trap_api_inventory.c 
   
     
ifneq (1,$(BLD_L7_COMPONENTS_OSPF))
ifneq (1,$(BLD_L7_COMPONENTS_VRRP))
mastersrc_file_exclude_util += \
	$(src_snmp_util)/routing/trap_api_routing.c 
endif
endif

util_pkgs := $(L7_CUSTOMER) $(filter bgp ip_mcast qos routing, $(PKG_BLDLIST))

ifneq (,$(util_pkgs))
  mastersrc_util += \
	$(foreach pkgid, $(util_pkgs), $(src_snmp_util)/$(pkgid))
endif


# Pull everything together from each section definition above.
#

# Other .def files referenced by snmpd/unix.
#

CORE_MIB_DEF_FILES := \
	coex.def \
	mib-2.def \
	smi.def \
	snmp-res.def \
	srAgentInfo.def \
	usm-tran.def \
	v2-mib.def \
	v2-smi.def \
	v2-tc.def \
	v2-tm.def \
	v3-acm.def \
	v3-arch.def \
	v3-mpd.def \
	v3-notif.def \
	v3-proxy.def \
	v3-tgt.def \
	v3-usm.def

EXTEND_MIB_DEF_FILES = \
	$(PKG_MIB_DEF_FILES) \
	mib-2.def \
	v2-mib.def \
	v2-smi.def \
	v2-tc.def


# Master list of source paths to be built into this package library.
#  - All entries must be specified relative to top-of-view $(FP_ROOT).
#  - Defines all source locations to be referenced by the package-level makefile.
#
# Note: The various 'mibs' paths here so that they get added to both
#       the C_INCLUDE_PATH and VPATH by make.magic.pkg.
#
MASTERSRC += \
	$(src_snmp_src)/engine \
	$(src_snmp_src)/devkit \
	$(src_snmp_src)/devkit/$(SR_MIB_LAYOUT) \
	$(src_snmp_src)/mibs/common \
	$(mastersrc_mibs_coex) \
	$(mastersrc_mibs_snmpv3) \
	$(src_snmp_src)/snmpd/lib \
	$(mastersrc_unix) \
	$(mastersrc_pkgs) \
	$(mastersrc_util)

# List here individual source files to be selectively EXCLUDED from the build.
#
MASTERSRC_FILE_EXCLUDE += \
	$(src_snmp_src)/engine/aes.c \
	$(src_snmp_src)/engine/sr_aes.c \
	$(src_snmp_src)/devkit/$(SR_IO_FILE_EXCL) \
	$(src_snmp_src)/devkit/md5.c \
	$(src_snmp_src)/devkit/md5key.c \
	$(src_snmp_src)/devkit/sha.c \
	$(src_snmp_src)/devkit/shakey.c \
	$(src_snmp_src)/devkit/sr_dmn.c \
	$(src_snmp_src)/devkit/sr_sb.c \
	$(src_snmp_src)/devkit/sr_snb.c \
	$(mastersrc_file_exclude_mibs_coex) \
	$(mastersrc_file_exclude_mibs_snmpv3) \
	$(mastersrc_file_exclude_unix) \
	$(mastersrc_file_exclude_pkgs) \
	$(mastersrc_file_exclude_util)
#	$(src_snmp_src)/devkit/nrmvblst.c \


# List here individual source include directories owned by this package (without the -I).
#
MASTERINC += \
	$(src_snmpd)/include \
	$(src_snmp_src)/include


# Additional source header file search paths (without the -I).
#
SRCINCPATHS += \
	$(src_snmpd)/mibs \
	$(src_snmpd)/shared \
	$(sort $(PKG_SRCINCPATHS)) \
	$(OUT_$(PKGID))

ifeq (1,$(BLD_L7_UI_HAS_SNMP))
SRCINCPATHS += src/application/base/rmon
endif

# Additional compiler flags.
#
CFLAGSEXTRA += \
	$(SNMP_CFLAGS) \
	$(COPTIONS)


#
# List vxworks-specific adjustments.
#
ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
  MASTERSRC_FILE_EXCLUDE += \
	$(src_snmp_src)/devkit/sr_dmn.c
endif


# Define the primary build targets for SNMP.
#

MIBOUT := \
	snmpoid.c

EXTEND_MIBOUT := \
	v_$(EXTEND_BASE).stb \
	k_$(EXTEND_BASE).stb
