# $Id: Makefile.vxworks-dni8541,v 1.1 2011/04/18 17:10:59 mruas Exp $
# $Copyright: (c) 2005 Broadcom Corp.
# All Rights Reserved.$
#
# Makefile for MPC8548 host running VxWorks

include ${SDK}/make/Makefile.vxworks-common

# WIND_BASE and WIND_HOST_TYPE must be modified according to your
# installed location.  The environment variables are ignored intentionally.

ifndef VX_VERSION
VX_VERSION = 65
endif


ifeq (${VX_VERSION},65)
WORKBENCH_VERSION = workbench-2.6
VXWORKS_VERSION = 6.5
GNU_COMPILER_VERSION = 3.4.4
DIAB_COMPILER_VERSION = 5.5.1.0

ifeq (${HOSTTYPE},sun4)
WIND_HOST_TYPE = sun4-solaris2
WIND_HOME = /tools/windriver/vxworks/$(VXWORKS_VERSION)/SunOS
WIND_COMPILER_HOST = SUNS
else
WIND_HOST_TYPE = x86-linux2
WIND_HOME = /tools/windriver/vxworks/$(VXWORKS_VERSION)/Linux
#WIND_HOME = /projects/ntsw-sw/home/aung/$(VXWORKS_VERSION)/Linux
WIND_COMPILER_HOST = LINUX386 
endif

WIND_GNU_PATH = ${WIND_HOME}/gnu/${GNU_COMPILER_VERSION}-vxworks-${VXWORKS_VERSION}
WIND_DIAB_PATH = ${WIND_HOME)/diab/${DIAB_COMPILER_VERSION}
WIND_BASE = ${WIND_HOME}/vxworks-${VXWORKS_VERSION}

CPU = PPC32
CPU_VARIANT   = _ppc85XX
TOOL = sfgnu
#TOOL = sfdiab
else
  WIND_HOST_TYPE = x86-linux
  CPU = PPC85XX
  TOOL = gnu
endif

VX_SRC = ${FP_ROOT}/bsp/cpu/dni8541/vxworks/mpc85xx

VX_SRC_ALL = ${VX_SRC}/all

# Extra libraries for this platform
COND_LIB_BSP = 

# Configuration Flags
CFGFLAGS += -DMPC8548 -DBCM_PLATFORM_STRING=\"DNI_MPC8541\"

# fast pci access
CFGFLAGS+= -DSOC_CM_MEMORY_BASE=bcm_bde_soc_cm_memory_base \
-DEXTERN_SOC_CM_MEMORY_BASE=bcm_bde_soc_cm_memory_base \
-DSOC_CM_MEMORY_OFFSET=0x00010000 -DVXWORKS -DPCI_MAX_DEV=24

ifeq (${VX_VERSION},65)
toolbase = $(WIND_GNU_PATH)/$(WIND_HOST_TYPE)/bin/
toolbase_alt = $(WIND_HOME)/$(WORKBENCH_VERSION)/$(WIND_HOST_TYPE)/bin/
else
toolbase = $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin/
toolbase_alt = $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin/
endif
CC 	= $(toolbase)ccppc
CPP	= $(toolbase)cppppc
CXX 	= $(toolbase)g++ppc
RANLIB 	= $(toolbase)ranlibppc
AR 	= $(toolbase)arppc
LD 	= $(toolbase)ldppc
NM 	= $(toolbase_alt)nmppc
SIZE 	= $(toolbase_alt)sizeppc
STRIP	= $(toolbase_alt)stripppc
OBJCOPY = $(toolbase_alt)objcopyppc

export WIND_TOOLS = $(WIND_HOME)/$(WORKBENCH_VERSION)
export WIND_LIC_PROXY = $(WIND_HOME)/setup/$(WIND_HOST_TYPE)/bin/
export WRSD_LICENSE_FILE = $(WIND_HOME)/license/

OPTFLAGS_DEFAULT = -O2
MFLAGS = $(OPTFLAGS) -DCPU=$(CPU) -Wno-sign-compare
ARFLAGS = -rc

# TARGETTYPE Defines: This defines the type of system you are compiling
# the driver for; there are several values allowed. New values can be created
# by porting the routines (system.c) to your platform and adding
# the define in this Makefile.

TARGETTYPE = LVL7_DNI8541

# OSType Defines: This defines the type of RTOS or microkernel which you
# are compiling the SAL (and its associated driver) for. New platforms
# can be created by porting the routines (system.c) to your platform and
# adding the define in this Makefile.

OSTYPE = VXWORKS

INCS += -I$(VX_SRC) -I${VX_SRC_ALL} -I$(WIND_BASE)/target/h
INCS += -I$(WIND_BASE)/target/h/wrn/coreip 
INCS += -I$(WIND_BASE)/target/h/wrn/coreip/net 

ifeq (${VX_VERSION},65)
# Includes path to new network stack component.
INCS += -I$(WIND_HOME)/components/ip_net2-6.5
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipnet2/src
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipnet2/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipnet2/config
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipcom/port/vxworks/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipcom/port/vxworks/config
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipcom/include
INCS += -I$(WIND_HOME)/components/ip_net2-6.5/ipcom/config
endif

LIBS = 

#
# STD_{C|CPP|CXX}FLAGS - Standard flags used by ALL compilations
# BCM_{C|CPP|CXX}FLAGS - Flags used for Broadcom source files
# OPT_{C|CPP|CXX}FLAGS - Defined in local make files BEFORE inclusion of 
#			 this Makefile, to define local "Extra" flags.
#
# We include -DTRUE=1 to fix a Tornado 1 problem where stdarg macros are
# defined incorrectly if TRUE is not defined ahead of including stdarg.h.
# NOTE: Extra -I${INCDIR} puts $SDK/include before system incs, for assert.h
#
ifeq (${VX_VERSION},65)
STD_CFLAGS = -fno-builtin -msoft-float -nostdlib $(MFLAGS) \
	-I${INCDIR} ${INCS} -D${TARGETTYPE} -D${OSTYPE} \
	-DVX_VERSION=${VX_VERSION} -DBROADCOM_BSP \
	${CFGFLAGS} -DTRUE=1 -DBE_HOST=1 -DCOMPILER_OVERRIDE_NO_DOUBLE \
        -DVXWORKS_NETWORK_STACK_6_5 
# -DVXWORKS_NETWORK_STACK_FIXME_SHOW
else
BCM_CFLAGS   += -Wno-sign-compare -Wno-unused
STD_CFLAGS = -fno-builtin -msoft-float -nostdlib $(MFLAGS) \
	-I${INCDIR} ${INCS} -D${TARGETTYPE} -D${OSTYPE} \
	-DVX_VERSION=${VX_VERSION} -DBROADCOM_BSP \
	${CFGFLAGS} -DTRUE=1 -DBE_HOST=1 -DCOMPILER_OVERRIDE_NO_DOUBLE
endif

STD_CPPFLAGS = ${STD_CFLAGS}
STD_CXXFLAGS = ${STD_CFLAGS}
