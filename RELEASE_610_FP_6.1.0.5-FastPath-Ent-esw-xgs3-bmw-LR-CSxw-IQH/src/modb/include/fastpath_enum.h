/*********************************************************************
*
* (C) Copyright Broadcom Corporation 2000-2007
*
**********************************************************************
*
* @filename app_enum.h
*
* @purpose
*
* @component object handlers
*
* @comments
*
* @create 04/17/2007
*
* @author Rama Sasthri, Kristipati
* @end
*
**********************************************************************/

/*! \file */

#ifndef FASTPATH_ENUM_H
#define FASTPATH_ENUM_H

#include "commdefs.h"
#include "ipv6_commdefs.h"
#include "log.h"
#include "usmdb_common.h"
#include "usmdb_unitmgr_api.h"
#ifdef L7_WIRELESS_PACKAGE
#include "wireless_exports.h"
#include "wireless_commdefs.h"
#endif /* L7_WIRELESS_PACKAGE */

#ifdef L7_DIFFSERV_PACKAGE
#include "usmdb_mib_diffserv_private_api.h"
#endif /* L7_DIFFSERV_PACKAGE */

#ifdef  L7_CAPTIVE_PORTAL_PACKAGE
#include "captive_portal_commdefs.h"
#include "captive_portal_defaultconfig.h"
#endif

#include "dot1s_exports.h"
#include "acl_exports.h"
#include "dhcps_exports.h"
#include "sntp_exports.h"
#include "radius_exports.h"
#include "user_manager_exports.h"
#include "snooping_exports.h"
#include "macal_exports.h"
#include "macal_api.h"
#include "timezone_exports.h"
#include "user_manager_exports.h"
#include "garp_exports.h"
#include "filter_exports.h"
#include "boxs_api.h"

#ifdef L7_DOT3AH_PACKAGE
#include "dot3ah_exports.h"
#endif

#ifdef L7_DOT1AG_PACKAGE
#include "dot1ag_exports.h"
#endif
/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */
typedef enum
{
  L7_VLAN_VIEW_EXCLUDE=10,
  L7_VLAN_VIEW_UNTAGGED,
  L7_VLAN_VIEW_TAGGED,
}vlanTagInc_t;

typedef enum
{
  L7_MST_OPERATION_NONE=20,
  L7_MST_OPERATION_CREATE,
  L7_MST_OPERATION_DELETE
}mstOperation_t;

typedef enum
{
  L7_MST_VLAN_INCLUDE=30,
  L7_MST_VLAN_EXCLUDE
}mstVlanInc_t;

typedef enum
{
  L7_GENERIC_OPTION_NONE=10,
  L7_GENERIC_OPTION_ADD,
  L7_GENERIC_OPTION_REMOVE
}noneAddRemove_t;

/* This enum should be in sync with lldpXMedDeviceClass_t 
 * in lldp_api.h
 */
typedef enum
{
  L7_LLDP_DEVICE_CLASS_NOTDEFINED = 0,
  L7_LLDP_DEVICE_CLASS_ENDPOINT1,
  L7_LLDP_DEVICE_CLASS_ENDPOINT2,
  L7_LLDP_DEVICE_CLASS_ENDPOINT3,
  L7_LLDP_DEVICE_CLASS_NETWORKCONNECTIVITY
} LLDPXMedDeviceClass_t;
typedef enum {
  L7_LLDP_IANA_ADDR_FAMILY_NUMBER_RESERVED = 0,
  L7_LLDP_IANA_ADDR_FAMILY_NUMBER_IPV4 = 1,
  L7_LLDP_IANA_ADDR_FAMILY_NUMBER_IPV6 = 2,
  L7_LLDP_IANA_ADDR_FAMILY_NUMBER_802 = 6
} LLDPIANAAddrFamilyNumber_t;
typedef enum
{
  UNKNOWN_POLICYAPPTYPE =0,
  VOICE_POLICYAPPTYPE,
  VOICESIGNALLING_POLICYAPPTYPE,
  GUESTVOICE_POLICYAPPTYPE,
  GUESTVOICESIGNALLING_POLICYAPPTYPE,
  SOFTPHONEVOICE_POLICYAPPTYPE,
  VIDEOCONFERENCING_POLICYAPPTYPE,
  STREAMINGVIDEO_POLICYAPPTYPE,
  VIDEOSIGNALLING_POLICYAPPTYPE
}LLDPXMedPolicyAppTypeValue_t;

typedef enum
{
  L7_UNKNOWN_LOCSUBTYPE = 0,
  L7_COORDINATEBASED_LOCSUBTYPE,
  L7_CIVICADDRESS_LOCSUBTYPE,
  L7_ELIN_LOCSUBTYPE
}LLDPXMedLocationSubtype_t;

typedef enum
{
  UNKNOWN_POE_DEVICE = 1,
  PSE_POE_DEVICE,
  PD_POE_DEVICE,
  NONE_POE_DEVICE
}LLDPXMedPoeDeviceType_t;

typedef enum
{
  UNKNOWN_POE_PRIORITY = 1,
  CRITICAL_POE_PRIORITY,
  HIGH_POE_PRIORITY,
  LOW_POE_PRIORITY
}LLDPXMedPoePowerPriority_t;

typedef enum
{
  UNKNOWN_POE_PSE_SRC = 1,
  PRIMARY_POE_PSE_SRC,
  BACKUP_POE_PSE_SRC
}LLDPXMedPsePowerSource_t;

typedef enum
{
  UNKNOWN_POE_PD_SRC = 1,
  FROMPSE_POE_PD_SRC,
  LOCAL_POE_PD_SRC,
  LOCAL_AND_PSE_POE_PD_SRC
}LLDPXMedPdPowerSource_t;


typedef enum
{
 AF_INET =1,
 AF6_INET
}snoopingProtocol_t;
 

typedef enum
{
 L7_IPv4 =1,
 L7_IPv6
}L7_L3PROTOCOL_t;
 
typedef enum
{
 L7_DOT1X_AAA_RADIUSREJECT=0,
 L7_DOT1X_AAA_REJECT, 
 L7_DOT1X_AAA_LOCAL
}AuthList_t; 

#define  L7_SNMP_STATUS_VALID 1
#define  L7_SNMP_STATUS_CREATE_REQUEST 2
#define  L7_SNMP_STATUS_UNDER_CREATION 3
#define  L7_SNMP_STATUS_INVALID 4
#define  L7_MATCH_RMON_EXACTGET  1

typedef enum
{
  L7_RMON_ROW_STATUS_VALID = 1,
  L7_RMON_ROW_STATUS_CREATE_REQUEST,
  L7_RMON_ROW_STATUS_UNDER_CREATION,
  L7_RMON_ROW_STATUS_INVALID
}rmonRowStatus_t;

typedef enum
{
 L7_TRUE1FALSE2_TRUE =1,   
 L7_TRUE1FALSE2_FALSE =2   
}True1False2_t;

typedef enum
{
 L7_ENABLE1DISABLE2_TRUE =1,   
 L7_ENABLE1DISABLE2_FALSE =2   
}Enable1Disable2_t;

typedef enum
{
 L7_XUI_CLEAR= 1 
}clear_t;

typedef enum
{
 L7_SSL_PROTO_SSL30 = 1,
 L7_SSL_PROTO_TLS10 =2,
 L7_SSL_PROTO_BOTH =3,
 L7_SSL_PROTO_NONE =4
}L7_SSL_PROTO_LEVEL_t;


typedef enum
{
 L7_SSL_NOOP = 1,
 L7_SSL_GENERATE = 2,
 L7_SSL_DELETE = 3
}L7_SSL_CERTIFICATE_CTRL_t;

typedef enum
{
 L7_SSH_PROTO_SSH10 = 1,
 L7_SSH_PROTO_SSH20 = 2,
 L7_SSH_PROTO_BOTH = 3
}L7_SSH_PROTO_LEVEL_t;

typedef enum
{
 L7_SSH_KEY_DSA = 1,
 L7_SSH_KEY_RSA = 2,
 L7_SSH_KEY_BOTH = 3,
 L7_SSH_KEY_NONE = 4
}L7_SSH_KEY_TYPE_t;

typedef enum
{
 L7_SSH_NOOP = 1,
 L7_SSH_GENERATE = 2,
 L7_SSH_DELETE = 3
}L7_SSH_KEY_STATUS_t;
 
#define L7_UNIT_CURRENT 0

#define PORT_SPEED_ONE_MBPS               1000000
#define PORT_SPEED_TEN_MBPS               10000000
#define PORT_SPEED_HUNDRED_MBPS           100000000
#define PORT_SPEED_THOUSAND_MBPS          1000000000
#define PORT_SPEED_TENTHOUSAND_MBPS       10000000000
#define PORT_SPEED_IFSPEEDMAX_MBPS        4294967295UL

typedef enum
{
 L7_IF_ADMIN_STATUS_UP =1,
 L7_IF_ADMIN_STATUS_DOWN,
 L7_IF_ADMIN_STATUS_TESTING,
 L7_IF_ADMIN_STATUS_NOT_PRESENT=6
}ifOperStatus_t;

typedef enum
{
  L7_DOT1S_ROLEDISABLED = 0, /* DisabledPort */
  L7_DOT1S_ROLEROOT,         /* RootPort */
  L7_DOT1S_ROLEDESIGNATED,   /* DesignatedPort */
  L7_DOT1S_ROLEALTERNATE,    /* AlternatePort */
  L7_DOT1S_ROLEBACKUP,       /* BakupPort */
  L7_DOT1S_ROLEMASTER        /* MasterPort */

}L7_DOT1S_PORTROLE_t;

typedef enum {
  L7_XUI_STACK = 1,
  L7_XUI_ETHERNET,
  L7_XUI_NOT_APPLICABLE 
} L7_XUI_STACKMODE_t;

typedef enum {
  L7_XUI_LINK_UP = 1,
  L7_XUI_LINK_DOWN 
} L7_XUI_LINKSTATUS_t;

typedef enum {
  L7_XUI_StandbyStatus_NONE = 0,
  L7_XUI_StandbyStatus_CFG_STANDBY,
  L7_XUI_StandbyStatus_OPER_STANDBY
} L7_XUI_StandbyStatus_t;

typedef enum {
  L7_XUI_MgmtPref_DISABLED = 0,
  L7_XUI_MgmtPref_UNASSIGNED,
  L7_XUI_MgmtPref_ASSIGNED
} L7_XUI_MgmtPref_t;

typedef enum
{
  L7_XUI_UNITMGR_MGMTPREF_DISABLED = 0,
  L7_XUI_UNITMGR_MGMTPREF_1,
  L7_XUI_UNITMGR_MGMTPREF_2,
  L7_XUI_UNITMGR_MGMTPREF_3,
  L7_XUI_UNITMGR_MGMTPREF_4,
  L7_XUI_UNITMGR_MGMTPREF_5,
  L7_XUI_UNITMGR_MGMTPREF_6,
  L7_XUI_UNITMGR_MGMTPREF_7,
  L7_XUI_UNITMGR_MGMTPREF_8,
  L7_XUI_UNITMGR_MGMTPREF_9,
  L7_XUI_UNITMGR_MGMTPREF_10,
  L7_XUI_UNITMGR_MGMTPREF_11,
  L7_XUI_UNITMGR_MGMTPREF_12,
  L7_XUI_UNITMGR_MGMTPREF_13,
  L7_XUI_UNITMGR_MGMTPREF_14,
  L7_XUI_UNITMGR_MGMTPREF_15,
  L7_XUI_UNITMGR_MGMTPREF_UNASSIGNED
} L7_XUI_UnitMgrMgmtPrefValue_t;

typedef enum {
  L7_XUI_STACKMEMBER= 0,
  L7_XUI_MANAGEMENTUNIT,
  L7_XUI_STANDBY
}L7_XUI_UnitManagementStatus_t;

typedef enum {
  L7_XUI_CFG_STANDBY= 0,
  L7_XUI_OPR_STANDBY,
  L7_XUI_NONE_STANDBY
}L7_XUI_UnitManagementStandByStatus_t;

typedef enum {
  L7_XUI_IMGTYPE_IMAGE1 = 2,
  L7_XUI_IMGTYPE_IMAGE2
} L7_XUI_IMAGE_TYPE_t;

typedef enum {
  L7_XUI_MROUTE_FLAG_RPT = 0,
  L7_XUI_MROUTE_FLAG_SPT
} L7_XUI_MROUTE_FLAG_t;

typedef enum {
  L7_POE_XUI_PRIORITY_CRITICAL = 1,
  L7_POE_XUI_PRIORITY_HIGH,
  L7_POE_XUI_PRIORITY_LOW 
} L7_POE_XUI_PRIORITY_t;

typedef enum
{
  L7_USMDB_MIB_TRUTH_VALUE_TRUE = 1,
  L7_USMDB_MIB_TRUTH_VALUE_FALSE
} L7_USMDB_MIB_TRUTH_VALUE_t;

typedef enum {
   L7_POE_PORT_XUI_DETECTION_STATUS_DISABLED = 1,
   L7_POE_PORT_XUI_DETECTION_STATUS_SEARCHING,
   L7_POE_PORT_XUI_DETECTION_STATUS_DELIVERING_POWER,
   L7_POE_PORT_XUI_DETECTION_STATUS_TEST,
   L7_POE_PORT_XUI_DETECTION_STATUS_FAULT,
   L7_POE_PORT_XUI_DETECTION_STATUS_OTHER_FAULT
} L7_POE_PORT_XUI_DETECTION_STATUS_t;

typedef enum {
  L7_POE_PORT_XUI_POWER_CLASS0 = 1,
  L7_POE_PORT_XUI_POWER_CLASS1,
  L7_POE_PORT_XUI_POWER_CLASS2,
  L7_POE_PORT_XUI_POWER_CLASS3,
  L7_POE_PORT_XUI_POWER_CLASS4,
  L7_POE_PORT_XUI_POWER_UNKNOWN
} L7_POE_PORT_XUI_POWER_CLASS_t;

typedef enum {
  L7_POE_XUI_LIMIT_TYPE_DOT3AF =1,
  L7_POE_XUI_LIMIT_TYPE_USER,
  L7_POE_XUI_LIMIT_TYPE_NONE
} L7_POE_XUI_LIMIT_TYPE_t;

typedef enum {
  L7_POE_XUI_DETECTION_NONE = 0,
  L7_POE_XUI_DETECTION_LEGACY,
  L7_POE_XUI_DETECTION_4PT_DOT3AF,
  L7_POE_XUI_DETECTION_4PT_DOT3AF_LEG,
  L7_POE_XUI_DETECTION_2PT_DOT3AF,
  L7_POE_XUI_DETECTION_2PT_DOT3AF_LEG
} L7_POE_XUI_DETECTION_t;

typedef enum {
  L7_POE_XUI_PORT_RESET_NONE = 0,
  L7_POE_XUI_PORT_RESET_DONE
} L7_POE_XUI_PORT_RESET_t;

typedef enum {
  L7_POE_XUI_POWER_MGMT_NONE = 0,
  L7_POE_XUI_POWER_MGMT_DYNAMIC,
  L7_POE_XUI_POWER_MGMT_STATIC,
  L7_POE_XUI_POWER_MGMT_STATIC_PRI,
  L7_POE_XUI_POWER_MGMT_DYNAMIC_PRI
} L7_POE_XUI_POWER_MGMT_t;

typedef enum {
  L7_ARP_REMOVE_NONE = 0,
  L7_ARP_REMOVE_ALL_DYNAMIC,
  L7_ARP_REMOVE_ALL_DYN_AND_GW,
  L7_ARP_REMOVE_SPECIFIC_DYN_AND_GW,
  L7_ARP_REMOVE_SPECIFIC_STATIC_ARP
} L7_ARP_REMOVE_FROM_TABLE_t;

typedef enum
{
  L7_ARP_ENTRY_LOCAL = 1,
  L7_ARP_ENTRY_GATEWAY,
  L7_ARP_ENTRY_STATIC,
  L7_ARP_ENTRY_DYNAMIC
} L7_ARP_ENTRY_TYPE_t;

typedef enum
{
  L7_STORAGE_TYPE_OTHER = 1,
  L7_STORAGE_TYPE_VOLATILE,
  L7_STORAGE_TYPE_NONVOLATILE,
  L7_STORAGE_TYPE_PERMANENT,
  L7_STORAGE_TYPE_READONLY
} L7_StorageType_t;

typedef enum
{
L7_DIFFSERV_POLICY_TYPE_NONE = 0,
L7_DIFFSERV_POLICY_TYPE_IN,
L7_DIFFSERV_POLICY_TYPE_OUT,
L7_DIFFSERV_POLICY_TYPE_TOTAL
}diffServPolicyType_t;

typedef enum
{
L7_DIFFSERV_IF_DIRECTION_NONE =0,
L7_DIFFSERV_IF_DIRECTION_IN,
L7_DIFFSERV_IF_DIRECTION_OUT
}diffServIfDirection_t;

typedef enum
{
L7_DIFFSERV_IF_OPER_STATUS_UP = 1,
L7_DIFFSERV_IF_OPER_STATUS_DOWN
}diffServIfOperStatus_t;

typedef enum
{
L7_DIFFSERV_POLICY_ATTR_TYPE_NONE = 0,
L7_DIFFSERV_POLICY_ATTR_TYPE_ASSIGN_QUEUE,
L7_DIFFSERV_POLICY_ATTR_TYPE_BANDWIDTH,
L7_DIFFSERV_POLICY_ATTR_TYPE_DROP,
L7_DIFFSERV_POLICY_ATTR_TYPE_EXPEDITE,
L7_DIFFSERV_POLICY_ATTR_TYPE_MARK_COSVAL,
L7_DIFFSERV_POLICY_ATTR_TYPE_MARK_COS2VAL,
L7_DIFFSERV_POLICY_ATTR_TYPE_MARK_COSASCOS2,
L7_DIFFSERV_POLICY_ATTR_TYPE_MARK_IPDSCPVAL,
L7_DIFFSERV_POLICY_ATTR_TYPE_MARK_IPPRECEDENCEVAL,
L7_DIFFSERV_POLICY_ATTR_TYPE_MIRROR,
L7_DIFFSERV_POLICY_ATTR_TYPE_POLICE_SIMPLE,
L7_DIFFSERV_POLICY_ATTR_TYPE_POLICE_SINGLERATE,
L7_DIFFSERV_POLICY_ATTR_TYPE_POLICE_TWORATE,
L7_DIFFSERV_POLICY_ATTR_TYPE_RANDOMDROP,
L7_DIFFSERV_POLICY_ATTR_TYPE_REDIRECT,
L7_DIFFSERV_POLICY_ATTR_TYPE_SHAPE_AVERAGE,
L7_DIFFSERV_POLICY_ATTR_TYPE_SHAPE_PEAK,
}diffServPolicyAttrType_t;

typedef enum
{
L7_DIFFSERV_BW_UNITS_NONE=0,
L7_DIFFSERV_BW_UNITS_KBPS,
L7_DIFFSERV_BW_UNITS_PERCENT
}diffServBandWidthUnits_t;

typedef enum
{
L7_DIFFSERV_POLICE_ACT_NONE = 0,
L7_DIFFSERV_POLICE_ACT_DROP,
L7_DIFFSERV_POLICE_ACT_MARKCOS,
L7_DIFFSERV_POLICE_ACT_MARKCOS2,
L7_DIFFSERV_POLICT_ACT_MARKCOSASCOS2,
L7_DIFFSERV_POLICE_ACT_MARKDSCP,
L7_DIFFSERV_POLICE_ACT_MARKPREC,
L7_DIFFSERV_POLICE_ACT_SEND
}diffServPoliceAct_t;

typedef enum
{
L7_DIFFSERV_POLICE_COLOR_BLIND = 1,
L7_DIFFSERV_POLICE_COLOR_COS,
L7_DIFFSERV_POLICE_COLOR_COS2,
L7_DIFFSERV_POLICE_COLOR_IPDSCP,
L7_DIFFSERV_POLICE_COLOR_IPPREC,
L7_DIFFSERV_POLICE_COLOR_UNUSED
}diffServPoliceColor_t;

typedef enum
{
L7_DIFFSERV_CLASS_TYPE_NONE = 0,
L7_DIFFSERV_CLASS_TYPE_ALL,
L7_DIFFSERV_CLASS_TYPE_ANY,
L7_DIFFSERV_CLASS_TYPE_ACL
}diffServClassType_t;

typedef enum
{
L7_DIFFSERV_CLASS_ACLTYPE_NONE = 0,
L7_DIFFSERV_CLASS_ACLTYPE_IP,
L7_DIFFSERV_CLASS_ACLTYPE_MAC
}diffServACLType_t;

typedef enum
{
L7_DIFFSERV_CLASS_L3PROTOCOL_IPV4 = 1,
L7_DIFFSERV_CLASS_L3PROTOCOL_IPV6
}diffServClassL3Protocol_t;

typedef enum
{
L7_DIFFSERV_CLASS_RULE_TYPE_COS = 1,
L7_DIFFSERV_CLASS_RULE_TYPE_COS2,
L7_DIFFSERV_CLASS_RULE_TYPE_DSTIP,
L7_DIFFSERV_CLASS_RULE_TYPE_DSTIPV6,
L7_DIFFSERV_CLASS_RULE_TYPE_DSTL4PORT,
L7_DIFFSERV_CLASS_RULE_TYPE_DSTMAC,
L7_DIFFSERV_CLASS_RULE_TYPE_ETYPE,
L7_DIFFSERV_CLASS_RULE_TYPE_EVERY,
L7_DIFFSERV_CLASS_RULE_TYPE_FLOWLBLV6,
L7_DIFFSERV_CLASS_RULE_TYPE_IPDSCP,
L7_DIFFSERV_CLASS_RULE_TYPE_IPPRECEDENCE,
L7_DIFFSERV_CLASS_RULE_TYPE_IPTOS,
L7_DIFFSERV_CLASS_RULE_TYPE_PROTOCOL,
L7_DIFFSERV_CLASS_RULE_TYPE_REFCLASS,
L7_DIFFSERV_CLASS_RULE_TYPE_SRCIP,
L7_DIFFSERV_CLASS_RULE_TYPE_SRCIPV6,
L7_DIFFSERV_CLASS_RULE_TYPE_SRCL4PORT,
L7_DIFFSERV_CLASS_RULE_TYPE_SRCMAC,
L7_DIFFSERV_CLASS_RULE_TYPE_VLANID,
L7_DIFFSERV_CLASS_RULE_TYPE_VLANID2
}diffServClassRuleType_t;

typedef enum
{
L7_DIFFSERV_TRUTH_VALUE_TRUE=1,
L7_DIFFSERV_TRUTH_VALUE_FALSE=2
}diffServTruthVal_t;

typedef enum
{
L7_XUI_DIFFSERV_COLOR_BLIND,
L7_XUI_DIFFSERV_COLOR_AWARE
}diffServColorType_t;

typedef enum
{
  L7_STATE_UP=1,
  L7_STATE_DOWN=2
}StateUpDown_t;


typedef enum
{
  L7_IPv6ROUTETYPE_OTHER=1,
  L7_IPv6ROUTETYPE_DISCARD,
  L7_IPv6ROUTETYPE_LOCAL,
  L7_IPv6ROUTETYPE_REMOTE
}IPv6RouteType_t;

typedef enum
{
  L7_IPv6ROUTE_PROTOCOL_OTHER=1,
  L7_IPv6ROUTE_PROTOCOL_LOCAL,
  L7_IPv6ROUTE_PROTOCOL_NETMGMT,
  L7_IPv6ROUTE_PROTOCOL_NDISC,
  L7_IPv6ROUTE_PROTOCOL_RIP,
  L7_IPv6ROUTE_PROTOCOL_OSPF,
  L7_IPv6ROUTE_PROTOCOL_BGP,
  L7_IPv6ROUTE_PROTOCOL_IDRP,
  L7_IPv6ROUTE_PROTOCOL_IGRP
}IPv6RouteProtocol_t;

typedef enum
{
  L7_IPv6ADDRTYPE_STATELESS=1,
  L7_IPv6ADDRTYPE_STATEFULL,
  L7_IPv6ADDRTYPE_UNKNOWN
}IPv6AddrType_t;

typedef enum
{
  L7_IPv6ADDRSTATUS_PREFERRED=1,
  L7_IPv6ADDRSTATUS_DEPRECATED,
  L7_IPv6ADDRSTATUS_INVALID,
  L7_IPv6ADDRSTATUS_INACCESSIBLE,
  L7_IPv6ADDRSTATUS_UNKNOWN,
}IPv6AddrStatus_t;

typedef enum
{
  L7_IPv6NETTOMEDIATYPE_OTHER=1,
  L7_IPv6NETTOMEDIATYPE_DYNAMIC,
  L7_IPv6NETTOMEDIATYPE_STATIC,
  L7_IPv6NETTOMEDIATYPE_LOCAL
}IPv6NetToMediaType_t;

typedef enum
{
  L7_IPv6NETTOMEDIASTATE_REACHABLE=1,
  L7_IPv6NETTOMEDIASTATE_STALE,
  L7_IPv6NETTOMEDIASTATE_DELAY,
  L7_IPv6NETTOMEDIASTATE_PROBE,
  L7_IPv6NETTOMEDIASTATE_INVALID,
  L7_IPv6NETTOMEDIASTATE_UNKNOWN
}IPv6NetToMediaState_t;

typedef enum
{
  L7_IPv6NEIGHBOURSTATE_REACHABLE=1,
  L7_IPv6NEIGHBOURSTATE_STALE,
  L7_IPv6NEIGHBOURSTATE_DELAY,
  L7_IPv6NEIGHBOURSTATE_PROBE,
  L7_IPv6NEIGHBOURSTATE_INVALID,
  L7_IPv6NEIGHBOURSTATE_UNKNOWN
}IPv6NeighbourState_t;

typedef enum
{
  L7_IPv6FORWARDING_FORWARDING=1,
  L7_IPv6FORWARDING_NOTFORWARDING
}IPv6Forwarding_t;

typedef enum
{
  XUI_OSPF_INTRA_AREA=1,
  XUI_OSPF_INTER_AREA
}XUI_L7_OSPF_PATH_TYPE_t;

/* Redistribution route types*/
typedef enum
{
  XUI_REDIST_RT_LOCAL=1,
  XUI_REDIST_RT_STATIC,
  XUI_REDIST_RT_RIP,
  XUI_REDIST_RT_OSPF,
  XUI_REDIST_RT_BGP,
} XUI_L7_REDIST_RT_INDICES_t;
typedef enum
{
  L7_XUI_RTF_DEFAULT_ROUTE,
  L7_XUI_RTF_STATIC ,
  L7_XUI_RTF_REJECT
}l7_XUI_IPV6StaticRoutType_t; 

typedef enum
{
  XUI_OSPF_METRIC_EXT_TYPE1 = 1,
  XUI_OSPF_METRIC_EXT_TYPE2
} XUI_L7_OSPF_EXT_METRIC_TYPES_t;

typedef enum
{
  L7_XUI_OSPF_INTF_DOWN = 1,
  L7_XUI_OSPF_INTF_POINTTOPOINT = 4 
} XUI_L7_OSPF_VIR_INTF_STATE_t; 

typedef enum
{
  XUI_OSPF_AREA_IMPORT_EXT = 1,            /* Import and propagate T5 LSAs */
  XUI_OSPF_AREA_IMPORT_NO_EXT,             /* Do not import and propagate ext LSAs- make stub area*/
  XUI_OSPF_AREA_IMPORT_NSSA                /* Import and propagate T7 LSAs */
} XUI_L7_OSPF_AREA_EXT_ROUTING_t;

typedef enum
{
  XUI_OSPF_AREA_NO_SUMMARY = 1,            /* Do not originate and propagate summary LSAs */
  XUI_OSPF_AREA_SEND_SUMMARY               /* Originate and propagate summary LSAs */
} XUI_L7_OSPF_AREA_SUMMARY_t;

typedef enum
{
   XUI_OSPF_NSSA_TRANSLATOR_ALWAYS    = 1,
   XUI_OSPF_NSSA_TRANSLATOR_CANDIDATE = 2
} XUI_L7_OSPF_NSSA_TRANSLATOR_ROLE_t;

typedef enum
{
  XUI_OSPF_AREA_STUB_METRIC = 1,
  XUI_OSPF_AREA_STUB_COMPARABLE_COST,
  XUI_OSPF_AREA_STUB_NON_COMPARABLE_COST
} XUI_L7_OSPF_STUB_METRIC_TYPE_t;

typedef enum
{
  XUI_OSPF_AREA_AGGREGATE_LSDBTYPE_SUMMARYLINK = 3,
  XUI_OSPF_AREA_AGGREGATE_LSDBTYPE_NSSAEXTERNALLINK = 7
}XUI_L7_OSPF_AREA_AGGREGATE_LSDBTYPE_t;

typedef enum
{
   XUI_L7_OSPF_NSSA_TRANS_STATE_ENABLED  = 1,
   XUI_L7_OSPF_NSSA_TRANS_STATE_ELECTED  = 2,
   XUI_L7_OSPF_NSSA_TRANS_STATE_DISABLED = 3
} XUI_L7_OSPF_NSSA_TRANSLATOR_STATE_t;

typedef enum
{
  XUI_OSPF_AREA_AGGREGATE_EFFECT_ADVERTISEMATCHING = 1,
  XUI_OSPF_AREA_AGGREGATE_EFFECT_DONOT_ADVERTISEMATCHING

}XUI_L7_OSPF_AREA_AGGREGATE_STATUS_t;


typedef enum
{
  XUI_OSPF_INTF_TYPE_DEFAULT,
  XUI_OSPF_INTF_TYPE_BROADCAST,
  XUI_OSPF_INTF_TYPE_NBMA,
  XUI_OSPF_INTF_TYPE_PTP,
  XUI_OSPF_INTF_TYPE_VIRTUAL,
  XUI_OSPF_INTF_TYPE_POINTTOMULTIPOINT,
  XUI_OSPF_INTF_TYPE_LOOPBACK
} XUI_L7_OSPF_TYPE_t;

typedef enum
{
   XUI_OSPF_INTF_DOWN=1,
   XUI_OSPF_INTF_LOOPBACK,
   XUI_OSPF_INTF_WAITING,
   XUI_OSPF_INTF_POINTTOPOINT,
   XUI_OSPF_INTF_DESIGNATEDROUTER,
   XUI_OSPF_INTF_BACKUPDESIGNATEDROUTER,
   XUI_OSPF_INTF_OTHERDESIGNATEDROUTER
} XUI_L7_OSPF_INTF_STATE_t;

typedef enum
{
   XUI_OSPF_DOWN=1,
   XUI_OSPF_ATTEMPT,
   XUI_OSPF_INIT,
   XUI_OSPF_TWOWAY,
   XUI_OSPF_EXCHANGESTART,
   XUI_OSPF_EXCHANGE,
   XUI_OSPF_LOADING,
   XUI_OSPF_FULL
} XUI_L7_OSPF_STATE_t;

typedef enum
{
  XUI_TRAP_ALL,
  XUI_ERRORS_ALL,
  XUI_RX_BAD_PACKET,
  XUI_VIRT_IF_RX_BAD_PACKET,
  XUI_VIRT_IF_CONFIG_ERROR,
  XUI_IF_RX_ALL,
  XUI_IF_RX_PACKET,
  XUI_LSA_ALL,
  XUI_MAX_AGE_LSA,
  XUI_ORIGINATE_LSA,
  XUI_OVERFLOW_ALL,
  XUI_LS_DB_OVERFLOW,
  XUI_LS_DB_APPROACHING_OVERFLOW,
  XUI_RETRANSMIT_ALL,
  XUI_TX_RETRANSMIT,
  XUI_VIRT_IF_TX_RETRANSMIT,
  XUI_RTB_ALL,
  XUI_RTB_ENTRY_INFO,
  XUI_STATE_CHANGE_ALL,
  XUI_IF_STATE_CHANGE,
  XUI_NBR_STATE_CHANGE,
  XUI_VIRT_IF_STATE_CHANGE,
  XUI_VIRT_NBR_STATE_CHANGE
}XUI_L7_OSPFv3_TRAP_FLAGS_t;

typedef enum
{
L7_ETYPE_KEYID_NONE,
L7_ETYPE_KEYID_CUSTOM,
L7_ETYPE_KEYID_APPLETALK,
L7_ETYPE_KEYID_ARP,
L7_ETYPE_KEYID_IBMSNA,
L7_ETYPE_KEYID_IPV4,
L7_ETYPE_KEYID_IPV6,
L7_ETYPE_KEYID_IPX,
L7_ETYPE_KEYID_MPLSMCAST,
L7_ETYPE_KEYID_MPLSUCAST,
L7_ETYPE_KEYID_NETBIOS,
L7_ETYPE_KEYID_NOVELL,
L7_ETYPE_KEYID_PPPOE,
L7_ETYPE_KEYID_RARP
}diffServETypeKeyID_t;

typedef enum
{
L7_DIFFSERV_COLOR_MODE_BLIND=1,
L7_DIFFSERV_COLOR_MODE_AWARE_COS,
L7_DIFFSERV_COLOR_MODE_AWARE_COS2,
L7_DIFFSERV_COLOR_MODE_AWARE_IPDSCP,
L7_DIFFSERV_COLOR_MODE_AWARE_IPPREC,
L7_DIFFSERV_COLOR_MODE_AWARE_UNUSED
}diffServColorMode_t;

typedef enum
{
L7_DIFFSERV_ALG_DROP_TYPE_OTHER = 1,
L7_DIFFSERV_ALG_DROP_TYPE_TAIL_DROP,
L7_DIFFSERV_ALG_DROP_TYPE_HEAD_DROP,
L7_DIFFSERV_ALG_DROP_TYPE_RANDOM_DROP,
L7_DIFFSERV_ALG_DROP_TYPE_ALWAYS_DROP
}diffServAlgDropType_t;

typedef enum
{
L7_DIFFSERV_MAXRATE_LEVEL_MEAN = 1,
L7_DIFFSERV_MAXRATE_LEVEL_PEAK
}diffServMaxRateLevel_t;

typedef enum
{
 L7_DIFFSERV_COLOR_LEVEL_NONE = 0,
 L7_DIFFSERV_COLOR_LEVEL_CONFORM,
 L7_DIFFSERV_COLOR_LEVEL_EXCEED,
} diffServColorLevel_t;
typedef enum
{
  L7_XUI_MCAST_IANA_MROUTE_UNASSIGNED = 0,    /*   -- none of the following*/
  L7_XUI_MCAST_IANA_MROUTE_OTHER      = 1,    /*        -- none of the following*/
  L7_XUI_MCAST_IANA_MROUTE_LOCAL      = 2,    /*       -- e.g., manually configured */
  L7_XUI_MCAST_IANA_MROUTE_NETMGMT    = 3,    /*    -- set via net.mgmt protocol */
  L7_XUI_MCAST_IANA_MROUTE_DVMRP      = 4,
  L7_XUI_MCAST_IANA_MROUTE_MOSPF      = 5,
  L7_XUI_MCAST_IANA_MROUTE_PIM_SM_DM  = 6, /* -- PIMv1, both DM and SM */
  L7_XUI_MCAST_IANA_MROUTE_CBT        = 7,
  L7_XUI_MCAST_IANA_MROUTE_PIM_SM     = 8,  /* -- PIM-SM */
  L7_XUI_MCAST_IANA_MROUTE_PIM_DM     = 9,  /*  -- PIM-DM */
  L7_XUI_MCAST_IANA_MROUTE_IGMP       = 10,
  L7_XUI_MCAST_IANA_MROUTE_BMGP       = 11,
  L7_XUI_MCAST_IANA_MROUTE_MSDP       = 12,
  L7_XUI_MCAST_IANA_MROUTE_IGMP_PROXY = 13,
  L7_XUI_MCAST_IANA_MROUTE_MLD_PROXY  = 14,
  L7_XUI_MCAST_IANA_MROUTE_NO_PROTOCOL= 15
} L7_XUI_MCAST_IANA_PROTO_ID_t;

typedef enum
{
  L7_INET_ADDR_TYPE_IPV4 = 1,
  L7_INET_ADDR_TYPE_IPV6
} L7_InetAddrType_t;

typedef enum
{
  L7_XUI_MGMD_FILTER_MODE_NONE = 0,
  L7_XUI_MGMD_FILTER_MODE_INCLUDE = 1,
  L7_XUI_MGMD_FILTER_MODE_EXCLUDE = 2
} mgmdFilterMode_t;

typedef enum
{
  L7_XUI_MGMD_VERSION_1=1,
  L7_XUI_MGMD_VERSION_2,
  L7_XUI_MGMD_VERSION_3
} mgmdVersion_t;

typedef enum
{
  L7_XUI_PIM_MODE_NONE,
  L7_XUI_PIM_MODE_SSM,
  L7_XUI_PIM_MODE_ASM,
  L7_XUI_PIM_MODE_BIDIR,
  L7_XUI_PIM_MODE_DM,
  L7_XUI_PIM_MODE_OTHER
}L7_XUI_PIM_MODE_t;

typedef enum
{
  L7_XUI_CURRENT_PIM_MODE_DM =1,
  L7_XUI_CURRENT_PIM_MODE_SM
}L7_XUI_SUPPORTED_PIM_MODE_t;

typedef enum
{
  L7_XUI_INET_VER_UNKNOWN,
  L7_XUI_INET_VER_IPv4,
  L7_XUI_INET_VER_IPv6
}L7_XUI_INET_VER_t;

typedef enum
{
  L7_XUI_IANA_PROTO_OTHER,
  L7_XUI_IANA_PROTO_LOCAL,
  L7_XUI_IANA_PROTO_NETMGMT,
  L7_XUI_IANA_PROTO_ICMP,
  L7_XUI_IANA_PROTO_EGP,
  L7_XUI_IANA_PROTO_GGP,
  L7_XUI_IANA_PROTO_HELLP,
  L7_XUI_IANA_PROTO_RIP,
  L7_XUI_IANA_PROTO_ISIS,
  L7_XUI_IANA_PROTO_ESIS,
  L7_XUI_IANA_PROTO_CISCOLGRP,
  L7_XUI_IANA_PROTO_BBNSPFLGP,
  L7_XUI_IANA_PROTO_OSPF,
  L7_XUI_IANA_PROTO_BGP,
  L7_XUI_IANA_PROTO_IDPR,
  L7_XUI_IANA_PROTO_CISCOEIGRP,
  L7_XUI_IANA_PROTO_DVMRP
}L7_XUI_IANA_PROTO_ID_t;

typedef enum
{
  L7_XUI_PIMSGDRREG_NOINFO,
  L7_XUI_PIMSGDRREG_JOIN,
  L7_XUI_PIMSGDRREG_JOINPENDING,
  L7_XUI_PIMSGDRREG_PRUNE
}L7_XUI_PIMSGDRREG_STATE_t;


typedef enum
{
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_FIXED,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_CONFIGRP,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_CONFIGSSM,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_BSR,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_AUTORP,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_EMBEDDED,
  L7_XUI_PIMGROUPMAPPINGORIGINTYPE_OTHER
}L7_XUI_PIMGROUPMAPPINGORIGINTYPE_t;

typedef enum
{
  L7_XUI_PIMSGIASSERTSTATE_NOINFO,
  L7_XUI_PIMSGIASSERTSTATE_IAMASSERTWINNER,
  L7_XUI_PIMSGIASSERTSTATE_IAMASSERTLOSER
}L7_XUI_PIMSGIASSERTSTATE_t;


typedef enum
{
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_FIXED=1,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_CONFIGRP,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_CONFIGSSM,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_BSR,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_AUTORP,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_EMBEDDED,
  L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_OTHER,
}L7_XUI_PIM_GRP_MAPPING_ORIGIN_TYPE_t;

typedef enum
{
  L7_XUI_MGMD_HOST_NON_MEMBER=1,
  L7_XUI_MGMD_HOST_DELAY_MEMBER,
  L7_XUI_MGMD_HOST_IDLE_MEMBER
} L7_XUI_MGMD_HOST_STATE_t;

typedef enum
{
  L7_DIFFSERV_OCTETS = 1,
  L7_DIFFSERV_PACKETS
} diffServServiceStats_t;

typedef enum
{
 L7_ACL_SUMMARY_INTERFACE = 1,
 L7_ACL_SUMMARY_VLAN
}aclSummarySelector_t;

typedef enum
{
  XUI_AUTH_TYPE_NONE = 0,
  XUI_AUTH_TYPE_SIMPLE_PASSWORD,
  XUI_AUTH_TYPE_MD5
} XUI_L7_AUTH_TYPES_t;

typedef enum
{
  ROUTE_PREFERENCE_LOCAL=1,
  ROUTE_PREFERENCE_STATIC,
  ROUTE_PREFERENCE_MPLS,
  ROUTE_PREFERENCE_OSPF_INTRA_AREA,
  ROUTE_PREFERENCE_OSPF_INTER_AREA,
  ROUTE_PREFERENCE_OSPF_EXTERNAL,
  ROUTE_PREFERENCE_RIP,
  ROUTE_PREFERENCE_IBGP,  
  ROUTE_PREFERENCE_EBGP,
  ROUTE_PREFERENCE_6TO4
} L7_ROUTE_PREFERENCE_t;


typedef enum
{
 L7_PROTOCOL_IPv4 = 1,
 L7_PROTOCOL_IPv6
}protocolSelector_t;

typedef enum
{
  L7_DNS_TYPE_IPV4 = 1,
  L7_DNS_TYPE_CNAME = 5,
  L7_DNS_TYPE_PTR = 12,
  L7_DNS_TYPE_IPV6 = 28
} L7_DNS_CACHE_ENTRY_TYPE_t;

typedef enum
{
 L7_DHCP_ALL_CONFLICT = 1,
 L7_DHCP_SPECIFIC_CONFLICT
}dhcpServerConflictSelector_t;

typedef enum
{
 L7_DHCP_ALL_BINDINGS = 1,
 L7_DHCP_SPECIFIC_BINDING
}dhcpServerBindingSelector_t;

typedef enum
{
 L7_DHCP_ALL_DYNAMIC_BINDINGS = 1,
 L7_DHCP_SPECIFIC_DYNAMIC_BINDING,
 L7_DHCP_ALL_ADDRESS_CONFLICTS,
 L7_DHCP_SPECIFIC_ADDRESS_CONFLICT
}dhcpServerResetConfigSelector_t;

typedef enum
{
  L7_XUI_DVMRP_NEXTHOP_TYPE_LEAF = 1,
  L7_XUI_DVMRP_NEXTHOP_TYPE_BRANCH
} L7_XUI_DVMRP_NEXTHOP_TYPE_t;
typedef enum
{
  L7_XUI_DVMRP_NEIGHBOR_STATE_ONEWAY  = 1,
  L7_XUI_DVMRP_NEIGHBOR_STATE_ACTIVE,
  L7_XUI_DVMRP_NEIGHBOR_STATE_IGNORING,
  L7_XUI_DVMRP_NEIGHBOR_STATE_DOWN
} L7_XUI_DVMRP_NEIGHBOR_STATE_t;

typedef enum
{
 L7_XUI_FALSE=0,
 L7_XUI_TRUE 
}TrueFalse_t;

typedef enum
{ 
 L7_ROUTE_ENTRY_GLOBAL = 1,
 L7_ROUTE_ENTRY_LINK_LOCAL,
 L7_ROUTE_ENTRY_STATIC_REJECT
}L7_ROUTE_ENTRY_t;

typedef enum
{
 L7_ROUTE_TABLE_ALL_ROUTES = 1,
 L7_ROUTE_TABLE_BEST_ROUTES,
 L7_ROUTE_TABLE_CONFIGURED_ROUTES
}L7_ROUTE_TABLE_t;

typedef enum
{
 L7_XUI_PAGE_1 = 1,
 L7_XUI_PAGE_2
}xui_page_t;

typedef enum
{
 L7_XUI_SWITCH = 1,
 L7_XUI_PORT
}L7_XUI_STATS_INTF_TYPE_t;

typedef enum
{
 L7_YN_YES = 1,
 L7_YN_NO
}L7_YES_NO_t;

/* todo: do we need this? */

typedef enum
{

  XUI_VOICE_VLAN_CONFIG_DISABLE = 0,
  XUI_VOICE_VLAN_CONFIG_VLAN_ID,
  XUI_VOICE_VLAN_CONFIG_DOT1P,
  XUI_VOICE_VLAN_CONFIG_NONE,
  XUI_VOICE_VLAN_CONFIG_UNTAGGED

} L7_XUI_VOICE_VLAN_CONFIG_TYPE_t;
typedef enum
{
 L7_XUI_HIDE = 1
}xuiDisplay_t;

typedef enum
{
 L7_XUI_TAG802 = 1,
 L7_XUI_VMAN,
 L7_XUI_CUSTOM
}L7_DVLAN_ETHERTYPE_t;

typedef enum
{
 L7_XUI_DOT1AD_NONE = 0,
 L7_XUI_DOT1AD_ASSIGN_CVID = 1,
 L7_XUI_DOT1AD_REMARK_CVID,
 L7_XUI_DOT1AD_REMOVE_CTAG
}L7_XUI_DOT1AD_SUBSCR_CVID_ACTION_t; 

typedef enum
{
 L7_XUI_STOP=0,
 L7_XUI_START 
}StartStop_t;

typedef enum
{
 L7_XUI_IMAGE1 = 1,
 L7_XUI_IMAGE2
}L7_XUI_IMAGE_NAME_t;
typedef enum
{
  L7_ACL_TYPE_IP_STD=0,                       /* IP           */
  L7_ACL_TYPE_IP_EXT,                      /* MAC          */
  L7_ACL_TYPE_IP_NAME,                      /* IPv6         */
  L7_ACL_TYPE_IP_NONE 

}ip_acl_type_t;

typedef enum
{
   L7_ACL_NONE=0,
   L7_ACL_IPDSCP,
   L7_ACL_IPPREC,
   L7_ACL_IPTOS
}ACL_IP_Service_t;
   
#define L7_ACL_PROTOCOL_OTHER 0
#define L7_ACL_IPDSCP_OTHER 64
#define L7_ACL_NONE 0

#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF11                10
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF12                12
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF13                14
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF21                18
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF22                20
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF23                22
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF31                26
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF32                28
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF33                30
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF41                34
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF42                36
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_AF43                38
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_BE                  0
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS0                 0
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS1                 8
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS2                 16
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS3                 24
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS4                 32
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS5                 40
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS6                 48
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_CS7                 56
#define L7_USMDB_MIB_DIFFSERV_IP_DSCP_EF                  46

typedef enum
{
 L7_DOT3AH_REMOTE_LOOPBACK_STOP,
 L7_DOT3AH_REMOTE_LOOPBACK_START
}dot3ahRemoteLoopBack_t;

typedef enum
{
 L7_DOT3AH_UNSTABLE_STATE = L7_FALSE,
 L7_DOT3AH_STABLE_STATE = L7_TRUE
}dot3ah_state_t;


 
typedef enum
{
  L7_DOT3AH_MODE_UNI_DIR = L7_ENABLE,
  L7_DOT3AH_MODE_BI_DIR  = L7_DISABLE
}dot3ah_unidir_mode_t;

typedef enum
{
  L7_DOT3AH_LINK_MONITOR_OFF = L7_DISABLE,
  L7_DOT3AH_LINK_MONITOR_ON = L7_ENABLE
}dot3ah_link_monitor_t;

typedef enum
{
  TR069C_STATS_INFORM_COUNT_XUI = 0,
  TR069C_STATS_ACS_CONNECTION_REQUEST_COUNT_XUI = 1,
  TR069C_STATS_ACS_TOTAL_FAULTS_XUI = 2,
  TR069C_STATS_METHOD_UNSUPPORTED_FAULTS_XUI = 9000,
  TR069C_STATS_REQUEST_DENIED_FAULTS_XUI = 9001,
  TR069C_STATS_INTERNAL_ERROR_FAULTS_XUI = 9002,
  TR069C_STATS_INVALID_ARG_FAULTS_XUI = 9003,
  TR069C_STATS_RESOURCES_EXCEEDED_FAULTS_XUI = 9004,
  TR069C_STATS_INVALID_PARAM_NAME_FAULTS_XUI = 9005,
  TR069C_STATS_INVALID_PARAM_TYPE_FAULTS_XUI = 9006,
  TR069C_STATS_INVALID_PARAM_VALUE_FAULTS_XUI = 9007,
  TR069C_STATS_INVALID_WRITE_ATTEMPT_FAULTS_XUI = 9008,
  TR069C_STATS_REQ_REJECT_FAULTS_XUI = 9009,
  TR069C_STATS_DOWNLOAD_FAIL_FAULTS_XUI = 9010,
  TR069C_STATS_UPLOAD_FAIL_FAULTS_XUI = 9011,
  TR069C_STATS_FILE_TRANSFER_SERVER_AUTH_FAIL_FAULTS_XUI = 9012,
  TR069C_STATS_VENDOR_DEFAULT_FAULTS_XUI = 9013,
  TR069C_STATS_ALL_XUI
} TR069C_STATS_TYPE_XUI_t;

typedef enum
{
  L7_TR069_SSL_CERTS_NO,
  L7_TR069_SSL_CERTS_YES
}tr069sslCertStatus_t; 


typedef enum
{
  L7_TR069_PERIODIC_INFORM_MODE_DISABLE,
  L7_TR069_PERIODIC_INFORM_MODE_ENABLE
}periodicInformMode_t;

typedef enum
{
  L7_XUI_FILTER_ALL=0,
  L7_XUI_FILTER_LEARNED
}FDB_FILTER_t;

typedef enum
{ 
 L7_XUI_LEASETIME_INFINITE = 0,
 L7_XUI_LEASETIME_SPECIFIED
}dhcpPoolLeaseTime_t;

typedef enum
{
 L7_XUI_ROUTE_TYPE_ROUTRTF_DEFAULT_ROUTE = 1, 
 L7_XUI_ROUTE_TYPE_RTF_REJEC = 16,
 L7_XUI_ROUTE_TYPE_RTF_STATIC = 0
}staticRouteType_t;

typedef enum
{
 L7_XUI_DVLANTAG802Q_ETHERTYPE = 1,
 L7_XUI_DVLANTAGVMAN_ETHERTYPE = 2,
 L7_XUI_DVLANTAGCUSTOM_ETHERTYPE = 3
}dvlanEthertype_t;

typedef enum
{
  L7_XUI_ITEM_FAN,
  L7_XUI_ITEM_POWERSUPPLY,
  L7_XUI_ITEM_PTEMP_SENSOR,
  L7_XUI_ITEM_SFP,
  L7_XUI_ITEM_XFP
} L7_XUI_ITEM_t;

/* Item state definition - for power supplies and fans */
typedef enum
{
  L7_XUI_ITEMSTATE_NONE = 0,       /* N/A */
  L7_XUI_ITEMSTATE_OPERATIONAL,
  L7_XUI_ITEMSTATE_FAILED,
  L7_XUI_ITEMSTATE_NOT_PRESENT,
} L7_XUI_BOXS_ITEM_STATE_t;

typedef enum
{
  L7_XUI_TYPE_NONE = 0,        /* N/A */
  L7_XUI_TYPE_FIXED,
  L7_XUI_TYPE_REMOVABLE,
} L7_XUI_BOXS_ITEM_TYPE_t;

/* Item state definition - for thermal sensors */
typedef enum
{
  L7_XUI_TEMPSENSOR_STATE_NONE = 0,    /* N/A */
  L7_XUI_TEMPSENSOR_STATE_NORMAL,
  L7_XUI_TEMPSENSOR_STATE_WARNING,
  L7_XUI_TEMPSENSOR_STATE_CRITICAL,
  L7_XUI_TEMPSENSOR_STATE_SHUTDOWN,
  L7_XUI_TEMPSENSOR_STATE_NOTPRESENT,
  L7_XUI_TEMPSENSOR_STATE_NOTOPERATIONAL,
} L7_XUI_BOXS_TEMPSENSOR_STATE_t;

typedef enum
{
 L7_XUI_IPV6_PING_TYPE_GLOBAL = 1,
 L7_XUI_IPV6_PING_TYPE_LINK_LOCAL = 2,
}ipv6PingType_t;

typedef enum
{
 L7_XUI_SERVICE_PORT_ID = 4001,
 L7_XUI_NETWORK_PORT_ID = 4002
}networkPortType_t;

typedef enum
{
 L7_XUI_TUNNEL_SOURCE_ADDRESS = 1,
 L7_XUI_TUNNEL_SOURCE_INTERFACE = 2,
}tunnelSource_t;

typedef enum
{
  L7_XUI_GARP_JOIN_EMPTY = 1,
  L7_XUI_GARP_EMPTY,
  L7_XUI_GARP_LEAVE_EMPTY,
  L7_XUI_GARP_JOIN_IN,
  L7_XUI_GARP_LEAVE_IN,
  L7_XUI_GARP_LEAVEALL
} L7_XUI_GARP_STAT_COUNTER_TYPE_t;

typedef enum
{
  L7_XUI_GARP_INVALID_PROTOCOL_ID = 1,
  L7_XUI_GARP_INVALID_ATTR_TYPE,
  L7_XUI_GARP_INVALID_ATTR_VALUE,
  L7_XUI_GARP_INVALID_ATTR_LENGTH,
  L7_XUI_GARP_INVALID_ATTR_EVENT
} L7_XUI_GARP_ERROR_STAT_COUNTER_TYPE_t;

typedef enum
{
  L7_XUI_EVENT_NONE = 1,
  L7_XUI_EVENT_LOG,
  L7_XUI_EVENT_TRAP,
  L7_XUI_EVENT_LOGTRAP
}L7_XUI_EVENT_TYPE_t;

typedef enum 
{
  L7_XUI_STARTUP_ALARM_RISING = 1,
  L7_XUI_STARTUP_ALARM_FALLING,
  L7_XUI_STARTUP_ALARM_RISING_FALLING
}L7_XUI_STARTUP_ALARM_t;

typedef enum
{
  L7_XUI_SAMPLE_TYPE_ABSOLUTE = 1,
  L7_XUI_SAMPLE_TYPE_DELTA
}L7_XUI_SAMPLE_TYPE_t;

typedef enum
{
 L7_NONE=1
}onlyNone_t;

typedef enum
{
 L7_IPv6_ALL_ROUTES=1,
 L7_IPv6_BEST_ROUTES,
 L7_IPv6_CONF_ROUTES
}IPv6_POSS_ROUTES_t;

typedef enum
{
 L7_XUI_BROADCAST = 1,
 L7_XUI_MULTICAST = 2,
 L7_XUI_UNK_UNICAST = 3,
}StormControlMode_t;

typedef enum
{
  L7_XUI_LACP_TIMEOUT_LONG = 1,
  L7_XUI_LACP_TIMEOUT_SHORT
}L7_XUI_LACP_TIMEOUT_TYPE_t;

typedef enum
{
  L7_XUI_RUNNING_CONFIG = 1,
  L7_XUI_STARTUP_CONFIG,
  L7_XUI_BACKUP_CONFIG
}L7_XUI_CONFIGFILE_TYPE_t;


typedef enum
{
  L7_XUI_NO_SUMMER_TIME = 0,
  L7_XUI_SUMMER_TIME_RECURRING,
  L7_XUI_SUMMER_TIME_RECURRING_EU,
  L7_XUI_SUMMER_TIME_RECURRING_USA,
  L7_XUI_SUMMER_TIME_NON_RECURRING  
}L7_XUI_SUMMERTIME_STATUS_t;

/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */
typedef enum
{
  L7_SPEED_10 = 1,
  L7_SPEED_100,
  L7_SPEED_1000,
  L7_SPEED_2500,
  L7_SPEED_AUTO,
  L7_SPEED_UNKN
}L7_ONLY_SPEEDS_t;

typedef enum
{
  L7_DUPLEX_HALF =1,
  L7_DUPLEX_FULL,
  L7_DUPLEX_AUTO,
  L7_DUPLEX_UNKN
}L7_ONLY_DUPLEX_t;

typedef enum
{
  L7_XUI_USER_MGR_BLCKD_ACCESS_LEVEL = 0,
  L7_XUI_USER_MGR_GUEST_ACCESS_LEVEL = 1 ,
  L7_XUI_USER_MGR_ADMIN_ACCESS_LEVEL = 15
}L7_XUI_USER_ACCESS_LEVEL_t;


typedef enum
{
  L7_XUI_DOT1X_AUTH_METHOD_UNDEFINED = 0,
  L7_XUI_DOT1X_AUTH_METHOD_RADIUS,
  L7_XUI_DOT1X_AUTH_METHOD_RADIUSNONE,
  L7_XUI_DOT1X_AUTH_METHOD_NONE,
  L7_XUI_DOT1X_AUTH_METHOD_NONERADIUS
}L7_XUI_DOT1X_AUTH_METHOD_t;

/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */
/* TEMP */

typedef enum
{ 
 L7_MAC_FILTER_SOURCE = 1,
 L7_MAC_FILTER_DESTINATION
}L7_XUI_MAC_FILTER_PORT_t; 

typedef enum
{
  L7_XUI_MANUAL_ACTION_NONE = 0,
  L7_XUI_MANUAL_ACTION_START,
  L7_XUI_MANUAL_ACTION_APPLY,
  L7_XUI_MANUAL_ACTION_CLEAR
}L7_XUI_MANUAL_ACTION_t;

/* For SNMP Authentication Protocol types */
typedef enum
{
  L7_USM_USER_AUTH_PROTO_NONE = 0,
  L7_USM_USER_AUTH_PROTO_MD5,
  L7_USM_USER_AUTH_PROTO_SHA,
  L7_USM_USER_AUTH_PROTO_MD5_KEY,
  L7_USM_USER_AUTH_PROTO_SHA_KEY
}L7_XUI_USM_USER_AUTH_PROTO_t;

typedef enum
{
  L7_XUI_SNMP_COMMUNITY_READ_ONLY = 0,
  L7_XUI_SNMP_COMMUNITY_READ_WRITE,
  L7_XUI_SNMP_COMMUNITY_SUPER_USER
}L7_XUI_SNMP_COMMNUITY_ACCESSMODE_t;



#endif

