/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_BCM_OAM_ACCESS_H_
#define _SHR_SW_STATE_DPP_BCM_OAM_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

/* implemented by: sw_state_dpp_bcm_oam_alloc */
typedef int (*sw_state_dpp_bcm_oam_alloc_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_is_allocated */
typedef int (*sw_state_dpp_bcm_oam_is_allocated_cb)(
    int unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_oam_free */
typedef int (*sw_state_dpp_bcm_oam_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_verify */
typedef int (*sw_state_dpp_bcm_oam_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_acc_ref_counter_set */
typedef int (*sw_state_dpp_bcm_oam_acc_ref_counter_set_cb)(
    int unit, uint32 acc_ref_counter);

/* implemented by: sw_state_dpp_bcm_oam_acc_ref_counter_get */
typedef int (*sw_state_dpp_bcm_oam_acc_ref_counter_get_cb)(
    int unit, uint32 *acc_ref_counter);

/* implemented by: sw_state_dpp_bcm_oam_acc_ref_counter_verify */
typedef int (*sw_state_dpp_bcm_oam_acc_ref_counter_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_traps_ref_counter_set */
typedef int (*sw_state_dpp_bcm_oam_traps_ref_counter_set_cb)(
    int unit, int traps_ref_counter_idx_0, uint32 traps_ref_counter);

/* implemented by: sw_state_dpp_bcm_oam_traps_ref_counter_get */
typedef int (*sw_state_dpp_bcm_oam_traps_ref_counter_get_cb)(
    int unit, int traps_ref_counter_idx_0, uint32 *traps_ref_counter);

/* implemented by: sw_state_dpp_bcm_oam_traps_ref_counter_verify */
typedef int (*sw_state_dpp_bcm_oam_traps_ref_counter_verify_cb)(
    int unit, int traps_ref_counter_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_set */
typedef int (*sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_set_cb)(
    int unit, int y1731_opcode_to_intenal_opcode_map_idx_0, uint8 y1731_opcode_to_intenal_opcode_map);

/* implemented by: sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_get */
typedef int (*sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_get_cb)(
    int unit, int y1731_opcode_to_intenal_opcode_map_idx_0, uint8 *y1731_opcode_to_intenal_opcode_map);

/* implemented by: sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_verify */
typedef int (*sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_verify_cb)(
    int unit, int y1731_opcode_to_intenal_opcode_map_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_error_type_to_trap_id_map_set */
typedef int (*sw_state_dpp_bcm_oam_error_type_to_trap_id_map_set_cb)(
    int unit, int error_type_to_trap_id_map_idx_0, uint32 error_type_to_trap_id_map);

/* implemented by: sw_state_dpp_bcm_oam_error_type_to_trap_id_map_get */
typedef int (*sw_state_dpp_bcm_oam_error_type_to_trap_id_map_get_cb)(
    int unit, int error_type_to_trap_id_map_idx_0, uint32 *error_type_to_trap_id_map);

/* implemented by: sw_state_dpp_bcm_oam_error_type_to_trap_id_map_verify */
typedef int (*sw_state_dpp_bcm_oam_error_type_to_trap_id_map_verify_cb)(
    int unit, int error_type_to_trap_id_map_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_set */
typedef int (*sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_set_cb)(
    int unit, int oamp_rx_trap_code_ref_count_idx_0, uint32 oamp_rx_trap_code_ref_count);

/* implemented by: sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_get */
typedef int (*sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_get_cb)(
    int unit, int oamp_rx_trap_code_ref_count_idx_0, uint32 *oamp_rx_trap_code_ref_count);

/* implemented by: sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_verify */
typedef int (*sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_verify_cb)(
    int unit, int oamp_rx_trap_code_ref_count_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_set */
typedef int (*sw_state_dpp_bcm_oam_trap_info_set_cb)(
    int unit, CONST SOC_PPC_OAM_INIT_TRAP_INFO *trap_info);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_get */
typedef int (*sw_state_dpp_bcm_oam_trap_info_get_cb)(
    int unit, SOC_PPC_OAM_INIT_TRAP_INFO *trap_info);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_verify */
typedef int (*sw_state_dpp_bcm_oam_trap_info_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_trap_ids_set */
typedef int (*sw_state_dpp_bcm_oam_trap_info_trap_ids_set_cb)(
    int unit, int trap_ids_idx_0, uint32 trap_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_trap_ids_get */
typedef int (*sw_state_dpp_bcm_oam_trap_info_trap_ids_get_cb)(
    int unit, int trap_ids_idx_0, uint32 *trap_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_trap_ids_verify */
typedef int (*sw_state_dpp_bcm_oam_trap_info_trap_ids_verify_cb)(
    int unit, int trap_ids_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_set */
typedef int (*sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_set_cb)(
    int unit, int upmep_trap_ids_idx_0, uint32 upmep_trap_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_get */
typedef int (*sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_get_cb)(
    int unit, int upmep_trap_ids_idx_0, uint32 *upmep_trap_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_verify */
typedef int (*sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_verify_cb)(
    int unit, int upmep_trap_ids_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_mirror_ids_set */
typedef int (*sw_state_dpp_bcm_oam_trap_info_mirror_ids_set_cb)(
    int unit, int mirror_ids_idx_0, uint32 mirror_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_mirror_ids_get */
typedef int (*sw_state_dpp_bcm_oam_trap_info_mirror_ids_get_cb)(
    int unit, int mirror_ids_idx_0, uint32 *mirror_ids);

/* implemented by: sw_state_dpp_bcm_oam_trap_info_mirror_ids_verify */
typedef int (*sw_state_dpp_bcm_oam_trap_info_mirror_ids_verify_cb)(
    int unit, int mirror_ids_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_is_internally_allocated_trap_set */
typedef int (*sw_state_dpp_bcm_oam_is_internally_allocated_trap_set_cb)(
    int unit, int is_internally_allocated_trap_idx_0, uint8 is_internally_allocated_trap);

/* implemented by: sw_state_dpp_bcm_oam_is_internally_allocated_trap_get */
typedef int (*sw_state_dpp_bcm_oam_is_internally_allocated_trap_get_cb)(
    int unit, int is_internally_allocated_trap_idx_0, uint8 *is_internally_allocated_trap);

/* implemented by: sw_state_dpp_bcm_oam_is_internally_allocated_trap_verify */
typedef int (*sw_state_dpp_bcm_oam_is_internally_allocated_trap_verify_cb)(
    int unit, int is_internally_allocated_trap_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_set */
typedef int (*sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_set_cb)(
    int unit, int cpu_trap_code_to_mirror_profile_map_idx_0, uint8 cpu_trap_code_to_mirror_profile_map);

/* implemented by: sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_get */
typedef int (*sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_get_cb)(
    int unit, int cpu_trap_code_to_mirror_profile_map_idx_0, uint8 *cpu_trap_code_to_mirror_profile_map);

/* implemented by: sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_verify */
typedef int (*sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_verify_cb)(
    int unit, int cpu_trap_code_to_mirror_profile_map_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_alloc_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_is_allocated */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_is_allocated_cb)(
    int unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_set_cb)(
    int unit, uint32 max_nof_endp_lsts);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_get_cb)(
    int unit, uint32 *max_nof_endp_lsts);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_in_use_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_in_use_set_cb)(
    int unit, uint32 in_use);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_in_use_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_in_use_get_cb)(
    int unit, uint32 *in_use);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_in_use_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_in_use_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_set_cb)(
    int unit, int endp_lsts_array_idx_0, CONST endpoint_list_t *endp_lsts_array);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_get_cb)(
    int unit, int endp_lsts_array_idx_0, endpoint_list_t *endp_lsts_array);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_alloc_cb)(
    int unit, int endp_lsts_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_is_allocated */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_is_allocated_cb)(
    int unit, int endp_lsts_array_idx_0, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_free_cb)(
    int unit, int endp_lsts_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_alloc_cb)(
    int unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_verify_cb)(
    int unit, int endp_lsts_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_set_cb)(
    int unit, int endp_lsts_array_idx_0, ENDPOINT_LIST_MEMBER_PTR first_member);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_get_cb)(
    int unit, int endp_lsts_array_idx_0, ENDPOINT_LIST_MEMBER_PTR *first_member);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_verify_cb)(
    int unit, int endp_lsts_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_set_cb)(
    int unit, int endp_lsts_array_idx_0, uint32 size);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_get_cb)(
    int unit, int endp_lsts_array_idx_0, uint32 *size);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_verify_cb)(
    int unit, int endp_lsts_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_alloc_bitmap_cb)(
    int unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_set_cb)(
    int unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_clear */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_clear_cb)(
    int unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_get_cb)(
    int unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_read */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_read_cb)(
    int unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_write */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_write_cb)(
    int unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_and */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_and_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_or */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_or_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_xor */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_xor_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_remove */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_remove_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_negate */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_negate_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_clear */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_clear_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_set_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_null */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_null_cb)(
    int unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_test */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_test_cb)(
    int unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_eq */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_count */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_count_cb)(
    int unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_alloc_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_is_allocated */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_is_allocated_cb)(
    int unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_set_cb)(
    int unit, uint32 max_nof_endp_lst_ms);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_get_cb)(
    int unit, uint32 *max_nof_endp_lst_ms);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_in_use_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_in_use_set_cb)(
    int unit, uint32 in_use);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_in_use_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_in_use_get_cb)(
    int unit, uint32 *in_use);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_in_use_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_in_use_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_set_cb)(
    int unit, int endp_lst_ms_array_idx_0, CONST endpoint_list_member_t *endp_lst_ms_array);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_get_cb)(
    int unit, int endp_lst_ms_array_idx_0, endpoint_list_member_t *endp_lst_ms_array);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_alloc_cb)(
    int unit, int endp_lst_ms_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_is_allocated */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_is_allocated_cb)(
    int unit, int endp_lst_ms_array_idx_0, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_free_cb)(
    int unit, int endp_lst_ms_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_alloc */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_alloc_cb)(
    int unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_verify_cb)(
    int unit, int endp_lst_ms_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_set_cb)(
    int unit, int endp_lst_ms_array_idx_0, uint32 index);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_get_cb)(
    int unit, int endp_lst_ms_array_idx_0, uint32 *index);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_verify_cb)(
    int unit, int endp_lst_ms_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_set_cb)(
    int unit, int endp_lst_ms_array_idx_0, ENDPOINT_LIST_MEMBER_PTR next);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_get_cb)(
    int unit, int endp_lst_ms_array_idx_0, ENDPOINT_LIST_MEMBER_PTR *next);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_verify */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_verify_cb)(
    int unit, int endp_lst_ms_array_idx_0);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_alloc_bitmap_cb)(
    int unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_free */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_set_cb)(
    int unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_clear */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_clear_cb)(
    int unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_get */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_get_cb)(
    int unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_read */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_read_cb)(
    int unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_write */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_write_cb)(
    int unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_and */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_and_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_or */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_or_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_xor */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_xor_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_remove */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_remove_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_negate */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_negate_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_clear */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_clear_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_set */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_set_cb)(
    int unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_null */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_null_cb)(
    int unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_test */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_test_cb)(
    int unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_eq */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_count */
typedef int (*sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_count_cb)(
    int unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs_set_cb)(
    int unit, CONST bcm_dpp_sw_state_oam_hashs_t *oam_hashs);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs_get_cb)(
    int unit, bcm_dpp_sw_state_oam_hashs_t *oam_hashs);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_ma_index_to_name_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_ma_index_to_name_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_ma_to_mep_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_ma_to_mep_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_rmep_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_rmep_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_bfd_mep_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_bfd_mep_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_bfd_mep_to_rmep_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_bfd_mep_to_rmep_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_mep_to_ais_id);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_mep_to_ais_id);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_mep_sat_gtf_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_mep_sat_gtf_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_set */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_set_cb)(
    int unit, sw_state_htb_hash_table_t _bcm_dpp_oam_mep_sat_ctf_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_get */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_get_cb)(
    int unit, sw_state_htb_hash_table_t *_bcm_dpp_oam_mep_sat_ctf_info_db);

/* implemented by: sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_verify */
typedef int (*sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_int_pri_set */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_int_pri_set_cb)(
    int unit, int loopback_object_int_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_int_pri_get */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_int_pri_get_cb)(
    int unit, int *loopback_object_int_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_int_pri_verify */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_int_pri_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_pkt_pri_set */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_pkt_pri_set_cb)(
    int unit, uint8 loopback_object_pkt_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_pkt_pri_get */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_pkt_pri_get_cb)(
    int unit, uint8 *loopback_object_pkt_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_pkt_pri_verify */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_pkt_pri_verify_cb)(
    int unit);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_set */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_set_cb)(
    int unit, uint8 loopback_object_inner_pkt_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_get */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_get_cb)(
    int unit, uint8 *loopback_object_inner_pkt_pri);

/* implemented by: sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_verify */
typedef int (*sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_verify_cb)(
    int unit);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_dpp_bcm_oam_acc_ref_counter_cbs_s {
    sw_state_dpp_bcm_oam_acc_ref_counter_set_cb set;
    sw_state_dpp_bcm_oam_acc_ref_counter_get_cb get;
    sw_state_dpp_bcm_oam_acc_ref_counter_verify_cb verify;
} sw_state_dpp_bcm_oam_acc_ref_counter_cbs_t;

typedef struct sw_state_dpp_bcm_oam_traps_ref_counter_cbs_s {
    sw_state_dpp_bcm_oam_traps_ref_counter_set_cb set;
    sw_state_dpp_bcm_oam_traps_ref_counter_get_cb get;
    sw_state_dpp_bcm_oam_traps_ref_counter_verify_cb verify;
} sw_state_dpp_bcm_oam_traps_ref_counter_cbs_t;

typedef struct sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_cbs_s {
    sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_set_cb set;
    sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_get_cb get;
    sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_verify_cb verify;
} sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_cbs_t;

typedef struct sw_state_dpp_bcm_oam_error_type_to_trap_id_map_cbs_s {
    sw_state_dpp_bcm_oam_error_type_to_trap_id_map_set_cb set;
    sw_state_dpp_bcm_oam_error_type_to_trap_id_map_get_cb get;
    sw_state_dpp_bcm_oam_error_type_to_trap_id_map_verify_cb verify;
} sw_state_dpp_bcm_oam_error_type_to_trap_id_map_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_cbs_s {
    sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_set_cb set;
    sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_get_cb get;
    sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_verify_cb verify;
} sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_cbs_t;

typedef struct sw_state_dpp_bcm_oam_trap_info_trap_ids_cbs_s {
    sw_state_dpp_bcm_oam_trap_info_trap_ids_set_cb set;
    sw_state_dpp_bcm_oam_trap_info_trap_ids_get_cb get;
    sw_state_dpp_bcm_oam_trap_info_trap_ids_verify_cb verify;
} sw_state_dpp_bcm_oam_trap_info_trap_ids_cbs_t;

typedef struct sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_cbs_s {
    sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_set_cb set;
    sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_get_cb get;
    sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_verify_cb verify;
} sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_cbs_t;

typedef struct sw_state_dpp_bcm_oam_trap_info_mirror_ids_cbs_s {
    sw_state_dpp_bcm_oam_trap_info_mirror_ids_set_cb set;
    sw_state_dpp_bcm_oam_trap_info_mirror_ids_get_cb get;
    sw_state_dpp_bcm_oam_trap_info_mirror_ids_verify_cb verify;
} sw_state_dpp_bcm_oam_trap_info_mirror_ids_cbs_t;

typedef struct sw_state_dpp_bcm_oam_trap_info_cbs_s {
    sw_state_dpp_bcm_oam_trap_info_set_cb set;
    sw_state_dpp_bcm_oam_trap_info_get_cb get;
    sw_state_dpp_bcm_oam_trap_info_verify_cb verify;
    sw_state_dpp_bcm_oam_trap_info_trap_ids_cbs_t trap_ids;
    sw_state_dpp_bcm_oam_trap_info_upmep_trap_ids_cbs_t upmep_trap_ids;
    sw_state_dpp_bcm_oam_trap_info_mirror_ids_cbs_t mirror_ids;
} sw_state_dpp_bcm_oam_trap_info_cbs_t;

typedef struct sw_state_dpp_bcm_oam_is_internally_allocated_trap_cbs_s {
    sw_state_dpp_bcm_oam_is_internally_allocated_trap_set_cb set;
    sw_state_dpp_bcm_oam_is_internally_allocated_trap_get_cb get;
    sw_state_dpp_bcm_oam_is_internally_allocated_trap_verify_cb verify;
} sw_state_dpp_bcm_oam_is_internally_allocated_trap_cbs_t;

typedef struct sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_cbs_s {
    sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_set_cb set;
    sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_get_cb get;
    sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_verify_cb verify;
} sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_in_use_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_in_use_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_in_use_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_in_use_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_in_use_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_alloc_cb alloc;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_alloc_cb ptr_alloc;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_ptr_free_cb ptr_free;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_verify_cb verify;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_first_member_cbs_t first_member;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_size_cbs_t size;
} sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_set_cb bit_set;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_get_cb bit_get;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_alloc_cb alloc;
    sw_state_dpp_bcm_oam_endp_lst_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_oam_endp_lst_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_verify_cb verify;
    sw_state_dpp_bcm_oam_endp_lst_max_nof_endp_lsts_cbs_t max_nof_endp_lsts;
    sw_state_dpp_bcm_oam_endp_lst_in_use_cbs_t in_use;
    sw_state_dpp_bcm_oam_endp_lst_endp_lsts_array_cbs_t endp_lsts_array;
    sw_state_dpp_bcm_oam_endp_lst_occupied_endp_lsts_cbs_t occupied_endp_lsts;
} sw_state_dpp_bcm_oam_endp_lst_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_in_use_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_in_use_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_m_in_use_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_m_in_use_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_m_in_use_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_verify_cb verify;
} sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_set_cb set;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_get_cb get;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_alloc_cb alloc;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_alloc_cb ptr_alloc;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_ptr_free_cb ptr_free;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_verify_cb verify;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_index_cbs_t index;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_next_cbs_t next;
} sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_set_cb bit_set;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_get_cb bit_get;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_cbs_t;

typedef struct sw_state_dpp_bcm_oam_endp_lst_m_cbs_s {
    sw_state_dpp_bcm_oam_endp_lst_m_alloc_cb alloc;
    sw_state_dpp_bcm_oam_endp_lst_m_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_oam_endp_lst_m_free_cb free;
    sw_state_dpp_bcm_oam_endp_lst_m_verify_cb verify;
    sw_state_dpp_bcm_oam_endp_lst_m_max_nof_endp_lst_ms_cbs_t max_nof_endp_lst_ms;
    sw_state_dpp_bcm_oam_endp_lst_m_in_use_cbs_t in_use;
    sw_state_dpp_bcm_oam_endp_lst_m_endp_lst_ms_array_cbs_t endp_lst_ms_array;
    sw_state_dpp_bcm_oam_endp_lst_m_occupied_endp_lst_ms_cbs_t occupied_endp_lst_ms;
} sw_state_dpp_bcm_oam_endp_lst_m_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_verify_cb verify;
} sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_cbs_t;

typedef struct sw_state_dpp_bcm_oam_oam_hashs_cbs_s {
    sw_state_dpp_bcm_oam_oam_hashs_set_cb set;
    sw_state_dpp_bcm_oam_oam_hashs_get_cb get;
    sw_state_dpp_bcm_oam_oam_hashs_verify_cb verify;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_index_to_name_db_cbs_t _bcm_dpp_oam_ma_index_to_name_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_ma_to_mep_db_cbs_t _bcm_dpp_oam_ma_to_mep_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_rmep_info_db_cbs_t _bcm_dpp_oam_rmep_info_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_info_db_cbs_t _bcm_dpp_oam_bfd_mep_info_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_bfd_mep_to_rmep_db_cbs_t _bcm_dpp_oam_bfd_mep_to_rmep_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_to_ais_id_cbs_t _bcm_dpp_oam_mep_to_ais_id;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_gtf_info_db_cbs_t _bcm_dpp_oam_mep_sat_gtf_info_db;
    sw_state_dpp_bcm_oam_oam_hashs__bcm_dpp_oam_mep_sat_ctf_info_db_cbs_t _bcm_dpp_oam_mep_sat_ctf_info_db;
} sw_state_dpp_bcm_oam_oam_hashs_cbs_t;

typedef struct sw_state_dpp_bcm_oam_loopback_object_int_pri_cbs_s {
    sw_state_dpp_bcm_oam_loopback_object_int_pri_set_cb set;
    sw_state_dpp_bcm_oam_loopback_object_int_pri_get_cb get;
    sw_state_dpp_bcm_oam_loopback_object_int_pri_verify_cb verify;
} sw_state_dpp_bcm_oam_loopback_object_int_pri_cbs_t;

typedef struct sw_state_dpp_bcm_oam_loopback_object_pkt_pri_cbs_s {
    sw_state_dpp_bcm_oam_loopback_object_pkt_pri_set_cb set;
    sw_state_dpp_bcm_oam_loopback_object_pkt_pri_get_cb get;
    sw_state_dpp_bcm_oam_loopback_object_pkt_pri_verify_cb verify;
} sw_state_dpp_bcm_oam_loopback_object_pkt_pri_cbs_t;

typedef struct sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_cbs_s {
    sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_set_cb set;
    sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_get_cb get;
    sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_verify_cb verify;
} sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_cbs_t;

typedef struct sw_state_dpp_bcm_oam_cbs_s {
    sw_state_dpp_bcm_oam_alloc_cb alloc;
    sw_state_dpp_bcm_oam_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_oam_free_cb free;
    sw_state_dpp_bcm_oam_verify_cb verify;
    sw_state_dpp_bcm_oam_acc_ref_counter_cbs_t acc_ref_counter;
    sw_state_dpp_bcm_oam_traps_ref_counter_cbs_t traps_ref_counter;
    sw_state_dpp_bcm_oam_y1731_opcode_to_intenal_opcode_map_cbs_t y1731_opcode_to_intenal_opcode_map;
    sw_state_dpp_bcm_oam_error_type_to_trap_id_map_cbs_t error_type_to_trap_id_map;
    sw_state_dpp_bcm_oam_oamp_rx_trap_code_ref_count_cbs_t oamp_rx_trap_code_ref_count;
    sw_state_dpp_bcm_oam_trap_info_cbs_t trap_info;
    sw_state_dpp_bcm_oam_is_internally_allocated_trap_cbs_t is_internally_allocated_trap;
    sw_state_dpp_bcm_oam_cpu_trap_code_to_mirror_profile_map_cbs_t cpu_trap_code_to_mirror_profile_map;
    sw_state_dpp_bcm_oam_endp_lst_cbs_t endp_lst;
    sw_state_dpp_bcm_oam_endp_lst_m_cbs_t endp_lst_m;
    sw_state_dpp_bcm_oam_oam_hashs_cbs_t oam_hashs;
    sw_state_dpp_bcm_oam_loopback_object_int_pri_cbs_t loopback_object_int_pri;
    sw_state_dpp_bcm_oam_loopback_object_pkt_pri_cbs_t loopback_object_pkt_pri;
    sw_state_dpp_bcm_oam_loopback_object_inner_pkt_pri_cbs_t loopback_object_inner_pkt_pri;
} sw_state_dpp_bcm_oam_cbs_t;


int sw_state_dpp_bcm_oam_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_DPP_BCM_OAM_ACCESS_H_ */
