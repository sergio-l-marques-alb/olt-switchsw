/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
*/
#ifndef _SHR_sw_state_dpp_shr_H_
#define _SHR_sw_state_dpp_shr_H_


int sw_state_dpp_shr_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_resTypeCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_resPoolCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_resPoolId_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_resElemSize_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_refCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_res_name_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_resManagerType_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_low_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_count_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_refCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_inuse_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_resHandle_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_tagged_bmp_extras_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_tagged_bmp_extras_tag_length_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_tagged_bmp_extras_grain_size_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_resmgr_info_pool_name_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_max_num_entries_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_key_size_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_data_size_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_num_free_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_free_arr_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_entry_arrays_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_hash_table_table_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_nof_htbl_used_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_htbls_max_nof_htbls_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_max_nof_bmps_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_nof_in_use_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_occupied_ids_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_low_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_count_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_used_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_grainSize_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_tagSize_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#if SW_STATE_RES_TAG_BITMAP_SEARCH_RESUME
int sw_state_dpp_shr_bmp_info_bitmap_lists_lastFree_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* SW_STATE_RES_TAG_BITMAP_SEARCH_RESUME*/ 
#if SW_STATE_RES_TAG_BITMAP_SEARCH_RESUME
int sw_state_dpp_shr_bmp_info_bitmap_lists_nextAlloc_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* SW_STATE_RES_TAG_BITMAP_SEARCH_RESUME*/ 
int sw_state_dpp_shr_bmp_info_bitmap_lists_tagData_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_shr_bmp_info_bitmap_lists_data_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_templateTypeCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_templatePoolCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_template_param_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_template_param_templatePoolId_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_template_param_refCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_template_param_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_template_param_name_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_templateManagerType_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_template_low_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_template_count_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_max_entities_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_data_size_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_refCount_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_templateHandle_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_extras_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_extras_orig_data_size_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#if defined(BCM_PETRA_SUPPORT)
int sw_state_dpp_shr_template_info_pool_name_name_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 

#endif /* _SHR_sw_state_dpp_shr_H_ */
