
/*
 * $Id: cmu_h.stg,v 1.9 Broadcom SDK $
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * t3p1_cmu.h: Guadalupe2k V1.3 TMU table manager & wrappers
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from sdk/caladan_ucode/t3p1/src/t3p1_cmu_cfg.lrp.
 * Edits to this file will be lost when it is regenerated.
 *
 */

#ifndef _SOC_SBX_T3P1_CMU_H
#define _SOC_SBX_T3P1_CMU_H

#if defined(BCM_CALADAN3_SUPPORT) && defined(BCM_CALADAN3_T3P1_SUPPORT) 
#include <cmu.h>

#define MAX_COUNTER_GROUPS 32

typedef struct soc_sbx_t3p1_simple32_count_s
{
    uint64    accumulator;
} soc_sbx_t3p1_simple32_count_t;

typedef struct soc_sbx_t3p1_simple64_count_s
{
    uint64    accumulator;
} soc_sbx_t3p1_simple64_count_t;

typedef struct soc_sbx_t3p1_turbo32_count_s
{
    uint64    bytes;
    uint64    packets;
} soc_sbx_t3p1_turbo32_count_t;

typedef struct soc_sbx_t3p1_turbo64_count_s
{
    uint64    bytes;
    uint64    packets;
} soc_sbx_t3p1_turbo64_count_t;

typedef struct soc_sbx_t3p1_range_count_s
{
    uint64    min_max;    
} soc_sbx_t3p1_range_count_t;

extern int soc_sbx_t3p1_cmu_init(int unit);
extern int soc_sbx_t3p1_cmu_uninit(int unit);

/**
 * soc_sbx_t3p1_example_counters_read()
 *
 * @brief
 *
 * Read example_counters counters from host memory
 *
 * @param ulIndex   - Counter Index. Read counters starting from this index.
 * @param ulEntries - Number of counter entries to read
 * @param pCount    - Pointer to src/dst counter structures
 *
 * @return - error code, SB_OK on success
 **/

extern int soc_sbx_t3p1_example_counters_read(
              int unit,
              uint32 ulIndex,
              uint32 ulEntries,
              int clear,
               soc_sbx_t3p1_turbo64_count_t  *pCount
             );

/**
 * soc_sbx_t3p1_example_counters_clear()
 *
 * @brief
 *
 * Clear example_counters counters from host memory
 *
 * @param ulIndex   - Counter Index. Read counters starting from this index.
 * @param ulEntries - Number of counter entries to clear
 *
 * @return - error code, SB_OK on success
 **/

extern int soc_sbx_t3p1_example_counters_clear(
              int unit
             );
    
/**
 * soc_sbx_t3p1_rtctr_read()
 *
 * @brief
 *
 * Read rtctr counters from host memory
 *
 * @param ulIndex   - Counter Index. Read counters starting from this index.
 * @param ulEntries - Number of counter entries to read
 * @param pCount    - Pointer to src/dst counter structures
 *
 * @return - error code, SB_OK on success
 **/

extern int soc_sbx_t3p1_rtctr_read(
              int unit,
              uint32 ulIndex,
              uint32 ulEntries,
              int clear,
               soc_sbx_t3p1_turbo64_count_t  *pCount
             );

/**
 * soc_sbx_t3p1_rtctr_clear()
 *
 * @brief
 *
 * Clear rtctr counters from host memory
 *
 * @param ulIndex   - Counter Index. Read counters starting from this index.
 * @param ulEntries - Number of counter entries to clear
 *
 * @return - error code, SB_OK on success
 **/

extern int soc_sbx_t3p1_rtctr_clear(
              int unit              
             );


#endif

#endif
