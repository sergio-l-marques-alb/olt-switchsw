/* $Id: petra_api_interrupt_service.h,v 1.7 Broadcom SDK $
 * $Copyright: Copyright 2015 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
*/


#ifndef __SOC_PETRA_API_INTERRUPT_SERVICE_INCLUDED__
/* { */
#define __SOC_PETRA_API_INTERRUPT_SERVICE_INCLUDED__

/*************
 * INCLUDES  *
 *************/
/* { */

#include <soc/dpp/SAND/Utils/sand_header.h>
#include <soc/dpp/SAND/Utils/sand_framework.h>
#include <soc/dpp/SAND/Utils/sand_integer_arithmetic.h>

#include <soc/dpp/Petra/petra_general.h>

/* } */
/*************
 * DEFINES   *
 *************/
/* { */

#define SOC_PETRA_INTERRUPT_MAX_NOF_REG_IN_MOD             ( 5)
#define SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG           (SOC_SAND_NOF_BITS_IN_UINT32)
#define SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD           (SOC_PETRA_INTERRUPT_MAX_NOF_REG_IN_MOD * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG)

#define SOC_PETRA_INTERRUPT_MAX_MONITORED_CAUSES           MAX_INTERRUPT_CAUSE
#define SOC_PETRA_INTERRUPT_MAX_MONITORED_CAUSES_IN_UINT32   SIZE_OF_BITSTRAEM_IN_UINT32S

#define SOC_PETRA_INTERRUPT_SINGLE_MAX_NOF_INTERRUPT_DATA  (5)

/* } */

/*************
 * MACROS    *
 *************/
/* { */

/* } */

/*************
 * TYPE DEFS *
 *************/
/* { */

typedef uint32 SOC_PETRA_INTERRUPT_MONITORED_CAUSE;

typedef enum
{
  SOC_PETRA_INTERRUPT_OLP_ID = 0,
  SOC_PETRA_INTERRUPT_NIF_ID,
  SOC_PETRA_INTERRUPT_MAL_ID,
  SOC_PETRA_INTERRUPT_IRE_ID,
  SOC_PETRA_INTERRUPT_IDR_ID,
  SOC_PETRA_INTERRUPT_IRR_ID,
  SOC_PETRA_INTERRUPT_IQM_ID,
  SOC_PETRA_INTERRUPT_IPS_ID,
  SOC_PETRA_INTERRUPT_IPT_ID,
  SOC_PETRA_INTERRUPT_MMU_ID,
  SOC_PETRA_INTERRUPT_DPI_ID,
  SOC_PETRA_INTERRUPT_FDR_ID,
  SOC_PETRA_INTERRUPT_FDT_ID,
  SOC_PETRA_INTERRUPT_FCR_ID,
  SOC_PETRA_INTERRUPT_FCT_ID,
  SOC_PETRA_INTERRUPT_RTP_ID,
  SOC_PETRA_INTERRUPT_FABRIC_MAC_ID,
  SOC_PETRA_INTERRUPT_MSW_ID,
  SOC_PETRA_INTERRUPT_EGQ_ID,
  SOC_PETRA_INTERRUPT_EPN_ID,
  SOC_PETRA_INTERRUPT_CFC_ID,
  SOC_PETRA_INTERRUPT_SCH_ID,
  SOC_PETRA_INTERRUPT_QDR_ID,
  SOC_PETRA_INTERRUPT_NOF_MODULES

} SOC_PETRA_INTERRUPT_MODULES;

typedef enum
{
  SOC_PETRA_OLP_END_READ_ERR        = SOC_PETRA_INTERRUPT_OLP_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_OLP_END_WRITE_ERR,
  SOC_PETRA_OLP_START_ERR,
  SOC_PETRA_OLP_END_READ_EXP_ERR,
  SOC_PETRA_OLP_END_WRITE_EXP_ERR,
  SOC_PETRA_OLP_START_EXP_ERR,

  SOC_PETRA_NIF_MAL0_INT            = SOC_PETRA_INTERRUPT_NIF_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_NIF_MAL1_INT,
  SOC_PETRA_NIF_MAL2_INT,
  SOC_PETRA_NIF_MAL3_INT,
  SOC_PETRA_NIF_SRD_LANE_INT        = SOC_PETRA_INTERRUPT_NIF_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_NIF_SRD_IPU_INT,
  SOC_PETRA_NIF_SRD_EPB_INT,
  SOC_PETRA_NIF_RX_PAEB_INT         = SOC_PETRA_INTERRUPT_NIF_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 2),

  SOC_PETRA_MAL_STAT_RX_INT         = SOC_PETRA_INTERRUPT_MAL_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_MAL_LINK_STATUS_CHANGE_INT,
  SOC_PETRA_MAL_RX_PCS_LN_SYNC_STAT_CHANGE_INT,
  SOC_PETRA_MAL_RX_PCS_SYNC_STAT_CHANGE_INT,
  SOC_PETRA_MAL_RX_PCS_LOCAL_FAULT_INT,
  SOC_PETRA_MAL_RX_PCS_REMOTE_FAULT_INT,
  SOC_PETRA_MAL_SGMII_GOT_REMOTE_FAULT_INT,
  SOC_PETRA_MAL_STAT_TX_INT,
  SOC_PETRA_MAL_TX_MLF_OVERRUN_ERROR_INT = SOC_PETRA_INTERRUPT_MAL_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_MAL_RX_MLF_OVERRUN_ERROR_INT,
  SOC_PETRA_MAL_MAC_TX_ERR_INT,
  SOC_PETRA_MAL_MAC_RX_ERR_INT,
  SOC_PETRA_MAL_TX_TAF_OVERFLOW_ERR_INT,
  SOC_PETRA_MAL_RX_RAF_OVERFLOW_ERR_INT,
  SOC_PETRA_MAL_TX_MLF_PKT_TOO_SHORT_ERR_INT,
  SOC_PETRA_MAL_TX_A48_OVERFLOW_ERR_INT,
  SOC_PETRA_MAL_RX_PCS_DESKEW_ERR_INT,
  SOC_PETRA_MAL_RX_PCS_DESKEW_ERR_FATAL_INT,

  SOC_PETRA_IRE_RCY_PACKET_SIZE_ERR = SOC_PETRA_INTERRUPT_IRE_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IRE_CPU_IF_ERR_DATA_ARRIVED,
  SOC_PETRA_IRE_CPU_IF_32BYTES_PACK_ERR,
  SOC_PETRA_IRE_CPU_IF_PACKET_SIZE_ERR,
  SOC_PETRA_IRE_CPU_IF_64BYTES_PACK_ERR,
  SOC_PETRA_IRE_OLP_IF_ERR_DATA_ARRIVED,
  SOC_PETRA_IRE_OLP_IF_32BYTES_PACK_ERR,
  SOC_PETRA_IRE_OLP_IF_PACKET_SIZE_ERR,
  SOC_PETRA_IRE_OLP_IF_64BYTES_PACK_ERR,
  SOC_PETRA_IRE_NIFA_ERR_DATA_ARRIVED,
  SOC_PETRA_IRE_NIFA_PACKET_SIZE_ERR,
  SOC_PETRA_IRE_NIFA_64BYTES_PACK_ERR,
  SOC_PETRA_IRE_NIFB_ERR_DATA_ARRIVED,
  SOC_PETRA_IRE_NIFB_PACKET_SIZE_ERR,
  SOC_PETRA_IRE_NIFB_64BYTES_PACK_ERR,
  SOC_PETRA_IRE_RCY_ERR_DATA_ARRIVED,
  SOC_PETRA_IRE_RCY_64BYTES_PACK_ERR,
  SOC_PETRA_IRE_BURST_ERR_FOLLOW_SOP_NOT_VALID,
  SOC_PETRA_IRE_BURST_ERR_FOLLOW_SOP_DIF_CONTEXT,
  SOC_PETRA_IRE_BURST_ERR_FOLLOW_SOP_IS_SOP,
  SOC_PETRA_IRE_BURST_ERR_FOLLOW_SOP_IS_ERR,
  SOC_PETRA_IRE_FAP_PORT_ERR,

  SOC_PETRA_IDR_ERROR_REASSEMBLY    = SOC_PETRA_INTERRUPT_IDR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IDR_ERROR_MINI_MULTICAST_RECYCLE,
  SOC_PETRA_IDR_ERROR_FULL_MULTICAST_RECYCLE,
  SOC_PETRA_IDR_ERROR_TIMEOUT,
  SOC_PETRA_IDR_ERROR_UNICAST_RECYCLE,
  SOC_PETRA_IDR_ERROR_CHUNK_STATUS_ECC = SOC_PETRA_INTERRUPT_IDR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_IDR_ERROR_CHUNK_FIFO_ECC,
  SOC_PETRA_IDR_ERROR_UNICAST_DP_ECC,
  SOC_PETRA_IDR_ERROR_MINI_MULTICAST_DP_ECC,
  SOC_PETRA_IDR_ERROR_FULL_MULTICAST_DP_ECC,
  SOC_PETRA_IDR_ERROR_FREE_PCBS_ECC,
  SOC_PETRA_IDR_ERROR_PCB_LINK_TABLE_ECC,
  SOC_PETRA_IDR_ERROR_PRM_DP_ECC,
  SOC_PETRA_IDR_ERROR_PRM_PD_ECC,
  SOC_PETRA_IDR_ERROR_PRM_CD_ECC,
  SOC_PETRA_IDR_ERROR_REASSEMBLY_STATUS_ECC,
  SOC_PETRA_IDR_ERROR_WORD_INDEX_ECC,
  SOC_PETRA_IDR_ERROR_BUFFER_TYPE_ECC,
  SOC_PETRA_IDR_ERROR_COMPLETE_PC_ECC,
    

  SOC_PETRA_IRR_ERR_MAX_REPLICATION = SOC_PETRA_INTERRUPT_IRR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IRR_ERROR_MAX_REPLICATION,
  SOC_PETRA_IRR_OUT_OF_SEQUENCE,
  SOC_PETRA_IRR_OUT_OF_SYNCHRONIZATION,
  SOC_PETRA_IRR_ERROR_FREE_PCP_ECC,
  SOC_PETRA_IRR_ERROR_IS_FREE_PCP_ECC,
  SOC_PETRA_IRR_ERROR_PCP_LINK_TABLE_ECC,
  SOC_PETRA_IRR_ERROR_IS_PCP_LINK_TABLE_ECC,
  SOC_PETRA_IRR_ERROR_PCM_ECC,
  SOC_PETRA_IRR_ERROR_IS_PCM_ECC,
  SOC_PETRA_IRR_ERROR_UC_ECC,
  SOC_PETRA_IRR_ERROR_MC_ECC,
  SOC_PETRA_IRR_ERROR_NIF_ECC,
  SOC_PETRA_IRR_ERROR_GLAG_MAPPING_ECC,
  SOC_PETRA_IRR_ERROR_ISF_ECC,


  
  SOC_PETRA_IQM_FREE_BDB_OVF        = SOC_PETRA_INTERRUPT_IQM_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IQM_FREE_BDB_UNF,
  SOC_PETRA_IQM_FULL_USCNT_OVF,
  SOC_PETRA_IQM_MINI_USCNT_OVF,
  SOC_PETRA_IQM_UPDT_FIFO_OVF,
  SOC_PETRA_IQM_TXDSCR_FIFO_OVF,
  SOC_PETRA_IQM_PD_FIFO_OVF,
  SOC_PETRA_IQM_QDR_SFT_ERR,
  SOC_PETRA_IQM_PD_CD_TYPE_BIT_ERR,
  SOC_PETRA_IQM_PKT_ENQ_RSRC_ERR,
  SOC_PETRA_IQM_PKT_ENQ_SN_ERR,
  SOC_PETRA_IQM_PKT_ENQ_MC_ERR,
  SOC_PETRA_IQM_PKT_ENQ_QNVALID_ERR,
  SOC_PETRA_IQM_ST_RPT_OVF,
  SOC_PETRA_IQM_QROLL_OVER,
  SOC_PETRA_IQM_VSQ_ROLL_OVER,
  SOC_PETRA_IQM_ECC_INTR_ERR,
  SOC_PETRA_IQM_TAIL_DSCR_SFT_ERR   = SOC_PETRA_INTERRUPT_IQM_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_IQM_BDBLL_SFT_ERR,
  SOC_PETRA_IQM_FLUSCNT_SFT_ERR,
  SOC_PETRA_IQM_MNUSCNT_SFT_ERR,
  SOC_PETRA_IQM_TXPDM_SFT_ERR,
  SOC_PETRA_IQM_TXDSCRM_SFT_ERR,
  SOC_PETRA_IQM_DBFFM_SFT_ERR,
  SOC_PETRA_IQM_DELFFM_SFT_ERR,
  SOC_PETRA_IQM_VSQB_QSZ_SFT_ERR,
  SOC_PETRA_IQM_VSQC_QSZ_SFT_ERR,
  SOC_PETRA_IQM_VSQD_QSZ_SFT_ERR,


  SOC_PETRA_IPS_DQCQ_DEPTH_OVF      = SOC_PETRA_INTERRUPT_IPS_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IPS_EMPTY_DQCQ_WRITE,
  SOC_PETRA_IPS_SYSTEM_PORT_QUEUE_SIZE_EXPIRED,
  SOC_PETRA_IPS_QDESC_ECC_ERR,
  SOC_PETRA_IPS_DQCQMEM_ECC_ERR,
  SOC_PETRA_IPS_FSMRQMEM_ECC_ERR,
  


  SOC_PETRA_IPT_CRC_ERR_PKT         = SOC_PETRA_INTERRUPT_IPT_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_IPT_SOP_ECC_ERROR,
  SOC_PETRA_IPT_MOP_ECC_ERROR,
  SOC_PETRA_IPT_FDTC_ECC_ERROR,
  SOC_PETRA_IPT_EGQC_ECC_ERROR,
  SOC_PETRA_IPT_BDQ_ECC_ERROR,
  SOC_PETRA_IPT_PDQ_ECC_ERROR,
  
  SOC_PETRA_MMU_ERROR_ECC           = SOC_PETRA_INTERRUPT_MMU_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_MMU_WAFAA_ECC_ERR       = SOC_PETRA_INTERRUPT_MMU_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_MMU_WAFAB_ECC_ERR,
  SOC_PETRA_MMU_WAFAC_ECC_ERR,
  SOC_PETRA_MMU_WAFAD_ECC_ERR,
  SOC_PETRA_MMU_WAFAE_ECC_ERR,
  SOC_PETRA_MMU_WAFAF_ECC_ERR,
  SOC_PETRA_MMU_WAFBA_ECC_ERR,
  SOC_PETRA_MMU_WAFBB_ECC_ERR,
  SOC_PETRA_MMU_WAFBC_ECC_ERR,
  SOC_PETRA_MMU_WAFBD_ECC_ERR,
  SOC_PETRA_MMU_WAFBE_ECC_ERR,
  SOC_PETRA_MMU_WAFBF_ECC_ERR,
  SOC_PETRA_MMU_RAFA_ECC_ERR,
  SOC_PETRA_MMU_RAFB_ECC_ERR,
  SOC_PETRA_MMU_RAFC_ECC_ERR,
  SOC_PETRA_MMU_RAFD_ECC_ERR,
  SOC_PETRA_MMU_RAFE_ECC_ERR,
  SOC_PETRA_MMU_RAFF_ECC_ERR,
  SOC_PETRA_MMU_WFAFA_ECC_ERR,
  SOC_PETRA_MMU_WFAFB_ECC_ERR,
  SOC_PETRA_MMU_WFAFC_ECC_ERR,
  SOC_PETRA_MMU_WFAFD_ECC_ERR,
  SOC_PETRA_MMU_WFAFE_ECC_ERR,
  SOC_PETRA_MMU_WFAFF_ECC_ERR,
  SOC_PETRA_MMU_RFAFA_ECC_ERR,
  SOC_PETRA_MMU_RFAFB_ECC_ERR,
  SOC_PETRA_MMU_RFAFC_ECC_ERR,
  SOC_PETRA_MMU_RFAFD_ECC_ERR,
  SOC_PETRA_MMU_RFAFE_ECC_ERR,
  SOC_PETRA_MMU_RFAFF_ECC_ERR,
  SOC_PETRA_MMU_IDF_ECC_ERR,
  SOC_PETRA_MMU_FDF_ECC_ERR,


  SOC_PETRA_DPI_DPI_ERROR_INT       = SOC_PETRA_INTERRUPT_DPI_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),

  SOC_PETRA_FDR_FDRADESCCNTO_A      = SOC_PETRA_INTERRUPT_FDR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_FDR_FDRAUN_EXP_CELL,
  SOC_PETRA_FDR_IFMAFO_A,
  SOC_PETRA_FDR_IFMBFO_A,
  SOC_PETRA_FDR_CPUDATACELLFNE_A0,
  SOC_PETRA_FDR_CPUDATACELLFNE_A1,
  SOC_PETRA_FDR_ALTO_A,
  SOC_PETRA_FDR_FDRA_OUT_OF_SYNC,
  SOC_PETRA_FDR_FDRA_TAG_ECC_ERR,
  SOC_PETRA_FDR_FDRA_FILRTER_DROP_INTA,
  SOC_PETRA_FDR_FDRA_FILRTER_DROP_INTB,
  SOC_PETRA_FDR_FDRADESCCNTO_B,
  SOC_PETRA_FDR_FDRBUN_EXP_CELL,
  SOC_PETRA_FDR_IFMAFO_B,
  SOC_PETRA_FDR_IFMBFO_B,
  SOC_PETRA_FDR_CPUDATACELLFNE_B0,
  SOC_PETRA_FDR_CPUDATACELLFNE_B1,
  SOC_PETRA_FDR_ALTO_B_,
  SOC_PETRA_FDR_FDRB_OUT_OF_SYNC_,
  SOC_PETRA_FDR_FDRB_TAG_ECC_ERR,
  SOC_PETRA_FDR_FDRB_FILRTER_DROP_INTA,
  SOC_PETRA_FDR_FDRB_FILRTER_DROP_INTB,
  SOC_PETRA_FDR_FDR_OUTPU_OUT_OF_SYNC,
  SOC_PETRA_FDR_FDR_OUT_TAG_ECC_ERR,


  SOC_PETRA_FDT_UNRCH_DEST_EVT      = SOC_PETRA_INTERRUPT_FDT_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),

  SOC_PETRA_FCR_SRC_DV_CNG_LINK_EV  = SOC_PETRA_INTERRUPT_FCR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_FCR_CPUCNT_CELL_FNE,
  SOC_PETRA_FCR_LOCAL_ROUT_FS_OVF,
  SOC_PETRA_FCR_LOCAL_ROUTRC_OVF,
  SOC_PETRA_FCR_REACH_FIFO_OVF,
  SOC_PETRA_FCR_FLOW_FIFO_OVF,
  SOC_PETRA_FCR_CREDIT_FIFO_OVF,

  SOC_PETRA_FCT_UNRCH_DEST_EVT      = SOC_PETRA_INTERRUPT_FCT_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),

  SOC_PETRA_RTP_LINK_MASK_CHANGE    = SOC_PETRA_INTERRUPT_RTP_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),

  SOC_PETRA_FABRIC_MAC_RX_CRCERR    = SOC_PETRA_INTERRUPT_FABRIC_MAC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_FABRIC_MAC_RX_CGERR,
  SOC_PETRA_FABRIC_MAC_LOS_INT      = SOC_PETRA_INTERRUPT_FABRIC_MAC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_FABRIC_MAC_RX_MIS_AERR,
  SOC_PETRA_FABRIC_MAC_RX_DISP_ERR  = SOC_PETRA_INTERRUPT_FABRIC_MAC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 2),
  SOC_PETRA_FABRIC_MAC_LNKLVL_AGE   = SOC_PETRA_INTERRUPT_FABRIC_MAC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 3),
  SOC_PETRA_FABRIC_MAC_LNKLVL_HALT,
  SOC_PETRA_FABRIC_MAC_WRONG_SIZE   = SOC_PETRA_INTERRUPT_FABRIC_MAC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 4),

  SOC_PETRA_MSW_SRD_INTERRUPT       = SOC_PETRA_INTERRUPT_MSW_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_MSW_SRD0_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD1_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD2_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD3_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD_IPU_INTERRUPT_GROUP_A,
  SOC_PETRA_MSW_SRD_EPB_INTERRUPT_GROUP_A,
  SOC_PETRA_MSW_SRD4_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD5_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD6_MACRO_INTERRUPT,
  SOC_PETRA_MSW_SRD_IPU_INTERRUPT_GROUP_B,
  SOC_PETRA_MSW_SRD_EPB_INTERRUPT_GROUP_B,
  SOC_PETRA_MSW_SRD_LANE_INTERRUPT  = SOC_PETRA_INTERRUPT_MSW_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),

  SOC_PETRA_EGQ_CPU_PACK32_BYTES_ERR = SOC_PETRA_INTERRUPT_EGQ_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_EGQ_CPU_DATA_ARRIVED_ERR,
  SOC_PETRA_EGQ_PDM_PAR_ERR,
  SOC_PETRA_EGQ_PLM_PAR_ERR,
  SOC_PETRA_EGQ_PACKET_AGED,
  SOC_PETRA_EGQ_INT_VLANTABLE_OOR,
  SOC_PETRA_EGQ_INT_DIF_AF,
  SOC_PETRA_EGQ_CFC_FC_INT,
  SOC_PETRA_EGQ_NIFA_FC_INT,
  SOC_PETRA_EGQ_NIFB_FC_INT,
  SOC_PETRA_EGQ_PKT_REAS_INT_VEC,
  SOC_PETRA_EGQ_CNT_OVF_INT_VEC,
  SOC_PETRA_EGQ_VSC_PKT_SIZE_ERR = SOC_PETRA_INTERRUPT_EGQ_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_EGQ_VSC_MISSING_SOP_ERR,
  SOC_PETRA_EGQ_VSC_FRAG_NUM_ERR,
  SOC_PETRA_EGQ_VSC_PKT_CRC_ERR,
  SOC_PETRA_EGQ_VSC_SOP_INTR_MOP_ERR,
  SOC_PETRA_EGQ_VSC_FIX129_ERR,
  SOC_PETRA_EGQ_VSC_EOP_SIZE_ERR,
  SOC_PETRA_EGQ_FSC_SONTS_ERR,
  SOC_PETRA_EGQ_FSC_PKT_SIZE_ERR,
  SOC_PETRA_EGQ_FSC_MISSING_SOP_ERR,
  SOC_PETRA_EGQ_FSC_FRAG_NUM_ERR,
  SOC_PETRA_EGQ_FSC_SOP_INTR_MOP_ERR,
  SOC_PETRA_EGQ_FSC_EOP_SIZE_ERR,
  SOC_PETRA_EGQ_FSC_SEQUENCE_ERR,
  SOC_PETRA_EGQ_CSR_PKT_SIZE_ERR,
  SOC_PETRA_EGQ_CSR_UNEXPECTED_EOP_ERR,
  SOC_PETRA_EGQ_CSR_MISSING_EOP_ERR,
  SOC_PETRA_EGQ_CSR_SOP_AND_EOP_ERR,
  SOC_PETRA_EGQ_CSR_SIZE_PARITY_ERR,
  SOC_PETRA_EGQ_REJ_BUFF_SCH,
  SOC_PETRA_EGQ_REJ_BUFF_USC,
  SOC_PETRA_EGQ_REJ_DESC_SCH,
  SOC_PETRA_EGQ_REJ_DESC_USC,
  SOC_PETRA_EGQ_BUFLINK_ECC_ERR     = SOC_PETRA_INTERRUPT_EGQ_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 2),
  SOC_PETRA_EGQ_BUFLINK_ECC_FIX,
  SOC_PETRA_EGQ_RCNT_ECC_ERR,
  SOC_PETRA_EGQ_RCNT_ECC_FIX,
  SOC_PETRA_EGQ_RRDM_ECC_ERR,
  SOC_PETRA_EGQ_RRDM_ECC_FIX,
  SOC_PETRA_EGQ_RPDM_ECC_ERR,
  SOC_PETRA_EGQ_RPDM_ECC_FIX,

  SOC_PETRA_EPN_TDM_FABRIC_STOP     = SOC_PETRA_INTERRUPT_EPN_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_EPN_MIRR_OVF_INT,
  SOC_PETRA_EPN_INT_OTM_OUT_LIF_MODE,
  SOC_PETRA_EPN_TDM_INT_VEC,
  SOC_PETRA_EPN_PRDM_ECC_ERR        = SOC_PETRA_INTERRUPT_EPN_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 1),
  SOC_PETRA_EPN_PRDM_ECC_FIX,
  SOC_PETRA_EPN_MDM_ECC_ERR,
  SOC_PETRA_EPN_MDM_ECC_FIX,
  SOC_PETRA_EPN_NADM_ECC_ERR,
  SOC_PETRA_EPN_NADM_ECC_FIX,
  SOC_PETRA_EPN_NBDM_ECC_ERR,
  SOC_PETRA_EPN_NBDM_ECC_FIX,

  SOC_PETRA_CFC_OBRXA_LOCK_ERR      = SOC_PETRA_INTERRUPT_CFC_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_CFC_OBRXB_LOCK_ERR,
  SOC_PETRA_CFC_OBRXA_OUT_OF_FRM,
  SOC_PETRA_CFC_OBRXB_OUT_OF_FRM,
  SOC_PETRA_CFC_OBRXA_DIP2_ALARM,
  SOC_PETRA_CFC_OBRXB_DIP2_ALARM,
  SOC_PETRA_CFC_OBRXA_FRM_ERR,
  SOC_PETRA_CFC_OBRXB_FRM_ERR,
  SOC_PETRA_CFC_OBRXA_DIP2_ERR,
  SOC_PETRA_CFC_OBRXB_DIP2_ERR,

  SOC_PETRA_SCH_ACT_FLOW_BAD_PARAMS = SOC_PETRA_INTERRUPT_SCH_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),
  SOC_PETRA_SCH_SHP_FLOW_BAD_PARAMS,
  SOC_PETRA_SCH_RESTART_FLOW_EVENT,
  SOC_PETRA_SCH_SMPTHROW_SCL_MSG,
  SOC_PETRA_SCH_SMPFULL_LEVEL1,
  SOC_PETRA_SCH_SMPFULL_LEVEL2,
  SOC_PETRA_SCH_FCTFIFOOVF,
  SOC_PETRA_SCH_DHDECC,
  SOC_PETRA_SCH_DCDECC,
  SOC_PETRA_SCH_FLHHRECC,
  SOC_PETRA_SCH_FLTHRECC,
  SOC_PETRA_SCH_FLHCLECC,
  SOC_PETRA_SCH_FLTCLECC,
  SOC_PETRA_SCH_FLHFQECC,
  SOC_PETRA_SCH_FLTFQECC,
  SOC_PETRA_SCH_FDMSECC,
  SOC_PETRA_SCH_FDMDECC,
  SOC_PETRA_SCH_SHDSECC,
  SOC_PETRA_SCH_SHDDECC,
  SOC_PETRA_SCH_FQMECC,
  SOC_PETRA_SCH_SFLHECC,
  SOC_PETRA_SCH_SFLTECC,
  SOC_PETRA_SCH_FSMECC,

  SOC_PETRA_QDR_ECC = SOC_PETRA_INTERRUPT_QDR_ID * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0),

  SOC_PETRA_INTERRUPT_NOF_CAUSES = (SOC_PETRA_INTERRUPT_NOF_MODULES * SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_MOD + (SOC_PETRA_INTERRUPT_MAX_NOF_FIELD_IN_REG * 0))
} SOC_PETRA_INTERRUPT_CAUSE;

typedef struct
{
  uint32 nof_interrupts;

  struct
  {
    uint32 addr;
    uint32 data;
  } interrupt_data[SOC_PETRA_INTERRUPT_SINGLE_MAX_NOF_INTERRUPT_DATA];

} SOC_PETRA_INTERRUPT_SINGLE_STRUCT;

typedef enum
{
  /*
   *  Recommended action: ingress quick recovery
   */
  SOC_PETRA_INT_RECOVERY_ACTION_QUICK_RECOVERY = 0,
  /*
   *  Recommended action: full reset to Soc_petra.
   */
  SOC_PETRA_INT_RECOVERY_ACTION_FULL_DEVICE_RESET,
  /*
   *  Represents that there isn't defined a recovery action.
   */
  SOC_PETRA_INT_RECOVERY_ACTION_UNKNOWN_ACTION,
  /*
   *  Total number of recommended recovery actions.
   */
  SOC_PETRA_INT_NOF_RECOVERY_ACTIONS
} SOC_PETRA_INT_RECOVERY_ACTION;

/* } */

/*************
 * GLOBALS   *
 *************/
/* { */

/* } */

/*************
 * FUNCTIONS *
 *************/
/* { */

uint32
  soc_petra_interrupt_all_interrupts_and_indications_clear(
    SOC_SAND_IN  int                        unit
  );

uint32
  soc_petra_interrupt_mask_all(
    SOC_SAND_IN  int                        unit,
    SOC_SAND_IN  uint8                        is_isr
  );

uint32
  soc_petra_interrupt_unmask_all(
    SOC_SAND_IN  int                        unit,
    SOC_SAND_IN  uint8                        is_tcm
  );

uint32
  soc_petra_interrupt_mask_clear(
    SOC_SAND_IN  int                        unit
  );

#if SOC_PETRA_DEBUG_IS_LVL1

void
  soc_petra_interrupt_all_interrupts_print(
    SOC_SAND_IN  int                        unit
  );

#endif

/* } */

#include <soc/dpp/SAND/Utils/sand_footer.h>

/* } __SOC_PETRA_API_INTERRUPT_SERVICE_INCLUDED__*/
#endif
