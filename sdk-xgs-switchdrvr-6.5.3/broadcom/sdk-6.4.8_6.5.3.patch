diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/appl/diag/cmdlist.h esw_sdk_final/include/appl/diag/cmdlist.h
--- sdk-xgs-robo-6.4.8/include/appl/diag/cmdlist.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/appl/diag/cmdlist.h	2018-01-10 11:53:53.183376000 +0000
@@ -52,13 +52,13 @@
 
 #include <appl/diag/parse.h>
 #include <appl/diag/shell.h>
 
 #if defined(MOUSSE) || defined(BMW) || defined(IDTRP334) || defined(GTO) || \
     defined(MBZ) || defined(IDT438) || defined(NSX) || defined(ROBO_4704) || \
-    defined(METROCORE) || defined(KEYSTONE)
+    defined(METROCORE) || defined(KEYSTONE) || defined(LVL7_FIXUP)
 #ifdef VXWORKS
 #include <config.h>      /* For INCLUDE_XXX */
 #endif
 #endif
 
 #define DCL_CMD(_f,_u)  \
@@ -265,21 +265,21 @@ DCL_CMD(dbg_bkpmon, bkpmon_usage)
 
 DCL_CMD(cmd_esw_dump,   cmd_esw_dump_usage)
 DCL_CMD(cmd_robo_dump,  cmd_robo_dump_usage)
 /* txrx.c */
 
 DCL_CMD(cmd_esw_tx,     cmd_esw_tx_usage)
-DCL_CMD(cmd_esw_tx_start,   cmd_esw_tx_start_usage)
+DCL_CMD(cmd_esw_tx_start,   cmd_esw_tx_usage)
 DCL_CMD(cmd_esw_tx_stop,    cmd_esw_tx_stop_usage)
 DCL_CMD(cmd_esw_tx_count,   cmd_esw_tx_count_usage)
 DCL_CMD(cmd_esw_rx_cfg, cmd_esw_rx_cfg_usage)
 DCL_CMD(cmd_esw_rx_init,    cmd_esw_rx_init_usage)
 DCL_CMD(cmd_esw_rx_mon, cmd_esw_rx_mon_usage)
 
 DCL_CMD(cmd_robo_tx,        cmd_robo_tx_usage)
-DCL_CMD(cmd_robo_tx_start,  cmd_robo_tx_start_usage)
+DCL_CMD(cmd_robo_tx_start,  cmd_robo_tx_usage)
 DCL_CMD(cmd_robo_tx_stop,   cmd_robo_tx_stop_usage)
 DCL_CMD(cmd_robo_tx_count,  cmd_robo_tx_count_usage)
 DCL_CMD(cmd_robo_rx_cfg,    cmd_robo_rx_cfg_usage)
 DCL_CMD(cmd_robo_rx_init,   cmd_robo_rx_init_usage)
 DCL_CMD(cmd_robo_rx_mon,    cmd_robo_rx_mon_usage)
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/appl/stktask/attach.h esw_sdk_final/include/appl/stktask/attach.h
--- sdk-xgs-robo-6.4.8/include/appl/stktask/attach.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/appl/stktask/attach.h	2018-01-10 11:53:53.183376000 +0000
@@ -67,7 +67,13 @@ extern int bcm_stack_attach_unregister(b
 
 extern int bcm_stack_attach_update(cpudb_ref_t db_ref);
 extern int bcm_stack_attach_running(void);
 extern int bcm_stack_attach(cpudb_ref_t db_ref);
 extern int bcm_stack_detach(cpudb_ref_t db_ref);
 
+#ifdef LVL7_FIXUP
+int bcm_stack_attach_manager_set(int manager);
+void bcm_stack_attach_fn(cpudb_ref_t topology_db, int local_cpu_only, 
+			 int detach_only);
+#endif
+
 #endif /* _STKTASK_ATTACH_H */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm/custom.h esw_sdk_final/include/bcm/custom.h
--- sdk-xgs-robo-6.4.8/include/bcm/custom.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/bcm/custom.h	2018-01-10 11:53:53.179376000 +0000
@@ -51,14 +51,18 @@
 #ifndef __BCM_CUSTOM_H__
 #define __BCM_CUSTOM_H__
 
 #include <bcm/types.h>
 
 #if !defined(BCM_CUSTOM_ARGS_MAX)
+#ifdef LVL7_FIXUP
+#define BCM_CUSTOM_ARGS_MAX     375       
+#else
 #define BCM_CUSTOM_ARGS_MAX     256        
 #endif
+#endif
 
 #define BCM_CUSTOM_SET          1          
 #define BCM_CUSTOM_GET          2          
 
 /* bcm_custom_cb_t */
 typedef int (*bcm_custom_cb_t)(
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm/field.h esw_sdk_final/include/bcm/field.h
--- sdk-xgs-robo-6.4.8/include/bcm/field.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/bcm/field.h	2018-01-10 11:53:53.179376000 +0000
@@ -4604,12 +4604,18 @@ typedef struct bcm_field_group_status_s
     int counters_free;  /* Unused counters in slice. */
     int meters_total;   /* Total meters in slice. */
     int meters_free;    /* Unused meters in slice. */
     int entry_count;    /* Number of entries in the group. */
     int counter_count;  /* Number of counters attached to group entries. */
     int meter_count;    /* Number of meters attached to group entries. */
+#ifdef LVL7_FIXUP
+    int slice_width_physical;   /* Slice width of group based on physical slices. */
+    int intraslice_mode_enable; /* Indicates if intraslice mode is enabled. */
+    int natural_depth;          /* Number of rules when slice depth is one. */
+#endif
+
 } bcm_field_group_status_t;
 
 /* Group Modes (single, double or triple wide). */
 typedef enum bcm_field_group_mode_e {
     bcmFieldGroupModeSingle = 0,        /* Single-wide group. */
     bcmFieldGroupModeDouble = 1,        /* Double-wide group. */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm/types.h esw_sdk_final/include/bcm/types.h
--- sdk-xgs-robo-6.4.8/include/bcm/types.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/bcm/types.h	2018-01-10 11:53:53.179376000 +0000
@@ -72,14 +72,18 @@ typedef int bcm_multicast_t;
 #define BCM_LOCAL_UNITS_MAX     18         
 #endif
 
 #define BCM_MAX_NUM_UNITS       BCM_LOCAL_UNITS_MAX 
 
 #if !defined(BCM_UNITS_MAX)
+#if defined(LVL7_FIXUP) && defined(L7_PRODUCT_SMARTPATH)
+#define BCM_UNITS_MAX           8
+#else
 #define BCM_UNITS_MAX           128        
 #endif
+#endif
 
 #define BCM_PBMP_PORT_MAX       _SHR_PBMP_PORT_MAX 
 
 #define BCM_PBMP_CLEAR(pbm)     _SHR_PBMP_CLEAR(pbm) 
 #define BCM_PBMP_MEMBER(bmp, port)  _SHR_PBMP_MEMBER((bmp), (port)) 
 #define BCM_PBMP_ITER(bmp, port)  _SHR_PBMP_ITER((bmp), (port)) 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm/vlan.h esw_sdk_final/include/bcm/vlan.h
--- sdk-xgs-robo-6.4.8/include/bcm/vlan.h	2015-10-21 01:59:43.000000000 +0100
+++ esw_sdk_final/include/bcm/vlan.h	2018-01-10 11:53:53.179376000 +0000
@@ -2176,12 +2176,14 @@ extern int bcm_vlan_port_stat_multi_set3
 #define BCM_VLAN_PORT_EGRESS_PON_TUNNEL_NONE 0x00100000 /* This flag indicates
                                                           that LLTAG is not
                                                           added when a packet
                                                           egress out from this
                                                           VLAN port. */
 
+#define BCM_VLAN_PORT_INNER_VLAN_REPLACE    0x01000000  /* PTin added: Replace the port inner vid */
+
 /* Logical layer 2 port match criteria */
 typedef enum bcm_vlan_port_match_e {
     BCM_VLAN_PORT_MATCH_INVALID = 0,    /* Illegal. */
     BCM_VLAN_PORT_MATCH_NONE = 1,       /* No source match criteria. */
     BCM_VLAN_PORT_MATCH_PORT = 2,       /* {Module, Port} or Trunk. */
     BCM_VLAN_PORT_MATCH_PORT_VLAN = 3,  /* Mod/port/trunk + outer VLAN. */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm_int/esw/link.h esw_sdk_final/include/bcm_int/esw/link.h
--- sdk-xgs-robo-6.4.8/include/bcm_int/esw/link.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/bcm_int/esw/link.h	2018-01-10 11:53:53.175376000 +0000
@@ -50,12 +50,18 @@
 
 #define _BCM_LINK_STATUS_NO_CALLBACK  0x1
 
 extern int _bcm_esw_link_get(int unit, bcm_port_t port, int *link);
 extern int _bcm_esw_link_force(int unit, uint32 flags, bcm_port_t port, 
                                int force, int link);
+/* PTin added: linkscan */
+#if 1
+extern int _ptin_esw_link_force(int unit, bcm_port_t port, int force, int link, int no_linkchange);
+extern int _ptin_esw_link_fault_get(int unit, int port, int *fault);
+extern int ptin_esw_port_loopback_set(int unit, bcm_port_t port, int loopback, int no_linkchange);
+#endif
 extern int _bcm_esw_link_down_tx_set(int unit, bcm_port_t port, int enable);
 extern int _bcm_esw_link_down_tx_get(int unit, bcm_port_t port, int *enable);
 extern int _bcm_esw_link_failover_set(int unit, bcm_port_t port, int enable);
 extern int _bcm_esw_link_failed_clear(int unit, bcm_port_t port);
 extern int _bcm_esw_link_port_info_skip_set(int unit, bcm_port_t port, int skip);
 extern int _bcm_esw_link_port_info_skip_get(int unit, bcm_port_t port, int *skip);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/bcm_int/esw/triumph2.h esw_sdk_final/include/bcm_int/esw/triumph2.h
--- sdk-xgs-robo-6.4.8/include/bcm_int/esw/triumph2.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/bcm_int/esw/triumph2.h	2018-01-10 11:53:53.171376000 +0000
@@ -109,12 +109,17 @@ extern int bcm_tr2_ipmc_repl_delete(int
 extern int bcm_tr2_ipmc_repl_delete_all(int unit, int index,
                                 bcm_port_t port);
 extern int bcm_tr2_ipmc_egress_intf_add(int unit, int index, bcm_port_t port,
                                 bcm_l3_intf_t *l3_intf);
 extern int bcm_tr2_ipmc_egress_intf_delete(int unit, int index, bcm_port_t port,
                                    bcm_l3_intf_t *l3_intf);
+#ifdef LVL7_FIXUP
+extern int bcm_tr2_ipmc_repl_set(int unit, int mc_index, bcm_port_t port,
+                                bcm_vlan_vector_t vlan_vec);
+#endif
+
 extern int bcm_tr2_ipmc_egress_intf_set(int unit, int mc_index,
                                        bcm_port_t port, int if_count,
                                        bcm_if_t *if_array, int check_port);
 extern int bcm_tr2_ipmc_egress_intf_get(int unit, int mc_index,
                                        bcm_port_t port,
                                        int if_max, bcm_if_t *if_array,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/sal/core/alloc.h esw_sdk_final/include/sal/core/alloc.h
--- sdk-xgs-robo-6.4.8/include/sal/core/alloc.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/sal/core/alloc.h	2018-01-10 11:53:53.231376000 +0000
@@ -46,25 +46,42 @@
  * Purpose: 	Memory allocation
  */
 
 #ifndef _SAL_ALLOC_H
 #define _SAL_ALLOC_H
 
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#include "osapi.h"
+#endif
+
 /*
  * SAL Memory and Cache Support
  *
  *    NOTE: This driver was developed only on fully cache-coherent
  *    systems.  Therefore, we are certain to have missed a lot of places
  *    where we should be calling sal_dma_flush or sal_dma_inval before
  *    or after DMA operations.
  */
 
+/* Map sal_alloc/sal_free to osapi Api's except for 
+** - MIPS64 cpu: SDK has some special code for MIPS64 in sal_alloc.
+** - Linux kernel mode
+** - Smartpath product
+*/
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#define sal_alloc(sz,str) osapiMalloc(L7_DRIVER_COMPONENT_ID, sz)
+#define sal_free(ptr) osapiFree(L7_DRIVER_COMPONENT_ID, ptr)
+
+#else
+
 extern void *sal_alloc(unsigned int, char *);
 extern void  sal_free(void *);
 extern void sal_get_alloc_counters(unsigned long *alloc_bytes_count,unsigned long *free_bytes_count);

+#endif
+
 /*
  * DMA Memory allocation
  *
  */
 
 extern void	*sal_dma_alloc(unsigned int, char *);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/sal/core/boot.h esw_sdk_final/include/sal/core/boot.h
--- sdk-xgs-robo-6.4.8/include/sal/core/boot.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/sal/core/boot.h	2018-01-10 11:53:53.231376000 +0000
@@ -103,13 +103,12 @@ extern void _default_assert(const char *
 
 /*
  * Init
  */
 extern int sal_core_init(void);
 
-
 /*
  * Returns a string describing the current Operating System
  */
 extern const char* sal_os_name(void); 
 
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/sdk_custom_config.h esw_sdk_final/include/sdk_custom_config.h
--- sdk-xgs-robo-6.4.8/include/sdk_custom_config.h	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/include/sdk_custom_config.h	2018-01-10 11:53:53.183376000 +0000
@@ -0,0 +1,84 @@
+/*********************************************************************
+*
+* (C) Copyright Broadcom Corporation 2000-2007
+*
+**********************************************************************
+*
+* @filename  sdk_custom_config.h
+*
+* @purpose   Overrides for constants defined by the ESW SDK. 
+*
+* @component Driver
+*
+* @comments  This file is specific to FASTPATH/SmartPATH. 
+*
+* @create    3/24/2009
+*
+* @author    cmutter
+*
+* @end
+*
+**********************************************************************/
+#ifndef _SDK_CUSTOM_CONFIG_H
+#define _SDK_CUSTOM_CONFIG_H
+
+#include "flex.h"
+
+#define BCM_RLINK_RX_REMOTE_MAX_DEFAULT {10, 10, 10, 80, 80, 0, 0, 0}
+#define BCM_RLINK_L2_REMOTE_MAX_DEFAULT 0
+
+#ifdef L7_PRODUCT_SMARTPATH
+
+#define SOC_MAX_NUM_SWITCH_DEVICES 2
+#define SAL_THREAD_STKSZ 16384
+
+#else /* Not SmartPATH */
+
+#define SAL_THREAD_STKSZ 32768
+
+#endif /* Not SmartPATH */
+
+#if defined(L7_PRODUCT_SMB) || defined(L7_PRODUCT_SMARTPATH)
+
+#define BCM_RX_POOL_COUNT_DEFAULT 96
+
+#else /* Not SMB or SmartPATH */
+
+#define BCM_RX_POOL_COUNT_DEFAULT 384
+
+#endif /* Not SMB or SmartPATH */
+
+#if defined(L7_PRODUCT_SMARTPATH)
+#define BCM_LOCAL_UNITS_MAX     8
+#else
+#define BCM_LOCAL_UNITS_MAX     18
+#endif
+
+#if (defined(L7_PRODUCT_SMB) || defined(L7_PRODUCT_SMARTPATH))
+#define CT_TUNNEL_QUEUE_SIZE 64
+#else
+#define CT_TUNNEL_QUEUE_SIZE 256
+#endif
+
+#ifdef PC_LINUX_HOST
+#define ATP_RETRY_TIMEOUT_DEFAULT 10000000
+#else
+#define ATP_RETRY_TIMEOUT_DEFAULT 1000000
+#endif
+#define ATP_RETRY_COUNT_DEFAULT   20
+
+  /*
+  **       The RPC timeout interval is chosen to be twice the overall ATP 
+  **       timeout. Since transaction requires two ATP transfers plus some work on 
+  **       remote unit, the timeout should theoretically be twice the ATP 
+  **       timeout plus some processing time, but since we use a very long ATP
+  **       timeout we ignore the processing time delay.
+  */
+#define RPC_REPLY_TIMEOUT (2 * ATP_RETRY_TIMEOUT_DEFAULT * ATP_RETRY_COUNT_DEFAULT)
+
+
+#if L7_FEAT_CUSTOM_MMU
+#include "brd_e2e_overrides.h"
+#endif
+
+#endif /* _SDK_CUSTOM_CONFIG_H */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/shared/alloc.h esw_sdk_final/include/shared/alloc.h
--- sdk-xgs-robo-6.4.8/include/shared/alloc.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/shared/alloc.h	2018-01-10 11:53:53.179376000 +0000
@@ -55,9 +55,11 @@
  * 
  * This allows all code within the SDK to use the NULL-safe version without
  * affecting existing SAL implementations or external codebases.
  *
  */
 
+#if (!((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__))))
 #define sal_free sal_free_safe
+#endif
  
 #endif /* _SHR_ALLOC_H */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/shared/bslext.h esw_sdk_final/include/shared/bslext.h
--- sdk-xgs-robo-6.4.8/include/shared/bslext.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/shared/bslext.h	2018-01-10 11:53:53.179376000 +0000
@@ -55,8 +55,12 @@
 extern void
 bsl_config_t_init(bsl_config_t *config);
 
 extern int
 bsl_init(bsl_config_t *config);
 
+/* PTin added: BSL LOG */
+extern int
+bsl_vectors_get(bsl_config_t * dst);
+
 #endif /* _SHR_BSLEXT_H_ */
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/arl.h esw_sdk_final/include/soc/arl.h
--- sdk-xgs-robo-6.4.8/include/soc/arl.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/arl.h	2018-01-10 11:53:53.223376000 +0000
@@ -50,18 +50,25 @@
  */
 
 #ifndef _SOC_ARL_H
 #define _SOC_ARL_H
 
 #include <shared/avl.h>
+
+/* PTin modified: SDK 6.3.0 */
+#ifdef LVL7_FIXUP
+#include <soc/mcm/memregs.h>
+#include <soc/robo/mcm/memregs.h>
+#else
 #if defined(BCM_ESW_SUPPORT) || defined(BCM_SBX_SUPPORT) || defined(BCM_PETRA_SUPPORT) || defined(BCM_DFE_SUPPORT)
 #include <soc/mcm/memregs.h>
 #endif
 #ifdef BCM_ROBO_SUPPORT        
 #include <soc/robo/mcm/memregs.h>
 #endif
+#endif
 
 extern int soc_arl_attach(int unit);
 extern int soc_arl_detach(int unit);
 extern int soc_arl_init(int unit);
 
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/defs.h esw_sdk_final/include/soc/defs.h
--- sdk-xgs-robo-6.4.8/include/soc/defs.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/defs.h	2018-01-10 11:53:53.223376000 +0000
@@ -284,14 +284,16 @@
 #define BCM_APOLLO_SUPPORT
 #define BCM_TRX_SUPPORT
 #define BCM_MPLS_SUPPORT
 #define BCM_IPFIX_SUPPORT
 #endif
 
-#if defined(BCM_56685_A0) || defined(BCM_56685_B0)
+/* PTin added: new switch 56689 (Valkyrie2) */
+#if defined(BCM_56685_A0) || defined(BCM_56685_B0) || defined(BCM_56689_A0) || defined(BCM_56689_B0)
 #define BCM_56685
+#define BCM_56689   /* PTin added: new switch 56689 (Valkyrie2) */
 #define BCM_56634
 #define BCM_56624
 #define BCM_56304
 #define BCM_56800
 #define BCM_FIREBOLT_SUPPORT
 #define BCM_BRADLEY_SUPPORT
@@ -299,12 +301,13 @@
 #define BCM_TRIUMPH2_SUPPORT
 #define BCM_VALKYRIE2_SUPPORT
 #define BCM_TRX_SUPPORT
 #define BCM_MPLS_SUPPORT
 #define BCM_IPFIX_SUPPORT
 #endif
+/* PTin end */
 
 #if defined(BCM_56334_A0) || defined(BCM_56334_B0)
 #define BCM_56334
 #define BCM_56624
 #define BCM_56304
 #define BCM_56800
@@ -394,14 +397,16 @@
 #define BCM_TRX_SUPPORT
 #ifndef BCM_SHADOW_SUPPORT
 #define BCM_SHADOW_SUPPORT
 #endif
 #endif
 
-#if defined(BCM_56640_A0) || defined(BCM_56640_B0)
+/* PTin modified: new switch 5664x (Triumph3) */
+#if defined(BCM_56640_A0) || defined(BCM_56640_B0) || defined(BCM_56643_A0) || defined(BCM_56643_B0)
 #define BCM_56640
+#define BCM_56643     /* PTin modified: new switch 5664x (Triumph3) */
 #define BCM_56840
 #define BCM_56634
 #define BCM_56624
 #define BCM_56304
 #define BCM_56800
 #define BCM_FIREBOLT_SUPPORT
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/drv_if.h esw_sdk_final/include/soc/drv_if.h
--- sdk-xgs-robo-6.4.8/include/soc/drv_if.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/drv_if.h	2018-01-10 11:53:53.223376000 +0000
@@ -765,12 +765,22 @@ typedef struct{
 	int (*led_funcgrp_select_get)(int unit,int port,int *led_group);
 	int (*led_funcgrp_select_set)(int unit,int port,int led_group);
 	int (*led_mode_get)(int unit,int port,uint32 *led_mode);
 	int (*led_mode_set)(int unit,int port,uint32 led_mode);
 	int (*igmp_mld_snoop_mode_get)(int unit,int type,int *mode);
 	int (*igmp_mld_snoop_mode_set)(int unit,int type,int mode);
+    /* Egress vlan tranlation */
+#ifdef LVL7_FIXUP
+    int (*vlan_evt_entry_add)(int unit, int port, int *evr_id, int out_op, uint16 out_vid,
+                              int in_op, uint16 in_vid);
+    int (*vlan_evt_entry_delete)(int unit, int port, int evr_id);
+    int (*vlan_evt_entry_get)(int unit, int port, int evr_id, int *out_op, uint16 *out_vid,
+                              int *in_op, uint16 *in_vid);
+    int (*vlan_evt_entry_modify)(int unit, int port, int evr_id, int out_op, uint16 out_vid,
+                              int in_op, uint16 in_vid);
+#endif
 	int (*wred_init)(int unit);
 	int (*wred_config_create)(int unit,uint32 flags,drv_wred_config_t *config,int *wred_id);
 	int (*wred_config_set)(int unit,int wred_id,drv_wred_config_t *config);
 	int (*wred_config_get)(int unit,int wred_id,drv_wred_config_t *config);
 	int (*wred_config_destroy)(int unit,int wred_id);
 	int (*wred_map_attach)(int unit,int wred_id,drv_wred_map_info_t *map);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/field.h esw_sdk_final/include/soc/field.h
--- sdk-xgs-robo-6.4.8/include/soc/field.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/field.h	2018-01-10 11:53:53.183376000 +0000
@@ -52,15 +52,20 @@
 #include <soc/types.h>
 #if defined(BCM_ESW_SUPPORT) || defined(BCM_SBX_SUPPORT) || defined(BCM_PETRA_SUPPORT) || defined(BCM_DFE_SUPPORT) || defined(PORTMOD_SUPPORT)
 #include <soc/mcm/allenum.h>
 #endif
 #include <soc/schanmsg.h>
 #include <soc/types.h>
+/* PTin modified: SDK 6.3.0 */
+#ifdef LVL7_FIXUP
+#include <soc/robo/mcm/allenum.h>
+#else
 #ifdef BCM_ROBO_SUPPORT
 #include <soc/robo/mcm/allenum.h>
 #endif      
+#endif
 
 #ifdef BCM_EA_SUPPORT    
 #include <soc/ea/allenum.h>
 #endif
 
 /* Values for flags */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/i2c.h esw_sdk_final/include/soc/i2c.h
--- sdk-xgs-robo-6.4.8/include/soc/i2c.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/i2c.h	2018-01-10 11:53:53.227376000 +0000
@@ -193,12 +193,16 @@ extern int soc_i2c_is_attached(int unit)
 extern void soc_i2c_show_log(int unit, int reverse);
 extern void soc_i2c_clear_log(int unit);
 extern void soc_i2c_show_speeds(int unit);
 extern char *soc_i2c_saddr_to_string(int unit, i2c_saddr_t saddr);
 extern int soc_i2c_unload_devices(int unit);
 
+#ifdef LVL7_FIXUP
+extern int soc_i2c_read_test(int unit, uint8 devid, uint8 *ptr, int len);
+extern int soc_i2c_write_test(int unit, uint8 devid, uint8 *ptr, int len);
+#endif
 /*
  * SMB commands
  */
 extern int soc_i2c_read_byte(int unit, i2c_saddr_t saddr, uint8* data);
 extern int soc_i2c_write_byte(int unit, i2c_saddr_t saddr, uint8 data);
 extern int soc_i2c_read_word(int unit, i2c_saddr_t saddr, uint16* data);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/macipadr.h esw_sdk_final/include/soc/macipadr.h
--- sdk-xgs-robo-6.4.8/include/soc/macipadr.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/macipadr.h	2018-01-10 11:53:53.183376000 +0000
@@ -50,12 +50,13 @@
 #define _SYS_MACIPADR_H
 
 #include <sal/core/libc.h>
 #include <soc/types.h>
 #include <shared/l3.h>
 
+typedef uint8   mac_addr_t[6];          /* MAC address */   /* PTin added: SDK compatibility */
 typedef _shr_ip_addr_t  ip_addr_t;      /* IP Address */
 typedef _shr_ip6_addr_t  ip6_addr_t;    /* IPv6 Address */
 
 extern const sal_mac_addr_t _soc_mac_spanning_tree;
 extern const sal_mac_addr_t _soc_mac_all_routers;
 extern const sal_mac_addr_t _soc_mac_all_zeroes;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/mcm/allenum.h esw_sdk_final/include/soc/mcm/allenum.h
--- sdk-xgs-robo-6.4.8/include/soc/mcm/allenum.h	2015-10-21 01:59:44.000000000 +0100
+++ esw_sdk_final/include/soc/mcm/allenum.h	2018-01-10 11:53:53.219376000 +0000
@@ -306,12 +306,34 @@
 #ifdef BCM_ESW_SUPPORT
 # if !defined(NO_BCM_56685_B0)
 #  define BCM_56685_B0
 # endif
 #endif
 
+/* PTin added: new switch 56689 (Valkyrie2) */
+#ifdef BCM_ESW_SUPPORT
+# if !defined(NO_BCM_56689_A0)
+#  define BCM_56685_A0
+#  define BCM_56689_A0
+# endif
+#endif
+
+#ifdef BCM_ESW_SUPPORT
+# if !defined(NO_BCM_56689_B0)
+#  define BCM_56685_B0
+#  define BCM_56689_B0
+# endif
+#endif
+
+#ifdef BCM_ESW_SUPPORT
+# if !defined(NO_BCM_56643_B0)
+#  define BCM_56643_B0
+# endif
+#endif
+/* PTin end */
+
 #ifdef BCM_ESW_SUPPORT
 # if !defined(NO_BCM_56334_A0)
 #  define BCM_56334_A0
 # endif
 #endif
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/phy.h esw_sdk_final/include/soc/phy.h
--- sdk-xgs-robo-6.4.8/include/soc/phy.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/phy.h	2018-01-10 11:53:53.231376000 +0000
@@ -684,12 +684,37 @@ typedef struct soc_phy_wcmod_uc_desc_s{
 /* Forward def */
 typedef struct soc_phy_table_s soc_phy_table_t;
 typedef int (*soc_phy_ident_f)(int unit, soc_port_t port,
                                soc_phy_table_t *my_entry,
                                uint16 phy_id0, uint16 phy_id1,
                                soc_phy_info_t *pi);
+#ifdef LVL7_FIXUP
+/* SDK only provides a way to configure a single phy address for
+ * each port, whereas some of the customer boxes have different
+ * phy addresses for same port. So we use the custom driver
+ * (registered in FP application) checkphy fuction to look for
+ * device ids at the secondary phy addresses, and return SUCESS
+ * if match is successful). _ext_phy_probe() uses two pointer
+ * variables - pi and ext_pc. We manage to run our own custom
+ * _check_phy function, which does the OUI check for us. But
+ * our requirement is to change the phy addresses and other
+ * parameters maintained in structures pointed to by pi
+ * (soc_phy_info_t) and ext_pc(phy_ctrl_t), in  case the match
+ * is successful.  We don't have a way to do that unless we run
+ * our custom function below, or SDK functions are re-designed
+ * to facilitate this operation.
+ */
+typedef int (*soc_phy_cust_f)(int unit, soc_port_t port,
+                              soc_phy_table_t *my_entry,
+                              soc_phy_info_t *pi, phy_ctrl_t *int_pc);
+struct soc_phy_cust_s
+{
+    soc_phy_cust_f  custPhySettings;
+};
+typedef struct soc_phy_cust_s soc_phy_cust_t;
+#endif
 
 /* For identifying phy */
 struct soc_phy_table_s {
     soc_phy_ident_f     checkphy;       /* call back to check for this phy */
     soc_known_phy_t     myNum;          /* For known phys, its enum val */
     char                *phy_name;      /* Phy Name */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/include/soc/property.h esw_sdk_final/include/soc/property.h
--- sdk-xgs-robo-6.4.8/include/soc/property.h	2015-10-21 01:59:45.000000000 +0100
+++ esw_sdk_final/include/soc/property.h	2018-01-10 11:53:53.227376000 +0000
@@ -489,12 +489,16 @@
 /* This specifies the external PHY device is BCM5690. */
 #define spn_PHY_5690  "phy_5690"
 
 /* This specifies the external PHY device is BCM8706 and equivalent. */
 #define spn_PHY_8706  "phy_8706"
 
+#ifdef LVL7_FIXUP
+#define spn_PHY_VIRTUALCOMBO            "phy_virtualcombo"
+#endif
+
 /* This specifies the external PHY device is BCM8072 and equivalent. */
 #define spn_PHY_8072  "phy_8072"
 
 /* This specifies the external PHY device is BCM84740. */
 #define spn_PHY_84740  "phy_84740"
 
@@ -2523,12 +2527,26 @@
  * \[:<number of lanes for management or Front-panel and Higig port>\]
  * :l option applies only to BCM56860 and cannot be used for inactive ports i.e.
  * cannot be used with :i.
  *  Valid Phy lane configs: 442/244/343. Valid fallback phy options: 0/1/2. Applicable to BCM56860 device family.
  */
 #define spn_PORTMAP  "portmap"
+#ifdef LVL7_FIXUP
+#define spn_PORT_PHY_ADDR "port_phy_addr"
+#define spn_LED_MODE_CUST "led_mode_cust"
+#define spn_PORT_PHY_ADDR_XE            "port_phy_addr_xe"
+#define spn_PORT_COMBO_VIRTUAL_PHY      "port_combo_virtual_phy"
+#define spn_PORT_VIRTUAL_PHY_ADDR       "port_virtual_phy_addr"
+#define spn_PORT_VIRTUAL_PREF_PHYNUM    "port_virtual_pref_phy"
+#define spn_PORT_VIRTUAL_ACTIVE_DRIV    "port_virtual_activ_driv"
+#define spn_BCM56638_4X12_2X24          "bcm56638_4x12_2x24"
+#define spn_HELPCLI_ENABLE              "help_cli_enable"
+#define spn_SERDES_LANE0_RESET          "serdes_lane0_reset"
+#define spn_PORT_INTERNAL               "port_internal"
+#define spn_PORT_SUPER_ISOLATE          "port_super_isolate"
+#endif
 /*
  * Specifies the number of lanes used by each port in the flex port group.
  * portgroup_<port group>=<number of lanes>.
  * Applicable to BCM566xx and BCM565xx device family
  */
 #define spn_PORTGROUP  "portgroup"
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.config esw_sdk_final/make/Make.config
--- sdk-xgs-robo-6.4.8/make/Make.config	2015-10-21 01:59:47.000000000 +0100
+++ esw_sdk_final/make/Make.config	2018-01-10 11:53:52.799376000 +0000
@@ -51,12 +51,13 @@ $(error Make $(MAKE_VERSION) not support
 endif
 
 
 ifeq (${BCM_HIDE_DISPATCHABLE},1)
 CFGFLAGS += -DBCM_HIDE_DISPATCHABLE
 endif
+LVL7_FIXUP = 1
 
 ifeq (${WAN_PORT_SUPPORT},1)
 CFGFLAGS += -DWAN_PORT_SUPPORT
 endif
 
 ifeq (${IPROC_NO_ATL},1)
@@ -603,13 +604,14 @@ else
 _ROBO_FEATURE_LIST = L3 I2C BCMX BCMX_DIAG EDITLINE TEST CINT
 endif
 endif
 
 ifdef ESW_CHIPS
 _ESW_FEATURE_LIST = L3 I2C BCMX BCMX_DIAG MEM_SCAN EDITLINE RCPU OOB_RCPU CUSTOMER \
-    TEST CHASSIS CINT PTP BFD
+    TEST CHASSIS CINT PTP		#PTIN changed (original on next line)
+#    TEST CHASSIS CINT PTP BFD BHH
 #
 # CES is only supported on Katana devices.
 #
 ifdef BCM_56440_A0 
 _ESW_FEATURE_LIST += CES
 endif
@@ -647,13 +649,13 @@ endif
 ifdef DFE_CHIPS
 _DFE_FEATURE_LIST = L3 EDITLINE CUSTOMER TEST CHASSIS CINT
 endif
 
 _ALL_FEATURE_LIST = ${_ROBO_FEATURE_LIST} ${_ESW_FEATURE_LIST} \
 		  ${_SBX_FEATURE_LIST} ${_EA_FEATURE_LIST} ${_DPP_FEATURE_LIST} \
-                  ${_DFE_FEATURE_LIST}
+                  ${_DFE_FEATURE_LIST} ${SDK_FEATURE_LIST_ADD}
 
 FEATURE_LIST = $(sort ${_ALL_FEATURE_LIST})
 
 ifeq ($(targetbase),vxworks)
 FEATURE_LIST +=	TELNET
 FEATURE_LIST += DRIVERS
@@ -917,12 +919,15 @@ endif
 all_suffix = ${chip_suffix}${target_suffix}
 
 #
 # Default location to place binaries and make depend files for building
 # purposes.
 #
+ifdef LVL7_FIXUP
+BLDROOT = $(L7_OUTPUT)/$(target)${all_suffix}${bldroot_suffix}
+else
 ifeq "$(HOSTTYPE)" "Windows2000PC"
 BLDROOTWITHDRIVE = ${SDK}/build/${target}${all_suffix}${bldroot_suffix}
 BLDROOT = ${SDK_NO_DRIVE_NAME}/build/${target}${all_suffix}${bldroot_suffix}
 else # ifeq "$(HOSTTYPE)" "Windows2000PC"
 
 ifndef SDKBUILD
@@ -937,12 +942,14 @@ endif # ifeq "$(HOSTTYPE)" "Windows2000P
 ifndef DEST_DIR_SUFFIX
 export DEST_DIR_SUFFIX :=$(subst $(realpath $(SDK))/systems,,$(realpath $(CURDIR)/$(dir ($(firstword $(MAKEFILE_LIST))))))
 ifeq ($(MAKELEVEL),0)
 endif
 endif
 
+endif #end LVL7_FIXUP 
+
 ifeq ($(DEST_DIR),)
 export DEST_DIR :=${SDK}/${SDKBUILD}$(if ${BLDCONFIG},/${BLDCONFIG})$(DEST_DIR_SUFFIX)
 endif
 
 ifdef LOCALDIR
 BLDDIR = ${BLDROOT}/${LOCALDIR}
@@ -1172,12 +1179,17 @@ install_bin	= ${SDK}/export/bin/${target
 INCFLAGS = -I${INCDIR} -I${SDK}/systems
 
 CFLAGS += ${INCFLAGS}
 CXXFLAGS += ${INCFLAGS}
 CPPFLAGS += ${INCFLAGS}
 
+ifdef LVL7_FIXUP
+CFLAGS += $(L7_BCM_VENDOR_INCL) $(L7_BCM_VENDOR_CFLAGS)
+CXXFLAGS += $(L7_BCM_VENDOR_INCL)
+CPPFLAGS += $(L7_BCM_VENDOR_INCL)
+endif
 #
 # Debug #ifdef control
 #
 # Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
 # It is recommended to leave debug enabled when developing applications.
 #
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Makefile.linux-gto-2_6 esw_sdk_final/make/Makefile.linux-gto-2_6
--- sdk-xgs-robo-6.4.8/make/Makefile.linux-gto-2_6	2015-10-21 01:59:47.000000000 +0100
+++ esw_sdk_final/make/Makefile.linux-gto-2_6	2018-01-10 11:53:52.799376000 +0000
@@ -199,19 +199,19 @@ ifeq (,$(LINUX_INCLUDE))
 LINUX_INCLUDE := $(KERNDIR)/include
 endif
 
 CFGFLAGS += -DSYS_BE_PIO=1 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=1
 ENDIAN = BE_HOST=1
 CFGFLAGS += -D$(ENDIAN) 
-CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8548\"
+CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8270\"
 CFGFLAGS += -DSAL_BDE_DMA_MEM_DEFAULT=32
 
 # Extra variables.
 EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)
 
-ARCH = powerpc
+ARCH = ppc
 KBUILD_VERBOSE = 1
 
 export ARCH KBUILD_VERBOSE 
 
 
 # From linux/arch/ppc/Makefile
@@ -236,13 +236,13 @@ ifeq (4.1,$(ELDK_VERSION))
 ifeq (ELDK,$(BUILD_PLATFORM))
 KFLAG_INCLD = /tools/eldk/4.1/usr/lib/gcc/powerpc-linux/4.0.0/include
 endif
 endif
 
 ifeq (2.0,$(WRS_LINUX_VERSION))
-KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.1.2/include
+KFLAG_INCLD = /opt/freescale/usr/local/gcc-4.0.2-glibc-2.3.6-nptl-2/powerpc-e300c3-linux/lib/gcc/powerpc-e300c3-linux/4.0.2/include
 endif
 
 ifeq (3.0,$(WRS_LINUX_VERSION))
 KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.3.2/include
 endif
 endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Makefile.linux-kernel-3_0 esw_sdk_final/make/Makefile.linux-kernel-3_0
--- sdk-xgs-robo-6.4.8/make/Makefile.linux-kernel-3_0	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/Makefile.linux-kernel-3_0	2018-01-10 11:53:52.803376000 +0000
@@ -0,0 +1,173 @@
+# $Id: Makefile.linux-kernel-2_6 1.41 Broadcom SDK $
+# $Copyright: Copyright 2012 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+# Configuration Flags
+
+# Filter out features that cannot or should not be supported in kernel mode
+
+_FEATURE_EXCLUDE_LIST += EDITLINE TCL OOB_RCPU CINT APIMODE DUNE_UI C_UNIT
+FEATURE_EXCLUDE_LIST = $(sort $(_FEATURE_EXCLUDE_LIST))
+
+# Tools
+
+# Conditionally Replaces DEFAULT var
+ifeq ($(origin CC),default)
+CC	= $(LSRUN) $(CROSS_COMPILE)gcc
+endif
+
+ifeq ($(origin CXX),default)
+CXX	= $(CROSS_COMPILE)g++
+endif
+
+ifeq ($(origin LD),default)
+LD	= $(CROSS_COMPILE)ld
+endif
+
+ifeq ($(origin AR),default)
+AR	= $(CROSS_COMPILE)ar
+endif
+
+ifeq ($(origin AS),default)
+AS	= $(CROSS_COMPILE)as
+endif
+
+ifeq ($(origin ARFLAGS),default)
+	ARFLAGS	= -rc
+endif
+
+STRIP	= $(CROSS_COMPILE)strip
+RANLIB  = $(CROSS_COMPILE)ranlib
+OBJCOPY = $(CROSS_COMPILE)objcopy
+NM      = $(CROSS_COMPILE)nm
+
+# Handle differences between gcc 2.x and gcc 3.x
+gcc-tune-flag = $(shell if ${CC} -dumpspecs | grep mcpu >/dev/null; then echo cpu; else echo tune; fi)
+
+# Configuration Variables
+
+# OSType Defines: This defines the type of RTOS or microkernel which you
+# are compiling the SAL (and its associated driver) for. New platforms
+# can be created by porting the routines (system.c) to your platform and
+# adding the define in this Makefile.
+
+OSTYPE = LINUX
+
+#
+# ORIGIN is used to Optionally select different CFLAGS. It is used to import
+# source from other vendors. If SOURCE=Broadcom, then the BCM_ flags are added
+# to those passed to the compiler. If SOURCE != Broadcom, BCM_ flags are NOT
+# added.
+#
+# Default specifies Broadcom
+#
+ifndef ORIGIN
+	ORIGIN = Broadcom
+endif
+
+#
+# STD_{C|CPP|CXX}FLAGS - Standard flags used by ALL compilations
+# BCM_{C|CPP|CXX}FLAGS - Flags used for Broadcom source files
+# OPT_{C|CPP|CXX}FLAGS - Defined in local make files BEFORE inclusion of 
+#			 this Makefile, to define local "Extra" flags.
+#
+
+ifdef IPROC_BUILD
+CFGFLAGS += -I$(SDK)/systems/linux/kernel/modules/include \
+	    -I$(SDK)/systems/bde/linux/include \
+	    -I$(LINUX_INCLUDE) \
+            -I$(KERNDIR)/arch/$(ARCH)
+else
+CFGFLAGS += -I$(SDK)/systems/linux/kernel/modules/include \
+	    -I$(SDK)/systems/bde/linux/include \
+	    -I$(LINUX_INCLUDE) \
+	    -I$(LINUX_INCLUDE)/asm/gcc \
+	    -I$(LINUX_INCLUDE)/asm/mach-generic \
+            -I$(KERNDIR)/arch/$(ARCH)
+endif
+
+CFGFLAGS += -DNO_FILEIO -DNO_CTRL_C -DNO_MEMTUNE
+
+CFGFLAGS += -D$(OSTYPE)
+
+# No user sal for the linux kernel
+# NO_SAL_APPL=1
+
+STD_CFLAGS = $(KFLAGS) $(CFGFLAGS)
+
+
+STD_CPPFLAGS = ${STD_CFLAGS}
+STD_CXXFLAGS = ${STD_CFLAGS}
+
+ifndef BCM_CFLAGS
+BCM_CFLAGS   = -Wall -Werror
+BCM_CFLAGS  += -Wno-unused-but-set-variable -Wno-enum-compare -Wno-address -Wno-uninitialized -Wno-sequence-point -Wno-switch
+endif
+
+BCM_CPPFLAGS = ${BCM_CFLAGS}
+BCM_CXXFLAGS = ${BCM_CFLAGS}
+
+ifeq (${ORIGIN}, Broadcom)
+	CFLAGS   += ${STD_CFLAGS}   ${BCM_CFLAGS}   ${OPT_CFLAGS}
+	CPPFLAGS += ${STD_CPPFLAGS} ${BCM_CPPFLAGS} ${OPT_CPPFLAGS}
+	CXXFLAGS += ${STD_CXXFLAGS} ${BCM_CXXFLAGS} ${OPT_CXXFLAGS}
+else
+	CFLAGS   += ${STD_CFLAGS}   ${OPT_CFLAGS}
+	CPPFLAGS += ${STD_CPPFLAGS} ${OPT_CPPFLAGS}
+	CXXFLAGS += ${STD_CXXFLAGS} ${OPT_CXXFLAGS}
+endif
+
+#
+# Ignore pedantic flag for kernel modules
+#
+ifdef DEBUG_PEDANTIC
+DEBUG_PEDANTIC = FALSE
+endif
+
+#
+# DEPEND is used as a command to generate the list of dependencies.
+# The format of the output must be 
+#	"file.o : file.c a/b/c.h d/e/f.h ...", 
+# if it is on multiple lines, each line must end in a backslash. 
+# The output MUST be on standard out.
+#
+DEPEND = ${CC} -M $(CFLAGS) $< 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.linux esw_sdk_final/make/Make.linux
--- sdk-xgs-robo-6.4.8/make/Make.linux	2015-10-21 01:59:47.000000000 +0100
+++ esw_sdk_final/make/Make.linux	2018-01-10 11:53:52.803376000 +0000
@@ -56,12 +56,21 @@
 #
 # LINUX_MAKE_DIR
 #   Common makefile location, if it is not ../common
 #
 #
 
+LVL7_FIXUP = 1
+
+ifdef LVL7_FIXUP
+  ifdef QUIET
+    MAKE := @$(MAKE)
+  endif
+  MAKE := +$(MAKE)
+endif
+
 export DEST_DIR_SUFFIX :=$(subst $(realpath $(SDK))/systems,,$(realpath $(CURDIR)/$(dir ($(firstword $(MAKEFILE_LIST))))))
 
 ifeq (,$(kernel_version))
 kernel_version=2_4
 endif
 
@@ -116,6 +125,13 @@ clean_d: clean
 
 distclean:
 	$(MAKE) $(CMD) $@
 
 .PHONY: build clean distclean clean_d DELIVER variable mod bcm user
 
+
+ifdef LVL7_FIXUP
+.PHONY: get_sdk_flags
+
+get_sdk_flags:
+	$(MAKE) $(CMD) get_sdk_flags
+endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.local.xgs3 esw_sdk_final/make/Make.local.xgs3
--- sdk-xgs-robo-6.4.8/make/Make.local.xgs3	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/Make.local.xgs3	2018-01-10 11:53:52.799376000 +0000
@@ -0,0 +1,400 @@
+# $Id: Make.local.template,v 1.64.4.6 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscelaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Enable RPC flexible (long) bitmaps.
+# Warning: Enabling this bumps the RPC version to 3 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_FLEX_PBMP
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+DISPATCH_LIST = RPC ESW
+
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     ASE
+#     BCMX
+#     BCMX_DIAG
+#     BSAFE
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TCL
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE ASE \
+    CUSTOMER TEST ACL 
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+BCM_56304_B0 = 1
+BCM_56314_A0 = 1
+BCM_56504_A0 = 1
+BCM_56504_B0 = 1
+BCM_56514_A0 = 1
+#BCM_56601_A0 = 1
+#BCM_56602_A0 = 1
+#BCM_56601_B0 = 1
+#BCM_56602_B0 = 1
+#BCM_56601_C0 = 1
+#BCM_56602_C0 = 1
+#BCM_56624_A0 = 1
+#BCM_56624_B0 = 1
+#BCM_56680_A0 = 1
+#BCM_56580_A0 = 1
+#BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56725_A0 = 1
+#BCM_56820_A0 = 1
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5482 5421S SERDES SIMUL 8703 8705 EMPTY 
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts; Will move to tcl 
+# someday
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.local.xgs4 esw_sdk_final/make/Make.local.xgs4
--- sdk-xgs-robo-6.4.8/make/Make.local.xgs4	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/Make.local.xgs4	2018-01-10 11:53:52.803376000 +0000
@@ -0,0 +1,523 @@
+# $Id: Make.local.template,v 1.142.6.5 Broadcom SDK $
+# $Copyright: Copyright 2011 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscellaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Disable RPC flexible (long) bitmaps.
+# Warning: Disabling this changes the RPC version to 2 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_PBMP_64
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR+DK_WARN"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+# ESW is the enterprise platforms.
+# ROBO includes the managed devices.
+# SBX AND FE2000 include API support for bcm988020QSK24X2
+#DISPATCH_LIST = RPC ESW ASYNC SBX FE2000
+DISPATCH_LIST = RPC ESW
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     BCMX
+#     BCMX_DIAG
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#     KNET - Linux user mode kernel network support
+#     BCM_SAL_PROFILE - make available an API to track SAL usage.
+#     CINT - Include the C Interpreter in the diagnostic shell. 
+#            Please note this cannot be used in Linux kernel mode. 
+#     PHY_SYM_DBG - PHY GUI MDIO read/write support. Socket interface
+#                   to PHY GUI for Symbolic debugging.
+#
+#FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+#    CUSTOMER TELNET DRIVERS CHASSIS TEST ACL RCPU BCM_SAL_PROFILE CINT \
+#    MACSEC BOARD KNET
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+    CUSTOMER TEST ACL
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+#BCM_56304_B0 = 1
+#BCM_56314_A0 = 1
+#BCM_56504_A0 = 1
+#BCM_56504_B0 = 1
+#BCM_56514_A0 = 1
+BCM_56601_A0 = 1
+BCM_56602_A0 = 1
+BCM_56601_B0 = 1
+BCM_56602_B0 = 1
+BCM_56601_C0 = 1
+BCM_56602_C0 = 1
+BCM_56624_A0 = 1
+BCM_56624_B0 = 1
+BCM_56680_A0 = 1
+#BCM_56685_A0 = 1
+BCM_56580_A0 = 1
+BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56224_B0 = 1
+#BCM_56725_A0 = 1
+BCM_56820_A0 = 1
+#BCM_53314_A0 = 1
+#BCM_53324_A0 = 1
+BCM_56634_A0 = 1
+BCM_56634_B0 = 1
+BCM_56524_A0 = 1
+BCM_56524_B0 = 1
+BCM_56685_A0 = 1
+BCM_56685_B0 = 1
+BCM_56334_A0 = 1
+BCM_56334_B0 = 1
+# PTin added: this driver cannot be compiled with PQ2 compiler
+# Anyway, it won't be needed on those platforms
+ifeq ($(L7_CPU),pq3)
+BCM_56840_A0 = 1
+BCM_56840_B0 = 1
+endif
+ifeq ($(L7_CPU),e500mc)
+BCM_56840_A0 = 1
+BCM_56840_B0 = 1
+endif
+#BCM_56142_A0 = 1
+#BCM_56836_A0 = 1
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+#BCM_88230_A0 = 1
+#BCM_88230_B0 = 1
+#BCM_88230_C0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 EMPTY
+BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 5942
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for BOARD library
+# if BOARD_LIST is defined, it is a list of Board drivers to include.
+# The default is to include all board drivers appropriate for the devices
+# included in the build. If none of them should be included specify
+# BOARD_LIST=EMPTY.
+#BOARD_LIST=GENERIC
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+# Support for BCM API port translation
+#CFGFLAGS += -DINCLUDE_BCM_API_XLATE_PORT
+
+# Support for callback error checks and abort in traverse api's
+#CFGFLAGS += -DBCM_CB_ABORT_ON_ERR
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts.
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+# For validation purposes
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT_SW_DUMP
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+################################################################
+#
+# Use cached DMA memory when mapping kernel DMA memory to user
+# mode. Should only be enabled on cache-coherent platforms.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_CACHE_DMA_MEM
+
+################################################################
+#
+# Take the spl lock upon entering an ISR
+#
+################################################################
+#CFGFLAGS += -DSAL_SPL_LOCK_ON_IRQ
+
+################################################################
+#
+# Silently ignore NULL pointer free in sal_free API
+# Default behaviour is to assert if a NULL pointer is passed to sal_free
+#
+################################################################
+#CFGFLAGS += -DSAL_FREE_NULL_IGNORE
+
+################################################################
+# Enable SBX MPLS TP support
+################################################################
+#CFGFLAGS += -DBCM_SBX_MPLSTP_SUPPORT
+
+################################################################
+# For historical reasons the PCI probe function skips device 12
+# by default to prevent a system hang on certain platforms.
+# Set this value to zero to probe all PCI devices.
+################################################################
+#CFGFLAGS += -DOVERRIDE_PCI_SKIP_DEV_MASK=0
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.local.xgs5 esw_sdk_final/make/Make.local.xgs5
--- sdk-xgs-robo-6.4.8/make/Make.local.xgs5	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/Make.local.xgs5	2018-01-10 11:53:52.799376000 +0000
@@ -0,0 +1,540 @@
+# $Id: Make.local.template,v 1.142.6.5 Broadcom SDK $
+# $Copyright: Copyright 2011 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscellaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Disable RPC flexible (long) bitmaps.
+# Warning: Disabling this changes the RPC version to 2 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_PBMP_64
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR+DK_WARN"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+# ESW is the enterprise platforms.
+# ROBO includes the managed devices.
+# SBX AND FE2000 include API support for bcm988020QSK24X2
+#DISPATCH_LIST = RPC ESW ASYNC SBX FE2000
+DISPATCH_LIST = RPC ESW
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     BCMX
+#     BCMX_DIAG
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#     KNET - Linux user mode kernel network support
+#     BCM_SAL_PROFILE - make available an API to track SAL usage.
+#     CINT - Include the C Interpreter in the diagnostic shell. 
+#            Please note this cannot be used in Linux kernel mode. 
+#     PHY_SYM_DBG - PHY GUI MDIO read/write support. Socket interface
+#                   to PHY GUI for Symbolic debugging.
+#
+#FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+#    CUSTOMER TELNET DRIVERS CHASSIS TEST ACL RCPU BCM_SAL_PROFILE CINT \
+#    MACSEC BOARD KNET
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+    CUSTOMER TEST ACL
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+#BCM_56304_B0 = 1
+#BCM_56314_A0 = 1
+#BCM_56504_A0 = 1
+#BCM_56504_B0 = 1
+#BCM_56514_A0 = 1
+BCM_56601_A0 = 1
+BCM_56602_A0 = 1
+BCM_56601_B0 = 1
+BCM_56602_B0 = 1
+BCM_56601_C0 = 1
+BCM_56602_C0 = 1
+BCM_56624_A0 = 1
+BCM_56624_B0 = 1
+BCM_56680_A0 = 1
+#BCM_56685_A0 = 1
+BCM_56580_A0 = 1
+BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56224_B0 = 1
+#BCM_56725_A0 = 1
+BCM_56820_A0 = 1
+#BCM_53314_A0 = 1
+#BCM_53324_A0 = 1
+BCM_56634_A0 = 1
+BCM_56634_B0 = 1
+BCM_56524_A0 = 1
+BCM_56524_B0 = 1
+BCM_56685_A0 = 1
+BCM_56685_B0 = 1
+BCM_56334_A0 = 1
+BCM_56334_B0 = 1
+# PTin added: this driver cannot be compiled with PQ2 compiler
+# Anyway, it won't be needed on those platforms
+ifeq ($(L7_CPU),pq3)
+BCM_56840_A0 = 1
+BCM_56840_B0 = 1
+endif
+ifeq ($(L7_CPU),e500mc)
+BCM_56840_A0 = 1
+BCM_56840_B0 = 1
+endif
+ifeq ($(L7_CPU),helixarm)
+BCM_56340_A0 = 1
+BCM_56340_B0 = 1
+endif
+ifeq ($(L7_CPU),katanaarm)
+BCM_56450_A0 = 1
+BCM_56450_B0 = 1
+BCM_56450_B1 = 1
+endif
+ifeq ($(L7_CPU),katanaarmlc)
+BCM_56450_A0 = 1
+BCM_56450_B0 = 1
+BCM_56450_B1 = 1
+endif
+#BCM_56142_A0 = 1
+#BCM_56836_A0 = 1
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+#BCM_88230_A0 = 1
+#BCM_88230_B0 = 1
+#BCM_88230_C0 = 1
+
+BCM_56640_A0 = 1
+BCM_56640_B0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 EMPTY
+BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 5942
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for BOARD library
+# if BOARD_LIST is defined, it is a list of Board drivers to include.
+# The default is to include all board drivers appropriate for the devices
+# included in the build. If none of them should be included specify
+# BOARD_LIST=EMPTY.
+#BOARD_LIST=GENERIC
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+# Support for BCM API port translation
+#CFGFLAGS += -DINCLUDE_BCM_API_XLATE_PORT
+
+# Support for callback error checks and abort in traverse api's
+#CFGFLAGS += -DBCM_CB_ABORT_ON_ERR
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts.
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+# For validation purposes
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT_SW_DUMP
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+################################################################
+#
+# Use cached DMA memory when mapping kernel DMA memory to user
+# mode. Should only be enabled on cache-coherent platforms.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_CACHE_DMA_MEM
+
+################################################################
+#
+# Take the spl lock upon entering an ISR
+#
+################################################################
+#CFGFLAGS += -DSAL_SPL_LOCK_ON_IRQ
+
+################################################################
+#
+# Silently ignore NULL pointer free in sal_free API
+# Default behaviour is to assert if a NULL pointer is passed to sal_free
+#
+################################################################
+#CFGFLAGS += -DSAL_FREE_NULL_IGNORE
+
+################################################################
+# Enable SBX MPLS TP support
+################################################################
+#CFGFLAGS += -DBCM_SBX_MPLSTP_SUPPORT
+
+################################################################
+# For historical reasons the PCI probe function skips device 12
+# by default to prevent a system hang on certain platforms.
+# Set this value to zero to probe all PCI devices.
+################################################################
+#CFGFLAGS += -DOVERRIDE_PCI_SKIP_DEV_MASK=0
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/make.pkg.vendor esw_sdk_final/make/make.pkg.vendor
--- sdk-xgs-robo-6.4.8/make/make.pkg.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/make.pkg.vendor	2018-01-10 11:53:52.803376000 +0000
@@ -0,0 +1,20 @@
+# Vendor makefile definitions included by andl package.
+# 
+# NOTE: The vendor source files are built using the Broadcom
+#       SDK make system, so none of the usual FASTPATH make 
+#       variables are used here.
+#
+#       See corresponding file makerules.pkg.vendor for details.
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Names of include files used to connect FASTPATH and SDK make systems.
+#
+export SDK_BUILD_FILE      := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_BUILD_FILE_NAME)
+export SDK_FLAGS_FILE      := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_FLAGS_FILE_NAME)
+export SDK_FLAGS_TEMP_FILE := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_FLAGS_FILE_NAME).tmp
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/makerules.link.vendor esw_sdk_final/make/makerules.link.vendor
--- sdk-xgs-robo-6.4.8/make/makerules.link.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/makerules.link.vendor	2018-01-10 11:53:52.803376000 +0000
@@ -0,0 +1,35 @@
+# Broadcom vendor SDK build rules included by ipl package.
+#
+
+# Define list of kernel modules to use.
+#
+# Note: Caller must set up $(out_kmod) and $(out_target) for use here.
+#       Example:
+#                 out_kmod   := $(FP_BASE)/$(OUT_KMOD)
+#                 out_target := $(FP_BASE)/$(OUT_TARGET)
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  kernelobjs := $(addprefix $(out_target)/,$(filter %.ko,$(L7_MODULE_LIST)))
+endif
+
+kmod_file = $(patsubst $(out_target)/%,$(out_kmod)/%,$@)
+
+
+ifneq (,$(COPYING_MSG))
+  copying_msg1 = $(COPYING_MSG) "$(notdir $(kmod_file)) to $(patsubst %/,%,$(subst ../,,$(dir $@)))"
+endif
+
+
+# Put out an error message if the kernel modules do not exist in the output target directory.
+#
+ifneq (,$(strip $(kernelobjs)))
+  $(kernelobjs):
+	@if [ ! -s $(kmod_file) ] ;\
+	then \
+		$(echo) "Error: The $(kmod_file) file is missing." ; \
+		$(echo) "  (This should have been built during 'bldlib' processing.)" ; \
+		exit 60 ; \
+	fi
+	$(copying_msg1)
+	$(DBG) cp -f $(kmod_file) $@
+endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/makerules.pkg.vendor esw_sdk_final/make/makerules.pkg.vendor
--- sdk-xgs-robo-6.4.8/make/makerules.pkg.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/makerules.pkg.vendor	2018-01-10 11:53:52.803376000 +0000
@@ -0,0 +1,129 @@
+# This file defines special package-level build rules.
+#
+# Note: The vendor source files listed here are built into individual archive
+#       files which are subsequently included when pre-linking the package 
+#       library.
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Vendor output log file.
+#
+# Note: Using a Perl script instead of the 'grep' utility to prevent a 
+#       command error that occurs when all of the output messages are
+#       filtered by grep (thus giving a return value of 1).
+#
+grep_cmd          := $(PERL) $(FP_BASE)/src/l7tools/build/filter_sdk_output.pl
+vend_logging      := $(REDIRERR) | $(grep_cmd)
+ifeq (terse,$(CMD_DISPLAY_MODE))
+  vend_logging    := $(DEVNULL) $(REDIRERR)
+endif
+
+
+# Location where SDK archives are stored by vendor make system.
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  vend_sdk_arc := $(out_vend_sdk)/unix-user/$(L7_CPU)
+
+  ifeq (1,$(BLD_L7_TARGETOS_LINUX_26))
+    vend_sdk_arc := $(vend_sdk_arc)-2_6
+  endif
+
+  ifeq (1,$(BLD_L7_TARGETOS_LINUX_36))
+    vend_sdk_arc := $(vend_sdk_arc)-3_6
+  endif
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
+  vend_sdk_arc := $(out_vend_sdk)/$(L7_TARGETOS)-$(L7_CPU)
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_ECOS))
+  vend_sdk_arc := $(out_vend_sdk)/$(L7_TARGETOS)-$(L7_CPU)
+endif
+
+# Define list of kernel modules to build (if any).
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  krnl_module_list := $(filter %.ko,$(L7_MODULE_LIST))
+endif
+
+# A linuxhost 'sim' target trumps the L7_TARGETOS, override the value set above.
+#
+ifeq (1,$(BLD_L7_CPU_LINUXHOST))
+  vend_sdk_arc := $(out_vend_sdk)/unix-$(L7_CPU)
+endif
+
+# Temp file names.
+#
+temp1     := $(FP_BASE)/$(out_vend_sdk)/_templist1_sdk
+temp_out1 := $(FP_BASE)/$(out_vend_sdk)/$(sdk_build_file_name).tmp
+temp_out2 := $(SDK_FLAGS_TEMP_FILE)
+
+
+ifneq (,$(COPYING_MSG))
+  copying_msg1 = $(patsubst @%,%,$(COPYING_MSG)) "$(SPACE)$$i to $(OUT_TARGET)" ;
+endif
+
+
+.PHONY: clean
+
+
+# Clean vendor output archives and directories
+#
+# Note: No need to invoke the vendor make system here, since it is more efficient
+#       to simply delete all of the output files directly.
+#
+clean::
+	@echo "Removing vendor archive directories: $(out_vend_sdk)" $(HUSH)
+	+$(DBG)[ ! -d $(FP_BASE)/$(out_vend_sdk) ] || $(RM) -r $(FP_BASE)/$(out_vend_sdk)
+	$(DBG) for i in $(krnl_module_list) ; \
+	do \
+		$(RM) $(FP_BASE)/$(OUT_TARGET)/$$i ; \
+	done
+
+
+# Note:  Must ensure all output directories used by the vendor make system exist
+#        prior to invoking the vendor make file.
+#
+
+$(SDK_BUILD_FILE):
+	@echo "============================== THIS IS SDK 6.4.8 =============================="
+	@echo "Building vendor SDK" $(HUSH)
+	+$(DBG)[ -d $(FP_BASE)/$(out_vend_sdk) ] || mkdir -p $(FP_BASE)/$(out_vend_sdk)
+	+$(DBG)[ -d $(FP_BASE)/$(OUT_TARGET) ] || mkdir -p $(FP_BASE)/$(OUT_TARGET)
+    # Invoke vendor SDK make system to build all of its files.
+	+$(DBG)$(MAKE) -C $(FP_BASE)/$(BROADCOM_SDK) -f ./make/make.sdk bldlib $(vend_logging)
+    # Copy the kernel modules to the desired output location
+    # (it's done this way so the modules can be found and re-copied after a 'cleanexe').
+	$(DBG) for i in $(krnl_module_list) ; \
+	do \
+		if ! cmp -s $(FP_BASE)/$(out_vend_sdk)/$$i $(FP_BASE)/$(OUT_TARGET)/$$i ; \
+		then \
+			$(copying_msg1) \
+			cp -f $(FP_BASE)/$(out_vend_sdk)/$$i $(FP_BASE)/$(OUT_TARGET) ; \
+		fi ; \
+	done
+    # Build list of vendor archive files and store results in a temp file.
+    # Create dependency list and build rule from content file list.
+	-$(DBG) $(RM) $(temp1)
+	$(DBG) touch $(temp1)
+	$(DBG) echo -n -e "LIBARCS := " > $(temp_out1)
+	$(DBG) find $(FP_BASE)/$(vend_sdk_arc) -maxdepth 1 -type f -name "*.a" -fprintf $(temp1) "%p "
+	$(DBG) cat $(temp1) >> $(temp_out1)
+	-$(DBG) $(RM) $(temp1)
+	$(DBG) cp -f $(temp_out1) $@
+	-$(DBG) $(RM) $(temp_out1)
+
+$(SDK_FLAGS_FILE):
+	@echo "Building SDK flags file" $(HUSH)
+	+$(DBG)[ -d $(FP_BASE)/$(out_vend_sdk) ] || mkdir -p $(FP_BASE)/$(out_vend_sdk)
+	-$(DBG) $(RM) $(temp_out2)
+    # Invoke vendor SDK make system to create CFLAGS_SDK variable in $(SDK_FLAGS_TEMP_FILE).
+	+$(DBG)$(MAKE) -C $(FP_BASE)/$(BROADCOM_SDK) -f ./make/make.sdk get_sdk_flags $(vend_logging)
+	$(DBG) cp -f $(temp_out2) $@
+	-$(DBG) $(RM) $(temp_out2)
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/make.sdk esw_sdk_final/make/make.sdk
--- sdk-xgs-robo-6.4.8/make/make.sdk	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/make/make.sdk	2018-01-10 11:53:52.799376000 +0000
@@ -0,0 +1,189 @@
+# Device-level makefile definitions included by andl package.
+# 
+
+# Local source path abbreviations (for convenience).
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Pull in common make definitions.
+#
+include $(FP_ROOT)/src/l7tools/build/make.cfg
+
+# Note: Be sure to reference this using +$(VEND_MAKE) so that certain make
+#       command line parameters are passed through to the sub-makefile.
+#
+VEND_MAKE := $(DBG)$(MAKE)
+
+
+ifndef MAKE_LOCAL
+ $(error 'The $$MAKE_LOCAL environment variable is not set')
+endif
+
+# Adjust the console messages generated by the vendor make system by defining
+# its QUIET variable.
+#
+# Note: This still does not provide a sufficient level of control to mesh with
+#       the type of output messages generated by the FASTPATH make system, but
+#       it's a start.
+#
+ifneq (verbose,$(CMD_DISPLAY_MODE))
+  export QUIET=1
+endif
+
+
+# The following variables are required by the Broadcom SDK.
+#
+# Note: Want the SDK make system to store the stripped kernel modules
+#       in the vendor output directory; the FASTPATH make system will 
+#       copy them to the intended target location.
+#
+export SDK              := $(FP_ROOT)/$(BROADCOM_SDK)
+export TARGET           := $(L7_TARGETOS)-$(L7_CPU)
+export L7_PKGNAME       := $(PKGNAME)
+export L7_OUTPUT        := $(FP_ROOT)/$(out_vend_sdk)
+export L7_OUTPUT_KMOD   := $(FP_ROOT)/$(out_vend_sdk)
+export L7_OUT_SDK_FLAGS := $(SDK_FLAGS_TEMP_FILE)
+export PPC_TOOLS_DIR    := $(dir $(CROSS_COMPILE))
+export MIPS_TOOLS_DIR   := $(PPC_TOOLS_DIR)
+
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  export LINUX_INCLUDE := $(KERNEL_SRC)/include
+  export KERNDIR     := $(KERNEL_SRC)
+  os_suffix          := -2_6
+endif
+
+
+# Extra include paths to be passed to BCM vendor make.
+#
+l7_extra_inc_paths := \
+	$(L7PUBLIC_INCLDIR) \
+	$(COMPONENT_INCLDIR) \
+	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base \
+	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base/bcmsys \
+	-I$(SDK)/include/customer/$(L7_CUSTOMER)
+
+ifneq (,$(strip $(PRJ_DIR)))
+  l7_extra_inc_paths += \
+	-I$(PRJ_DIR) 
+endif
+
+ifneq (,$(strip $(BSP_DIR)))
+  l7_extra_inc_paths += \
+        -I$(BSP_DIR)
+endif
+
+ifneq (,$(strip $(BSP_DIR)))
+  l7_extra_inc_paths += \
+        -I$(BSP_DIR)
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
+  l7_extra_inc_paths += \
+	-I$(WIND_BASE)/target/config/comps/src \
+	-I$(WIND_BASE)/target/src/drv
+endif
+
+export L7_BCM_VENDOR_INCL := $(subst $(FP_BASE),$(FP_ROOT),$(l7_extra_inc_paths))
+
+
+# Additional CFLAGS to be passed to BCM vendor make.
+#
+export L7_BCM_VENDOR_CFLAGS := \
+	-DLVL7_FIXUP \
+	-DBCM_COSQ_HIGIG_MAP_DISABLE \
+	-DSAL_THREAD_PRIORITY=255 \
+	$(L7_OS_VERSION) \
+	-DSAL_NO_FLASH_FS \
+	-DRW_MULTI_THREAD \
+	$(CPU_TYPE) \
+	$(PRODUCT_TYPE) \
+  $(L7_TOOL_FLAG) \
+  -DSAL_BDE_THREAD_PRIO_DEFAULT \
+  -DVX_THREAD_OPT_UNBREAKABLE \
+  -DSDK_INCLUDE_CUSTOM_CONFIG
+
+ifneq (1,$(BLD_L7_TARGETOS_VXWORKS))
+export L7_BCM_VENDOR_CFLAGS += -DNO_FILEIO
+endif
+
+ifneq (,$(filter -mlongcall,$(CPU_FLAGS)))
+export L7_BCM_VENDOR_CFLAGS += -mlongcall
+endif
+
+# Map sal_alloc/sal_free to osapi Api's except for 
+# - MIPS64 cpu: SDK has some special code for MIPS64 in sal_alloc.
+# - Linux kernel mode
+# - Smartpath product
+
+l7_sal_map_to_osapi := 1
+
+ifeq (1,$(BLD_L7_PRODUCT_SMARTPATH))
+l7_sal_map_to_osapi := 0
+endif
+
+ifeq (MIPS64,$(CPU))
+l7_sal_map_to_osapi := 0
+endif
+
+ifeq (1,$(l7_sal_map_to_osapi))
+export L7_BCM_VENDOR_CFLAGS += \
+	-DL7_SAL_MAP_TO_OSAPI
+endif
+
+# Translate the make command goal to that used by the vendor make system.
+#
+# Note: The default is to leave this blank so that everything gets built.
+#
+vend_bld_goal   :=
+ifeq (get_sdk_flags,$(MAKECMDGOALS))
+  vend_bld_goal := get_sdk_flags
+endif
+
+
+# Decide which type of target to build.
+#
+target_type := $(L7_TARGETOS)
+ifeq (1,$(BLD_L7_CPU_LINUXHOST))
+  target_type := linuxhost
+endif
+
+# Disallow parallel build option (-j) since the underlying SDK target rules
+# are not designed to handle it properly.
+#
+new_makeflags = $(filter-out -j,$(MAKEFLAGS))
+
+
+# Special Build rules
+#  - All entries must be specified relative to top-of-view $(FP_ROOT).
+#  - Defines all source locations to be referenced by the package-level makefile.
+#
+# Note: Assumes all necessary output directories already exist.
+#
+# Note: To echo debug messages, begin the message text with "Debug: " to get past
+#       the SDK output message filter script.
+#
+
+.PHONY: bldlib get_sdk_flags vend_sdk_linux vend_sdk_vxworks vend_sdk_linuxhost
+
+
+bldlib get_sdk_flags:: vend_sdk_$(target_type)
+	$(NOOP)
+
+
+vend_sdk_linux::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/user/fastpath$(os_suffix) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+vend_sdk_ecos::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/$(L7_CPU) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+vend_sdk_vxworks::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/common $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+
+vend_sdk_linuxhost::
+	+$(VEND_MAKE) -C $(SDK)/systems/linuxhost $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/make/Make.tools esw_sdk_final/make/Make.tools
--- sdk-xgs-robo-6.4.8/make/Make.tools	2015-10-21 01:59:47.000000000 +0100
+++ esw_sdk_final/make/Make.tools	2018-01-10 11:53:52.799376000 +0000
@@ -169,12 +169,23 @@ MKVERS	=	$(PERL) ${SDK}/tools/version.pl
 RM	=	/bin/rm -rf
 CP	=	/bin/cp
 MKDIR	=	/bin/mkdir -p
 FOREACH	=	$(MKTOOL) -foreach
 MAKEDEP =	/bin/echo
 ECHO	=	/bin/echo
+ifdef LVL7_FIXUP
+ifeq "$(HOSTTYPE)" "Windows2000PC"
+RM	=	rm -rf
+CP	=	cp
+MKDIR	=	mkdir -p
+MAKEDEP =	echo
+ECHO	=	echo
+TOUCH   =	touch
+endif
+endif
+
 MKBEEP	=	$(MKTOOL) -beep
 endif
 
 MKSBXHS =	$(PERL) $(SDK)/tools/mksbxhs.pl
 
 #
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/cputrans/atp.c esw_sdk_final/src/appl/cputrans/atp.c
--- sdk-xgs-robo-6.4.8/src/appl/cputrans/atp.c	2015-10-21 01:59:47.000000000 +0100
+++ esw_sdk_final/src/appl/cputrans/atp.c	2018-01-10 11:53:52.871376000 +0000
@@ -3885,20 +3885,35 @@ bet_c2c_free_tx_cb(uint8 *pkt_buf, void
 
 STATIC void
 tx_done_handle(_atp_client_t *client, int cpu, _atp_tx_trans_t *trans)
 {
 
     if (trans->flags & _ATP_TX_F_TIMEOUT) {
+#ifdef LVL7_FIXUP
+        /* Print the mac-address of the unit */
+        LOG_ERROR(BSL_LS_TKS_ATP,
+                      (BSL_META("ATP: TX timeout, seq %d. cli %d. to %d(mac %x:%x:%x:%x:%x:%x) tx cnt %d.\n"),
+                      trans->_atp_hdr.seq_num, trans->client->client_id,
+                      trans->dest_cpu, 
+                      _atp_cpu_info[trans->dest_cpu].key.key[0],
+                      _atp_cpu_info[trans->dest_cpu].key.key[1],
+                       _atp_cpu_info[trans->dest_cpu].key.key[2],
+                       _atp_cpu_info[trans->dest_cpu].key.key[3],
+                       _atp_cpu_info[trans->dest_cpu].key.key[4],
+                       _atp_cpu_info[trans->dest_cpu].key.key[5],
+                       trans->tx_count));
+#else
         LOG_ERROR(BSL_LS_TKS_ATP,
                   (BSL_META("ATP: TX timeout, seq %d. " CPUDB_KEY_FMT 
                    " cli %d. to %d tx cnt %d.\n"),
                    trans->_atp_hdr.seq_num,
                    CPUDB_KEY_DISP(_atp_cpu_info[trans->dest_cpu].key),
                    trans->client->client_id,
                    trans->dest_cpu,
                    trans->tx_count));
+#endif
         if (atp_timeout_cb != NULL) {
             (*atp_timeout_cb)(CPU_KEY(trans->dest_cpu));
         }
     }
 
     if (trans->callback != NULL) {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/cint/sal_cint_data.c esw_sdk_final/src/appl/diag/cint/sal_cint_data.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/cint/sal_cint_data.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/cint/sal_cint_data.c	2018-01-10 11:53:52.895376000 +0000
@@ -61,12 +61,20 @@ int sal_core_cint_data_not_empty;
 #include <sal/core/thread.h>
 #include <sal/appl/config.h>
 
 #include <sal/appl/sal.h>
 
 
+/* PTin added: solve an incompatibility of CINT with LVL7_FIXUP definition */
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#undef sal_alloc
+#undef sal_free
+extern void *sal_alloc(unsigned int, char *);
+extern void sal_free(void *);
+#endif
+
 
 CINT_FWRAPPER_CREATE_RP2(void*, void, 1, 0, 
                          sal_alloc, 
                          int,int,size,0,0,
                          void*,void,name,1,0); 
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/cmdlist.c esw_sdk_final/src/appl/diag/cmdlist.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/cmdlist.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/cmdlist.c	2018-01-10 11:53:52.899376000 +0000
@@ -678,14 +678,16 @@ static cmd_t bcm_esw_cmd_list[] = {
     {"StartSim",        cmd_simstart,           NULL,                   "Tell plisim to activate" },
 #endif
     {"STG",             if_esw_stg,             if_esw_stg_usage,       "Manage spanning tree groups" },
     {"STiMeout",        cmd_stimeout,           stimeout_usage,         "Set S-Channel timeout in microseconds" },
     {"STKMode",         cmd_stkmode,            cmd_stkmode_usage,       "Hardware Stacking Mode Control"},
 #if defined(TKS_SUPPORT)
+#if LVL7_FIXUP && !defined(L7_PRODUCT_SMARTPATH)
     {"StkTask",         tks_stk_task,           tks_stk_task_usage,      "Stack task control" },
 #endif
+#endif
     {"SwitchControl",   cmd_switch_control,     cmd_switch_control_usage, "General switch control"},
 #ifdef INCLUDE_I2C
 #ifdef BCM_ESW_SUPPORT
     {"SYnth",           cmd_synth,              cmd_synth_usage,        "Show synthesizer frequency" },
 #endif
 #endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/config_bcm.c esw_sdk_final/src/appl/diag/config_bcm.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/config_bcm.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/src/appl/diag/config_bcm.c	2018-01-10 11:53:52.887376000 +0000
@@ -0,0 +1,2257 @@
+unsigned char config_bcm_array[] = {
+0x23, 0x0a, 0x23, 0x20, 0x24, 0x49, 0x64, 0x3a, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 
+0x62, 0x63, 0x6d, 0x2c, 0x76, 0x20, 0x31, 0x2e, 0x38, 0x35, 0x2e, 0x36, 0x2e, 0x38, 0x20, 0x42, 
+0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x24, 0x0a, 0x23, 0x20, 
+0x24, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x20, 0x28, 0x63, 0x29, 0x20, 
+0x32, 0x30, 0x30, 0x30, 0x2d, 0x32, 0x30, 0x30, 0x31, 0x2c, 0x20, 0x32, 0x30, 0x30, 0x32, 0x20, 
+0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x2e, 0x0a, 0x23, 
+0x20, 0x41, 0x6c, 0x6c, 0x20, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x52, 0x65, 0x73, 0x65, 
+0x72, 0x76, 0x65, 0x64, 0x2e, 0x24, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 
+0x65, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x66, 0x69, 0x6c, 
+0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 
+0x63, 0x6f, 0x6d, 0x20, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x2e, 0x0a, 0x23, 0x20, 0x45, 0x61, 0x63, 0x68, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 
+0x73, 0x74, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 
+0x6c, 0x69, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 
+0x3a, 0x0a, 0x23, 0x09, 0x3c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x3e, 0x3d, 
+0x3c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x64, 0x6f, 
+0x63, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x74, 0x78, 0x74, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 
+0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x6f, 
+0x77, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x6f, 0x20, 0x61, 0x6c, 
+0x6c, 0x6f, 0x77, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x66, 
+0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x6f, 0x72, 0x20, 
+0x63, 0x68, 0x69, 0x70, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 
+0x20, 0x75, 0x70, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 
+0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73, 0x20, 
+0x69, 0x6e, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x0a, 0x23, 0x09, 0x2e, 0x3c, 0x75, 0x6e, 
+0x69, 0x74, 0x2d, 0x6e, 0x75, 0x6d, 0x3e, 0x09, 0x09, 0x28, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x22, 
+0x66, 0x6f, 0x6f, 0x2e, 0x30, 0x22, 0x29, 0x0a, 0x23, 0x09, 0x2e, 0x3c, 0x43, 0x48, 0x49, 0x50, 
+0x5f, 0x54, 0x59, 0x50, 0x45, 0x3e, 0x09, 0x09, 0x28, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 
+0x6f, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x30, 0x5f, 0x42, 0x30, 0x29, 0x0a, 0x23, 0x09, 
+0x2e, 0x3c, 0x43, 0x48, 0x49, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3e, 0x09, 0x09, 0x28, 
+0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 0x6f, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x30, 
+0x29, 0x0a, 0x23, 0x09, 0x3c, 0x6e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x3e, 0x09, 0x09, 0x28, 
+0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 0x6f, 0x29, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 
+0x20, 0x75, 0x70, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x23, 0x20, 
+0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 
+0x0a, 0x23, 0x09, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x09, 
+0x09, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x30, 0x0a, 0x23, 0x09, 
+0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3e, 0x09, 0x09, 0x70, 0x68, 
+0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x0a, 0x23, 0x09, 0x5f, 0x3c, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x09, 0x09, 0x70, 0x68, 0x79, 0x5f, 
+0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x31, 0x0a, 0x23, 0x09, 0x3c, 0x6e, 0x6f, 
+0x74, 0x68, 0x69, 0x6e, 0x67, 0x3e, 0x09, 0x09, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 
+0x73, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x31, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x68, 0x61, 0x76, 
+0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 
+0x69, 0x70, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 
+0x73, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x61, 0x62, 
+0x6f, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 
+0x6c, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x73, 0x70, 0x61, 
+0x63, 0x65, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 
+0x64, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x20, 0x6c, 0x69, 0x6e, 
+0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x27, 0x23, 0x27, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 
+0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 
+0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
+0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x64, 0x65, 
+0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x20, 0x20, 0x4f, 
+0x75, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 
+0x68, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 
+0x6e, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 
+0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x62, 0x65, 0x73, 0x74, 0x20, 
+0x6c, 0x65, 0x66, 0x74, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x0a, 0x23, 0x20, 
+0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 
+0x73, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x66, 0x65, 0x61, 0x73, 0x69, 
+0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 
+0x20, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x27, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x27, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6d, 
+0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x70, 
+0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61, 
+0x6e, 0x61, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x6f, 0x6e, 
+0x2d, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 
+0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x6d, 0x61, 0x63, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 
+0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 0x74, 
+0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 
+0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 0x65, 
+0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 0x4d, 
+0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 
+0x73, 0x73, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 
+0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x65, 0x73, 0x73, 0x3d, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a, 0x30, 0x30, 
+0x3a, 0x30, 0x31, 0x3a, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x20, 0x49, 0x50, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 
+0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 
+0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 
+0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 
+0x73, 0x73, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 
+0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x65, 0x73, 0x73, 0x3d, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x31, 0x2e, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x50, 0x20, 0x6e, 0x65, 
+0x74, 0x6d, 0x61, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 
+0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 
+0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 
+0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 
+0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 
+0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 
+0x70, 0x5f, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x3d, 0x32, 0x35, 0x35, 0x2e, 0x32, 0x35, 
+0x35, 0x2e, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x20, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 
+0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 
+0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 
+0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 
+0x65, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 
+0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 
+0x3d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x0a, 0x0a, 0x23, 
+0x20, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 
+0x4f, 0x53, 0x20, 0x2f, 0x20, 0x53, 0x41, 0x4c, 0x0a, 0x23, 0x6f, 0x73, 0x3d, 0x76, 0x78, 0x77, 
+0x6f, 0x72, 0x6b, 0x73, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 
+0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x49, 0x52, 0x51, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x28, 
+0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 
+0x20, 0x62, 0x72, 0x69, 0x6e, 0x67, 0x75, 0x70, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x62, 
+0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x52, 0x51, 0x73, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x66, 
+0x72, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x0a, 0x23, 
+0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 
+0x72, 0x71, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 
+0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x49, 0x52, 0x51, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 
+0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x20, 0x0a, 0x23, 
+0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x49, 0x52, 0x51, 0x20, 0x70, 0x6f, 0x6c, 
+0x6c, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x72, 0x71, 0x5f, 0x64, 0x65, 0x6c, 0x61, 
+0x79, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x72, 0x71, 0x5f, 
+0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x3d, 0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x0a, 
+0x23, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x73, 
+0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x72, 
+0x63, 0x2e, 0x73, 0x6f, 0x63, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x61, 0x6e, 0x69, 0x74, 0x79, 
+0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x0a, 0x23, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 
+0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x50, 0x32, 0x34, 0x53, 
+0x29, 0x0a, 0x23, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x28, 0x53, 0x44, 
+0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x29, 0x0a, 0x23, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x20, 0x28, 
+0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x53, 0x29, 0x0a, 0x23, 0x6d, 0x65, 
+0x72, 0x6c, 0x69, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 
+0x6f, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x34, 0x38, 0x53, 0x29, 
+0x0a, 0x23, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x47, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x28, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x39, 0x35, 0x50, 0x32, 0x34, 0x53, 0x58, 0x29, 0x0a, 0x23, 0x67, 0x75, 0x65, 0x6e, 0x65, 
+0x76, 0x65, 0x72, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 
+0x65, 0x73, 0x20, 0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 
+0x37, 0x30, 0x4b, 0x38, 0x29, 0x0a, 0x23, 0x68, 0x65, 0x72, 0x63, 0x38, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x0a, 0x23, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 
+0x69, 0x65, 0x73, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x50, 0x4c, 
+0x4c, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 
+0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x20, 
+0x0a, 0x23, 0x70, 0x6c, 0x6c, 0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x2e, 0x3c, 0x75, 0x6e, 
+0x69, 0x74, 0x2d, 0x6e, 0x75, 0x6d, 0x3e, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x62, 
+0x75, 0x67, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 
+0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x44, 0x4b, 0x5f, 0x58, 0x58, 0x58, 0x20, 
+0x6d, 0x61, 0x73, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x62, 
+0x6f, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x0a, 0x23, 0x64, 0x65, 0x62, 0x75, 0x67, 0x3d, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x72, 0x65, 
+0x6c, 0x6f, 0x61, 0x64, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x69, 0x73, 0x20, 
+0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x2c, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6d, 0x75, 0x73, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x20, 0x65, 0x6e, 0x6f, 0x75, 0x67, 
+0x68, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x74, 
+0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x20, 0x20, 0x4f, 0x75, 0x72, 0x20, 0x77, 0x6f, 0x72, 0x73, 0x74, 
+0x2d, 0x63, 0x61, 0x73, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x69, 
+0x73, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x77, 0x69, 0x74, 0x68, 
+0x20, 0x65, 0x69, 0x67, 0x68, 0x74, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x33, 
+0x73, 0x20, 0x61, 0x74, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x20, 0x33, 0x30, 0x30, 0x6b, 
+0x20, 0x61, 0x70, 0x69, 0x65, 0x63, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x72, 0x65, 0x6c, 0x6f, 0x61, 
+0x64, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x33, 0x31, 
+0x34, 0x35, 0x37, 0x32, 0x38, 0x0a, 0x23, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 
+0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x3a, 0x72, 0x65, 
+0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x6f, 
+0x77, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x62, 
+0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x68, 0x61, 
+0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 
+0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x73, 0x6f, 
+0x2c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 0x6f, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x20, 0x77, 0x68, 0x69, 
+0x63, 0x68, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x73, 0x61, 0x76, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x23, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x77, 0x69, 0x64, 
+0x74, 0x68, 0x3d, 0x31, 0x32, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x42, 0x43, 
+0x4d, 0x35, 0x36, 0x30, 0x35, 0x2c, 0x20, 0x44, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 
+0x67, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 
+0x6c, 0x30, 0x3d, 0x34, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 
+0x64, 0x6c, 0x6c, 0x31, 0x3d, 0x30, 0x78, 0x64, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 
+0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x32, 0x3d, 0x37, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x68, 0x69, 0x70, 
+0x73, 0x2c, 0x20, 0x44, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x73, 0x68, 
+0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x30, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 
+0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 
+0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x31, 0x3d, 0x30, 0x0a, 0x23, 
+0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x32, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x35, 0x36, 0x31, 0x35, 
+0x20, 0x4d, 0x49, 0x53, 0x43, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x32, 0x2e, 0x53, 0x44, 0x43, 
+0x4c, 0x4b, 0x5f, 0x31, 0x33, 0x33, 0x4d, 0x48, 0x5a, 0x5f, 0x45, 0x4e, 0x20, 0x28, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x76, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x29, 0x0a, 
+0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 
+0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 
+0x4f, 0x4c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x52, 
+0x20, 0x61, 0x6e, 0x64, 0x20, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x42, 0x41, 0x43, 0x4b, 
+0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 
+0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 
+0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x20, 0x72, 0x65, 
+0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x72, 
+0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x47, 0x2d, 
+0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x62, 
+0x61, 0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x79, 0x70, 
+0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x66, 0x65, 0x3d, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x67, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x63, 0x70, 0x75, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 
+0x5f, 0x69, 0x62, 0x70, 0x5f, 0x66, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x62, 
+0x70, 0x5f, 0x67, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x62, 0x70, 0x5f, 0x63, 
+0x70, 0x75, 0x3d, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x33, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x0a, 0x23, 0x6c, 0x33, 0x5f, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x69, 0x70, 0x6d, 0x63, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x69, 0x70, 0x6d, 0x63, 0x5f, 0x64, 0x6f, 
+0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x72, 0x75, 0x6e, 0x6b, 
+0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x20, 0x0a, 0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x39, 
+0x35, 0x2c, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x31, 0x32, 0x38, 0x20, 0x74, 
+0x72, 0x75, 0x6e, 0x6b, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x20, 0x28, 0x61, 0x66, 0x66, 
+0x65, 0x63, 0x74, 0x73, 0x20, 0x48, 0x69, 0x47, 0x69, 0x67, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 
+0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x43, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x2c, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x28, 0x6f, 0x72, 0x20, 
+0x3d, 0x30, 0x29, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x39, 0x35, 0x0a, 0x23, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 
+0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x76, 0x69, 0x61, 0x20, 0x74, 0x68, 0x65, 0x20, 0x48, 0x69, 0x47, 0x69, 0x67, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x64, 0x65, 0x76, 
+0x69, 0x63, 0x65, 0x73, 0x20, 0x4f, 0x4b, 0x29, 0x2e, 0x0a, 0x23, 0x74, 0x72, 0x75, 0x6e, 0x6b, 
+0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x68, 0x65, 0x20, 0x48, 0x69, 0x67, 0x69, 0x67, 0x32, 0x20, 0x68, 0x65, 0x61, 0x64, 
+0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x63, 0x61, 0x74, 
+0x65, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x72, 0x6f, 0x61, 0x64, 
+0x63, 0x61, 0x73, 0x74, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 
+0x20, 0x61, 0x6e, 0x64, 0x0a, 0x23, 0x20, 0x49, 0x50, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 
+0x61, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x6f, 
+0x20, 0x6f, 0x6e, 0x65, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x20, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x20, 0x20, 0x54, 
+0x68, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x62, 0x65, 0x74, 
+0x77, 0x65, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 
+0x75, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x64, 
+0x65, 0x78, 0x20, 0x69, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 
+0x62, 0x79, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 
+0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 
+0x73, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 
+0x39, 0x36, 0x0a, 0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 
+0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 
+0x30, 0x39, 0x36, 0x0a, 0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x33, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 
+0x34, 0x30, 0x39, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x38, 0x78, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x78, 0x78, 
+0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 
+0x6d, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x69, 
+0x6e, 0x20, 0x61, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 
+0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 
+0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 
+0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 0x39, 0x36, 0x0a, 
+0x23, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x33, 0x5f, 0x72, 
+0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 0x39, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x70, 0x62, 0x6d, 
+0x70, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x61, 
+0x73, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6e, 0x79, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x69, 0x74, 
+0x6d, 0x61, 0x70, 0x20, 0x69, 0x73, 0x20, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x20, 0x74, 
+0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x0a, 0x23, 0x20, 0x44, 
+0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x73, 0x20, 
+0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x28, 0x75, 0x6e, 0x69, 0x74, 0x29, 0x2c, 0x20, 
+0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 
+0x69, 0x6e, 0x67, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x63, 
+0x70, 0x75, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x31, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6e, 
+0x6f, 0x77, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 
+0x78, 0x31, 0x34, 0x62, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 
+0x6c, 0x79, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x31, 0x2c, 0x33, 0x2c, 0x36, 0x2c, 
+0x38, 0x2c, 0x43, 0x50, 0x55, 0x29, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 
+0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x31, 0x34, 0x62, 0x0a, 0x0a, 0x23, 
+0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 
+0x79, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 
+0x63, 0x6b, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 
+0x20, 0x61, 0x73, 0x20, 0x78, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x42, 0x79, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x6e, 0x20, 0x58, 0x50, 0x4f, 
+0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x69, 0x73, 0x20, 0x74, 0x72, 0x65, 0x61, 
+0x74, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x0a, 
+0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 0x2e, 0x30, 
+0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x20, 0x55, 0x6e, 
+0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 
+0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 
+0x61, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x58, 0x50, 
+0x4f, 0x52, 0x54, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x58, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 
+0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 
+0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x66, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x20, 
+0x4f, 0x6e, 0x20, 0x35, 0x36, 0x38, 0x78, 0x78, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 
+0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 0x63, 
+0x6b, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x58, 0x45, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 
+0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 
+0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 
+0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x48, 
+0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x41, 0x20, 0x73, 0x70, 0x65, 0x63, 
+0x69, 0x66, 0x69, 0x63, 0x20, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x0a, 0x23, 0x20, 0x6d, 0x61, 
+0x79, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x45, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x2c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x0a, 
+0x23, 0x20, 0x62, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 
+0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 
+0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x48, 0x47, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x58, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 
+0x65, 0x0a, 0x23, 0x20, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x74, 0x68, 
+0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x74, 0x20, 0x41, 0x50, 0x49, 
+0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 
+0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 
+0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x63, 
+0x6b, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x65, 
+0x63, 0x69, 0x66, 0x79, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x63, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x47, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x69, 0x73, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 
+0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 
+0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x20, 0x73, 0x74, 
+0x61, 0x63, 0x6b, 0x20, 0x63, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x47, 0x45, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 
+0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x2e, 
+0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x36, 0x0a, 
+0x23, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x69, 
+0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x6c, 
+0x6c, 0x20, 0x47, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 
+0x67, 0x75, 0x6c, 0x61, 0x72, 0x0a, 0x23, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x70, 0x61, 
+0x6e, 0x65, 0x6c, 0x20, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x73, 0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x2c, 
+0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 
+0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x20, 0x50, 0x48, 0x59, 
+0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 
+0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x69, 
+0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x69, 
+0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 0x20, 0x62, 0x75, 0x73, 0x20, 
+0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 
+0x73, 0x20, 0x61, 0x20, 0x70, 0x68, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x70, 0x61, 
+0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x70, 0x68, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x78, 0x65, 0x30, 
+0x2e, 0x30, 0x3d, 0x32, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 0x5f, 
+0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x3e, 0x20, 0x69, 0x73, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 
+0x75, 0x6c, 0x6c, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 
+0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x69, 0x6e, 0x67, 
+0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 
+0x47, 0x4d, 0x49, 0x49, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 
+0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2d, 0x74, 0x6f, 
+0x2d, 0x63, 0x68, 0x69, 0x70, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x61, 
+0x20, 0x34, 0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x28, 
+0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x34, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x29, 
+0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x30, 
+0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 
+0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x3e, 0x20, 0x69, 0x73, 
+0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 
+0x68, 0x79, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x65, 0x78, 
+0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x34, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x29, 0x0a, 0x23, 
+0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x20, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x70, 0x68, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 
+0x64, 0x65, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x73, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x20, 0x70, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x61, 0x73, 0x69, 0x73, 0x2e, 0x0a, 0x0a, 
+0x23, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 
+0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x64, 0x72, 0x76, 0x3d, 0x30, 0x0a, 0x23, 0x74, 0x75, 0x72, 0x62, 
+0x6f, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x2f, 0x4f, 
+0x20, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 
+0x6f, 0x6e, 0x2e, 0x20, 0x28, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 
+0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x0a, 0x23, 0x20, 0x42, 0x43, 
+0x4d, 0x35, 0x36, 0x34, 0x35, 0x42, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x61, 0x74, 0x65, 
+0x72, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 
+0x69, 0x6f, 0x76, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x2e, 0x35, 
+0x56, 0x0a, 0x23, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 
+0x20, 0x6d, 0x61, 0x79, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 
+0x74, 0x20, 0x67, 0x69, 0x67, 0x5f, 0x69, 0x6f, 0x76, 0x20, 0x62, 0x65, 0x20, 0x31, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x32, 0x2e, 0x35, 0x56, 0x0a, 0x0a, 0x23, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 
+0x69, 0x6f, 0x76, 0x3d, 0x30, 0x0a, 0x23, 0x67, 0x69, 0x67, 0x5f, 0x69, 0x6f, 0x76, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x42, 0x49, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x47, 0x4d, 0x49, 0x49, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 
+0x23, 0x69, 0x66, 0x5f, 0x74, 0x62, 0x69, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 
+0x23, 0x69, 0x66, 0x5f, 0x74, 0x62, 0x69, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 0x73, 0x20, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x65, 
+0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x73, 0x20, 0x77, 0x68, 0x61, 0x74, 
+0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 
+0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x69, 0x73, 0x0a, 0x23, 0x20, 0x6f, 0x6e, 0x20, 0x62, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x20, 0x69, 
+0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 
+0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x73, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x2c, 0x0a, 0x23, 0x20, 
+0x77, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 
+0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 
+0x69, 0x73, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x2c, 0x20, 0x77, 0x65, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 
+0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 
+0x20, 0x35, 0x36, 0x39, 0x30, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x64, 0x69, 0x72, 
+0x65, 0x63, 0x74, 0x6c, 0x79, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x6d, 0x6f, 0x64, 
+0x75, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, 
+0x65, 0x64, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x35, 0x36, 0x39, 0x30, 0x20, 0x53, 0x44, 0x4b, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x68, 0x69, 0x63, 
+0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x73, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
+0x6f, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x35, 0x34, 0x33, 0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 0x23, 0x20, 0x53, 
+0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x75, 
+0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x66, 0x20, 0x6e, 
+0x6f, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 0x2e, 0x0a, 0x0a, 
+0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x39, 0x30, 0x5f, 0x67, 0x65, 0x31, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x39, 0x30, 0x5f, 0x67, 0x65, 0x31, 0x31, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 
+0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 
+0x69, 0x73, 0x20, 0x35, 0x36, 0x58, 0x58, 0x58, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 
+0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 
+0x63, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 
+0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 
+0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 
+0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x0a, 0x23, 0x20, 0x77, 
+0x68, 0x69, 0x63, 0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 
+0x6f, 0x72, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x65, 0x78, 0x74, 0x65, 
+0x72, 0x6e, 0x61, 0x6c, 0x20, 0x35, 0x34, 0x33, 0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 
+0x23, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 
+0x66, 0x20, 0x6e, 0x6f, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x74, 0x65, 
+0x63, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 
+0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x78, 0x78, 0x78, 0x5f, 0x67, 0x65, 
+0x31, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x78, 0x78, 0x78, 0x5f, 
+0x67, 0x65, 0x31, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 
+0x20, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 0x34, 0x53, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
+0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x34, 0x36, 0x34, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x35, 0x34, 0x36, 0x34, 0x53, 0x52, 0x0a, 0x23, 
+0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 
+0x69, 0x73, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 
+0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x20, 0x49, 0x44, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x6f, 0x66, 0x20, 0x35, 0x34, 0x36, 
+0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x52, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x53, 0x2f, 0x35, 0x34, 
+0x36, 0x34, 0x53, 0x52, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 0x34, 
+0x53, 0x5f, 0x67, 0x65, 0x38, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 
+0x34, 0x53, 0x5f, 0x67, 0x65, 0x39, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 
+0x36, 0x34, 0x53, 0x5f, 0x67, 0x65, 0x31, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x35, 0x34, 0x36, 0x34, 0x53, 0x5f, 0x67, 0x65, 0x31, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 
+0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x38, 0x37, 0x30, 0x36, 0x20, 
+0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x69, 0x66, 0x20, 0x61, 
+0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 0x30, 0x36, 0x20, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x38, 
+0x37, 0x32, 0x36, 0x20, 0x0a, 0x23, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x20, 
+0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x62, 
+0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 
+0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x44, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x73, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x34, 0x2f, 
+0x38, 0x37, 0x30, 0x36, 0x2f, 0x38, 0x37, 0x32, 0x36, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x38, 0x37, 0x30, 0x36, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x69, 
+0x62, 0x65, 0x72, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x61, 
+0x75, 0x74, 0x6f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 
+0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x35, 0x34, 0x32, 0x31, 
+0x53, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x34, 0x36, 0x34, 0x53, 0x2e, 0x0a, 0x23, 0x20, 0x54, 
+0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 
+0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 
+0x6d, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x69, 0x62, 
+0x65, 0x72, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x70, 0x72, 
+0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 
+0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x69, 0x73, 0x20, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 
+0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 
+0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x74, 
+0x6f, 0x0a, 0x23, 0x20, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x20, 0x69, 0x66, 0x20, 0x42, 0x4f, 
+0x54, 0x48, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x20, 0x20, 
+0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x28, 0x31, 
+0x29, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x28, 0x30, 0x29, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 
+0x64, 0x69, 0x75, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 
+0x2c, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 
+0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 
+0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 0x75, 0x73, 0x65, 
+0x2e, 0x20, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 
+0x20, 0x28, 0x31, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x28, 
+0x30, 0x29, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 
+0x70, 0x72, 0x65, 0x66, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x5f, 0x67, 0x65, 0x31, 
+0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x61, 0x72, 
+0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x6b, 0x69, 0x70, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x69, 
+0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x50, 0x48, 0x59, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x35, 0x36, 0x37, 0x33, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x6a, 0x75, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x70, 0x68, 0x79, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x35, 0x36, 0x37, 0x33, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x20, 0x6f, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x74, 0x69, 0x6d, 
+0x65, 0x20, 0x74, 0x6f, 0x20, 0x77, 0x61, 0x69, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x20, 0x62, 0x75, 0x73, 0x79, 0x20, 0x63, 
+0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 
+0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3d, 0x32, 
+0x35, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x70, 0x68, 0x79, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x28, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 
+0x74, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 
+0x20, 0x35, 0x34, 0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x29, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x65, 0x20, 0x35, 0x34, 0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 
+0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x3a, 0x0a, 0x23, 0x20, 
+0x6c, 0x65, 0x64, 0x4e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x45, 
+0x44, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x70, 0x68, 0x79, 0x20, 0x72, 0x65, 0x67, 0x20, 0x30, 
+0x78, 0x31, 0x78, 0x5b, 0x30, 0x31, 0x31, 0x31, 0x30, 0x31, 0x2c, 0x20, 0x30, 0x31, 0x31, 0x31, 
+0x30, 0x5d, 0x0a, 0x23, 0x20, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x20, 0x69, 0x73, 
+0x20, 0x70, 0x68, 0x79, 0x20, 0x72, 0x65, 0x67, 0x20, 0x30, 0x78, 0x31, 0x78, 0x5b, 0x30, 0x31, 
+0x30, 0x30, 0x31, 0x5d, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x31, 0x5f, 0x6d, 
+0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x32, 0x5f, 
+0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x33, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x33, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 
+0x34, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x36, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 
+0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x3d, 0x30, 0x78, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x6f, 
+0x66, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 
+0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x34, 
+0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 0x73, 0x29, 0x0a, 0x23, 0x09, 0x30, 0x09, 0x75, 0x73, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x68, 0x79, 0x27, 0x73, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 0x74, 
+0x65, 0x63, 0x74, 0x0a, 0x23, 0x09, 0x31, 0x09, 0x75, 0x73, 0x65, 0x20, 0x50, 0x45, 0x43, 0x4c, 
+0x20, 0x53, 0x44, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 
+0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 0x6e, 
+0x20, 0x35, 0x34, 0x36, 0x31, 0x29, 0x0a, 0x23, 0x09, 0x34, 0x09, 0x75, 0x73, 0x65, 0x20, 0x4c, 
+0x45, 0x44, 0x34, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 
+0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 0x6e, 
+0x20, 0x35, 0x34, 0x36, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x31, 0x30, 0x09, 0x75, 0x73, 0x65, 0x20, 
+0x45, 0x4e, 0x5f, 0x31, 0x30, 0x42, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 
+0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x0a, 0x23, 0x20, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x72, 0x65, 0x61, 0x74, 0x73, 0x20, 
+0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x20, 0x61, 0x73, 
+0x20, 0x6c, 0x6f, 0x73, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 
+0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x69, 0x6e, 
+0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 
+0x61, 0x72, 0x64, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x64, 
+0x65, 0x74, 0x65, 0x63, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x70, 0x68, 0x79, 0x35, 0x33, 
+0x31, 0x31, 0x35, 0x5f, 0x61, 0x30, 0x20, 0x73, 0x77, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 
+0x6f, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x6e, 
+0x6b, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x20, 0x61, 0x74, 0x20, 0x41, 0x4e, 0x2b, 0x31, 0x30, 
+0x30, 0x54, 0x58, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x0a, 0x23, 0x09, 0x30, 0x09, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x20, 0x77, 0x6f, 0x72, 
+0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x09, 0x31, 0x09, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x20, 0x77, 0x6f, 0x72, 0x6b, 
+0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x33, 0x31, 
+0x31, 0x35, 0x5f, 0x61, 0x6e, 0x31, 0x30, 0x30, 0x74, 0x78, 0x5f, 0x77, 0x61, 0x72, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x70, 0x68, 0x79, 0x35, 0x33, 0x31, 0x31, 0x35, 0x5f, 0x62, 0x30, 0x20, 
+0x73, 0x77, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x61, 
+0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x0a, 0x23, 0x09, 
+0x30, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 
+0x57, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x09, 
+0x31, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 
+0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x2d, 
+0x2d, 0x2d, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x2d, 0x57, 0x41, 0x52, 0x20, 0x61, 
+0x6c, 0x73, 0x6f, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 
+0x69, 0x78, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x31, 0x31, 0x38, 0x5f, 0x61, 
+0x30, 0x20, 0x61, 0x74, 0x20, 0x49, 0x4f, 0x50, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 
+0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x33, 0x31, 0x31, 0x35, 0x5f, 0x62, 0x30, 0x5f, 
+0x69, 0x6f, 0x70, 0x5f, 0x77, 0x61, 0x72, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 
+0x74, 0x69, 0x61, 0x6c, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x43, 
+0x4f, 0x53, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 
+0x69, 0x74, 0x28, 0x29, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x73, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x66, 0x6f, 0x72, 0x2e, 0x0a, 0x23, 0x62, 
+0x63, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x73, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 0x20, 
+0x58, 0x51, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x28, 0x72, 0x65, 0x6c, 0x61, 0x74, 
+0x69, 0x76, 0x65, 0x29, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x43, 0x4f, 
+0x53, 0x51, 0x2e, 0x20, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x4f, 
+0x43, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 
+0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x58, 0x51, 0x73, 0x20, 0x61, 0x6d, 0x6f, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x27, 0x73, 0x20, 0x58, 0x51, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 
+0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6f, 0x6e, 0x65, 
+0x20, 0x43, 0x4f, 0x53, 0x51, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x27, 
+0x73, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x64, 
+0x69, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 
+0x6d, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 
+0x62, 0x6c, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 
+0x75, 0x65, 0x73, 0x2e, 0x20, 0x0a, 0x23, 0x20, 0x0a, 0x23, 0x20, 0x41, 0x20, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 
+0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x2e, 0x20, 0x4e, 0x6f, 0x6e, 
+0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x6d, 0x75, 
+0x73, 0x74, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 
+0x30, 0x0a, 0x23, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x20, 0x63, 
+0x6f, 0x6e, 0x74, 0x69, 0x67, 0x75, 0x6f, 0x75, 0x73, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x2c, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 
+0x64, 0x20, 0x61, 0x64, 0x64, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x20, 0x0a, 0x23, 0x20, 0x70, 0x6f, 0x77, 0x65, 
+0x72, 0x20, 0x6f, 0x66, 0x20, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x2e, 
+0x0a, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 
+0x5f, 0x63, 0x6f, 0x73, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 
+0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 
+0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 
+0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x34, 0x3d, 0x31, 0x0a, 
+0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 
+0x6f, 0x73, 0x35, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 
+0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x36, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 
+0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x37, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x58, 0x51, 0x20, 0x70, 0x61, 0x63, 0x6b, 
+0x65, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x6f, 
+0x6d, 0x65, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 
+0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x65, 
+0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x20, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x0a, 0x23, 0x20, 0x41, 0x6e, 0x20, 
+0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 
+0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 
+0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x43, 0x4f, 0x53, 0x51, 0x2e, 0x20, 0x4e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x61, 0x67, 0x65, 0x20, 0x6f, 
+0x66, 0x20, 0x61, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x28, 0x66, 0x6f, 0x72, 0x20, 
+0x61, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x6c, 0x6c, 
+0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x61, 0x72, 
+0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x73, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x67, 
+0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2c, 0x20, 0x61, 0x73, 0x20, 0x77, 
+0x65, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 
+0x69, 0x6d, 0x75, 0x6d, 0x20, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6d, 0x61, 
+0x6c, 0x6c, 0x65, 0x73, 0x74, 0x20, 0x0a, 0x23, 0x20, 0x28, 0x6e, 0x6f, 0x6e, 0x7a, 0x65, 0x72, 
+0x6f, 0x29, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x0a, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x30, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x31, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x32, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x33, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x34, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x35, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x36, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x37, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x35, 0x30, 0x30, 0x20, 
+0x73, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x6d, 0x61, 0x6e, 
+0x61, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 
+0x73, 0x20, 0x35, 0x36, 0x31, 0x30, 0x30, 0x2c, 0x20, 0x35, 0x36, 0x33, 0x30, 0x30, 0x2c, 0x20, 
+0x35, 0x36, 0x32, 0x30, 0x30, 0x2c, 0x20, 0x35, 0x33, 0x37, 0x30, 0x30, 0x20, 0x66, 0x61, 0x6d, 
+0x69, 0x6c, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4d, 0x4d, 0x55, 
+0x20, 0x78, 0x71, 0x20, 0x28, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x29, 0x20, 0x63, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x38, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x75, 
+0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x20, 
+0x74, 0x68, 0x61, 0x6e, 0x20, 0x38, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 
+0x6e, 0x74, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x2e, 
+0x20, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x38, 
+0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x65, 
+0x76, 0x65, 0x72, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x71, 
+0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x4e, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 
+0x74, 0x6f, 0x20, 0x30, 0x2e, 0x20, 0x20, 0x41, 0x20, 0x34, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 
+0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 
+0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x4e, 0x3d, 0x30, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x4e, 0x3d, 0x34, 0x2c, 0x20, 0x35, 0x2c, 0x20, 0x36, 0x2c, 0x20, 
+0x37, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 
+0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x66, 
+0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x39, 0x30, 0x0a, 0x23, 
+0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 
+0x66, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 
+0x20, 0x75, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x62, 0x65, 
+0x66, 0x6f, 0x72, 0x65, 0x20, 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x66, 0x6c, 
+0x6f, 0x77, 0x5f, 0x66, 0x61, 0x6e, 0x69, 0x6e, 0x3d, 0x34, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 
+0x65, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x20, 0x74, 
+0x6f, 0x20, 0x65, 0x61, 0x63, 0x68, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 
+0x72, 0x65, 0x64, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 
+0x3d, 0x36, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 
+0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x38, 0x30, 0x0a, 
+0x23, 0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 
+0x6f, 0x66, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 0x2d, 
+0x63, 0x6f, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x0a, 0x23, 0x09, 0x09, 0x09, 
+0x09, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x72, 0x65, 0x64, 
+0x20, 0x6f, 0x72, 0x20, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 
+0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x62, 0x65, 0x20, 
+0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 
+0x74, 0x69, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x3d, 0x31, 0x35, 0x33, 0x36, 0x0a, 0x23, 
+0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 
+0x2d, 0x63, 0x6f, 0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x72, 0x65, 0x73, 0x65, 
+0x72, 0x76, 0x65, 0x64, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 
+0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x20, 0x75, 0x70, 0x20, 0x66, 0x72, 0x6f, 0x6d, 
+0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x63, 
+0x65, 0x6c, 0x6c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x52, 
+0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x20, 0x61, 
+0x72, 0x65, 0x20, 0x70, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 
+0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x49, 0x66, 0x20, 
+0x30, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 
+0x69, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 
+0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x73, 0x20, 0x63, 
+0x65, 0x6c, 0x6c, 0x73, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x75, 0x73, 0x65, 
+0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 
+0x76, 0x65, 0x64, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x70, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 
+0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x4f, 0x6e, 
+0x6c, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 
+0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x69, 0x73, 0x20, 0x30, 
+0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x74, 
+0x65, 0x73, 0x3d, 0x33, 0x30, 0x37, 0x32, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x28, 0x31, 0x35, 
+0x33, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6f, 0x66, 0x66, 
+0x73, 0x65, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 
+0x20, 0x63, 0x65, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 
+0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 
+0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x20, 0x75, 0x70, 
+0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6e, 
+0x65, 0x78, 0x74, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x0a, 0x23, 
+0x6d, 0x6d, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x3d, 0x31, 
+0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6e, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 
+0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x0a, 0x23, 0x6d, 0x6d, 
+0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x3d, 0x32, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 
+0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x20, 0x20, 0x49, 
+0x66, 0x20, 0x30, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 
+0x65, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6d, 0x6d, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 
+0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 
+0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 
+0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 
+0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x29, 0x2e, 0x0a, 
+0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x62, 
+0x6d, 0x70, 0x3d, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 
+0x72, 0x6f, 0x2c, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x28, 0x29, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 
+0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 
+0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 
+0x6e, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 
+0x61, 0x78, 0x65, 0x72, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 
+0x65, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x69, 0x74, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x73, 0x63, 0x61, 
+0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 
+0x63, 0x61, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 0x63, 
+0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x69, 0x6e, 
+0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 
+0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x6d, 0x65, 0x73, 
+0x73, 0x61, 0x67, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x73, 0x63, 0x72, 0x6f, 0x6c, 
+0x6c, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x79, 0x2e, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x62, 
+0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x65, 
+0x72, 0x72, 0x3d, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x0a, 0x23, 0x62, 
+0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x65, 
+0x72, 0x72, 0x3d, 0x35, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x53, 0x74, 
+0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 
+0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x62, 0x69, 0x74, 0x6d, 
+0x61, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x77, 
+0x68, 0x69, 0x63, 0x68, 0x20, 0x73, 0x74, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 
+0x69, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 
+0x62, 0x63, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x70, 0x62, 0x6d, 0x70, 0x3d, 0x0a, 0x0a, 
+0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x20, 0x6f, 
+0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x73, 0x74, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 
+0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 
+0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 
+0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x65, 0x72, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x20, 
+0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x73, 0x74, 
+0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x4f, 0x52, 0x64, 0x20, 0x74, 0x6f, 0x67, 
+0x65, 0x74, 0x68, 0x65, 0x72, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x30, 0x78, 0x30, 0x20, 0x69, 
+0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x63, 0x6f, 
+0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 
+0x20, 0x4e, 0x4f, 0x54, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x30, 0x78, 0x31, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 
+0x68, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 0x20, 
+0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x28, 
+0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x2e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x73, 
+0x74, 0x61, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x3d, 0x30, 0x78, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x28, 0x2a, 
+0x4f, 0x56, 0x52, 0x29, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 
+0x0a, 0x23, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 
+0x35, 0x31, 0x38, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x2a, 
+0x4f, 0x56, 0x52, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x63, 
+0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 
+0x73, 0x74, 0x61, 0x74, 0x5f, 0x6a, 0x75, 0x6d, 0x62, 0x6f, 0x3d, 0x31, 0x35, 0x31, 0x38, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x44, 
+0x4d, 0x41, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x64, 
+0x6d, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x31, 0x30, 0x32, 0x34, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x68, 0x61, 0x72, 0x64, 
+0x77, 0x61, 0x72, 0x65, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 
+0x3a, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x62, 0x79, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x62, 0x79, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x2b, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 
+0x20, 0x62, 0x79, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 
+0x20, 0x62, 0x79, 0x20, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x2e, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 
+0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 
+0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x32, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x44, 0x4d, 0x41, 0x65, 0x64, 0x20, 
+0x69, 0x6e, 0x74, 0x6f, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 
+0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x68, 
+0x65, 0x6e, 0x20, 0x6e, 0x6f, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x61, 
+0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 
+0x61, 0x62, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x0a, 0x23, 0x20, 
+0x70, 0x61, 0x72, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 
+0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x75, 0x73, 0x65, 0x2e, 0x20, 0x20, 0x4d, 
+0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x32, 
+0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 
+0x6b, 0x73, 0x3d, 0x36, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 
+0x74, 0x6f, 0x20, 0x41, 0x56, 0x4c, 0x20, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 
+0x78, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x76, 0x6c, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x79, 
+0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4c, 0x32, 
+0x58, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 
+0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x20, 0x6f, 0x75, 0x74, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x0a, 0x23, 0x20, 
+0x74, 0x69, 0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x61, 0x76, 0x65, 0x20, 0x6d, 0x65, 
+0x6d, 0x6f, 0x72, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6f, 0x66, 0x20, 
+0x44, 0x4d, 0x41, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x20, 0x20, 0x4d, 0x75, 0x73, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x32, 0x2e, 
+0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x3d, 
+0x38, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x20, 0x62, 0x65, 0x74, 0x77, 
+0x65, 0x65, 0x6e, 0x20, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 
+0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x66, 0x74, 
+0x77, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x28, 0x35, 0x36, 0x39, 0x30, 0x20, 
+0x6f, 0x6e, 0x6c, 0x79, 0x29, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x20, 0x74, 0x68, 0x72, 0x65, 
+0x61, 0x64, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x72, 0x75, 0x6e, 0x73, 
+0x20, 0x65, 0x76, 0x65, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x2f, 0x6c, 0x32, 0x78, 0x6d, 
+0x73, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x33, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6c, 0x32, 0x78, 0x6d, 
+0x73, 0x67, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x63, 
+0x61, 0x6c, 0x6c, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x75, 0x73, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x61, 0x6e, 
+0x20, 0x4c, 0x32, 0x58, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x0a, 0x23, 0x20, 0x69, 
+0x73, 0x20, 0x61, 0x64, 0x64, 0x65, 0x64, 0x2c, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 
+0x2c, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x48, 
+0x6f, 0x77, 0x65, 0x76, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x66, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x68, 0x69, 0x74, 0x20, 0x62, 0x69, 0x74, 0x20, 0x63, 0x68, 0x61, 0x6e, 
+0x67, 0x65, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x75, 0x6e, 0x6c, 
+0x65, 0x73, 0x73, 0x20, 0x6c, 0x32, 0x78, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x64, 
+0x6f, 0x77, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x20, 0x69, 0x73, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 
+0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x73, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x4c, 0x32, 0x20, 
+0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x61, 
+0x6b, 0x61, 0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x20, 0x28, 
+0x30, 0x29, 0x20, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 
+0x46, 0x4f, 0x20, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x20, 0x61, 0x6b, 0x61, 
+0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x20, 0x28, 0x31, 0x29, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x4c, 0x32, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x63, 0x68, 
+0x61, 0x6e, 0x67, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x4c, 0x32, 0x58, 0x20, 
+0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 
+0x0a, 0x23, 0x6c, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 
+0x72, 0x20, 0x6f, 0x66, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x6d, 0x6f, 0x76, 0x65, 0x73, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x75, 0x61, 0x6c, 0x20, 0x68, 0x61, 0x73, 0x68, 0x20, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x23, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 
+0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x3d, 0x31, 
+0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x74, 
+0x2d, 0x49, 0x6e, 0x2d, 0x53, 0x65, 0x6c, 0x66, 0x2d, 0x54, 0x65, 0x73, 0x74, 0x20, 0x28, 0x42, 
+0x49, 0x53, 0x54, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 
+0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x62, 
+0x69, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x65, 0x63, 
+0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6c, 
+0x79, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 
+0x72, 0x79, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x0a, 0x23, 0x20, 0x6f, 
+0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x6e, 
+0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x69, 0x6d, 
+0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x41, 
+0x52, 0x4c, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 
+0x74, 0x65, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x63, 0x68, 
+0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x2c, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 
+0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x0a, 0x23, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x41, 0x4c, 0x4c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x69, 
+0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x74, 
+0x6f, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x2d, 0x43, 0x68, 
+0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 
+0x72, 0x72, 0x75, 0x70, 0x74, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x65, 0x20, 
+0x6f, 0x63, 0x63, 0x75, 0x72, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 
+0x74, 0x73, 0x20, 0x6d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x20, 0x28, 0x75, 0x73, 0x65, 0x20, 0x30, 0x20, 0x74, 
+0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x62, 0x6c, 
+0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x29, 0x2e, 0x0a, 0x23, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 
+0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x63, 
+0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 
+0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x20, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x74, 0x68, 
+0x61, 0x74, 0x20, 0x41, 0x52, 0x4c, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x2f, 
+0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x20, 
+0x63, 0x61, 0x6e, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 
+0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x69, 0x73, 0x20, 0x68, 
+0x69, 0x67, 0x68, 0x6c, 0x79, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 
+0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 
+0x65, 0x63, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 
+0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 
+0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 
+0x6d, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x49, 0x49, 0x20, 
+0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x73, 0x69, 0x6e, 0x63, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x79, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x20, 0x77, 0x68, 0x69, 
+0x6c, 0x65, 0x20, 0x28, 0x37, 0x30, 0x20, 0x75, 0x73, 0x65, 0x63, 0x20, 0x6f, 0x72, 0x20, 0x73, 
+0x6f, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x76, 0x61, 
+0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 
+0x20, 0x30, 0x2c, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 
+0x20, 0x4d, 0x49, 0x49, 0x0a, 0x23, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
+0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x49, 0x49, 0x4d, 0x20, 
+0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 
+0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 
+0x73, 0x0a, 0x0a, 0x23, 0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 
+0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 
+0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x74, 0x72, 0x20, 0x31, 0x37, 0x20, 0x74, 0x68, 0x72, 0x6f, 
+0x75, 0x67, 0x68, 0x20, 0x74, 0x72, 0x20, 0x32, 0x34, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 
+0x72, 0x0a, 0x23, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x75, 0x70, 0x0a, 0x0a, 0x23, 0x64, 0x69, 
+0x61, 0x67, 0x5f, 0x6c, 0x62, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x3d, 0x31, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 
+0x74, 0x69, 0x63, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x74, 
+0x72, 0x20, 0x31, 0x37, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x72, 0x20, 
+0x32, 0x34, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x6c, 0x6f, 0x6f, 
+0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x72, 0x65, 0x63, 
+0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x6c, 0x62, 
+0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3d, 
+0x35, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 
+0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x2d, 0x20, 0x69, 0x66, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x54, 0x52, 0x55, 0x45, 0x2c, 0x20, 0x61, 0x6c, 0x6c, 0x20, 
+0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x74, 
+0x68, 0x20, 0x30, 0x78, 0x64, 0x65, 0x61, 0x64, 0x62, 0x65, 0x65, 0x66, 0x20, 0x62, 0x65, 0x66, 
+0x6f, 0x72, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 
+0x74, 0x68, 0x65, 0x6d, 0x2e, 0x20, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x73, 0x6c, 0x6f, 
+0x77, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x79, 0x6f, 0x75, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x20, 0x69, 0x66, 0x20, 0x6c, 
+0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x6d, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x70, 0x61, 
+0x72, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x64, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x20, 0x50, 0x43, 0x49, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 
+0x73, 0x2e, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x6c, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 
+0x5f, 0x72, 0x78, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 
+0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x70, 
+0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x70, 0x77, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x31, 0x30, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x20, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x65, 0x73, 
+0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x27, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 
+0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x27, 0x29, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 
+0x74, 0x61, 0x62, 0x73, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x53, 0x43, 0x49, 0x49, 0x20, 
+0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 
+0x73, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x34, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x2c, 0x20, 0x34, 0x36, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x65, 0x72, 
+0x69, 0x6f, 0x64, 0x2c, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x6e, 0x65, 0x0a, 
+0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x3d, 0x34, 0x34, 0x0a, 0x0a, 
+0x23, 0x20, 0x61, 0x72, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x66, 0x66, 0x20, 
+0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 
+0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x6f, 0x66, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x20, 0x54, 0x41, 0x47, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x20, 
+0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x64, 0x65, 0x20, 0x69, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 
+0x6f, 0x6e, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 
+0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 
+0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x66, 0x66, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x6f, 0x6e, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x74, 0x29, 0x20, 
+0x6d, 0x61, 0x79, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x71, 
+0x75, 0x69, 0x72, 0x65, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 
+0x4c, 0x20, 0x69, 0x73, 0x20, 0x65, 0x78, 0x74, 0x72, 0x61, 0x20, 0x62, 0x75, 0x73, 0x79, 0x2e, 
+0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x74, 0x72, 
+0x69, 0x65, 0x73, 0x3d, 0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x69, 0x6d, 0x69, 0x74, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x41, 
+0x52, 0x4c, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x63, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x77, 0x69, 0x6c, 
+0x6c, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2c, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 
+0x6b, 0x65, 0x65, 0x70, 0x20, 0x69, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x68, 0x6f, 0x67, 
+0x67, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x20, 0x20, 0x53, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 
+0x6c, 0x65, 0x2e, 0x0a, 0x23, 0x20, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 
+0x70, 0x70, 0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 
+0x6f, 0x77, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x73, 0x65, 0x65, 0x20, 0x6c, 0x32, 
+0x78, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 
+0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x29, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 
+0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x3d, 0x33, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6c, 
+0x6f, 0x6e, 0x67, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x52, 0x4c, 
+0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 
+0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 
+0x79, 0x20, 0x41, 0x52, 0x4c, 0x2d, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x20, 
+0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x20, 0x20, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 
+0x65, 0x73, 0x20, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x65, 
+0x72, 0x69, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x67, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 
+0x20, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x73, 0x74, 0x72, 
+0x65, 0x61, 0x6d, 0x20, 0x61, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x75, 
+0x70, 0x74, 0x20, 0x4c, 0x32, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 
+0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 
+0x20, 0x6f, 0x66, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x20, 
+0x53, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6c, 
+0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x62, 0x65, 0x66, 
+0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x67, 0x69, 0x76, 0x65, 0x73, 0x20, 0x75, 0x70, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x65, 0x78, 0x69, 0x74, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x6f, 0x63, 
+0x5f, 0x63, 0x74, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x65, 0x72, 0x72, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 
+0x20, 0x53, 0x6b, 0x69, 0x70, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x72, 
+0x65, 0x73, 0x65, 0x74, 0x20, 0x28, 0x43, 0x4d, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 
+0x47, 0x2e, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x50, 0x53, 0x29, 0x20, 0x77, 0x68, 0x65, 
+0x6e, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x63, 0x5f, 0x72, 0x65, 
+0x73, 0x65, 0x74, 0x28, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x65, 
+0x61, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x27, 0x69, 
+0x6e, 0x69, 0x74, 0x20, 0x73, 0x6f, 0x63, 0x27, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x4e, 0x4f, 
+0x54, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x61, 0x20, 0x68, 0x61, 0x72, 0x64, 
+0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x6f, 0x63, 0x5f, 0x73, 0x6b, 
+0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x61, 
+0x63, 0x6b, 0x65, 0x74, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x20, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x0a, 0x0a, 0x23, 0x70, 0x64, 0x6d, 0x61, 0x5f, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 
+0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x61, 0x73, 0x73, 
+0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 
+0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x63, 0x64, 0x6d, 0x61, 0x5f, 
+0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 
+0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 
+0x64, 0x73, 0x0a, 0x0a, 0x23, 0x74, 0x64, 0x6d, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 
+0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x75, 0x73, 0x65, 
+0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x20, 0x72, 0x61, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x74, 0x64, 0x6d, 
+0x61, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 0x4d, 
+0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 
+0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 
+0x4d, 0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x68, 0x6f, 
+0x75, 0x6c, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 
+0x74, 0x20, 0x72, 0x61, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x70, 0x6f, 
+0x6c, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 
+0x6e, 0x0a, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x2f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 
+0x4d, 0x41, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x64, 0x6d, 0x61, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x2f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x44, 
+0x4d, 0x41, 0x0a, 0x23, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6d, 0x61, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 
+0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x20, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x20, 
+0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72, 
+0x69, 0x6e, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x47, 0x42, 0x50, 0x46, 0x55, 0x4c, 0x4c, 
+0x0a, 0x23, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x2e, 0x20, 0x20, 0x67, 
+0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x20, 0x73, 0x65, 0x74, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 
+0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x65, 0x63, 0x6f, 
+0x6e, 0x64, 0x73, 0x0a, 0x23, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x73, 0x75, 
+0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x20, 0x47, 0x42, 0x50, 0x46, 0x55, 0x4c, 0x4c, 
+0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x76, 
+0x6f, 0x69, 0x64, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 
+0x73, 0x65, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x74, 0x61, 0x6b, 
+0x65, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x61, 0x66, 
+0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x2e, 0x0a, 0x0a, 
+0x23, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 
+0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x65, 0x73, 
+0x74, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x63, 0x66, 0x61, 0x70, 0x69, 0x6e, 
+0x69, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4d, 0x54, 0x5f, 0x50, 
+0x41, 0x54, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x53, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x54, 0x5f, 
+0x50, 0x41, 0x54, 0x5f, 0x41, 0x53, 0x29, 0x0a, 0x23, 0x63, 0x66, 0x61, 0x70, 0x5f, 0x74, 0x65, 
+0x73, 0x74, 0x73, 0x3d, 0x31, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 
+0x20, 0x73, 0x63, 0x61, 0x6e, 0x3a, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 
+0x73, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x62, 
+0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x65, 0x6e, 
+0x74, 0x72, 0x69, 0x65, 0x73, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 
+0x6d, 0x61, 0x78, 0x65, 0x72, 0x72, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x32, 0x35, 
+0x36, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 
+0x75, 0x73, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 
+0x74, 0x69, 0x65, 0x73, 0x3b, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x68, 0x69, 0x67, 0x68, 0x65, 
+0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x35, 0x35, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x6f, 
+0x77, 0x65, 0x73, 0x74, 0x0a, 0x0a, 0x23, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 
+0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x61, 0x72, 
+0x6c, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 
+0x35, 0x30, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 
+0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 
+0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 
+0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x74, 0x78, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 
+0x62, 0x63, 0x6d, 0x5f, 0x72, 0x78, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 
+0x69, 0x3d, 0x32, 0x30, 0x30, 0x0a, 0x23, 0x6c, 0x32, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 
+0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x31, 0x35, 0x30, 0x0a, 0x23, 0x65, 0x72, 0x72, 
+0x6f, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 0x6e, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 
+0x67, 0x6f, 0x65, 0x73, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 
+0x79, 0x20, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 
+0x69, 0x76, 0x65, 0x72, 0x20, 0x77, 0x61, 0x69, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 
+0x6c, 0x6c, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x68, 0x61, 0x74, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x72, 0x61, 
+0x69, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x4d, 0x55, 0x20, 
+0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x69, 0x6e, 
+0x67, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x0a, 0x23, 
+0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x63, 0x61, 0x73, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x41, 0x4e, 
+0x44, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x64, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x69, 
+0x6e, 0x67, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x63, 0x63, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x32, 0x35, 0x30, 0x30, 
+0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x43, 0x49, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x2f, 0x72, 0x65, 0x76, 0x20, 0x49, 0x44, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 
+0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x74, 0x6f, 0x20, 0x70, 
+0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x72, 0x65, 0x20, 0x72, 
+0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x20, 0x64, 0x69, 
+0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x28, 0x65, 0x2e, 
+0x67, 0x2e, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x36, 0x30, 0x35, 0x20, 0x64, 0x72, 
+0x69, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x35, 
+0x36, 0x31, 0x35, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x69, 
+0x73, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 
+0x79, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x63, 0x2c, 0x20, 
+0x6e, 0x6f, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 
+0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x64, 
+0x65, 0x76, 0x3d, 0x30, 0x78, 0x35, 0x36, 0x30, 0x35, 0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x6f, 
+0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 
+0x74, 0x65, 0x72, 0x73, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20, 
+0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x65, 0x73, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x20, 0x50, 0x43, 0x49, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 
+0x28, 0x75, 0x73, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x20, 0x30, 0x78, 0x34, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x30, 0x78, 0x34, 0x38, 0x29, 0x2e, 
+0x20, 0x41, 0x6e, 0x79, 0x20, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x0a, 0x23, 
+0x20, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x68, 0x65, 0x78, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 
+0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x65, 0x73, 
+0x65, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x77, 0x6f, 0x72, 0x6b, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x56, 0x78, 
+0x57, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x61, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x0a, 0x23, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x75, 
+0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 
+0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x6f, 0x63, 0x63, 0x66, 0x67, 0x30, 0x3d, 
+0x30, 0x78, 0x30, 0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x6f, 
+0x63, 0x63, 0x66, 0x67, 0x31, 0x3d, 0x30, 0x78, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 
+0x20, 0x63, 0x72, 0x79, 0x74, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 
+0x70, 0x6c, 0x6c, 0x5f, 0x78, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x63, 0x6c, 0x6b, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 
+0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 
+0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x3d, 0x20, 0x30, 0x2c, 
+0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x20, 
+0x3d, 0x20, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 0x70, 0x6c, 0x6c, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x73, 0x70, 0x65, 
+0x65, 0x64, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2d, 0x20, 0x31, 
+0x30, 0x47, 0x62, 0x70, 0x73, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x20, 0x31, 0x32, 0x47, 0x62, 0x70, 
+0x73, 0x20, 0x3d, 0x20, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 0x70, 0x6c, 
+0x6c, 0x5f, 0x31, 0x32, 0x67, 0x62, 0x70, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 
+0x69, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x47, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 
+0x65, 0x6c, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x31, 0x30, 0x2f, 0x31, 0x32, 
+0x20, 0x47, 0x62, 0x70, 0x73, 0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x73, 0x70, 0x65, 
+0x65, 0x64, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x0a, 0x23, 0x78, 
+0x67, 0x78, 0x73, 0x5f, 0x70, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x31, 0x30, 0x67, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x55, 0x6e, 0x69, 0x20, 
+0x63, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 
+0x2c, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 
+0x20, 0x61, 0x6e, 0x64, 0x20, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 
+0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 
+0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 
+0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 
+0x73, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 
+0x20, 0x50, 0x4c, 0x4c, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 
+0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 
+0x6f, 0x72, 0x74, 0x29, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x70, 0x6c, 0x6c, 0x6c, 0x6f, 
+0x63, 0x6b, 0x3d, 0x31, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x65, 0x6d, 0x61, 0x70, 0x20, 0x58, 
+0x47, 0x58, 0x53, 0x20, 0x72, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x78, 0x20, 0x6c, 0x61, 
+0x6e, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x20, 0x6d, 
+0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x62, 0x69, 0x74, 
+0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x0a, 0x23, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x61, 
+0x63, 0x68, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 
+0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x4c, 0x61, 0x6e, 0x65, 0x20, 0x30, 0x20, 
+0x28, 0x62, 0x69, 0x74, 0x20, 0x31, 0x35, 0x2d, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x4c, 0x61, 0x6e, 
+0x65, 0x20, 0x31, 0x20, 0x28, 0x62, 0x69, 0x74, 0x20, 0x31, 0x31, 0x2d, 0x38, 0x29, 0x2c, 0x0a, 
+0x23, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x28, 0x62, 0x69, 0x74, 0x20, 0x37, 0x2d, 
+0x34, 0x29, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x28, 
+0x62, 0x69, 0x74, 0x20, 0x33, 0x2d, 0x30, 0x29, 0x2e, 0x20, 0x20, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 
+0x76, 0x65, 0x72, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x78, 0x20, 0x6c, 0x61, 0x6e, 
+0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x20, 0x33, 0x2c, 0x20, 
+0x32, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x30, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2c, 0x20, 0x0a, 
+0x23, 0x20, 0x73, 0x65, 0x74, 0x20, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x61, 
+0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x33, 0x32, 0x31, 0x30, 0x2e, 0x20, 0x0a, 
+0x23, 0x20, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x69, 0x73, 0x2e, 0x20, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 
+0x61, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x30, 0x31, 0x32, 0x33, 0x0a, 0x23, 
+0x78, 0x67, 0x78, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 
+0x3d, 0x30, 0x78, 0x30, 0x31, 0x32, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 
+0x73, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x63, 0x6c, 0x6f, 0x63, 
+0x6b, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x45, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x3d, 0x20, 0x30, 
+0x2c, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 
+0x20, 0x3d, 0x20, 0x31, 0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x6c, 0x63, 0x70, 
+0x6c, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x65, 
+0x72, 0x64, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x68, 
+0x61, 0x73, 0x69, 0x73, 0x2c, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 
+0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 
+0x6c, 0x75, 0x65, 0x73, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 
+0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 
+0x72, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x65, 
+0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 
+0x64, 0x65, 0x73, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 
+0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x72, 
+0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x30, 0x47, 0x20, 0x50, 0x48, 0x59, 0x20, 0x63, 0x6f, 
+0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x2c, 0x20, 
+0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 
+0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x30, 
+0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 
+0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x53, 0x46, 0x50, 0x2b, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 
+0x61, 0x73, 0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x64, 0x72, 0x69, 0x76, 
+0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x72, 
+0x65, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 0x73, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x2f, 0x66, 
+0x69, 0x62, 0x65, 0x72, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 
+0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 
+0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 
+0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 
+0x63, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x77, 0x68, 
+0x65, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 
+0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x20, 0x49, 0x66, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 
+0x20, 0x6f, 0x72, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x66, 0x66, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x3d, 0x30, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x53, 0x47, 0x4d, 
+0x49, 0x49, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 
+0x66, 0x3d, 0x31, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x2e, 
+0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 
+0x69, 0x75, 0x6d, 0x3d, 0x31, 0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x69, 
+0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 
+0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 
+0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x50, 
+0x48, 0x59, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x0a, 0x23, 0x20, 0x53, 0x4f, 0x43, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x20, 
+0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 
+0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x69, 0x73, 
+0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x0a, 
+0x23, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x67, 0x6d, 0x69, 0x69, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x5f, 0x67, 
+0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x35, 0x36, 0x37, 0x30, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 
+0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 0x69, 
+0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x0a, 0x23, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x64, 0x72, 0x6f, 0x70, 0x20, 
+0x74, 0x68, 0x65, 0x6d, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 
+0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 
+0x69, 0x62, 0x65, 0x64, 0x20, 0x64, 0x75, 0x65, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 
+0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6f, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x6f, 0x73, 
+0x73, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x35, 0x36, 0x37, 0x30, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 
+0x70, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x69, 0x66, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x72, 
+0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 
+0x65, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x64, 0x65, 0x63, 
+0x72, 0x65, 0x61, 0x73, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x20, 0x0a, 0x23, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x2c, 0x20, 0x62, 0x75, 0x74, 
+0x20, 0x6e, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x20, 0x70, 0x61, 0x63, 
+0x6b, 0x65, 0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x64, 0x72, 0x6f, 
+0x70, 0x70, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x32, 0x34, 0x63, 0x36, 0x34, 0x20, 
+0x45, 0x45, 0x50, 0x52, 0x4f, 0x4d, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x46, 0x50, 0x20, 0x73, 
+0x68, 0x61, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x49, 0x32, 
+0x43, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 
+0x20, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x31, 0x20, 
+0x74, 0x6f, 0x20, 0x74, 0x72, 0x65, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x23, 0x64, 0x65, 
+0x76, 0x69, 0x63, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 
+0x69, 0x73, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x20, 0x61, 0x73, 0x20, 0x58, 0x46, 0x50, 0x2e, 0x0a, 0x23, 0x69, 0x32, 0x63, 0x5f, 0x6e, 0x76, 
+0x72, 0x61, 0x6d, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x43, 0x46, 
+0x38, 0x35, 0x37, 0x34, 0x20, 0x6c, 0x70, 0x74, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 
+0x43, 0x34, 0x32, 0x35, 0x38, 0x20, 0x70, 0x6f, 0x65, 0x33, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x49, 0x32, 0x43, 0x20, 0x73, 0x6c, 
+0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x20, 0x53, 0x65, 0x74, 
+0x20, 0x0a, 0x23, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x72, 0x65, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 
+0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x61, 0x73, 0x20, 
+0x50, 0x4f, 0x45, 0x2e, 0x0a, 0x23, 0x69, 0x32, 0x63, 0x5f, 0x68, 0x63, 0x6c, 0x6b, 0x5f, 0x73, 
+0x6b, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x44, 0x36, 0x33, 0x30, 0x30, 0x30, 0x20, 
+0x69, 0x6e, 0x69, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x2e, 0x20, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 
+0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x30, 0x57, 0x3b, 0x20, 0x6f, 0x74, 0x68, 0x65, 
+0x72, 0x77, 0x69, 0x73, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 
+0x66, 0x20, 0x33, 0x37, 0x57, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x0a, 0x23, 
+0x69, 0x32, 0x63, 0x5f, 0x70, 0x6f, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x31, 0x38, 0x39, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x2c, 0x20, 0x32, 0x35, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 
+0x63, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x32, 0x47, 0x20, 
+0x69, 0x6e, 0x20, 0x35, 0x36, 0x37, 0x35, 0x2e, 0x0a, 0x23, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x31, 0x32, 0x47, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x53, 0x65, 0x74, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 
+0x36, 0x37, 0x30, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x20, 
+0x69, 0x6e, 0x20, 0x35, 0x36, 0x37, 0x35, 0x2e, 0x0a, 0x23, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 
+0x5f, 0x35, 0x36, 0x37, 0x30, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x37, 0x35, 0x20, 0x48, 0x4f, 0x4c, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
+0x69, 0x6e, 0x67, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x6d, 0x6f, 
+0x64, 0x65, 0x20, 0x28, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 
+0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x29, 0x0a, 0x23, 0x53, 0x65, 0x74, 0x20, 
+0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 
+0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x65, 0x6c, 
+0x6c, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x74, 
+0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 
+0x6f, 0x6c, 0x5f, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x3d, 0x30, 0x0a, 0x23, 0x53, 0x65, 0x74, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x20, 
+0x77, 0x69, 0x74, 0x68, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x72, 
+0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x6f, 0x6c, 
+0x5f, 0x68, 0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 
+0x53, 0x77, 0x61, 0x70, 0x20, 0x58, 0x41, 0x55, 0x49, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x20, 
+0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x68, 0x79, 0x38, 0x37, 0x30, 0x33, 0x2f, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x37, 0x33, 0x28, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x62, 0x6f, 0x61, 
+0x72, 0x64, 0x29, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x72, 0x78, 
+0x5f, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x46, 
+0x6c, 0x69, 0x70, 0x20, 0x58, 0x41, 0x55, 0x49, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x54, 0x58, 
+0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x38, 0x37, 0x30, 0x36, 0x20, 0x28, 
+0x61, 0x6c, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x58, 
+0x47, 0x58, 0x53, 0x31, 0x36, 0x47, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x0a, 0x23, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x31, 0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 
+0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 
+0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x34, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x2e, 
+0x0a, 0x23, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x30, 0x30, 
+0x46, 0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 
+0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x30, 0x2e, 0x0a, 
+0x23, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x30, 0x46, 0x30, 
+0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 
+0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x2e, 0x0a, 0x23, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x46, 0x30, 0x30, 0x20, 
+0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 
+0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x32, 0x2e, 0x0a, 0x23, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x46, 0x30, 0x30, 0x30, 0x20, 0x2d, 
+0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 
+0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x33, 0x2e, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 
+0x74, 0x79, 0x5f, 0x66, 0x6c, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x49, 0x6e, 0x76, 0x65, 
+0x72, 0x74, 0x20, 0x50, 0x43, 0x53, 0x20, 0x54, 0x58, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 
+0x20, 0x74, 0x6f, 0x20, 0x50, 0x4d, 0x44, 0x2e, 0x20, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
+0x65, 0x64, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 
+0x30, 0x35, 0x20, 0x50, 0x48, 0x59, 0x2e, 0x20, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x74, 
+0x78, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 
+0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x70, 
+0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x34, 0x38, 0x38, 0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x41, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 0x70, 
+0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 0x0a, 0x23, 
+0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x70, 0x77, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x45, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 
+0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x73, 0x70, 0x65, 0x65, 
+0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x70, 0x77, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x30, 0x30, 0x20, 
+0x20, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 
+0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 
+0x73, 0x70, 0x65, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 
+0x5f, 0x70, 0x77, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 
+0x31, 0x30, 0x30, 0x30, 0x20, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 
+0x66, 0x20, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x47, 0x69, 0x67, 0x61, 0x20, 0x73, 0x70, 0x65, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 0x23, 0x50, 0x6f, 
+0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x34, 0x38, 0x38, 0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 
+0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x41, 0x2f, 0x42, 0x20, 0x6c, 0x6f, 
+0x77, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 0x41, 
+0x63, 0x63, 0x65, 0x70, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x30, 0x28, 0x6c, 0x6f, 
+0x77, 0x65, 0x73, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x20, 0x74, 0x6f, 0x20, 0x37, 
+0x28, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x2e, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 
+0x6f, 0x72, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x43, 0x58, 0x34, 0x20, 0x70, 0x69, 
+0x6e, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x70, 0x69, 
+0x6e, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x35, 0x36, 0x35, 0x30, 0x78, 0x2f, 0x35, 0x36, 
+0x36, 0x30, 0x78, 0x0a, 0x23, 0x63, 0x78, 0x34, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x38, 0x37, 0x30, 0x35, 0x20, 0x58, 0x46, 0x50, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x0a, 0x23, 
+0x20, 0x38, 0x37, 0x30, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x38, 0x37, 0x30, 0x35, 0x20, 0x63, 
+0x61, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x58, 0x46, 0x50, 
+0x73, 0x20, 0x28, 0x74, 0x68, 0x75, 0x73, 0x20, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74, 
+0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x0a, 0x23, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 
+0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x77, 0x65, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x74, 0x2c, 0x20, 
+0x62, 0x75, 0x74, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x74, 0x2c, 0x0a, 0x23, 0x20, 0x69, 
+0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x78, 0x66, 0x70, 0x5f, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x35, 0x20, 0x57, 
+0x41, 0x4e, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 
+0x35, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x41, 
+0x4e, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x57, 0x41, 0x4e, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x73, 0x65, 0x74, 0x74, 
+0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x69, 0x73, 0x20, 0x4c, 0x41, 0x4e, 0x20, 0x6d, 0x6f, 0x64, 
+0x65, 0x2e, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x77, 0x61, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 
+0x65, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x31, 0x20, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 
+0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 
+0x65, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 
+0x75, 0x73, 0x20, 0x50, 0x48, 0x59, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x6f, 0x6e, 
+0x20, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 0x30, 0x33, 0x2f, 0x34, 0x2f, 0x35, 0x0a, 
+0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 
+0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 
+0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x78, 0x65, 0x6e, 0x62, 0x6c, 0x76, 0x6c, 
+0x3d, 0x30, 0x20, 0x20, 0x20, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 
+0x52, 0x65, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6c, 0x65, 0x76, 
+0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x78, 
+0x72, 0x73, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 
+0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 
+0x20, 0x42, 0x69, 0x61, 0x73, 0x20, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 
+0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x62, 0x69, 0x61, 
+0x73, 0x66, 0x6c, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 
+0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 
+0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x50, 0x6f, 
+0x77, 0x65, 0x72, 0x20, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 
+0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x70, 0x72, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x58, 0x20, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 
+0x70, 0x74, 0x74, 0x78, 0x66, 0x6c, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 
+0x61, 0x73, 0x65, 0x72, 0x20, 0x4c, 0x6f, 0x73, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x69, 0x67, 
+0x68, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 
+0x5f, 0x6f, 0x70, 0x74, 0x72, 0x78, 0x6c, 0x6f, 0x73, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 
+0x20, 0x52, 0x58, 0x20, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 
+0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x72, 0x78, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x58, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x65, 
+0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 
+0x78, 0x6f, 0x6e, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x36, 0x35, 0x4c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x36, 
+0x4c, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x4c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 
+0x35, 0x36, 0x36, 0x36, 0x4c, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x44, 0x73, 
+0x20, 0x61, 0x72, 0x65, 0x20, 0x30, 0x78, 0x35, 0x36, 0x36, 0x35, 0x2c, 0x20, 0x73, 0x61, 0x6d, 
+0x65, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 
+0x2e, 0x0a, 0x23, 0x20, 0x48, 0x6f, 0x77, 0x65, 0x76, 0x65, 0x72, 0x2c, 0x20, 0x74, 0x68, 0x65, 
+0x73, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 
+0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x70, 
+0x70, 0x65, 0x72, 0x20, 0x32, 0x34, 0x20, 0x46, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 
+0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 
+0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 
+0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 
+0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x3d, 0x30, 
+0x78, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 
+0x66, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x66, 0x61, 0x6d, 
+0x69, 0x6c, 0x79, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x2d, 
+0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x4d, 0x43, 0x55, 0x2c, 0x20, 0x61, 0x6c, 0x6c, 
+0x6f, 0x77, 0x73, 0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 
+0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x0a, 0x23, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 
+0x63, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x77, 0x69, 0x74, 
+0x68, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x28, 0x62, 0x75, 0x74, 0x20, 0x72, 
+0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x29, 0x2e, 0x0a, 0x23, 0x62, 0x79, 0x70, 0x61, 0x73, 
+0x73, 0x5f, 0x6d, 0x63, 0x75, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x36, 0x35, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x65, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x36, 
+0x36, 0x35, 0x20, 0x44, 0x44, 0x52, 0x20, 0x62, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x70, 0x20, 
+0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x68, 0x61, 0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 
+0x43, 0x55, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 
+0x75, 0x72, 0x65, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x3a, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 
+0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x2f, 0x35, 0x35, 0x2f, 0x36, 0x35, 0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 
+0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 
+0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 
+0x64, 0x72, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 
+0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 
+0x6c, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 
+0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 
+0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 
+0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 
+0x72, 0x30, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 
+0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 
+0x32, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 
+0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 
+0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 
+0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x6c, 
+0x65, 0x77, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 
+0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x31, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 
+0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 
+0x67, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 
+0x5f, 0x73, 0x74, 0x72, 0x30, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x30, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 
+0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 
+0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 
+0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 
+0x73, 0x32, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x32, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 
+0x69, 0x72, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 
+0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 
+0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 
+0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 
+0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x32, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 
+0x5f, 0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 
+0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 
+0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 
+0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 
+0x65, 0x77, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 
+0x33, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x6c, 0x65, 0x77, 
+0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 
+0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 
+0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 
+0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 
+0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 
+0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x68, 
+0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x20, 0x28, 0x74, 0x68, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x61, 
+0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 
+0x63, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x29, 
+0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3d, 0x33, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 
+0x77, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3d, 0x33, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 
+0x6c, 0x65, 0x77, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x3d, 0x31, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 
+0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 
+0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x31, 0x36, 0x62, 0x69, 0x74, 
+0x20, 0x44, 0x44, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x31, 0x36, 0x62, 0x69, 0x74, 0x5f, 0x64, 0x64, 
+0x72, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x66, 
+0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 
+0x65, 0x73, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x46, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x35, 0x36, 0x36, 0x35, 
+0x2f, 0x35, 0x30, 0x2f, 0x35, 0x35, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x77, 0x6f, 
+0x20, 0x6d, 0x61, 0x73, 0x6b, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x73, 
+0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x31, 0x36, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x38, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x32, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x0a, 0x23, 0x20, 0x55, 
+0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 
+0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x31, 0x32, 0x38, 0x2f, 0x32, 0x34, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2e, 0x0a, 0x23, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 
+0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 
+0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 
+0x65, 0x66, 0x69, 0x6e, 0x65, 0x73, 0x3b, 0x20, 0x73, 0x65, 0x65, 0x20, 0x73, 0x74, 0x6b, 0x2e, 
+0x73, 0x6f, 0x63, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x72, 0x65, 
+0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x73, 0x0a, 0x23, 0x0a, 
+0x23, 0x73, 0x74, 0x6b, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x34, 0x30, 0x39, 0x32, 0x0a, 0x23, 0x73, 
+0x74, 0x6b, 0x63, 0x6f, 0x73, 0x3d, 0x37, 0x0a, 0x23, 0x73, 0x74, 0x6b, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x3d, 0x22, 0x28, 0x30, 0x2c, 0x32, 0x34, 0x29, 0x20, 0x28, 0x30, 0x2c, 0x32, 0x35, 0x29, 
+0x22, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x20, 0x74, 0x6f, 0x20, 
+0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 
+0x64, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x27, 0x73, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 
+0x20, 0x77, 0x69, 0x64, 0x65, 0x0a, 0x23, 0x73, 0x74, 0x6b, 0x5f, 0x72, 0x73, 0x76, 0x64, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 
+0x61, 0x6e, 0x64, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x73, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x63, 0x6d, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x76, 0x61, 0x75, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 
+0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 
+0x35, 0x36, 0x36, 0x30, 0x78, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x65, 0x6e, 0x67, 
+0x69, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x64, 
+0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6d, 0x65, 
+0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x0a, 0x23, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x30, 0x78, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x74, 
+0x6f, 0x20, 0x35, 0x30, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 
+0x64, 0x20, 0x6f, 0x66, 0x20, 0x36, 0x30, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x0a, 0x23, 0x70, 0x6c, 
+0x6c, 0x36, 0x30, 0x30, 0x5f, 0x73, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x6b, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 
+0x6c, 0x20, 0x30, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x28, 0x30, 0x78, 0x32, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x31, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 
+0x29, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 
+0x69, 0x74, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x43, 0x55, 
+0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x29, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x72, 0x64, 0x3d, 0x37, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x77, 0x64, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x74, 0x77, 0x6c, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x33, 
+0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 
+0x66, 0x73, 0x65, 0x74, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 
+0x71, 0x6b, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 
+0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x3d, 0x30, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 
+0x5f, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x33, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 
+0x5f, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x30, 0x20, 
+0x6f, 0x6e, 0x6c, 0x79, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x72, 0x64, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x37, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x77, 0x64, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x77, 0x6c, 0x5f, 0x63, 0x68, 
+0x30, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 
+0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 
+0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 
+0x65, 0x74, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 0x71, 0x6b, 0x5f, 
+0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 
+0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x32, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x32, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x31, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x31, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6c, 
+0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 
+0x6c, 0x20, 0x31, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 
+0x72, 0x64, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x37, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 
+0x77, 0x64, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x77, 
+0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x68, 0x31, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 
+0x66, 0x73, 0x65, 0x74, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x63, 
+0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 
+0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 
+0x5f, 0x71, 0x6b, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 
+0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 
+0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x44, 
+0x52, 0x37, 0x32, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 
+0x65, 0x74, 0x65, 0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 
+0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x3d, 0x34, 0x0a, 
+0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 
+0x73, 0x65, 0x74, 0x33, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 
+0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x3d, 0x34, 0x0a, 0x23, 0x64, 
+0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 
+0x74, 0x31, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 0x71, 0x6b, 0x3d, 0x34, 0x0a, 0x23, 
+0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 
+0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 
+0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x3d, 0x30, 0x0a, 0x23, 
+0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 
+0x5f, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 
+0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 
+0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 
+0x79, 0x31, 0x5f, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 
+0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 
+0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 
+0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 
+0x72, 0x37, 0x32, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x51, 0x44, 0x52, 0x33, 0x36, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 
+0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 
+0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x0a, 0x23, 0x71, 0x64, 0x72, 
+0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 
+0x74, 0x78, 0x3d, 0x34, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x3d, 0x34, 0x0a, 0x23, 0x71, 
+0x64, 0x72, 0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 
+0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x34, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x71, 
+0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 
+0x30, 0x3d, 0x30, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 
+0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 
+0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 
+0x6e, 0x3d, 0x30, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 
+0x5f, 0x73, 0x65, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x42, 0x43, 0x41, 0x4d, 0x20, 0x74, 0x75, 
+0x6e, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 
+0x6c, 0x5f, 0x73, 0x61, 0x6d, 0x3d, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 
+0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 
+0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x6d, 
+0x65, 0x6d, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x0a, 0x23, 0x73, 0x65, 
+0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x35, 0x31, 0x32, 0x4b, 0x20, 0x4c, 0x32, 0x0a, 0x23, 0x73, 
+0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 
+0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 
+0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x39, 0x32, 0x4b, 0x20, 0x4c, 0x34, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x5f, 0x63, 0x66, 0x67, 0x3d, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x39, 0x36, 0x4b, 0x20, 0x4c, 0x34, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x5f, 0x63, 0x66, 0x67, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x4b, 0x20, 0x4c, 
+0x50, 0x4d, 0x20, 0x31, 0x32, 0x38, 0x4b, 0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x35, 
+0x0a, 0x0a, 0x23, 0x20, 0x33, 0x38, 0x34, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x36, 0x34, 0x4b, 
+0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x38, 
+0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x36, 0x34, 0x4b, 0x20, 0x4c, 0x34, 0x20, 0x28, 0x51, 0x44, 
+0x52, 0x20, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x29, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x37, 
+0x0a, 0x0a, 0x23, 0x20, 0x31, 0x39, 0x32, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x33, 0x32, 0x4b, 
+0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x34, 0x38, 
+0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x39, 0x0a, 0x0a, 0x23, 0x20, 0x38, 
+0x39, 0x36, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 
+0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x31, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x4e, 0x6f, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x31, 0x20, 0x54, 0x43, 0x41, 0x4d, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 
+0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x79, 0x70, 0x65, 
+0x20, 0x32, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 
+0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 0x32, 0x0a, 
+0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x4c, 0x32, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 
+0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 
+0x2c, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x51, 0x75, 
+0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x36, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x29, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 
+0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 
+0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 
+0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 
+0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x33, 0x0a, 0x0a, 
+0x23, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x48, 0x61, 
+0x6c, 0x66, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 
+0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 
+0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 
+0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x51, 0x75, 0x61, 
+0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x36, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 
+0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 0x20, 
+0x41, 0x6c, 0x6c, 0x20, 0x56, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 
+0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x48, 
+0x61, 0x6c, 0x66, 0x20, 0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 
+0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x37, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 
+0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 
+0x4d, 0x41, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x6d, 
+0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 
+0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4d, 0x41, 0x43, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4d, 0x59, 0x53, 0x54, 0x41, 
+0x54, 0x49, 0x4f, 0x4e, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x0a, 0x23, 
+0x73, 0x65, 0x65, 0x72, 0x5f, 0x6d, 0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 
+0x20, 0x4d, 0x59, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x6d, 0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 
+0x74, 0x65, 0x6e, 0x63, 0x79, 0x37, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x63, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x37, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 
+0x67, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 
+0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 
+0x73, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 
+0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x72, 0x61, 0x76, 0x65, 
+0x72, 0x73, 0x61, 0x6c, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x73, 0x2e, 0x20, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0a, 0x23, 0x20, 0x75, 
+0x73, 0x65, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x73, 0x70, 
+0x65, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x70, 0x6d, 0x5f, 0x74, 
+0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3d, 
+0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4f, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 
+0x32, 0x78, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2c, 0x20, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 
+0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 
+0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x0a, 0x23, 0x20, 0x28, 0x62, 0x61, 0x63, 0x6b, 0x2d, 0x70, 
+0x61, 0x6e, 0x65, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x29, 0x20, 0x69, 0x6e, 0x73, 0x74, 
+0x65, 0x61, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x58, 0x47, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 
+0x6f, 0x63, 0x6b, 0x20, 0x28, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x2d, 0x70, 0x61, 0x6e, 0x65, 0x6c, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 
+0x6b, 0x75, 0x70, 0x5f, 0x6f, 0x6e, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x37, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x4c, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x37, 
+0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 
+0x50, 0x76, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x37, 
+0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 
+0x50, 0x76, 0x36, 0x20, 0x36, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 
+0x78, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x75, 
+0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 
+0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x31, 0x32, 0x38, 0x2d, 0x62, 
+0x69, 0x74, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x38, 0x38, 0x2d, 
+0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 
+0x32, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x38, 0x38, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x34, 0x20, 0x41, 0x43, 0x4c, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x61, 
+0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x33, 0x36, 0x30, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 
+0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x73, 0x5f, 0x61, 0x63, 0x6c, 
+0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 
+0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x66, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 
+0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 
+0x4c, 0x32, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 
+0x74, 0x5f, 0x6c, 0x32, 0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 
+0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x34, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 
+0x70, 0x34, 0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 
+0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 
+0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 
+0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 0x2b, 0x20, 0x49, 0x50, 0x76, 0x34, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 
+0x6c, 0x32, 0x69, 0x70, 0x34, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 
+0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 0x2b, 0x20, 
+0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x69, 0x70, 0x36, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x20, 0x6d, 0x6f, 0x64, 0x65, 
+0x2c, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 
+0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x6b, 0x63, 0x65, 0x74, 0x2c, 0x20, 0x31, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x34, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 
+0x6e, 0x61, 0x6c, 0x20, 0x53, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2c, 0x20, 0x30, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x2e, 0x35, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x6c, 
+0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x20, 
+0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x0a, 0x23, 0x65, 
+0x78, 0x74, 0x5f, 0x73, 0x72, 0x61, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 
+0x69, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x3a, 
+0x0a, 0x23, 0x20, 0x31, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 
+0x32, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 
+0x20, 0x32, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x33, 
+0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 0x20, 0x34, 0x3a, 0x20, 
+0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x35, 0x3a, 0x20, 0x32, 0x35, 
+0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 0x20, 
+0x36, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 
+0x53, 0x31, 0x0a, 0x23, 0x20, 0x37, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 
+0x30, 0x0a, 0x23, 0x20, 0x38, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 
+0x0a, 0x23, 0x20, 0x39, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x41, 
+0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x74, 0x68, 
+0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x31, 
+0x30, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 
+0x62, 0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 
+0x0a, 0x23, 0x20, 0x31, 0x31, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 
+0x4c, 0x33, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 
+0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x62, 
+0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 0x0a, 
+0x23, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x31, 0x32, 0x0a, 
+0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x61, 0x72, 
+0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
+0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x37, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x2c, 
+0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 
+0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4c, 0x32, 0x20, 0x70, 0x61, 
+0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x38, 0x38, 0x2d, 
+0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 
+0x69, 0x74, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 
+0x65, 0x79, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 
+0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 
+0x76, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x32, 0x38, 0x38, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x33, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 
+0x73, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x49, 0x50, 0x34, 0x20, 0x6b, 0x65, 0x79, 0x2c, 0x0a, 0x23, 0x20, 0x34, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x4c, 0x32, 0x20, 0x6b, 0x65, 0x79, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 
+0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 0x56, 0x36, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 
+0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x33, 0x36, 
+0x30, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x34, 0x33, 0x32, 
+0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x33, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 
+0x62, 0x69, 0x74, 0x2c, 0x0a, 0x23, 0x20, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x69, 
+0x6e, 0x67, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x49, 
+0x50, 0x36, 0x20, 0x6b, 0x65, 0x79, 0x2c, 0x20, 0x35, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 0x73, 
+0x69, 0x6e, 0x67, 0x20, 0x4c, 0x32, 0x20, 0x6b, 0x65, 0x79, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 
+0x69, 0x70, 0x36, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x75, 0x6e, 0x69, 
+0x74, 0x2e, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x6b, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 
+0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x72, 0x63, 0x70, 0x75, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 
+0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 
+0x75, 0x6e, 0x69, 0x74, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 
+0x74, 0x6f, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x64, 0x65, 
+0x76, 0x69, 0x63, 0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x6f, 0x72, 0x74, 
+0x3d, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x76, 0x6c, 0x61, 0x6e, 0x69, 
+0x64, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x4f, 0x4f, 0x42, 0x20, 0x28, 0x6f, 0x75, 0x74, 0x20, 0x6f, 
+0x66, 0x20, 0x62, 0x61, 0x6e, 0x64, 0x29, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x65, 
+0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x63, 0x70, 0x75, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 
+0x74, 0x73, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6f, 0x6f, 0x62, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x61, 0x63, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x2f, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x0a, 0x23, 0x72, 0x63, 
+0x70, 0x75, 0x5f, 0x6f, 0x6f, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x0a, 0x0a, 
+0x23, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x70, 0x61, 0x63, 0x6b, 
+0x65, 0x74, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 
+0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 
+0x63, 0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x62, 0x6d, 
+0x70, 0x3d, 0x30, 0x78, 0x34, 0x0a, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x2f, 
+0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 
+0x6f, 0x6e, 0x20, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x0a, 0x23, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 
+0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x33, 0x32, 0x30, 0x28, 0x31, 0x36, 0x20, 0x2f, 0x20, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 
+0x20, 0x6f, 0x66, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x34, 0x20, 0x66, 0x61, 0x6d, 0x69, 
+0x6c, 0x79, 0x29, 0x20, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 
+0x32, 0x31, 0x20, 0x0a, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x32, 0x31, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x30, 
+0x20, 0x0a, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x32, 0x30, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x2f, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x33, 0x32, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x0a, 0x0a, 
+0x00
+};
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/esw/counter.c esw_sdk_final/src/appl/diag/esw/counter.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/esw/counter.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/esw/counter.c	2018-01-10 11:53:52.891376000 +0000
@@ -112,21 +112,21 @@ counter_val_set(int unit, soc_port_t por
 
     } else if (ctr_reg >= SOC_COUNTER_NON_DMA_START &&
                ctr_reg < SOC_COUNTER_NON_DMA_END) {
         non_dma =
             &SOC_CONTROL(unit)->counter_non_dma[ctr_reg -
                                                 SOC_COUNTER_NON_DMA_START];
-        LOG_INFO(BSL_LS_APPL_COUNTER,
+        LOG_VERBOSE(BSL_LS_APPL_COUNTER,
                  (BSL_META_U(unit,
                              "cval_set: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
                   non_dma->cname,
                   ar_idx, port, ind,
                   COMPILER_64_HI(val),
                   COMPILER_64_LO(val)));
     } else {
-        LOG_INFO(BSL_LS_APPL_COUNTER,
+        LOG_VERBOSE(BSL_LS_APPL_COUNTER,
                  (BSL_META_U(unit,
                              "cval_set: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
                   SOC_REG_NAME(unit, ctr_reg),
                   ar_idx, port, ind,
                   COMPILER_64_HI(val),
                   COMPILER_64_LO(val)));
@@ -190,21 +190,21 @@ counter_val_get(int unit, soc_port_t por
 
         } else if (ctr_reg >= SOC_COUNTER_NON_DMA_START &&
                    ctr_reg < SOC_COUNTER_NON_DMA_END) {
             non_dma =
                 &SOC_CONTROL(unit)->counter_non_dma[ctr_reg -
                                                SOC_COUNTER_NON_DMA_START];
-            LOG_INFO(BSL_LS_APPL_COUNTER,
+            LOG_VERBOSE(BSL_LS_APPL_COUNTER,
                      (BSL_META_U(unit,
                                  "cval_get: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
                       non_dma->cname,
                       ar_idx, port, ind,
                       COMPILER_64_HI(*val),
                       COMPILER_64_LO(*val)));
         } else {
-            LOG_INFO(BSL_LS_APPL_COUNTER,
+            LOG_VERBOSE(BSL_LS_APPL_COUNTER,
                      (BSL_META_U(unit,
                                  "cval_get: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
                       SOC_REG_NAME(unit, ctr_reg),
                       ar_idx, port, ind,
                       COMPILER_64_HI(*val),
                       COMPILER_64_LO(*val)));
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/esw/hash.c esw_sdk_final/src/appl/diag/esw/hash.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/esw/hash.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/esw/hash.c	2018-01-10 11:53:52.891376000 +0000
@@ -74,14 +74,18 @@
 #define   ETHERTYPE_ELIGIBILITY_MAP_TABLE_SIZE_MAX  16 /* maximum ELIGIBILITY ethertype size */
 
 #define   ETHERTYPE_IPV6 0x86dd /* ipv6 ethertype */
 #define   ETHERTYPE_IPV4 0x0800 /* ipv4 ethertype */
 #define   ETHERTYPE_MIN  0x0600 /* minimum ethertype for hashing */
 
+#ifndef IP_PROT_TCP
 #define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#endif
+#ifndef IP_PROT_UDP
 #define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
 
 #if defined(BCM_TRIDENT_SUPPORT) || defined(BCM_ENDURO_SUPPORT)
 /* Packet info flags for HashDestination. */
 #define BCM_HD_FLAGS_STR \
     "SRC_GPORT", \
     "VLAN", \
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/helixmem_soc.c esw_sdk_final/src/appl/diag/helixmem_soc.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/helixmem_soc.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/src/appl/diag/helixmem_soc.c	2018-01-10 11:53:52.887376000 +0000
@@ -0,0 +1,704 @@
+unsigned char helixmem_soc_array[] = {
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x77, 
+0x69, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 
+0x65, 0x73, 0x74, 0x73, 0x20, 0x2e, 0x2e, 0x2e, 0x22, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 
+0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x44, 0x53, 
+0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 
+0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 
+0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 
+0x55, 0x53, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 
+0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 
+0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 
+0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 
+0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 
+0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 
+0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 
+0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 
+0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 
+0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 
+0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 
+0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 
+0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 
+0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 
+0x54, 0x5f, 0x48, 0x4f, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 
+0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 
+0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 
+0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 
+0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 
+0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 
+0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 
+0x47, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 
+0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 
+0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 
+0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 
+0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 
+0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 
+0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 
+0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 
+0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 
+0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 
+0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 
+0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x43, 
+0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 
+0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x50, 
+0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 
+0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 
+0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 
+0x53, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 
+0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 
+0x48, 0x45, 0x43, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 
+0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x54, 0x43, 
+0x41, 0x4d, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 
+0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 
+0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 
+0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x50, 0x4f, 
+0x4c, 0x49, 0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 
+0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 
+0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 
+0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 
+0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 
+0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 
+0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 
+0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x4d, 0x43, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 
+0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 
+0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 
+0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 
+0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 
+0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 
+0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 
+0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 
+0x46, 0x49, 0x46, 0x4f, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 
+0x4f, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x4d, 
+0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 
+0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 
+0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 
+0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 
+0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 
+0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 
+0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 
+0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 
+0x46, 0x49, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 
+0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 
+0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 
+0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 
+0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 
+0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 
+0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 
+0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 
+0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x43, 0x4d, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 
+0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 
+0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 
+0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 
+0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x4d, 0x55, 0x4c, 
+0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 
+0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 
+0x34, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 
+0x50, 0x56, 0x34, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 
+0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 
+0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 
+0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 
+0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 
+0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 
+0x49, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 
+0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 
+0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 
+0x43, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 
+0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 
+0x4e, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 
+0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 
+0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 
+0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 
+0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 
+0x54, 0x52, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 
+0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 
+0x45, 0x58, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x41, 0x47, 
+0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x43, 0x42, 0x50, 0x43, 0x45, 0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 
+0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 
+0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 
+0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 
+0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 
+0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 
+0x31, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x50, 0x4b, 
+0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 
+0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x50, 
+0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 
+0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 
+0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x43, 0x50, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x46, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x30, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 
+0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 
+0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 
+0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 
+0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 
+0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 
+0x50, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 
+0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 
+0x50, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 
+0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 
+0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 
+0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 
+0x4e, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x30, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 
+0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x34, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x34, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x58, 0x51, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x36, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x37, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x39, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x31, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 
+0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 
+0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x33, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x33, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x34, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x58, 0x51, 0x31, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 
+0x31, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x31, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 
+0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x38, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x39, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x58, 0x51, 0x32, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 
+0x51, 0x32, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x32, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x32, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 
+0x33, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x34, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x35, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x32, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4d, 0x4f, 0x44, 
+0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 
+0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 
+0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 
+0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4e, 
+0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 
+0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 
+0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 
+0x5f, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x53, 0x4f, 0x55, 0x52, 0x43, 
+0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x54, 0x52, 
+0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 
+0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 
+0x47, 0x52, 0x45, 0x53, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 
+0x53, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x54, 0x52, 0x55, 0x4e, 
+0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x54, 
+0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x55, 0x44, 0x46, 0x5f, 0x4f, 
+0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 
+0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 
+0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 
+0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 
+0x54, 0x41, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 
+0x55, 0x42, 0x4e, 0x45, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 
+0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 
+0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 
+0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 
+0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 
+0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x00
+};
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/Makefile esw_sdk_final/src/appl/diag/Makefile
--- sdk-xgs-robo-6.4.8/src/appl/diag/Makefile	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/Makefile	2018-01-10 11:53:52.891376000 +0000
@@ -101,12 +101,23 @@ ifdef BUILD_PHYMOD
 subdirs+= phymod
 endif
 ifdef PORTMOD_SUPPORT
 subdirs+= portmod
 endif
 
+# If L7_INCLUDE_BCM_SHELL is not defined then compile sysconf.c only.
+ifdef LVL7_FIXUP 
+ifndef L7_INCLUDE_BCM_SHELL
+subdirs=
+# Only compile sysconf.c file if BCM_SHELL is not included.
+LSRCS   =       sysconf.c
+LOBJS   =       $(addsuffix .o, $(basename ${LSRCS}))
+BOBJS   =       $(addprefix ${BLDDIR}/,${LOBJS})
+endif # L7_INCLUDE_BCM_SHELL
+endif # LVL7_FIXUP 
+
 include ${SDK}/make/Make.subdirs
 
 lib = libdiag
 include ${SDK}/make/Make.lib
 
 include ${SDK}/make/Make.depend
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/rc_soc.c esw_sdk_final/src/appl/diag/rc_soc.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/rc_soc.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/src/appl/diag/rc_soc.c	2018-01-10 11:53:52.891376000 +0000
@@ -0,0 +1,3328 @@
+unsigned char rc_soc_array[] = {
+0x23, 0x20, 0x24, 0x49, 0x64, 0x3a, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x2c, 0x76, 0x20, 
+0x31, 0x2e, 0x39, 0x37, 0x2e, 0x36, 0x2e, 0x31, 0x30, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 
+0x6f, 0x6d, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x24, 0x0a, 0x23, 0x20, 0x24, 0x43, 0x6f, 0x70, 0x79, 
+0x72, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x20, 0x28, 0x63, 0x29, 0x20, 0x31, 0x39, 0x39, 0x38, 0x2d, 
+0x32, 0x30, 0x30, 0x31, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 
+0x72, 0x70, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 
+0x20, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2e, 0x24, 0x0a, 0x23, 0x0a, 0x23, 0x20, 
+0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x52, 
+0x43, 0x20, 0x28, 0x72, 0x75, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x29, 
+0x20, 0x66, 0x69, 0x6c, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x61, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x65, 0x78, 0x65, 
+0x63, 0x75, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x42, 0x43, 
+0x4d, 0x20, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x20, 0x75, 0x70, 0x2e, 0x20, 0x20, 0x54, 0x79, 0x70, 
+0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6c, 0x65, 
+0x20, 0x69, 0x73, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 
+0x63, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x73, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6c, 0x61, 
+0x73, 0x68, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2c, 0x20, 0x4e, 
+0x56, 0x52, 0x41, 0x4d, 0x2c, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x0a, 0x23, 
+0x0a, 0x23, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 
+0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 
+0x6c, 0x65, 0x20, 0x75, 0x73, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 
+0x20, 0x74, 0x6f, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x20, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 
+0x68, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x69, 0x74, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x20, 
+0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6f, 0x66, 
+0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6d, 0x61, 0x64, 0x65, 
+0x3a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x32, 0x35, 0x4b, 0x34, 0x38, 0x2f, 0x50, 0x34, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x70, 0x34, 0x38, 0x3d, 0x31, 
+0x3b, 0x20, 0x73, 0x65, 0x74, 0x20, 0x56, 0x78, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x62, 0x6f, 
+0x6f, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x20, 0x30, 0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x30, 0x4b, 
+0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x65, 0x72, 0x63, 0x38, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x30, 0x4b, 0x32, 
+0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x3d, 0x31, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 
+0x30, 0x4b, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x73, 0x74, 
+0x6b, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6d, 0x65, 0x72, 0x6c, 
+0x69, 0x6e, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x39, 0x30, 0x52, 0x34, 0x38, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x61, 0x6e, 0x63, 
+0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 
+0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x31, 0x4b, 0x31, 0x32, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 
+0x61, 0x63, 0x6f, 0x5f, 0x6b, 0x31, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 
+0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x3d, 0x31, 0x20, 
+0x28, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x29, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 
+0x68, 0x74, 0x3d, 0x31, 0x20, 0x28, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 
+0x6e, 0x67, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x37, 0x33, 0x4b, 0x32, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x74, 0x77, 0x6f, 0x6c, 0x79, 
+0x6e, 0x78, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x65, 0x72, 0x63, 
+0x75, 0x6c, 0x79, 0x6e, 0x78, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 
+0x79, 0x6e, 0x78, 0x61, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x34, 0x38, 
+0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 
+0x32, 0x34, 0x53, 0x58, 0x5f, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x3d, 
+0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x35, 0x30, 0x4b, 0x32, 0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x3d, 
+0x31, 0x20, 0x28, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x35, 0x36, 0x35, 0x30, 0x4c, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x35, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 
+0x65, 0x72, 0x63, 0x38, 0x5f, 0x31, 0x35, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x52, 0x32, 0x34, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 
+0x20, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 0x34, 0x38, 
+0x4c, 0x4d, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 0x34, 0x38, 0x4c, 
+0x4d, 0x2d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 
+0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x42, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 0x34, 
+0x38, 0x4c, 0x4d, 0x2d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x43, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 
+0x34, 0x38, 0x4c, 0x4d, 0x2d, 0x32, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x43, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x50, 0x34, 0x38, 0x4c, 0x4d, 0x2d, 0x35, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x3d, 0x31, 0x0a, 
+0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 
+0x34, 0x50, 0x34, 0x38, 0x50, 0x4f, 0x45, 0x52, 0x45, 0x46, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x50, 0x32, 0x34, 0x52, 0x45, 0x46, 0x20, 0x50, 0x30, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 0x32, 
+0x34, 0x20, 0x20, 0x20, 0x20, 0x50, 0x30, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x31, 0x30, 0x32, 0x50, 0x34, 0x38, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x33, 0x33, 0x30, 0x30, 0x50, 0x32, 0x34, 
+0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 
+0x64, 0x64, 0x20, 0x6d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x38, 0x30, 0x30, 0x4b, 
+0x32, 0x30, 0x43, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x31, 0x67, 0x3d, 
+0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x37, 0x30, 0x30, 0x4b, 0x31, 0x36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x75, 0x6d, 0x76, 0x3d, 0x31, 0x0a, 
+0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x38, 0x30, 
+0x30, 0x4b, 0x32, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x3d, 0x31, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 
+0x38, 0x30, 0x4b, 0x31, 0x36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x6f, 0x6c, 0x64, 0x77, 0x69, 0x6e, 0x67, 
+0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x33, 0x31, 0x34, 0x50, 0x32, 0x34, 0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x36, 0x33, 
+0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 
+0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 
+0x46, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x52, 0x35, 
+0x30, 0x54, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x52, 0x35, 0x30, 
+0x54, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x32, 0x30, 0x4b, 0x32, 0x34, 0x58, 0x47, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x32, 0x30, 0x4b, 0x32, 0x34, 0x58, 0x47, 0x3d, 
+0x31, 0x0a, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x31, 0x20, 0x22, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x72, 0x63, 0x3a, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x3b, 0x20, 0x65, 0x78, 
+0x69, 0x74, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x22, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x6e, 0x6f, 0x20, 0x63, 0x75, 0x72, 0x72, 
+0x65, 0x6e, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x3b, 0x20, 0x65, 0x78, 0x69, 0x74, 0x22, 0x0a, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x72, 0x63, 0x3a, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x24, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x24, 0x64, 0x65, 
+0x76, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x71, 0x75, 0x69, 
+0x65, 0x74, 0x20, 0x6e, 0x6f, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x65, 0x63, 0x68, 0x6f, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x72, 0x63, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x5c, 0x24, 0x72, 0x63, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x72, 0x63, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x2b, 
+0x20, 0x30, 0x22, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x6e, 0x6f, 0x65, 0x63, 0x68, 0x6f, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x71, 0x75, 
+0x69, 0x65, 0x74, 0x20, 0x79, 0x65, 0x73, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 
+0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x0a, 0x23, 0x20, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 
+0x64, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 0x5c, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x71, 
+0x75, 0x69, 0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x70, 0x6c, 
+0x69, 0x73, 0x69, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x62, 
+0x6f, 0x61, 0x72, 0x64, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 0x31, 0x22, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 
+0x68, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 
+0x69, 0x67, 0x68, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 
+0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x63, 0x68, 0x69, 
+0x70, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 
+0x78, 0x70, 0x72, 0x20, 0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 0x30, 0x20, 
+0x3d, 0x3d, 0x20, 0x30, 0x78, 0x35, 0x36, 0x35, 0x30, 0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 
+0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x31, 0x35, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 
+0x6e, 0x61, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x68, 0x65, 0x72, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 
+0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x32, 0x20, 
+0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 
+0x68, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 
+0x69, 0x78, 0x31, 0x35, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 
+0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 0x30, 0x20, 0x3d, 0x3d, 0x20, 0x30, 
+0x78, 0x62, 0x35, 0x30, 0x31, 0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x31, 0x30, 0x78, 0x34, 0x20, 0x31, 
+0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x61, 0x73, 0x79, 0x72, 
+0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 
+0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 
+0x30, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x78, 0x62, 0x36, 0x30, 0x32, 0x22, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 
+0x5f, 0x31, 0x78, 0x31, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 
+0x64, 0x6c, 0x65, 0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x67, 0x6f, 0x6c, 0x64, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x31, 
+0x32, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x7c, 0x7c, 
+0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x33, 
+0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x78, 0x67, 0x73, 0x31, 0x32, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x78, 0x67, 0x73, 0x33, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 
+0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 
+0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x78, 0x67, 0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x7c, 0x7c, 0x20, 0x24, 
+0x3f, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x24, 0x3f, 0x78, 0x67, 0x73, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x50, 0x42, 0x4d, 0x50, 0x5f, 
+0x41, 0x4c, 0x4c, 0x20, 0x30, 0x78, 0x30, 0x62, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x67, 0x73, 0x6c, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x50, 
+0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x30, 0x30, 0x30, 
+0x66, 0x66, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 
+0x34, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x30, 
+0x31, 0x34, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x32, 0x31, 0x35, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x24, 
+0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 0x34, 0x5f, 0x41, 0x31, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x30, 0x31, 0x34, 0x5f, 0x41, 0x31, 0x20, 0x7c, 0x7c, 
+0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 0x35, 0x5f, 0x41, 0x31, 0x20, 0x26, 
+0x26, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x72, 0x61, 0x70, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x31, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x35, 0x5f, 0x41, 
+0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x35, 0x5f, 0x42, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 0x6e, 0x6f, 0x68, 0x67, 0x20, 0x31, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 
+0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x65, 0x62, 0x5f, 0x34, 0x38, 0x70, 0x20, 0x31, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x6c, 0x6d, 0x66, 0x62, 0x34, 0x38, 0x3d, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x65, 0x74, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x27, 0x73, 0x20, 0x77, 0x61, 
+0x69, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 
+0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x33, 0x20, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x51, 0x75, 0x69, 0x63, 0x6b, 
+0x54, 0x75, 0x72, 0x6e, 0x0a, 0x23, 0x20, 0x28, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 
+0x64, 0x20, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x20, 0x73, 0x65, 
+0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 
+0x20, 0x69, 0x73, 0x20, 0x31, 0x30, 0x30, 0x25, 0x20, 0x62, 0x75, 0x73, 0x79, 0x20, 0x77, 0x69, 
+0x74, 0x68, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x29, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x09, 0x22, 0x73, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x09, 0x22, 0x73, 0x74, 0x69, 0x6d, 
+0x65, 0x6f, 0x75, 0x74, 0x20, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x70, 0x68, 0x79, 0x20, 0x6c, 0x65, 0x64, 
+0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x3a, 0x20, 0x35, 0x34, 
+0x36, 0x34, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x20, 0x6c, 0x65, 0x64, 0x20, 
+0x62, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x61, 0x63, 0x74, 
+0x69, 0x76, 0x69, 0x74, 0x79, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 
+0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 
+0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x70, 0x68, 
+0x79, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x3d, 0x30, 0x78, 0x31, 0x38, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x20, 0x74, 0x68, 0x72, 
+0x65, 0x61, 0x64, 0x73, 0x20, 0x69, 0x66, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x69, 
+0x73, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 
+0x67, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x6c, 0x5f, 
+0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 
+0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6c, 0x32, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x6f, 0x6e, 0x2d, 0x63, 0x68, 0x69, 0x70, 0x20, 0x6d, 0x65, 
+0x6d, 0x6f, 0x72, 0x79, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 
+0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 
+0x73, 0x6f, 0x63, 0x3b, 0x20, 0x62, 0x69, 0x73, 0x74, 0x20, 0x6c, 0x33, 0x20, 0x61, 0x72, 0x6c, 
+0x20, 0x63, 0x62, 0x70, 0x22, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x73, 0x6f, 0x63, 0x0a, 0x0a, 
+0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x6d, 0x69, 0x73, 
+0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 
+0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6d, 
+0x69, 0x73, 0x63, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 
+0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x20, 
+0x69, 0x66, 0x20, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73, 0x61, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x4e, 
+0x4f, 0x54, 0x45, 0x20, 0x3a, 0x20, 0x74, 0x63, 0x61, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6e, 0x67, 
+0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6d, 0x69, 0x73, 0x63, 0x22, 0x20, 0x75, 0x6e, 0x6c, 
+0x65, 0x73, 0x73, 0x20, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x63, 
+0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 
+0x3d, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 
+0x64, 0x0a, 0x69, 0x66, 0x20, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x72, 0x63, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x26, 0x26, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 
+0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 
+0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x20, 0x61, 0x74, 
+0x74, 0x61, 0x63, 0x68, 0x20, 0x30, 0x20, 0x65, 0x73, 0x77, 0x20, 0x30, 0x22, 0x0a, 0x69, 0x66, 
+0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 
+0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 
+0x22, 0x6d, 0x75, 0x78, 0x73, 0x65, 0x6c, 0x20, 0x30, 0x3b, 0x20, 0x6d, 0x75, 0x78, 0x73, 0x65, 
+0x6c, 0x20, 0x30, 0x78, 0x38, 0x30, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 
+0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 
+0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 
+0x74, 0x63, 0x61, 0x6d, 0x3b, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 
+0x54, 0x43, 0x41, 0x4d, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x4d, 0x4d, 0x55, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x0a, 0x69, 
+0x6e, 0x69, 0x74, 0x20, 0x6d, 0x6d, 0x75, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 
+0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x66, 0x66, 
+0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2d, 0x42, 0x69, 0x74, 0x20, 0x45, 0x72, 0x72, 0x6f, 
+0x72, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x6e, 0x20, 0x35, 
+0x36, 0x37, 0x30, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x22, 
+0x6d, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x6e, 0x74, 0x63, 0x6e, 0x74, 0x6c, 0x20, 0x70, 0x70, 
+0x5f, 0x73, 0x62, 0x65, 0x5f, 0x65, 0x6e, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 
+0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x47, 0x42, 0x50, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 
+0x54, 0x45, 0x3a, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x42, 0x45, 0x46, 
+0x4f, 0x52, 0x45, 0x20, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x62, 0x70, 
+0x20, 0x22, 0x73, 0x69, 0x7a, 0x65, 0x67, 0x62, 0x70, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x61, 
+0x75, 0x74, 0x6f, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3d, 0x24, 0x71, 0x75, 0x69, 0x65, 0x74, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x53, 0x6c, 0x6f, 0x74, 0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x41, 0x64, 
+0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6f, 0x6f, 0x6c, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 
+0x45, 0x3a, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x47, 0x42, 0x50, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 
+0x64, 0x20, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x20, 0x73, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 
+0x74, 0x2e, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x30, 0x35, 0x5f, 0x41, 0x30, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x73, 0x66, 0x61, 
+0x70, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x4f, 0x4e, 0x43, 0x45, 0x20, 
+0x50, 0x45, 0x52, 0x20, 0x52, 0x45, 0x53, 0x45, 0x54, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x62, 0x70, 0x20, 
+0x22, 0x73, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x20, 0x46, 0x72, 
+0x65, 0x65, 0x20, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6f, 0x6f, 0x6c, 0x0a, 
+0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x68, 0x6f, 
+0x75, 0x6c, 0x64, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x62, 0x65, 0x20, 0x64, 0x6f, 0x6e, 0x65, 0x20, 
+0x75, 0x6e, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x69, 0x73, 0x20, 0x6b, 
+0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x61, 0x64, 
+0x20, 0x43, 0x46, 0x41, 0x50, 0x0a, 0x23, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x65, 
+0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x6e, 0x65, 0x65, 0x64, 
+0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x20, 0x6f, 0x75, 
+0x74, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x63, 0x66, 0x61, 0x70, 0x5f, 0x74, 0x65, 0x73, 
+0x74, 0x73, 0x20, 0x22, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x49, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x43, 0x46, 0x41, 0x50, 0x3b, 
+0x20, 0x63, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x0a, 0x0a, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x65, 0x64, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x20, 
+0x43, 0x4c, 0x49, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x41, 0x50, 0x49, 0x0a, 
+0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 
+0x20, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x72, 0x61, 0x77, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x20, 0x77, 0x72, 0x69, 
+0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x68, 0x61, 0x76, 
+0x69, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x0a, 0x23, 0x20, 0x63, 0x6c, 0x6f, 0x62, 
+0x62, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x54, 0x61, 
+0x62, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 
+0x20, 0x62, 0x79, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x20, 0x62, 
+0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x0a, 0x23, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x70, 0x75, 
+0x74, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x22, 0x69, 0x6e, 
+0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x2e, 0x20, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x0a, 0x23, 
+0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6d, 0x69, 0x67, 0x68, 0x74, 
+0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 
+0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x3b, 
+0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x42, 
+0x43, 0x4d, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 
+0x62, 0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 
+0x3a, 0x20, 0x2a, 0x2a, 0x2a, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x72, 0x20, 0x2a, 0x2a, 0x2a, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 
+0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x27, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x76, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x31, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 
+0x3d, 0x30, 0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 
+0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 
+0x20, 0x76, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 
+0x3d, 0x31, 0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 
+0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 
+0x4c, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x70, 0x76, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 0x3d, 0x31, 0x2c, 0x53, 0x50, 0x5f, 0x53, 0x54, 0x3d, 0x33, 
+0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 
+0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 
+0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x3b, 
+0x20, 0x5c, 0x0a, 0x09, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x30, 0x20, 0x33, 0x32, 0x20, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x09, 0x20, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x22, 0x77, 
+0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x32, 0x34, 
+0x20, 0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x31, 0x22, 0x3b, 0x20, 0x5c, 
+0x0a, 0x09, 0x20, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x22, 0x77, 0x72, 
+0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x32, 0x20, 
+0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x32, 0x22, 0x3b, 0x20, 0x5c, 0x0a, 
+0x09, 0x20, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x20, 0x22, 0x77, 0x72, 0x69, 
+0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x38, 0x20, 0x24, 0x70, 
+0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x32, 0x22, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 
+0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x37, 0x20, 
+0x31, 0x20, 0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x76, 0x27, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x72, 0x72, 0x6f, 
+0x72, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 
+0x69, 0x6e, 0x74, 0x6f, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x41, 0x52, 
+0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 
+0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x61, 0x72, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 
+0x72, 0x5f, 0x64, 0x6d, 0x61, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x72, 0x63, 0x3a, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x73, 0x68, 0x61, 
+0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 
+0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x32, 0x6d, 
+0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x33, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x72, 0x63, 0x3a, 0x20, 0x4c, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x61, 
+0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x0a, 
+0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x43, 
+0x4d, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 
+0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x73, 0x65, 0x74, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 
+0x73, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 
+0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x32, 0x35, 0x30, 
+0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x65, 0x20, 
+0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x3d, 0x6f, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 
+0x6e, 0x65, 0x67, 0x3d, 0x6f, 0x6e, 0x20, 0x5c, 0x0a, 0x09, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 
+0x3d, 0x30, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x3d, 0x74, 0x72, 
+0x75, 0x65, 0x20, 0x74, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x74, 0x72, 0x75, 0x65, 0x20, 
+0x72, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x74, 0x72, 0x75, 0x65, 0x3b, 0x20, 0x5c, 0x0a, 
+0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x3d, 0x6f, 0x6e, 0x20, 0x74, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x66, 0x61, 
+0x6c, 0x73, 0x65, 0x20, 0x72, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x66, 0x61, 0x6c, 0x73, 
+0x65, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 
+0x20, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x69, 0x74, 
+0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x20, 0x73, 
+0x70, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x72, 0x65, 0x65, 0x20, 0x69, 0x73, 0x20, 
+0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x73, 0x6f, 0x20, 0x70, 0x75, 0x74, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 
+0x65, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x73, 0x74, 0x67, 0x20, 0x73, 0x74, 0x70, 0x20, 0x31, 0x20, 0x61, 0x6c, 0x6c, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 
+0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x20, 
+0x28, 0x4d, 0x44, 0x50, 0x2c, 0x20, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2c, 0x20, 0x52, 
+0x44, 0x50, 0x2c, 0x20, 0x44, 0x44, 0x50, 0x29, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 
+0x20, 0x30, 0x31, 0x3a, 0x31, 0x30, 0x3a, 0x31, 0x38, 0x3a, 0x31, 0x31, 0x3a, 0x32, 0x32, 0x3a, 
+0x33, 0x33, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x41, 0x2c, 0x20, 
+0x73, 0x69, 0x6e, 0x63, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2c, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x44, 
+0x4c, 0x46, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x62, 0x79, 
+0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x44, 0x41, 0x2e, 0x0a, 0x23, 0x0a, 
+0x23, 0x20, 0x28, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6f, 
+0x75, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 
+0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x6c, 0x32, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x4d, 0x41, 0x43, 0x61, 0x64, 0x64, 0x72, 
+0x65, 0x73, 0x73, 0x3d, 0x30, 0x30, 0x3a, 0x31, 0x30, 0x3a, 0x31, 0x38, 0x3a, 0x31, 0x31, 0x3a, 
+0x32, 0x32, 0x3a, 0x33, 0x33, 0x20, 0x53, 0x54, 0x61, 0x74, 0x69, 0x63, 0x3d, 0x74, 0x72, 0x75, 
+0x65, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 
+0x65, 0x72, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x75, 0x6e, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x61, 
+0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x20, 0x62, 
+0x79, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x20, 0x61, 0x62, 0x6f, 
+0x76, 0x65, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x6d, 0x61, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 
+0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x6d, 0x61, 0x20, 0x74, 0x72, 0x75, 0x65, 0x22, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 
+0x3d, 0x31, 0x30, 0x30, 0x30, 0x20, 0x50, 0x62, 0x6d, 0x3d, 0x61, 0x6c, 0x6c, 0x20, 0x44, 0x6d, 
+0x61, 0x3d, 0x24, 0x64, 0x6d, 0x61, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x63, 0x6f, 
+0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 
+0x7a, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x76, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 
+0x75, 0x65, 0x73, 0x20, 0x6b, 0x65, 0x70, 0x74, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x27, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x27, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 
+0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 
+0x20, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x64, 0x75, 0x6d, 0x70, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 
+0x6f, 0x66, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x67, 0x6f, 0x20, 0x74, 0x6f, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 
+0x3f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x70, 0x77, 
+0x20, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x2b, 0x72, 0x61, 0x77, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 
+0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x53, 0x44, 0x4b, 0x73, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 
+0x73, 0x69, 0x67, 0x6e, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 
+0x64, 0x20, 0x69, 0x6e, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x6c, 0x65, 0x64, 0x2f, 0x65, 0x78, 
+0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x70, 
+0x34, 0x38, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x37, 
+0x46, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 
+0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x37, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x37, 0x43, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 
+0x37, 0x46, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 
+0x20, 0x31, 0x36, 0x20, 0x37, 0x43, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x37, 0x44, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 
+0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x39, 0x41, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 
+0x36, 0x20, 0x37, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x30, 0x35, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x34, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x43, 0x20, 0x36, 0x37, 0x20, 0x33, 0x35, 0x20, 0x36, 0x37, 0x20, 
+0x32, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x39, 0x42, 0x20, 0x36, 0x37, 0x20, 0x38, 0x39, 0x20, 
+0x36, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x38, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 
+0x43, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x37, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x38, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x44, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 0x31, 0x33, 0x20, 0x33, 0x41, 0x20, 0x37, 
+0x30, 0x20, 0x36, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x44, 0x20, 0x37, 0x31, 0x20, 0x43, 0x33, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 
+0x20, 0x42, 0x46, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x35, 0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 
+0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 
+0x35, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 
+0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x46, 0x20, 0x37, 0x37, 0x20, 0x43, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x42, 0x36, 0x20, 0x37, 0x31, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 
+0x46, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 0x35, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 
+0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 
+0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 
+0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x42, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 
+0x70, 0x34, 0x38, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 
+0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 
+0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x31, 0x20, 0x36, 
+0x37, 0x20, 0x33, 0x36, 0x20, 0x32, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x39, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x38, 0x36, 0x20, 0x37, 0x46, 0x20, 
+0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x43, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 
+0x34, 0x20, 0x32, 0x34, 0x20, 0x38, 0x36, 0x20, 0x37, 0x45, 0x20, 0x31, 0x36, 0x20, 0x37, 0x45, 
+0x20, 0x43, 0x41, 0x20, 0x30, 0x37, 0x20, 0x45, 0x30, 0x20, 0x31, 0x37, 0x20, 0x30, 0x44, 0x20, 
+0x31, 0x32, 0x20, 0x30, 0x38, 0x20, 0x39, 0x38, 0x20, 0x32, 0x37, 0x20, 0x44, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x38, 0x37, 0x20, 0x39, 0x31, 0x20, 0x37, 0x34, 0x20, 0x32, 0x44, 0x20, 0x33, 0x41, 
+0x20, 0x32, 0x38, 0x20, 0x31, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x33, 0x45, 0x20, 0x46, 0x41, 0x20, 0x30, 0x32, 0x20, 0x35, 0x37, 0x20, 0x45, 0x41, 0x20, 0x30, 
+0x36, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 
+0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x62, 0x6c, 
+0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 
+0x20, 0x30, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x32, 0x41, 0x20, 0x30, 0x36, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x41, 0x20, 0x30, 0x38, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6b, 0x6e, 
+0x69, 0x67, 0x67, 0x65, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x45, 0x20, 0x36, 0x37, 
+0x20, 0x38, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x43, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x5c, 
+0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x33, 0x38, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x34, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x34, 0x43, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x35, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x44, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x38, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x43, 0x37, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x43, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x42, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x42, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x35, 0x20, 0x42, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x37, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x73, 
+0x64, 0x6b, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x6b, 0x31, 0x32, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x42, 0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x41, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 0x36, 
+0x37, 0x20, 0x36, 0x45, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x39, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x35, 0x20, 0x30, 0x32, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x43, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x36, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x30, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x45, 0x20, 0x31, 0x32, 0x20, 0x41, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x34, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x43, 0x20, 
+0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x46, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x44, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x41, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x46, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x46, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x36, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x44, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x41, 0x36, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 
+0x09, 0x09, 0x23, 0x20, 0x6b, 0x31, 0x32, 0x2d, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x36, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x23, 0x20, 0x77, 0x6b, 0x35, 0x36, 0x37, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x20, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 
+0x32, 0x41, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 
+0x36, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 
+0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 
+0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 
+0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 0x30, 0x35, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x36, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x32, 0x41, 0x20, 0x30, 0x34, 0x20, 0x36, 
+0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x31, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6c, 0x61, 0x6e, 
+0x63, 0x65, 0x6c, 0x6f, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x78, 0x67, 0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x34, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 0x35, 0x20, 0x36, 
+0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 
+0x72, 0x65, 0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x77, 
+0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x66, 
+0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 
+0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x77, 
+0x6b, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6d, 0x65, 
+0x72, 0x6c, 0x69, 0x6e, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 
+0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x35, 0x36, 
+0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 
+0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 
+0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x67, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x45, 0x30, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x31, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 
+0x0a, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 
+0x20, 0x5c, 0x0a, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x35, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 
+0x46, 0x45, 0x20, 0x5c, 0x0a, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x31, 0x20, 0x35, 0x43, 
+0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 
+0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x36, 0x20, 0x43, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 
+0x20, 0x41, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x37, 0x31, 0x20, 0x41, 0x36, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x46, 0x20, 0x37, 0x35, 0x20, 
+0x41, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x37, 0x31, 0x20, 
+0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 
+0x44, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x35, 0x36, 0x39, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 0x6c, 
+0x79, 0x6e, 0x78, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 
+0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 0x30, 0x31, 0x20, 0x36, 0x37, 0x20, 
+0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 
+0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x74, 
+0x77, 0x6f, 0x6c, 0x79, 0x6e, 0x78, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 
+0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x31, 0x20, 0x30, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 0x31, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x30, 0x34, 0x20, 0x5c, 0x0a, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 
+0x32, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x37, 0x37, 0x20, 0x32, 0x41, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x68, 0x65, 0x72, 
+0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x6d, 0x61, 
+0x67, 0x6e, 0x75, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x37, 0x20, 0x32, 0x33, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 
+0x32, 0x30, 0x20, 0x36, 0x37, 0x20, 0x32, 0x33, 0x20, 0x44, 0x32, 0x20, 0x33, 0x38, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x38, 0x20, 0x36, 0x37, 
+0x20, 0x32, 0x33, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x31, 0x31, 0x20, 
+0x45, 0x39, 0x20, 0x30, 0x32, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 0x20, 0x38, 
+0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x41, 
+0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x41, 0x20, 0x36, 0x37, 0x20, 0x33, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x34, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x35, 0x20, 0x5c, 0x0a, 
+0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x34, 
+0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x34, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x45, 0x35, 0x20, 
+0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x30, 0x20, 0x45, 0x35, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x39, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x30, 0x20, 0x45, 0x34, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x45, 0x34, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 
+0x36, 0x36, 0x35, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6d, 0x61, 
+0x67, 0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x35, 0x41, 0x20, 0x36, 0x37, 0x20, 0x39, 0x43, 
+0x20, 0x30, 0x36, 0x20, 0x46, 0x41, 0x20, 0x36, 0x37, 0x20, 0x44, 0x41, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x42, 0x20, 0x36, 0x37, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x43, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x45, 0x39, 0x20, 0x30, 0x35, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 
+0x39, 0x38, 0x20, 0x43, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x46, 0x39, 0x20, 0x30, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 
+0x20, 0x43, 0x32, 0x20, 0x46, 0x30, 0x20, 0x42, 0x36, 0x20, 0x46, 0x39, 0x20, 0x35, 0x30, 0x20, 
+0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x33, 0x36, 0x20, 0x45, 
+0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x45, 0x20, 0x37, 0x34, 0x20, 0x35, 0x31, 0x20, 
+0x33, 0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x32, 0x20, 0x31, 0x32, 0x20, 0x44, 
+0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x41, 0x20, 0x37, 0x35, 0x20, 0x44, 0x37, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x44, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x44, 0x34, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x34, 0x20, 0x37, 0x37, 0x20, 0x44, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x31, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x41, 0x20, 0x30, 0x32, 
+0x20, 0x46, 0x42, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x31, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x31, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x44, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 
+0x31, 0x20, 0x44, 0x34, 0x20, 0x37, 0x37, 0x20, 0x44, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 0x32, 0x20, 0x35, 0x37, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x37, 0x34, 0x20, 0x45, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x37, 0x37, 0x20, 0x45, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x34, 0x20, 0x45, 0x45, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 
+0x36, 0x35, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6d, 0x61, 0x67, 
+0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 
+0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x30, 
+0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 
+0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x30, 0x20, 0x46, 0x42, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x35, 0x20, 0x30, 0x39, 0x20, 0x41, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x37, 
+0x20, 0x36, 0x37, 0x20, 0x37, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 0x42, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 
+0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 
+0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 
+0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x34, 0x33, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x32, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x42, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x37, 
+0x37, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x37, 0x45, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x42, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x5c, 
+0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x44, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x42, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6d, 0x61, 0x67, 0x6e, 
+0x75, 0x6d, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x36, 0x30, 0x20, 0x46, 0x42, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x31, 0x20, 
+0x31, 0x30, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 0x36, 0x37, 0x20, 0x44, 
+0x30, 0x20, 0x36, 0x37, 0x20, 0x43, 0x30, 0x20, 0x37, 0x37, 0x20, 0x31, 0x39, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x42, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x33, 0x34, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x43, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x38, 0x20, 
+0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x41, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x42, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x42, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x31, 
+0x36, 0x20, 0x46, 0x46, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 
+0x20, 0x36, 0x37, 0x20, 0x41, 0x34, 0x20, 0x37, 0x35, 0x20, 0x41, 0x42, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 
+0x32, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x38, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x37, 0x35, 0x20, 0x44, 0x44, 0x20, 0x39, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 
+0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x43, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x31, 0x20, 0x30, 0x45, 
+0x20, 0x36, 0x37, 0x20, 0x45, 0x39, 0x20, 0x36, 0x37, 0x20, 0x44, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x31, 0x41, 0x20, 0x36, 0x37, 0x20, 0x35, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 
+0x43, 0x20, 0x30, 0x36, 0x20, 0x46, 0x41, 0x20, 0x36, 0x37, 0x20, 0x44, 0x30, 0x20, 0x30, 0x36, 
+0x20, 0x46, 0x42, 0x20, 0x36, 0x37, 0x20, 0x44, 0x30, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x31, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x45, 0x39, 0x20, 0x30, 0x35, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 
+0x39, 0x38, 0x20, 0x43, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x46, 0x39, 0x20, 0x30, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 
+0x20, 0x43, 0x32, 0x20, 0x46, 0x30, 0x20, 0x42, 0x36, 0x20, 0x46, 0x39, 0x20, 0x35, 0x30, 0x20, 
+0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x33, 0x36, 0x20, 0x45, 
+0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x35, 0x31, 0x20, 
+0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x32, 0x20, 0x31, 0x32, 0x20, 0x44, 
+0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x41, 0x20, 0x37, 0x35, 0x20, 0x43, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x37, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x43, 0x41, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x41, 0x20, 0x37, 0x37, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32, 
+0x20, 0x46, 0x42, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x34, 0x32, 0x20, 0x46, 0x46, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x46, 0x45, 
+0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x45, 0x46, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 
+0x38, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x45, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x45, 
+0x36, 0x20, 0x38, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x36, 
+0x20, 0x46, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x35, 0x20, 0x46, 0x36, 0x20, 0x39, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x38, 0x5f, 0x31, 0x35, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 
+0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x39, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x38, 0x36, 0x20, 0x37, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 
+0x46, 0x20, 0x43, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x34, 0x20, 0x32, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x36, 0x20, 0x37, 0x45, 0x20, 0x31, 0x36, 0x20, 0x37, 0x45, 0x20, 0x43, 0x41, 0x20, 
+0x30, 0x37, 0x20, 0x45, 0x30, 0x20, 0x31, 0x37, 0x20, 0x30, 0x44, 0x20, 0x31, 0x32, 0x20, 0x30, 
+0x38, 0x20, 0x39, 0x38, 0x20, 0x32, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x39, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x32, 0x42, 0x20, 0x33, 0x41, 0x20, 0x32, 0x38, 0x27, 
+0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x35, 
+0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x37, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x31, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x46, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x31, 0x20, 0x35, 0x43, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 
+0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x41, 0x44, 0x20, 0x31, 0x36, 
+0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x46, 0x20, 0x37, 0x35, 0x20, 0x41, 0x36, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 0x34, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x44, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x44, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x27, 
+0x22, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 
+0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x39, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x33, 0x34, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x38, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x41, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x42, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 
+0x0a, 0x20, 0x37, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x31, 0x36, 
+0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 0x20, 
+0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x41, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x41, 0x42, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 
+0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 
+0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x35, 0x36, 0x39, 0x35, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x42, 0x20, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 
+0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 
+0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 
+0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x32, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 
+0x33, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x46, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 
+0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 0x37, 
+0x35, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x41, 0x46, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 
+0x38, 0x70, 0x35, 0x36, 0x39, 0x35, 0x5f, 0x31, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x36, 0x37, 0x20, 0x39, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x39, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x39, 
+0x20, 0x37, 0x35, 0x20, 0x32, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x43, 0x45, 0x20, 
+0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x37, 0x37, 0x20, 0x32, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 
+0x20, 0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x31, 0x39, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x34, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x35, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x37, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x44, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x45, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x43, 0x37, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x43, 
+0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x31, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x39, 
+0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x43, 0x45, 0x20, 
+0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 
+0x64, 0x6b, 0x35, 0x36, 0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4c, 0x65, 
+0x64, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x65, 
+0x77, 0x20, 0x72, 0x65, 0x76, 0x20, 0x6f, 0x66, 0x20, 0x46, 0x42, 0x20, 0x53, 0x44, 0x4b, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x52, 0x65, 0x66, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x66, 0x62, 0x32, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x42, 
+0x20, 0x36, 0x37, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x31, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x34, 0x20, 0x36, 0x37, 0x20, 0x34, 0x42, 0x20, 
+0x37, 0x37, 0x20, 0x32, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x42, 0x36, 
+0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x46, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x34, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 
+0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x43, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x42, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x44, 
+0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 
+0x37, 0x31, 0x20, 0x42, 0x44, 0x20, 0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x42, 0x36, 0x20, 0x30, 
+0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 
+0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x44, 0x20, 0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 
+0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 
+0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x39, 0x20, 0x30, 
+0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 
+0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 
+0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 
+0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 
+0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x31, 0x20, 
+0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 
+0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x42, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 0x39, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 
+0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x41, 0x46, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 
+0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 0x37, 0x35, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x41, 0x46, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 0x31, 0x32, 
+0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x35, 0x36, 
+0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x20, 
+0x2d, 0x35, 0x30, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x31, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 
+0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x32, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 
+0x32, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x44, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 0x39, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 
+0x42, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x41, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x39, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x41, 0x33, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x37, 0x37, 0x20, 0x41, 0x41, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x37, 0x44, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x43, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 
+0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x39, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x41, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x41, 0x33, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x37, 0x37, 0x20, 0x41, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 
+0x34, 0x38, 0x70, 0x35, 0x36, 0x35, 0x30, 0x34, 0x5f, 0x35, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 
+0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x31, 0x30, 0x78, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 
+0x32, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x36, 0x37, 
+0x20, 0x31, 0x45, 0x20, 0x37, 0x35, 0x20, 0x30, 0x41, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x33, 0x41, 0x20, 0x30, 0x43, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 
+0x20, 0x35, 0x37, 0x20, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x31, 0x32, 0x70, 0x63, 0x78, 
+0x34, 0x35, 0x36, 0x35, 0x30, 0x31, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 
+0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x31, 0x41, 
+0x20, 0x36, 0x37, 0x20, 0x43, 0x32, 0x20, 0x37, 0x37, 0x20, 0x32, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x37, 0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x44, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x42, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x42, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 
+0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x34, 
+0x20, 0x30, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x37, 0x31, 0x20, 0x42, 0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 
+0x44, 0x20, 0x37, 0x35, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x42, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x42, 0x20, 0x37, 0x37, 0x20, 0x43, 0x32, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x70, 
+0x6f, 0x65, 0x34, 0x38, 0x70, 0x35, 0x36, 0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 
+0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 
+0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 
+0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 
+0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x39, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x36, 0x38, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 0x20, 0x35, 0x32, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x35, 0x35, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x38, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x45, 0x34, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x44, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x44, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 0x45, 0x34, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x36, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x44, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x37, 0x31, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x44, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 
+0x36, 0x31, 0x30, 0x32, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 
+0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x65, 0x6c, 0x69, 
+0x78, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 
+0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 
+0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 
+0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x36, 0x42, 0x20, 0x36, 0x37, 0x20, 0x41, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x30, 0x32, 0x20, 0x31, 0x39, 0x20, 0x32, 0x38, 0x20, 
+0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x37, 0x20, 0x35, 0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x45, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x38, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x45, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x44, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x46, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x44, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 
+0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 
+0x37, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x44, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x37, 0x31, 0x20, 0x44, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 0x20, 0x44, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x44, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 
+0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 
+0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 
+0x23, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 
+0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x35, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 
+0x44, 0x20, 0x37, 0x35, 0x20, 0x32, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x44, 0x32, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x37, 0x37, 0x20, 0x32, 0x45, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 
+0x37, 0x20, 0x43, 0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x31, 0x39, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x33, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x34, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 
+0x43, 0x34, 0x20, 0x36, 0x37, 0x20, 0x43, 0x34, 0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x43, 0x42, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x42, 0x20, 0x37, 0x37, 0x20, 0x44, 0x32, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x35, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x34, 0x20, 0x30, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x44, 0x20, 0x37, 0x35, 
+0x20, 0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x43, 0x42, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x42, 0x20, 0x37, 0x37, 0x20, 0x44, 0x32, 0x20, 0x31, 0x32, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 
+0x35, 0x36, 0x36, 0x30, 0x31, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 
+0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x45, 0x61, 0x73, 
+0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 
+0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x36, 0x30, 0x32, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x31, 0x78, 0x31, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 
+0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x43, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x35, 0x20, 0x31, 0x44, 0x20, 0x36, 0x37, 0x20, 0x38, 0x41, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x39, 0x20, 0x37, 0x37, 0x20, 0x32, 0x35, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 
+0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x31, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x31, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 
+0x0a, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x41, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x43, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x38, 0x33, 0x20, 0x31, 0x36, 0x20, 0x45, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x38, 0x33, 
+0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 
+0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x36, 0x30, 0x32, 0x2e, 
+0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 
+0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 
+0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x33, 0x33, 0x30, 0x30, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x32, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 
+0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x45, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x39, 0x45, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 
+0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x39, 0x45, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x45, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x32, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 
+0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x33, 0x33, 0x30, 0x30, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 
+0x75, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x33, 0x31, 0x34, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 
+0x63, 0x6d, 0x35, 0x36, 0x33, 0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 0x65, 0x66, 0x20, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 
+0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 
+0x37, 0x39, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 
+0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 
+0x20, 0x5c, 0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x39, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 
+0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 
+0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 
+0x31, 0x20, 0x33, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x34, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x5c, 0x0a, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 
+0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x5c, 0x0a, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x30, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x43, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 
+0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x43, 0x20, 0x37, 0x37, 0x20, 0x42, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 
+0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x43, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 
+0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 
+0x20, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x33, 0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 
+0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 
+0x64, 0x6c, 0x65, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x31, 0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 
+0x36, 0x20, 0x46, 0x33, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x32, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 
+0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 
+0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 
+0x37, 0x31, 0x20, 0x38, 0x41, 0x20, 0x37, 0x37, 0x20, 0x39, 0x31, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x32, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x43, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 0x37, 0x37, 
+0x20, 0x37, 0x34, 0x20, 0x43, 0x36, 0x20, 0x46, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 
+0x39, 0x31, 0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x43, 0x20, 0x37, 0x35, 0x20, 0x38, 0x33, 0x20, 0x37, 0x37, 0x20, 0x39, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x30, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x32, 0x31, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x38, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x46, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 0x36, 0x20, 0x46, 0x33, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x32, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x32, 0x44, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x34, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x35, 0x44, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x35, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x30, 0x20, 0x31, 0x36, 0x20, 0x46, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x39, 0x30, 0x20, 0x37, 0x37, 
+0x20, 0x39, 0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x43, 
+0x31, 0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 
+0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x37, 0x37, 0x20, 0x37, 0x41, 0x20, 0x43, 
+0x36, 0x20, 0x46, 0x33, 0x20, 0x37, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x37, 0x20, 0x39, 0x30, 
+0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x38, 0x32, 0x20, 0x37, 0x35, 0x20, 
+0x38, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x39, 0x37, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x30, 0x30, 0x2e, 
+0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 
+0x79, 0x5f, 0x31, 0x67, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x34, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x34, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 
+0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 
+0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x30, 
+0x30, 0x63, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x6f, 0x6c, 
+0x64, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x33, 0x20, 0x44, 0x32, 0x20, 0x31, 0x30, 0x20, 0x37, 0x35, 0x20, 0x30, 0x45, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x42, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x37, 0x37, 0x20, 
+0x31, 0x32, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x33, 
+0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 
+0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 0x36, 0x20, 0x46, 0x34, 0x20, 0x31, 0x32, 0x20, 
+0x46, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x46, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x33, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 
+0x46, 0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x46, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 
+0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 
+0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x43, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x34, 0x20, 0x38, 0x45, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 0x20, 
+0x37, 0x34, 0x20, 0x38, 0x45, 0x20, 0x30, 0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 0x37, 
+0x34, 0x20, 0x38, 0x45, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x43, 0x36, 0x20, 0x46, 0x34, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x43, 0x30, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x42, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 
+0x39, 0x20, 0x37, 0x37, 0x20, 0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 
+0x73, 0x64, 0x6b, 0x35, 0x36, 0x35, 0x38, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 
+0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x32, 0x38, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x41, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x32, 0x38, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x36, 0x37, 0x20, 0x32, 0x39, 0x20, 0x37, 0x35, 0x20, 
+0x31, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x36, 0x30, 0x20, 0x45, 
+0x34, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 0x36, 0x30, 
+0x20, 0x45, 0x34, 0x20, 0x36, 0x37, 0x20, 0x34, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 
+0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x32, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x33, 0x41, 
+0x20, 0x33, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x34, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 
+0x20, 0x31, 0x30, 0x20, 0x43, 0x31, 0x20, 0x37, 0x30, 0x20, 0x34, 0x32, 0x20, 0x31, 0x32, 0x20, 
+0x44, 0x32, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x32, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x36, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x5c, 
+0x0a, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x20, 0x43, 0x31, 
+0x20, 0x37, 0x30, 0x20, 0x35, 0x45, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x45, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x44, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x27, 0x22, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x31, 0x32, 0x70, 
+0x35, 0x36, 0x38, 0x30, 0x32, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 
+0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 
+0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x34, 0x20, 
+0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 
+0x32, 0x20, 0x33, 0x36, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x34, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 
+0x42, 0x42, 0x20, 0x37, 0x35, 0x20, 0x31, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x37, 0x37, 0x20, 0x32, 0x31, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x44, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x36, 0x20, 0x37, 0x34, 0x20, 0x31, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x42, 0x42, 0x20, 0x37, 0x35, 0x20, 0x33, 0x38, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x37, 0x37, 0x20, 0x33, 0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x44, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 
+0x20, 0x38, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x34, 0x20, 
+0x32, 0x43, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x34, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x35, 0x38, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x43, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x36, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x43, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x43, 0x39, 0x20, 0x31, 0x36, 0x20, 0x46, 0x43, 0x20, 0x5c, 0x0a, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x39, 0x20, 0x37, 0x37, 0x20, 0x44, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x44, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x38, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x32, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 0x42, 0x42, 0x20, 0x37, 0x35, 
+0x20, 0x43, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x44, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x43, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x39, 0x20, 0x37, 0x37, 0x20, 0x44, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 
+0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 
+0x30, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x30, 0x31, 0x38, 0x2e, 0x68, 
+0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 
+0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x45, 0x20, 0x37, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x34, 0x20, 0x31, 0x31, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x32, 0x30, 0x20, 0x38, 
+0x36, 0x20, 0x45, 0x30, 0x20, 0x33, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x38, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x35, 0x30, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 
+0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 
+0x37, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x36, 
+0x20, 0x45, 0x30, 0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x35, 0x42, 0x20, 
+0x37, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x35, 
+0x30, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x37, 0x37, 0x20, 0x35, 0x42, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 
+0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x32, 0x31, 0x34, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x65, 0x62, 
+0x5f, 0x34, 0x38, 0x70, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 
+0x36, 0x43, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 
+0x45, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 
+0x31, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 
+0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 
+0x20, 0x32, 0x34, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 
+0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x43, 0x20, 
+0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x34, 0x38, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x41, 
+0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x39, 0x42, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x34, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x41, 0x32, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x43, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 
+0x37, 0x35, 0x20, 0x39, 0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x30, 
+0x32, 0x34, 0x70, 0x34, 0x38, 0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 
+0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 0x36, 0x43, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x45, 0x20, 0x37, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x41, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x32, 0x34, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x45, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x43, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x34, 0x38, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x41, 0x20, 0x38, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x42, 
+0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x32, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x39, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 
+0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x23, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x72, 0x35, 
+0x30, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x73, 0x63, 0x6f, 
+0x72, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x63, 0x6f, 0x6e, 0x71, 0x75, 
+0x65, 0x72, 0x6f, 0x72, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x31, 0x20, 0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x32, 0x20, 0x38, 0x36, 0x20, 0x45, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x31, 0x38, 
+0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x37, 0x35, 0x20, 0x33, 0x34, 0x20, 0x32, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 0x37, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x38, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x33, 0x38, 0x20, 0x37, 0x37, 0x20, 
+0x33, 0x34, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x37, 0x35, 0x20, 0x33, 0x34, 0x20, 0x37, 
+0x37, 0x20, 0x33, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x27, 0x22, 0x20, 0x23, 
+0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x32, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x76, 0x61, 0x6c, 0x6b, 0x79, 0x72, 0x69, 0x65, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x35, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 
+0x31, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 0x41, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x31, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 
+0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x32, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x34, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 
+0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x45, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 
+0x42, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 
+0x20, 0x32, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x43, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x44, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 
+0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x36, 0x20, 0x45, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x36, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x42, 0x37, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 
+0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x42, 
+0x41, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x42, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 0x41, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x30, 0x27, 0x22, 0x20, 0x23, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x36, 0x38, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 
+0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 
+0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x66, 0x20, 0x61, 0x70, 0x70, 
+0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x26, 0x26, 
+0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x65, 0x64, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x20, 0x24, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6c, 0x65, 0x64, 0x20, 0x61, 0x75, 0x74, 
+0x6f, 0x20, 0x6f, 0x6e, 0x3b, 0x20, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6d, 
+0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x2c, 0x20, 
+0x75, 0x70, 0x6f, 0x6e, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x74, 
+0x61, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 
+0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x20, 0x73, 0x6f, 0x20, 0x61, 0x6e, 0x79, 0x20, 
+0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x20, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x20, 
+0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 
+0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 
+0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x2a, 0x3a, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x6f, 0x70, 
+0x3b, 0x20, 0x2a, 0x3a, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 
+0x41, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x34, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x20, 0x70, 
+0x65, 0x72, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x68, 
+0x69, 0x65, 0x76, 0x65, 0x20, 0x62, 0x65, 0x74, 0x74, 0x65, 0x72, 0x0a, 0x23, 0x20, 0x63, 0x74, 
+0x72, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x74, 0x72, 
+0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x55, 0x43, 0x20, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x20, 0x30, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x6f, 0x69, 
+0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x77, 0x20, 0x75, 0x63, 0x20, 0x30, 0x20, 0x31, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x41, 
+0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x34, 0x38, 0x2d, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 
+0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0a, 0x23, 0x20, 0x4f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x34, 
+0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2c, 
+0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x74, 
+0x77, 0x69, 0x63, 0x65, 0x3b, 0x20, 0x6f, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 
+0x6f, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x2e, 0x20, 
+0x20, 0x54, 0x68, 0x65, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x6f, 0x6e, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x4e, 0x20, 0x69, 0x73, 0x20, 0x67, 0x65, 0x4e, 
+0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
+0x62, 0x65, 0x20, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x3b, 0x20, 0x73, 0x65, 0x65, 0x20, 0x76, 
+0x6c, 0x61, 0x6e, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x0a, 0x23, 
+0x20, 0x53, 0x65, 0x65, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x34, 0x38, 
+0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x78, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 
+0x72, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 
+0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x6f, 0x77, 0x0a, 0x23, 0x20, 0x74, 
+0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x20, 0x49, 0x50, 0x47, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 
+0x72, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 
+0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x30, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x20, 0x31, 0x3b, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 
+0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x20, 0x32, 0x3b, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6d, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x72, 
+0x72, 0x3d, 0x30, 0x20, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3d, 0x31, 0x20, 
+0x73, 0x74, 0x5f, 0x6d, 0x63, 0x6e, 0x74, 0x3d, 0x31, 0x20, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x6d, 
+0x70, 0x6c, 0x65, 0x78, 0x3d, 0x30, 0x20, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x3d, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 
+0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x74, 0x5f, 0x6c, 
+0x69, 0x6e, 0x6b, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x67, 0x6d, 0x61, 
+0x63, 0x63, 0x32, 0x2e, 0x67, 0x65, 0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x69, 0x70, 0x67, 0x74, 0x3d, 0x38, 0x20, 0x6d, 0x63, 0x6c, 0x6b, 0x66, 0x71, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x66, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x66, 
+0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x3d, 0x31, 0x35, 0x36, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 
+0x20, 0x6d, 0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x3d, 0x31, 
+0x35, 0x36, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x32, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x24, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x67, 0x65, 0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x70, 
+0x65, 0x65, 0x64, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x76, 0x6c, 
+0x61, 0x6e, 0x20, 0x61, 0x64, 0x64, 0x20, 0x31, 0x20, 0x70, 0x62, 0x6d, 0x3d, 0x67, 0x65, 0x24, 
+0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x75, 0x62, 0x6d, 0x3d, 0x6e, 
+0x6f, 0x6e, 0x65, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 
+0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x30, 0x78, 0x63, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 
+0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x78, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 
+0x6e, 0x61, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x68, 0x69, 0x70, 0x5f, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x31, 
+0x3d, 0x31, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x30, 0x3d, 0x30, 0x3b, 0x22, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 
+0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 
+0x61, 0x6e, 0x61, 0x5f, 0x6e, 0x6f, 0x68, 0x67, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x30, 0x78, 0x33, 0x38, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x32, 0x3d, 0x30, 0x78, 0x33, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x30, 0x3d, 
+0x30, 0x22, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x5c, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x22, 0x73, 0x20, 0x43, 0x4d, 0x49, 0x43, 0x5f, 0x43, 
+0x4f, 0x53, 0x5f, 0x43, 0x54, 0x52, 0x4c, 0x5f, 0x52, 0x58, 0x20, 0x43, 0x48, 0x30, 0x5f, 0x43, 
+0x4f, 0x53, 0x5f, 0x42, 0x4d, 0x50, 0x3d, 0x30, 0x2c, 0x43, 0x48, 0x31, 0x5f, 0x43, 0x4f, 0x53, 
+0x5f, 0x42, 0x4d, 0x50, 0x3d, 0x30, 0x78, 0x66, 0x66, 0x2c, 0x20, 0x5c, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x48, 0x32, 0x5f, 0x43, 0x4f, 0x53, 0x5f, 0x42, 0x4d, 
+0x50, 0x3d, 0x30, 0x2c, 0x43, 0x48, 0x33, 0x5f, 0x43, 0x4f, 0x53, 0x5f, 0x42, 0x4d, 0x50, 0x3d, 
+0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x61, 0x63, 0x6b, 0x2d, 0x74, 0x6f, 0x2d, 0x62, 0x61, 
+0x63, 0x6b, 0x20, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x0a, 
+0x0a, 0x23, 0x20, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 0x20, 0x6d, 
+0x75, 0x73, 0x74, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x61, 0x74, 0x20, 0x31, 0x32, 0x37, 0x4d, 0x48, 
+0x7a, 0x2e, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x20, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x76, 0x65, 
+0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x0a, 0x23, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 
+0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x72, 0x65, 
+0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x6f, 0x5f, 0x73, 0x74, 0x6b, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 
+0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 
+0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 
+0x6f, 0x63, 0x6b, 0x20, 0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 
+0x0a, 0x23, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x53, 0x44, 
+0x4b, 0x20, 0x42, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 
+0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x6f, 0x72, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x48, 0x69, 0x67, 
+0x69, 0x67, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x20, 0x61, 
+0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x72, 0x65, 
+0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 
+0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 
+0x32, 0x62, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 
+0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 
+0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x4d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x2c, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 
+0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 
+0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x0a, 0x23, 0x09, 0x44, 
+0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 
+0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 
+0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 
+0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 
+0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 
+0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 
+0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 
+0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 
+0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 
+0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 
+0x79, 0x20, 0x22, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x22, 0x29, 0x0a, 
+0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 
+0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x37, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 
+0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 
+0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 
+0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x34, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x34, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 
+0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x44, 0x72, 0x61, 0x63, 
+0x6f, 0x5f, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 
+0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 
+0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 
+0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x33, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x32, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 
+0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 
+0x79, 0x6e, 0x78, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x28, 0x54, 0x77, 0x6f, 0x4c, 0x79, 0x6e, 0x78, 
+0x29, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x74, 0x77, 0x6f, 0x6c, 0x79, 
+0x6e, 0x78, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x23, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x4c, 0x79, 
+0x6e, 0x78, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x68, 0x65, 0x72, 0x63, 
+0x75, 0x6c, 0x79, 0x6e, 0x78, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 
+0x73, 0x3a, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x31, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x32, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x33, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x34, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x35, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x35, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x36, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x36, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x37, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x37, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x38, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x38, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 
+0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x34, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 
+0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x35, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x32, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x32, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 
+0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x37, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x33, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x33, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x33, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x33, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x30, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x34, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 
+0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x35, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x35, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x35, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x36, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x37, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 
+0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x34, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x35, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 
+0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 
+0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 
+0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 
+0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 
+0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 
+0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 
+0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 
+0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 
+0x74, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 
+0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x36, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x36, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x37, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x37, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 
+0x79, 0x6e, 0x78, 0x61, 0x4c, 0x6f, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 
+0x22, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 
+0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x33, 0x20, 0x28, 0x68, 0x67, 0x32, 0x2f, 0x68, 0x70, 0x69, 0x63, 
+0x32, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x30, 0x29, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 
+0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 
+0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x20, 0x28, 0x68, 0x67, 0x33, 0x2f, 
+0x68, 0x70, 0x69, 0x63, 0x33, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x31, 0x29, 0x0a, 0x23, 
+0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x30, 0x20, 0x69, 0x73, 
+0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x35, 0x20, 
+0x28, 0x68, 0x67, 0x34, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 
+0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x36, 0x20, 0x28, 0x68, 0x67, 
+0x35, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x35, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 
+0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x37, 0x20, 0x28, 0x68, 0x67, 0x36, 0x2f, 0x68, 
+0x70, 0x69, 0x63, 0x36, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 
+0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 
+0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x20, 0x28, 
+0x68, 0x67, 0x37, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x37, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 
+0x33, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x35, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x31, 0x20, 0x28, 0x68, 0x67, 0x30, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x30, 0x29, 0x20, 
+0x28, 0x6d, 0x6f, 0x64, 0x20, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 
+0x75, 0x6e, 0x69, 0x74, 0x20, 0x36, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 
+0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x20, 0x28, 0x68, 0x67, 0x31, 0x2f, 0x68, 0x70, 
+0x69, 0x63, 0x31, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x35, 0x29, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x30, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x30, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 
+0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x35, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x32, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x33, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x33, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 
+0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x33, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x35, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x37, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x34, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 
+0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 
+0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 
+0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 
+0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 
+0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x67, 0x75, 0x65, 
+0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 
+0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 
+0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x68, 
+0x67, 0x58, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 
+0x20, 0x6f, 0x6e, 0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x30, 
+0x3d, 0x30, 0x78, 0x31, 0x62, 0x37, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 
+0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x20, 0x28, 0x68, 0x67, 0x30, 0x2f, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x30, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x20, 0x28, 0x68, 0x67, 
+0x31, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x31, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x31, 0x29, 
+0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 
+0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 
+0x20, 0x28, 0x68, 0x67, 0x35, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x37, 0x29, 0x20, 0x28, 0x6d, 0x6f, 
+0x64, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 
+0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x37, 0x20, 0x28, 0x68, 0x67, 0x34, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x36, 0x29, 
+0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x33, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 
+0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x20, 0x28, 0x68, 0x67, 0x32, 0x2f, 0x68, 
+0x70, 0x69, 0x63, 0x33, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 
+0x6e, 0x6e, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x35, 0x20, 0x28, 0x68, 0x67, 0x33, 0x2f, 0x68, 0x70, 0x69, 0x63, 
+0x34, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x33, 0x20, 0x2d, 0x20, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x20, 
+0x28, 0x68, 0x70, 0x69, 0x63, 0x32, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x36, 0x20, 0x2d, 0x20, 0x55, 0x6e, 
+0x75, 0x73, 0x65, 0x64, 0x20, 0x28, 0x68, 0x70, 0x69, 0x63, 0x35, 0x29, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x32, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 
+0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 
+0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 
+0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 
+0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 
+0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 
+0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x23, 0x20, 0x66, 0x65, 0x6c, 0x69, 
+0x78, 0x34, 0x38, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x66, 0x65, 0x6c, 
+0x69, 0x78, 0x34, 0x38, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x73, 
+0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x31, 
+0x30, 0x32, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2d, 0x30, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x36, 0x29, 0x20, 0x69, 
+0x73, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x74, 0x6f, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x31, 0x30, 0x32, 0x20, 
+0x55, 0x6e, 0x69, 0x74, 0x2d, 0x31, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x36, 0x29, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 
+0x64, 0x69, 0x66, 0x79, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x30, 0x20, 0x32, 0x39, 0x20, 0x4d, 
+0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x32, 0x36, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 
+0x44, 0x49, 0x44, 0x3d, 0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x20, 0x32, 0x38, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 
+0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x49, 0x45, 0x47, 
+0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x58, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 
+0x44, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x4d, 0x4f, 
+0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x20, 0x31, 0x20, 0x31, 0x20, 0x48, 0x49, 
+0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 
+0x30, 0x78, 0x34, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x30, 0x20, 0x32, 0x39, 0x20, 
+0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x32, 0x36, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 
+0x4f, 0x44, 0x49, 0x44, 0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 
+0x4c, 0x45, 0x20, 0x32, 0x38, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 
+0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x49, 0x45, 
+0x47, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x58, 0x50, 0x4f, 
+0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 
+0x49, 0x44, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x4d, 
+0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x20, 0x30, 0x20, 0x31, 0x20, 0x48, 
+0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 
+0x3d, 0x30, 0x78, 0x34, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 
+0x23, 0x20, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 
+0x22, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 
+0x65, 0x73, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x35, 0x30, 0x34, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2d, 0x30, 0x20, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x37, 0x2c, 
+0x32, 0x38, 0x29, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6f, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x35, 0x30, 0x34, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x2d, 0x31, 0x20, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x37, 0x2c, 
+0x32, 0x38, 0x29, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x77, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 
+0x70, 0x20, 0x31, 0x20, 0x31, 0x20, 0x48, 0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 0x78, 0x43, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 
+0x3d, 0x30, 0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x31, 
+0x32, 0x20, 0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 
+0x3d, 0x30, 0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x32, 
+0x34, 0x20, 0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 
+0x30, 0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x32, 0x35, 
+0x20, 0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 
+0x6f, 0x65, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x20, 0x30, 
+0x20, 0x31, 0x20, 0x48, 0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 
+0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 0x78, 0x43, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x33, 0x32, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x34, 0x34, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x35, 0x36, 0x20, 
+0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 0x78, 
+0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x35, 0x37, 0x20, 0x31, 
+0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 0x78, 0x34, 
+0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x4d, 0x20, 0x66, 0x62, 
+0x34, 0x38, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x65, 0x74, 0x75, 
+0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 
+0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x79, 0x20, 0x22, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 
+0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 
+0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 
+0x74, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6c, 0x65, 0x76, 0x65, 
+0x6c, 0x20, 0x31, 0x37, 0x30, 0x28, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x29, 0x20, 0x2d, 0x20, 0x31, 
+0x31, 0x30, 0x28, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x29, 0x20, 0x3d, 0x20, 0x36, 0x30, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x6f, 0x65, 0x70, 
+0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 
+0x44, 0x72, 0x61, 0x63, 0x6f, 0x31, 0x35, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x6f, 0x77, 0x65, 
+0x72, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x31, 0x37, 0x30, 0x28, 0x74, 0x6f, 0x74, 0x61, 
+0x6c, 0x29, 0x20, 0x2d, 0x20, 0x38, 0x30, 0x28, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x29, 0x20, 
+0x3d, 0x20, 0x39, 0x30, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x31, 0x35, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x70, 0x6f, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x39, 0x30, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x69, 0x66, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x73, 0x65, 0x74, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 
+0x73, 0x73, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x31, 0x35, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 
+0x62, 0x70, 0x6f, 0x65, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x31, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x50, 
+0x4f, 0x45, 0x20, 0x2e, 0x2e, 0x2e, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x65, 0x73, 0x65, 0x6c, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x32, 0x63, 0x20, 
+0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x76, 0x65, 0x72, 
+0x62, 0x6f, 0x73, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 
+0x24, 0x70, 0x6f, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x76, 0x65, 0x72, 0x62, 0x6f, 
+0x73, 0x65, 0x20, 0x6f, 0x6e, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x65, 0x73, 0x65, 0x6c, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x73, 0x6f, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x73, 0x75, 0x62, 0x73, 0x65, 
+0x71, 0x75, 0x65, 0x6e, 0x74, 0x20, 0x72, 0x63, 0x20, 0x72, 0x75, 0x6e, 0x73, 0x20, 0x61, 0x72, 
+0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x0a, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 0x72, 
+0x63, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x63, 0x61, 0x63, 0x68, 
+0x65, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x63, 0x2e, 0x73, 
+0x6f, 0x63, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x72, 
+0x63, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x61, 0x64, 0x64, 0x71, 0x20, 0x72, 0x63, 0x2e, 0x73, 
+0x6f, 0x63, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x20, 0x63, 0x68, 0x61, 0x73, 
+0x73, 0x69, 0x73, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x61, 0x75, 0x74, 
+0x6f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x32, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 
+0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 
+0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x63, 0x20, 0x31, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x63, 0x6c, 0x6f, 0x61, 0x64, 0x20, 
+0x63, 0x32, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x6f, 0x63, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 0x63, 0x68, 0x61, 0x73, 
+0x73, 0x69, 0x73, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x63, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 
+0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x61, 
+0x75, 0x74, 0x6f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 0x69, 
+0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 0x22, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x72, 0x63, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x73, 0x74, 0x6b, 0x2e, 
+0x73, 0x6f, 0x63, 0x22, 0x0a, 0x00
+};
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/robo/counter.c esw_sdk_final/src/appl/diag/robo/counter.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/robo/counter.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/robo/counter.c	2018-01-10 11:53:52.891376000 +0000
@@ -82,13 +82,13 @@ robo_counter_val_set(int unit, soc_port_
 
         sal_memset(robo_counter_val[unit], 0, n * sizeof (uint64));
     }
 
     ind = soc_robo_counter_idx_get(unit, ctr_reg, port);
 
-    LOG_INFO(BSL_LS_APPL_COUNTER,
+    LOG_VERBOSE(BSL_LS_APPL_COUNTER,
              (BSL_META_U(unit,
                          "cval_set: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
               SOC_ROBO_REG_NAME(unit, ctr_reg), ar_idx,
               port,
               ind,
               COMPILER_64_HI(val),
@@ -153,13 +153,13 @@ counter_val_get(int unit, soc_port_t por
         soc_robo_counter_prev_get(unit, port, ctr_reg, &prev_val);
         if (COMPILER_64_IS_ZERO(prev_val)) {
             robo_counter_val[unit][ind] = prev_val;
         }
         *val = robo_counter_val[unit][ind];
 
-        LOG_INFO(BSL_LS_APPL_COUNTER,
+        LOG_VERBOSE(BSL_LS_APPL_COUNTER,
                  (BSL_META_U(unit,
                              "cval_get: %s ar_idx=%d p=%d idx=%d vh=%d vl=%d\n"),
                   SOC_ROBO_REG_NAME(unit, ctr_reg),
                   ar_idx, port,
                   ind,
                   COMPILER_64_HI(*val),
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/shell.c esw_sdk_final/src/appl/diag/shell.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/shell.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/shell.c	2018-01-10 11:53:52.887376000 +0000
@@ -733,12 +733,107 @@ sh_rccache(int u, args_t *a)
         return CMD_OK;
     }
     return CMD_USAGE;
 #endif    /* NO_FILEIO */
 }
 
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+extern unsigned char rc_soc_array[];
+extern unsigned char helixmem_soc_array[];
+extern unsigned char config_bcm_array[];
+
+typedef struct MEM_FILE_s 
+{
+  unsigned char *start;
+  unsigned char *current;
+  unsigned char *end;
+} MEM_FILE_t;
+
+MEM_FILE_t *mem_fopen(unsigned char *filename)
+{
+  MEM_FILE_t *fp;
+
+  fp = (MEM_FILE_t *)malloc(sizeof(MEM_FILE_t));
+  if (fp == NULL)
+  {
+    return NULL;
+  }
+
+  if (strcmp("rc.soc", (char *)filename) == 0)
+  {
+    fp->start = rc_soc_array;
+    fp->current = rc_soc_array;
+    fp->end = fp->start + strlen((char *)rc_soc_array);
+  }
+  else if (strcmp("helix.soc", (char *)filename) == 0)
+  {
+    fp->start = helixmem_soc_array;
+    fp->current = helixmem_soc_array;
+    fp->end = fp->start + strlen((char *)helixmem_soc_array);
+  }
+  else if (strcmp(SAL_CONFIG_FILE, (char *)filename) == 0)
+  {
+    fp->start = config_bcm_array;
+    fp->current = config_bcm_array;
+    fp->end = fp->start + strlen((char *)config_bcm_array);
+  }
+  else
+  {
+    free(fp);
+    return NULL;
+  }
+
+  return fp;
+}
+
+void mem_fclose(MEM_FILE_t *fp)
+{
+  if (fp != NULL)
+  {
+    free(fp);
+  }
+}
+
+char *mem_fgets(char *s, int size, MEM_FILE_t *fp)
+{
+  int i;
+
+  for(i = 0; i < (size - 1); i++)
+  {
+    /* check for EOF */
+    if (fp->current >= fp->end)
+    {
+      if (i == 0)
+      {
+        return 0;
+      }
+      else
+      {
+        break;
+      }
+    }
+
+    s[i] = fp->current[0];
+
+    /* check for newline */
+    if (fp->current[0] == '\n')
+    {
+      fp->current++;
+      i++;
+      break;
+    }
+
+    fp->current++;
+  }
+
+  s[i] = 0;
+
+  return s;
+}
+#endif
+
 cmd_result_t
 sh_rcload_file(int u, args_t *a, char *f, int add_rc)
 /*
  * Function:     sh_rcload_file
  * Purpose:    Load and execute commands from a file.
  * Parameters:    u - default unit number for commands, may be -1 if none
@@ -748,32 +843,41 @@ sh_rcload_file(int u, args_t *a, char *f
  *        add_rc - if true, filename must end in ".soc", appended
  *            if not there.
  * Returns:    CMD_OK - all commands executed.
  *        CMD_FAIL- some command failed and aborted file processing.
  */
 {
-#ifdef NO_FILEIO
+#if !defined(LVL7_FIXUP) && defined(NO_FILEIO)
+//#ifdef NO_FILEIO
     if(sal_strstr(f, ".soc")) {
         cli_out("proxyecho rcload %s\n", f);
     }
     return 0;
 #else
 
     static char fn[ARGS_BUFFER + 8];
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+    char *add_ext;
+#else
     char *path, *p, *add_ext;
+#endif
     static char line[ARGS_BUFFER], *s, *t;
     void * volatile scope = NULL;
 #ifndef NO_CTRL_C
     jmp_buf ctrl_c;
 #endif
 
     /* These guys volatile because of long jump */
 
     volatile cmd_result_t rv = CMD_OK;
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+    MEM_FILE_t * volatile mem_fp = NULL;
+#else
     FILE * volatile       fp = NULL;
     char * volatile      fstr = NULL;
+#endif
     volatile int        lineNum = 0;
 
     scope = var_push_scope(); /* Push current scope */
 
 #ifndef NO_CTRL_C
     if (!setjmp(ctrl_c)) {
@@ -822,12 +926,13 @@ sh_rcload_file(int u, args_t *a, char *f
     }
 
     /*
      * If name of script has a colon or slash, open it as-is.
      * Otherwise search for script in $path.
      */
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
     /* coverity[secure_coding] */
     sal_strcpy(fn, f);
     /* coverity[secure_coding] */
     sal_strcat(fn, add_ext);
 
 
@@ -865,17 +970,26 @@ sh_rcload_file(int u, args_t *a, char *f
     }
     
     if (fp == NULL && fstr == NULL) {
         rv = CMD_NFND;
         goto done;
     }
+#else
+    mem_fp = mem_fopen((unsigned char *)f);
+
+    if (mem_fp == NULL) {
+        rv = CMD_NFND;
+        goto done;
+    }
+#endif
 
     for (;;) {
         s = line;
         for (;;) {
             lineNum++;
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
             if (fp != NULL) {
                 if (sal_fgets(s, line + sizeof (line) - s, fp) == 0) {
                     goto done;
                 }
             } else {
                 int left = line + sizeof(line) - s;
@@ -893,12 +1007,18 @@ sh_rcload_file(int u, args_t *a, char *f
                             *s2 = '\0';
                         }
                         break;
                     }
                 }
             }
+#else
+                if (mem_fgets(s, line + sizeof (line) - s, mem_fp) == 0) {
+                    goto done;
+                }
+#endif
+
             line[sizeof (line) - 1] = 0;    /* Make sure NUL-terminated */
             if ((t = sal_strchr(s, '\r')) != 0)
                 strrepl(s, t - s, 1, "");    /* I hate hate hate PCs */
             if ((t = sal_strchr(s, '#')) != 0) {     /* Strip out comments */
                 *t = 0;
             } else if ((t = sal_strchr(s, '\n')) != 0) {
@@ -943,26 +1063,35 @@ sh_rcload_file(int u, args_t *a, char *f
   done_exit:
     sh_rcload_depth--;
     if (scope) {
         var_pop_scope((void *)scope);
     }
 
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
     if (fp) {
         sal_fclose((FILE *)fp);
     }
+#else
+    if (mem_fp)
+    {
+      mem_fclose(mem_fp);
+    }
+#endif
+
 #ifndef NO_CTRL_C
     sh_pop_ctrl_c();
 #endif
 
     if (rv == CMD_EXIT) {
         /* An 'exit' command in script is normal completion of script. */
         rv = CMD_OK;
     }
 
     return(rv);
-#endif /* NO_FILEIO */
+//#endif /* NO_FILEIO */
+#endif /* LVL7_FIXUP && NO_FILEIO */
 }
 
 
 #endif /* NO_SAL_APPL */
 
 /*
@@ -3333,17 +3462,21 @@ sh_print_version(int verbose)
  * Parameters:    verbose - includes more info if TRUE
  * Returns:    Nothing
  */
 {
     cli_out("Broadcom Command Monitor: "
             "Copyright (c) 1998-2010 Broadcom Corporation\n");
+#if !defined(LVL7_FIXUP) || defined(VXWORKS)
     cli_out("Release: %s built %s (%s)\n",
             _build_release, _build_datestamp, _build_date);
     cli_out("From %s@%s:%s\n",
             _build_user, _build_host, _build_tree);
+#endif
+#if !defined(LVL7_FIXUP)
     cli_out("Platform: %s\n", BCM_PLATFORM_STRING); 
+#endif
     cli_out("OS: %s\n", sal_os_name() ? sal_os_name() : "unknown"); 
 
     if (verbose) {
 #if (defined(BCM_ROBO_SUPPORT) || defined(BCM_ESW_SUPPORT) || defined(BCM_SBX_SUPPORT) || defined(BCM_PETRA_SUPPORT)  || defined(BCM_DFE_SUPPORT))
     int        i, j;
 #endif
@@ -6373,12 +6506,59 @@ sh_cd(int u, args_t *a)
     return CMD_FAIL;
     }
 
     return(CMD_OK);
 }
 
+#if defined(LVL7_FIXUP) && !defined(VXWORKS)
+cmd_result_t
+sh_do_more(MEM_FILE_t *f)
+/*
+ * Function: 	sh_do_more
+ * Purpose:	Copy a file to console, stopping line "more".
+ * Parameters:	f - pointer to FILE to read from.
+ * Returns:	CMD_OK
+ */
+{
+    int		line, next_stop;
+    char	buf[1024];
+
+    line = 0;
+    next_stop = sh_set_more_lines;
+
+    while (mem_fgets(buf, sizeof(buf) - 1, f)) {
+	/* Dump data */
+	cli_out("%s", buf);
+	if (++line == next_stop) {
+	    extern char readchar(char *s);
+	    int c;
+	    cli_out(SAL_VT100_SO
+                "Line: %d ----- 'q' to quit, any key to continue -----"
+                SAL_VT100_SE,
+                line);
+	    c = sal_readchar("");
+	    cli_out("\r" SAL_VT100_CE);
+	    switch (c) {
+	    case EOF:
+	    case 'q':
+	    case 'Q':
+		return(CMD_OK);
+	    case '\r':
+	    case '\n':
+		next_stop++;
+		break;
+	    default:
+		next_stop += sh_set_more_lines;
+		break;			/* Just keep going */
+	    }
+	}
+    }
+    return(CMD_OK);
+}
+#else
+
 cmd_result_t
 sh_do_more(FILE *f)
 /*
  * Function:     sh_do_more
  * Purpose:    Copy a file to console, stopping line "more".
  * Parameters:    f - pointer to FILE to read from.
@@ -6421,12 +6601,13 @@ sh_do_more(FILE *f)
         }
     }
     }
     return(CMD_OK);
 #endif /* NO_FILEIO */
 }
+#endif /* defined(LVL7_FIXUP) && !defined(VXWORKS) */
 
 char sh_more_usage[] =
     "Parameters: <file> ...\n\t"
     "Copy the listed files to the console, stopping after a set number\n\t"
     "of lines. The default number of lines is 20, but it may be changed\n\t"
     "by setting \"MoreLines\" to a different number. \"help set\" for\n\t"
@@ -6439,12 +6620,51 @@ sh_more(int u, args_t *a)
  * Purpose:    More a file to the TTY.
  * Parameters:    u - unit (ignored)
  *        a - args, each of the files to be displayed.
  * Returns:    CMD_OK/CMD_FAIL/CMD_USAGE
  */
 {
+#if defined(LVL7_FIXUP) && !defined(VXWORKS)
+  jmp_buf       ctrl_c;
+  volatile cmd_result_t rv = CMD_OK;
+  MEM_FILE_t * volatile mem_fp = NULL;
+  char  *c;
+
+  COMPILER_REFERENCE(u);
+
+  if (0 == ARG_CNT(a)) {
+  return(CMD_USAGE);
+  }
+
+  /*
+   * Try to catch ^C to avoid leaving file open if more is ^C'd.
+   * There are still a number of unlikely race conditions here.
+   */
+
+  if (!setjmp(ctrl_c)) {
+  sh_push_ctrl_c(&ctrl_c);
+  while ((CMD_OK == rv) && (NULL != (c = ARG_GET(a)))) {
+      mem_fp = mem_fopen((unsigned char *)c);
+      if (!mem_fp) {
+      cli_out("%s: Error: Unable to open file: %s\n",
+              ARG_CMD(a), c);
+      rv = CMD_FAIL;
+      } else {
+      rv = (volatile cmd_result_t)sh_do_more(mem_fp);
+      mem_fclose(mem_fp);
+      mem_fp = NULL;
+      }
+  }
+  } else if (mem_fp) {
+  mem_fclose(mem_fp);
+  mem_fp = NULL;
+  rv = CMD_INTR;
+  }
+  sh_pop_ctrl_c();
+  return(rv);
+#else
 #ifdef NO_FILEIO
     return -1;
 #else
 #ifndef NO_CTRL_C
     jmp_buf    ctrl_c;
 #endif
@@ -6494,12 +6714,13 @@ sh_more(int u, args_t *a)
 
 #ifndef NO_CTRL_C
     sh_pop_ctrl_c();
 #endif
     return(rv);
 #endif /* NO_FILEIO */
+#endif /* defined(LVL7_FIXUP) && !defined(VXWORKS) */
 }
 
 char sh_write_usage[] =
     "Parameters: <file> [<word> ...]\n\t"
     "Write data to a file. If only file is given, the console is read\n\t"
     "until EOF (CTRL-D) is seen. Otherwise, all the words on the\n\t"
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/system.c esw_sdk_final/src/appl/diag/system.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/system.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/system.c	2018-01-10 11:53:52.891376000 +0000
@@ -82,13 +82,13 @@
 #include <pingLib.h>
 #endif /* VXWORKS */
 
 
 #if defined(MOUSSE) || defined(BMW) || defined(IDTRP334) || defined(GTO) || \
     defined(MBZ) || defined(IDT438) || defined(NSX) || defined(ROBO_4704) || \
-    defined(METROCORE) || defined(KEYSTONE)
+    defined(METROCORE) || defined(KEYSTONE) || defined(LVL7_FIXUP)
 #if defined(VXWORKS)
 #include <config.h>      /* For INCLUDE_XXX */
 #endif /* VXWORKS */
 #endif
 
 /* #define INCLUDE_NFS 12345678*/
@@ -1883,12 +1883,35 @@ diag_rc_get(int unit, const char **fname
 
     *fname = (soc_init_rc[unit] != NULL ?
           soc_init_rc[unit] :
           SOC_INIT_RC);
 }
 
+#if defined(LVL7_FIXUP) && defined(VXWORKS)
+extern unsigned char rc_soc_array[];
+extern unsigned char helixmem_soc_array[];
+extern unsigned char config_bcm_array[];
+void diag_file_create(char *fname, unsigned char *data, int len)
+{
+  FILE  *fp = NULL;
+  int   index;
+
+  printf("Generating %s ...\n", fname);
+  index = 0;
+  if ((fp = sal_fopen(fname, "w")) != NULL)
+  {
+    while ((0 != data[index]) && (index < len))
+    {
+      fputc((int)data[index++], fp);
+    }
+    sal_fclose(fp);
+  }
+  return;
+} 
+#endif
+
 int
 diag_rc_load(int unit)
 {
     char    *script = (soc_init_rc[unit] != NULL ?
                soc_init_rc[unit] : SOC_INIT_RC);
 
@@ -1965,12 +1988,17 @@ diag_shell(void)
 
     /*
      * At boot time, probe for devices and attach the first one.
      * In PLISIM, this is not done; the probe and attach commands
      * must be given explicitly.
      */
+#if defined(LVL7_FIXUP) && defined(VXWORKS)
+    diag_file_create("rc.soc", rc_soc_array, strlen(rc_soc_array));
+    diag_file_create("helixmem.soc", helixmem_soc_array, strlen(helixmem_soc_array));
+    diag_file_create("config.bcm", config_bcm_array, strlen(config_bcm_array));
+#endif
     flags = sal_boot_flags_get();
 
     if (!(flags & BOOT_F_NO_PROBE)) {
         SHR_BPROF_STATS_TIME(SHR_BPROF_SOC_PROBE) {
             if ((sysconf_probe()) < 0) {
                 cli_out("ERROR: PCI SOC device probe failed\n");
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/diag/tksdiag.c esw_sdk_final/src/appl/diag/tksdiag.c
--- sdk-xgs-robo-6.4.8/src/appl/diag/tksdiag.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/diag/tksdiag.c	2018-01-10 11:53:52.887376000 +0000
@@ -119,12 +119,18 @@ const bcm_mac_t _bcast_mac = {0xff, 0xff
 /****************************************************************
  *
  * CPUDB control
  *
  ****************************************************************/
 
+#ifdef LVL7_FIXUP
+extern int bcmx_device_attach(int bcm_unit);
+extern int bcmx_device_detach(int bcm_unit);
+extern void tks_st_thread(void *cookie);
+#endif
+
 STATIC INLINE void
 db_entry_show(const cpudb_entry_t *entry)
 {
     const cpudb_stk_port_t  *sp_p;
     int                     i;
     char                    keybuf[CPUDB_KEY_STRING_LEN];
@@ -407,12 +413,17 @@ char ct_cpudb_usage[] =
     ;
 
 cpudb_ref_t db_refs[MAX_DBS];
 int cur_db;
 int num_db = 0;
 
+#ifdef LVL7_FIXUP
+extern void bcmx_attach_callback(int unit, int attach,
+                         cpudb_entry_t *cpuent, int cpuunit);
+#endif
+
 cmd_result_t
 ct_cpudb(int unit, args_t *args)
 {
     char *subcmd;
     char *int_arg;
     parse_table_t pt;
@@ -1039,12 +1050,13 @@ mh_opcode0_priority(int action)
 static int st_pri = TKS_STK_DEFAULT_THREAD_PRIORITY;
 static sal_thread_t st_tid = SAL_THREAD_ERROR;
 static sal_sem_t st_done_sem;
 
 #define TOPO_ATP_FLAGS (ATP_F_NEXT_HOP | ATP_F_REASSEM_BUF)
 
+#ifndef LVL7_FIXUP
 STATIC void
 tks_st_thread(void *cookie)
 {
     bcm_st_config_t *cfg;
     int rv, unit, i;
     sal_usecs_t attach_timeout;
@@ -1113,12 +1125,13 @@ tks_st_thread(void *cookie)
 #endif
 
     mh_opcode0_priority(MH_OPCODE0_CLEAR);
     sal_sem_give(st_done_sem);
     sal_thread_exit(rv);
 }
+#endif
 
 typedef struct {
     int timeout;
     int rv;
 } tks_st_stop_thread_arg_t;
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/discover/disc_int.h esw_sdk_final/src/appl/discover/disc_int.h
--- sdk-xgs-robo-6.4.8/src/appl/discover/disc_int.h	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/discover/disc_int.h	2018-01-10 11:53:52.887376000 +0000
@@ -286,10 +286,14 @@
 #define STK_ENTRY_BFLAGS_OFS    (STK_ENTRY_WEIGHT_OFS + sizeof(uint32))
 #define STK_ENTRY_UNIT_OFS      (STK_ENTRY_BFLAGS_OFS + sizeof(uint32))
 #define STK_ENTRY_PORT_OFS      (STK_ENTRY_UNIT_OFS + sizeof(uint32))
 
 /* These are used to pre-allocate packet buffers for routing packets */
 #define ROUTE_ENTRIES_PER_PKT_MAX 4    /* Max entries allowed/pkt */
+#if defined(LVL7_FIXUP) && defined(L7_PRODUCT_SMB)
+#define ROUTE_PKTS_MAX            32 /* Max route pkts for table */
+#else
 #define ROUTE_PKTS_MAX            CPUDB_CPU_MAX /* Max route pkts for table */
+#endif
 #define ROUTE_PKT_BYTES_MAX    1500    /* Max route pkts for table */
 
 #endif /* _DISC_INT_H_ */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/stktask/brd_common.c esw_sdk_final/src/appl/stktask/brd_common.c
--- sdk-xgs-robo-6.4.8/src/appl/stktask/brd_common.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/stktask/brd_common.c	2018-01-10 11:53:52.871376000 +0000
@@ -481,12 +481,15 @@ _bcm_board_trunk_interconnect_mark(int u
  *      BCM_E_XXX
  * Notes:
  *     Some early discovery versions do not carry stack-port information
  *     for remote CPU entries.
  */
 
+#ifdef LVL7_FIXUP
+extern int lvl7_internal_hg_trunkid;
+#endif
 
 STATIC int
 _bcm_board_trunk_unit(int unit, cpudb_entry_t *entry, cpudb_ref_t db_ref,
                       int start, int flags)
 {
     int                     tid, rv = BCM_E_NONE, i, j;
@@ -503,12 +506,20 @@ _bcm_board_trunk_unit(int unit, cpudb_en
     bcm_trunk_chip_info_t   ti;
     int                     trunk_maxnum;
 
     /* Destroy any pre-existing fabric trunks */
     if (flags & BCM_BOARD_TRUNK_DESTROY) {
         for (tid = start;; tid++) {
+#ifdef LVL7_FIXUP
+            /* Don't destroy the internal HG trunk */
+            if ((lvl7_internal_hg_trunkid != -1) && (tid == lvl7_internal_hg_trunkid))
+            {
+                continue;            
+            }
+#endif
+
             rv = bcm_trunk_destroy(unit, tid);
             if (BCM_FAILURE(rv) && (BCM_E_NOT_FOUND != rv)) {
                 break;
             }
         }
         if (tid != start) {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/stktask/topo_brd.c esw_sdk_final/src/appl/stktask/topo_brd.c
--- sdk-xgs-robo-6.4.8/src/appl/stktask/topo_brd.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/stktask/topo_brd.c	2018-01-10 11:53:52.871376000 +0000
@@ -530,12 +530,20 @@ _topo_board_default_program(cpudb_ref_t
        should not matter. Define TOPO_BRD_UPDATE_BEFORE_PROGRAM to
        restore the older behavior if it is needed. */
     BCM_IF_ERROR_RETURN(_topo_stk_ports_update(db_ref, topo_cpu));
 #endif
 
     /* Set up the board based on device detection. */
+    #ifdef LVL7_FIXUP
+    extern int lvl7_topo_board_program(cpudb_ref_t db_ref, topo_cpu_t *topo_cpu,int *rv);
+
+    if (lvl7_topo_board_program(db_ref,topo_cpu,&rv)){
+      /* nothing to do but skip the rest of the board detections */
+    }
+    else
+    #endif
     if (soc_ndev == 1 &&
                SOC_IS_HERCULES15(0)) {
         rv = bcm_board_topo_cfm_xgs2(topo_cpu, db_ref);
     } else if (soc_ndev == 1 &&
                SOC_IS_XGS12_FABRIC(0)) {
         rv = bcm_board_topo_8h(topo_cpu, db_ref);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/appl/stktask/topology.c esw_sdk_final/src/appl/stktask/topology.c
--- sdk-xgs-robo-6.4.8/src/appl/stktask/topology.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/appl/stktask/topology.c	2018-01-10 11:53:52.871376000 +0000
@@ -197,20 +197,28 @@ tp_weights_init(cpudb_ref_t db_ref, weig
                  * Already have a connection indicated;
                  * fabric trunking handles this case
                  */
                 continue;
             }
 
+#ifdef LVL7_FIXUP
+            TP_WEIGHT(weights, s_idx, d_idx) = sp_base->weight;
+#else
             TP_WEIGHT(weights, s_idx, d_idx) = TOPO_DEFAULT_WEIGHT;
+#endif
             /* Below indicates is reachable and by what stk port */
             TP_TX_CXN(db_ref, s_idx, d_idx) = i;
             TP_RX_CXN(db_ref, d_idx, s_idx) = sp->tx_stk_idx;
             /* Check for duplex connection and set up if so. */
             if (sp->flags & CPUDB_SPF_DUPLEX) {
                 if (!TP_REACHABLE(db_ref, d_idx, s_idx)) {
+#ifdef LVL7_FIXUP
+                    TP_WEIGHT(weights, d_idx, s_idx) = dest_entry->base.stk_ports[sp->tx_stk_idx].weight;
+#else
                     TP_WEIGHT(weights, d_idx, s_idx) = TOPO_DEFAULT_WEIGHT;
+#endif
                     /* Below indicates is reachable and by what stk port */
                     TP_TX_CXN(db_ref, d_idx, s_idx) = sp->tx_stk_idx;
                     TP_RX_CXN(db_ref, s_idx, d_idx) = i;
                 } else {
                     LOG_WARN(BSL_LS_TKS_TOPOLOGY,
                              (BSL_META("TOPO WARNING: Duplex port already marked, "
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/common/rx.c esw_sdk_final/src/bcm/common/rx.c
--- sdk-xgs-robo-6.4.8/src/bcm/common/rx.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/bcm/common/rx.c	2018-01-10 11:53:52.871376000 +0000
@@ -4639,12 +4639,20 @@ rx_default_parser(int unit,  bcm_pkt_t *
                 tid = -1;
                 rv = _bcm_esw_trunk_port_property_get(unit, pkt->src_mod,
                                                       src_port_tgid, &tid);
                 if (BCM_SUCCESS(rv) && (tid != -1)) {
                     pkt->src_trunk = tid;
                     pkt->flags |= BCM_PKT_F_TRUNK;
+#ifndef LVL7_FIXUP
+   /* Don't destroy information!!
+   ** When frames are received from remote units the src_port is not the same as
+   ** rx_port. We still need to know the physical port on which the frame is
+   ** received even when the frame is for a trunk.
+   */
+                    //pkt->src_port = -1;   /* Already removed at SDK 6.3.4 */
+#endif
                 }
             }
 #endif /* BCM_XGS3_SWITCH_SUPPORT */
         }
         pkt->src_gport = BCM_GPORT_INVALID;
         pkt->dst_gport = BCM_GPORT_INVALID;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/common/tx.c esw_sdk_final/src/bcm/common/tx.c
--- sdk-xgs-robo-6.4.8/src/bcm/common/tx.c	2015-10-21 01:59:48.000000000 +0100
+++ esw_sdk_final/src/bcm/common/tx.c	2018-01-10 11:53:52.867376000 +0000
@@ -2234,14 +2234,28 @@ _xgs3_tx(int unit, bcm_pkt_t *pkt, void
             return BCM_E_MEMORY;
         }
         _xgs3_tx_cb_cookie->orig_pkt = pkt; 
         _xgs3_tx_cb_cookie->orig_cookie = cookie;
         _xgs3_tx_cb_cookie->cleanup_mem = packets_p;
 
+#ifdef LVL7_FIXUP
+        /* If original pkt was synchronous, make a synchronous call */
+        if (NULL == pkt->call_back) {
+          /* Make synchronous call, and invoke the callback */
+          rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, NULL, NULL);
+
+          _xgs3_tx_cb(unit, packet_pointers_p[0],  _xgs3_tx_cb_cookie);
+        }
+        else {
+           rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, &_xgs3_tx_cb,
+                _xgs3_tx_cb_cookie);
+        }
+#else
         rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, &_xgs3_tx_cb,
                 _xgs3_tx_cb_cookie);
+#endif
 
         sal_free(packet_pointers_p);
         /* packets_p and _xgs3_tx_cb_cookie will be freed by _xgs3_tx_cb */
 
     } else {
         rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, NULL, NULL);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/dispatch.c esw_sdk_final/src/bcm/dispatch.c
--- sdk-xgs-robo-6.4.8/src/bcm/dispatch.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcm/dispatch.c	2018-01-10 11:53:52.815376000 +0000
@@ -8971,13 +8971,13 @@ bcm_cosq_port_sched_get(
 
 	BCM_CR_TRANSACTION_START(unit);
 
 	if (!BCM_UNIT_CHECK(unit)) {
 		r_rv = BCM_E_UNIT;
 	} else {
-		BCM_API_XLATE_PORT_PBMP_DECL(t_pbm);
+		BCM_API_XLATE_PORT_PBMP_DECL(t_pbm);	/* PTin TODO: Attention! */
 		BCM_API_XLATE_PORT_PBMP_SAVE(t_pbm,pbm);
 		BCM_API_XLATE_PORT_PBMP_A2P(unit,&pbm);
 		dtype = BCM_DTYPE(unit);
 		r_rv = _cosq_port_sched_get_dispatch[dtype](unit, pbm, mode, weights, delay);
 		BCM_STATE_SYNC(unit);
 		BCM_API_XLATE_PORT_PBMP_RESTORE(pbm,t_pbm);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/enduro/hashing.c esw_sdk_final/src/bcm/esw/enduro/hashing.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/enduro/hashing.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/enduro/hashing.c	2018-01-10 11:53:52.823376000 +0000
@@ -77,14 +77,18 @@ typedef struct bcm_rtag7_base_hash_s {
 } bcm_rtag7_base_hash_t;
 
 #define   ETHERTYPE_IPV6 0x86dd /* ipv6 ethertype */
 #define   ETHERTYPE_IPV4 0x0800 /* ipv4 ethertype */
 #define   ETHERTYPE_MIN  0x0600 /* minimum ethertype for hashing */
 
+#ifndef IP_PROT_TCP
 #define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#endif
+#ifndef IP_PROT_UDP
 #define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
 
 #define RTAG7_L2_ONLY         0x0
 #define RTAG7_UNKNOWN_HIGIG   0x1
 #define RTAG7_MPLS            0x2
 #define RTAG7_MIM             0x3
 #define RTAG7_IPV4            0x4
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/enduro/vlan.c esw_sdk_final/src/bcm/esw/enduro/vlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/enduro/vlan.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/enduro/vlan.c	2018-01-10 11:53:52.823376000 +0000
@@ -831,12 +831,17 @@ _bcm_enduro_vlan_vp_match_add(int unit,
     /* For double tagged packets */
     if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_PRESERVE) {
         action.dt_outer = bcmVlanActionReplace;
         action.dt_outer_prio = bcmVlanActionReplace;
         action.dt_inner = bcmVlanActionNone;
         action.dt_inner_prio = bcmVlanActionNone;
+    } else if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_REPLACE) {
+        action.dt_outer = bcmVlanActionReplace;
+        action.dt_outer_prio = bcmVlanActionReplace;
+        action.dt_inner = bcmVlanActionReplace;
+        action.dt_inner_prio = bcmVlanActionNone;
     } else {
         /* Strip inner VLAN */
         action.dt_outer = bcmVlanActionReplace;
         action.dt_outer_prio = bcmVlanActionReplace;
         action.dt_inner = bcmVlanActionDelete;
         action.dt_inner_prio = bcmVlanActionDelete;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/field.c esw_sdk_final/src/bcm/esw/field.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/field.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/field.c	2018-01-10 11:53:52.855376000 +0000
@@ -37941,12 +37944,37 @@ bcm_esw_field_group_status_get(int unit,
 
     if (BCM_FAILURE(rv)) {
         FP_UNLOCK(fc);
         return (rv);
     }
 
+#ifdef LVL7_FIXUP
+    if (fg->flags & _FP_GROUP_SPAN_SINGLE_SLICE)
+    {
+      fg->group_status.slice_width_physical = 1;
+    }
+    else if (fg->flags & _FP_GROUP_SPAN_DOUBLE_SLICE)
+    {
+      fg->group_status.slice_width_physical = 2;
+    }
+    else 
+    {
+      fg->group_status.slice_width_physical = 4;
+    }
+
+    if (fg->flags & _FP_GROUP_INTRASLICE_DOUBLEWIDE)
+    {
+      fg->group_status.intraslice_mode_enable = 1;
+    }
+    else
+    {
+      fg->group_status.intraslice_mode_enable = 0;
+    }
+#endif
+
+
     *status = fg->group_status;
     FP_UNLOCK(fc);
     return (rv);
 }
 
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/field_common.c esw_sdk_final/src/bcm/esw/field_common.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/field_common.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/field_common.c	2018-01-10 11:53:52.855376000 +0000
@@ -37742,12 +37742,15 @@ _bcm_field_group_status_calc(int unit, _
         ratio = 1;
     }
 
     while (fs != NULL)
     {
         status->entries_total += fs->entry_count/ratio;
+#ifdef LVL7_FIXUP
+        status->natural_depth = fs->entry_count/ratio;
+#endif
         fs = fs->next;
     }
 
     status->entries_free = 0;
     fs = &fg->slices[0];
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/firebolt/vlan.c esw_sdk_final/src/bcm/esw/firebolt/vlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/firebolt/vlan.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/firebolt/vlan.c	2018-01-10 11:53:52.827376000 +0000
@@ -5251,12 +5251,24 @@ _bcm_xgs3_vlan_control_vlan_set(int unit
             if (_BCM_MULTICAST_IS_VLAN(control->unknown_unicast_group)) {
                 soc_mem_field32_set(unit, VLAN_TABm, &vt, UUC_IDXf,
                                     _BCM_MULTICAST_ID_GET
                                     (control->unknown_unicast_group));
             }
         }
+        
+        if (_BCM_MULTICAST_IS_VLAN(control->broadcast_group) || 
+            _BCM_MULTICAST_IS_VLAN(control->unknown_unicast_group) ||
+            _BCM_MULTICAST_IS_VLAN(control->unknown_unicast_group)) {
+            if (SOC_MEM_FIELD_VALID(unit, VLAN_TABm, VIRTUAL_PORT_ENf)) {
+                soc_mem_field32_set(unit, VLAN_TABm, &vt, VIRTUAL_PORT_ENf, 1);
+            }
+        } else {
+            if (SOC_MEM_FIELD_VALID(unit, VLAN_TABm, VIRTUAL_PORT_ENf)) {
+                soc_mem_field32_set(unit, VLAN_TABm, &vt, VIRTUAL_PORT_ENf, 0);
+            }
+        }
    }
 #endif /* (BCM_TRIUMPH2_SUPPORT && INCLUDE_L3 */
 
 #if defined(BCM_TRIDENT_SUPPORT) && defined(INCLUDE_L3)
     if (soc_feature(unit, soc_feature_trill)) {
         if (SOC_MEM_FIELD_VALID(unit, VLAN_TABm,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/katana2/cosq.c esw_sdk_final/src/bcm/esw/katana2/cosq.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/katana2/cosq.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/katana2/cosq.c	2018-01-10 11:53:52.843376000 +0000
@@ -4236,14 +4236,16 @@ _bcm_kt2_cosq_mapping_set_regular(int un
     cos_map_sel_entry_t cos_map_sel_entry;
     port_cos_map_entry_t cos_map_entries[16];
     void *entries[1];     
     uint32 old_index, new_index;
     int count_index= 0;
     int rv;
-    int cpu_hg_index = 0;
+    int cpu_hg_index;
     
+    cpu_hg_index = 0;
+
     if (count < 1 || count > 16) {
         return BCM_E_PARAM;
     }
 
     if (priority_array == NULL || cosq_array == NULL){
         return BCM_E_PARAM;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/link.c esw_sdk_final/src/bcm/esw/link.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/link.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/link.c	2018-01-10 11:53:52.855376000 +0000
@@ -1241,12 +1241,20 @@ _bcm_esw_link_fault_get(int unit, int po
                 (soc_reg_set(unit, clr_reg, port, 0, lss));
         }
     }
 
     return BCM_E_NONE;
 }
+
+/* PTin added: linkscan */
+#if 1
+int _ptin_esw_link_fault_get(int unit, int port, int *fault)
+{
+  return _bcm_esw_link_fault_get(unit, port, fault);
+}
+#endif
 #endif /* HERC15, FIREBOLT */  
 
 
 #if defined(BCM_TRX_SUPPORT) || defined(BCM_BRADLEY_SUPPORT)
 STATIC int
 _bcm_esw_link_lag_failover_loopback_get(int unit, int port, int* value)
@@ -3295,12 +3303,82 @@ _bcm_esw_link_force(int unit, uint32 fla
         sal_sem_give(lc->lc_sema);
     }
 
     return(BCM_E_NONE);
 }
 
+/* PTin added: linkscan */
+#if 1
+int
+_ptin_esw_link_force(int unit, bcm_port_t port, int force, int link, int no_linkchange)
+{
+  soc_persist_t *sop = SOC_PERSIST(unit);
+  ls_cntl_t *lc = link_control[unit];
+  pbmp_t pbm;
+
+  LC_CHECK_INIT(unit);
+
+  if (!SOC_PORT_VALID(unit, port) || !IS_PORT(unit, port)) {
+      return BCM_E_PORT;
+  }
+
+  LC_LOCK(unit);
+
+  if (force) {
+      SOC_PBMP_PORT_REMOVE(sop->lc_pbm_override_link, port);
+      if (link) {
+          if (lc->lc_warm_boot) {
+              /* Don't update ports when recovering from Warm Boot. */
+              SOC_PBMP_PORT_ADD(sop->lc_pbm_link, port);
+              SOC_PBMP_PORT_REMOVE(sop->lc_pbm_link_change, port);
+          }
+          SOC_PBMP_PORT_ADD(sop->lc_pbm_override_link, port);
+      }
+      SOC_PBMP_PORT_ADD(sop->lc_pbm_override_ports, port);
+  } else {
+      SOC_PBMP_PORT_REMOVE(sop->lc_pbm_override_ports, port);
+      SOC_PBMP_PORT_REMOVE(sop->lc_pbm_override_link, port);
+      /* PTin modified */
+      #if 0
+      SOC_PBMP_PORT_ADD(sop->lc_pbm_link_change, port);
+      #else
+      if (no_linkchange)
+      {
+        //SOC_PBMP_PORT_ADD(sop->lc_pbm_link, port);
+        SOC_PBMP_PORT_REMOVE(sop->lc_pbm_link_change, port);
+      }
+      else
+      {
+        SOC_PBMP_PORT_ADD(sop->lc_pbm_link_change, port);
+      }
+      #endif
+  }
+
+  /*
+   * Force immediate update to just this port - this allows loopback 
+   * forces to take effect immediately.
+   */
+  SOC_PBMP_CLEAR(pbm);
+  SOC_PBMP_PORT_ADD(pbm, port);
+  /* PTin modified */
+  _bcm_esw_linkscan_update(unit, 0 /*flags*/, pbm);
+
+  LC_UNLOCK(unit);
+
+  /*
+   * Wake up master thread to notice changes - required if using hardware
+   * link scanning.
+   */
+  if (lc->lc_sema != NULL) {
+      sal_sem_give(lc->lc_sema);
+  }
+
+  return(BCM_E_NONE);
+}
+#endif
+
 /*
  * Function:    
  *      _bcm_esw_link_down_tx_set
  * Purpose:
  *      Mark port as linkdown TX ensuring MAC will transmit while
  *      link is down
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/multicast.c esw_sdk_final/src/bcm/esw/multicast.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/multicast.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/multicast.c	2018-01-10 11:53:52.851376000 +0000
@@ -106,12 +106,15 @@
 #include <bcm_int/esw/stack.h>
 #include <bcm_int/esw/trunk.h>
 #include <bcm_int/api_xlate_port.h>
 #include <bcm_int/esw/triumph3.h>
 #include<bcm_int/esw/saber2.h> 
 
+/* PTin modified: Virtual ports - avoid errors due to CPU port */
+#include "logger.h"
+
 #define _BCM_MULTICAST_MTU_TABLE_OFFSET(unit) \
         ((SOC_IS_HURRICANEX(unit) || SOC_IS_GREYHOUND(unit) || SOC_IS_METROLITE(unit)) ? 512 : 8192)
 #define _BCM_TR3_MULTICAST_MTU_TABLE_OFFSET(unit) (SOC_IS_HELIX4(unit) ? 12288 : 16384)
 
 #ifdef BCM_WARM_BOOT_SUPPORT
 static int multicast_mode_set[BCM_MAX_NUM_UNITS];
@@ -2959,15 +2962,23 @@ _bcm_esw_multicast_l3_destroy(int unit,
             soc_feature(unit, soc_feature_linkphy_coe)) {
            _bcm_kt2_subport_pbmp_update(unit, &ether_higig_pbmp);
        }
 #endif
 
         BCM_PBMP_ITER(ether_higig_pbmp, port_iter) {
+            /* PTin modified: Virtual ports - avoid errors due to CPU port */
+            #if 0
             BCM_IF_ERROR_RETURN(
                  _bcm_esw_ipmc_egress_intf_set(unit, mc_index, port_iter, 0, 
                                                NULL, is_l3, FALSE));
+            #else
+            if (_bcm_esw_ipmc_egress_intf_set(unit, mc_index, port_iter, 0, NULL, is_l3, FALSE) != BCM_E_NONE)
+            {
+              PT_LOG_WARN(LOG_CTX_SDK,"Error with _bcm_esw_ipmc_egress_intf_set: unit=%d, mc_index=%d, port=%d", unit, mc_index, port_iter);
+            }
+            #endif
         }
 
         /* Clear the IPMC related tables */
         BCM_PBMP_CLEAR(l2_pbmp);
         BCM_PBMP_CLEAR(l3_pbmp);
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/port.c esw_sdk_final/src/bcm/esw/port.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/port.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/port.c	2018-01-10 11:53:52.835376000 +0000
@@ -6638,12 +6638,16 @@ bcm_esw_port_untagged_vlan_get(int unit,
 STATIC int
 _bcm_port_mmu_update(int unit, bcm_port_t port, int link)
 {
     int pause_tx, pause_rx, q_limit_enable, cos;
     uint32 psl_rval, opc_rval, oqc_rval;
 
+#ifdef LVL7_FIXUP
+    if (SOC_IS_SCORPION(unit)) return BCM_E_NONE;
+#endif
+
     if (!SOC_IS_HBX(unit)) {
         return (BCM_E_UNAVAIL);
     }
 
     if (link < 0) {
         SOC_IF_ERROR_RETURN
@@ -6716,12 +6720,15 @@ _bcm_port_untagged_vlan_set(int unit, bc
 
         BCM_IF_ERROR_RETURN(
             _bcm_esw_port_gport_validate(unit, port, &local_port));
 
         BCM_IF_ERROR_RETURN
             (_bcm_trx_vlan_port_default_action_get(unit, port, &action));
+        #ifdef LVL7_FIXUP
+        action.it_inner_prio = bcmVlanActionNone;
+        #endif
         action.new_outer_vlan = vid;
         action.priority = PORT(unit, local_port).p_ut_prio;
 #ifdef BCM_KATANA2_SUPPORT
         if (SOC_IS_KATANA2(unit)) {
             return _bcm_kt2_vlan_port_default_action_set(unit, port, &action);
         } else
@@ -15047,12 +15054,260 @@ bcm_esw_port_loopback_set(int unit, bcm_
                          "bcm_port_loopback_set: u=%d p=%d lb=%d rv=%d\n"),
               unit, port, loopback, rv));
 
     return rv;
 }
 
+/* PTin added: linkscan */
+#if 1
+int
+ptin_esw_port_loopback_set(int unit, bcm_port_t port, int loopback, int no_linkchange)
+{
+  int             rv, link = TRUE;
+  int             phy_lane = -1;
+  int             phyn = 0, sys_side = 0;
+  bcm_port_t      local_port = -1;
+  soc_persist_t   *sop = SOC_PERSIST(unit);
+#ifdef BCM_TRIDENT2_SUPPORT
+  int             enable;
+#endif /* BCM_TRIDENT2_SUPPORT */
+
+  /* Make sure port module is initialized. */
+  PORT_INIT(unit);
+
+  if (SOC_USE_PORTCTRL(unit)) {
+      return bcmi_esw_portctrl_loopback_set(unit, port, loopback);
+  }
+
+  if(bcm_common_oamp_port_enable_get(unit, port)) {
+      LOG_ERROR(BSL_LS_BCM_PORT,
+                (BSL_META("Error: Cannot set loopback on OAMP Port %d.\n"),
+                 port));
+      return BCM_E_PARAM;
+  }
+
+#if defined(BCM_TOMAHAWK_SUPPORT)
+  if (SOC_IS_TOMAHAWK(unit)) {
+      BCM_IF_ERROR_RETURN(bcm_th_phy_lb_check(unit, port, loopback));
+  }
+#endif
+
+#if defined(BCM_KATANA2_SUPPORT)
+  if (SOC_IS_KATANA2(unit) && (!BCM_GPORT_IS_SET(port)) &&
+      (!((port >= 1) && (port <= KT2_MAX_PHYSICAL_PORTS)))) {
+       return BCM_E_PORT;
+  }
+#endif
+
+  BCM_IF_ERROR_RETURN(_bcm_esw_port_gport_phyn_validate(unit, port,
+                                                      &local_port, &phyn,
+                                                      &phy_lane, &sys_side));
+
+  if (local_port == -1) {
+     BCM_IF_ERROR_RETURN(_bcm_esw_port_gport_validate(unit, port, &port));
+  } else {
+     port = local_port;
+  }
+
+#ifdef BCM_RCPU_SUPPORT
+  if (SOC_IS_RCPU_ONLY(unit) && IS_RCPU_PORT(unit, port)) {
+      return BCM_E_PORT;
+  }
+#endif /* BCM_RCPU_SUPPORT */
+
+  soc_phyctrl_enable_get(unit, port, &link);
+  if (TRUE == link) {
+      if (SOC_PBMP_MEMBER(sop->lc_pbm_override_ports, port)) {
+          if(!SOC_PBMP_MEMBER(sop->lc_pbm_override_link, port)) {
+              link = FALSE;
+          }
+      }
+  }
+
+  rv = BCM_E_NONE;
+  /*
+   * Always force link before changing hardware to avoid
+   * race with the linkscan thread.
+   * On KT2, the operated port should be forced link down
+   * before mode change to prevent traffic being forwarded
+   * to the port.
+   */
+  if (!(loopback == BCM_PORT_LOOPBACK_NONE) || SOC_IS_KATANA2(unit)) {
+      rv = _bcm_esw_link_force(unit, 0 /*flags*/, port, TRUE, FALSE);
+  }
+
+  PORT_LOCK(unit);
+
+  if (BCM_SUCCESS(rv)) {
+      rv = MAC_LOOPBACK_SET(PORT(unit, port).p_mac, unit, port,
+                            (loopback == BCM_PORT_LOOPBACK_MAC));
+  }
+  if (BCM_SUCCESS(rv)) {
+      if (local_port == -1) {
+          rv = soc_phyctrl_loopback_set(unit, port,
+                            (loopback == BCM_PORT_LOOPBACK_PHY), TRUE);
+      } else {
+          rv = soc_phyctrl_redirect_loopback_set
+                                        (unit, port, phyn,
+                                         phy_lane, sys_side,
+                                         (loopback == BCM_PORT_LOOPBACK_PHY),
+                                         TRUE);
+      }
+  }
+
+  /* some mac loopback implementations require the phy to also be in loopback */
+  if (soc_feature(unit, soc_feature_phy_lb_needed_in_mac_lb) &&
+      (loopback == BCM_PORT_LOOPBACK_MAC)) {
+      if (local_port == -1) {
+          rv = soc_phyctrl_loopback_set(unit, port, 1, TRUE);
+      } else {
+          rv = soc_phyctrl_redirect_loopback_set(unit, port, phyn,
+                                                 phy_lane, sys_side,
+                                                 1, TRUE);
+      }
+   }
+
+  PORT_UNLOCK(unit);                  /* unlock before link call */
+
+  if ((loopback == BCM_PORT_LOOPBACK_NONE) || !BCM_SUCCESS(rv)) {
+      /* PTin modified */
+      #if 0
+      _bcm_esw_link_force(unit, 0 /*flags*/, port, FALSE, DONT_CARE);
+      #else
+      _ptin_esw_link_force(unit, port, FALSE, DONT_CARE, no_linkchange);
+      #endif
+      PORT_LOCK(unit);
+#ifdef BCM_TRIDENT2_SUPPORT
+      /* When the PHY is TSC, need to unsquelch TX LANE. */
+      if (SOC_IS_TD2_TT2(unit) && !SOC_IS_TOMAHAWK(unit)){
+          enable = PORT(unit, port).enable;
+          if ((FALSE == enable) && (loopback == BCM_PORT_LOOPBACK_NONE)) {
+              (void)soc_phyctrl_notify(unit, port, phyEventTxSquelch, FALSE);
+              rv = soc_phyctrl_enable_set(unit, port, FALSE);
+              if (SOC_FAILURE(rv)) {
+                  PORT_UNLOCK(unit);
+                  return (rv);
+              }
+              rv = MAC_ENABLE_SET(PORT(unit, port).p_mac, unit, port, FALSE);
+          }
+      } else
+#endif /* BCM_TRIDENT2_SUPPORT */
+      {
+          if ((FALSE == link) && (loopback == BCM_PORT_LOOPBACK_NONE)) {
+              /* Disable MAC RX to prevent traffic going into this port */
+              MAC_CONTROL_SET(PORT(unit, port).p_mac, unit, port,
+                              SOC_MAC_CONTROL_RX_SET, FALSE);
+              sal_udelay(100); /* Wait for 1 jumbo packet transmission time */
+
+              rv = MAC_ENABLE_SET(PORT(unit, port).p_mac, unit, port, FALSE);
+          }
+      }
+      PORT_UNLOCK(unit);
+  } else {
+      /* Enable only MAC instead of calling bcm_port_enable_set so
+       * that this API doesn't silently enable the port if the
+       * port is disabled by application.
+       */
+      rv = MAC_ENABLE_SET(PORT(unit, port).p_mac, unit, port, TRUE);
+
+#ifdef BCM_TRIDENT2_SUPPORT
+      /* When the PHY is TSC, need to enable the PHY to support MAC loopback
+       * on a disabled port. In order to avoid link flap of link partner,
+       * need to squelch TX LANE before enabling PHY.
+       */
+      if (BCM_FAILURE(rv)) {
+          return (rv);
+      }
+      if ((SOC_IS_TD2_TT2(unit) && !SOC_IS_TOMAHAWK(unit)) && (FALSE == link)
+          && (loopback == BCM_PORT_LOOPBACK_MAC)) {
+          PORT_LOCK(unit);
+          (void)soc_phyctrl_notify(unit, port, phyEventTxSquelch, TRUE);
+          rv = soc_phyctrl_enable_set(unit, port, TRUE);
+          PORT_UNLOCK(unit);
+          if (SOC_FAILURE(rv)) {
+              return (rv);
+          }
+      }
+#endif /* BCM_TRIDENT2_SUPPORT */
+
+      if (BCM_SUCCESS(rv)) {
+          /* Make sure that the link status is updated only after the
+           * MAC is enabled so that link_mask2 is set before the
+           * calling thread synchronizes with linkscan thread in
+           * _bcm_link_force call.
+           * If the link is forced before MAC is enabled, there could
+           * be a race condition in _soc_link_update where linkscan
+           * may use an old view of link_mask2 and override the
+           * EPC_LINK_BMAP after the mac_enable_set updates
+           * link_mask2 and EPC_LINK_BMAP.
+           */
+          if (loopback == BCM_PORT_LOOPBACK_MAC) {
+              rv = _bcm_esw_link_force(unit, 0 /*flags*/, port, TRUE, TRUE);
+          } else {
+              rv = _bcm_esw_link_force(unit, 0 /*flags*/, port, TRUE, link);
+          }
+      }
+      if (BCM_FAILURE(rv)) {
+          return (rv);
+      }
+
+#if defined(BCM_BRADLEY_SUPPORT)
+      /*
+       * Call _bcm_port_mmu_update explicitly because linkscan
+       * will not call bcm_port_update when the link is forced.
+       */
+      if (SOC_IS_HBX(unit) && !SOC_IS_SHADOW(unit)) {
+          rv = _bcm_port_mmu_update(unit, port, 1);
+      }
+
+      /* When a link comes up, hardware will not update the
+       * LINK_STATUS register until software has toggled the
+       * the LAG_FAILOVER_CONFIG.LINK_STATUS_UP field.
+       * Normally, this is done by bcm_port_update. But since
+       * linkscan will not call bcm_port_update when a link is
+       * forced up, the toggling of LAG_FAILOVER_CONFIG.LINK_STATUS_UP
+       * is done here.
+       */
+      if ((SOC_REG_IS_VALID(unit, GXPORT_LAG_FAILOVER_CONFIGr) &&
+           IS_GX_PORT(unit, port)) ||
+          ((SOC_REG_IS_VALID(unit, LAG_FAILOVER_CONFIGr) ||
+            SOC_REG_IS_VALID(unit, XLPORT_LAG_FAILOVER_CONFIGr)) &&
+            (IS_XL_PORT(unit, port) || IS_MXQ_PORT(unit, port) ))) {
+          soc_reg_t reg;
+          uint32 rval;
+
+          if (SOC_IS_SABER2(unit) && SOC_REG_PORT_VALID(unit, XLPORT_LAG_FAILOVER_CONFIGr, port)) {
+              reg = XLPORT_LAG_FAILOVER_CONFIGr;
+          } else if (SOC_REG_IS_VALID(unit, LAG_FAILOVER_CONFIGr)) {
+              reg = LAG_FAILOVER_CONFIGr;
+          } else if (SOC_REG_IS_VALID(unit, GXPORT_LAG_FAILOVER_CONFIGr)) {
+              reg = GXPORT_LAG_FAILOVER_CONFIGr;
+          } else {
+              reg = XLPORT_LAG_FAILOVER_CONFIGr;
+          }
+
+          /* Toggle link bit to notify IPIPE on link up */
+          BCM_IF_ERROR_RETURN(soc_reg32_get(unit, reg, port, 0, &rval));
+          soc_reg_field_set(unit, reg, &rval, LINK_STATUS_UPf, 1);
+          BCM_IF_ERROR_RETURN(soc_reg32_set(unit, reg, port, 0, rval));
+          soc_reg_field_set(unit, reg, &rval, LINK_STATUS_UPf, 0);
+          BCM_IF_ERROR_RETURN(soc_reg32_set(unit, reg, port, 0, rval));
+      }
+#endif /* BCM_BRADLEY_SUPPORT */
+  }
+
+  LOG_INFO(BSL_LS_BCM_PORT,
+           (BSL_META_U(unit,
+                       "bcm_port_loopback_set: u=%d p=%d lb=%d rv=%d\n"),
+            unit, port, loopback, rv));
+
+  return rv;
+}
+#endif
+
+
 /*
  * Function:
  *      bcm_port_loopback_get
  * Purpose:
  *      Recover the current loopback operation for the specified port.
  * Parameters:
@@ -27143,12 +27398,25 @@ bcm_esw_port_medium_config_set(int unit,
                            bcm_phy_config_t  *config)
 {
     int rv;
 
     /* Make sure port module is initialized. */
     PORT_INIT(unit);
+
+#ifdef LVL7_FIXUP
+    bcm_phy_config_t currentConfig;
+    rv = bcm_esw_port_medium_config_get(unit, port, medium, &currentConfig);
+    if (rv == BCM_E_NONE)
+    {
+      if (memcmp(config, &currentConfig, sizeof(currentConfig)) == 0)
+      {
+        return rv;        
+      }
+    }
+#endif
+
     BCM_IF_ERROR_RETURN(_bcm_esw_port_gport_validate(unit, port, &port));
 
 #ifdef PORTMOD_SUPPORT
     if (SOC_USE_PORTCTRL(unit)) {
         rv = bcmi_esw_portctrl_medium_config_set(unit, port, medium, config);
     } else
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/stat.c esw_sdk_final/src/bcm/esw/stat.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/stat.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/stat.c	2018-01-10 11:53:52.859376000 +0000
@@ -1034,13 +1034,25 @@ bcm_esw_stat_init(int unit)
                     soc_reg_field_set(unit, IL_RX_CONFIGr, &rval32,
                                       IL_RX_MAX_PACKET_SIZEf,
                                       _bcm_stat_ovr_threshold[unit][port]);
                     SOC_IF_ERROR_RETURN(WRITE_IL_RX_CONFIGr(unit, port, rval32));
                 }
             } else {
+#ifdef LVL7_FIXUP
+                /* Set the Stack port Max size to 0x3fff */
+                if (IS_HG_PORT(unit,port))
+                {
+                  COMPILER_64_SET(rval, 0, 0x3fff);
+                }
+                else
+                {
+                  COMPILER_64_SET(rval, 0, _bcm_stat_ovr_threshold[unit][port]);
+                }
+#else
                 COMPILER_64_SET(rval, 0, _bcm_stat_ovr_threshold[unit][port]);
+#endif
                 SOC_IF_ERROR_RETURN(WRITE_MAC_CNTMAXSZr(unit, port, rval));
             }
 
             /*
              * Devices that use 10G MAC + Trimac/Unimac
              */
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/switch.c esw_sdk_final/src/bcm/esw/switch.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/switch.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/switch.c	2018-01-10 11:53:52.827376000 +0000
@@ -3605,12 +3605,21 @@ _bcm_xgs3_igmp_action_set(int unit,
             case bcmSwitchIgmpPktToCpu:
                 fields[0] = IGMP_PKT_TO_CPUf;
                 break;
             case bcmSwitchIgmpPktDrop:
                 fields[0] = IGMP_PKT_DROPf;
                 break;
+#ifdef LVL7_FIXUP
+            /* See #77807 for details */
+            case bcmSwitchMldPktToCpu:
+                fields[0] = MLD_PKT_TO_CPUf;
+                break;
+            case bcmSwitchMldPktDrop:
+                fields[0] = MLD_PKT_DROPf;
+                break;
+#endif
             case bcmSwitchV4ResvdMcPktToCpu:
                 fields[0] = IPV4_RESVD_MC_PKT_TO_CPUf;
                 break;
             case bcmSwitchV4ResvdMcPktDrop:
                 fields[0] = IPV4_RESVD_MC_PKT_DROPf;
                 break;
@@ -3807,12 +3816,23 @@ _bcm_xgs3_igmp_action_get(int unit,
                 act_value = 1;
                 break;
             case bcmSwitchIgmpPktDrop:
                 field = IGMP_PKT_DROPf;
                 act_value = 1;
                 break;
+#ifdef LVL7_FIXUP
+            /* See #77807 for details */
+            case bcmSwitchMldPktToCpu: 	 
+                field = MLD_PKT_TO_CPUf; 	 
+                act_value = 1; 	 
+                break; 	 
+            case bcmSwitchMldPktDrop: 	 
+                field = MLD_PKT_DROPf; 	 
+                act_value = 1; 	 
+                break;
+#endif
             case bcmSwitchV4ResvdMcPktToCpu:
                 field = IPV4_RESVD_MC_PKT_TO_CPUf;
                 act_value = 1;
                 break;
             case bcmSwitchV4ResvdMcPktDrop:
                 field = IPV4_RESVD_MC_PKT_DROPf;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/trident/cosq.c esw_sdk_final/src/bcm/esw/trident/cosq.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/trident/cosq.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/trident/cosq.c	2018-01-10 11:53:52.851376000 +0000
@@ -4770,13 +4770,21 @@ bcm_td_cosq_mapping_set(int unit, bcm_po
         continue;
     }
     /* If no gport, map the int prio symmetrically for ucast and
     * mcast 
     * There are only 5 MC QUEUES [0,4] attached to a port
     */
-    mc_cosq = (cosq > mc_cosq_max) ? mc_cosq_max : cosq;
+/* PTin modified: */
+    //mc_cosq = (cosq > mc_cosq_max) ? mc_cosq_max : cosq;
+    {
+     int numq=8;
+    
+     bcm_td_cosq_config_get(unit,&numq);
+     mc_cosq = cosq * (mc_cosq_max+1) / numq;
+    }	
+/* PTin end */
     BCM_IF_ERROR_RETURN(_bcm_td_cosq_mapping_set(unit, local_port,
         priority,
         BCM_COSQ_GPORT_UCAST_QUEUE_GROUP | BCM_COSQ_GPORT_MCAST_QUEUE_GROUP,
         -1, (cosq << 16 | (mc_cosq & 0xffff))));
     }
     return BCM_E_NONE;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/trident/hashing.c esw_sdk_final/src/bcm/esw/trident/hashing.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/trident/hashing.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/trident/hashing.c	2018-01-10 11:53:52.851376000 +0000
@@ -77,14 +77,24 @@ typedef struct bcm_rtag7_base_hash_s {
 } bcm_rtag7_base_hash_t;
 
 #define   ETHERTYPE_IPV6 0x86dd /* ipv6 ethertype */
 #define   ETHERTYPE_IPV4 0x0800 /* ipv4 ethertype */
 #define   ETHERTYPE_MIN  0x0600 /* minimum ethertype for hashing */
 
+/* PTin modified: SDK 6.3.0 */
+#ifdef LVL7_FIXUP
+#ifndef IP_PROT_TCP
 #define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#endif
+#ifndef IP_PROT_UDP
 #define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
+#else
+#define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
 
 #define RTAG7_L2_ONLY         0x0
 #define RTAG7_UNKNOWN_HIGIG   0x1
 #define RTAG7_MPLS            0x2
 #define RTAG7_MIM             0x3
 #define RTAG7_IPV4            0x4
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/trident2/hashing.c esw_sdk_final/src/bcm/esw/trident2/hashing.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/trident2/hashing.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/trident2/hashing.c	2018-01-10 11:53:52.839376000 +0000
@@ -77,14 +77,18 @@ typedef struct bcm_rtag7_base_hash_s {
 } bcm_rtag7_base_hash_t;
 
 #define   ETHERTYPE_IPV6 0x86dd /* ipv6 ethertype */
 #define   ETHERTYPE_IPV4 0x0800 /* ipv4 ethertype */
 #define   ETHERTYPE_MIN  0x0600 /* minimum ethertype for hashing */
 
+#ifndef IP_PROT_TCP
 #define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#endif
+#ifndef IP_PROT_UDP
 #define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
 
 #define RTAG7_RH_MODE_ECMP    0
 #define RTAG7_RH_MODE_LAG     1
 #define RTAG7_RH_MODE_HGT     2
 
 #define RTAG7_L2_ONLY         0x0
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/cosq.c esw_sdk_final/src/bcm/esw/triumph2/cosq.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/cosq.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/triumph2/cosq.c	2018-01-10 11:53:52.859376000 +0000
@@ -917,12 +917,34 @@ _bcm_tr2_cosq_bucket_set(int unit, bcm_p
      * To set the new Bandwidth settings, the procedure adopted is
      * a. reset MAXBUCKETCONFIG, MINBUCKETCONFIG, MAXBUCKET,MINBUCKET
      * b. update MAXBUCKETCONFIG and MINBUCKETCONFIG with new values passed
      * c. if MISCCONFIG.METERING_CLK_EN not set before, enable it.
      */
 
+#ifdef LVL7_FIXUP
+    uint64 maskval_64;
+
+    meter_flags = flags;
+
+    /* first clear bit corresponding for que then optionally set it to enable packet mode */
+    BCM_IF_ERROR_RETURN(READ_SHAPING_MODEr(unit, port, &regval_64));
+    maskval_64 = COMPILER_64_INIT(0, 1);
+    COMPILER_64_SHL(maskval_64, cosq);
+    COMPILER_64_NOT(maskval_64);
+    COMPILER_64_AND(regval_64, maskval_64);
+
+    /* set SHAPING_MODE bit if required. */
+    if ((max_quantum !=0) && 
+        (_BCM_XGS_METER_FLAG_PACKET_MODE == (flags&_BCM_XGS_METER_FLAG_PACKET_MODE))) {
+      COMPILER_64_NOT(maskval_64);
+      COMPILER_64_OR(regval_64, maskval_64);
+    }
+
+    BCM_IF_ERROR_RETURN(WRITE_SHAPING_MODEr(unit, port, regval_64));
+#endif    
+
     BCM_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &regval));
     if (soc_reg_field_get(unit, MISCCONFIGr, regval, ITU_MODE_SELf)) {
         meter_flags |= _BCM_XGS_METER_FLAG_NON_LINEAR;
     }
     meter_flags |= _BCM_XGS_METER_FLAG_GRANULARITY;
 
@@ -949,16 +971,25 @@ _bcm_tr2_cosq_bucket_set(int unit, bcm_p
 
     refresh_bitsize =
         soc_reg_field_length(unit, MINBUCKETCONFIG_64r, MIN_REFRESHf);
     bucket_bitsize =
         soc_reg_field_length(unit, MINBUCKETCONFIG_64r, MIN_THDf);
 
+#ifdef LVL7_FIXUP
+    /* Hardcode the burst size to accommodate jumbo frames (9216 bytes). The unit
+       for 'burst_quantum' is kbits. So (9216 * 8 / 1000 = 74)*/
+    BCM_IF_ERROR_RETURN
+        (_bcm_xgs_kbits_to_bucket_encoding(min_quantum, kbits_burst_min ? 74 : 0,
+                          meter_flags, refresh_bitsize, bucket_bitsize,
+                          &refresh_rate, &bucketsize, &granularity));
+#else
     BCM_IF_ERROR_RETURN
         (_bcm_xgs_kbits_to_bucket_encoding(min_quantum, kbits_burst_min,
                           meter_flags, refresh_bitsize, bucket_bitsize,
                           &refresh_rate, &bucketsize, &granularity));
+#endif
 
     COMPILER_64_ZERO(regval_64);
     soc_reg64_field32_set(unit, MINBUCKETCONFIG_64r, &regval_64,
                           METER_GRANf, granularity);
     soc_reg64_field32_set(unit, MINBUCKETCONFIG_64r, &regval_64,
                           MIN_REFRESHf, refresh_rate);
@@ -979,12 +1010,21 @@ _bcm_tr2_cosq_bucket_set(int unit, bcm_p
 
     COMPILER_64_ZERO(regval_64);
     soc_reg64_field32_set(unit, MAXBUCKETCONFIG_64r, &regval_64,
                           METER_GRANf, granularity);
     soc_reg64_field32_set(unit, MAXBUCKETCONFIG_64r, &regval_64,
                           MAX_REFRESHf, refresh_rate);
+#ifdef LVL7_FIXUP
+    /* We want as small a burst size as possible... 4 KB in this case. */
+    bucketsize = bucketsize ? 1 : 0;
+    if ((0 != max_quantum) && (0 == bucketsize))
+    {
+      /* Max is specified. bucketsize cannot be zero or else shaping is disabled. */
+      bucketsize = 1;
+    }
+#endif
     soc_reg64_field32_set(unit, MAXBUCKETCONFIG_64r, &regval_64, MAX_THDf,
                           bucketsize);
     BCM_IF_ERROR_RETURN(WRITE_MAXBUCKETCONFIG_64r(unit, port, cosq, regval_64));
 
     if (flags & _BCM_XGS_METER_FLAG_PACKET_MODE) {
         BCM_IF_ERROR_RETURN(READ_SHAPING_MODEr(unit, port, &regval_64));
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/vlan.c esw_sdk_final/src/bcm/esw/triumph2/vlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/vlan.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/triumph2/vlan.c	2018-01-10 11:53:52.855376000 +0000
@@ -907,12 +907,17 @@ _tr3_vlan_vp_match_add(int unit, bcm_vla
 
     if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_PRESERVE) {
         action.dt_outer = bcmVlanActionReplace;
         action.dt_outer_prio = bcmVlanActionReplace;
         action.dt_inner = bcmVlanActionNone;
         action.dt_inner_prio = bcmVlanActionNone;
+    } else if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_REPLACE) {
+        action.dt_outer = bcmVlanActionReplace;
+        action.dt_outer_prio = bcmVlanActionReplace;
+        action.dt_inner = bcmVlanActionReplace;
+        action.dt_inner_prio = bcmVlanActionNone;
     } else {
         if (soc_feature(unit, soc_feature_vlan_copy_action)) {
             action.dt_outer = bcmVlanActionCopy;
             action.dt_outer_prio = bcmVlanActionCopy;
         } else {
             action.dt_outer = bcmVlanActionReplace;
@@ -1482,12 +1487,17 @@ _tr2_vlan_vp_match_add(int unit, bcm_vla
 
     if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_PRESERVE) {
         action.dt_outer = bcmVlanActionReplace;
         action.dt_outer_prio = bcmVlanActionReplace;
         action.dt_inner = bcmVlanActionNone;
         action.dt_inner_prio = bcmVlanActionNone;
+    } else if (vlan_vp->flags & BCM_VLAN_PORT_INNER_VLAN_REPLACE) {
+        action.dt_outer = bcmVlanActionReplace;
+        action.dt_outer_prio = bcmVlanActionReplace;
+        action.dt_inner = bcmVlanActionReplace;
+        action.dt_inner_prio = bcmVlanActionNone;
     } else {
         if (soc_feature(unit, soc_feature_vlan_copy_action)) {
             action.dt_outer = bcmVlanActionCopy;
             action.dt_outer_prio = bcmVlanActionCopy;
         } else {
             action.dt_outer = bcmVlanActionReplace;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/wlan.c esw_sdk_final/src/bcm/esw/triumph2/wlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/triumph2/wlan.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/triumph2/wlan.c	2018-01-10 11:53:52.855376000 +0000
@@ -825,12 +825,16 @@ bcm_tr2_wlan_init(int unit)
     int i, num_vp, num_tnl, num_intf, rv = BCM_E_NONE;
     _bcm_tr2_wlan_bookkeeping_t *wlan_info = WLAN_INFO(unit);
     soc_reg_t reg;
     uint64 rval64, *rval64s[1];
     uint32 capwap_frag_profile;
 
+#ifdef LVL7_FIXUP
+    (void)bcm_tr2_wlan_port_delete_all(unit); /* jls added */
+#endif
+
     if (!L3_INFO(unit)->l3_initialized) {
         LOG_INFO(BSL_LS_BCM_L3,
                  (BSL_META_U(unit,
                              "L3 module must be initialized first\n")));
         return BCM_E_NONE;
     }
@@ -1536,13 +1540,17 @@ _bcm_tr2_wlan_l3_intf_add(int unit, _bcm
                 if_info->l3i_index = i;
                 return BCM_E_NONE;
             }
         }
     }
     /* Create an interface */
+#ifdef LVL7_FIXUP
+    BCM_IF_ERROR_RETURN(bcm_xgs3_l3_intf_id_create(unit, if_info));
+#else
     BCM_IF_ERROR_RETURN(bcm_xgs3_l3_intf_create(unit, if_info));
+#endif
     _BCM_WLAN_INTF_USED_SET(unit, if_info->l3i_index);
     return BCM_E_NONE;
 }
 
 typedef struct _bcm_tr2_ing_nh_info_s {
     int      port;
@@ -1608,12 +1616,18 @@ _bcm_tr2_wlan_nh_info_add(int unit, bcm_
          * allocated but nothing is written to hardware. The "nh_info"
          * in this case is not used, so just set to all zeros.
          */
         bcm_l3_egress_t_init(&nh_info);
 
         nh_flags = _BCM_L3_SHR_MATCH_DISABLE | _BCM_L3_SHR_WRITE_DISABLE;
+#ifdef LVL7_FIXUP
+        if (*nh_index > 0)
+        {
+          nh_flags |= _BCM_L3_SHR_WITH_ID;
+        }
+#endif
         rv = bcm_xgs3_nh_add(unit, nh_flags, &nh_info, nh_index);
         BCM_IF_ERROR_RETURN(rv);
     }
 
     /* Resolve the gport */
     rv = _bcm_esw_gport_resolve(unit, wlan_port->port, &mod_out, 
@@ -1667,13 +1681,18 @@ _bcm_tr2_wlan_nh_info_add(int unit, bcm_
     if (rv < 0) {
         goto cleanup;
     }
 
     /* Add an L3 interface entry with L2_SWITCH=1 - ref count if exists */
     sal_memset(&if_info, 0, sizeof(_bcm_l3_intf_cfg_t));
+#ifdef LVL7_FIXUP
+    if_info.l3i_flags |= BCM_L3_L2ONLY | BCM_L3_SECONDARY | BCM_L3_WITH_ID;
+    if_info.l3i_index = L3_INFO(unit)->l3_intf_table_size - 2;
+#else
     if_info.l3i_flags |= BCM_L3_L2ONLY | BCM_L3_SECONDARY;
+#endif
     rv = _bcm_tr2_wlan_l3_intf_add(unit, &if_info);
     if (BCM_FAILURE(rv)) {
         goto cleanup;
     }
 
     /* Populate the fields of WLAN::EGR_l3_NEXT_HOP */
@@ -1972,13 +1991,17 @@ _bcm_tr2_wlan_match_add(int unit, bcm_wl
  *      ID. That way we can use a single VP for both directions. This constrains
  *      the application to use the lower half of the tunnel initiators.
  */
 int 
 bcm_tr2_wlan_port_add(int unit, bcm_wlan_port_t *wlan_port)
 {
+#ifdef LVL7_FIXUP
+    int drop, mode, is_local = 0, rv = BCM_E_PARAM, nh_index = wlan_port->encap_id;
+#else
     int drop, mode, is_local = 0, rv = BCM_E_PARAM, nh_index = 0;
+#endif
     bcm_port_t local_port;
     bcm_module_t my_modid;
     int vp, num_vp, lport_ptr = -1;
     int tpid_enable = 0, tpid_index;
     wlan_svp_table_entry_t svp;
     ing_dvp_table_entry_t dvp;
@@ -2115,16 +2138,26 @@ bcm_tr2_wlan_port_add(int unit, bcm_wlan
         soc_LPORT_TABm_field32_set(unit, &lport_profile, V6L3_ENABLEf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, V4IPMC_ENABLEf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, V6IPMC_ENABLEf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, IPMC_DO_VLANf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, FILTER_ENABLEf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, VFP_ENABLEf, 0x1);
+#ifdef LVL7_FIXUP
+        /* In FASTPATH, all the ports have the same sel_index for slices. Point
+         * the tunnel ports to pick up sel_index of 0. Otherwise IFP matching
+         * does not work on tunnel ports.
+         */
+        soc_LPORT_TABm_field32_set(unit, &lport_profile, 
+                                   FP_PORT_FIELD_SEL_INDEXf, 
+                                   0);
+#else
         /* Allocate a fixed high index for the PORT_FIELD_SEL */
         soc_LPORT_TABm_field32_set(unit, &lport_profile, 
                                    FP_PORT_FIELD_SEL_INDEXf, 
                                    soc_mem_index_max(unit, FP_PORT_FIELD_SELm));
+#endif
         /* The vt_key_types must be set to 0x3 or 0x7 for WLAN */
         soc_LPORT_TABm_field32_set(unit, &lport_profile, VT_KEY_TYPEf,
                                    TR_VLXLT_HASH_KEY_TYPE_VLAN_MAC);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, VT_KEY_TYPE_2f,
                                    TR_VLXLT_HASH_KEY_TYPE_VLAN_MAC); 
         /* Program MY_MODID for the LPORT entry */
@@ -2298,13 +2331,15 @@ _bcm_tr2_wlan_port_delete(int unit, int
                 (void) _bcm_fb2_outer_tpid_entry_delete(unit, i);
                 break;
             }
         }
     }
     rv = _bcm_lport_profile_entry_delete(unit, lport_ptr);
+#ifndef LVL7_FIXUP
     BCM_IF_ERROR_RETURN(rv);
+#endif
 
     /* Clear the SVP and DVP table entries */
     sal_memset(&svp, 0, sizeof(wlan_svp_table_entry_t));
     rv = WRITE_WLAN_SVP_TABLEm(unit, MEM_BLOCK_ALL, vp, &svp);
     BCM_IF_ERROR_RETURN(rv);
 
@@ -2315,13 +2350,15 @@ _bcm_tr2_wlan_port_delete(int unit, int
     sal_memset(&wlan_dvp, 0, sizeof(egr_wlan_dvp_entry_t));
     rv = WRITE_EGR_WLAN_DVPm(unit, MEM_BLOCK_ALL, vp, &wlan_dvp);
     BCM_IF_ERROR_RETURN(rv);
 
     /* Clear the next-hop table entries */
     rv = _bcm_tr2_wlan_nh_info_delete(unit, nh_index);
+#ifndef LVL7_FIXUP
     BCM_IF_ERROR_RETURN(rv);
+#endif
 
     /* Update the physical port's SW state */
     BCM_IF_ERROR_RETURN(
         _bcm_esw_modid_is_local(unit, WLAN_INFO(unit)->port_info[vp].modid, 
                                 &is_local));
     if (is_local && (WLAN_INFO(unit)->port_info[vp].tgid == -1)) {
@@ -2424,15 +2461,17 @@ bcm_tr2_wlan_port_delete_all(int unit)
             goto done;
         }
         if (soc_WLAN_SVP_TABLEm_field32_get(unit, &svp, VALIDf) != 0) {
             WLAN_LOCK(unit);
             rv = _bcm_tr2_wlan_port_delete(unit, vp);
             WLAN_UNLOCK(unit);
+#ifndef LVL7_FIXUP
             if (rv < 0) {
                 goto done;
             }
+#endif
         }
     }
 done:
     return rv;
 }
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/triumph3/hashing.c esw_sdk_final/src/bcm/esw/triumph3/hashing.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/triumph3/hashing.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/triumph3/hashing.c	2018-01-10 11:53:52.835376000 +0000
@@ -77,14 +77,18 @@ typedef struct bcm_rtag7_base_hash_s {
 } bcm_rtag7_base_hash_t;
 
 #define   ETHERTYPE_IPV6 0x86dd /* ipv6 ethertype */
 #define   ETHERTYPE_IPV4 0x0800 /* ipv4 ethertype */
 #define   ETHERTYPE_MIN  0x0600 /* minimum ethertype for hashing */
 
+#ifndef IP_PROT_TCP
 #define   IP_PROT_TCP 0x6  /* TCP protocol number */
+#endif
+#ifndef IP_PROT_UDP
 #define   IP_PROT_UDP 0x11 /* TCP protocol number */
+#endif
 
 #define RTAG7_L2_ONLY         0x0
 #define RTAG7_UNKNOWN_HIGIG   0x1
 #define RTAG7_MPLS            0x2
 #define RTAG7_MIM             0x3
 #define RTAG7_IPV4            0x4
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/triumph3/oam.c esw_sdk_final/src/bcm/esw/triumph3/oam.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/triumph3/oam.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/triumph3/oam.c	2018-01-10 11:53:52.835376000 +0000
@@ -4469,12 +4469,16 @@ _bcm_tr3_oam_fp_create(int unit, _bcm_oa
         BCM_FIELD_QSET_ADD(oc->fp_glp_qs, bcmFieldQualifyEtherType);
         BCM_FIELD_QSET_ADD(oc->fp_glp_qs, bcmFieldQualifyDstIp6);
         if (soc_feature(unit, soc_feature_mim)) {
             BCM_FIELD_QSET_ADD(oc->fp_glp_qs, bcmFieldQualifyDstMimGport);
             BCM_FIELD_QSET_ADD(oc->fp_glp_qs, bcmFieldQualifySrcMimGport);
         }
+
+        //PTIn added BRCM Support [CASE#782509] 17th June suggestion to avoid packets reaching the board with translated inner VID to trigger LM OAM counters (just proper outer VID ones)
+        BCM_FIELD_QSET_ADD(oc->fp_glp_qs, bcmFieldQualifyVlanTranslationHit);
+
         /* Create fp group */
         rv = bcm_esw_field_group_create(unit, oc->fp_glp_qs, 
                                 BCM_FIELD_GROUP_PRIO_ANY, &(oc->fp_glp_group));
          if (BCM_FAILURE(rv)) {
             LOG_ERROR(BSL_LS_BCM_OAM,
                       (BSL_META_U(unit,
@@ -4566,13 +4570,27 @@ _bcm_tr3_oam_fp_create(int unit, _bcm_oa
             LOG_ERROR(BSL_LS_BCM_OAM,
                       (BSL_META_U(unit,
                                   "OAM Error: Qualifying OuterVlanId (rx), "
                                   "EP=%d %s.\n"), hash_data->ep_id, bcm_errmsg(rv)));
             return (rv);
         }
-        
+     
+        /* PTin added: OAM */   
+#if 1
+        //PTIn added BRCM Support [CASE#782509] 17th June suggestion to avoid packets reaching the board with translated inner VID to trigger LM OAM counters (just proper outer VID ones)
+        rv = bcm_esw_field_qualify_VlanTranslationHit(unit, hash_data->fp_entry_rx, 
+                                BCM_FIELD_VXLT_LOOKUP_STATUS_HIT, BCM_FIELD_VXLT_LOOKUP_STATUS_HIT);
+        if (BCM_FAILURE(rv)) {
+            LOG_ERROR(BSL_LS_BCM_OAM,
+                          (BSL_META_U(unit,
+                                      "OAM(unit %d) Error: Qualifying VlanTranslationHit (rx), \
+                                      EP=%d %s.\n"),
+                           unit, hash_data->ep_id, bcm_errmsg(rv)));
+            return (rv);
+        }
+#endif
         rv = _bcm_esw_gport_resolve(unit, hash_data->gport, &modid, 
                                     &local_port, &tgid, &local_id);
         if (BCM_FAILURE(rv)) {
             LOG_ERROR(BSL_LS_BCM_OAM,
                       (BSL_META_U(unit,
                                   "OAM Error: call to _bcm_esw_gport_resolve "
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/trx/vlan.c esw_sdk_final/src/bcm/esw/trx/vlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/trx/vlan.c	2015-10-21 01:59:49.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/trx/vlan.c	2018-01-10 11:53:52.859376000 +0000
@@ -1459,16 +1459,28 @@ _bcm_trx_vlan_action_profile_init(int un
                            fs_idx = 0;
                        }
                    }
                    if (0 != fs_idx) { /* Recover flex stat counter */
                        sal_memset(&event, 0, sizeof(event));
                        /* Construct key-only entry, copy to FS handle */
-                       soc_EGR_VLAN_XLATEm_field32_set(unit, &event,
-                                                       ENTRY_TYPEf,
-                                soc_EGR_VLAN_XLATEm_field32_get(unit,
-                                             &egr_xlate_entry, ENTRY_TYPEf));
+                    /* PTin modified: Virtual port supported for Helix4 */
+                    if (soc_mem_field_valid(unit, EGR_VLAN_XLATEm, ENTRY_TYPEf)) {
+                      soc_EGR_VLAN_XLATEm_field32_set(unit, &event,
+                                                      ENTRY_TYPEf,
+                               soc_EGR_VLAN_XLATEm_field32_get(unit,
+                                            &egr_xlate_entry, ENTRY_TYPEf));
+                    }
+                    else if (soc_mem_field_valid(unit, EGR_VLAN_XLATEm, KEY_TYPEf)) {
+                      soc_EGR_VLAN_XLATEm_field32_set(unit, &event,
+                                                      KEY_TYPEf,
+                                                      soc_EGR_VLAN_XLATEm_field32_get(unit, &egr_xlate_entry, KEY_TYPEf));
+                    }
+                    else {
+                      return BCM_E_CONFIG;
+                    }
+                    /* PTin end */
                        soc_mem_field_get(unit, EGR_VLAN_XLATEm,
                                          (uint32 *) &egr_xlate_entry,
                                          KEYf, (uint32 *) key);
                        soc_mem_field_set(unit, EGR_VLAN_XLATEm,
                                          (uint32 *) &event,
                                          KEYf, (uint32 *) key);
@@ -7813,14 +7825,25 @@ _bcm_trx_vlan_translate_egress_action_de
 #if defined(BCM_TRIUMPH2_SUPPORT)
         if (soc_feature(unit, soc_feature_gport_service_counters) &&
             (0 != soc_EGR_VLAN_XLATEm_field32_get(unit, vtabp,
                                                   VINTF_CTR_IDXf))) {
             sal_memset(&vent, 0, sizeof(vent));
             /* Construct key-only entry, copy to FS handle */
-            soc_EGR_VLAN_XLATEm_field32_set(unit, &vent, ENTRY_TYPEf,
-                soc_EGR_VLAN_XLATEm_field32_get(unit, vtabp, ENTRY_TYPEf));
+            /* PTin modified: Virtual port supported for Helix4 */
+            if (soc_mem_field_valid(unit, EGR_VLAN_XLATEm, ENTRY_TYPEf)) {
+              soc_EGR_VLAN_XLATEm_field32_set(unit, &vent, ENTRY_TYPEf,
+                  soc_EGR_VLAN_XLATEm_field32_get(unit, vtabp, ENTRY_TYPEf));
+            }
+            else if (soc_mem_field_valid(unit, EGR_VLAN_XLATEm, KEY_TYPEf)) {
+              soc_EGR_VLAN_XLATEm_field32_set(unit, &vent, KEY_TYPEf,
+                  soc_EGR_VLAN_XLATEm_field32_get(unit, vtabp, KEY_TYPEf));
+            }
+            else {
+              return BCM_E_CONFIG;
+            }
+            /* PTin end */
             soc_mem_field_get(unit, EGR_VLAN_XLATEm, (uint32 *) vtabp,
                                KEYf, (uint32 *) key);
             soc_mem_field_set(unit, EGR_VLAN_XLATEm, (uint32 *) &vent,
                                KEYf, (uint32 *) key);
 
             _BCM_FLEX_STAT_HANDLE_CLEAR(handle);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/esw/vlan.c esw_sdk_final/src/bcm/esw/vlan.c
--- sdk-xgs-robo-6.4.8/src/bcm/esw/vlan.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcm/esw/vlan.c	2018-01-10 11:53:52.827376000 +0000
@@ -5863,12 +5863,13 @@ bcm_esw_vlan_translate_egress_action_add
                                           bcm_vlan_action_set_t *action,
                                           int handle_modport_gport)
 {   
     bcm_module_t        modid;
     bcm_trunk_t         tgid = -1;
     int                 id = -1; 
+    int orig_port_class = port_class;
 
     CHECK_INIT(unit);
 #if defined(BCM_TRIDENT2PLUS_SUPPORT) && defined(INCLUDE_L3) 
     if (soc_feature(unit, soc_feature_vp_sharing)) { 
         int num_vfi = 0;
         bcm_vpn_t vpn_min = 0, vpn_max = 0;
@@ -5933,12 +5934,15 @@ bcm_esw_vlan_translate_egress_action_add
             return BCM_E_PORT; 
         }
     }
 
 #ifdef BCM_TRX_SUPPORT
     if (SOC_IS_TRX(unit) && soc_feature(unit, soc_feature_vlan_action)) {
+        if(BCM_GPORT_IS_VLAN_PORT(orig_port_class)) {
+            port_class = orig_port_class;
+        }
         return _bcm_trx_vlan_translate_egress_action_add(unit, port_class, 
                                              outer_vlan, inner_vlan, 
                                              action);
     }
 #endif /* BCM_TRX_SUPPORT */
 
@@ -5963,12 +5967,13 @@ bcm_esw_vlan_translate_egress_action_get
                                           bcm_vlan_action_set_t *action,
                                           int handle_modport_gport)
 {
     bcm_module_t        modid;
     bcm_trunk_t         tgid = -1;
     int                 id = -1; 
+    int orig_port_class = port_class;
 
     CHECK_INIT(unit);
 #if defined(BCM_TRIDENT2PLUS_SUPPORT) && defined(INCLUDE_L3)
     if (soc_feature(unit, soc_feature_vp_sharing)) { 
         int num_vfi = 0;
         bcm_vpn_t vpn_min = 0, vpn_max = 0;
@@ -6032,12 +6037,15 @@ bcm_esw_vlan_translate_egress_action_get
             return BCM_E_PORT; 
         }
     }
 
 #ifdef BCM_TRX_SUPPORT
     if (SOC_IS_TRX(unit) && soc_feature(unit, soc_feature_vlan_action)) {
+        if(BCM_GPORT_IS_VLAN_PORT(orig_port_class)) {
+            port_class = orig_port_class;
+        }
         return _bcm_trx_vlan_translate_egress_action_get(unit, port_class, 
                                                         outer_vlan, inner_vlan, 
                                                         action);
     }
 #endif /* BCM_TRX_SUPPORT */
 
@@ -6060,12 +6068,13 @@ bcm_esw_vlan_translate_egress_action_del
                                              bcm_vlan_t inner_vlan,
                                              int handle_modport_gport)
 {
     bcm_module_t        modid;
     bcm_trunk_t         tgid = -1;
     int                 id = -1; 
+    int orig_port_class = port_class;
 
     CHECK_INIT(unit); 
 #if defined(BCM_TRIDENT2PLUS_SUPPORT) && defined(INCLUDE_L3) 
     if (soc_feature(unit, soc_feature_vp_sharing)) { 
         int num_vfi = 0;
         bcm_vpn_t vpn_min = 0, vpn_max = 0;
@@ -6125,12 +6134,15 @@ bcm_esw_vlan_translate_egress_action_del
             return BCM_E_PORT; 
         }
     }
 
 #ifdef BCM_TRX_SUPPORT
     if (SOC_IS_TRX(unit) && soc_feature(unit, soc_feature_vlan_action)) {
+        if(BCM_GPORT_IS_VLAN_PORT(orig_port_class)) {
+            port_class = orig_port_class;
+        }
         return _bcm_trx_vlan_translate_egress_action_delete(unit, port_class, 
                                                            outer_vlan, 
                                                            inner_vlan);
     }
 #endif /* BCM_TRX_SUPPORT */
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcm/rpc/rpc.c esw_sdk_final/src/bcm/rpc/rpc.c
--- sdk-xgs-robo-6.4.8/src/bcm/rpc/rpc.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcm/rpc/rpc.c	2018-01-10 11:53:52.863376000 +0000
@@ -303,12 +303,22 @@ bcm_rpc_request(int unit, uint8 *buf, in
 
     if (req.rbuf == NULL) {  /* no response buffer */
         /* This request normally would have been unlinked when req.sem
            was given, but if sal_sem_take returns in error then the
            request record needs to be be unlinked here.
         */
+#ifdef LVL7_FIXUP
+      LOG_ERROR(BSL_LS_BCM_COMMON,
+                    (BSL_META("RPC - Timeout to CPU: %x:%x:%x:%x:%x:%x.\n"),
+                     cpu.key[0],
+                     cpu.key[1],
+                     cpu.key[2],
+                     cpu.key[3],
+                     cpu.key[4],
+                     cpu.key[5]));
+#endif
         _bcm_rpc_unlink_request(&req);
         RPC_COUNT(_rpc_count_c_timeout);
         return BCM_E_TIMEOUT;
     }
     *rbuf = req.rbuf;
     *cookie = req.cookie;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcmx/bcmx.c esw_sdk_final/src/bcmx/bcmx.c
--- sdk-xgs-robo-6.4.8/src/bcmx/bcmx.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcmx/bcmx.c	2018-01-10 11:53:52.811376000 +0000
@@ -1857,13 +1857,15 @@ _bcmx_dest_to_bcm(_bcmx_dest_bcmx_t *fro
         to_bcm->mcast = from_bcmx->mcast;
 
     } else if (*flags & BCMX_DEST_TRUNK) {
         /* Check TRUNK flag next */
         flags_out |= BCMX_DEST_TRUNK;
         to_bcm->trunk = from_bcmx->trunk;
-
+#ifdef LVL7_FIXUP
+        to_bcm->module_id = 0;
+#endif
     } else {
         
         if (BCM_GPORT_IS_SET(from_bcmx->port)) {
             /*
              * If GPORT_AWARE flag is set, direct assignment
              * (BCM can handle gport format).
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcmx/custom.c esw_sdk_final/src/bcmx/custom.c
--- sdk-xgs-robo-6.4.8/src/bcmx/custom.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcmx/custom.c	2018-01-10 11:53:52.811376000 +0000
@@ -83,13 +83,23 @@ bcmx_custom_port_set(bcmx_lport_t port,
          * custom routines continue to work.
          */
         if (BCM_FAILURE(_bcmx_dest_to_unit_port(port, &bcm_unit, &bcm_port,
                                                 BCMX_DEST_CONVERT_NON_GPORT))) {
             return BCM_E_PORT;
         }
+#ifdef LVL7_FIXUP
+        rv = bcm_custom_port_set(bcm_unit, bcm_port, type, len, args);
+        if (rv == BCM_E_UNIT)
+        {
+          rv = BCM_E_PORT;    
+        }
+
+        return rv;
+#else
         return bcm_custom_port_set(bcm_unit, bcm_port, type, len, args);
+#endif
     }
 
     /* Virtual port */
     BCMX_UNIT_ITER(bcm_unit, i) {
         tmp_rv = bcm_custom_port_set(bcm_unit, port, type, len, args);
         BCM_IF_ERROR_RETURN
@@ -117,14 +127,25 @@ bcmx_custom_port_get(bcmx_lport_t port,
          * custom routines continue to work.
          */
         if (BCM_FAILURE(_bcmx_dest_to_unit_port(port, &bcm_unit, &bcm_port,
                                                 BCMX_DEST_CONVERT_NON_GPORT))) {
             return BCM_E_PORT;
         }
+#ifdef LVL7_FIXUP
+        rv = bcm_custom_port_get(bcm_unit, bcm_port, type,
+                                 max_len, args, actual_len);
+        if (rv == BCM_E_UNIT)
+        {
+          rv = BCM_E_PORT;    
+        }
+
+        return rv;
+#else
         return bcm_custom_port_get(bcm_unit, bcm_port, type,
                                    max_len, args, actual_len);
+#endif
     }
 
     /* Virtual port */
     BCMX_UNIT_ITER(bcm_unit, i) {
         rv = bcm_custom_port_get(bcm_unit, port, type, max_len, args, actual_len);
         if (BCMX_CUSTOM_GET_IS_VALID(bcm_unit, rv)) {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/bcmx/mcast.c esw_sdk_final/src/bcmx/mcast.c
--- sdk-xgs-robo-6.4.8/src/bcmx/mcast.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/bcmx/mcast.c	2018-01-10 11:53:52.803376000 +0000
@@ -369,17 +369,28 @@ bcmx_mcast_join(bcm_mac_t mac,
 
     BCMX_MCAST_INIT_CHECK;
 
     BCM_IF_ERROR_RETURN
         (_bcmx_dest_to_unit_port(port, &bcm_unit, &bcm_port,
                                  BCMX_DEST_CONVERT_DEFAULT));
+#ifdef LVL7_FIXUP
+
+  /* If we pass NULL then code below will try to dereference
+  ** address 0.
+  */
+  rv = bcm_mcast_join(bcm_unit, mac, vid,
+                        bcm_port,
+                      &bcm_mca ,
+                      &pbmp );
+#else
 
     rv = bcm_mcast_join(bcm_unit, mac, vid,
                         bcm_port,
                         mcaddr ? &bcm_mca : NULL,
                         allrtr ? &pbmp : NULL);
+#endif
     if (BCM_SUCCESS(rv)) {
         if (mcaddr) {
             bcmx_mcast_addr_t_init(mcaddr, mac, vid);
             mcaddr->cos_dst = bcm_mca.cos_dst;
             mcaddr->l2mc_index = bcm_mca.l2mc_index;
             BCMX_LPLIST_PBMP_ADD(&mcaddr->ports, bcm_unit, bcm_mca.pbmp);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/appl/editline/sysunix.c esw_sdk_final/src/sal/appl/editline/sysunix.c
--- sdk-xgs-robo-6.4.8/src/sal/appl/editline/sysunix.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/appl/editline/sysunix.c	2018-01-10 11:53:53.167376000 +0000
@@ -20,21 +20,26 @@
   -1 Default initialize value which can not be 0 or 1. This is neccessary so 
      that when Reset is called the first time with either 0 or 1 that 
      actions will be taken.
   0 put device into raw mode. Disable echo so that editline can control it.
   1 restore device back to mode prior to raw mode.
 */
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
 static int sRESET_CURRENT = -1;
+#endif
 
 #if	defined(HAVE_TCGETATTR)
 #include <termios.h>
 
 void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct termios old;
     struct termios		  new;
 
     if (Reset != sRESET_CURRENT) {
       sRESET_CURRENT = Reset;
       if (Reset == 0) {
@@ -64,22 +69,25 @@ rl_ttyset(Reset)
         }
       } else {
         /* Reset must be 1. */
 	    (void)tcsetattr(0, TCSADRAIN, &old);
       }
     }
+#endif
 }
 
 #else
 #if	defined(HAVE_TERMIO)
 #include <termio.h>
 
 void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct termio old;
     struct termio		 new;
 
     if (Reset != sRESET_CURRENT) {
       sRESET_CURRENT = Reset;
       if (Reset == 0) {
@@ -104,21 +112,24 @@ rl_ttyset(Reset)
 	    new.c_cc[VTIME] = 0;
 	    (void)ioctl(0, TCSETAW, &new);
       } else {
         (void)ioctl(0, TCSETAW, &old);
       }
     }
+#endif
 }
 
 #else
 #include <sgtty.h>
 
 void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct sgttyb	old_sgttyb;
     static struct tchars	old_tchars;
     struct sgttyb		new_sgttyb;
     struct tchars		new_tchars;
 #if	defined(DO_SIGTSTP)
     struct ltchars		old_ltchars;
@@ -154,12 +165,13 @@ rl_ttyset(Reset)
 	    new_tchars.t_quitc = -1;
 	  (void)ioctl(0, TIOCSETC, &new_tchars);
       } else { (void)ioctl(0, TIOCSETP, &old_sgttyb);
         (void)ioctl(0, TIOCSETC, &old_tchars);
       }
     }
+#endif
 }
 #endif	/* defined(HAVE_TERMIO) */
 #endif	/* defined(HAVE_TCGETATTR) */
 
 void
 rl_add_slash(path, p)
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/appl/linux/sal.c esw_sdk_final/src/sal/appl/linux/sal.c
--- sdk-xgs-robo-6.4.8/src/sal/appl/linux/sal.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/appl/linux/sal.c	2018-01-10 11:53:53.167376000 +0000
@@ -45,15 +45,21 @@
  * File: 	sal.c
  * Purpose:	Defines sal routines for Kernel-mode Linux targets.
  */
 
 #include <shared/bsl.h>
 
+#ifdef LVL7_FIXUP
+#include <ctype.h>
+#include <stdlib.h>
+#include "bspapi.h"
+#else
 #include <linux/ctype.h>
 #include <linux/kernel.h>
 #include <linux/random.h>
+#endif
 
 #include <sal/core/time.h>
 #include <sal/core/thread.h>
 #include <sal/core/sync.h>
 #include <sal/core/boot.h>
 #include <sal/core/spl.h>
@@ -239,12 +245,15 @@ sal_appl_init(void)
  *	Not supported for Linux kernel mode.
  */
 
 void
 sal_reboot(void)
 {
+#ifdef LVL7_FIXUP
+  bspapiSwitchReset();
+#endif
 }
 
 /*
  * Function:
  *	sal_shell
  * Purpose:
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/core/linux/thread.c esw_sdk_final/src/sal/core/linux/thread.c
--- sdk-xgs-robo-6.4.8/src/sal/core/linux/thread.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/core/linux/thread.c	2018-01-10 11:53:53.167376000 +0000
@@ -190,13 +190,14 @@ do { \
 #endif
 
 #ifdef LKM_2_6
 #define SCHED_OTHER     SCHED_NORMAL
 #endif
 
-#ifdef MAX_USER_RT_PRIO
+//JORGE
+#if defined (MAX_USER_RT_PRIO) || LINUX_VERSION_CODE >= KERNEL_VERSION(3, 12, 0)
 /* Assume 2.6 scheduler - Some Linux vendors have the 2.6 scheduler in 2.4 (MontaVista)
    This is a way of detecting it.
  */
 #define SET_USER_SCHED(task, prio) \
 do { \
     task->policy = SCHED_OTHER; \
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/core/unix/alloc.c esw_sdk_final/src/sal/core/unix/alloc.c
--- sdk-xgs-robo-6.4.8/src/sal/core/unix/alloc.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/core/unix/alloc.c	2018-01-10 11:53:53.167376000 +0000
@@ -49,12 +49,17 @@
 #include <sys/types.h>
 #include <stdlib.h>
 #include <assert.h>
 
 #include <sal/types.h>
 
+#ifdef LVL7_FIXUP
+#include <soc/cm.h>
+#else
+#endif
+
 #include <sal/core/memlog.h>
 
 #ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
 #include <shared/mem_measure_tool.h>
 #endif
 
@@ -372,15 +377,21 @@ sal_dma_alloc(size_t sz, char *s)
      * Round up size to accommodate corruption detection sentinels.
      * Place sentinels at the beginning and end of the data area to
      * detect memory corruption.  These are verified on free.
      */
     sz = (sz + 3) & ~3;
 
+#if defined(LVL7_FIXUP) && !defined(PLISIM)
+    if ((p = soc_cm_salloc(0,sz + 12 ,s)) == 0) {
+        return p;
+    }
+#else
     if ((p = malloc(sz + 12)) == 0) {
 	return p;
     }
+#endif
 
     assert(INT_TO_PTR(PTR_TO_INT(p)) == p);
 
     p[0] = sz / 4;
     p[1] = 0xaaaaaaaa;
     p[2 + sz / 4] = 0xbbbbbbbb;
@@ -450,14 +461,18 @@ sal_dma_free(void *addr)
 /* } */
 #endif /* BROADCOM_DEBUG */
 
     MEMLOG_FREE("sal_dma_free", ap);
 
     ap[1] = 0;			/* Detect redundant frees */
+#if defined(LVL7_FIXUP) && !defined(PLISIM)
+    soc_cm_sfree(0, ap);
+#else
     /*    coverity[address_free : FALSE]    */
     free(ap);
+#endif
 }
 
 /* } */
 #endif /* LINUX_SAL_DMA_ALLOC_OVERRIDE */
 
 /*
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/core/unix/boot.c esw_sdk_final/src/sal/core/unix/boot.c
--- sdk-xgs-robo-6.4.8/src/sal/core/unix/boot.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/core/unix/boot.c	2018-01-10 11:53:53.167376000 +0000
@@ -57,12 +57,16 @@
 #include <sal/core/libc.h>
 #include <sal/core/boot.h>
 #include <sal/core/spl.h>
 #include <sal/core/dpc.h>
 #include <sal/core/sync.h>
 
+#include <bcm/init.h>
+#include <soc/drv.h>
+#include <bcm/error.h>
+
 #ifdef PLISIM
 #define DEFAULT_BOOT_FLAGS (BOOT_F_PLISIM | BOOT_F_NO_PROBE)
 #else
 #define DEFAULT_BOOT_FLAGS 0
 #endif
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/sal/core/unix/thread.c esw_sdk_final/src/sal/core/unix/thread.c
--- sdk-xgs-robo-6.4.8/src/sal/core/unix/thread.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/sal/core/unix/thread.c	2018-01-10 11:53:53.167376000 +0000
@@ -81,16 +81,18 @@
 #endif
 
 #ifndef SAL_THREAD_RT_PRIO_HIGHEST
 #define SAL_THREAD_RT_PRIO_HIGHEST  90
 #endif
 
+#ifndef LVL7_FIXUP
 static pthread_mutex_t _sal_thread_lock = PTHREAD_MUTEX_INITIALIZER;
 
 #define THREAD_LOCK() pthread_mutex_lock(&_sal_thread_lock)
 #define THREAD_UNLOCK() pthread_mutex_unlock(&_sal_thread_lock)
+#endif
 
 #if defined(BROADCOM_DEBUG) && defined(INCLUDE_BCM_SAL_PROFILE)
 static unsigned int _sal_thread_count_curr;
 static unsigned int _sal_thread_count_max;
 static unsigned int _sal_thread_stack_size_curr;
 static unsigned int _sal_thread_stack_size_max;
@@ -147,12 +149,17 @@ sal_thread_resource_usage_get(unsigned i
 #    define PTHREAD_STACK_MIN PTHREAD_STACK_SIZE
 #  else
 #    define PTHREAD_STACK_MIN 0
 #  endif
 #endif
 
+#ifdef LVL7_FIXUP
+#include <l7_common.h>
+#include <osapi.h>
+#else
+
 /*
  * Function:
  *	thread_boot
  * Purpose:
  *	Entry point for each new thread created
  * Parameters:
@@ -217,12 +224,13 @@ thread_boot(void *ti_void)
     /* Thread function did not call sal_thread_exit() */
     sal_thread_exit(0);
 
     /* Will never get here */
     return NULL;
 }
+#endif /* LVL7_FIXUP */
 
 /*
  * Function:
  *	sal_thread_create
  * Purpose:
  *	Abstraction for task creation
@@ -236,12 +244,22 @@ thread_boot(void *ti_void)
  *	Thread ID
  */
 
 sal_thread_t
 sal_thread_create(char *name, int ss, int prio, void (f)(void *), void *arg)
 {
+#ifdef LVL7_FIXUP
+    L7_int32 salTaskHandle;
+
+    salTaskHandle = osapiTaskCreate(name, f, (L7_uint32) arg,
+                                    L7_NULLPTR, ss,
+                                    L7_DEFAULT_TASK_PRIORITY,
+                                    L7_DEFAULT_TASK_SLICE);
+
+    return (sal_thread_t) salTaskHandle;
+#else
     pthread_attr_t	attribs;
     struct sched_param param;
     thread_info_t	*ti;
     pthread_t		id;
     sal_sem_t           sem;
 
@@ -315,12 +333,13 @@ sal_thread_create(char *name, int ss, in
      * to update thread_info_t and tell us to continue.
      */
     sal_sem_take(sem, sal_sem_FOREVER);
     sal_sem_destroy(sem);
 
     return ((sal_thread_t)id);
+#endif /* LVL7_FIXUP */
 }
 
 /*
  * Function:
  *	sal_thread_destroy
  * Purpose:
@@ -340,12 +359,19 @@ sal_thread_create(char *name, int ss, in
  *	sal_thread_exit().
  */
 
 int
 sal_thread_destroy(sal_thread_t thread)
 {
+#ifdef LVL7_FIXUP
+    L7_int32 salTaskHandle = (L7_int32) thread;
+
+    osapiTaskDelete(salTaskHandle);
+
+    return 0;
+#else
 #ifdef netbsd
     /* not supported */
     return -1;
 #else
     thread_info_t	*ti, **tp;
     pthread_t		id = (pthread_t) thread;
@@ -377,12 +403,13 @@ sal_thread_destroy(sal_thread_t thread)
         }
         free(ti);
     }
 
     return 0;
 #endif
+#endif /* LVL7_FIXUP */
 }
 
 /*
  * Function:
  *	sal_thread_self
  * Purpose:
@@ -393,13 +420,17 @@ sal_thread_destroy(sal_thread_t thread)
  *	Thread ID
  */
 
 sal_thread_t
 sal_thread_self(void)
 {
+#ifdef LVL7_FIXUP
+    return (sal_thread_t) osapiTaskIdSelf();
+#else
     return (sal_thread_t) pthread_self();
+#endif /* LVL7_FIXUP */
 }
 
 /*
  * Function:
  *	sal_thread_name
  * Purpose:
@@ -410,15 +441,25 @@ sal_thread_self(void)
  *		gets empty string if not available
  *	thread_name_size - maximum size of buffer
  * Returns:
  *	NULL, if name not available
  *	thread_name, if name available
  */
+#ifdef LVL7_FIXUP
+extern pthread_key_t osapi_name_key;
+#endif /* LVL7_FIXUP */
 char *
 sal_thread_name(sal_thread_t thread, char *thread_name, int thread_name_size)
 {
+#ifdef LVL7_FIXUP
+    char *task_name;
+
+    task_name = (char *) pthread_getspecific(osapi_name_key);
+    strncpy(thread_name, task_name, thread_name_size);
+    return thread_name;
+#else
     thread_info_t	*ti;
     char                *name;
 
     name = NULL;
 
     THREAD_LOCK();
@@ -434,12 +475,13 @@ sal_thread_name(sal_thread_t thread, cha
 
     if (name == NULL) {
         thread_name[0] = 0;
     }
 
     return name;
+#endif /* LVL7_FIXUP */
 }
 
 /*
  * Function:
  *	sal_thread_exit
  * Purpose:
@@ -450,12 +492,20 @@ sal_thread_name(sal_thread_t thread, cha
  *	Never returns.
  */
 
 void
 sal_thread_exit(int rc)
 {
+#ifdef LVL7_FIXUP
+  L7_int32 salTaskHandler = osapiTaskIdSelf();
+
+  osapiTaskDelete(salTaskHandler);
+
+  return;
+
+#else
     thread_info_t	*ti, **tp;
     pthread_t		id = pthread_self();
 
     ti = NULL;
 
     THREAD_LOCK();
@@ -478,12 +528,13 @@ sal_thread_exit(int rc)
             free(ti->name);
         }
         free(ti);
     }
 
     pthread_exit(INT_TO_PTR(rc));
+#endif /* LVL7_FIXUP */
 }
 
 /*
  * Function:
  *	sal_thread_yield
  * Purpose:
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/shared/bsl.c esw_sdk_final/src/shared/bsl.c
--- sdk-xgs-robo-6.4.8/src/shared/bsl.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/shared/bsl.c	2018-01-10 11:53:52.811376000 +0000
@@ -69,12 +69,21 @@ bsl_init(bsl_config_t *config)
 void
 bsl_config_t_init(bsl_config_t *config)
 {
     sal_memset(config, 0, sizeof(*config));
 }
 
+/* PTin added: LOG */
+int
+bsl_vectors_get(bsl_config_t * dst)
+{
+    *dst = bsl_config;
+    return 0;
+}
+
+
 /* "Fast" checker function */
 int
 bsl_fast_check(uint32 chk)
 {
     if (bsl_config.check_hook != NULL) {
         return bsl_config.check_hook(chk);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/common/cm.c esw_sdk_final/src/soc/common/cm.c
--- sdk-xgs-robo-6.4.8/src/soc/common/cm.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/soc/common/cm.c	2018-01-10 11:53:53.131376000 +0000
@@ -70,12 +70,15 @@
 #ifdef BCM_DFE_SUPPORT
 #include <soc/dfe/cmn/dfe_drv.h>
 #endif
 
 #include <sal/core/memlog.h>
 
+/* PTin added: logger */
+#include "logger.h"
+
 #if defined(BCM_ESW_SUPPORT) || defined(BCM_PETRA_SUPPORT) || defined(BCM_DFE_SUPPORT)
 #define IHOST_S0_ADDR_START 0x19000000
 #define IHOST_S0_ADDR_END  0x1901FFFF
 #define IHOST_ACP_ADDR_START 0x19020000
 #define IHOST_ACP_ADDR_END  0x19022FFF
 
@@ -6596,12 +6599,17 @@ soc_cm_salloc(int dev, int size, const c
 #ifdef BROADCOM_DEBUG
     if (soc_property_get(dev, "dma_mem_debug_enable", 0)) {
         shared_block_t  *p = NULL;
         uint32             size_words = (size + 3) / 4;
         uint32             modified_size = 0;
 
+        if (name == NULL || name[0] == 0)
+        {
+          PT_LOG_FATAL(LOG_CTX_SDK,"XXXXXX - SEGMENTATION FAULT - XXXXXX");
+        }
+
         assert(name != NULL);        /* Don't pass NULLs in here! */
         assert(name[0] != 0);        /* Don't pass empty strings in here! */
 
         modified_size = sizeof (shared_block_t) + (size_words * 4);
         p = CMVEC(dev).salloc(&CMDEV(dev).dev, modified_size, name);
 
@@ -6670,12 +6678,17 @@ soc_cm_sfree(int dev, void *ptr)
         int            size_words = 0;
         */
 
         p = (shared_block_t *) (((char*)ptr) -
         ( (((char*)&(((shared_block_t*)0)->user_data[0]))) - ((char*)(shared_block_t*)0) ));
 
+        if (p == NULL)
+        {
+          PT_LOG_FATAL(LOG_CTX_SDK,"XXXXXX - SEGMENTATION FAULT - XXXXXX");
+        }
+
         assert(SHARED_GOOD_START(p));
         assert(SHARED_GOOD_END(p));
         /*
         size_words = (p->size + 3) / 4;
         LOG_VERBOSE(BSL_LS_SOC_MEM,
                 (BSL_META("Freeing Start:%x: Desc:%s: Size:%d: 
@@ -6687,12 +6700,16 @@ soc_cm_sfree(int dev, void *ptr)
         if (p == head) {
             head = p->next;
             if (head != NULL) {
                 head->prev = NULL;
             }
         } else {
+            if (p->prev == NULL)
+            {
+              PT_LOG_FATAL(LOG_CTX_SDK,"XXXXXX - SEGMENTATION FAULT - XXXXXX");
+            }
             p->prev->next = p->next;
             if (p->next != NULL) {
                 p->next->prev = p->prev;
             }
         }
         CM_DB_UNLOCK();
@@ -6823,12 +6840,19 @@ soc_cm_sflush(int dev, void *addr, int l
  * Returns:     SOC_E_XXX
  */
 
 int
 soc_cm_sinval(int dev, void *addr, int length)
 {
+#if defined(LVL7_FIXUP) && defined(LVL7_DNI8541)
+/* The cache doesn't need to be synced on the PPC85XX processor. 
+** Invoking the function causes a crash on the PPC85XX devices.
+*/
+    return SOC_E_NONE;
+#endif	
+
     if (CMVEC(dev).sinval) {
         return CMVEC(dev).sinval(&CMDEV(dev).dev, addr, length);
     }
 
     return SOC_E_NONE;
 }
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/common/dma.c esw_sdk_final/src/soc/common/dma.c
--- sdk-xgs-robo-6.4.8/src/soc/common/dma.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/soc/common/dma.c	2018-01-10 11:53:53.127376000 +0000
@@ -96,12 +96,16 @@
 #endif
 
 #ifdef INCLUDE_KNET
 #include <soc/knet.h>
 #endif
 
+/* PTin added */
+#include "logger.h"
+#include "unistd.h"
+
 #ifdef BCM_CMIC_SUPPORT
 
 #define DV_MAGIC_NUMBER 0xba5eba11
 
 #define DMA_CHAIN_DONE_TIMEOUT_USEC         (4000)
 #define DMA_CHAIN_DONE_INTERVAL_USEC        (1000)
@@ -1769,13 +1773,32 @@ soc_dma_done_chain(int unit, uint32 chan
      */
 
     cmic_drv[unit].chan_chain_done(unit, vchan, sdc_mtg->mitigation_started);
 
     soc_dma_start_channel(unit, sc);
 
-    soc_dma_process_done_desc(unit, dv_chain, dv_active);
+    /* PTIn added: By calling this multiple times it should force a cache flush. */
+    int i = 0;
+    do
+    {
+      soc_dma_process_done_desc(unit, dv_chain, dv_active);
+
+      /* Wait 1 millisecond, if process not completed */
+      if (dv_chain->dv_dcnt != dv_chain->dv_vcnt)
+        usleep(10000);
+    } while ((dv_chain->dv_dcnt != dv_chain->dv_vcnt) && ((++i) < 100));
+
+    /* PTin added: print assert info */
+    if (dv_chain->dv_dcnt != dv_chain->dv_vcnt)
+    {
+      PT_LOG_ERR(LOG_CTX_SDK, "dv_chain->dv_dcnt=%d, dv_chain->dv_vcnt=%d", dv_chain->dv_dcnt, dv_chain->dv_vcnt);
+    }
+    else if (i > 0)
+    {
+      PT_LOG_WARN(LOG_CTX_SDK, "%u tries to achieve dv_chain->dv_dcnt (%d) == dv_chain->dv_vcnt (%d)", i, dv_chain->dv_dcnt, dv_chain->dv_vcnt);
+    }
 
     assert(dv_chain->dv_dcnt == dv_chain->dv_vcnt); 
 
     if (dv_chain->dv_flags & DV_F_NOTIFY_CHN) {
         if (dv_chain->dv_done_chain == NULL) {
             LOG_WARN(BSL_LS_SOC_DMA,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/common/feature.c esw_sdk_final/src/soc/common/feature.c
--- sdk-xgs-robo-6.4.8/src/soc/common/feature.c	2015-10-21 01:59:50.000000000 +0100
+++ esw_sdk_final/src/soc/common/feature.c	2018-01-10 11:53:53.127376000 +0000
@@ -928,12 +928,13 @@ soc_features_bcm56634_a0(int unit, soc_f
     case soc_feature_color_prio_map_profile:
     case soc_feature_vlan_vp:
     case soc_feature_mem_cache:
     case soc_feature_ipmc_remap:
     case soc_feature_proxy_port_property:
     case soc_feature_udf_support:
+    case soc_feature_regs_as_mem:
     case soc_feature_hg_proxy_module_config:
         return TRUE;
     case soc_feature_led_data_offset_a0:
         /*All chips of Trident and Trident+ have no this feature */
         if(((dev_id >= BCM56840_DEVICE_ID) && (dev_id <= BCM56849_DEVICE_ID)) ||
             (dev_id == BCM56549_DEVICE_ID) ||
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/common/mem.c esw_sdk_final/src/soc/common/mem.c
--- sdk-xgs-robo-6.4.8/src/soc/common/mem.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/common/mem.c	2018-01-10 11:53:53.127376000 +0000
@@ -16652,19 +16652,31 @@ _soc_mem_dual_hash_insert(int unit,
         if (hash_info.hash_sel0 == hash_info.hash_sel1) {
             /* Can't juggle the entries */
             return SOC_E_FULL;
         }
         hash_info.bucket_size = SOC_L2X_BUCKET_SIZE;
         hash_info.base_mem = mem;
+#ifdef LVL7_FIXUP
+       /* soc_l2x_freeze/thaw routine are very costly as they try to disable
+        * learning on all Physical and VPs. In cases where we are continously
+        * running into hash collision, freeze/thaw ends up taking a lot of 
+        * cpu time un-neccessarily as we have not enabled software dual-hash
+        * move by default. */
+       if (recurse_depth > 0)
+       {
+#endif
 
         /* Time to shuffle the entries */
         SOC_IF_ERROR_RETURN(soc_l2x_freeze(unit));
         rv = _soc_mem_dual_hash_move(unit, mem, SOC_MEM_HASH_BANK_BOTH,
                                      copyno, entry_data, &hash_info,
                                      NULL, recurse_depth - 1,0);
         SOC_IF_ERROR_RETURN(soc_l2x_thaw(unit));
+#ifdef LVL7_FIXUP
+       }
+#endif
         return rv;
 #if defined(BCM_TRIUMPH_SUPPORT)
 #endif /* BCM_TRIUMPH_SUPPORT */
 #ifdef BCM_TRX_SUPPORT
     case VLAN_XLATEm:
         if (!SOC_IS_TRX(unit)) {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/common/reg.c esw_sdk_final/src/soc/common/reg.c
--- sdk-xgs-robo-6.4.8/src/soc/common/reg.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/common/reg.c	2018-01-10 11:53:53.131376000 +0000
@@ -48,12 +48,15 @@
 
 #include <shared/bsl.h>
 
 #include <sal/core/libc.h>
 #include <sal/core/boot.h>
 
+/* PTin added */
+#include "logger.h"
+
 #include <soc/debug.h>
 #include <soc/cm.h>
 #include <soc/drv.h>
 #include <soc/error.h>
 #include <soc/cmic.h>
 #include <soc/register.h>
@@ -3402,13 +3405,13 @@ soc_reg_addr(int unit, soc_reg_t reg, in
     uint32            base;   /* base address from reg_info */
     int               block = -1;  /* block number */
     int               pindex = -1; /* register port/cos field */
     int               gransh; /* index granularity shift */
     soc_block_types_t regblktype;
     soc_block_t       portblktype;
-    int               phy_port;
+    int               phy_port = -1;
     int               instance_mask = 0;
      
     if (!SOC_REG_IS_VALID(unit, reg)) {
 #if !defined(SOC_NO_NAMES)
         LOG_CLI((BSL_META_U(unit,
                             "reg %s is invalid\n"), soc_reg_name[reg]));
@@ -3416,12 +3419,18 @@ soc_reg_addr(int unit, soc_reg_t reg, in
      
     if (!SOC_REG_IS_VALID(unit, reg)) {
 #if !defined(SOC_NO_NAMES)
         LOG_CLI((BSL_META_U(unit,
                             "reg %s is invalid\n"), soc_reg_name[reg]));
 #endif
+        /* PTin added */
+        if (!SOC_REG_IS_VALID(unit, reg))
+        {
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(SOC_REG_IS_VALID(unit,reg)): unit=%d port=%d reg=%d index=%d SOC_REG_IS_VALID=%d",
+                        unit, port, reg, index, SOC_REG_IS_VALID(unit,reg));
+        }
         assert(SOC_REG_IS_VALID(unit, reg));
     }
 
 #define SOC_REG_ADDR_INVALID_PORT 0 /* for asserts */
 
 
@@ -3442,12 +3451,18 @@ soc_reg_addr(int unit, soc_reg_t reg, in
     }
     
 
     if(!instance_mask) {
         if (port >= 0) {
             if (SOC_BLOCK_IN_LIST(regblktype, portblktype)) {
+                /* PTin added */
+                if (!SOC_PORT_VALID(unit, port))
+                {
+                  PT_LOG_CRITIC(LOG_CTX_SDK, "assert(SOC_PORT_VALID(unit,port)): unit=%d port=%d reg=%d index=%d SOC_PORT_VALID=%d",
+                                unit, port, reg, index, SOC_PORT_VALID(unit,port));
+                }
                 assert(SOC_PORT_VALID(unit, port));
                 if (soc_feature(unit, soc_feature_logical_port_num)) {
                     /*
                      * COVERITY
                      *
                      * assert validates the port
@@ -3484,12 +3499,15 @@ soc_reg_addr(int unit, soc_reg_t reg, in
                         block = -1;
                     } else { /* match any port */
                         break;
                     }
                 }
                 if (block < 0) {
+                    /* PTin added */
+                    PT_LOG_CRITIC(LOG_CTX_SDK, "port=%d reg=%d index=%d phy_port=%d block=%d pindex=%d portblktype=%d regblktype=%d SOC_BLOCK_IN_LIST=%d",
+                                  port, reg, index, phy_port, block, pindex, portblktype, regblktype, SOC_BLOCK_IN_LIST(regblktype,portblktype));
                     assert(SOC_REG_ADDR_INVALID_PORT); /* invalid port */
                 }
             }
         } else {
         port &= ~SOC_REG_ADDR_INSTANCE_MASK;
         block = pindex = -1;
@@ -3505,12 +3523,13 @@ soc_reg_addr(int unit, soc_reg_t reg, in
                 break;
             case SOC_BLK_BP:
                 block = BP_BLOCK(unit);
                 break;
             case SOC_BLK_CI:
                 if (port >= 10) {
+                    PT_LOG_CRITIC(LOG_CTX_SDK, "assert(SOC_REG_ADDR_INVALID_PORT): unit=%d port=%d reg=%d index=%d", unit, port, reg, index);
                     assert(SOC_REG_ADDR_INVALID_PORT); /* invalid port */
                 } else {
                     block = CI_BLOCK(unit, port);
                 }
                 break;
             case SOC_BLK_CS:
@@ -3566,12 +3585,15 @@ soc_reg_addr(int unit, soc_reg_t reg, in
                 break;
             case SOC_BLK_OTPC:
                 block = OTPC_BLOCK(unit);
                 break;
             default:
                 block = -1; /* unknown non-port block */
+                /* PTin added */
+                PT_LOG_CRITIC(LOG_CTX_SDK, "{port=%d reg=%d index=%d} {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                              port, reg, index, phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype)); 
                 break;
             }
         }
     } else {
 #endif
 
@@ -3642,12 +3664,13 @@ soc_reg_addr(int unit, soc_reg_t reg, in
                 break;
             case SOC_BLK_CES:
                 block = CES_BLOCK(unit);
                 break;
             case SOC_BLK_CI:
                 if (port >= 3) {
+                    PT_LOG_CRITIC(LOG_CTX_SDK, "assert(SOC_REG_ADDR_INVALID_PORT): unit=%d port=%d reg=%d index=%d", unit, port, reg, index);
                     assert(SOC_REG_ADDR_INVALID_PORT); /* invalid instance */
                 } else {
                     block = CI_BLOCK(unit, port);
                 }
                 break;
             case SOC_BLK_IL:
@@ -3784,19 +3807,30 @@ soc_reg_addr(int unit, soc_reg_t reg, in
                 break;
             case SOC_BLK_NIF:
                 block = NIF_BLOCK(unit);
                 break;
             default:
                     block = -1; /* unknown non-port block */
+                    /* PTin added */
+                    PT_LOG_CRITIC(LOG_CTX_SDK, "port=%d reg=%d index=%d instance_mask=0x%x", port, reg, index, instance_mask);
+                    PT_LOG_CRITIC(LOG_CTX_SDK, "{phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                                  phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
                     break;
             }
         }
 #ifdef  BCM_SIRIUS_SUPPORT
     }
 #endif
 
+    /* PTin added: sometimes this application crash here! */
+    if (block < 0)
+    {
+      PT_LOG_CRITIC(LOG_CTX_SDK, "assert(block>=0): port=%d reg=%d index=%d instance_mask=0x%x", port, reg, index, instance_mask);
+      PT_LOG_CRITIC(LOG_CTX_SDK, "assert(block>=0): {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                    phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
+    }
     assert(block >= 0); /* block must be valid */
 
     /* determine final block, pindex, and index */
     gransh = 0;
     switch (SOC_REG_INFO(unit, reg).regtype) {
     case soc_cpureg:
@@ -3830,21 +3864,34 @@ soc_reg_addr(int unit, soc_reg_t reg, in
             } else {
                 pindex = port;
             }
         }
         break;
     case soc_cosreg:
+        /* PTin added */
+        if (index < 0 || index >= NUM_COS(unit))
+        {
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): unit=%d port=%d reg=%d index=%d NUM_COS=%d SOC_REG_INFO(unit,reg).regtype=%d instance_mask=0x%x",
+                        unit, port, reg, index, NUM_COS(unit), SOC_REG_INFO(unit,reg).regtype, instance_mask);
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                        phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
+        }
         assert(index >= 0 && index < NUM_COS(unit));
         pindex = index;
         index = 0;
         break;
     case soc_customreg:
     case soc_genreg:
         pindex = 0;
         break;
     default:
+        /* PTin added */
+        PT_LOG_CRITIC(LOG_CTX_SDK, "assert(0): unit=%d port=%d reg=%d index=%d NUM_COS=%d SOC_REG_INFO.regtype=%d instance_mask=0x%x",
+                      unit, port, reg, index, NUM_COS(unit), SOC_REG_INFO(unit,reg).regtype, instance_mask);
+        PT_LOG_CRITIC(LOG_CTX_SDK, "assert(0): {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                      phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
         assert(0); /* unknown register type */
         break;
     }
 
     /* put together address: base|block|pindex + index */
     base = SOC_REG_INFO(unit, reg).offset;
@@ -3860,22 +3907,38 @@ soc_reg_addr(int unit, soc_reg_t reg, in
     
     if (pindex) {
         base |= pindex << SOC_REGIDX_BP;
     }
     
     if (SOC_REG_IS_ARRAY(unit, reg)) {
+        /* PTin added */
+        if (index < 0 || index > SOC_REG_NUMELS(unit, reg))
+        {
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): unit=%d port=%d reg=%d index=%d SOC_REG_NUMELS=%d SOC_REG_INFO.regtype=%d instance_mask=0x%x",
+                        unit, port, reg, index, SOC_REG_NUMELS(unit,reg), SOC_REG_INFO(unit,reg).regtype, instance_mask);
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                        phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
+        }
         assert(index >= 0 && index < SOC_REG_NUMELS(unit, reg));
 #if defined(BCM_SABER2_SUPPORT)
         if (SOC_IS_SABER2(unit) && block == OAMP_BLOCK(unit)) {
             base += index*(SOC_REG_ELEM_SKIP(unit, reg) << 8);
         } else
 #endif
         {
         base += index*SOC_REG_ELEM_SKIP(unit, reg);
         }
     } else if (index && SOC_REG_ARRAY(unit, reg)) {
+        /* PTin added */
+        if (index < 0 || index > SOC_REG_NUMELS(unit, reg))
+        {
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): unit=%d port=%d reg=%d index=%d SOC_REG_NUMELS=%d SOC_REG_INFO.regtype=%d instance_mask=0x%x",
+                        unit, port, reg, index, SOC_REG_NUMELS(unit,reg), SOC_REG_INFO(unit,reg).regtype, instance_mask);
+          PT_LOG_CRITIC(LOG_CTX_SDK, "assert(...): {phy_port=%d block=%d pindex=%d} portblktype=%d regblktype=%d REG_FIRST_BLK_TYPE=%d SOC_BLOCK_IN_LIST=%d",
+                        phy_port, block, pindex, portblktype, regblktype, REG_FIRST_BLK_TYPE(regblktype), SOC_BLOCK_IN_LIST(regblktype,portblktype));
+        }
         assert(index >= 0 && index < SOC_REG_NUMELS(unit, reg));
         if (index && SOC_REG_ARRAY2(unit, reg)) {
             base += ((index*2) << gransh);
         } else if (index && SOC_REG_ARRAY4(unit, reg)) {
             base += ((index * 4) << gransh);
         } else {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/esw/drv.c esw_sdk_final/src/soc/esw/drv.c
--- sdk-xgs-robo-6.4.8/src/soc/esw/drv.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/esw/drv.c	2018-01-10 11:53:53.115376000 +0000
@@ -146,12 +146,15 @@
 #include <soc/knet.h>
 #endif
 #include <soc/esw/portctrl.h>
 #include <soc/bondoptions.h>
 #include <bcm_int/esw/subport.h>
 
+/* PTin added: PCIe */
+#include "logger.h"
+
 #ifdef BCM_KATANA_SUPPORT
 #define   BCM_SABER_MAX_COUNTER_DIRECTION 2
 #define   BCM_SABER_MAX_COUNTER_POOL      8
 #endif
 extern int _bcm_esw_ibod_sync_recovery_stop(int unit);
 
@@ -6687,12 +6714,13 @@ soc_do_init(int unit, int reset)
 #ifdef BCM_IPROC_SUPPORT
             if (soc_feature(unit, soc_feature_iproc)) {
                 SOC_IF_ERROR_RETURN(iproc_pcie_cdr_bw_adj(unit, pcie_phy_addr));
             } else
 #endif
             {
+                PT_LOG_INFO(LOG_CTX_SDK, "Going to make PCIe bw adjustment...");
                 SOC_IF_ERROR_RETURN(cmic_pcie_cdr_bw_adj(unit, pcie_phy_addr));
             }
         }
 
         /*********************************************************************/
         /* Check to see if the PCIe SerDes deemphasis needs to be changed    */
@@ -7062,12 +7090,27 @@ soc_do_init(int unit, int reset)
             if (mem == L3_DEFIP_128m) {
                 SOC_MEM_INFO(unit, mem).flags |= SOC_MEM_FLAG_CACHABLE;
                 SOC_MEM_INFO(unit, mem).flags |= SOC_MEM_FLAG_SER_CACHE_RESTORE; 
             }   
         }
 #endif /* BCM_TRIUMPH_SUPPORT */
+#if defined(BCM_TRIUMPH2_SUPPORT)
+        if (SOC_IS_TRIUMPH2(unit) || SOC_IS_VALKYRIE2(unit)) {
+            if (mem == MMU_WRED_THD_0_CELLm ||
+                mem == MMU_WRED_THD_1_CELLm ||
+                mem == MMU_WRED_THD_0_PACKETm ||
+                mem == MMU_WRED_THD_1_PACKETm ||
+                mem == MMU_WRED_PORT_THD_0_CELLm ||
+                mem == MMU_WRED_PORT_THD_1_CELLm ||
+                mem == MMU_WRED_PORT_THD_0_PACKETm ||
+                mem == MMU_WRED_PORT_THD_1_PACKETm ) {
+                SOC_MEM_INFO(unit, mem).flags |= SOC_MEM_FLAG_CACHABLE;
+                SOC_MEM_INFO(unit, mem).flags |= SOC_MEM_FLAG_SER_CACHE_RESTORE;
+            }
+        }
+#endif /* BCM_TRIUMPH2_SUPPORT */
 #if defined(BCM_SCORPION_SUPPORT)
         if (SOC_IS_SCORPION(unit)) {
             if (mem == MMU_WRED_THD_0_CELLm ||
                 mem == MMU_WRED_THD_1_CELLm ||
                 mem == MMU_WRED_PORT_THD_0_CELLm ||
                 mem == MMU_WRED_PORT_THD_1_CELLm) {
@@ -14068,12 +14111,14 @@ soc_reset(int unit)
              * to prevent invalid MSI messages from corrupting host
              * CPU memory.
              */
             msi_en = 0;
         }
 
+        PT_LOG_NOTICE(LOG_CTX_SDK, "MSI enable=%d", msi_en);
+
         addr = CMIC_CMCx_PCIE_MISCEL_OFFSET(SOC_PCI_CMC(unit));
         rval = soc_pci_read(unit, addr);
 
         soc_reg_field_set(unit, CMIC_CMC0_PCIE_MISCELr,
                             &rval, ENABLE_MSIf, msi_en);
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/esw/hash.c esw_sdk_final/src/soc/esw/hash.c
--- sdk-xgs-robo-6.4.8/src/soc/esw/hash.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/esw/hash.c	2018-01-10 11:53:53.119376000 +0000
@@ -1392,12 +1392,47 @@ _soc_tr_l2x_dcc_entry_to_key(int unit, u
         INVALIDf
     };
 
     return _soc_hash_generic_entry_to_key(unit, entry, key, L2Xm, field_list);
 }
 
+#ifdef LVL7_FIXUP
+static int
+_soc_tr2_l2x_scc_entry_to_key(int unit, uint32 *e, uint8 *key)
+{
+    int ovid, key_type = 1;
+
+    /* Key type 0x1 (SINGLE_CROSS_CONNECT) Key = {OVID} */
+    ovid = soc_L2Xm_field32_get(unit, e, OVIDf);
+
+    /* key[0] has 2 bits of padding of byte alignment */
+    key[0] = ((ovid << 4) & 0xf0) | ((key_type << 2) & 0x0c);
+    key[1] = (ovid >> 4) & 0xff;
+
+    return (64);
+}
+
+static int
+_soc_tr2_l2x_dcc_entry_to_key(int unit, uint32 *e, uint8 *key)
+{
+    int ivid, ovid, key_type = 2;
+
+    /* Key type 0x2 (DOUBLE_CROSS_CONNECT) Key = {OVID, IVOD} */
+    ovid = soc_L2Xm_field32_get(unit, e, OVIDf);
+    ivid = soc_L2Xm_field32_get(unit, e, IVIDf);
+
+    /* key[0] has 2 bits of padding of byte alignment */
+    key[0] = ((key_type << 2)& 0xc) | ((ovid << 4) & 0xf0);
+    key[1] = ((ovid >> 4) & 0xff); 
+    key[2] = (ivid & 0xff);
+    key[3] = ((ivid >> 8) & 0xf);
+
+    return (64);
+}
+#endif
+
 STATIC int
 _soc_tr_l2x_vfi_entry_to_key(int unit, uint32 *entry, uint8 *key)
 {
     static soc_field_t field_list[] = {
         KEY_TYPEf,
         VLAN_IDf,  /* padded from VFIf */
@@ -1538,15 +1573,33 @@ if (SOC_IS_GREYHOUND(unit)) {
 #endif
   {
     switch (soc_mem_field32_get(unit, L2Xm, entry, KEY_TYPEf)) {
     case TR_L2_HASH_KEY_TYPE_BRIDGE:
         return _soc_tr_l2x_bridge_entry_to_key(unit, entry, key);
     case TR_L2_HASH_KEY_TYPE_SINGLE_CROSS_CONNECT:
+#ifndef LVL7_FIXUP
         return _soc_tr_l2x_scc_entry_to_key(unit, entry, key);
+#else
+            if (SOC_IS_TRIUMPH2(unit) || SOC_IS_APOLLO(unit)/* || SOC_IS_VALKYRIE2(unit)*/) {    /* PTin modified */
+                return _soc_tr2_l2x_scc_entry_to_key(unit, entry, key);
+            }
+            else {
+                return _soc_tr_l2x_scc_entry_to_key(unit, entry, key);
+            }
+#endif
     case TR_L2_HASH_KEY_TYPE_DOUBLE_CROSS_CONNECT:
+#ifndef LVL7_FIXUP
         return _soc_tr_l2x_dcc_entry_to_key(unit, entry, key);
+#else
+            if (SOC_IS_TRIUMPH2(unit) || SOC_IS_APOLLO(unit)/* || SOC_IS_VALKYRIE2(unit)*/) {    /* PTin modified */
+                return _soc_tr2_l2x_dcc_entry_to_key(unit, entry, key);
+            }
+            else {
+                return _soc_tr_l2x_dcc_entry_to_key(unit, entry, key);
+            }
+#endif
     case TR_L2_HASH_KEY_TYPE_VFI:
         return _soc_tr_l2x_vfi_entry_to_key(unit, entry, key);
 #ifdef BCM_TRIDENT_SUPPORT
     case TR_L2_HASH_KEY_TYPE_VIF:
         if (!soc_feature(unit, soc_feature_niv)) {
             return 0;
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/esw/l2xmsg.c esw_sdk_final/src/soc/esw/l2xmsg.c
--- sdk-xgs-robo-6.4.8/src/soc/esw/l2xmsg.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/esw/l2xmsg.c	2018-01-10 11:53:53.127376000 +0000
@@ -1397,12 +1397,20 @@ _soc_l2x_thread(void *unit_vp)
 
         sal_sem_take(soc->l2x_notify, interval / chunk_count);
     }
 
 cleanup_exit:
 
+#ifdef LVL7_FIXUP
+    /* 
+     * Allow the thread to be terminated by soc_l2x_stop, but not due to errors 
+     * Reset the box if it fails for any reason
+     */
+    assert(soc->l2x_interval == 0); /* PTin TODO: unknown reason for a single DMA access error during boot-up */
+#endif
+
     (void)sal_sem_take(soc->l2x_lock, sal_sem_FOREVER);
 
     if (chunk_buf != NULL) {
         soc_cm_sfree(unit, chunk_buf);
         l2x_data[unit].chunk_buf = NULL;
     }
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/esw/trident.c esw_sdk_final/src/soc/esw/trident.c
--- sdk-xgs-robo-6.4.8/src/soc/esw/trident.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/esw/trident.c	2018-01-10 11:53:53.119376000 +0000
@@ -8017,13 +8017,13 @@ _soc_trident_misc_init(int unit)
      * Set external MDIO freq to 6.19MHz (495MHz) or 5.19MHz (415MHz)
      * target_freq = core_clock_freq * DIVIDEND / DIVISOR / 2
      */
     divisor = soc_property_get(unit, spn_RATE_EXT_MDIO_DIVISOR, 40);
     dividend = soc_property_get(unit, spn_RATE_EXT_MDIO_DIVIDEND, 1);
     rval = 0;
-    soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVISORf, divisor);
+    soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVISORf, divisor*2); /* PTin changed: LTX patch */
     soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVIDENDf, dividend);
     /* coverity[result_independent_of_operands] */
     SOC_IF_ERROR_RETURN(WRITE_CMIC_RATE_ADJUSTr(unit, rval));
 
     /*
      * Set internal MDIO freq to 16.5MHz (495MHz) or 13.83MHz (415MHz)
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/esw/triumph2.c esw_sdk_final/src/soc/esw/triumph2.c
--- sdk-xgs-robo-6.4.8/src/soc/esw/triumph2.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/esw/triumph2.c	2018-01-10 11:53:53.115376000 +0000
@@ -84,12 +84,13 @@ typedef enum {
     _SOC_PARITY_INFO_TYPE_SINGLE_ECC,
     _SOC_PARITY_INFO_TYPE_SINGLE_COUNTER,
     _SOC_PARITY_INFO_TYPE_DUAL_PARITY,
     _SOC_PARITY_INFO_TYPE_MMU_PARITY,
     _SOC_PARITY_INFO_TYPE_MMUIPMC,
     _SOC_PARITY_INFO_TYPE_MMUWRED,
+    _SOC_PARITY_INFO_TYPE_MMUMTRO,
     _SOC_PARITY_INFO_TYPE_OAM, /* Not parity, but same interrupt */
     _SOC_PARITY_INFO_TYPE_SER, /* Parity error from CMIC SER module */
     _SOC_PARITY_INFO_TYPE_NUM
 }_soc_parity_info_type_t;
 
 typedef struct _soc_parity_info_s {
@@ -1230,13 +1231,13 @@ STATIC _soc_parity_info_t _soc_tr2_mmu_p
         INVALIDm, _SOC_PARITY_INFO_TYPE_GENERIC,
         INVALIDr,
         TOQ_IPMCVLANERRPTRr, INVALIDr,
         INVALIDr, INVALIDr},
     /* what is this memory ? use EGRSHAPEPARITYERRORPTRr for status? */
     {   MTRO_PAR_ERR_ENf, MTRO_PAR_ERRf, NULL,
-        INVALIDm, _SOC_PARITY_INFO_TYPE_GENERIC,
+        INVALIDm, _SOC_PARITY_INFO_TYPE_MMUMTRO,
         INVALIDr,
         INVALIDr, INVALIDr,
         INVALIDr, INVALIDr},
     {   PFAP_PAR_ERR_ENf, PFAP_PAR_ERRf, NULL,
         MMU_PFAP_MEMm, _SOC_PARITY_INFO_TYPE_MMU_PARITY,
         INVALIDr,
@@ -1302,12 +1303,57 @@ STATIC struct {
     {   0x00200, SOC_BLK_XQPORT, XQPORT_INTR_ENABLEr, XQPORT_INTR_STATUSr, _soc_tr2_xqp_parity_info}, /* x6 */
     {   0x08000, SOC_BLK_GXPORT, XPORT_INTR_ENABLEr, XPORT_INTR_STATUSr, _soc_tr2_xp_parity_info}, /* x4 */
     {   0x80000, SOC_BLK_SPORT, SPORT_INTR_ENABLEr, SPORT_INTR_STATUSr, _soc_tr2_sp_parity_info},
     {   0}, /* table terminator */
 };
 
+/* MMU MTRO conversion structure*/
+#define MMU_MTRO_MAX_GROUP          30 
+#define MMU_MTRO_MAX_PORT_IN_GROUP  5 
+#define   SOC_TRIUMPH2_MEM_PARITY_INFO(unit, block_info_idx, field_enum)    \
+          ((SOC_BLOCK2SCH(unit, block_info_idx) << SOC_ERROR_BLK_BP)        \
+          | (field_enum & SOC_ERROR_FIELD_ENUM_MASK))
+
+STATIC struct {
+    int    num_port;
+    int    port_list[MMU_MTRO_MAX_PORT_IN_GROUP];
+    int    base_queue;
+    int    numq;
+} _soc_tr2_mtro_group_info[MMU_MTRO_MAX_GROUP] = {
+    {5, {1, 2, 3, 4, 5},              0,  8},
+    {5, {6, 7, 8, 9, 10},             0,  8},
+    {5, {11, 12, 13, 14, 15},         0,  8},
+    {5, {16, 17, 18, 19, 20},         0,  8},
+    {5, {21, 22, 23, 24, 25},         0,  8},
+    {1, {26, -1, -1, -1, -1},         0, 24},
+    {1, {27, -1, -1, -1, -1},         0, 24},
+    {1, {28, -1, -1, -1, -1},         0, 24},
+    {1, {29, -1, -1, -1, -1},         0, 24},
+    {2, {30, 31, -1, -1, -1},         0, 24}, 
+    {2, {32, 33, -1, -1, -1},         0,  8},
+    {1, {34, -1, -1, -1, -1},         0, 24},
+    {3, {35, 36, 37, -1, -1},         0,  8},
+    {2, {38, 39, -1, -1, -1},         0, 24},
+    {2, {40, 41, -1, -1, -1},         0,  8},
+    {2, {42, 43, -1, -1, -1},         0, 24},
+    {2, {44, 45, -1, -1, -1},         0,  8},
+    {1, {46, -1, -1, -1, -1},         0, 24},
+    {3, {47, 48, 49, -1, -1},         0,  8},
+    {2, {50, 51, -1, -1, -1},         0, 24},
+    {2, {52, 53, -1, -1, -1},         0,  8},
+    {1, {54, -1, -1, -1, -1},         0, 24},
+    {1, {0, -1, -1, -1, -1},          0,  2},  
+    {1, {1, -1, -1, -1, -1},          8,  2},
+    {1, {2, -1, -1, -1, -1},          8,  2},
+    {1, {3, -1, -1, -1, -1},          8,  2},
+    {5, {4, 5, 6, 7, 8},              8,  2},
+    {5, {9, 10, 11, 12, 13},          8,  2},
+    {1, {14, -1, -1, -1, -1},         8,  2}, 
+    {1, {REG_PORT_ANY, -1,-1,-1,-1},  0, 48}
+};
+
 STATIC soc_triumph2_oam_handler_t oam_handler[SOC_MAX_NUM_DEVICES];
 STATIC soc_triumph2_oam_ser_handler_t tr2_oam_ser_handler[SOC_MAX_NUM_DEVICES] = {NULL};
 
 static int _stat_error_fixed[SOC_MAX_NUM_DEVICES];
 
 #define _SOC_SER_REG 1
@@ -1364,12 +1410,13 @@ _soc_triumph2_parity_enable(int unit, in
                 /* handle different parity error reporting style */
                 switch (info[table].type) {
                     case _SOC_PARITY_INFO_TYPE_GENERIC:
                     case _SOC_PARITY_INFO_TYPE_MMU_PARITY:
                     case _SOC_PARITY_INFO_TYPE_MMUIPMC:
                     case _SOC_PARITY_INFO_TYPE_MMUWRED:
+                    case _SOC_PARITY_INFO_TYPE_MMUMTRO:
                     case _SOC_PARITY_INFO_TYPE_OAM:
                     enable_field = info[table].enable_field;
                     break;
                     case _SOC_PARITY_INFO_TYPE_SINGLE_PARITY:
                     case _SOC_PARITY_INFO_TYPE_SINGLE_ECC:
                     case _SOC_PARITY_INFO_TYPE_SINGLE_COUNTER:
@@ -1502,12 +1549,13 @@ _soc_triumph2_mem_parity_control(int uni
                 /* handle different parity error reporting style */
                 switch (info[table].type) {
                     case _SOC_PARITY_INFO_TYPE_GENERIC:
                     case _SOC_PARITY_INFO_TYPE_MMU_PARITY:
                     case _SOC_PARITY_INFO_TYPE_MMUIPMC:
                     case _SOC_PARITY_INFO_TYPE_MMUWRED:
+                    case _SOC_PARITY_INFO_TYPE_MMUMTRO:
                     enable_field = info[table].enable_field;
                     SOC_IF_ERROR_RETURN
                     (soc_reg_field32_modify(unit, group_reg, block_port,
                                     enable_field,
                                     enable ? 1 : 0));
                     break;
@@ -1892,12 +1940,34 @@ _soc_triumph2_process_dual_parity_error(
     }
 
     return SOC_E_NONE;
 }
 
 STATIC int
+_soc_triumph2_parity_mmu_clear(int unit, soc_field_t status_field)
+{
+    uint32 rval;
+    SOC_IF_ERROR_RETURN
+        (READ_MEM_FAIL_INT_STATr(unit, &rval));
+    if (soc_reg_field_valid(unit, MEM_FAIL_INT_STATr, status_field)) {
+        soc_reg_field_set(unit, MEM_FAIL_INT_STATr, &rval, status_field, 0);
+    } else {
+        return SOC_E_INTERNAL;
+    }
+    SOC_IF_ERROR_RETURN
+        (WRITE_MEM_FAIL_INT_STATr(unit, rval));
+    SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+    soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_STAT_CLEARf, 1);
+    SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+    SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+    soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_STAT_CLEARf, 0);
+    SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+    return SOC_E_NONE;
+}
+
+STATIC int
 _soc_triumph2_process_mmu_parity_error(int unit, int group,
         soc_port_t block_port, int table,
         char *msg)
 {
     _soc_parity_info_t *info;
     soc_reg_t status_reg, index_reg;
@@ -1943,16 +2013,245 @@ _soc_triumph2_process_mmu_parity_error(i
     /* update soc stats for some cases */
     if (info[table].error_field == CCP_PAR_ERRf) {
         SOC_CONTROL(unit)->stat.err_cpcrc++;
     } else if (info[table].error_field == CFAP_PAR_ERRf) {
         SOC_CONTROL(unit)->stat.err_cfap++;
     }
+    if (info[table].mem == MMU_IPMC_VLAN_TBLm) {
+        _soc_ser_correct_info_t spci;
+        uint32 rval = 0;
+        memset(&spci, 0, sizeof(_soc_ser_correct_info_t));
+        spci.flags = SOC_SER_SRC_MEM | SOC_SER_REG_MEM_KNOWN;
+        spci.reg = INVALIDr;
+        spci.mem = info[table].mem;
+        spci.blk_type = SOC_BLK_MMU;
+        spci.index = index;
+
+        SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+        soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_CHK_ENf, 0);
+        SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+
+        (void)soc_ser_correction(unit, &spci);
+        SOC_IF_ERROR_RETURN(_soc_triumph2_parity_mmu_clear(unit, MEM1_VLAN_TBL_PAR_ERRf));
+
+        SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+        soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_CHK_ENf, 1);
+        SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+    }
 
     return SOC_E_NONE;
 }
 
+STATIC int
+_soc_triumph2_parity_process_mmuwred(int unit, _soc_parity_info_t *info,
+                                     soc_port_t block_port, char *msg)
+{
+    soc_reg_t reg;
+    uint32 addr0, addr1, entry_idx, status, rval;
+    _soc_ser_correct_info_t spci;
+
+    /*
+     * status0 (WRED_PARITY_ERROR_INFOr) is index
+     * status1 (WRED_PARITY_ERROR_BITMAPr) is table id
+     */
+    reg = info->intr_status0_reg;
+    addr0 = soc_reg_addr(unit, reg, block_port, 0);
+    SOC_IF_ERROR_RETURN(soc_reg32_read(unit, addr0, &entry_idx));
+    reg = info->intr_status1_reg;
+    addr1 = soc_reg_addr(unit, reg, block_port, 0);
+    SOC_IF_ERROR_RETURN(soc_reg32_read(unit, addr1, &status));
+    sal_memset(&spci, 0, sizeof(spci));
+    spci.mem = info->mem;
+    if (status & 0x000003) {
+        msg = "WRED_CFG_CELL";
+        spci.mem = MMU_WRED_CFG_CELLm;
+    } else if (status & 0x00000c) {
+        msg = "WRED_THD_0_CELL";
+        spci.mem = MMU_WRED_THD_0_CELLm;
+    } else if (status & 0x000030) {
+        msg = "WRED_THD_1_CELL";
+        spci.mem = MMU_WRED_THD_1_CELLm;
+    } else if (status & 0x0000c0) {
+        msg = "WRED_CFG_PACKET";
+        spci.mem = MMU_WRED_CFG_PACKETm;
+    } else if (status & 0x000300) {
+        msg = "WRED_THD_0_PACKET";
+        spci.mem = MMU_WRED_THD_0_PACKETm;
+    } else if (status & 0x000c00) {
+        msg = "WRED_THD_1_PACKET";
+        spci.mem = MMU_WRED_THD_1_PACKETm;
+    } else if (status & 0x003000) {
+        msg = "WRED_PORT_CFG_CELL";
+        spci.mem = MMU_WRED_PORT_CFG_CELLm;
+    } else if (status & 0x00c000) {
+        msg = "WRED_PORT_THD_0_CELL";
+        spci.mem = MMU_WRED_PORT_THD_0_CELLm;
+    } else if (status & 0x030000) {
+        msg = "WRED_PORT_THD_1_CELL";
+        spci.mem = MMU_WRED_PORT_THD_1_CELLm;
+    } else if (status & 0x0c0000) {
+        msg = "WRED_PORT_CFG_PACKET";
+        spci.mem = MMU_WRED_PORT_CFG_PACKETm;
+    } else if (status & 0x300000) {
+        msg = "WRED_PORT_THD_0_PACKET";
+        spci.mem = MMU_WRED_PORT_THD_0_PACKETm;
+    } else if (status & 0xc00000) {
+        msg = "WRED_PORT_THD_1_PACKET";
+        spci.mem = MMU_WRED_PORT_THD_1_PACKETm;
+    } else {
+        LOG_ERROR(BSL_LS_SOC_COMMON,
+                  (BSL_META_U(unit,"unit %d %s parity hardware inconsistency\n"),
+                  unit, msg));
+        return SOC_E_NONE;
+    }
+
+    soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
+            SOC_SWITCH_EVENT_DATA_ERROR_PARITY,
+            info->mem, info->error_field);
+    LOG_ERROR(BSL_LS_SOC_COMMON,
+              (BSL_META_U(unit,"unit %d %s entry %d parity error\n"),
+              unit, msg, entry_idx));
+
+    if (spci.mem != INVALIDm) {
+        spci.flags = SOC_SER_SRC_MEM | SOC_SER_REG_MEM_KNOWN;
+        spci.reg = INVALIDr;
+        spci.blk_type = SOC_BLK_MMU;
+        spci.index = entry_idx;
+
+        SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+        soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_CHK_ENf, 0);
+        SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+
+        (void)soc_ser_correction(unit, &spci);
+        SOC_IF_ERROR_RETURN(soc_reg32_write(unit, addr0, 0));
+        SOC_IF_ERROR_RETURN(soc_reg32_write(unit, addr1, 0));
+        SOC_IF_ERROR_RETURN(_soc_triumph2_parity_mmu_clear(unit, WRED_PAR_ERRf));
+
+        SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &rval));
+        soc_reg_field_set(unit, MISCCONFIGr, &rval, PARITY_CHK_ENf, 1);
+        SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, rval));
+    }
+    return SOC_E_NONE;
+}
+
+STATIC int
+_soc_triumph2_mtro_mmu_port_index_get(int instance_num, int ptr,
+                                     int *port, int *queue)
+{
+    int  num_port, numq, base_queue, port_index;
+
+    /* Check if instance_num is valid */
+    if ((instance_num < 0) ||
+        (instance_num >= MMU_MTRO_MAX_GROUP)) {
+        return SOC_E_INTERNAL;
+    }
+
+    num_port = _soc_tr2_mtro_group_info[instance_num].num_port;
+    numq = _soc_tr2_mtro_group_info[instance_num].numq;
+    base_queue = _soc_tr2_mtro_group_info[instance_num].base_queue;
+
+    /* Check if ptr is valid */
+    if ((ptr < 0) || (ptr >= (num_port * numq))) {
+        return SOC_E_INTERNAL;
+    }
+
+    port_index = ptr / numq;
+    *port = _soc_tr2_mtro_group_info[instance_num].port_list[port_index];
+    *queue = base_queue + ptr % numq;
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_soc_triumph2_parity_process_mmumtro(int unit, _soc_parity_info_t *info,
+                                    soc_block_t block)
+{
+    static soc_reg_t mtro_regs[] = {
+        MINBUCKETCONFIG_64r,
+        MINBUCKETr,
+        MAXBUCKETCONFIG_64r,
+        MAXBUCKETr
+    };
+    static soc_reg_t cpu_mtro_regs[] = {
+        CPUMAXBUCKETCONFIG_64r,
+        CPUMAXBUCKETr
+    };
+    uint32 i, rval, status, val, minfo;
+    _soc_ser_correct_info_t spci;
+    int rv, port, index, instance_num, ptr;
+
+    memset(&spci, 0, sizeof(_soc_ser_correct_info_t));
+    spci.flags = SOC_SER_SRC_REG | SOC_SER_REG_MEM_KNOWN;
+    spci.mem = INVALIDm;
+    spci.blk_type = SOC_BLK_MMU;
+    SOC_IF_ERROR_RETURN(READ_MEM_FAIL_INT_STATr(unit, &status));
+    if (!soc_reg_field_get(unit, MEM_FAIL_INT_STATr, status,
+                           MTRO_PAR_ERRf)) {
+        LOG_ERROR(BSL_LS_SOC_COMMON,
+                  (BSL_META_U(unit,"unit %d MTRO: parity hardware inconsistency\n"),
+                  unit));
+        return SOC_E_NONE;
+    }
+    SOC_IF_ERROR_RETURN(soc_reg32_get(unit, EGRSHAPEPARITYERRORPTRr,
+                                      REG_PORT_ANY, 0, &rval));
+    instance_num = soc_reg_field_get(unit, EGRSHAPEPARITYERRORPTRr,
+                                     rval, INSTANCE_NUMf);
+    ptr = soc_reg_field_get(unit, EGRSHAPEPARITYERRORPTRr, rval, PTRf);
+    SOC_IF_ERROR_RETURN(
+        _soc_triumph2_mtro_mmu_port_index_get(instance_num, ptr,
+                                             &port, &index));
+    /* Disable parity */
+    SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &val));
+    soc_reg_field_set(unit, MISCCONFIGr, &val, PARITY_CHK_ENf, 0);
+    SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, val));
+
+    if (port == REG_PORT_ANY) {
+        for (i = 0; i < COUNTOF(cpu_mtro_regs); i++) {
+            spci.port = port;
+            spci.index = index;
+            spci.reg = cpu_mtro_regs[i];
+            minfo = SOC_TRIUMPH2_MEM_PARITY_INFO(unit, block, info->error_field);
+            soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
+                               SOC_SWITCH_EVENT_DATA_ERROR_PARITY,
+                               index, minfo);
+            rv = soc_ser_correction(unit, &spci);
+            if (SOC_FAILURE(rv)) {
+                soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
+                                   SOC_SWITCH_EVENT_DATA_ERROR_FAILEDTOCORRECT,
+                                   index, minfo);
+            }
+        }
+    } else if (port >=1 && port <= 53) {
+        for (i = 0; i < COUNTOF(mtro_regs); i++) {
+            spci.port = port;
+            spci.index = index;
+            spci.reg = mtro_regs[i];
+            minfo = SOC_TRIUMPH2_MEM_PARITY_INFO(unit, block, info->error_field);
+            soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
+                               SOC_SWITCH_EVENT_DATA_ERROR_PARITY,
+                               index, minfo);
+            rv = soc_ser_correction(unit, &spci);
+            if (SOC_FAILURE(rv)) {
+                soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
+                                   SOC_SWITCH_EVENT_DATA_ERROR_FAILEDTOCORRECT,
+                                   index, minfo);
+            }
+        }
+    } else {
+       LOG_ERROR(BSL_LS_SOC_COMMON,
+                 (BSL_META_U(unit,"unit %d MTRO: parity hardware inconsistency\n"),
+                 unit));
+    }
+    SOC_IF_ERROR_RETURN(_soc_triumph2_parity_mmu_clear(unit, MTRO_PAR_ERRf));
+    /* Enable parity */
+    SOC_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &val));
+    soc_reg_field_set(unit, MISCCONFIGr, &val, PARITY_CHK_ENf, 1);
+    SOC_IF_ERROR_RETURN(WRITE_MISCCONFIGr(unit, val));
+    return SOC_E_NONE;
+}
+
 STATIC int
 _soc_triumph2_process_oam_event_only(int unit)
 {
     int table;
     uint32 addr, cmic_status, group_status,
     group_enable, group_enable_origin, cpi_blk_bit;
@@ -2102,58 +2401,25 @@ _soc_triumph2_process_parity_error(int u
                                   (BSL_META_U(unit,
                                               "unit %d %s%d entry %d parity error\n"),
                                    unit, msg, index, entry_idx));
                     }
                     break;
                     case _SOC_PARITY_INFO_TYPE_MMUWRED:
-                    /*
-                     * status0 (WRED_PARITY_ERROR_INFOr) is index
-                     * status1 (WRED_PARITY_ERROR_BITMAPr) is table id
-                     */
-                    reg = info[table].intr_status0_reg;
-                    addr = soc_reg_addr(unit, reg, block_port, 0);
-                    SOC_IF_ERROR_RETURN(soc_reg32_read(unit, addr,
-                                    &entry_idx));
-                    reg = info[table].intr_status1_reg;
-                    addr = soc_reg_addr(unit, reg, block_port, 0);
-                    SOC_IF_ERROR_RETURN(soc_reg32_read(unit, addr, &status));
-                    if (status & 0x000003) {
-                        msg = "WRED_CFG_CELL";
-                    } else if (status & 0x00000c) {
-                        msg = "WRED_THD_0_CELL";
-                    } else if (status & 0x000030) {
-                        msg = "WRED_THD_1_CELL";
-                    } else if (status & 0x0000c0) {
-                        msg = "WRED_CFG_PACKET";
-                    } else if (status & 0x000300) {
-                        msg = "WRED_THD_0_PACKET";
-                    } else if (status & 0x000c00) {
-                        msg = "WRED_THD_1_PACKET";
-                    } else if (status & 0x003000) {
-                        msg = "WRED_PORT_CFG_CELL";
-                    } else if (status & 0x00c000) {
-                        msg = "WRED_PORT_THD_0_CELL";
-                    } else if (status & 0x030000) {
-                        msg = "WRED_PORT_THD_1_CELL";
-                    } else if (status & 0x0c0000) {
-                        msg = "WRED_PORT_CFG_PACKET";
-                    } else if (status & 0x300000) {
-                        msg = "WRED_PORT_THD_0_PACKET";
-                    } else if (status & 0xc00000) {
-                        msg = "WRED_PORT_THD_1_PACKET";
-                    } else {
-                        break;
-                    }
-                    soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
-                            SOC_SWITCH_EVENT_DATA_ERROR_PARITY,
-                            info[table].mem, info[table].error_field);
+                    SOC_IF_ERROR_RETURN(
+                        _soc_triumph2_parity_process_mmuwred(unit, &info[table],
+                                                             block_port, msg));
                     LOG_ERROR(BSL_LS_SOC_COMMON,
                               (BSL_META_U(unit,
                                           "unit %d %s entry %d parity error\n"),
                                unit, msg, entry_idx));
                     break;
+                    case _SOC_PARITY_INFO_TYPE_MMUMTRO:
+                    SOC_IF_ERROR_RETURN(
+                    _soc_triumph2_parity_process_mmumtro(unit,
+                                                        &info[table], group));
+                    break;		    
                     case _SOC_PARITY_INFO_TYPE_OAM:
                     /* OAM isn't parity-related but shares an interrupt */
 
                     oam_handler_snapshot = oam_handler[unit];
 
                     soc_event_generate(unit, SOC_SWITCH_EVENT_PARITY_ERROR,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/i2c/bus.c esw_sdk_final/src/soc/i2c/bus.c
--- sdk-xgs-robo-6.4.8/src/soc/i2c/bus.c	2015-10-21 01:59:51.000000000 +0100
+++ esw_sdk_final/src/soc/i2c/bus.c	2018-01-10 11:53:53.099376000 +0000
@@ -2186,6 +2186,105 @@ soc_i2c_show_speeds(int unit)
                  i2c_xgs3_freq_tab[i].n : i2c_freq_tab[i].n,
                  SOC_IS_XGS3_SWITCH(unit) ?
                  i2c_xgs3_freq_tab[i].speed : i2c_freq_tab[i].speed));
     }
 }
 
+#ifdef LVL7_FIXUP
+int
+soc_i2c_read_test(int unit, uint8 devid, uint8 *ptr, int len)
+{
+    int rv = SOC_E_NONE;
+    int i;
+
+    if ( (rv = soc_i2c_start(unit, SOC_I2C_RX_ADDR(devid) ) ) < 0 ) {
+        LOG_ERROR(BSL_LS_SOC_I2C,
+                      (BSL_META_U(unit,
+                                  "i2c%d: soc_i2c_read_byte_data: failed to generate start.\n"),
+                       unit));
+        return rv;
+    }
+
+    do {
+        for (i = 0; i < len; i++) {
+           if (i == len - 1) {
+             if ( (rv = soc_i2c_read_one_byte(unit, ptr,
+                                              FALSE)) < 0 ) {
+               LOG_ERROR(BSL_LS_SOC_I2C,
+                             (BSL_META_U(unit,
+                                         "i2c%d: soc_i2c_read_byte_data: failed to read data byte.\n"),
+                              unit));
+             }
+           } else {
+             if ( (rv = soc_i2c_read_one_byte(unit, ptr,
+                                              TRUE)) < 0 ) {
+               LOG_ERROR(BSL_LS_SOC_I2C,
+                             (BSL_META_U(unit,
+                                         "i2c%d: soc_i2c_read_byte_data: failed to read data byte.\n"),
+                              unit));
+             }
+           }
+           ptr++;
+        }
+    } while (0);
+
+    soc_i2c_stop(unit);
+
+    return rv;
+
+
+}
+
+int
+soc_i2c_write_test(int unit, uint8 devid, uint8 *ptr, int len)
+{
+    int rv = SOC_E_NONE;
+    int i;
+
+    if ( (rv = soc_i2c_start(unit, SOC_I2C_TX_ADDR(devid) ) ) < 0 ) {
+        LOG_ERROR(BSL_LS_SOC_I2C,
+                      (BSL_META_U(unit,
+                                  "i2c%d: soc_i2c_write_test: failed to generate start.\n"),
+                       unit));
+        return rv;
+    }
+
+    do {
+        for (i = 0; i < len; i++) {
+
+              LOG_INFO(BSL_LS_SOC_I2C,
+                           (BSL_META_U(unit,
+                                       "i2c%d: soc_i2c_write_test: writing byte%d = %d\n"),
+                            unit, i, *ptr));
+
+             if ( (rv = soc_i2c_write_one_byte(unit, *ptr)) < 0 ) {
+                LOG_ERROR(BSL_LS_SOC_I2C,
+                              (BSL_META_U(unit,
+                                          "i2c%d: soc_i2c_write_test: failed to write data byte.\n"),
+                               unit));
+             }
+           ptr++;
+        }
+    } while (0);
+
+    soc_i2c_stop(unit);
+
+    return rv;
+
+}
+
+void soc_i2c_regdump()
+{
+  int unit = 0;
+
+  LOG_INFO(BSL_LS_SOC_I2C,
+               (BSL_META_U(unit,
+                           "soc_i2c_regdump: SLAVE_ADDR: 0x%02x DATA: 0x%02x CTRL: 0x%02x STAT: 0x%02x SLAVE_XADDR: 0x%02x RESET: 0x%02x\n"),
+                soc_i2c_pci_read(unit, CMIC_I2C_SLAVE_ADDR),
+                soc_i2c_pci_read(unit, CMIC_I2C_DATA),
+                soc_i2c_pci_read(unit, CMIC_I2C_CTRL),
+                soc_i2c_pci_read(unit, CMIC_I2C_STAT),
+                soc_i2c_pci_read(unit, CMIC_I2C_SLAVE_XADDR),
+                soc_i2c_pci_read(unit, CMIC_I2C_RESET)));
+}
+#endif /* LVL7_FIXUP */
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/hl65.c esw_sdk_final/src/soc/phy/hl65.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/hl65.c	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/hl65.c	2018-01-10 11:53:53.155376000 +0000
@@ -2130,19 +2130,19 @@ phy_hl65_speed_get(int unit, soc_port_t
                 *speed = 12000;
                 break;
             default:
                 break;
         }
 
-        LOG_INFO(BSL_LS_SOC_PHY,
-                 (BSL_META_U(unit,
-                             "phy_hl65_speed_get: u=%d p=%d GP_STATUS_TOPANSTATUS1 %04x speed= %d\n"),
-                  unit, port,
-                  ((xgxs_stat & GP_STATUS_XGXSSTATUS1_ACTUAL_SPEED_LN0_MASK) >>
-                  GP_STATUS_XGXSSTATUS1_ACTUAL_SPEED_LN0_SHIFT), *speed));
-
+        /* PTin modified: logs */
+        LOG_DEBUG(BSL_LS_SOC_PHY,
+                      (BSL_META_U(unit,
+                                  "phy_hl65_speed_get: u=%d p=%d GP_STATUS_TOPANSTATUS1 %04x speed= %d\n"),
+                       unit, port,
+                       ((xgxs_stat & GP_STATUS_XGXSSTATUS1_ACTUAL_SPEED_LN0_MASK) >>
+                        GP_STATUS_XGXSSTATUS1_ACTUAL_SPEED_LN0_SHIFT), *speed));
     }
     return SOC_E_NONE;
 }
 
 /*
  * Function:    
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/phy5464.c esw_sdk_final/src/soc/phy/phy5464.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/phy5464.c	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/phy5464.c	2018-01-10 11:53:53.143376000 +0000
@@ -146,12 +146,17 @@
 #include <soc/phyreg.h>
 
 #include <soc/phy.h>
 #include <soc/phy/phyctrl.h>
 #include <soc/phy/drv.h>
 
+#ifdef LVL7_FIXUP
+#include "sysapi_hpc.h"
+#include "hpc_phy.h"
+#endif
+
 #include "phydefs.h"      /* Must include before other phy related includes */
 
 #if defined(INCLUDE_PHY_5464_ESW)
 #include "phyconfig.h"    /* Must be the first phy include after phydefs.h */
 
 #include "phyident.h"
@@ -235,12 +240,16 @@ STATIC int _phy_5464_medium_change(int u
 STATIC int
 _phy_5464_medium_check(int unit, soc_port_t port, int *medium)
 {
     phy_ctrl_t        *pc;    /* PHY state */
     uint16             tmp;    /* Temp variable */
     int                copper; /* Copper medium is active */
+#if (defined(LVL7_FIXUP) && \
+    (defined(LVL7_ALPHA8245) || defined(LVL7_DNI8541)))
+static int              fiberCnt[2][24];
+#endif
 
     pc    = EXT_PHY_SW_STATE(unit, port);
     /* Read Mode Register (0x1c shadow 11111) */
     SOC_IF_ERROR_RETURN
         (READ_PHY5464_MODE_CTRLr(unit, pc, &tmp));
     if (PHY_FORCED_COPPER_MODE(unit, port)) {
@@ -252,13 +261,28 @@ _phy_5464_medium_check(int unit, soc_por
             copper = FALSE;
         } else {
             if (pc->fiber.preferred) {
                 /* 0x10 Fiber Signal Detect
                  * 0x20 Copper Energy Detect
                  */
+#if (defined(LVL7_FIXUP) && \
+    (defined(LVL7_ALPHA8245) || defined(LVL7_DNI8541)))
+                copper = TRUE;
+                if ((tmp & 0x10) == 0x10) {
+                    fiberCnt[unit][port]++;
+                    /* Require multiple detections so as not to prematurely    */
+                    /* disable the copper transmitter because of a transition. */
+                    if (fiberCnt[unit][port] > 5) {
+                        copper = FALSE;
+                    }
+                } else {
+                    fiberCnt[unit][port] = 0;
+                }
+#else
                 copper = ((tmp & 0x30) == 0x20); 
+#endif
             } else {
                 copper = ((tmp & 0x20) == 0x20);
             }
         }
     }
     *medium = copper ? SOC_PORT_MEDIUM_COPPER : SOC_PORT_MEDIUM_FIBER;
@@ -1332,12 +1356,19 @@ phy_5464_link_get(int unit, soc_port_t p
         if (PHY_FIBER_MODE(unit, port)) {
             copper_transmit = (*link) ? 0x2000 : 0; 
         }
         SOC_IF_ERROR_RETURN
             (MODIFY_PHY5464_MII_ECRr(unit, pc, copper_transmit, 0x2000));
     }
+#ifdef LVL7_FIXUP 
+    /* alok relook*/
+    if (soc_property_get(unit, spn_LED_MODE_CUST, 0))
+    {
+      (void)sysapiHpcLedModeCustomization(unit, (int)port, *link);
+    }
+#endif
 
     DPRINTF_VERBOSE((BSL_META_U(unit,
                                 "phy_5464_link_get: "
                                 "u=%d p=%d mode=%s%s%s link=%d\n"),
                     unit, port,
                     PHY_COPPER_MODE(unit, port) ? "C" : "",
@@ -3221,12 +3252,16 @@ phy_5464_shadow_dump(int unit, soc_port_
     uint16      tmp;
     int         i;
     phy_ctrl_t *pc;
 
     pc       = EXT_PHY_SW_STATE(unit, port);
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     /* Register 0x18 Shadows */
     for (i = 0; i <= 7; i++) {
         WRITE_PHY_REG(unit, pc, 0x18, (i << 12) | 0x7);
         READ_PHY_REG(unit, pc, 0x18, &tmp);
         if ((tmp & ~7) == 0x0000) {
             continue;
@@ -3253,16 +3288,66 @@ phy_5464_shadow_dump(int unit, soc_port_
         if (tmp  == 0x0000) {
             continue;
         }
         LOG_CLI((BSL_META_U(unit,
                             "0x17[0x%x]=0x%04x\n"), i, tmp));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
 }
 
 #endif /* BROADCOM_DEBUG */
 
+#ifdef LVL7_FIXUP
+/*
+ * Function:    
+ *      phy_5464_link_up
+ * Purpose:     
+ *      Performs tasks on link up.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #. 
+ * Returns:     
+ *      SOC_E_XXX
+ * Notes:
+ *      sees link up.
+ */
+STATIC int
+phy_5464_link_up(int unit, soc_port_t port)
+{
+    int an, an_done;
+
+    DPRINTF((BSL_META_U(unit,
+                        "phy_5464_link_up: u=%d p=%d \n"),
+             unit, port));
+
+    /* For copper mode only */
+    if (PHY_FLAGS_TST(unit, port, PHY_FLAGS_COPPER)) {
+        /* Get the an status */
+        SOC_IF_ERROR_RETURN
+            (phy_5464_autoneg_get(unit, port, &an, &an_done));
+
+        /* If an is diabled and link up happens then enable PHY 
+        ** as on combp ports it does not happen 
+        */
+        if (an == FALSE) {
+
+            SOC_IF_ERROR_RETURN
+               (soc_phyctrl_notify(unit, port, phyEventResume, PHY_STOP_PHY_DIS));
+
+            DPRINTF((BSL_META_U(unit,
+                                "phy_5464_link_up: Resume PHY_STOP_PHY_DIS for u=%d p=%d \n"),
+                     unit, port));
+        }
+    }
+    return SOC_E_NONE;
+}
+#endif /* LVL7_FIXUP */
+
 /*
  * Variable:    phy_5464drv_ge
  * Purpose:     PHY driver for 5464
  */
 
 phy_driver_t phy_5464drv_ge = {
@@ -3285,13 +3370,17 @@ phy_driver_t phy_5464drv_ge = {
     phy_5464_adv_remote_get,
     phy_5464_lb_set,
     phy_5464_lb_get,
     phy_5464_interface_set,
     phy_5464_interface_get,
     phy_5464_ability_get,
-    NULL,                       /* Link up event */
+#ifdef LVL7_FIXUP
+    phy_5464_link_up,          /* Link up event */
+#else 
+    NULL,
+#endif
     phy_5464_link_down,
     phy_5464_mdix_set,
     phy_5464_mdix_get,
     phy_5464_mdix_status_get,
     phy_5464_medium_config_set,
     phy_5464_medium_config_get,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/phy54680.c esw_sdk_final/src/soc/phy/phy54680.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/phy54680.c	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/phy54680.c	2018-01-10 11:53:53.155376000 +0000
@@ -1244,12 +1244,18 @@ phy_54680_enable_set(int unit, soc_port_
 
     power_down = (enable) ? 0 : MII_CTRL_PD;
 
     SOC_IF_ERROR_RETURN
         (MODIFY_PHY54680_MII_CTRLr(unit, pc, power_down, MII_CTRL_PD));
 
+#ifdef LVL7_FIXUP
+        if (soc_property_port_get(unit, port, spn_PORT_SUPER_ISOLATE, 0) != 0) {
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY54680_MII_POWER_CTRLr(unit, pc, 0, 0x20));
+        }
+#endif
     if (!enable) {
         if ((PHY_FLAGS_TST(unit, port, PHY_FLAGS_EEE_ENABLED)) &&
            (((pc->phy_rev & 0x4) == 0x0) || /* A0,A1,B0,B1 */
             (PHY_IS_BCM53125(pc) && pc->phy_rev == 0x4) ||
             (PHY_IS_BCM53128(pc) && pc->phy_rev == 0x4) ||
             (PHY_IS_BCM53324(pc) && pc->phy_rev == 0x0) ||
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/phy8706.c esw_sdk_final/src/soc/phy/phy8706.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/phy8706.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/phy8706.c	2018-01-10 11:53:53.147376000 +0000
@@ -61,12 +61,15 @@
 #include <soc/phy.h>
 #include <soc/phy/phyctrl.h>
 #include <soc/phy/drv.h>
 
 #include "phydefs.h"      /* Must include before other phy related includes */
 
+///LTX for printf
+#include <stdio.h>
+
 #if defined(INCLUDE_PHY_8706)
 #include "phyconfig.h"    /* Must be the first phy include after phydefs.h */
 #include "phyident.h"
 #include "phyreg.h"
 #include "phynull.h"
 #include "phyxehg.h"
@@ -547,12 +550,15 @@ _8727_rom_load_war(int unit, int port, p
 
 #endif
 
 STATIC int
 _8726_rom_load(int unit, int port, phy_ctrl_t *pc)
 {
+	printf("LTX: aborting _8726_rom_load\n");
+    return SOC_E_NONE;
+
     SOC_IF_ERROR_RETURN
         (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0001));
     sal_usleep(1000);
 
     SOC_IF_ERROR_RETURN
         (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0188));
@@ -588,13 +594,14 @@ _8747_rom_load(int unit, int port, phy_c
     for(i = 0; i < 4; i++) { 
         /* Disable SPI for all ports, return value ignored on purpose */
         pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc843), 0x000f);
         pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc840), 0x000C);
 
         /* Set bit SPI Download (15), SER Boot (14) And SPI Port Enable (0) In C848, SPI_PORT_CTRL */
-        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0xC0F1);
+//        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0xC0F1);
+        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0x80F1);
     }
 
     /* Place Micro in reset */
     SOC_IF_ERROR_RETURN
         (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x018f));
 
@@ -882,14 +889,19 @@ phy_8706_init(int unit, soc_port_t port)
     uint16      tmp;
 
     pc = EXT_PHY_SW_STATE(unit, port);
     
     PHY_FLAGS_SET(unit, port,  PHY_FLAGS_FIBER | PHY_FLAGS_C45);
 
-    phy_ext_rom_boot = soc_property_port_get(unit, port, 
-                                            spn_PHY_EXT_ROM_BOOT, 1);
+    ///LTX
+//    phy_ext_rom_boot = soc_property_port_get(unit, port,
+//                                            spn_PHY_EXT_ROM_BOOT, 1);
+    phy_ext_rom_boot=1;
+
+
+
     SOC_IF_ERROR_RETURN
         (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1));
 
 #ifdef BCM8727_MICROCODE_LOAD_WAR
     if ((phyid1 != PHY_ID1_8727) || (!phy_ext_rom_boot))
 #endif
@@ -1364,12 +1376,22 @@ phy_8706_init(int unit, soc_port_t port)
 
             /* Initialize the next Device */
             PHYDRV_CALL_NOARG(pc,PHY_INIT);
         }
     }
 
+    ///LTX
+
+    printf("LTX: Hacking phy_8706_init to enable tx on address 0xc800\n");
+
+    (PHY8706_REG_WRITE(unit, pc,
+                      SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PMA_PMD,
+                                            0xC800),
+                      0xFF00));
+
+
     /* Enable Squelch */
     SOC_IF_ERROR_RETURN(_phy_8706_squelch_enable(unit, port, TRUE));
 
  
     return SOC_E_NONE;
 }
@@ -2375,12 +2397,13 @@ phy_8706_lb_set(int unit, soc_port_t por
     /* Disable(Enable) Squelch when we Enable(Disable) loopback */
     SOC_IF_ERROR_RETURN
         (_phy_8706_squelch_enable(unit, port, enable ? FALSE : TRUE));
 
     if (PHY_IS_BCM5942(pc)) {
         SOC_IF_ERROR_RETURN
+//        (_phy_8706_lb_set(unit, port, enable));
             (_phy_5942_lb_set(unit, port, enable));
     } else {
         SOC_IF_ERROR_RETURN
             (_phy_8706_lb_set(unit, port, enable));
     }
 
@@ -3169,15 +3192,18 @@ _phy_8706_speed_set(int unit, soc_port_t
 
     /* need to set the internal phy's speed accordingly */
 
     if (NULL != int_pc) {
         if (PHY_IS_BCM5942(pc)) {
             SOC_IF_ERROR_RETURN
-                (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_SFI));
+//            (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+                (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+            printf("LTX: internal phy on port %d set to SOC_PORT_IF_XFI\n", port);
             SOC_IF_ERROR_RETURN
                 (PHY_AUTO_NEGOTIATE_SET (int_pc->pd, unit, port, 0));
+            printf("LTX: internal phy on port %d set to AUTONEG OFF\n", port);
         }
         rv = PHY_SPEED_SET(int_pc->pd, unit, port, speed);
     }
 
 #if 0
     if (NXT_PC(pc)) {
@@ -3193,12 +3219,14 @@ _phy_8706_speed_set(int unit, soc_port_t
 
 STATIC int
 phy_8706_speed_set(int unit, soc_port_t port, int speed)
 {
     phy_ctrl_t  *pc;
 
+    printf("LTX: Called phy_8706_speed_set for port %d\n", port);
+
     pc = EXT_PHY_SW_STATE(unit, port);
 
     SOC_IF_ERROR_RETURN
         (_phy_8706_speed_set (unit, port, speed));
     if (NXT_PC(pc)) {
         PHYDRV_CALL_ARG1(pc,PHY_SPEED_SET,speed);
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/phyident.c esw_sdk_final/src/soc/phy/phyident.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/phyident.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/phyident.c	2018-01-10 11:53:53.147376000 +0000
@@ -169,14 +169,19 @@ static int _chk_serdes_combo_5601x(int u
 static int _chk_unicore(int unit, soc_port_t port,
                         soc_phy_table_t *my_entry,
                         uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
 #endif /* INCLUDE_PHY_XGXS6 */
 
 #if defined(INCLUDE_PHY_8706)
+#ifdef LVL7_FIXUP
+ int _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
+			   uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
+#else
 static int _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
                      uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
+#endif
 #endif /* INCLUDE_PHY_8706 */
 
 #if defined(INCLUDE_PHY_8072)
 static int _chk_8072(int unit, soc_port_t port, soc_phy_table_t *my_entry,
                      uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
 #endif /* INCLUDE_PHY_8072 */
@@ -5457,13 +5462,17 @@ _chk_sfp_phy(int unit, soc_port_t port,
         }
     }
     return FALSE;
 }
 
 #if defined(INCLUDE_PHY_8706)
-static int
+#ifndef LVL7_FIXUP
+static 
+#endif
+int
+//static int
 _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
              uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi)
 {
     if (my_entry->myNum == _phy_ident_type_get(phy_id0, phy_id1) ||
         soc_property_port_get(unit, port, spn_PHY_8706, FALSE)) {
         pi->phy_name = my_entry->phy_name;
@@ -6494,12 +6503,37 @@ _ext_phy_probe(int unit, soc_port_t port
                     soc_cm_get_id(unit, &dev_id, &rev_id);
                     ext_pc->phy_rev = rev_id;
                 }
 #endif /* BCM_NORTHSTAR_SUPPORT */
 
                 PHY_FLAGS_SET(unit, port, PHY_FLAGS_EXTERNAL_PHY);
+#ifdef LVL7_FIXUP
+#if L7_FEAT_SF10GBT
+                /* SDK only provides a way to configure a single phy address for 
+                 * each port, whereas some of the customer boxes have different
+                 * phy addresses for same port. So we use the custom driver 
+                 * (registered in FP application) checkphy fuction to look for
+                 * device ids at the secondary phy addresses, and return SUCESS
+                 * if match is successful). _ext_phy_probe() uses two pointer 
+                 * variables - pi and ext_pc. We manage to run our own custom 
+                 * _check_phy function, which does the OUI check for us. But 
+                 * our requirement is to change the phy addresses and other 
+                 * parameters maintained in structures pointed to by pi 
+                 * (soc_phy_info_t) and ext_pc(phy_ctrl_t), in  case the match 
+                 * is successful.  We don't have a way to do that unless we run 
+                 * our custom function below, or SDK functions are re-designed 
+                 * to facilitate this operation.
+                 */
+                soc_phy_cust_t* fixPhySet = NULL;
+                if (phy_table[i]->cookie != NULL)
+                {
+                  fixPhySet = (soc_phy_cust_t*)(phy_table[i]->cookie);
+                  (fixPhySet->custPhySettings)(unit, port, phy_table[i], pi, ext_pc);
+                }
+#endif
+#endif
 
                 break;
             }
         }
     }
 
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/phyreg.c esw_sdk_final/src/soc/phy/phyreg.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/phyreg.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/phyreg.c	2018-01-10 11:53:53.155376000 +0000
@@ -58,12 +58,21 @@
 #include <soc/phy/phyctrl.h>
 
 #include "phydefs.h"      /* Must include before other phy related includes */
 
 #include "phyreg.h"
 
+#ifdef LVL7_FIXUP
+#include "sysapi_hpc.h"
+#include "hpc_phy.h"
+
+#undef SOC_IF_ERROR_RETURN
+#define SOC_IF_ERROR_RETURN(op) \
+    do { int __rv__; if ((__rv__ = (op)) < 0) {HPC_PHY_SHADOW_REG_UNLOCK(unit); return(__rv__);} } while(0)
+#endif
+
 #define _SOC_PHY_REG_DIRECT \
         ((SOC_PHY_REG_1000X << 1) | (SOC_PHY_REG_1000X >> 1))
 
 
 #define PHY_MODEL_CHECK(_pc, _oui, _model) \
                                 (((_pc)->phy_oui == (_oui)) && \
@@ -107,32 +116,44 @@ phy_reg_modify(int unit, phy_ctrl_t *pc,
     uint16  tmp, otmp;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     reg_data = reg_data & reg_mask;
 
     SOC_IF_ERROR_RETURN
         (READ_PHY_REG(unit, pc, reg_addr, &tmp));
     otmp = tmp;
     tmp &= ~(reg_mask);
     tmp |= reg_data;
 
     if (otmp != tmp) {
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, reg_addr, tmp));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 int 
 phy_reg_fe_read(int unit, phy_ctrl_t *pc, uint16 reg_bank,
                 uint8 reg_addr, uint16 *data)
 {
     uint16 test_reg;
   
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg | 0x0080));
     
@@ -141,12 +162,16 @@ phy_reg_fe_read(int unit, phy_ctrl_t *pc
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg));
     } else {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, reg_addr, data));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 int 
 phy_reg_fe_write(int unit, phy_ctrl_t *pc, uint16 reg_bank, 
                  uint8 reg_addr, uint16 data)
@@ -154,12 +179,16 @@ phy_reg_fe_write(int unit, phy_ctrl_t *p
     uint16 test_reg;
  
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg | 0x0080));
     
@@ -168,12 +197,16 @@ phy_reg_fe_write(int unit, phy_ctrl_t *p
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg));
     } else {
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, reg_addr, data));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 int 
 phy_reg_fe_modify(int unit, phy_ctrl_t *pc, uint16 reg_bank, 
                   uint8 reg_addr, uint16 data, uint16 mask)
@@ -181,12 +214,16 @@ phy_reg_fe_modify(int unit, phy_ctrl_t *
     uint16 test_reg;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
   
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg | 0x0080));
     
@@ -196,23 +233,31 @@ phy_reg_fe_modify(int unit, phy_ctrl_t *
             (WRITE_PHY_REG(unit, pc, 0x1f, test_reg));
     } else {
         SOC_IF_ERROR_RETURN
             (MODIFY_PHY_REG(unit, pc, reg_addr, data, mask));
     }
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 int
 phy_reg_ge_read(int unit, phy_ctrl_t *pc, uint32 flags, uint16 reg_bank,
                 uint8 reg_addr, uint16 *data)
 {
     int     rv;
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
 
             /* Map 1000X page */
             SOC_IF_ERROR_RETURN
@@ -276,12 +321,16 @@ phy_reg_ge_read(int unit, phy_ctrl_t *pc
             break;
         }
         if (SOC_SUCCESS(rv)) {
             rv = READ_PHY_REG(unit, pc, reg_addr, data);
         }
     } 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         LOG_ERROR(BSL_LS_SOC_PHY,
                   (BSL_META_U(unit,
                               "phy_reg_ge_read failed:"
                               " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
                               " rv=%d\n"), unit, pc->phy_id, reg_bank, reg_addr, rv)); 
@@ -298,12 +347,16 @@ phy_reg_ge_write(int unit, phy_ctrl_t *p
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
 
             /* Map 1000X page */
             SOC_IF_ERROR_RETURN
@@ -375,12 +428,16 @@ phy_reg_ge_write(int unit, phy_ctrl_t *p
 
             /* SHAD_EXPD for 54640E */
             BCM54640E_SHAD_EXPD_POST(unit, pc, rv);
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         LOG_ERROR(BSL_LS_SOC_PHY,
                   (BSL_META_U(unit,
                               "phy_reg_ge_write failed:"
                               " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
                               " rv=%d\n"), unit, pc->phy_id, reg_bank, reg_addr, rv)); 
@@ -398,12 +455,16 @@ phy_reg_ge_modify(int unit, phy_ctrl_t *
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
 
             /* Map 1000X page */
             SOC_IF_ERROR_RETURN
@@ -481,12 +542,16 @@ phy_reg_ge_modify(int unit, phy_ctrl_t *
 
             /* SHAD_EXPD for 54640E */
             BCM54640E_SHAD_EXPD_POST(unit, pc, rv);
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         LOG_ERROR(BSL_LS_SOC_PHY,
                   (BSL_META_U(unit,
                               "phy_reg_ge_modify failed:"
                               " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
                               " rv=%d\n"), unit, pc->phy_id, reg_bank, reg_addr, rv)); 
@@ -581,12 +646,16 @@ phy_reg_xge_write(int unit, phy_ctrl_t *
     rv       = SOC_E_NONE;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)) {
         return rv;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     {
         switch(reg_addr) {
         /* Map shadow registers */
         case 0xfff5:
             SOC_IF_ERROR_RETURN
                     (WRITE_PHY_REG(unit, pc, SOC_PHY_CLAUSE45_ADDR(dev_addr, 0xfff7), reg_bank));
@@ -626,12 +695,16 @@ phy_reg_xge_write(int unit, phy_ctrl_t *
         }
         if (SOC_SUCCESS(rv)) {
             rv = WRITE_PHY_REG(unit, pc, SOC_PHY_CLAUSE45_ADDR(dev_addr, reg_addr), data);
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         LOG_ERROR(BSL_LS_SOC_PHY,
                   (BSL_META_U(unit,
                               "phy_reg_ge_write failed:"
                               " u=%d phy_id=0x%2x dev_addr=0x%02x reg_bank=0x%04x reg_addr=0x%02x "
                               " rv=%d\n"), unit, pc->phy_id, dev_addr, reg_bank, reg_addr, rv)); 
@@ -645,12 +718,16 @@ phy_reg_xge_modify(int unit, phy_ctrl_t
                 uint8 dev_addr, uint16 reg_addr, uint16 data, uint16 mask)
 {
     int     rv;
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     {
         switch(reg_addr) {
         /* Map shadow registers */
         case 0xfff5:
             SOC_IF_ERROR_RETURN
                 (WRITE_PHY_REG(unit, pc, SOC_PHY_CLAUSE45_ADDR(dev_addr, 0xfff7), reg_bank));
@@ -699,12 +776,16 @@ phy_reg_xge_modify(int unit, phy_ctrl_t
         }
         if (SOC_SUCCESS(rv)) {
             rv = MODIFY_PHY_REG(unit, pc, SOC_PHY_CLAUSE45_ADDR(dev_addr, reg_addr), data, mask);
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         LOG_ERROR(BSL_LS_SOC_PHY,
                   (BSL_META_U(unit,
                               "phy_reg_ge_modify failed:"
                               " u=%d phy_id=0x%2x dev_addr=0x%02x reg_bank=0x%04x reg_addr=0x%02x "
                               " rv=%d\n"), unit, pc->phy_id, dev_addr, reg_bank, reg_addr, rv)); 
@@ -717,12 +798,16 @@ phy_reg_serdes_read(int unit, phy_ctrl_t
                     uint8 reg_addr, uint16 *phy_rd_data) 
 { 
     int    rv; 
  
     rv     = SOC_E_NONE; 
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) { 
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) { 
             reg_bank = 0x300 + (reg_bank << 4); 
         } 
     } 
@@ -731,12 +816,16 @@ phy_reg_serdes_read(int unit, phy_ctrl_t
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank); 
  
     if (SOC_SUCCESS(rv)) { 
         rv = READ_PHY_REG(unit, pc, reg_addr, phy_rd_data);  
     } 
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv; 
 }
 
 int
 phy_reg_serdes_write(int unit, phy_ctrl_t *pc, uint16 reg_bank, 
                      uint8 reg_addr, uint16 phy_wr_data)
@@ -746,12 +835,16 @@ phy_reg_serdes_write(int unit, phy_ctrl_
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) {
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) {
             reg_bank = 0x300 + (reg_bank << 4);
         }
     }
@@ -760,12 +853,16 @@ phy_reg_serdes_write(int unit, phy_ctrl_
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = WRITE_PHY_REG(unit, pc, reg_addr, phy_wr_data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 int
 phy_reg_serdes_modify(int unit, phy_ctrl_t *pc,
                       uint16 reg_bank, uint8 reg_addr,
@@ -776,12 +873,16 @@ phy_reg_serdes_modify(int unit, phy_ctrl
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) {
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) {
             reg_bank = 0x300 + (reg_bank << 4);
         }
     }
@@ -790,28 +891,40 @@ phy_reg_serdes_modify(int unit, phy_ctrl
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, phy_mo_data, phy_mo_mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 #if defined(INCLUDE_PHY_XGXS)
 int 
 phy_reg_xgxs_read(int unit, phy_ctrl_t *pc, uint16 reg_bank,
                            uint8 reg_addr, uint16 *data)
 {
     int    rv;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = READ_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 int 
 phy_reg_xgxs_write(int unit, phy_ctrl_t *pc, uint16 reg_bank,
                             uint8 reg_addr, uint16 data)
@@ -819,18 +932,26 @@ phy_reg_xgxs_write(int unit, phy_ctrl_t
     int    rv;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = WRITE_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 int 
 phy_reg_xgxs_modify(int unit, phy_ctrl_t *pc, uint16 reg_bank,
                              uint8 reg_addr, uint16 data, uint16 mask)
@@ -838,18 +959,26 @@ phy_reg_xgxs_modify(int unit, phy_ctrl_t
     int    rv;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, data, mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 #endif /* INCLUDE_PHY_XGXS */
 
 #if defined(INCLUDE_PHY_XGXS6)
 int 
@@ -857,12 +986,16 @@ phy_reg_xgxs6_read(int unit, phy_ctrl_t
                            uint8 reg_addr, uint16 *data)
 {
     int    rv;
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_addr < 0x10) {
         /* Select between SerDes and XAUI mapping */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, 0x0000));
         SOC_IF_ERROR_RETURN
             (MODIFY_PHY_REG(unit, pc, 0x1e, 
@@ -875,12 +1008,16 @@ phy_reg_xgxs6_read(int unit, phy_ctrl_t
     }
 
     if (SOC_SUCCESS(rv)) {
         rv = READ_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 int 
 phy_reg_xgxs6_write(int unit, phy_ctrl_t *pc, uint32 flags, uint16 reg_bank,
                             uint8 reg_addr, uint16 data)
@@ -888,12 +1025,16 @@ phy_reg_xgxs6_write(int unit, phy_ctrl_t
     int    rv;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_NONE;
 
     if (reg_addr < 0x10) {
         /* Select between SerDes and XAUI mapping */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, 0x0000));
@@ -908,12 +1049,16 @@ phy_reg_xgxs6_write(int unit, phy_ctrl_t
     }
 
     if (SOC_SUCCESS(rv)) {
         rv = WRITE_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 int 
 phy_reg_xgxs6_modify(int unit, phy_ctrl_t *pc, uint32 flags, uint16 reg_bank,
                              uint8 reg_addr, uint16 data, uint16 mask)
@@ -921,12 +1066,16 @@ phy_reg_xgxs6_modify(int unit, phy_ctrl_
     int    rv;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_NONE;
 
     if (reg_addr < 0x10) {
         /* Select between SerDes and XAUI mapping */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 0x1f, 0x0000));
@@ -941,23 +1090,31 @@ phy_reg_xgxs6_modify(int unit, phy_ctrl_
     }
 
     if (SOC_SUCCESS(rv)) {
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, data, mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 #endif /* INCLUDE_PHY_XGXS6 */
 
 STATIC int 
 _phy_reg_aer_cl45_read(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                  uint16 *data)
 {
     uint16 phy_reg_addr;
     int    cl45_devid;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid   = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
 
     if (PHY_AER_REG_ADDR_LANE_NUM(reg_addr)) {
         /* write the lane number to the AER if lane specific */
         SOC_IF_ERROR_RETURN
@@ -973,12 +1130,17 @@ _phy_reg_aer_cl45_read(int unit, phy_ctr
         /* restore back the lane number to 0 */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 STATIC int 
 _phy_reg_aer_cl45_write(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                   uint16 data)
@@ -987,12 +1149,16 @@ _phy_reg_aer_cl45_write(int unit, phy_ct
     int    cl45_devid;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
 
     if (PHY_AER_REG_ADDR_LANE_NUM(reg_addr)) {
         /* write the lane number to the AER if lane specific */
         SOC_IF_ERROR_RETURN
@@ -1008,12 +1174,17 @@ _phy_reg_aer_cl45_write(int unit, phy_ct
         /* write the lane number 0 to the AER */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 STATIC int 
 _phy_reg_aer_cl45_modify(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                   uint16 data,uint16 mask)
@@ -1022,12 +1193,16 @@ _phy_reg_aer_cl45_modify(int unit, phy_c
     int    cl45_devid;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
 
     if (PHY_AER_REG_ADDR_LANE_NUM(reg_addr)) {
         /* write the lane number to the AER if lane specific */
         SOC_IF_ERROR_RETURN
@@ -1043,12 +1218,17 @@ _phy_reg_aer_cl45_modify(int unit, phy_c
         /* write the lane number 0 to the AER */
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, 
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
 STATIC int 
 _phy_reg_aer_cl22_read(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                  uint16 *data)
@@ -1057,12 +1237,16 @@ _phy_reg_aer_cl22_read(int unit, phy_ctr
     uint16 phy_reg_blk;
     uint16 phy_reg_addr;
     int    rv;
 
     rv     = SOC_E_UNAVAIL;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_blk  = PHY_AER_REG_ADDR_BLK(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_REGAD(reg_addr);
     if (phy_reg_aer == 0) {
         rv = WRITE_PHY_REG(unit, pc, 0x1f, phy_reg_blk);
 
@@ -1094,12 +1278,16 @@ _phy_reg_aer_cl22_read(int unit, phy_ctr
             rv = WRITE_PHY_REG(unit, pc, 0x1e, 0);
         }
         if (SOC_SUCCESS(rv)) {
             rv = WRITE_PHY_REG(unit, pc, 0x1f, 0x0);
         }
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 STATIC int 
 _phy_reg_aer_cl22_write(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                   uint16 data)
@@ -1110,12 +1298,16 @@ _phy_reg_aer_cl22_write(int unit, phy_ct
     int    rv;
 
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_UNAVAIL;
 
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_blk  = PHY_AER_REG_ADDR_BLK(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_REGAD(reg_addr);
     if (phy_reg_aer == 0) {
@@ -1146,12 +1338,16 @@ _phy_reg_aer_cl22_write(int unit, phy_ct
             rv = WRITE_PHY_REG(unit, pc, 0x1f, 0xffd0);
         }
         if (SOC_SUCCESS(rv)) {
             rv = WRITE_PHY_REG(unit, pc, 0x1e, 0);
         }
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
 STATIC int 
 _phy_reg_aer_cl22_modify(int unit, phy_ctrl_t *pc, uint32 reg_addr,
                    uint16 data, uint16 mask)
@@ -1164,12 +1360,16 @@ _phy_reg_aer_cl22_modify(int unit, phy_c
     if (SOC_WARM_BOOT(unit) || SOC_IS_RELOADING(unit)){
         return SOC_E_NONE;
     }
 
     rv     = SOC_E_UNAVAIL;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_blk  = PHY_AER_REG_ADDR_BLK(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_REGAD(reg_addr);
     if (phy_reg_aer == 0) {
         /* Only support AER = 0 for now */
         rv = WRITE_PHY_REG(unit, pc, 0x1f, phy_reg_blk);
@@ -1199,12 +1399,16 @@ _phy_reg_aer_cl22_modify(int unit, phy_c
         }
         if (SOC_SUCCESS(rv)) {
             rv = WRITE_PHY_REG(unit, pc, 0x1e, 0);
         }
 
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 
 }
 
 int
 phy_reg_aer_read(int unit, phy_ctrl_t *pc, uint32 reg_addr,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/serdescombo65.c esw_sdk_final/src/soc/phy/serdescombo65.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/serdescombo65.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/serdescombo65.c	2018-01-10 11:53:53.143376000 +0000
@@ -1242,13 +1242,17 @@ phy_combo65_medium_config_get(int unit,
 
     switch (medium) {
     case SOC_PORT_MEDIUM_FIBER:
         sal_memcpy(cfg, &pc->fiber, sizeof (*cfg));
         return SOC_E_NONE;
     default:
+#ifdef LVL7_FIXUP
+        return SOC_E_UNAVAIL;
+#else
         return SOC_E_PARAM;
+#endif
     }
 }
 
 /*
  * Function:
  *      phy_combo65_medium_status
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wc40.c esw_sdk_final/src/soc/phy/wc40.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/wc40.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wc40.c	2018-01-10 11:53:53.139376000 +0000
@@ -63,12 +63,16 @@
 #include "phydefs.h"      /* Must include before other phy related includes */
 
 #ifdef BCM_WARM_BOOT_SUPPORT
 #include <soc/scache.h>
 #endif
 
+#include <logger.h>       /* PTin added: WC40 */
+
+#define PTIN_PRBS_ALWAYS_CL49 1
+
 #if defined(INCLUDE_XGXS_WC40)
 #include "phyconfig.h"     /* Must include before other phy related includes */
 #include "phyreg.h"
 #include "phyfege.h"
 #include "phynull.h"
 #include "serdesid.h"
@@ -5458,16 +5462,17 @@ _phy_wc40_interlaken_speed_get(int unit,
             *speed = 3125;
             break;
         default:
             *speed = 0;
             break;
     }
-    LOG_INFO(BSL_LS_SOC_PHY,
-             (BSL_META_U(unit,
-                         "_phy_wc40_interlaken_speed_get: u=%d p=%d LANECTRL1r %04x speed= %d\n"),
-              unit, port,data16, *speed));
+    /* PTin modified: logs */
+    LOG_DEBUG(BSL_LS_SOC_PHY,
+                  (BSL_META_U(unit,
+                              "_phy_wc40_interlaken_speed_get: u=%d p=%d LANECTRL1r %04x speed= %d\n"),
+                   unit, port,data16, *speed));
     return SOC_E_NONE;
 }
 
 /*
  * Function:
  *      phy_wc40_speed_get
@@ -6684,13 +6689,13 @@ _phy_wc40_c73_adv_local_get(int unit, so
         default:
             pause = 0;
             break;
     }
     ability->pause = pause;
 
-    LOG_INFO(BSL_LS_SOC_PHY,
+    LOG_VERBOSE(BSL_LS_SOC_PHY,
              (BSL_META_U(unit,
                          "_phy_wc40_c73_adv_local_get: u=%d p=%d pause=%08x speeds=%04x\n"),
               unit, port, pause, speeds));
     return SOC_E_NONE;
 }
 
@@ -7029,13 +7034,13 @@ phy_wc40_ability_advert_get(int unit, so
     /* check for clause73 */
     if (DEV_CFG_PTR(pc)->cl73an) {
         SOC_IF_ERROR_RETURN
             (_phy_wc40_c73_adv_local_get(unit, port, ability));
     }
 
-    LOG_INFO(BSL_LS_SOC_PHY,
+    LOG_VERBOSE(BSL_LS_SOC_PHY,
              (BSL_META_U(unit,
                          "phy_wc40_ability_advert_get:unit=%d p=%d pause=%08x sp=%08x\n"),
               unit, port, ability->pause, ability->speed_full_duplex));
 
     return SOC_E_NONE;
 }
@@ -7643,16 +7648,17 @@ phy_wc40_ability_local_get(int unit, soc
         ability->interface = SOC_PA_INTF_XGMII;
         phy_wc40_medium_get(unit, port, &ability->medium);
         ability->loopback  = SOC_PA_LB_PHY;
         ability->flags     = SOC_PA_AUTONEG;
     }
 
-    LOG_INFO(BSL_LS_SOC_PHY,
-             (BSL_META_U(unit,
-                         "phy_wc40_ability_local_get:unit=%d p=%d sp=%08x\n"),
-              unit, port, ability->speed_full_duplex));
+    /* PTin modified: logs */
+    LOG_DEBUG(BSL_LS_SOC_PHY,
+                  (BSL_META_U(unit,
+                              "phy_wc40_ability_local_get:unit=%d p=%d sp=%08x\n"),
+                   unit, port, ability->speed_full_duplex));
 
     return (SOC_E_NONE);
 }
 
 
 #define PHY_WC40_LANEPRBS_LANE_SHIFT   4
@@ -7800,23 +7806,27 @@ _phy_wc40_control_prbs_tx_invert_data_ge
 STATIC int
 _phy_wc40_control_prbs_enable_set(int unit, soc_port_t port, 
                                           uint32 enable)
 {
     uint16      data16;
     uint16      mask16;
+    #if (!PTIN_PRBS_ALWAYS_CL49)
     int an;
     int an_done;
+    #endif
     soc_port_if_t intf;
     int prbs_lanes = 0;
     int lane;
     phy_ctrl_t *pc = INT_PHY_SW_STATE(unit, port);
 
     /* If mode is autoneg KR/KR4, do it thru CL49 PRBS and configure KR forced mode and disable autoneg
      * This way the FIR settings negotiated thru CL72 is preserved
      */
 
+    /* PTin modified: PRBS */
+    #if (!PTIN_PRBS_ALWAYS_CL49)
     if (DEV_CTRL_PTR(pc)->prbs.type != WC40_PRBS_TYPE_CL49) {
         SOC_IF_ERROR_RETURN
             (phy_wc40_an_get(unit,port,&an,&an_done));
 
         if (an && an_done) {
             /* check interface */
@@ -7824,12 +7834,18 @@ _phy_wc40_control_prbs_enable_set(int un
                 (phy_wc40_interface_get(unit,port,&intf));
             if ((intf == SOC_PORT_IF_KR) || (intf == SOC_PORT_IF_KR4) ) {
                 DEV_CTRL_PTR(pc)->prbs.type = WC40_PRBS_TYPE_CL49;
             }
         }
     }
+    #else
+    /* check interface */
+    SOC_IF_ERROR_RETURN
+        (phy_wc40_interface_get(unit,port,&intf));
+    DEV_CTRL_PTR(pc)->prbs.type = WC40_PRBS_TYPE_CL49;
+    #endif
 
     if (DEV_CTRL_PTR(pc)->prbs.type == WC40_PRBS_TYPE_CL49) {
         SOC_IF_ERROR_RETURN
             (phy_wc40_interface_get(unit,port,&intf));
 
         if (!enable) {  /* disable */
@@ -7842,12 +7858,17 @@ _phy_wc40_control_prbs_enable_set(int un
                 SOC_IF_ERROR_RETURN
                     (WRITE_WC40_PCS_IEEE2BLK_PCS_TPCONTROLr(unit, pc, 0x00, 0));
             }
             DEV_CTRL_PTR(pc)->prbs.type = 0;
         } 
 
+        /* PTin added: PRBS */
+        #if (PTIN_PRBS_ALWAYS_CL49)
+        if (intf==SOC_PORT_IF_KR4 || intf==SOC_PORT_IF_KR)
+        {
+        #endif
         if (intf == SOC_PORT_IF_KR4) {
             SOC_IF_ERROR_RETURN
                 (MODIFY_WC40_SERDESDIGITAL_MISC1r(unit, pc, 0x00, 
                       enable? 0x11: 0, 
                       SERDESDIGITAL_MISC1_FORCE_SPEED_MASK));
 
@@ -7895,12 +7916,23 @@ _phy_wc40_control_prbs_enable_set(int un
                                   enable? 0: MII_CTRL_AE | MII_CTRL_RAN,
                                       MII_CTRL_AE | MII_CTRL_RAN));
 
         SOC_IF_ERROR_RETURN
             (READ_WC40_AN_IEEE0BLK_AN_IEEECONTROL1r(unit, pc, 0x00, 
                                           &data16));
+
+        /* PTin added: PRBS */
+        #if (PTIN_PRBS_ALWAYS_CL49)
+        }
+        else if (enable)
+        {
+          SOC_IF_ERROR_RETURN
+              (WRITE_WC40_PCS_IEEE2BLK_PCS_TPCONTROLr(unit, pc, 0x00, WC40_PRBS_CL49_POLY31));
+        }
+        #endif
+
         /* not to enable PRBS here. Once PRBS is enabled, the link will go down.
          * Autoneg will be restarted by link partner and Tx settings will be lost.
          * It will be enabled in get function when first time called 
          */ 
         return SOC_E_NONE;
     }
@@ -10325,12 +10357,14 @@ phy_wc40_firmware_load(int unit, int por
         (READ_WC40_UC_INFO_B1_VERSIONr(unit, pc, 0x00, &ver));
 
     LOG_VERBOSE(BSL_LS_SOC_PHY,
                 (BSL_META_U(unit,
                             "WC40 : uC RAM download success: u=%d p=%d ver=%x"), unit, port,ver));
 
+    PT_LOG_NOTICE(LOG_CTX_SDK,"WC40 : uC RAM download success: u=%d p=%d ver=%x\r\n", unit, port,ver);   /* PTin added: WC40 */
+
     if (!no_cksum) {
         LOG_VERBOSE(BSL_LS_SOC_PHY,
                     (BSL_META_U(unit,
                                 " cksum=0x%x\n"), cksum));
     } else {
         LOG_VERBOSE(BSL_LS_SOC_PHY,
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wc40_config.c esw_sdk_final/src/soc/phy/wc40_config.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/wc40_config.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wc40_config.c	2018-01-10 11:53:53.163376000 +0000
@@ -328,23 +328,23 @@ phy_wc40_config_init(phy_ctrl_t *pc)
     } else {
         pCfg->fiber_pref = FALSE;
     }
     pCfg->fw_dfe = SOC_PHY_DFE_AUTO;
 
     if (PHY_INDEPENDENT_LANE_MODE(unit, port)) {
-        pCfg->cl73an     = WC40_CL73_AND_CL73BAM; /*WC40_CL73_WO_CL73BAM; */
+        pCfg->cl73an     = WC40_CL73_AUTONEG_MODE; /*WC40_CL73_AND_CL73BAM;*/     /* PTin modified: WC40 */
     } else {
        if (IS_HG_PORT(unit, port)) {
            pCfg->cl73an     = FALSE;
        } else {
-           pCfg->cl73an     = WC40_CL73_AND_CL73BAM;
+           pCfg->cl73an     = WC40_CL73_AUTONEG_MODE; /*WC40_CL73_AND_CL73BAM;*/  /* PTin modified: WC40 */
        }
     }
    
     /* Default setting for CL37 */ 
-    pCfg->cl37an     = WC40_CL37_AND_CL37BAM; 
+    pCfg->cl37an     = WC40_CL73_AUTONEG_MODE; /*WC40_CL73_AND_CL73BAM;*/         /* PTin modified: WC40 */
 
     if ((PHY_FIBER_MODE(unit, port) && !PHY_EXTERNAL_MODE(unit, port)) ||
         PHY_PASSTHRU_MODE(unit, port) ||
         PHY_SGMII_AUTONEG_MODE(unit, port)) {
         pCfg->pdetect1000x = TRUE;
     } else {
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wc40_extra.h esw_sdk_final/src/soc/phy/wc40_extra.h
--- sdk-xgs-robo-6.4.8/src/soc/phy/wc40_extra.h	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wc40_extra.h	2018-01-10 11:53:53.151376000 +0000
@@ -219,12 +219,13 @@
 #define WC40_CL73_KR2_CUSTOM_WAR  6
 #define WC40_CL73_KR2_WAR         5
 #define WC40_CL73_KR2_CUSTOM   4
 #define WC40_CL73_KR2          3
 #define WC40_CL73_WO_CL73BAM   2
 #define WC40_CL73_AND_CL73BAM  1
+#define WC40_CL73_AUTONEG_MODE WC40_CL73_WO_CL73BAM /* PTin added: WC40 */
 
 #define WC40_CL37_WO_CL37BAM   2
 #define WC40_CL37_AND_CL37BAM  1
 
 /* KR2 control */
 #define WC40_SOFT_KR2_STATE_INIT        0
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/include/wcmod_main.h esw_sdk_final/src/soc/phy/wcmod/include/wcmod_main.h
--- sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/include/wcmod_main.h	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wcmod/include/wcmod_main.h	2018-01-10 11:53:53.151376000 +0000
@@ -154,13 +154,13 @@ typedef int     soc_port_t;
                     return(__rv__);} } \
                         while(0)
 #endif   /*_SDK_WCMOD_ */
 
 #define CHK_RET_VAL_FUNC(op) \
     { int rv; if ((rv=(op)) != 0) \
-        { printf("ERROR %s:%d. #op# returned %d\n", __FILE__,__LINE__,rv); \
+        { PT_LOG_ERR(LOG_CTX_SDK, "ERROR %s:%d. #op# returned %d",__FILE__,__LINE__,rv); \
           return (rv);} }
 
 #define WC_AER_BCST_OFS_STRAP   0x1ff
 #define PHYCTRL_MDIO_ADDR_SHARE (1 << 0) /*use phy base addr. to access lanes */
 #define PHYCTRL_MDIO_CL45       (1 << 1) /*use MDIO CL45 to access device */
 #define PHY_AER_REG_ADDR_AER(_addr)    (((_addr) >> 16) & 0x0000FFFF)
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/src/wcmod.c esw_sdk_final/src/soc/phy/wcmod/src/wcmod.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/src/wcmod.c	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wcmod/src/wcmod.c	2018-01-10 11:53:53.151376000 +0000
@@ -73,12 +73,13 @@
 #include "wcmod_phyreg.h"
 #include "wcmod_main.h"
 #include "wcmod_defines.h"
 #include "wcmod_functions.h"
 #include "wcmod_diagnostics.h"
 
+#include "logger.h"
 
 
 #define WCMOD_SDK32387_REVS(_pc) (WCMOD_REVID_A0(_pc) || WCMOD_REVID_A1(_pc) || WCMOD_REVID_B0(_pc))
 #define WCMOD_PHY400_REVS(_pc) (WCMOD_REVID_B0(_pc))
 
 /* static variables */
@@ -3720,12 +3721,18 @@ phy_wcmod_init(int unit, soc_port_t port
         (phy_wcmod_ability_advert_set(unit, port, &ability));
 
     LOG_INFO(BSL_LS_SOC_PHY,
              (BSL_META_U(pc->unit,
                          "phy_wcmod_init: u=%d p=%d\n"), unit, port));
 
+    /* PTin added: PHY link down problem */
+    #if 1
+    PT_LOG_INFO(LOG_CTX_SDK,"WCMOD initialized for bcm_port %u", port);
+    osapiSleepMSec(50);
+    #endif
+
     return SOC_E_NONE;
 }
 
 #define PCS_STATUS_LANE4_SYNC   0x80F
 /*
  *      phy_wcmod_link_get
@@ -6493,12 +6500,17 @@ phy_wcmod_xgxs16g1l_an_set(int unit, soc
             (MODIFY_WC40_AN_IEEE0BLK_AN_IEEECONTROL1r(unit, ws, an_enable, 
                                                       MII_CTRL_AE | MII_CTRL_RAN));
     }
                                                                                 
     pc->fiber.autoneg_enable = an;
                                                                                 
+    LOG_INFO(BSL_LS_SOC_PHY,
+             (BSL_META_U(pc->unit,
+                         "phy_wcmod_xgxs16g1l_an_set: Successfully set u=%d p=%d an=%d\n"),
+              unit, port, an));
+
     return SOC_E_NONE;
 }
 
 STATIC int
 phy_wcmod_xgxs16g1l_an_get(int unit, soc_port_t port, int *an, int *an_done)
 {
@@ -7081,16 +7093,17 @@ phy_wcmod_xgxs16g1l_ability_local_get(in
         ability->interface = SOC_PA_INTF_XGMII ;
         ability->medium    = SOC_PA_MEDIUM_FIBER;
         ability->loopback  = SOC_PA_LB_PHY;
         ability->flags     = 0 ;    /*SOC_PA_AUTONEG */
     }
 
-    LOG_INFO(BSL_LS_SOC_PHY,
-             (BSL_META_U(pc->unit,
-                         "phy_wc_xgxs16g11_ability_local_get:unit=%d p=%d sp=%08x\n"),
-              unit, pc->port, ability->speed_full_duplex));
+    /* PTin modified: logs */
+    LOG_DEBUG(BSL_LS_SOC_PHY,
+                  (BSL_META_U(pc->unit,
+                              "phy_wc_xgxs16g11_ability_local_get:unit=%d p=%d sp=%08x\n"),
+                   unit, pc->port, ability->speed_full_duplex));
 
     return (SOC_E_NONE);
 }
 
 /* end of xenia AN codes */
 
@@ -7716,13 +7729,13 @@ _phy_wcmod_c73_adv_local_get(int unit, s
         default:
             pause = 0;
             break;
     }
     ability->pause = pause;
 
-    LOG_INFO(BSL_LS_SOC_PHY,
+    LOG_VERBOSE(BSL_LS_SOC_PHY,
              (BSL_META_U(pc->unit,
                          "_phy_wcmod_c73_adv_local_get: u=%d p=%d pause=%08x speeds=%04x\n"),
               unit, port, pause, speeds));
 
     return SOC_E_NONE;
 }
@@ -8082,13 +8095,13 @@ phy_wcmod_ability_advert_get(int unit, s
     /* check for clause73 */
     if (DEV_CFG_PTR(pc)->cl73an) {
         SOC_IF_ERROR_RETURN
             (_phy_wcmod_c73_adv_local_get(unit, port, ability));
     }
 
-    LOG_INFO(BSL_LS_SOC_PHY,
+    LOG_VERBOSE(BSL_LS_SOC_PHY,
              (BSL_META_U(pc->unit,
                          "phy_wcmod_ability_advert_get:unit=%d p=%d pause=%08x sp=%08x max_spd=%0d\n"),
               unit, port, ability->pause, ability->speed_full_duplex, pc->speed_max));
 
 
     return SOC_E_NONE;
@@ -8811,16 +8824,17 @@ phy_wcmod_ability_local_get(int unit, so
         ability->interface = SOC_PA_INTF_XGMII;
         phy_wcmod_medium_get(unit, port, &ability->medium);
         ability->loopback  = SOC_PA_LB_PHY;
         ability->flags     = SOC_PA_AUTONEG;
     }
 
-    LOG_INFO(BSL_LS_SOC_PHY,
-             (BSL_META_U(pc->unit,
-                         "phy_wcmod_ability_local_get:unit=%d p=%d sp=%08x\n"),
-              unit, port, ability->speed_full_duplex));
+    /* PTin modified: logs */
+    LOG_DEBUG(BSL_LS_SOC_PHY,
+                  (BSL_META_U(pc->unit,
+                              "phy_wcmod_ability_local_get:unit=%d p=%d sp=%08x\n"),
+                   unit, port, ability->speed_full_duplex));
 
     return (SOC_E_NONE);
 }
 
 /*
 Bits lane assignment
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/src/wcmod_cfg_seq.c esw_sdk_final/src/soc/phy/wcmod/src/wcmod_cfg_seq.c
--- sdk-xgs-robo-6.4.8/src/soc/phy/wcmod/src/wcmod_cfg_seq.c	2015-10-21 01:59:54.000000000 +0100
+++ esw_sdk_final/src/soc/phy/wcmod/src/wcmod_cfg_seq.c	2018-01-10 11:53:53.151376000 +0000
@@ -6288,12 +6288,14 @@ int wcmod_power_control(wcmod_st* pc)
   int mask = 0;
   int tmp_lane;
   uint16 ln_ctrl;
 
   tmp_lane = pc->this_lane;
 
+  /* PTin removed: this section code is pulling down the next QSGMII core link, when the first is disabled (ge0 disable->ge4 goes down) */
+#if 0
   /* if the core is qsgmii core */ 
   if ((pc->model_type) == WCMOD_QS_A0) {
       int power_down = 0;
       if (cntl & CHANGE_TX0_POWERED_STATE){
         if (cntl & POWER_DOWN_TX0)
         power_down = 1;
@@ -6319,12 +6321,13 @@ int wcmod_power_control(wcmod_st* pc)
       else {
           MODIFY_WC40_COMBO_IEEE0_MIICNTLr(pc->unit, pc,
                                        power_down << IEEE0BLK_MIICNTL_PWRDWN_SW_SHIFT,
                                        IEEE0BLK_MIICNTL_PWRDWN_SW_MASK);
       }
   } else {
+#endif
   if (cntl & CHANGE_TX0_POWERED_STATE){
     if (cntl & POWER_DOWN_TX0)
       power_down_val |= 0x1 << (XGXSBLK1_LANECTRL3_PWRDN_TX_SHIFT);
     mask |= 0x1 << (XGXSBLK1_LANECTRL3_PWRDN_TX_SHIFT);
   }
   if (cntl & CHANGE_TX1_POWERED_STATE){
@@ -6383,13 +6386,15 @@ int wcmod_power_control(wcmod_st* pc)
       mask |= XGXSBLK1_LANECTRL3_PWRDWN_FORCE_MASK;
   }  
   MODIFY_WC40_XGXSBLK1_LANECTRL3r(pc->unit, pc, power_down_val, mask);
 
   pc->lane_num_ignore = 0;
   pc->this_lane = tmp_lane;
+#if 0
   }
+#endif
 
   return SOC_E_NONE;
 }
 
 /*!
 \brief sets the lanes in Full Duplex/ half duplex mode.
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/linux-kernel-bde.c esw_sdk_final/systems/bde/linux/kernel/linux-kernel-bde.c
--- sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/linux-kernel-bde.c	2015-10-21 01:59:55.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/kernel/linux-kernel-bde.c	2018-01-10 11:53:52.739376000 +0000
@@ -144,13 +144,17 @@
 #define virt_to_bus virt_to_phys
 #define bus_to_virt phys_to_virt
 #endif
 
 MODULE_AUTHOR("Broadcom Corporation");
 MODULE_DESCRIPTION("Kernel BDE");
+#ifdef __arm__
 MODULE_LICENSE("Proprietary");
+#else
+MODULE_LICENSE("GPL");
+#endif
 
 /* DMA memory pool size */
 static char *dmasize;
 LKM_MOD_PARAM(dmasize, "s", charp, 0);
 MODULE_PARM_DESC(dmasize,
 "Specify DMA memory size (default 4MB)");
@@ -164,13 +168,17 @@ MODULE_PARM_DESC(dmaalloc, "Select DMA m
 static char *himem;
 LKM_MOD_PARAM(himem, "s", charp, 0);
 MODULE_PARM_DESC(himem,
 "Use high memory for DMA (default no)");
 
 /* PCIe max payload */
+#if defined (__arm__)     /* PTin added: PCI */
 int maxpayload = 256;
+#else
+int maxpayload = 128;     /* PTin modified: Max payload limited to 128B */
+#endif
 LKM_MOD_PARAM(maxpayload, "i", int, 0);
 MODULE_PARM_DESC(maxpayload,
 "Limit maximum payload size and request size on PCIe devices");
 
 /* Use MSI interrupts */
 int usemsi = -1;
@@ -552,18 +560,21 @@ robo_spi_write(void *cookie, uint16_t re
 #define PCI_DEVID_PI7C9X130   0xE130
 #define DEV_CTRL_REG           0xb8
 
 #define MAX_PAYLOAD_256B       (1 << 5)
 #define MAX_PAYLOAD_512B       (2 << 5)
 #define MAX_READ_REQ_256B      (1 << 12)
-
+#define MAX_READ_REQ_512B      (2 << 12)          /* PTin added: PCI */
 
 /* Freescale 8548 PCI-E  host Bridge */
 #define FSL_VENDOR_ID                   0x1957
 #define FSL8548PCIE_DEVICE_ID           0x0013
 #define FSL2020EPCIE_DEVICE_ID          0x0070
+#define FSL8544PCIE_DEVICE_ID           0x0033    /* PTin added: PCI PQ3 8544 */
+#define FSL2040EPCIE_DEVICE_ID          0x0411    /* PTin added: PCI P2040 */
+#define FSL2040SECEPCIE_DEVICE_ID       0x0410    /* PTin added: PCI P2040 */
 #define FSL8548PCIE_DEV_CTRL_REG        0x54
 
 /* 4716 PCI-E  host Bridge */
 #define BCM4716_VENDOR_ID               0x14e4
 #define BCM4716PCIE_DEVICE_ID           0x4716
 #define BCM4716PCIE_DEV_CAP_REG         0xd4
@@ -602,12 +613,23 @@ robo_spi_write(void *cookie, uint16_t re
 #define BCM58522_PCI_DEVICE_ID     0x8022
 
 /* Broadcom BCM58712 */
 #define BCM58712_PCI_VENDOR_ID     0x14E4
 #define BCM58712_PCI_DEVICE_ID     0x168E
 
+/* PTin added: PCI high speed switches */
+#if 1
+/* Broadcom BCM56640 */
+#define BCM56640_PCI_VENDOR_ID     0x14E4
+#define BCM56640_PCI_DEVICE_ID     0xb640
+
+/* Broadcom BCM56846 */
+#define BCM56846_PCI_VENDOR_ID     0x14E4
+#define BCM56846_PCI_DEVICE_ID     0xb846
+#endif
+
 static uint32_t _read(int d, uint32_t addr);
 
 #ifdef BCM_ICS
 #else
 /* Used to determine overall memory limits across all devices */
 static uint32_t _pci_mem_start = 0xFFFFFFFF;
@@ -1678,22 +1700,38 @@ p2p_bridge(void)
          * Writes to the PCIE capability device control register
          */
         pci_write_config_dword(dev, DEV_CTRL_REG,
                                MAX_PAYLOAD_256B | MAX_READ_REQ_256B);
     }
 
-    if ((dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL8548PCIE_DEVICE_ID, NULL)) != NULL ||
+    if ((dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL8544PCIE_DEVICE_ID, NULL)) != NULL ||     /* PTin added: PCI PQ3-8544*/
+        (dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL8548PCIE_DEVICE_ID, NULL)) != NULL ||
         (dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL2020EPCIE_DEVICE_ID, NULL)) != NULL) {
         /*
          * Configure the PCIE cap: Max payload size: 256, Max Read
          * Request size: 256, disabling relax ordering.
          * Writes to the PCIE capability device control register
          */
         pci_write_config_dword(dev, FSL8548PCIE_DEV_CTRL_REG,
                                MAX_PAYLOAD_256B | MAX_READ_REQ_256B);
     }
+    /* PTin added: PCI P2040 */
+    #if 1
+    else if ((dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL2040EPCIE_DEVICE_ID, NULL)) != NULL ||
+             (dev = PCI_FIND_DEV(FSL_VENDOR_ID, FSL2040SECEPCIE_DEVICE_ID, NULL)) != NULL)
+    {
+        /*
+         * Configure the PCIE cap: Max payload size: 512, Max Read
+         * Request size: 512, disabling relax ordering.
+         * Writes to the PCIE capability device control register
+         */
+        pci_write_config_dword(dev, FSL8548PCIE_DEV_CTRL_REG,
+                               MAX_PAYLOAD_512B | MAX_READ_REQ_512B);
+    }
+    #endif
+
     if ((dev = PCI_FIND_DEV(BCM4716_VENDOR_ID, BCM4716PCIE_DEVICE_ID, NULL)) != NULL ||
         (dev = PCI_FIND_DEV(BCM53000_VENDOR_ID, BCM53000PCIE_DEVICE_ID, NULL)) != NULL) {
         uint32 tmp, maxpayld, device_bmp=0, mask;
         unsigned long addr;
         uint16 tmp16, tmp161;
         int i, bus0 = -1, bus1 = -1, port;        
@@ -2012,12 +2050,17 @@ _pci_probe(struct pci_dev *dev, const st
 
         if (debug >= 4) {gprintk("Enabling PCI device : vendor_id=0x%x, device_id=0x%x\n", dev->vendor, dev->device);}
         if (pci_enable_device(dev)) {
             gprintk("Cannot enable PCI device : vendor_id = %x, device_id = %x\n",
                     dev->vendor, dev->device);
         }
+/* PTin added */
+        else {
+            gprintk("LTX: Enabled pci device : vendor_id = %x, device_id = %x\n",dev->vendor, dev->device);
+        }
+/* PTin end */
 
         
         /*
          * These are workarounds to get around some existing
          * kernel problems :(
          */
@@ -2026,15 +2069,17 @@ _pci_probe(struct pci_dev *dev, const st
          * While probing we determine the overall limits for the PCI
          * memory windows across all devices. These limits are used
          * later on by the PCI-PCI bridge  code.
          */
         if (pci_resource_start(dev, baroff) < _pci_mem_start) {
             _pci_mem_start = pci_resource_start(dev, baroff);
+            gprintk("LTX: Adjusted _pci_mem_start\n");
         }
         if (pci_resource_end(dev, baroff) > _pci_mem_end) {
             _pci_mem_end = pci_resource_end(dev, baroff);
+            gprintk("LTX: Adjusted _pci_mem_end\n");
         }
 
 #ifdef CONFIG_SANDPOINT
         /*
          * Something wrong with the PCI subsystem in the mousse kernel.
          * The device is programmed correctly, but the irq in the pci
@@ -2125,12 +2170,29 @@ _pci_probe(struct pci_dev *dev, const st
             /* BCM58525/BCM58712 CPU boards support 128 Max payload size */
             if (maxpayload) {
                 maxpayload = 128;
                 if (debug >= 1) gprintk("force max payload size to 128\n");
             }
         }
+        /* PTin added: PCI */
+        #if 1
+        else if ((PCI_FIND_DEV(BCM56846_PCI_VENDOR_ID, BCM56846_PCI_DEVICE_ID, NULL)) != NULL) {
+            /* BCM58525 CPU boards support 128 Max payload size */
+            if (maxpayload) {
+                maxpayload = 256;
+                if (debug >= 1) gprintk("force max payload size to 256\n");
+            }
+        }
+        else if ((PCI_FIND_DEV(BCM56640_PCI_VENDOR_ID, BCM56640_PCI_DEVICE_ID, NULL)) != NULL) {
+            /* BCM58525 CPU boards support 128 Max payload size */
+            if (maxpayload) {
+                maxpayload = 512;
+                if (debug >= 1) gprintk("force max payload size to 512\n");
+            }
+        }
+        #endif
 
         if (forceirq > 0 && dev->irq != (uint32) forceirq) {
             if (forceirqubm & (1U << (_ndevices - 1))) {
                 dev->irq = forceirq;
                 if (debug >= 1) gprintk("force irq to %d\n", forceirq);
             }
@@ -2172,12 +2234,48 @@ _pci_probe(struct pci_dev *dev, const st
         break;
     default:
         break;
     }
 #endif /* BCM_DFE_SUPPORT */
 
+#ifndef __arm__
+    if (debug >= 1) {
+        uint8 aux8;
+        uint32 aux32;
+
+        gprintk("***********PCI Conf registers: api 5.9.2**********\n");
+        pci_read_config_dword(dev, 0x0, &aux32);
+        gprintk("* Vendor ID | Device ID :  0x%08X *\n", aux32);
+        pci_read_config_dword(dev, 0x4, &aux32);
+        gprintk("* Class Code| rev ID    :  0x%08X *\n", aux32);
+        pci_read_config_byte(dev, 0xC, &aux8);
+        gprintk("* Cache line syze       :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0xD, &aux8);
+        gprintk("* Latency Timer         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0xE, &aux8);
+        gprintk("* Header Type           :  0x%02X       *\n", aux8);
+        pci_read_config_dword(dev, 0x10, &aux32);
+        gprintk("* BASE ADDRESS LOW      :  0x%08X *\n", aux32);
+        pci_read_config_dword(dev, 0x14, &aux32);
+        gprintk("* BASE ADDRESS HIGH     :  0x%08X *\n", aux32);
+        pci_read_config_byte(dev, 0x3C, &aux8);
+        gprintk("* Interrupt Line        :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3D, &aux8);
+        gprintk("* Interrupt Pin         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3E, &aux8);
+        gprintk("* Minimum Grant         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3F, &aux8);
+        gprintk("* Maximum Latency       :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x40, &aux8);
+        gprintk("* Retry Count           :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x41, &aux8);
+        gprintk("* TRDY Timeout          :  0x%02X       *\n", aux8);
+        gprintk("****************************\n");
+    }
+#endif
+
     /* Prevent compiler warning */
     if (ctrl == NULL) {
         return 0;
     }
 
     ctrl->be_pio = 0;
@@ -2328,12 +2426,13 @@ _pci_probe(struct pci_dev *dev, const st
     if (debug >= 2) {
         gprintk("_pci_probe: configured dev:0x%x rev:0x%d with base_addresses: 0x%lx 0x%lx\n",
           (unsigned)ctrl->bde_dev.device, (unsigned)ctrl->bde_dev.rev,
           (unsigned long)ctrl->bde_dev.base_address, (unsigned long)ctrl->bde_dev.base_address1);
     }
     /* Let's boogie */
+    gprintk("LTX: BCM: Reached end of _probe\n");
     return 0;
 }
 
 /*
  * Function: _pci_remove
  *
@@ -2467,13 +2566,13 @@ static struct bde_spi_device_id _spi_id_
 #define ONE_MB (1024*1024)
 
 /* Default DMA memory size */
 #ifdef SAL_BDE_DMA_MEM_DEFAULT
 #define DMA_MEM_DEFAULT (SAL_BDE_DMA_MEM_DEFAULT * ONE_MB)
 #else
-#define DMA_MEM_DEFAULT (8 * ONE_MB)
+#define DMA_MEM_DEFAULT (16 * ONE_MB)
 #endif
 #define DMA_MEM_DEFAULT_ROBO (4 * ONE_MB)
 
 
 /* We try to assemble a contiguous segment from chunks of this size */
 #define DMA_BLOCK_SIZE (512 * ONE_KB)
@@ -2873,35 +2972,39 @@ _alloc_mpool(size_t size)
         if (((pbase + size) >> 16) > DMA_BIT_MASK(16)) {
             gprintk("DMA in high memory at 0x%lx size 0x%lx is beyond the 4GB limit and not supported.\n", pbase, (unsigned long)size);
             return;
         }
         _dma_pbase = pbase;
         _dma_vbase = IOREMAP(_dma_pbase, size);
+        if (debug >= 1)
+          gprintk("_alloc_mpool (himem=1): _dma_vbase:%p pbase:%lx  allocated:%lx\n", _dma_vbase, pbase, (unsigned long)size);
     } else {
         /* Get DMA memory from kernel */
         switch (dmaalloc) {
 #if _SIMPLE_MEMORY_ALLOCATION_
           case ALLOC_TYPE_API: {
             size_t alloc_size = size; /* size of memory allocated in current iteration */
             if (alloc_size > DMA_MAX_ALLOC_SIZE) {
                 alloc_size = DMA_MAX_ALLOC_SIZE;
             }
             /* get a memory allocation from the kernel */
             {
-                dma_addr_t dma_handle;
+                dma_addr_t dma_handle = 0;
                 if (!(_dma_vbase = dma_alloc_coherent(0, alloc_size, &dma_handle, GFP_KERNEL)) || !dma_handle) {
-                    gprintk("_alloc_mpool: Kernel failed to allocate the memory pool of size 0x%lx\n", (unsigned long)alloc_size);
+                    gprintk("_alloc_mpool: Kernel failed to allocate the memory pool of size 0x%lx (_dma_vbase=0x%08lx dma_handle=0x%08lx)\n",
+                        (unsigned long)alloc_size, (unsigned long) _dma_vbase, (unsigned long) dma_handle);
                     return;
                 }
                 pbase = dma_handle;
             }
 
             if (alloc_size != size) {
                 gprintk("_alloc_mpool: allocated 0x%lx bytes instead of 0x%lx bytes.\n", (unsigned long)alloc_size, (unsigned long)size);
             }
             size = _dma_mem_size = alloc_size;
+            gprintk("_alloc_mpool: _SIMPLE_MEMORY_ALLOCATION_ successfull\n");
             break;
           }
 #endif /* _SIMPLE_MEMORY_ALLOCATION_ */
 
           case ALLOC_TYPE_CHUNK:
             _dma_vbase = _pgalloc(size);
@@ -2921,12 +3024,14 @@ _alloc_mpool(size_t size)
             return;
         }
         _dma_pbase = pbase;
 #ifdef REMAP_DMA_NONCACHED
         _dma_vbase = IOREMAP(_dma_pbase, size);
 #endif
+        if (debug >= 1)
+          gprintk("_alloc_mpool: _dma_vbase:%p pbase:%lx  allocated:%lx\n", _dma_vbase, pbase, (unsigned long)size);
     }
 }
 #ifdef BCM_ROBO_SUPPORT
 
 static int
 _spi_device_valid_check(unsigned short phyidh,unsigned short phyidl, uint8 check_flag)
@@ -3704,25 +3809,28 @@ _init(void)
         }
     }
 
     if (himem) {
         if ((himem[0] & ~0x20) == 'Y' || himem[0] == '1') {
             _use_himem = 1;
+            gprintk("LTX: Using himem dma allocation\n");
         } else if ((himem[0] & ~0x20) == 'N' || himem[0] == '0') {
+            gprintk("LTX: NOT Using himem dma allocation\n");
             _use_himem = 0;
         }
     }
 
     if (_dma_mem_size) {
         _alloc_mpool(_dma_mem_size);
         if (_dma_vbase == NULL) {
             gprintk("no DMA memory available\n");
         }
         else {
             mpool_init();
             _dma_pool = mpool_create(_dma_vbase, _dma_mem_size);
+            gprintk("Allocated %d bytes for DMA memory\n", _dma_mem_size);  /* PTin added */
         }
     }
 
     /*
      * In order to be backward compatible with the user mode BDE
      * (specifically the interrupt IOCTLs) and the CM, switch devices
@@ -4250,12 +4358,23 @@ _interrupt_connect(int d,
 {
     bde_ctrl_t *ctrl;
     unsigned long irq_flags;
     int isr2_dev;
     int isr_active;
 
+    /* PTin added: Kernel */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+#ifndef __arm__
+    struct device_node *np = NULL;
+    unsigned int eirq;
+#endif
+#endif
+
+    gprintk("Setting IRQ...\n");
+    /* PTin end */
+
     isr2_dev = d & LKBDE_ISR2_DEV;
     d &= ~LKBDE_ISR2_DEV;
 
     if (!VALID_DEVICE(d)) {
         gprintk("_interrupt_connect: Invalid device index %d\n", d);
         return -1;
@@ -4292,18 +4411,44 @@ _interrupt_connect(int d,
         if (isr_active) {
             /* Main handler (_isr) already installed */
             return 0;
         }
     }
 
+    /* PTin added: Kernel */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
+#ifndef __arm__
+    np = of_find_compatible_node(NULL, NULL, "bcm,fastpath-pci");
+	  if (np == NULL){
+      gprintk ("LMP - Nao apanhei nenhum no' da devtree\n\r");
+      return -1;
+    }
+    eirq = irq_of_parse_and_map(np, 0);
+    if (eirq == NO_IRQ)
+    {
+      gprintk ("LMP - Nao apanhei nenhum irq devtree\n\r");
+      return -1;
+    }
+    ctrl->iLine = eirq;
+#endif
+#endif
+    gprintk("irq to be used: %d\n",ctrl->iLine);
+    /* PTin end */
+
     if (ctrl->iLine != -1) {
         irq_flags = IRQF_SHARED;
 #if defined(CONFIG_PCI_MSI)
+        gprintk ("LTX: Trying to enable MSI\n");
         if (ctrl->use_msi && pci_enable_msi(ctrl->pci_device) == 0) {
             irq_flags = 0;
             ctrl->iLine = ctrl->pci_device->irq;
+            gprintk ("LTX: Success enabling MSI\n");
+        }
+        else
+        {
+            gprintk ("LTX: MSI not enabled\n");
         }
 #endif
         if (request_irq(ctrl->iLine,
                        _isr,
                        irq_flags,
                        LINUX_KERNEL_BDE_NAME,
@@ -4319,12 +4464,13 @@ _interrupt_connect(int d,
             if (ctrl->use_msi && irq_flags == 0) {
                 pci_disable_msi(ctrl->pci_device);
             }
 #endif
             return -1;
         }
+        gprintk("Success requesting irq %d\n", ctrl->iLine);
     }
 
     return 0;
 }
 
 static int
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.24 esw_sdk_final/systems/bde/linux/kernel/Makefile.24
--- sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.24	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/kernel/Makefile.24	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,63 @@
+FP_BASE=../../../../../../..
+
+KERNLIB=kern_kbde.a
+
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+COMPONENT_INCLDIR += $(BROADCOM_INCL) \
+        -I$(BROADCOM_SRC)/../systems/bde/linux/include \
+        -I$(BROADCOM_SRC)/../systems/bde/linux/user/kernel \
+        -I$(BROADCOM_SRC)/../systems/linux/kernel/modules/include 
+
+COMPONENT_INCLDIR += \
+        -I$(KERNEL_SRC)/include \
+        -I../include
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) -D__KERNEL__ -O2 -Werror
+ifeq ($(L7_CPU),raptor)
+CFLAGSLOCAL+=-Wall -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -mlong-calls
+endif
+
+# Specify modules that need to be compiled.
+#
+LIBOBJS = linux-kernel-bde.o mpool.o
+
+KERNEL_LIBS = ../../../linux/kernel/modules/shared/kern_mod_shared.a
+
+bldlib: kbde.kmod
+	$(STRIP) -g kbde.kmod -o $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/kbde.o 
+	rm -f *.o
+
+kbde.kmod: $(KERNLIB)($(LIBOBJS)) $(KERNEL_LIBS)
+	rm -f kbde.kmod
+	$(MAKE) -f Makefile.24 $(LIBOBJS)
+	$(linkcmd) -o kbde.kmod -Map kbde.map -r $(LIBOBJS) $(KERNEL_LIBS)
+
+mpool.c: ../shared/mpool.c
+	rm -f mpool.c
+	cp ../shared/mpool.c .
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) $(KERNLIB)
+
+(%.o) : %.c
+	$(CC) -Wp,-MD,$(*F).d $(CFLAGS) $(CFLAGSLOCAL) -c $<
+	$(AR) r $@ $*.o
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.26 esw_sdk_final/systems/bde/linux/kernel/Makefile.26
--- sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.26	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/kernel/Makefile.26	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,30 @@
+FP_BASE:=$(shell ./abspath.sh ../../../../../../..)
+#FP_BASE=../../../../../../..
+PWD:=$(shell pwd) 
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+bldlib: kbde.ko
+	cp kbde.ko $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/kbde.ko 
+	rm -f *.o ../shared/*.o ../../../linux/kernel/modules/shared/*.o
+
+kbde.ko: linux-kernel-bde.c
+	rm -rf kbde.ko .tmp_versions ../shared/mpool.o  
+	$(MAKE) -C $(KERNEL_SRC) M=$(PWD) FP_BASE=$(FP_BASE) modules
+	$(CROSS_COMPILE)strip --strip-debug kbde.ko
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) kbde.ko
+
+installexe:
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.kbde esw_sdk_final/systems/bde/linux/kernel/Makefile.kbde
--- sdk-xgs-robo-6.4.8/systems/bde/linux/kernel/Makefile.kbde	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/kernel/Makefile.kbde	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,11 @@
+# This Makefile is copied to the objects/kmod output directory along with
+# the required .c files in order to build the kernel module in the output
+# location.
+#
+# Using the original kernel Makefile contents, but stripping off the
+# path names from the list of .o files being built.
+#
+
+include $(FP_ROOT)/vendor/broadcom/esw_sdk/systems/bde/linux/kernel/Makefile
+
+kbde-y := $(notdir $(kbde-y))
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/shared/Makefile esw_sdk_final/systems/bde/linux/shared/Makefile
--- sdk-xgs-robo-6.4.8/systems/bde/linux/shared/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/shared/Makefile	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,40 @@
+FP_BASE=../../../../../../..
+
+FPLIB=fp_shared.a
+
+# -*- Makefile -*-
+# $Id: Makefile,v 1.4 Broadcom SDK $
+# $Copyright: (c) 2004 Broadcom Corp.
+# All Rights Reserved.$
+#
+# Makefile for Linux user BDE
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+COMPONENT_INCLDIR += $(BROADCOM_INCL) \
+	-I../include \
+	-I$(KERNEL_SRC)/arch/ppc
+	
+	
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) $(SWCFLAG)  \
+ 	-DBROADCOM_DEBUG
+
+# Specify modules that need to be compiled.
+#
+ifeq ($(findstring LINUX,$(L7_OS_VERSION)),LINUX) 
+LIBOBJS = mpool.o
+else
+LIBOBJS =
+endif
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.24 esw_sdk_final/systems/bde/linux/user/kernel/Makefile.24
--- sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.24	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/user/kernel/Makefile.24	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,58 @@
+FP_BASE=../../../../../../../..
+
+KERNLIB=kern_ubde.a
+
+# Linux Kernel module ubde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+COMPONENT_INCLDIR += \
+	-I$(KERNEL_SRC)/include \
+	$(BROADCOM_INCL) \
+	-I$(BROADCOM_SRC)/../systems/bde/linux/include \
+	-I$(BROADCOM_SRC)/../systems/bde/linux/user/kernel \
+        -I$(BROADCOM_SRC)/../systems/linux/kernel/modules/include \
+	-I../include
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) -D__KERNEL__ -O2 -Werror
+ifeq ($(L7_CPU),raptor)
+CFLAGSLOCAL+=-Wall -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -mlong-calls
+endif
+
+# Specify modules that need to be compiled.
+#
+
+LIBOBJS = linux-user-bde.o
+
+KERNEL_LIBS = ../../../../linux/kernel/modules/shared/kern_mod_shared.a \
+	      ../../../../../src/sal/core/linux/kern_sal.a
+
+bldlib: ubde.kmod
+	$(STRIP) -g ubde.kmod -o $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/ubde.o 
+	rm -f *.o
+
+ubde.kmod: $(KERNLIB)($(LIBOBJS)) $(KERNEL_LIBS)
+	rm -f ubde.kmod
+	$(MAKE) -f Makefile.24 $(LIBOBJS)
+	$(linkcmd) -o ubde.kmod -Map ubde.map -r $(LIBOBJS) $(KERNEL_LIBS)
+
+clean::
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) $(KERNLIB)
+
+(%.o) : %.c
+	$(CC) -Wp,-MD,$(*F).d $(CFLAGS) $(CFLAGSLOCAL) -c $<
+	$(AR) r $@ $*.o
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.26 esw_sdk_final/systems/bde/linux/user/kernel/Makefile.26
--- sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.26	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/user/kernel/Makefile.26	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,31 @@
+FP_BASE:=$(shell ../../kernel/abspath.sh ../../../../../../../..)
+PWD:=$(shell pwd) 
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+bldlib: ubde.ko
+	cp ubde.ko $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/ubde.ko 
+	rm -f *.o ../../../../linux/kernel/modules/shared/*.o ../../../../../src/sal/core/linux/*.o ../../../../../src/sal/core/*.o
+
+ubde.ko: linux-user-bde.c 
+	rm -rf ubde.ko .tmp_versions 
+	$(MAKE) -C $(KERNEL_SRC) M=$(PWD) FP_BASE=$(FP_BASE) modules
+	$(CROSS_COMPILE)strip --strip-debug ubde.ko
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) *.ko
+	-$(RM) ubde.ko
+
+installexe:
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.ubde esw_sdk_final/systems/bde/linux/user/kernel/Makefile.ubde
--- sdk-xgs-robo-6.4.8/systems/bde/linux/user/kernel/Makefile.ubde	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/bde/linux/user/kernel/Makefile.ubde	2018-01-10 11:53:52.739376000 +0000
@@ -0,0 +1,11 @@
+# This Makefile is copied to the objects/kmod output directory along with
+# the required .c files in order to build the kernel module in the output
+# location.
+#
+# Using the original kernel Makefile contents, but stripping off the
+# path names from the list of .o files being built.
+#
+
+include $(FP_ROOT)/vendor/broadcom/esw_sdk/systems/bde/linux/user/kernel/Makefile
+
+ubde-y := $(notdir $(ubde-y))
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/kernel/modules/include/lkm.h esw_sdk_final/systems/linux/kernel/modules/include/lkm.h
--- sdk-xgs-robo-6.4.8/systems/linux/kernel/modules/include/lkm.h	2015-10-21 01:59:56.000000000 +0100
+++ esw_sdk_final/systems/linux/kernel/modules/include/lkm.h	2018-01-10 11:53:52.743376000 +0000
@@ -68,16 +68,20 @@
 #include <linux/smp_lock.h>
 #endif
 #include <linux/module.h>
 
 /* Helper defines for multi-version kernel  support */
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
+#ifndef LKM_2_4
 #define LKM_2_4
+#endif
 #else
+#ifndef LKM_2_6
 #define LKM_2_6
 #endif
+#endif
 
 #include <linux/kernel.h>   /* printk() */
 #include <linux/fs.h>       /* everything... */
 #include <linux/errno.h>    /* error codes */
 #include <linux/types.h>    /* size_t */
 #include <linux/proc_fs.h>
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/user/fastpath-2_6/Makefile esw_sdk_final/systems/linux/user/fastpath-2_6/Makefile
--- sdk-xgs-robo-6.4.8/systems/linux/user/fastpath-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/linux/user/fastpath-2_6/Makefile	2018-01-10 11:53:52.743376000 +0000
@@ -0,0 +1,27 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.1.2.2 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR      - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE  - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+override kernel_version=2_6
+platform=$(L7_CPU)-$(kernel_version)
+LINUX_MAKE_USER=1
+LINUX_MAKE_DIR := $(SDK)/systems/linux/user/fastpath_common
+include ${SDK}/make/Make.linux
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/user/fastpath-3_6/Makefile esw_sdk_final/systems/linux/user/fastpath-3_6/Makefile
--- sdk-xgs-robo-6.4.8/systems/linux/user/fastpath-3_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/linux/user/fastpath-3_6/Makefile	2018-01-10 11:53:52.743376000 +0000
@@ -0,0 +1,27 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.1.2.2 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR      - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE  - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+override kernel_version=3_6
+platform=$(L7_CPU)-$(kernel_version)
+LINUX_MAKE_USER=1
+LINUX_MAKE_DIR := $(SDK)/systems/linux/user/fastpath_common
+include ${SDK}/make/Make.linux
+
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/bdecreate.c esw_sdk_final/systems/linux/user/fastpath_common/bdecreate.c
--- sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/bdecreate.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/linux/user/fastpath_common/bdecreate.c	2018-01-10 11:53:52.743376000 +0000
@@ -0,0 +1,148 @@
+/*
+ * $Id: socdiag.c,v 1.13 Broadcom SDK $
+ * $Copyright: Copyright 2008 Broadcom Corporation.
+ * This program is the proprietary software of Broadcom Corporation
+ * and/or its licensors, and may only be used, duplicated, modified
+ * or distributed pursuant to the terms and conditions of a separate,
+ * written license agreement executed between you and Broadcom
+ * (an "Authorized License").  Except as set forth in an Authorized
+ * License, Broadcom grants no license (express or implied), right
+ * to use, or waiver of any kind with respect to the Software, and
+ * Broadcom expressly reserves all rights in and to the Software
+ * and all intellectual property rights therein.  IF YOU HAVE
+ * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+ * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+ * ALL USE OF THE SOFTWARE.  
+ *  
+ * Except as expressly set forth in the Authorized License,
+ *  
+ * 1.     This program, including its structure, sequence and organization,
+ * constitutes the valuable trade secrets of Broadcom, and you shall use
+ * all reasonable efforts to protect the confidentiality thereof,
+ * and to use this information only in connection with your use of
+ * Broadcom integrated circuit products.
+ *  
+ * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+ * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+ * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+ * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+ * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+ * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+ * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+ * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+ * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+ * 
+ * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+ * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+ * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+ * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+ * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+ * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
+ * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+ * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+ *
+ * socdiag: low-level diagnostics shell for Orion (SOC) driver.
+ */
+
+#include <unistd.h>
+#include <stdlib.h>
+
+#include <sal/core/boot.h>
+#include <sal/appl/sal.h>
+#include <sal/appl/config.h>
+#include <soc/debug.h>
+
+#include <appl/diag/system.h>
+
+#include <linux-bde.h>
+
+ibde_t *bde;
+
+/* The bus properties are (currently) the only system specific
+ * settings required. 
+ * These must be defined beforehand 
+ */
+
+#ifndef SYS_BE_PIO
+#error "SYS_BE_PIO must be defined for the target platform"
+#endif
+#ifndef SYS_BE_PACKET
+#error "SYS_BE_PACKET must be defined for the target platform"
+#endif
+#ifndef SYS_BE_OTHER
+#error "SYS_BE_OTHER must be defined for the target platform"
+#endif
+
+#if !defined(SYS_BE_PIO) || !defined(SYS_BE_PACKET) || !defined(SYS_BE_OTHER)
+#error "platform bus properties not defined."
+#endif
+
+int
+bde_create(void)
+{	
+    linux_bde_bus_t bus;
+    bus.be_pio = SYS_BE_PIO;
+    bus.be_packet = SYS_BE_PACKET;
+    bus.be_other = SYS_BE_OTHER;
+    return linux_bde_create(&bus, &bde);
+}
+
+/* PTin added: application control */
+int
+bde_destroy(void)
+{	
+    return linux_bde_destroy(bde);
+}
+
+
+/*
+ * These stubs are here for legacy compatability reasons. 
+ * They are used only by the diag/test code, not the driver, 
+ * so they are really not that important. 
+ */
+typedef void* pci_dev_t;
+
+int pci_dma_putw(pci_dev_t *dev, uint32 addr, uint32 data)
+{
+    *(uint32 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+int pci_dma_puth(pci_dev_t *dev, uint32 addr, uint16 data)
+{
+    *(uint16 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+int pci_dma_putb(pci_dev_t *dev, uint32 addr, uint8 data)
+{
+    *(uint8 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+uint32 pci_dma_getw(pci_dev_t *dev, uint32 addr)
+{
+  uint32 data;
+  data = *(uint32 *) INT_TO_PTR(addr);
+  return data;
+}
+
+uint16 pci_dma_geth(pci_dev_t *dev, uint32 addr)
+{
+  uint16 data;
+  data = *(uint16 *) INT_TO_PTR(addr);
+  return data;
+}
+
+uint8 pci_dma_getb(pci_dev_t *dev, uint32 addr)
+{
+  uint8 data;
+  data = *(uint8 *) INT_TO_PTR(addr);
+  return data;
+}
+
+int pci_print_all(void)
+{
+  return 0;
+}
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/Makefile esw_sdk_final/systems/linux/user/fastpath_common/Makefile
--- sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/linux/user/fastpath_common/Makefile	2018-01-10 11:53:52.743376000 +0000
@@ -0,0 +1,278 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.56 Broadcom SDK $
+# $Copyright: Copyright 2008 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+#
+
+override-target=unix-user
+
+all: check build
+
+ifeq ($(LINUX_MAKE_SHARED_LIB),1)
+libext = so.$(SHAREDLIBVER)
+else
+libext = a
+endif
+
+check:
+ifeq (,$(SDK))
+	@echo 'The $$SDK environment variable is not set'; exit 1
+else
+ifeq (,$(platform))
+	@echo 'Internal error: platform variable is not set'; exit 1
+else
+include $(SDK)/make/Make.config
+LOCALDIR=systems/linux/user/fastpath_common
+include $(SDK)/make/Make.depend
+kernel-override=linux-$(platform)
+ifdef LVL7_FIXUP
+KERN_BLDROOT=$(L7_OUTPUT)/$(kernel-override)$(bldroot_suffix)
+DEST_DIR=$(L7_OUTPUT_KMOD)
+else
+ifdef BLDCONFIG
+KERN_BLDROOT=$(SDK)/build/$(BLDCONFIG)/$(kernel-override)$(bldroot_suffix)
+else
+KERN_BLDROOT=$(SDK)/build/$(kernel-override)$(bldroot_suffix)
+endif
+endif # end LVL7_FIXUP
+endif
+endif
+
+ifeq (,$(kernel_version))
+kernel_version=2_4
+endif
+
+ifeq ($(kernel_version),2_6)
+ADD_TO_CFLAGS += -DLKM_2_6
+KOBJ=ko
+else
+ADD_TO_CFLAGS += -DLKM_2_4
+KOBJ=o
+endif
+
+ifneq (,$(TOOLS_DIR))
+override PATH := $(TOOLS_DIR):$(PATH)
+endif
+
+ifeq ($(DEST_DIR),)
+DEST_DIR=../$(platform)
+endif
+
+BCM = $(DEST_DIR)/bcm.$(targetplat)$(all_suffix)
+
+KERNEL_BDE=$(DEST_DIR)/linux-kernel-bde.$(KOBJ)
+USER_BDE=$(DEST_DIR)/linux-user-bde.$(KOBJ)
+
+NETSERVE = $(DEST_DIR)/netserve
+
+ifdef LVL7_FIXUP
+all_targets = kernel_modules user_libs $(KERNEL_BDE) $(USER_BDE)
+else
+all_targets = kernel_modules user_libs $(KERNEL_BDE) $(USER_BDE) $(BCM) $(NETSERVE)
+endif
+
+
+# Define targets to be built by default.
+build_targets = $(all_targets)
+
+ADD_TO_CFLAGS += -I$(SDK)/systems/linux/kernel/modules/include
+
+# Target specific
+ifndef LVL7_FIXUP
+ADD_TO_CFLAGS += -DLINUX_SAL_DMA_ALLOC_OVERRIDE
+#ADD_TO_CFLAGS += -DLINUX_SAL_USLEEP_OVERRIDE -DLINUX_SAL_SEM_OVERRIDE
+#ADD_TO_CFLAGS += -DLINUX_SAL_UDELAY_OVERRIDE
+else # Only override SEM
+ADD_TO_CFLAGS += -DLINUX_SAL_SEM_OVERRIDE
+endif
+
+# User BDE libraries
+ADD_TO_CFLAGS += -I$(SDK)/systems/bde/linux/include
+
+CFLAGS += $(ADD_TO_CFLAGS)
+
+ifdef ESW_CHIPS
+ESW_DIAG_LIBS = libdiag_esw.a 
+endif
+
+ifdef ROBO_CHIPS
+ROBO_DIAG_LIBS = libdiagrobo.a
+endif
+
+ifdef SBX_CHIPS
+SBX_DIAG_LIBS = \
+	libdiag_sbx.$(libext)
+endif
+
+DIAG_LIBS = \
+        libdiag.a       \
+        ${ESW_DIAG_LIBS} \
+        ${ROBO_DIAG_LIBS} \
+        ${SBX_DIAG_LIBS} \
+	$(COND_LIB_EAV_APPL) \
+	${COND_LIB_BCMX_DIAG} \
+        ${COND_LIB_TEST} \
+	$(COND_LIB_TCL) \
+	$(APPL_LIBS) \
+	$(COND_LIB_EDITLINE) \
+	$(COND_LIB_WBDM) \
+	$(COND_LIB_SMB) \
+	$(COND_LIB_PHY_DIAGNOSTICS) \
+	$(COND_LIB_BSAFE) \
+	libsal_appl.a libsal_appl_plat.a liblubde.a
+
+ACL_LIB = $(COND_LIB_ACL)
+BCM_LIBS = $(DIAG_LIBS) $(DRV_LIBS) $(ACL_LIB) $(COND_LIB_ETH_DRV)
+BCM_LIBS_BLD = $(addprefix $(BLDDIR)/,$(BCM_LIBS))
+
+BCM_LIBS_BLD += ${EXTERNAL_LIBS}
+ifdef LVL7_FIXUP
+  ifdef QUIET
+    entry_msg    = @${ECHO} Generating $(notdir $@)
+    OBJCOPY      := @$(OBJCOPY)
+  endif
+endif
+
+
+build:: $(BLDDIR)/.tree $(build_targets)
+
+kernel_modules:
+	$(MAKE) -C $(SDK)/systems/bde/linux/kernel kernel_version=$(kernel_version) OPT_CFLAGS="$(ADD_TO_CFLAGS)"
+	$(MAKE) -C $(SDK)/systems/bde/linux/user/kernel kernel_version=$(kernel_version) OPT_CFLAGS="$(ADD_TO_CFLAGS)"
+
+# LVL7_FIXUP :
+# 1. Added $(MAKE) -C $(SDK)/systems/linux/user/common -f Makefile.fastpath CFLAGS="$(CFLAGS)"
+# 2. Remove $(MAKE) -C $(SDK)/systems/drv CFLAGS="$(CFLAGS)"
+user_libs:
+	$(MAKE) -C $(SDK)/systems/linux/user/fastpath_common -f Makefile.fastpath CFLAGS="$(CFLAGS)"
+	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS)"
+	$(MAKE) -C $(SDK)/src CFLAGS="$(ADD_TO_CFLAGS)"
+ifdef BUILD_MACSEC
+	@${ECHO} "Building MACSEC libraries ...."
+	$(MAKE) -C ${MACSEC_HOME} MACSEC_CC="${CC}" MACSEC_LD="${LD}" MACSEC_AR="$(AR)" MACSEC_CFLAGS="${MACSEC_BUILD_FLAG}" MACSEC_TARGET="${targetbase}/${targetplat}/${platform}"
+endif
+
+# Broadcom Command Monitor
+
+# Build platform_defines.c to compile in config.bcm
+#
+ifndef NO_SAL_APPL
+PLATFORM_DEFINES_OBJ=${BLDDIR}/platform_defines.o
+${BLDDIR}/platform_defines.c: ${SDK}/rc/config.bcm
+	$(PERL) ${SDK}/tools/bcm2c_linux.pl ${SDK}/rc/config.bcm >$@
+${BLDDIR}/platform_defines.o: ${BLDDIR}/platform_defines.c
+	${CC} ${CFLAGS} -c $< -o $@
+else
+PLATFORM_DEFINES_OBJ=
+endif
+
+
+$(BCM): $(BCM).dbg
+	$(OBJCOPY) --strip-debug $< $@
+
+
+$(BCM).dbg: $(BLDDIR)/bdecreate.o $(BLDDIR)/version.o \
+	${PLATFORM_DEFINES_OBJ} $(BCM_LIBS_BLD) 
+	@rm -f $@	# Prevent core dump if currently running
+	$(CC) $(CFLAGS) -o $@ $(BLDDIR)/bdecreate.o $(BLDDIR)/version.o \
+	${PLATFORM_DEFINES_OBJ} $(BCM_LIBS_BLD) $(LDFLAGS)
+
+$(KERNEL_BDE): $(KERN_BLDROOT)/linux-kernel-bde.$(KOBJ)
+ifdef LVL7_FIXUP
+	$(entry_msg)
+endif
+	$(OBJCOPY) --strip-debug $< $@
+
+$(USER_BDE): $(KERN_BLDROOT)/linux-user-bde.$(KOBJ)
+ifdef LVL7_FIXUP
+	$(entry_msg)
+endif
+	$(OBJCOPY) --strip-debug $< $@
+
+$(NETSERVE): $(BLDDIR)/netserve.o
+	$(CC) $(CFLAGS) -o $@ $(BLDDIR)/netserve.o $(LDFLAGS) -lutil
+	$(OBJCOPY) --strip-debug $@
+
+
+
+
+# Build Version
+
+$(BLDDIR)/version.c: $(BLDDIR)/bdecreate.o $(BCM_LIBS_BLD)
+	$(PERL) $(SDK)/tools/version.pl > $@
+$(BLDDIR)/version.o: $(BLDDIR)/version.c
+	$(CC) $(CFLAGS) -c $< -o $@
+
+clean::
+	$(MAKE) -C $(SDK)/systems/bde/linux/kernel $@
+	$(MAKE) -C $(SDK)/systems/bde/linux/user/kernel $@
+	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS)" $@
+	$(MAKE) -C $(SDK)/src CFLAGS="$(CFLAGS)" $@
+	$(RM) $(BLDDIR)/version.c $(BLDDIR)/version.o
+	$(RM) $(BLDDIR)/platform_defines.c $(BLDDIR)/platform_defines.o
+	$(RM) $(BLDDIR)/bdecreate.o
+	$(RM) $(KERNEL_BDE) $(USER_BDE) $(BCM) $(BCM).dbg
+	$(RM) $(BLDDIR)/netserve.o
+	$(RM) $(NETSERVE)
+
+distclean:: clean
+
+.PHONY: variable
+
+#
+# Echo variable values used for configuration
+# usage: make VAR=CC variable
+#
+variable::
+	@echo $($(VAR))
+
+# Make.config defines remaining phony targets
+.PHONY: build kernel_modules user_libs
+
+# Output the CFLAGS used by the SDK
+#
+ifdef LVL7_FIXUP
+.PHONY: get_sdk_flags
+
+get_sdk_flags::
+	@echo "CFLAGS_SDK := $(filter -D%,$(CFLAGS))" >$(L7_OUT_SDK_FLAGS)
+endif
diff -rpN '--unified=6' sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/Makefile.fastpath esw_sdk_final/systems/linux/user/fastpath_common/Makefile.fastpath
--- sdk-xgs-robo-6.4.8/systems/linux/user/fastpath_common/Makefile.fastpath	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk_final/systems/linux/user/fastpath_common/Makefile.fastpath	2018-01-10 11:53:52.743376000 +0000
@@ -0,0 +1,17 @@
+#$Id: Makefile,v 1.3.4.1 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+#
+LOCALDIR = systems/linux/user/fastpath_common
+
+include ${SDK}/make/Make.config
+
+lib = liblusrcmmsys
+
+include ${SDK}/make/Make.lib
+
+include ${SDK}/make/Make.depend
+
