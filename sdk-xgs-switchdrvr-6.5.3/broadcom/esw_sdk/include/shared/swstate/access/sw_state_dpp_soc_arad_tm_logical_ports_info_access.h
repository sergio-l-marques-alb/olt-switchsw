/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_SOC_ARAD_TM_LOGICAL_PORTS_INFO_ACCESS_H_
#define _SHR_SW_STATE_DPP_SOC_ARAD_TM_LOGICAL_PORTS_INFO_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_set_cb)(
    int unit, int logical_ports_info_idx_0, CONST soc_logical_port_sw_db_t *logical_ports_info);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_get_cb)(
    int unit, int logical_ports_info_idx_0, soc_logical_port_sw_db_t *logical_ports_info);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_alloc */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_alloc_cb)(
    int unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_allocated */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_allocated_cb)(
    int unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_free */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_free_cb)(
    int unit);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_valid_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_valid_set_cb)(
    int unit, int logical_ports_info_idx_0, int valid);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_valid_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_valid_get_cb)(
    int unit, int logical_ports_info_idx_0, int *valid);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_valid_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_valid_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_set_cb)(
    int unit, int logical_ports_info_idx_0, int first_phy_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_get_cb)(
    int unit, int logical_ports_info_idx_0, int *first_phy_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_channel_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_channel_set_cb)(
    int unit, int logical_ports_info_idx_0, int channel);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_channel_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_channel_get_cb)(
    int unit, int logical_ports_info_idx_0, int *channel);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_channel_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_channel_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 protocol_offset);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *protocol_offset);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_flags_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_flags_set_cb)(
    int unit, int logical_ports_info_idx_0, int flags);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_flags_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_flags_get_cb)(
    int unit, int logical_ports_info_idx_0, int *flags);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_flags_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_flags_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_core_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_core_set_cb)(
    int unit, int logical_ports_info_idx_0, int core);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_core_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_core_get_cb)(
    int unit, int logical_ports_info_idx_0, int *core);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_core_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_core_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_set_cb)(
    int unit, int logical_ports_info_idx_0, soc_encap_mode_t encap_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_get_cb)(
    int unit, int logical_ports_info_idx_0, soc_encap_mode_t *encap_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 tm_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *tm_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 pp_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *pp_port);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_set_cb)(
    int unit, int logical_ports_info_idx_0, int priority_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_get_cb)(
    int unit, int logical_ports_info_idx_0, int *priority_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 base_q_pair);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *base_q_pair);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 multicast_offset);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *multicast_offset);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 egr_interface);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *egr_interface);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_set_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORTS_FTMH_EXT_OUTLIF outlif_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_get_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORTS_FTMH_EXT_OUTLIF *outlif_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_set_cb)(
    int unit, int logical_ports_info_idx_0, int src_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_get_cb)(
    int unit, int logical_ports_info_idx_0, int *src_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_set_cb)(
    int unit, int logical_ports_info_idx_0, int dst_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_get_cb)(
    int unit, int logical_ports_info_idx_0, int *dst_ext_en);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 first_header_size);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *first_header_size);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_set_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORT_HEADER_TYPE header_type_out);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_get_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORT_HEADER_TYPE *header_type_out);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_set_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORT_HEADER_TYPE header_type_in);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_get_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORT_HEADER_TYPE *header_type_in);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 pp_flags);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *pp_flags);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_set_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORTS_FC_TYPE fc_type);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_get_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_PORTS_FC_TYPE *fc_type);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 mirror_profile);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *mirror_profile);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_set_cb)(
    int unit, int logical_ports_info_idx_0, int is_tm_src_syst_port_ext_present);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_get_cb)(
    int unit, int logical_ports_info_idx_0, int *is_tm_src_syst_port_ext_present);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_set_cb)(
    int unit, int logical_ports_info_idx_0, int is_stag_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_get_cb)(
    int unit, int logical_ports_info_idx_0, int *is_stag_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_set_cb)(
    int unit, int logical_ports_info_idx_0, int is_snoop_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_get_cb)(
    int unit, int logical_ports_info_idx_0, int *is_snoop_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_set_cb)(
    int unit, int logical_ports_info_idx_0, int is_tm_ing_shaping_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_get_cb)(
    int unit, int logical_ports_info_idx_0, int *is_tm_ing_shaping_enabled);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_set_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_EGR_PORT_SHAPER_MODE shaper_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_get_cb)(
    int unit, int logical_ports_info_idx_0, SOC_TMC_EGR_PORT_SHAPER_MODE *shaper_mode);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_set */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_set_cb)(
    int unit, int logical_ports_info_idx_0, uint32 peer_tm_domain);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_get */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_get_cb)(
    int unit, int logical_ports_info_idx_0, uint32 *peer_tm_domain);

/* implemented by: sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_verify */
typedef int (*sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_verify_cb)(
    int unit, int logical_ports_info_idx_0);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_valid_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_valid_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_valid_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_valid_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_valid_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_channel_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_channel_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_channel_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_channel_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_channel_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_flags_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_flags_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_flags_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_flags_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_flags_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_core_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_core_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_core_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_core_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_core_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_verify_cb verify;
} sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_cbs_t;

typedef struct sw_state_dpp_soc_arad_tm_logical_ports_info_cbs_s {
    sw_state_dpp_soc_arad_tm_logical_ports_info_set_cb set;
    sw_state_dpp_soc_arad_tm_logical_ports_info_get_cb get;
    sw_state_dpp_soc_arad_tm_logical_ports_info_alloc_cb alloc;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_allocated_cb is_allocated;
    sw_state_dpp_soc_arad_tm_logical_ports_info_free_cb free;
    sw_state_dpp_soc_arad_tm_logical_ports_info_verify_cb verify;
    sw_state_dpp_soc_arad_tm_logical_ports_info_valid_cbs_t valid;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_phy_port_cbs_t first_phy_port;
    sw_state_dpp_soc_arad_tm_logical_ports_info_channel_cbs_t channel;
    sw_state_dpp_soc_arad_tm_logical_ports_info_protocol_offset_cbs_t protocol_offset;
    sw_state_dpp_soc_arad_tm_logical_ports_info_flags_cbs_t flags;
    sw_state_dpp_soc_arad_tm_logical_ports_info_core_cbs_t core;
    sw_state_dpp_soc_arad_tm_logical_ports_info_encap_mode_cbs_t encap_mode;
    sw_state_dpp_soc_arad_tm_logical_ports_info_tm_port_cbs_t tm_port;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_port_cbs_t pp_port;
    sw_state_dpp_soc_arad_tm_logical_ports_info_priority_mode_cbs_t priority_mode;
    sw_state_dpp_soc_arad_tm_logical_ports_info_base_q_pair_cbs_t base_q_pair;
    sw_state_dpp_soc_arad_tm_logical_ports_info_multicast_offset_cbs_t multicast_offset;
    sw_state_dpp_soc_arad_tm_logical_ports_info_egr_interface_cbs_t egr_interface;
    sw_state_dpp_soc_arad_tm_logical_ports_info_outlif_ext_en_cbs_t outlif_ext_en;
    sw_state_dpp_soc_arad_tm_logical_ports_info_src_ext_en_cbs_t src_ext_en;
    sw_state_dpp_soc_arad_tm_logical_ports_info_dst_ext_en_cbs_t dst_ext_en;
    sw_state_dpp_soc_arad_tm_logical_ports_info_first_header_size_cbs_t first_header_size;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_out_cbs_t header_type_out;
    sw_state_dpp_soc_arad_tm_logical_ports_info_header_type_in_cbs_t header_type_in;
    sw_state_dpp_soc_arad_tm_logical_ports_info_pp_flags_cbs_t pp_flags;
    sw_state_dpp_soc_arad_tm_logical_ports_info_fc_type_cbs_t fc_type;
    sw_state_dpp_soc_arad_tm_logical_ports_info_mirror_profile_cbs_t mirror_profile;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_src_syst_port_ext_present_cbs_t is_tm_src_syst_port_ext_present;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_stag_enabled_cbs_t is_stag_enabled;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_snoop_enabled_cbs_t is_snoop_enabled;
    sw_state_dpp_soc_arad_tm_logical_ports_info_is_tm_ing_shaping_enabled_cbs_t is_tm_ing_shaping_enabled;
    sw_state_dpp_soc_arad_tm_logical_ports_info_shaper_mode_cbs_t shaper_mode;
    sw_state_dpp_soc_arad_tm_logical_ports_info_peer_tm_domain_cbs_t peer_tm_domain;
} sw_state_dpp_soc_arad_tm_logical_ports_info_cbs_t;


int sw_state_dpp_soc_arad_tm_logical_ports_info_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_DPP_SOC_ARAD_TM_LOGICAL_PORTS_INFO_ACCESS_H_ */
