/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_BCM_ACCESS_H_
#define _SHR_SW_STATE_DPP_BCM_ACCESS_H_

#include <shared/swstate/access/sw_state_dpp_bcm__switch_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_glif_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_local_lif_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_alloc_mngr_utils_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_bfd_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_cosq_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_counter_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_failover_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_field_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_gport_mgmt_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_ipmc_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_l2_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_l3_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_lif_linked_list_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_linkbonding_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_mim_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_mirror_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_oam_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_policer_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_port_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_qos_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_rx_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_stack_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_stg_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_trill_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_trunk_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_vlan_access.h>
#include <shared/swstate/access/sw_state_dpp_bcm_vswitch_access.h>
/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

/* implemented by: sw_state_dpp_bcm_verify */
typedef int (*sw_state_dpp_bcm_verify_cb)(
    int unit);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_dpp_bcm_cbs_s {
    sw_state_dpp_bcm_verify_cb verify;
    sw_state_dpp_bcm_stg_cbs_t stg;
    sw_state_dpp_bcm_policer_cbs_t policer;
    sw_state_dpp_bcm_counter_cbs_t counter;
    sw_state_dpp_bcm_mirror_cbs_t mirror;
    sw_state_dpp_bcm_l3_cbs_t l3;
    sw_state_dpp_bcm_l2_cbs_t l2;
    sw_state_dpp_bcm_trunk_cbs_t trunk;
    sw_state_dpp_bcm_vlan_cbs_t vlan;
    sw_state_dpp_bcm_vswitch_cbs_t vswitch;
    sw_state_dpp_bcm_rx_cbs_t rx;
    sw_state_dpp_bcm_failover_cbs_t failover;
    sw_state_dpp_bcm_gport_mgmt_cbs_t gport_mgmt;
    sw_state_dpp_bcm_bfd_cbs_t bfd;
    sw_state_dpp_bcm_alloc_mngr_cbs_t alloc_mngr;
    sw_state_dpp_bcm_alloc_mngr_utils_cbs_t alloc_mngr_utils;
    sw_state_dpp_bcm_alloc_mngr_glif_cbs_t alloc_mngr_glif;
    sw_state_dpp_bcm_alloc_mngr_local_lif_cbs_t alloc_mngr_local_lif;
    sw_state_dpp_bcm_ipmc_cbs_t ipmc;
    sw_state_dpp_bcm__switch_cbs_t _switch;
    sw_state_dpp_bcm_port_cbs_t port;
    sw_state_dpp_bcm_trill_cbs_t trill;
    sw_state_dpp_bcm_stack_cbs_t stack;
    sw_state_dpp_bcm_qos_cbs_t qos;
    sw_state_dpp_bcm_mim_cbs_t mim;
    sw_state_dpp_bcm_oam_cbs_t oam;
    sw_state_dpp_bcm_cosq_cbs_t cosq;
    sw_state_dpp_bcm_field_cbs_t field;
    sw_state_dpp_bcm_lif_linked_list_cbs_t lif_linked_list;
    sw_state_dpp_bcm_linkbonding_cbs_t linkbonding;
} sw_state_dpp_bcm_cbs_t;


int sw_state_dpp_bcm_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_DPP_BCM_ACCESS_H_ */
