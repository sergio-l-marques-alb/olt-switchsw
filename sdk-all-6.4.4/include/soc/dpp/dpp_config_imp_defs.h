/*
 * $Id: low_level_defines.csv,v 1.1.2.5 Broadcom SDK $
 * 
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * This file is auto-generated by autoCoder
 * DO NOT EDIT THIS FILE!
 *
 */
#ifndef DPP_CONFIG_IMP_DEFS
#define DPP_CONFIG_IMP_DEFS

#include <soc/error.h>
#include <soc/dcmn/error.h>
#include <soc/drv.h>
#include <sal/core/alloc.h>
#include <soc/dpp/SAND/Utils/sand_integer_arithmetic.h>

#include <soc/dpp/soc_dpp_arad_config_imp_defs.h>
#include <soc/dpp/soc_dpp_petrab_config_imp_defs.h>
#include <soc/dpp/soc_dpp_jericho_config_imp_defs.h>
#include <soc/dpp/soc_dpp_ardon_config_imp_defs.h>

/************************************/
/*          Structs define          */
/************************************/

/* Implementation-specific defines */

/*      Configuration defines       */
typedef struct soc_dpp_implementation_defines_s {
    uint32     soc_dpp_imp_defs_nof_channelized_interfaces;               /*  Number of channelized interfaces in a core */
    uint32     soc_dpp_imp_defs_nof_special_interfaces;                   /* OLP/OAMP/CPU/RCY per core */
     uint32    soc_dpp_imp_defs_nof_non_channelized_interfaces;           /*  Number of channelized interfaces in a core */
    uint32     soc_dpp_imp_defs_nof_core_interfaces;                      /* Number of interfaces in a core */
    uint32     soc_dpp_imp_defs_nof_fec_banks;                            /* to be deleted */
    uint32     soc_dpp_imp_defs_ihp_stp_table_nof_longs;                  /* Number of longs of the memory IHP_STP_TABLE */
    uint32     soc_dpp_imp_defs_ihb_pinfo_pmf_nof_longs;                  /* Number of longs of the memory IHB_PINFO_PMF */
    uint32     soc_dpp_imp_defs_ihb_pmf_program_selection_cam_nof_longs;  /* Number of longs of the memory IHB_PMF_PROGRAM_SELECTION_CAM */
    uint32     soc_dpp_imp_defs_ihb_fec_ecmp_nof_longs;                   /* Number of longs of the memory IHB_FEC_ECMP */
    uint32     soc_dpp_imp_defs_egq_ppct_nof_longs;                       /* Number of longs of the memory EGQ_PPCT */
    uint32     soc_dpp_imp_defs_epni_prge_program_selection_cam_nof_longs; /* Number of longs of the memory EPNI_PRGE_PROGRAM_SELECTION_CAM */
    uint32     soc_dpp_imp_defs_ihp_lif_accessed_nof_lines;               /* Number of lines of the memory IHP_LIF_ACCESSED */
    uint32     soc_dpp_imp_defs_ihp_flp_program_selection_cam_nof_longs;  /* Number of longs of the memory IHP_FLP_PROGRAM_SELECTION_CAM */
    uint32     soc_dpp_imp_defs_ihp_flp_lookups_nof_longs;                /* Number of longs of the memory IHP_FLP_LOOKUPS */
    uint32     soc_dpp_imp_defs_ihb_ptc_info_nof_longs;                   /* Number of longs of the memory IHB_PTC_INFO */
    uint32     soc_dpp_imp_defs_mact_lif_base_length;                     /* The length of the field MACT_LIF_BASE in the register IHP_MACT_COUNTER_DB_LIF_PTR_RANGE_MAP */
    uint32     soc_dpp_imp_defs_ppdb_large_em_flush_db_nof_longs;         /* Number of longs of the memory PPDB_LARGE_EM_FLUSH_DB */
    uint32     soc_dpp_imp_defs_mesh_topology_register_config_4_val;      /* value of field config_4 in register MESH_TOPOLGY_MESH_TOPOLOGY */
    uint32     soc_dpp_imp_defs_egr_delete_fifo_almost_full_mc_low_prio;  /* Delete Fifo drop MC low */
    uint32     soc_dpp_imp_defs_egr_delete_fifo_almost_full_mc;           /* Delete Fifo drop MC */
    uint32     soc_dpp_imp_defs_egr_delete_fifo_almost_full_all;          /* Delete Fifo drop all */
    uint32     soc_dpp_imp_defs_egr_delete_fifo_threshold_max;            /* Max delete FIFO value */
    uint32     soc_dpp_imp_defs_outlif_profile_nof_bits;                  /* Number of bits used four OutLif Profile */
    uint32     soc_dpp_imp_defs_dsp_event_route_entry_nof_bits;           /* Number of  bits used for DSP event route entry */
    uint32     soc_dpp_imp_defs_mirror_snoop_destination_queue_encoding;  /* queue mask for for IRR_SNOOP_MIRROR_DEST_TABLE   format endencoding:16:23 startencoding 8:15 encoding value 0:7 */
    uint32     soc_dpp_imp_defs_mirror_snoop_destination_multicast_encoding; /* multicast mask for for IRR_SNOOP_MIRROR_DEST_TABLE  format endencoding:16:23 startencoding 8:15 encoding value 0:7 */
    uint32     soc_dpp_imp_defs_mirror_snoop_destination_sys_phy_port_encoding; /* sys phy port mask for for IRR_SNOOP_MIRROR_DEST_TABLE format endencoding:16:23 startencoding 8:15 encoding value 0:7 */
    uint32     soc_dpp_imp_defs_mirror_snoop_destination_lag_encoding;    /* lag mask for for IRR_SNOOP_MIRROR_DEST_TABLE format endencoding:16:23 startencoding 8:15 encoding value 0:7 */
    uint32     soc_dpp_imp_defs_cmd_ipt_snp_mir_cmd_map_snoop_offset;     /* SNP_MIR_CMD_MAP should contain 16 entries for mirroring and 16 for snoop. In Arad, this table is 64 entries large. This bug was fixed in Jericho. */
    uint32     soc_dpp_imp_defs_mirror_snoop_dest_tm_table_offset;        /* mirror offset for mirror_snoop_dest/tm tables */
    uint32     soc_dpp_imp_defs_flp_instructions_nof;                     /* Number of FLP instructions */
    uint32     soc_dpp_imp_defs_pp_eg_mirror_profile_table_bits_per_profile; /* eg mirror profile table bit width per profile */
    uint32     soc_dpp_imp_defs_mirror_probability_bits;                  /* 16 */
    uint32     soc_dpp_imp_defs_oam_id_nof_bit;                           /* size in bits of OAM-ID exiting the OEMB table */
} soc_dpp_implementation_defines_t;

extern soc_dpp_implementation_defines_t *soc_dpp_implementation_defines[SOC_MAX_NUM_DEVICES];

/************************************/
/*          Macros Define           */
/************************************/


/*         soc_dpp_implementation_defines macros            */
#define SOC_DPP_IMP_DEFS_SET(unit, dpp_define, value)    {soc_dpp_implementation_defines[unit]->soc_dpp_imp_defs_##dpp_define = value;}
#define SOC_DPP_IMP_DEFS_GET(unit, dpp_define)           ( soc_dpp_implementation_defines[unit]->soc_dpp_imp_defs_##dpp_define )
#define SOC_DPP_IMP_DEFS_MAX2(_a_, _b_)    (_a_ > _b_ ? _a_ : _b_)
#define SOC_DPP_IMP_DEFS_MAX4(x0,x1,x2,x3)                    SOC_DPP_IMP_DEFS_MAX2(SOC_DPP_IMP_DEFS_MAX2(SOC_DPP_IMP_DEFS_MAX2(x0, x1),x2),x3)
#define SOC_DPP_IMP_DEFS_MAX(dpp_define)                 SOC_DPP_IMP_DEFS_MAX4(SOC_DPP_GET_ARDON(dpp_define),SOC_DPP_GET_JERICHO(dpp_define),SOC_DPP_GET_PETRAB(dpp_define),SOC_DPP_GET_ARAD(dpp_define))

int soc_dpp_implementation_defines_init(int unit);
int soc_dpp_implementation_defines_deinit(int unit);

#endif /* DPP_CONFIG_IMP_DEFS */
