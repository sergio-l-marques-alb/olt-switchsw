/** \file dnxc_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNXC_TYPES_H__
#define __DNXC_TYPES_H__

#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
/*
 * ENUMs
 */

/**
 * device/link isolation status
 */
typedef enum {
    /**
     * device/link activated
     */
    soc_dnxc_isolation_status_active = 0,
    /**
     * device/link isolated
     */
    soc_dnxc_isolation_status_isolated = 1
} soc_dnxc_isolation_status_t;

/*
 * STRUCTs
 */

typedef struct {
    /**
     * lane is mapped to this serdes rx or serdes is mapped to this lane rx
     */
    int rx_id;
    /**
     * lane is mapped to this serdes tx or serdes is mapped to this lane tx
     */
    int tx_id;
} soc_dnxc_lane_map_db_map_t;

typedef struct {
    /**
     * nof lanes represented by the map database
     */
    int map_size;
    /**
     * defines serdes rx and tx for each lane
     */
    soc_dnxc_lane_map_db_map_t* lane2serdes;
    /**
     * defines lane rx and tx for each serdes
     */
    soc_dnxc_lane_map_db_map_t* serdes2lane;
} soc_dnxc_lane_map_db_t;


#endif /* __DNXC_TYPES_H__ */
