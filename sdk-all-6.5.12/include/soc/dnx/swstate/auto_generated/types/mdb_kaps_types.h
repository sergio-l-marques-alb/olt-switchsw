/** \file mdb_kaps_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __MDB_KAPS_TYPES_H__
#define __MDB_KAPS_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
#include <soc/kbp/alg_kbp/include/db.h>
#include <soc/kbp/alg_kbp/include/ad.h>
#include <soc/kbp/alg_kbp/include/instruction.h>
/*
 * MACROs
 */

/**
 * Replace with appropriate shared define
 */
#define MDB_MAX_NOF_CORES 2

/**
 * Only a single search instruction in MDB KAPS
 */
#define MDB_LPM_NOF_INSTRUCTIONS 1

/*
 * TYPEDEFs
 */

typedef struct kbp_db * mdb_kaps_db_t_p;

typedef struct kbp_ad_db * mdb_kaps_ad_db_t_p;

typedef struct kbp_instruction * mdb_kaps_instruction_t_p;

/*
 * ENUMs
 */

/**
 * An enum that represents the two DB types of KAPS(LPM)
 */
typedef enum {
    /**
     * Private KAPS DB usually associated with vrf!=0
     */
    MDB_KAPS_IP_PRIVATE_DB_ID = 0,
    /**
     * Public KAPS DB usually associated with vrf==0
     */
    MDB_KAPS_IP_PUBLIC_DB_ID = 1,
    MDB_KAPS_IP_NOF_DB
} mdb_kaps_ip_db_id_e;

/*
 * STRUCTs
 */

/**
 * A struct used to hold the KAPS(LPM) instruction handle
 */
typedef struct {
    mdb_kaps_instruction_t_p inst_p;
} mdb_kaps_instruction_handles_t;

/**
 * A struct used to hold the KAPS(LPM) database (DB) and associated data (AD) database handles
 */
typedef struct {
    mdb_kaps_db_t_p db_p;
    mdb_kaps_ad_db_t_p ad_db_p;
    uint8 is_valid;
} mdb_kaps_db_handles_t;

/**
 * MDB KAPS related sw state
 */
typedef struct {
    mdb_kaps_db_handles_t db_info[MDB_KAPS_IP_NOF_DB];
    mdb_kaps_instruction_handles_t search_instruction_info[MDB_LPM_NOF_INSTRUCTIONS];
} mdb_kaps_sw_state_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __MDB_KAPS_TYPES_H__ */
