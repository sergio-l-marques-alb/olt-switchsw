/** \file trunk_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __TRUNK_TYPES_H__
#define __TRUNK_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
/*
 * STRUCTs
 */

/**
 * information about a member in a trunk group
 */
typedef struct {
    /**
     * system port of member
     */
    uint32 system_port;
    /**
     * member flags
     */
    uint32 flags;
    /**
     * index of the member inside the trunk group
     */
    int index;
} trunk_group_member_info_t;

/**
 * information about a trunk group
 */
typedef struct {
    /**
     * port selection criteria for trunk group
     */
    int psc;
    /**
     * psc profile id - only some psc use profiles
     */
    int psc_profile_id;
    /**
     * members in trunk group
     */
    trunk_group_member_info_t* members;
    /**
     * number of members in group
     */
    int nof_members;
    /**
     * index to the last member added, this is to optimize the action of finding the next free member.
     */
    int last_member_added_index;
    /**
     * indicates that this trunk group is used
     */
    int in_use;
    /**
     * trunk pp ports, one for each core
     */
    uint32* pp_ports;
    /**
     * flags that were used to create this group
     */
    uint32 flags;
} trunk_group_info_t;

/**
 * information about trunk pool
 */
typedef struct {
    /**
     * groups in trunk bank
     */
    trunk_group_info_t* groups;
} trunk_pool_info_t;

/**
 * trunk system port entry information
 */
typedef struct {
    /**
     * trunk ID that this entry is connected to, value of -1 means that this entry is not connected to any trunk
     */
    int trunk_id;
    /**
     * similar to member flags
     */
    uint32 flags;
} trunk_system_port_entry_t;

/**
 * trunk system port db, connects between system ports to certain trunk attributes
 */
typedef struct {
    /**
     * an array of all system ports that is used to mark for each system if it is member of a lag, if so then which, in addition what flags was this member added to the lag with, and what is its status (dont_care/added_to_trunk/pending_to_be_added
     */
    trunk_system_port_entry_t* trunk_system_port_entries;
} trunk_system_port_db_t;

/**
 * information about trunk
 */
typedef struct {
    /**
     * pools in trunk module
     */
    trunk_pool_info_t* pools;
    /**
     * system port db that contains all the system ports in the system and connects them to trunks, used to search in an efficient way and to support basic roll-back capabilities
     */
    trunk_system_port_db_t trunk_system_port_db;
} trunk_info_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __TRUNK_TYPES_H__ */
