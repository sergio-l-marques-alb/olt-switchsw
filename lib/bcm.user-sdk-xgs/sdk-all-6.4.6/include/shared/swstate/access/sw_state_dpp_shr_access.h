/* $Id: $
 * 
 * $Copyright: Copyright 2015 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_SHR_ACCESS_H_
#define _SHR_SW_STATE_DPP_SHR_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

/* implemented by: sw_state_dpp_shr_htbls_hash_table_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_cb)(
    int _unit, int hash_table_ptr_arr_idx);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_ptr_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_ptr_alloc_cb)(
    int _unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_ptr_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_ptr_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_max_num_entries_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_max_num_entries_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int max_num_entries);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_max_num_entries_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_max_num_entries_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int *max_num_entries);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_key_size_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_key_size_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int key_size);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_key_size_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_key_size_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int *key_size);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_data_size_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_data_size_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int data_size);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_data_size_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_data_size_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int *data_size);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_num_free_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_num_free_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int num_free);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_num_free_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_num_free_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int *num_free);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free_arr_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_arr_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int free_arr_ptr_arr_idx, int free_arr);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free_arr_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_arr_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int free_arr_ptr_arr_idx, int *free_arr);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free_arr_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_arr_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free_arr_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_arr_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_free_arr_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_free_arr_free_cb)(
    int _unit, int hash_table_ptr_arr_idx_1);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int next_ptr_arr_idx, int next);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int next_ptr_arr_idx, int *next);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_free_cb)(
    int _unit, int hash_table_ptr_arr_idx_1);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int datas_ptr_arr_idx, uint8 datas);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int datas_ptr_arr_idx, uint8 *datas);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_free_cb)(
    int _unit, int hash_table_ptr_arr_idx_1);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int keys_ptr_arr_idx, uint8 keys);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int keys_ptr_arr_idx, uint8 *keys);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_free_cb)(
    int _unit, int hash_table_ptr_arr_idx_1);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_table_set */
typedef int (*sw_state_dpp_shr_htbls_hash_table_table_set_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int table_ptr_arr_idx, int table);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_table_get */
typedef int (*sw_state_dpp_shr_htbls_hash_table_table_get_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int table_ptr_arr_idx, int *table);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_table_alloc */
typedef int (*sw_state_dpp_shr_htbls_hash_table_table_alloc_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_table_is_allocated */
typedef int (*sw_state_dpp_shr_htbls_hash_table_table_is_allocated_cb)(
    int _unit, int hash_table_ptr_arr_idx_1, uint8 *is_allocated);

/* implemented by: sw_state_dpp_shr_htbls_hash_table_table_free */
typedef int (*sw_state_dpp_shr_htbls_hash_table_table_free_cb)(
    int _unit, int hash_table_ptr_arr_idx_1);

/* implemented by: sw_state_dpp_shr_htbls_nof_htbl_used_set */
typedef int (*sw_state_dpp_shr_htbls_nof_htbl_used_set_cb)(
    int _unit, int nof_htbl_used);

/* implemented by: sw_state_dpp_shr_htbls_nof_htbl_used_get */
typedef int (*sw_state_dpp_shr_htbls_nof_htbl_used_get_cb)(
    int _unit, int *nof_htbl_used);

/* implemented by: sw_state_dpp_shr_htbls_max_nof_htbls_set */
typedef int (*sw_state_dpp_shr_htbls_max_nof_htbls_set_cb)(
    int _unit, int max_nof_htbls);

/* implemented by: sw_state_dpp_shr_htbls_max_nof_htbls_get */
typedef int (*sw_state_dpp_shr_htbls_max_nof_htbls_get_cb)(
    int _unit, int *max_nof_htbls);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_dpp_shr_htbls_hash_table_max_num_entries_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_max_num_entries_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_max_num_entries_get_cb get;
} sw_state_dpp_shr_htbls_hash_table_max_num_entries_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_key_size_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_key_size_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_key_size_get_cb get;
} sw_state_dpp_shr_htbls_hash_table_key_size_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_data_size_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_data_size_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_data_size_get_cb get;
} sw_state_dpp_shr_htbls_hash_table_data_size_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_num_free_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_num_free_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_num_free_get_cb get;
} sw_state_dpp_shr_htbls_hash_table_num_free_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_free_arr_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_free_arr_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_free_arr_get_cb get;
    sw_state_dpp_shr_htbls_hash_table_free_arr_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_free_arr_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_free_arr_free_cb free;
} sw_state_dpp_shr_htbls_hash_table_free_arr_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_get_cb get;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_free_cb free;
} sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_get_cb get;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_free_cb free;
} sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_get_cb get;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_free_cb free;
} sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_entry_arrays_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_next_cbs_t next;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_datas_cbs_t datas;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_keys_cbs_t keys;
} sw_state_dpp_shr_htbls_hash_table_entry_arrays_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_table_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_table_set_cb set;
    sw_state_dpp_shr_htbls_hash_table_table_get_cb get;
    sw_state_dpp_shr_htbls_hash_table_table_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_table_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_table_free_cb free;
} sw_state_dpp_shr_htbls_hash_table_table_cbs_t;

typedef struct sw_state_dpp_shr_htbls_hash_table_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_alloc_cb alloc;
    sw_state_dpp_shr_htbls_hash_table_is_allocated_cb is_allocated;
    sw_state_dpp_shr_htbls_hash_table_free_cb free;
    sw_state_dpp_shr_htbls_hash_table_ptr_alloc_cb ptr_alloc;
    sw_state_dpp_shr_htbls_hash_table_ptr_free_cb ptr_free;
    sw_state_dpp_shr_htbls_hash_table_max_num_entries_cbs_t max_num_entries;
    sw_state_dpp_shr_htbls_hash_table_key_size_cbs_t key_size;
    sw_state_dpp_shr_htbls_hash_table_data_size_cbs_t data_size;
    sw_state_dpp_shr_htbls_hash_table_num_free_cbs_t num_free;
    sw_state_dpp_shr_htbls_hash_table_free_arr_cbs_t free_arr;
    sw_state_dpp_shr_htbls_hash_table_entry_arrays_cbs_t entry_arrays;
    sw_state_dpp_shr_htbls_hash_table_table_cbs_t table;
} sw_state_dpp_shr_htbls_hash_table_cbs_t;

typedef struct sw_state_dpp_shr_htbls_nof_htbl_used_cbs_s {
    sw_state_dpp_shr_htbls_nof_htbl_used_set_cb set;
    sw_state_dpp_shr_htbls_nof_htbl_used_get_cb get;
} sw_state_dpp_shr_htbls_nof_htbl_used_cbs_t;

typedef struct sw_state_dpp_shr_htbls_max_nof_htbls_cbs_s {
    sw_state_dpp_shr_htbls_max_nof_htbls_set_cb set;
    sw_state_dpp_shr_htbls_max_nof_htbls_get_cb get;
} sw_state_dpp_shr_htbls_max_nof_htbls_cbs_t;

typedef struct sw_state_dpp_shr_htbls_cbs_s {
    sw_state_dpp_shr_htbls_hash_table_cbs_t hash_table;
    sw_state_dpp_shr_htbls_nof_htbl_used_cbs_t nof_htbl_used;
    sw_state_dpp_shr_htbls_max_nof_htbls_cbs_t max_nof_htbls;
} sw_state_dpp_shr_htbls_cbs_t;

typedef struct sw_state_dpp_shr_cbs_s {
    sw_state_dpp_shr_htbls_cbs_t htbls;
} sw_state_dpp_shr_cbs_t;


int sw_state_dpp_shr_access_cb_init(int _unit);

#endif /* _SHR_SW_STATE_DPP_SHR_ACCESS_H_ */
