/* $Id: $
 * 
 * $Copyright: Copyright 2015 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_SOC_ARAD_TM_KBP_FRWRD_IP_ACCESS_H_
#define _SHR_SW_STATE_DPP_SOC_ARAD_TM_KBP_FRWRD_IP_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_alloc */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_is_allocated */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_free */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_free_cb)(
    int _unit);
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_set */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_set_cb)(
    int _unit, int location_tbl_ptr_arr_idx, CONST ARAD_SW_KBP_HANDLE *location_tbl);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_get */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_get_cb)(
    int _unit, int location_tbl_ptr_arr_idx, ARAD_SW_KBP_HANDLE *location_tbl);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_alloc */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_alloc_cb)(
    int _unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_is_allocated */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_free */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_free_cb)(
    int _unit);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_set */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_set_cb)(
    int _unit, int location_tbl_ptr_arr_idx, kbp_entry_handle db_entry);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_get */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_get_cb)(
    int _unit, int location_tbl_ptr_arr_idx, kbp_entry_handle *db_entry);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_set */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_set_cb)(
    int _unit, uint8 kbp_cache_mode);
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
/* implemented by: sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_get */
typedef int (*sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_get_cb)(
    int _unit, uint8 *kbp_cache_mode);
#endif
#endif

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
typedef struct sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_cbs_s {
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_set_cb set;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_get_cb get;
#endif
} sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_cbs_t;
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
typedef struct sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_cbs_s {
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_set_cb set;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_get_cb get;
#endif
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_alloc_cb alloc;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_is_allocated_cb is_allocated;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_free_cb free;
#endif
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_db_entry_cbs_t db_entry;
#endif
} sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_cbs_t;

#endif
#endif
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
typedef struct sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_cbs_s {
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_set_cb set;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_get_cb get;
#endif
} sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_cbs_t;
#endif
#endif

#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
typedef struct sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_cbs_s {
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_alloc_cb alloc;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_is_allocated_cb is_allocated;
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_free_cb free;
#endif
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_location_tbl_cbs_t location_tbl;
#endif
#if defined(INCLUDE_KBP)&&!defined(BCM_88030)
    sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_kbp_cache_mode_cbs_t kbp_cache_mode;
#endif
} sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_cbs_t;

#endif
#endif

int sw_state_dpp_soc_arad_tm_kbp_frwrd_ip_access_cb_init(int _unit);

#endif /* _SHR_SW_STATE_DPP_SOC_ARAD_TM_KBP_FRWRD_IP_ACCESS_H_ */
