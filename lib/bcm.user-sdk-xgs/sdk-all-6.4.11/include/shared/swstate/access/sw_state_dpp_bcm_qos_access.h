/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_BCM_QOS_ACCESS_H_
#define _SHR_SW_STATE_DPP_BCM_QOS_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

/* implemented by: sw_state_dpp_bcm_qos_alloc */
typedef int (*sw_state_dpp_bcm_qos_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_free */
typedef int (*sw_state_dpp_bcm_qos_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_verify */
typedef int (*sw_state_dpp_bcm_qos_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_init_set */
typedef int (*sw_state_dpp_bcm_qos_init_set_cb)(
    int _unit, int init);

/* implemented by: sw_state_dpp_bcm_qos_init_get */
typedef int (*sw_state_dpp_bcm_qos_init_get_cb)(
    int _unit, int *init);

/* implemented by: sw_state_dpp_bcm_qos_init_verify */
typedef int (*sw_state_dpp_bcm_qos_init_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_free */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_free_cb)(
    int _unit);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_set */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_set_cb)(
    int _unit, int _bit_num);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_clear_cb)(
    int _unit, int _bit_num);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_get */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_negate_cb)(
    int _unit, int _first, int _count);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_clear_cb)(
    int _unit, int _first, int _count);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_set_cb)(
    int _unit, int _first, int _count);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* BCM_88660*/ 

#ifdef BCM_88660
/* implemented by: sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);
#endif /* BCM_88660*/ 

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_set */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_set_cb)(
    int _unit, int ing_cos_opcode_flags_idx_0, int ing_cos_opcode_flags);

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_get */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_get_cb)(
    int _unit, int ing_cos_opcode_flags_idx_0, int *ing_cos_opcode_flags);

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_alloc */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_alloc_cb)(
    int _unit, int nof_instances_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_free */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_ing_cos_opcode_flags_verify */
typedef int (*sw_state_dpp_bcm_qos_ing_cos_opcode_flags_verify_cb)(
    int _unit, int ing_cos_opcode_flags_idx_0);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_set_cb)(
    int _unit, int egr_pcp_vlan_dscp_exp_profile_id);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_get_cb)(
    int _unit, int *egr_pcp_vlan_dscp_exp_profile_id);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_alloc */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_verify */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_set */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_set_cb)(
    int _unit, int egr_pcp_vlan_dscp_exp_enable);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_get */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_get_cb)(
    int _unit, int *egr_pcp_vlan_dscp_exp_enable);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_alloc */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_free */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_verify */
typedef int (*sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_set */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_set_cb)(
    int _unit, int egr_remark_encap_enable);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_get */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_get_cb)(
    int _unit, int *egr_remark_encap_enable);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_alloc */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_free */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_egr_remark_encap_enable_verify */
typedef int (*sw_state_dpp_bcm_qos_egr_remark_encap_enable_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_set */
typedef int (*sw_state_dpp_bcm_qos_dp_max_set_cb)(
    int _unit, int dp_max);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_get */
typedef int (*sw_state_dpp_bcm_qos_dp_max_get_cb)(
    int _unit, int *dp_max);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_alloc */
typedef int (*sw_state_dpp_bcm_qos_dp_max_alloc_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_is_allocated */
typedef int (*sw_state_dpp_bcm_qos_dp_max_is_allocated_cb)(
    int _unit, uint8 *is_allocated);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_free */
typedef int (*sw_state_dpp_bcm_qos_dp_max_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_dp_max_verify */
typedef int (*sw_state_dpp_bcm_qos_dp_max_verify_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_alloc_bitmap */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_alloc_bitmap_cb)(
    int _unit, int _nof_bits_to_alloc);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_free */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_free_cb)(
    int _unit);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_set */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_set_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_clear */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_clear_cb)(
    int _unit, int _bit_num);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_get */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_get_cb)(
    int _unit, int _bit_num, uint8* result);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_read */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_read_cb)(
    int _unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_write */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_write_cb)(
    int _unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_and */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_and_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_or */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_or_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_xor */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_xor_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_remove */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_remove_cb)(
    int _unit, int _first, int _count, SHR_BITDCL *input_bmp);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_negate */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_negate_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_clear */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_clear_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_set */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_set_cb)(
    int _unit, int _first, int _count);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_null */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_null_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_test */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_test_cb)(
    int _unit, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_eq */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_eq_cb)(
    int _unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);

/* implemented by: sw_state_dpp_bcm_qos_opcode_bmp_bit_range_count */
typedef int (*sw_state_dpp_bcm_qos_opcode_bmp_bit_range_count_cb)(
    int _unit, int _first, int _range, int *result);

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/

typedef struct sw_state_dpp_bcm_qos_init_cbs_s {
    sw_state_dpp_bcm_qos_init_set_cb set;
    sw_state_dpp_bcm_qos_init_get_cb get;
    sw_state_dpp_bcm_qos_init_verify_cb verify;
} sw_state_dpp_bcm_qos_init_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_cbs_s {
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_free_cb free;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_cbs_t;

#ifdef BCM_88660
typedef struct sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_cbs_s {
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_alloc_bitmap_cb alloc_bitmap;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_free_cb free;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_set_cb bit_set;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_clear_cb bit_clear;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_get_cb bit_get;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_read_cb bit_range_read;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_write_cb bit_range_write;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_and_cb bit_range_and;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_or_cb bit_range_or;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_xor_cb bit_range_xor;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_remove_cb bit_range_remove;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_negate_cb bit_range_negate;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_clear_cb bit_range_clear;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_set_cb bit_range_set;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_null_cb bit_range_null;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_test_cb bit_range_test;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_eq_cb bit_range_eq;
#endif /* BCM_88660*/ 
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_bit_range_count_cb bit_range_count;
#endif /* BCM_88660*/ 
} sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_cbs_t;
#endif /* BCM_88660*/ 

typedef struct sw_state_dpp_bcm_qos_ing_cos_opcode_flags_cbs_s {
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_set_cb set;
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_get_cb get;
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_alloc_cb alloc;
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_free_cb free;
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_verify_cb verify;
} sw_state_dpp_bcm_qos_ing_cos_opcode_flags_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_set_cb set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_get_cb get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_alloc_cb alloc;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_verify_cb verify;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_cbs_s {
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_set_cb set;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_get_cb get;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_alloc_cb alloc;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_free_cb free;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_verify_cb verify;
} sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_cbs_t;

typedef struct sw_state_dpp_bcm_qos_egr_remark_encap_enable_cbs_s {
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_set_cb set;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_get_cb get;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_alloc_cb alloc;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_free_cb free;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_verify_cb verify;
} sw_state_dpp_bcm_qos_egr_remark_encap_enable_cbs_t;

typedef struct sw_state_dpp_bcm_qos_dp_max_cbs_s {
    sw_state_dpp_bcm_qos_dp_max_set_cb set;
    sw_state_dpp_bcm_qos_dp_max_get_cb get;
    sw_state_dpp_bcm_qos_dp_max_alloc_cb alloc;
    sw_state_dpp_bcm_qos_dp_max_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_dp_max_free_cb free;
    sw_state_dpp_bcm_qos_dp_max_verify_cb verify;
} sw_state_dpp_bcm_qos_dp_max_cbs_t;

typedef struct sw_state_dpp_bcm_qos_opcode_bmp_cbs_s {
    sw_state_dpp_bcm_qos_opcode_bmp_alloc_bitmap_cb alloc_bitmap;
    sw_state_dpp_bcm_qos_opcode_bmp_free_cb free;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_set_cb bit_set;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_clear_cb bit_clear;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_get_cb bit_get;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_read_cb bit_range_read;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_write_cb bit_range_write;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_and_cb bit_range_and;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_or_cb bit_range_or;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_xor_cb bit_range_xor;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_remove_cb bit_range_remove;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_negate_cb bit_range_negate;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_clear_cb bit_range_clear;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_set_cb bit_range_set;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_null_cb bit_range_null;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_test_cb bit_range_test;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_eq_cb bit_range_eq;
    sw_state_dpp_bcm_qos_opcode_bmp_bit_range_count_cb bit_range_count;
} sw_state_dpp_bcm_qos_opcode_bmp_cbs_t;

typedef struct sw_state_dpp_bcm_qos_cbs_s {
    sw_state_dpp_bcm_qos_alloc_cb alloc;
    sw_state_dpp_bcm_qos_is_allocated_cb is_allocated;
    sw_state_dpp_bcm_qos_free_cb free;
    sw_state_dpp_bcm_qos_verify_cb verify;
    sw_state_dpp_bcm_qos_init_cbs_t init;
    sw_state_dpp_bcm_qos_ing_lif_cos_mpls_bitmap_cbs_t ing_lif_cos_mpls_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv4_bitmap_cbs_t ing_lif_cos_ipv4_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_ipv6_bitmap_cbs_t ing_lif_cos_ipv6_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_inner_bitmap_cbs_t ing_lif_cos_l2_inner_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_outer_bitmap_cbs_t ing_lif_cos_l2_outer_bitmap;
    sw_state_dpp_bcm_qos_ing_lif_cos_l2_untag_bitmap_cbs_t ing_lif_cos_l2_untag_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_ctag_bitmap_cbs_t ing_pcp_vlan_ctag_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_utag_bitmap_cbs_t ing_pcp_vlan_utag_bitmap;
    sw_state_dpp_bcm_qos_ing_pcp_vlan_stag_bitmap_cbs_t ing_pcp_vlan_stag_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_mpls_bitmap_cbs_t egr_remark_encap_mpls_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv6_bitmap_cbs_t egr_remark_encap_ipv6_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_ipv4_bitmap_cbs_t egr_remark_encap_ipv4_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_encap_l2_bitmap_cbs_t egr_remark_encap_l2_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_mpls_bitmap_cbs_t egr_remark_mpls_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_ipv6_bitmap_cbs_t egr_remark_ipv6_bitmap;
    sw_state_dpp_bcm_qos_egr_remark_ipv4_bitmap_cbs_t egr_remark_ipv4_bitmap;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv6_bitmap_cbs_t egr_mpls_php_ipv6_bitmap;
    sw_state_dpp_bcm_qos_egr_mpls_php_ipv4_bitmap_cbs_t egr_mpls_php_ipv4_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ctag_bitmap_cbs_t egr_pcp_vlan_ctag_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_utag_bitmap_cbs_t egr_pcp_vlan_utag_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_stag_bitmap_cbs_t egr_pcp_vlan_stag_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_mpls_bitmap_cbs_t egr_pcp_vlan_mpls_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv6_bitmap_cbs_t egr_pcp_vlan_ipv6_bitmap;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_ipv4_bitmap_cbs_t egr_pcp_vlan_ipv4_bitmap;
    sw_state_dpp_bcm_qos_egr_l2_i_tag_bitmap_cbs_t egr_l2_i_tag_bitmap;
#ifdef BCM_88660
    sw_state_dpp_bcm_qos_egr_dscp_exp_marking_bitmap_cbs_t egr_dscp_exp_marking_bitmap;
#endif /* BCM_88660*/ 
    sw_state_dpp_bcm_qos_ing_cos_opcode_flags_cbs_t ing_cos_opcode_flags;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_profile_id_cbs_t egr_pcp_vlan_dscp_exp_profile_id;
    sw_state_dpp_bcm_qos_egr_pcp_vlan_dscp_exp_enable_cbs_t egr_pcp_vlan_dscp_exp_enable;
    sw_state_dpp_bcm_qos_egr_remark_encap_enable_cbs_t egr_remark_encap_enable;
    sw_state_dpp_bcm_qos_dp_max_cbs_t dp_max;
    sw_state_dpp_bcm_qos_opcode_bmp_cbs_t opcode_bmp;
} sw_state_dpp_bcm_qos_cbs_t;


int sw_state_dpp_bcm_qos_access_cb_init(int _unit);

#endif /* _SHR_SW_STATE_DPP_BCM_QOS_ACCESS_H_ */
