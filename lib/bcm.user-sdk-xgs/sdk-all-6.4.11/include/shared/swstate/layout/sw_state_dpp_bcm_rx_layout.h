/* $Id: $
 * 
 * $Copyright: Copyright 2016 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
*/
#ifndef _SHR_sw_state_dpp_bcm_rx_H_
#define _SHR_sw_state_dpp_bcm_rx_H_


int sw_state_dpp_bcm_rx_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_gport_trap_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_strength_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_bitmap_mask_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_is_oam_dest_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_type_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_dest_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_type_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_trill_dest_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_trill_dest_is_multicast_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_trill_dest_dest_nick_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_command_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_label_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_push_profile_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_tpid_profile_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_model_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_has_cw_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_mpls_command_pop_next_header_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_isid_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_raw_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_eei_val_outlif_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_outlif_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_outlif_type_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_outlif_val_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_trap_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_trap_info_action_profile_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_trap_info_action_profile_trap_code_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_trap_info_action_profile_frwrd_action_strength_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_frwrd_dest_additional_info_trap_info_action_profile_snoop_action_strength_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_add_vsi_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_dest_info_vsi_shift_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_cos_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_cos_info_tc_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_cos_info_dp_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_count_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_count_info_counter_select_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_count_info_counter_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_meter_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_meter_info_meter_select_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_meter_info_meter_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_meter_info_meter_command_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_policing_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_policing_info_ethernet_police_id_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_enable_learning_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_is_trap_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_is_control_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_frwrd_offset_index_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_frwrd_type_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_frwrd_offset_bytes_fix_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_trap_info_processing_info_da_type_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_snoop_info_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_snoop_info_strength_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_snoop_info_snoop_cmnd_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_soc_ppd_reserved_mc_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);
int sw_state_dpp_bcm_rx_virtual_traps_soc_ppd_prog_layout_node_create(int unit, int* root_node_id, uint32* next_free_node_id);

#endif /* _SHR_sw_state_dpp_bcm_rx_H_ */
