/** \file dnx_ofp_rate_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_OFP_RATE_TYPES_H__
#define __DNX_OFP_RATE_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
#include <soc/dnx/legacy/dnx_config_defs.h>
#include <soc/dnx/legacy/ARAD/arad_egr_queuing.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_device.h>
/*
 * STRUCTs
 */

/**
 * info about shaping parameters
 */
typedef struct {
    /**
     * rate value
     */
    uint32 rate;
    /**
     * burst value
     */
    uint32 burst;
    /**
     * Boolean, is valid value
     */
    uint32 valid;
} dnx_ofp_rate_db_shaping_t;

/**
 * info about OTM port
 */
typedef struct {
    /**
     * otm calendar instance number
     */
    uint32 cal_instance;
    /**
     * info about shaping parameters
     */
    dnx_ofp_rate_db_shaping_t shaping;
} dnx_ofp_rate_db_otm_t;

/**
 * info about calendar parameters
 */
typedef struct {
    /**
     * Boolean, is occupied
     */
    uint32 occupied;
    /**
     * Boolean, is modified
     */
    uint32 modified;
    /**
     * number of calcal instances
     */
    uint32 nof_calcal_instances;
} dnx_ofp_rate_db_cal_t;

/**
 * DB for used by algo port rate
 */
typedef struct {
    /**
     * [core][OTM index], data about OTM port
     */
    dnx_ofp_rate_db_otm_t otm[DNX_DATA_MAX_DEVICE_GENERAL_MAX_NOF_CORES][JER2_ARAD_EGR_NOF_Q_PAIRS];
    /**
     * [core][qpare index], data about qpair shaping parameters
     */
    dnx_ofp_rate_db_shaping_t qpair[DNX_DATA_MAX_DEVICE_GENERAL_MAX_NOF_CORES][JER2_ARAD_EGR_NOF_Q_PAIRS];
    /**
     * [core][PS index][TCG index], data about TCG shaping parameters
     */
    dnx_ofp_rate_db_shaping_t tcg[DNX_DATA_MAX_DEVICE_GENERAL_MAX_NOF_CORES][JER2_ARAD_EGR_NOF_PS][JER2_ARAD_NOF_TCGS];
    /**
     * [core][calendar index], info about calendar parameters
     */
    dnx_ofp_rate_db_cal_t otm_cal[DNX_DATA_MAX_DEVICE_GENERAL_MAX_NOF_CORES][SOC_DNX_DEFS_NOF_CHANNELIZED_CALENDARS_MAX];
    /**
     * [core] calcal length value
     */
    uint32 calcal_len[DNX_DATA_MAX_DEVICE_GENERAL_MAX_NOF_CORES];
    /**
     * Boolean, is shaper enabled
     */
    uint32 shaper_enable;
} dnx_ofp_rate_db_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_OFP_RATE_TYPES_H__ */
