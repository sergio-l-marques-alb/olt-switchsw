/** \file dnx/swstate/auto_generated/access/dnx_field_context_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2019 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_FIELD_CONTEXT_ACCESS_H__
#define __DNX_FIELD_CONTEXT_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_context_types.h>
#include <include/soc/dnx/dbal/dbal_structures.h>
#include <soc/dnxc/swstate/types/sw_state_string.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_key_types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_field_context_sw_is_init
 */
typedef int (*dnx_field_context_sw_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_field_context_sw_init
 */
typedef int (*dnx_field_context_sw_init_cb)(
    int unit);

/**
 * implemented by: dnx_field_context_sw_context_info_alloc
 */
typedef int (*dnx_field_context_sw_context_info_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_context_ipmf1_sw_info_t *context_ipmf1_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_ipmf1_sw_info_t *context_ipmf1_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_context_compare_info_t *compare_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_compare_info_t *compare_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_compare_mode_e mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_compare_mode_e *mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t *qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint16 lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint16 *lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint8 size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint8 *size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint16 key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint16 *key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e *id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_key_part_type_e key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_key_part_type_e *key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, CONST dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e *input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int *input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int *offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_compare_mode_e mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_compare_mode_e *mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t *qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint16 lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint16 *lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint8 size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 key_qual_map_idx_0, uint8 *size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint16 key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint16 *key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e *id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_key_part_type_e key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_key_part_type_e *key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, CONST dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint8 *bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e *input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int *input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_info_idx_0, uint32 attach_info_idx_0, int *offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_context_hashing_info_t *hashing_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_hashing_info_t *hashing_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_hash_mode_e mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_hash_mode_e *mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, dnx_field_qual_t *qual_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, uint16 lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, uint16 *lsb);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, uint8 size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 key_qual_map_idx_0, uint8 *size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_set_cb)(
    int unit, uint32 context_info_idx_0, uint16 key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_get_cb)(
    int unit, uint32 context_info_idx_0, uint16 *key_size_in_bits);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e *id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_key_part_type_e key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_key_part_type_e *key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, dnx_field_input_type_e *input_type);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, int input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, int *input_arg);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, int offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 attach_info_idx_0, int *offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_context_state_table_info_t *state_table_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_state_table_info_t *state_table_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_state_table_mode_e mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_state_table_mode_e *mode);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *is_set);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_set_cb)(
    int unit, uint32 context_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_get_cb)(
    int unit, uint32 context_info_idx_0, uint32 id_idx_0, dbal_enum_value_field_field_key_e *id);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_key_part_type_e key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_key_part_type_e *key_part);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_bit_range_t *bit_range);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_valid);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_offset);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_set_cb)(
    int unit, uint32 context_info_idx_0, uint8 bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_get_cb)(
    int unit, uint32 context_info_idx_0, uint8 *bit_range_size);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf2_info_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf2_info_set_cb)(
    int unit, uint32 context_info_idx_0, CONST dnx_field_context_ipmf2_sw_info_t *context_ipmf2_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf2_info_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf2_info_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_ipmf2_sw_info_t *context_ipmf2_info);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_set
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_set_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_t cascaded_from);

/**
 * implemented by: dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_get
 */
typedef int (*dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_get_cb)(
    int unit, uint32 context_info_idx_0, dnx_field_context_t *cascaded_from);

/**
 * implemented by: dnx_field_context_sw_context_info_name_value_stringncat
 */
typedef int (*dnx_field_context_sw_context_info_name_value_stringncat_cb)(
    int unit, uint32 context_info_idx_0, uint32 name_idx_0, char *src);

/**
 * implemented by: dnx_field_context_sw_context_info_name_value_stringncmp
 */
typedef int (*dnx_field_context_sw_context_info_name_value_stringncmp_cb)(
    int unit, uint32 context_info_idx_0, uint32 name_idx_0, char *cmp_string, int *result);

/**
 * implemented by: dnx_field_context_sw_context_info_name_value_stringncpy
 */
typedef int (*dnx_field_context_sw_context_info_name_value_stringncpy_cb)(
    int unit, uint32 context_info_idx_0, uint32 name_idx_0, char *src);

/**
 * implemented by: dnx_field_context_sw_context_info_name_value_stringlen
 */
typedef int (*dnx_field_context_sw_context_info_name_value_stringlen_cb)(
    int unit, uint32 context_info_idx_0, uint32 name_idx_0, uint32 *size);

/**
 * implemented by: dnx_field_context_sw_context_info_name_value_stringget
 */
typedef int (*dnx_field_context_sw_context_info_name_value_stringget_cb)(
    int unit, uint32 context_info_idx_0, uint32 name_idx_0, char *o_string);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable mode
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_cbs;

/**
 * This structure holds the access functions for the variable is_set
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_cbs;

/**
 * This structure holds the access functions for the variable qual_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_cbs;

/**
 * This structure holds the access functions for the variable lsb
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_cbs;

/**
 * This structure holds the access functions for the variable size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_map_in_key_t
 */
typedef struct {
    /**
     * Access struct for qual_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_qual_type_cbs qual_type;
    /**
     * Access struct for lsb
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_lsb_cbs lsb;
    /**
     * Access struct for size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_size_cbs size;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_cbs;

/**
 * This structure holds the access functions for the variable key_size_in_bits
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_template_t
 */
typedef struct {
    /**
     * Access struct for key_qual_map
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_qual_map_cbs key_qual_map;
    /**
     * Access struct for key_size_in_bits
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_key_size_in_bits_cbs key_size_in_bits;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_cbs;

/**
 * This structure holds the access functions for the variable id
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_cbs;

/**
 * This structure holds the access functions for the variable key_part
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_cbs;

/**
 * This structure holds the access functions for the variable bit_range_valid
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_cbs;

/**
 * This structure holds the access functions for the variable bit_range_offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_cbs;

/**
 * This structure holds the access functions for the variable bit_range_size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_bit_range_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_get_cb get;
    /**
     * Access struct for bit_range_valid
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_valid_cbs bit_range_valid;
    /**
     * Access struct for bit_range_offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_offset_cbs bit_range_offset;
    /**
     * Access struct for bit_range_size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_bit_range_size_cbs bit_range_size;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_id_t
 */
typedef struct {
    /**
     * Access struct for id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_id_cbs id;
    /**
     * Access struct for key_part
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_key_part_cbs key_part;
    /**
     * Access struct for bit_range
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_bit_range_cbs bit_range;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_cbs;

/**
 * This structure holds the access functions for the variable input_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_cbs;

/**
 * This structure holds the access functions for the variable input_arg
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_cbs;

/**
 * This structure holds the access functions for the variable offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_attach_info_t
 */
typedef struct {
    /**
     * Access struct for input_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_type_cbs input_type;
    /**
     * Access struct for input_arg
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_input_arg_cbs input_arg;
    /**
     * Access struct for offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_offset_cbs offset;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_key_info_t
 */
typedef struct {
    /**
     * Access struct for key_template
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_template_cbs key_template;
    /**
     * Access struct for key_id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_key_id_cbs key_id;
    /**
     * Access struct for attach_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_attach_info_cbs attach_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_compare_mode_info_t
 */
typedef struct {
    /**
     * Access struct for mode
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_mode_cbs mode;
    /**
     * Access struct for is_set
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_is_set_cbs is_set;
    /**
     * Access struct for key_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_key_info_cbs key_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_cbs;

/**
 * This structure holds the access functions for the variable mode
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_cbs;

/**
 * This structure holds the access functions for the variable is_set
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_cbs;

/**
 * This structure holds the access functions for the variable qual_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_cbs;

/**
 * This structure holds the access functions for the variable lsb
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_cbs;

/**
 * This structure holds the access functions for the variable size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_map_in_key_t
 */
typedef struct {
    /**
     * Access struct for qual_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_qual_type_cbs qual_type;
    /**
     * Access struct for lsb
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_lsb_cbs lsb;
    /**
     * Access struct for size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_size_cbs size;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_cbs;

/**
 * This structure holds the access functions for the variable key_size_in_bits
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_template_t
 */
typedef struct {
    /**
     * Access struct for key_qual_map
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_qual_map_cbs key_qual_map;
    /**
     * Access struct for key_size_in_bits
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_key_size_in_bits_cbs key_size_in_bits;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_cbs;

/**
 * This structure holds the access functions for the variable id
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_cbs;

/**
 * This structure holds the access functions for the variable key_part
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_cbs;

/**
 * This structure holds the access functions for the variable bit_range_valid
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_cbs;

/**
 * This structure holds the access functions for the variable bit_range_offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_cbs;

/**
 * This structure holds the access functions for the variable bit_range_size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_bit_range_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_get_cb get;
    /**
     * Access struct for bit_range_valid
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_valid_cbs bit_range_valid;
    /**
     * Access struct for bit_range_offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_offset_cbs bit_range_offset;
    /**
     * Access struct for bit_range_size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_bit_range_size_cbs bit_range_size;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_id_t
 */
typedef struct {
    /**
     * Access struct for id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_id_cbs id;
    /**
     * Access struct for key_part
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_key_part_cbs key_part;
    /**
     * Access struct for bit_range
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_bit_range_cbs bit_range;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_cbs;

/**
 * This structure holds the access functions for the variable input_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_cbs;

/**
 * This structure holds the access functions for the variable input_arg
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_cbs;

/**
 * This structure holds the access functions for the variable offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_attach_info_t
 */
typedef struct {
    /**
     * Access struct for input_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_type_cbs input_type;
    /**
     * Access struct for input_arg
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_input_arg_cbs input_arg;
    /**
     * Access struct for offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_offset_cbs offset;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_key_info_t
 */
typedef struct {
    /**
     * Access struct for key_template
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_template_cbs key_template;
    /**
     * Access struct for key_id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_key_id_cbs key_id;
    /**
     * Access struct for attach_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_attach_info_cbs attach_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_compare_mode_info_t
 */
typedef struct {
    /**
     * Access struct for mode
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_mode_cbs mode;
    /**
     * Access struct for is_set
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_is_set_cbs is_set;
    /**
     * Access struct for key_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_key_info_cbs key_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_compare_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_get_cb get;
    /**
     * Access struct for pair_1
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_1_cbs pair_1;
    /**
     * Access struct for pair_2
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_pair_2_cbs pair_2;
} dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_cbs;

/**
 * This structure holds the access functions for the variable mode
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_cbs;

/**
 * This structure holds the access functions for the variable is_set
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_cbs;

/**
 * This structure holds the access functions for the variable qual_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_cbs;

/**
 * This structure holds the access functions for the variable lsb
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_cbs;

/**
 * This structure holds the access functions for the variable size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_map_in_key_t
 */
typedef struct {
    /**
     * Access struct for qual_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_qual_type_cbs qual_type;
    /**
     * Access struct for lsb
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_lsb_cbs lsb;
    /**
     * Access struct for size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_size_cbs size;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_cbs;

/**
 * This structure holds the access functions for the variable key_size_in_bits
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_template_t
 */
typedef struct {
    /**
     * Access struct for key_qual_map
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_qual_map_cbs key_qual_map;
    /**
     * Access struct for key_size_in_bits
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_key_size_in_bits_cbs key_size_in_bits;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_cbs;

/**
 * This structure holds the access functions for the variable id
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_cbs;

/**
 * This structure holds the access functions for the variable key_part
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_cbs;

/**
 * This structure holds the access functions for the variable bit_range_valid
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_cbs;

/**
 * This structure holds the access functions for the variable bit_range_offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_cbs;

/**
 * This structure holds the access functions for the variable bit_range_size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_bit_range_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_get_cb get;
    /**
     * Access struct for bit_range_valid
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_valid_cbs bit_range_valid;
    /**
     * Access struct for bit_range_offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_offset_cbs bit_range_offset;
    /**
     * Access struct for bit_range_size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_bit_range_size_cbs bit_range_size;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_id_t
 */
typedef struct {
    /**
     * Access struct for id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_id_cbs id;
    /**
     * Access struct for key_part
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_key_part_cbs key_part;
    /**
     * Access struct for bit_range
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_bit_range_cbs bit_range;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_cbs;

/**
 * This structure holds the access functions for the variable input_type
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_cbs;

/**
 * This structure holds the access functions for the variable input_arg
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_cbs;

/**
 * This structure holds the access functions for the variable offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_qual_attach_info_t
 */
typedef struct {
    /**
     * Access struct for input_type
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_type_cbs input_type;
    /**
     * Access struct for input_arg
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_input_arg_cbs input_arg;
    /**
     * Access struct for offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_offset_cbs offset;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_key_info_t
 */
typedef struct {
    /**
     * Access struct for key_template
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_template_cbs key_template;
    /**
     * Access struct for key_id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_key_id_cbs key_id;
    /**
     * Access struct for attach_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_attach_info_cbs attach_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_hashing_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_get_cb get;
    /**
     * Access struct for mode
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_mode_cbs mode;
    /**
     * Access struct for is_set
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_is_set_cbs is_set;
    /**
     * Access struct for key_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_key_info_cbs key_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_cbs;

/**
 * This structure holds the access functions for the variable mode
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_cbs;

/**
 * This structure holds the access functions for the variable is_set
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_cbs;

/**
 * This structure holds the access functions for the variable id
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_cbs;

/**
 * This structure holds the access functions for the variable key_part
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_cbs;

/**
 * This structure holds the access functions for the variable bit_range_valid
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_cbs;

/**
 * This structure holds the access functions for the variable bit_range_offset
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_cbs;

/**
 * This structure holds the access functions for the variable bit_range_size
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_bit_range_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_get_cb get;
    /**
     * Access struct for bit_range_valid
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_valid_cbs bit_range_valid;
    /**
     * Access struct for bit_range_offset
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_offset_cbs bit_range_offset;
    /**
     * Access struct for bit_range_size
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_bit_range_size_cbs bit_range_size;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_id_t
 */
typedef struct {
    /**
     * Access struct for id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_id_cbs id;
    /**
     * Access struct for key_part
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_key_part_cbs key_part;
    /**
     * Access struct for bit_range
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_bit_range_cbs bit_range;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_state_table_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_get_cb get;
    /**
     * Access struct for mode
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_mode_cbs mode;
    /**
     * Access struct for is_set
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_is_set_cbs is_set;
    /**
     * Access struct for key_id
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_key_id_cbs key_id;
} dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_ipmf1_sw_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf1_info_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf1_info_get_cb get;
    /**
     * Access struct for compare_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_compare_info_cbs compare_info;
    /**
     * Access struct for hashing_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_hashing_info_cbs hashing_info;
    /**
     * Access struct for state_table_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_state_table_info_cbs state_table_info;
} dnx_field_context_sw_context_info_context_ipmf1_info_cbs;

/**
 * This structure holds the access functions for the variable cascaded_from
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_get_cb get;
} dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_ipmf2_sw_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_context_ipmf2_info_set_cb set;
    dnx_field_context_sw_context_info_context_ipmf2_info_get_cb get;
    /**
     * Access struct for cascaded_from
     */
    dnx_field_context_sw_context_info_context_ipmf2_info_cascaded_from_cbs cascaded_from;
} dnx_field_context_sw_context_info_context_ipmf2_info_cbs;

/**
 * This structure holds the access functions for the variable value
 */
typedef struct {
    dnx_field_context_sw_context_info_name_value_stringncat_cb stringncat;
    dnx_field_context_sw_context_info_name_value_stringncmp_cb stringncmp;
    dnx_field_context_sw_context_info_name_value_stringncpy_cb stringncpy;
    dnx_field_context_sw_context_info_name_value_stringlen_cb stringlen;
    dnx_field_context_sw_context_info_name_value_stringget_cb stringget;
} dnx_field_context_sw_context_info_name_value_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_name_t
 */
typedef struct {
    /**
     * Access struct for value
     */
    dnx_field_context_sw_context_info_name_value_cbs value;
} dnx_field_context_sw_context_info_name_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_sw_info_t
 */
typedef struct {
    dnx_field_context_sw_context_info_alloc_cb alloc;
    /**
     * Access struct for context_ipmf1_info
     */
    dnx_field_context_sw_context_info_context_ipmf1_info_cbs context_ipmf1_info;
    /**
     * Access struct for context_ipmf2_info
     */
    dnx_field_context_sw_context_info_context_ipmf2_info_cbs context_ipmf2_info;
    /**
     * Access struct for name
     */
    dnx_field_context_sw_context_info_name_cbs name;
} dnx_field_context_sw_context_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_context_sw_t
 */
typedef struct {
    dnx_field_context_sw_is_init_cb is_init;
    dnx_field_context_sw_init_cb init;
    /**
     * Access struct for context_info
     */
    dnx_field_context_sw_context_info_cbs context_info;
} dnx_field_context_sw_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_field_context_compare_mode_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_field_context_compare_mode_e_get_name(dnx_field_context_compare_mode_e value);


/*
 *
 * get_name function for enum type dnx_field_context_hash_mode_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_field_context_hash_mode_e_get_name(dnx_field_context_hash_mode_e value);


/*
 *
 * get_name function for enum type dnx_field_context_state_table_mode_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_field_context_state_table_mode_e_get_name(dnx_field_context_state_table_mode_e value);


/*
 *
 * get_name function for enum type dnx_field_context_hash_action_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_field_context_hash_action_e_get_name(dnx_field_context_hash_action_e value);


/*
 *
 * get_name function for enum type dnx_field_crc_select_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_field_crc_select_e_get_name(dnx_field_crc_select_e value);


/*
 * Global Variables
 */

extern dnx_field_context_sw_cbs dnx_field_context_sw;

#endif /* __DNX_FIELD_CONTEXT_ACCESS_H__ */
