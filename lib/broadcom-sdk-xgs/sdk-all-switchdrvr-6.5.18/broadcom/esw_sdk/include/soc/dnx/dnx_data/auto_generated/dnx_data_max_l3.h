/** \file dnx_data_max_l3.h
 * 
 * MODULE DATA MAX - 
 * Maintain max value (of all devices) per define
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2019 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_MAX_L3_H_
/*{*/
#define _DNX_DATA_MAX_L3_H_
/*
 * INCLUDE FILES:
 * {
 */
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MAX DEFINES:
 * {
 */
/**
 * \brief
 * Identifier of very first virtual egress pointed object.                            Range is from 'first_egr_pointed_id' to 'nof_egr_pointed_ids - 1'
 */
#define DNX_DATA_MAX_L3_EGR_POINTED_FIRST_EGR_POINTED_ID (1)

/**
 * \brief
 * The maximal number of FECs supported by the device.
 */
#define DNX_DATA_MAX_L3_FEC_NOF_FECS    (786432)

/**
 * \brief
 * The maximal FEC ID that support a single DHB cluasters pair.
 */
#define DNX_DATA_MAX_L3_FEC_MAX_FEC_ID_FOR_SINGLE_DHB_CLUSTER_PAIR_GRANULARITY (524287)

/**
 * \brief
 * The maximal FEC ID that requiere an even number of DHB clusters pairs.
 */
#define DNX_DATA_MAX_L3_FEC_MAX_FEC_ID_FOR_DOUBLE_DHB_CLUSTER_PAIR_GRANULARITY (786431)

/**
 * \brief
 * The maximal FEC id that can be used for default route.
 */
#define DNX_DATA_MAX_L3_FEC_MAX_DEFAULT_FEC (131071)

/**
 * \brief
 * The smallest number of FECs which belong to the same hierarchy
 */
#define DNX_DATA_MAX_L3_FEC_BANK_SIZE   (26214)

/**
 * \brief
 * In some cases FEC bank size contains extra FECs due to round up which results from physical to logical translation
 */
#define DNX_DATA_MAX_L3_FEC_BANK_SIZE_ROUND_UP (26216)

/**
 * \brief
 * The max NOF SUPER FEC IDs per resource manager bank.
 */
#define DNX_DATA_MAX_L3_FEC_MAX_NOF_SUPER_FECS_PER_BANK (13108)

/**
 * \brief
 * The number of physical FEC IDs per bank.
 */
#define DNX_DATA_MAX_L3_FEC_NOF_PHYSICAL_FECS_PER_BANK (8192)

/**
 * \brief
 * The number of bits of a single super FEC in the MDB.
 */
#define DNX_DATA_MAX_L3_FEC_SUPER_FEC_SIZE (150)

/**
 * \brief
 * The maximal NOF possible banks in the device (not MDB profile dependent).
 */
#define DNX_DATA_MAX_L3_FEC_MAX_NOF_BANKS (30)

/**
 * \brief
 * the first fec allocation bank that can be used for allocating FECs without an ID
 */
#define DNX_DATA_MAX_L3_FEC_FIRST_BANK_WITHOUT_ID_ALLOC (4)

/**
 * \brief
 * The max ID of the super FEC
 */
#define DNX_DATA_MAX_L3_FEC_MAX_SUPER_FEC_ID (393215)

/**
 * \brief
 * This value indicate the ratio between the FER FEC granularity relative to the MDB
 */
#define DNX_DATA_MAX_L3_FEC_FER_MDB_GRANULARITY_RATIO (2)

/**
 * \brief
 * The number of entries in the source address table.
 */
#define DNX_DATA_MAX_L3_SOURCE_ADDRESS_SOURCE_ADDRESS_TABLE_SIZE (256)

/**
 * \brief
 * Indication whether ARP custom sa feature is using EEDB dual homing field or full mac address from source address table.
 */
#define DNX_DATA_MAX_L3_SOURCE_ADDRESS_CUSTOM_SA_USE_DUAL_HOMING (1)

/**
 * \brief
 * The maximal number of VRFs supported by the device.
 */
#define DNX_DATA_MAX_L3_VRF_NOF_VRF     (65536)

/**
 * \brief
 * The maximal number of VRFs supported by the device for an IPv6 MC table.
 */
#define DNX_DATA_MAX_L3_VRF_NOF_VRF_IPV6 (16384)

/**
 * \brief
 * The maximal number of references for a routing enablers vector.
 */
#define DNX_DATA_MAX_L3_ROUTING_ENABLERS_NOF_ROUTING_ENABLERS_PROFILES (4096)

/**
 * \brief
 * Maximum number of rifs supported by the device.
 */
#define DNX_DATA_MAX_L3_RIF_MAX_NOF_RIFS (131072)

/**
 * \brief
 * Indicate whether the LB fragmentation is handled by the FLP.
 */
#define DNX_DATA_MAX_L3_FWD_FLP_FRAGMENT_SUPPORT (1)

/**
 * \brief
 * The maximum number of MC group ID for IPMC route entries.
 */
#define DNX_DATA_MAX_L3_FWD_MAX_MC_GROUP_LPM (131071)

/**
 * \brief
 * The maximum number of MC group ID for IPMC host entries.
 */
#define DNX_DATA_MAX_L3_FWD_MAX_MC_GROUP_EM (524287)

/**
 * \brief
 * The number of my MACs prefixes.
 */
#define DNX_DATA_MAX_L3_FWD_NOF_MY_MAC_PREFIXES (64)

/**
 * \brief
 * The size in bits of the IPMC IP6 compressed SIP for SVL table
 */
#define DNX_DATA_MAX_L3_FWD_COMPRESSED_SIP_SVL_SIZE (16)

/**
 * \brief
 * Number of supported IPMC compressed SIPs.
 */
#define DNX_DATA_MAX_L3_FWD_NOF_COMPRESSED_SVL_SIP (65536)

/**
 * \brief
 * The NOF bit of the group size field.
 */
#define DNX_DATA_MAX_L3_ECMP_GROUP_SIZE_NOF_BITS (9)

/**
 * \brief
 * The maximal size of an ECMP group.
 */
#define DNX_DATA_MAX_L3_ECMP_MAX_GROUP_SIZE (512)

/**
 * \brief
 * The low 32k ECMP are placed in a memory of 16 banks, each bank holds 2k ECMPS.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP_PER_BANK_OF_LOW_ECMPS (2048)

/**
 * \brief
 * Number of ECMP groups that can be created in basic mode as opposed to extended mode
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP_BASIC_MODE (32768)

/**
 * \brief
 * The total number of IDs that are considered to be in the ECMP range.
 */
#define DNX_DATA_MAX_L3_ECMP_TOTAL_NOF_ECMP (40960)

/**
 * \brief
 * Maximum ECMP group ID that can be created in basic mode as opposed to extended mode
 */
#define DNX_DATA_MAX_L3_ECMP_MAX_ECMP_BASIC_MODE (32767)

/**
 * \brief
 * Maximum ECMP group ID that can be created in extended mode
 */
#define DNX_DATA_MAX_L3_ECMP_MAX_ECMP_EXTENDED_MODE (38911)

/**
 * \brief
 * The upper 8k ECMP (from 32k to 40k) are placed in a memory of 16 banks, each bank holds 512 ECMPS.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP_PER_BANK_OF_EXTENDED_ECMPS (512)

/**
 * \brief
 * nof fec protection banks to be used for 1 ecmp extended bank
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_FEC_BANKS_PER_EXTENDED_ECMP_BANK (4)

/**
 * \brief
 * Number of profiles that are available for each ECMP hierarchy.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_GROUP_PROFILES_PER_HIERARCHY (1024)

/**
 * \brief
 * The available space for the members table in bits.
 */
#define DNX_DATA_MAX_L3_ECMP_MEMBERS_TABLE_SIZE_IN_BITS (131072)

/**
 * \brief
 * The smallest number of consecutive ECMP groups which belong to the same hierarchy
 */
#define DNX_DATA_MAX_L3_ECMP_ECMP_STAGE_MAP_SIZE (2048)

/**
 * \brief
 * The number of ECMP banks in the basic range of IDs.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP_BANKS_BASIC (16)

/**
 * \brief
 * The number of ECMP banks in the extended range of IDs.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP_BANKS_EXTENDED (4)

/**
 * \brief
 * The ID of the first valid ECMP group which can be created
 */
#define DNX_DATA_MAX_L3_ECMP_FIRST_VALID_ECMP_GROUP_ID (1)

/**
 * \brief
 * Number of ECMPs in the system.
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_ECMP   (40960)

/**
 * \brief
 * Maximum number of ECMP FEC tables
 */
#define DNX_DATA_MAX_L3_ECMP_MAX_NOF_FEC_ECMP_TABLES (256)

/**
 * \brief
 * The size of the profile ID field
 */
#define DNX_DATA_MAX_L3_ECMP_PROFILE_ID_SIZE (10)

/**
 * \brief
 * The offset of the profile ID field
 */
#define DNX_DATA_MAX_L3_ECMP_PROFILE_ID_OFFSET (0)

/**
 * \brief
 * The width in bits of a row in the ECMP member table.
 */
#define DNX_DATA_MAX_L3_ECMP_MEMBER_TABLE_ROW_WIDTH (32)

/**
 * \brief
 * Device has tunnel priority support.
 */
#define DNX_DATA_MAX_L3_ECMP_TUNNEL_PRIORITY_SUPPORT (1)

/**
 * \brief
 * The NOF tunnle priority map profiles
 */
#define DNX_DATA_MAX_L3_ECMP_NOF_TUNNEL_PRIORITY_MAP_PROFILES (4)

/**
 * \brief
 * The width in bits of the tunnel priority field.
 */
#define DNX_DATA_MAX_L3_ECMP_TUNNEL_PRIORITY_FIELD_WIDTH (5)

/**
 * \brief
 * The size of the possible TP indexes field.
 */
#define DNX_DATA_MAX_L3_ECMP_TUNNEL_PRIORITY_INDEX_FIELD_WIDTH (3)

/**
 * \brief
 * Number of mymac prefixes
 */
#define DNX_DATA_MAX_L3_SOURCE_ADDRESS_ETHERNET_NOF_MYMAC_PREFIXES (64)

/**
 * \brief
 * Number of L3 protocol groups
 */
#define DNX_DATA_MAX_L3_VRRP_NOF_PROTOCOL_GROUPS (4)

/**
 * \brief
 * Size of VRRP TCAM table
 */
#define DNX_DATA_MAX_L3_VRRP_NOF_TCAM_ENTRIES (32)

/**
 * \brief
 * Number of enries in VRRP TCAM table that can be used by VSI table
 */
#define DNX_DATA_MAX_L3_VRRP_NOF_VSI_TCAM_ENTRIES (16)

/**
 * \brief
 * TCAM index for EXEM VRRP VRID IPv4 protocol
 */
#define DNX_DATA_MAX_L3_VRRP_EXEM_VRID_IPV4_TCAM_INDEX (17)

/**
 * \brief
 * TCAM index for EXEM VRRP VRID IPv6 protocol
 */
#define DNX_DATA_MAX_L3_VRRP_EXEM_VRID_IPV6_TCAM_INDEX (18)

/**
 * \brief
 * TCAM index for EXEM VSI LSB or SOURCE-PORT multiple my mac
 */
#define DNX_DATA_MAX_L3_VRRP_EXEM_DEFAULT_TCAM_INDEX (19)

/**
 * \brief
 * TCAM index for EXEM VSI MSB multiple my mac
 */
#define DNX_DATA_MAX_L3_VRRP_EXEM_DEFAULT_TCAM_INDEX_MSB (20)

/*
 * }
 */

/*}*/
#endif /*_DNX_DATA_MAX_L3_H_*/
/* *INDENT-ON* */
