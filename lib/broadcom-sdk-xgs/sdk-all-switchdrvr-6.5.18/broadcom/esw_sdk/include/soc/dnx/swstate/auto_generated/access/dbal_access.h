/** \file dnx/swstate/auto_generated/access/dbal_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2019 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DBAL_ACCESS_H__
#define __DBAL_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/dbal_types.h>
#include <soc/dnx/dbal/auto_generated/dbal_defines_field_types_defs.h>
#include <soc/dnx/dbal/auto_generated/dbal_defines_fields.h>
#include <soc/dnx/dbal/auto_generated/dbal_defines_tables.h>
#include <soc/dnx/dbal/dbal_structures.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_dbal.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
#include <soc/dnx/swstate/auto_generated/types/kbp_types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dbal_db_is_init
 */
typedef int (*dbal_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dbal_db_init
 */
typedef int (*dbal_db_init_cb)(
    int unit);

/**
 * implemented by: dbal_db_sw_tables_table_type_set
 */
typedef int (*dbal_db_sw_tables_table_type_set_cb)(
    int unit, uint32 sw_tables_idx_0, dbal_sw_state_table_type_e table_type);

/**
 * implemented by: dbal_db_sw_tables_table_type_get
 */
typedef int (*dbal_db_sw_tables_table_type_get_cb)(
    int unit, uint32 sw_tables_idx_0, dbal_sw_state_table_type_e *table_type);

/**
 * implemented by: dbal_db_sw_tables_entries_alloc_bitmap
 */
typedef int (*dbal_db_sw_tables_entries_alloc_bitmap_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _nof_bits_to_alloc);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_set
 */
typedef int (*dbal_db_sw_tables_entries_bit_set_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _bit_num);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_clear
 */
typedef int (*dbal_db_sw_tables_entries_bit_clear_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _bit_num);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_get
 */
typedef int (*dbal_db_sw_tables_entries_bit_get_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_read
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_read_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_write
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_write_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_and
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_and_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_or
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_or_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_xor
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_xor_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_remove
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_remove_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_negate
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_negate_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_clear
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_clear_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_set
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_set_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_null
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_null_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_test
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_test_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_eq
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_eq_cb)(
    int unit, uint32 sw_tables_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dbal_db_sw_tables_entries_bit_range_count
 */
typedef int (*dbal_db_sw_tables_entries_bit_range_count_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dbal_db_sw_tables_hash_table_create
 */
typedef int (*dbal_db_sw_tables_hash_table_create_cb)(
    int unit, uint32 sw_tables_idx_0, sw_state_htbl_init_info_t *init_info);

/**
 * implemented by: dbal_db_sw_tables_hash_table_find
 */
typedef int (*dbal_db_sw_tables_hash_table_find_cb)(
    int unit, uint32 sw_tables_idx_0, const dbal_sw_state_hash_key *key, uint32 *data_index, uint8 *found);

/**
 * implemented by: dbal_db_sw_tables_hash_table_insert
 */
typedef int (*dbal_db_sw_tables_hash_table_insert_cb)(
    int unit, uint32 sw_tables_idx_0, const dbal_sw_state_hash_key *key, const uint32 *data_index, uint8 *success);

/**
 * implemented by: dbal_db_sw_tables_hash_table_get_next
 */
typedef int (*dbal_db_sw_tables_hash_table_get_next_cb)(
    int unit, uint32 sw_tables_idx_0, SW_STATE_HASH_TABLE_ITER *iter, const dbal_sw_state_hash_key *key, const uint32 *data_index);

/**
 * implemented by: dbal_db_sw_tables_hash_table_clear
 */
typedef int (*dbal_db_sw_tables_hash_table_clear_cb)(
    int unit, uint32 sw_tables_idx_0);

/**
 * implemented by: dbal_db_sw_tables_hash_table_delete
 */
typedef int (*dbal_db_sw_tables_hash_table_delete_cb)(
    int unit, uint32 sw_tables_idx_0, const dbal_sw_state_hash_key *key);

/**
 * implemented by: dbal_db_sw_tables_hash_table_insert_at_index
 */
typedef int (*dbal_db_sw_tables_hash_table_insert_at_index_cb)(
    int unit, uint32 sw_tables_idx_0, const dbal_sw_state_hash_key *key, uint32 data_idx, uint8 *success);

/**
 * implemented by: dbal_db_sw_tables_hash_table_delete_by_index
 */
typedef int (*dbal_db_sw_tables_hash_table_delete_by_index_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 data_index);

/**
 * implemented by: dbal_db_sw_tables_hash_table_get_by_index
 */
typedef int (*dbal_db_sw_tables_hash_table_get_by_index_cb)(
    int unit, uint32 sw_tables_idx_0, uint32 data_index, dbal_sw_state_hash_key *key, uint8 *found);

/**
 * implemented by: dbal_db_mdb_access_skip_read_from_shadow_set
 */
typedef int (*dbal_db_mdb_access_skip_read_from_shadow_set_cb)(
    int unit, uint8 skip_read_from_shadow);

/**
 * implemented by: dbal_db_mdb_access_skip_read_from_shadow_get
 */
typedef int (*dbal_db_mdb_access_skip_read_from_shadow_get_cb)(
    int unit, uint8 *skip_read_from_shadow);

/**
 * implemented by: dbal_db_mdb_phy_tables_nof_entries_set
 */
typedef int (*dbal_db_mdb_phy_tables_nof_entries_set_cb)(
    int unit, uint32 mdb_phy_tables_idx_0, int nof_entries);

/**
 * implemented by: dbal_db_mdb_phy_tables_nof_entries_get
 */
typedef int (*dbal_db_mdb_phy_tables_nof_entries_get_cb)(
    int unit, uint32 mdb_phy_tables_idx_0, int *nof_entries);

/**
 * implemented by: dbal_db_mdb_phy_tables_nof_entries_inc
 */
typedef int (*dbal_db_mdb_phy_tables_nof_entries_inc_cb)(
    int unit, uint32 mdb_phy_tables_idx_0, uint32 inc_value);

/**
 * implemented by: dbal_db_mdb_phy_tables_nof_entries_dec
 */
typedef int (*dbal_db_mdb_phy_tables_nof_entries_dec_cb)(
    int unit, uint32 mdb_phy_tables_idx_0, uint32 dec_value);

/**
 * implemented by: dbal_db_tables_properties_table_status_set
 */
typedef int (*dbal_db_tables_properties_table_status_set_cb)(
    int unit, uint32 tables_properties_idx_0, dbal_table_status_e table_status);

/**
 * implemented by: dbal_db_tables_properties_table_status_get
 */
typedef int (*dbal_db_tables_properties_table_status_get_cb)(
    int unit, uint32 tables_properties_idx_0, dbal_table_status_e *table_status);

/**
 * implemented by: dbal_db_tables_properties_nof_set_operations_set
 */
typedef int (*dbal_db_tables_properties_nof_set_operations_set_cb)(
    int unit, uint32 tables_properties_idx_0, int nof_set_operations);

/**
 * implemented by: dbal_db_tables_properties_nof_set_operations_get
 */
typedef int (*dbal_db_tables_properties_nof_set_operations_get_cb)(
    int unit, uint32 tables_properties_idx_0, int *nof_set_operations);

/**
 * implemented by: dbal_db_tables_properties_nof_set_operations_inc
 */
typedef int (*dbal_db_tables_properties_nof_set_operations_inc_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 inc_value);

/**
 * implemented by: dbal_db_tables_properties_nof_set_operations_dec
 */
typedef int (*dbal_db_tables_properties_nof_set_operations_dec_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 dec_value);

/**
 * implemented by: dbal_db_tables_properties_nof_get_operations_set
 */
typedef int (*dbal_db_tables_properties_nof_get_operations_set_cb)(
    int unit, uint32 tables_properties_idx_0, int nof_get_operations);

/**
 * implemented by: dbal_db_tables_properties_nof_get_operations_get
 */
typedef int (*dbal_db_tables_properties_nof_get_operations_get_cb)(
    int unit, uint32 tables_properties_idx_0, int *nof_get_operations);

/**
 * implemented by: dbal_db_tables_properties_nof_get_operations_inc
 */
typedef int (*dbal_db_tables_properties_nof_get_operations_inc_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 inc_value);

/**
 * implemented by: dbal_db_tables_properties_nof_get_operations_dec
 */
typedef int (*dbal_db_tables_properties_nof_get_operations_dec_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 dec_value);

/**
 * implemented by: dbal_db_tables_properties_nof_entries_set
 */
typedef int (*dbal_db_tables_properties_nof_entries_set_cb)(
    int unit, uint32 tables_properties_idx_0, int nof_entries);

/**
 * implemented by: dbal_db_tables_properties_nof_entries_get
 */
typedef int (*dbal_db_tables_properties_nof_entries_get_cb)(
    int unit, uint32 tables_properties_idx_0, int *nof_entries);

/**
 * implemented by: dbal_db_tables_properties_nof_entries_inc
 */
typedef int (*dbal_db_tables_properties_nof_entries_inc_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 inc_value);

/**
 * implemented by: dbal_db_tables_properties_nof_entries_dec
 */
typedef int (*dbal_db_tables_properties_nof_entries_dec_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 dec_value);

/**
 * implemented by: dbal_db_tables_properties_tcam_handler_id_set
 */
typedef int (*dbal_db_tables_properties_tcam_handler_id_set_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 tcam_handler_id);

/**
 * implemented by: dbal_db_tables_properties_tcam_handler_id_get
 */
typedef int (*dbal_db_tables_properties_tcam_handler_id_get_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 *tcam_handler_id);

/**
 * implemented by: dbal_db_tables_properties_indications_bm_set
 */
typedef int (*dbal_db_tables_properties_indications_bm_set_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 indications_bm);

/**
 * implemented by: dbal_db_tables_properties_indications_bm_get
 */
typedef int (*dbal_db_tables_properties_indications_bm_get_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 *indications_bm);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_alloc
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_alloc_cb)(
    int unit, uint32 tables_properties_idx_0);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_bitmap_alloc_bitmap
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_bitmap_alloc_bitmap_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 iterator_optimized_idx_0, uint32 _nof_bits_to_alloc);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_bitmap_bit_set
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_bitmap_bit_set_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 iterator_optimized_idx_0, uint32 _bit_num);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_bitmap_bit_clear
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_bitmap_bit_clear_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 iterator_optimized_idx_0, uint32 _bit_num);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_bitmap_bit_get
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_bitmap_bit_get_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 iterator_optimized_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dbal_db_tables_properties_iterator_optimized_bitmap_bit_range_read
 */
typedef int (*dbal_db_tables_properties_iterator_optimized_bitmap_bit_range_read_cb)(
    int unit, uint32 tables_properties_idx_0, uint32 iterator_optimized_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_table_id_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_table_id_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, dbal_tables_e table_id);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_table_id_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_table_id_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, dbal_tables_e *table_id);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_table_name_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_table_name_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 table_name_idx_0, CONST char *table_name);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_table_name_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_table_name_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 table_name_idx_0, CONST char **table_name);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_labels_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_labels_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 labels_idx_0, dbal_labels_e labels);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_labels_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_labels_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 labels_idx_0, dbal_labels_e *labels);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_labels_alloc
 */
typedef int (*dbal_db_dbal_dynamic_tables_labels_alloc_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_data_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_data_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, CONST dbal_logical_table_t *data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_data_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_data_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, CONST dbal_logical_table_t **data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_key_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_key_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 key_info_data_idx_0, CONST dbal_table_field_info_t *key_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_key_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_key_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 key_info_data_idx_0, CONST dbal_table_field_info_t **key_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_key_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_tables_key_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_multi_res_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_multi_res_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 multi_res_info_data_idx_0, CONST multi_res_info_t *multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_multi_res_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_multi_res_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 multi_res_info_data_idx_0, CONST multi_res_info_t **multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_multi_res_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_tables_multi_res_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_res_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_res_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 res_info_data_idx_0, uint32 res_info_data_idx_1, CONST dbal_table_field_info_t *res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_res_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_res_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 res_info_data_idx_0, uint32 res_info_data_idx_1, CONST dbal_table_field_info_t **res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_res_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_tables_res_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_set
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_set_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 access_info_idx_0, DNX_SW_STATE_BUFF access_info);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_get
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_get_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 access_info_idx_0, DNX_SW_STATE_BUFF *access_info);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_alloc
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_alloc_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 _nof_bytes_to_alloc);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_memread
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_memread_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint8 *_dst, uint32 _offset, size_t _len);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_memwrite
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_memwrite_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, const uint8 *_src, uint32 _offset, size_t _len);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_memcmp
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_memcmp_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, const uint8 *_buff, uint32 _offset, size_t _len, int *cmp_result);

/**
 * implemented by: dbal_db_dbal_dynamic_tables_access_info_memset
 */
typedef int (*dbal_db_dbal_dynamic_tables_access_info_memset_cb)(
    int unit, uint32 dbal_dynamic_tables_idx_0, uint32 _offset, size_t _len, int _value);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_table_id_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_table_id_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, dbal_tables_e table_id);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_table_id_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_table_id_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, dbal_tables_e *table_id);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_table_name_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_table_name_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 table_name_idx_0, CONST char *table_name);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_table_name_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_table_name_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 table_name_idx_0, CONST char **table_name);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_labels_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_labels_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 labels_idx_0, dbal_labels_e labels);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_labels_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_labels_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 labels_idx_0, dbal_labels_e *labels);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_labels_alloc
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_labels_alloc_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_data_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_data_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, CONST dbal_logical_table_t *data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_data_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_data_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, CONST dbal_logical_table_t **data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_key_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_key_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 key_info_data_idx_0, CONST dbal_table_field_info_t *key_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_key_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_key_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 key_info_data_idx_0, CONST dbal_table_field_info_t **key_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_key_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_key_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 multi_res_info_data_idx_0, CONST multi_res_info_t *multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 multi_res_info_data_idx_0, CONST multi_res_info_t **multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_res_info_data_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_res_info_data_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 res_info_data_idx_0, uint32 res_info_data_idx_1, CONST dbal_table_field_info_t *res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_res_info_data_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_res_info_data_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 res_info_data_idx_0, uint32 res_info_data_idx_1, CONST dbal_table_field_info_t **res_info_data);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_res_info_data_alloc
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_res_info_data_alloc_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_set
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_set_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 access_info_idx_0, DNX_SW_STATE_BUFF access_info);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_get
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_get_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 access_info_idx_0, DNX_SW_STATE_BUFF *access_info);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_alloc
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_alloc_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 _nof_bytes_to_alloc);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_memread
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_memread_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint8 *_dst, uint32 _offset, size_t _len);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_memwrite
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_memwrite_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, const uint8 *_src, uint32 _offset, size_t _len);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_memcmp
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_memcmp_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, const uint8 *_buff, uint32 _offset, size_t _len, int *cmp_result);

/**
 * implemented by: dbal_db_dbal_dynamic_xml_tables_access_info_memset
 */
typedef int (*dbal_db_dbal_dynamic_xml_tables_access_info_memset_cb)(
    int unit, uint32 dbal_dynamic_xml_tables_idx_0, uint32 _offset, size_t _len, int _value);

/**
 * implemented by: dbal_db_dbal_fields_field_id_set
 */
typedef int (*dbal_db_dbal_fields_field_id_set_cb)(
    int unit, uint32 dbal_fields_idx_0, dbal_fields_e field_id);

/**
 * implemented by: dbal_db_dbal_fields_field_id_get
 */
typedef int (*dbal_db_dbal_fields_field_id_get_cb)(
    int unit, uint32 dbal_fields_idx_0, dbal_fields_e *field_id);

/**
 * implemented by: dbal_db_dbal_fields_field_type_set
 */
typedef int (*dbal_db_dbal_fields_field_type_set_cb)(
    int unit, uint32 dbal_fields_idx_0, dbal_field_types_defs_e field_type);

/**
 * implemented by: dbal_db_dbal_fields_field_type_get
 */
typedef int (*dbal_db_dbal_fields_field_type_get_cb)(
    int unit, uint32 dbal_fields_idx_0, dbal_field_types_defs_e *field_type);

/**
 * implemented by: dbal_db_dbal_fields_field_name_set
 */
typedef int (*dbal_db_dbal_fields_field_name_set_cb)(
    int unit, uint32 dbal_fields_idx_0, uint32 field_name_idx_0, CONST char *field_name);

/**
 * implemented by: dbal_db_dbal_fields_field_name_get
 */
typedef int (*dbal_db_dbal_fields_field_name_get_cb)(
    int unit, uint32 dbal_fields_idx_0, uint32 field_name_idx_0, CONST char **field_name);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_set
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_set_cb)(
    int unit, uint32 multi_res_info_status_idx_0, dbal_multi_res_info_status_e multi_res_info_status);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_get
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_get_cb)(
    int unit, uint32 multi_res_info_status_idx_0, dbal_multi_res_info_status_e *multi_res_info_status);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_alloc
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_alloc_cb)(
    int unit);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_alloc
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_alloc_cb)(
    int unit);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_set
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_set_cb)(
    int unit, uint32 multi_res_info_data_sep_idx_0, CONST multi_res_info_t *multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_get
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_get_cb)(
    int unit, uint32 multi_res_info_data_sep_idx_0, CONST multi_res_info_t **multi_res_info_data);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_set
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_set_cb)(
    int unit, uint32 multi_res_info_data_sep_idx_0, uint32 res_info_data_idx_0, dbal_table_field_info_t res_info_data);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_get
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_get_cb)(
    int unit, uint32 multi_res_info_data_sep_idx_0, uint32 res_info_data_idx_0, dbal_table_field_info_t *res_info_data);

/**
 * implemented by: dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_alloc
 */
typedef int (*dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_alloc_cb)(
    int unit, uint32 multi_res_info_data_sep_idx_0);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_create
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_create_cb)(
    int unit, sw_state_htbl_init_info_t *init_info);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_find
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_find_cb)(
    int unit, const hw_ent_direct_map_hash_key *key, uint32 *data_index, uint8 *found);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_insert
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_insert_cb)(
    int unit, const hw_ent_direct_map_hash_key *key, const uint32 *data_index, uint8 *success);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_get_next
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_get_next_cb)(
    int unit, SW_STATE_HASH_TABLE_ITER *iter, const hw_ent_direct_map_hash_key *key, const uint32 *data_index);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_clear
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_clear_cb)(
    int unit);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_delete
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_delete_cb)(
    int unit, const hw_ent_direct_map_hash_key *key);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_insert_at_index
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_insert_at_index_cb)(
    int unit, const hw_ent_direct_map_hash_key *key, uint32 data_idx, uint8 *success);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_delete_by_index
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_delete_by_index_cb)(
    int unit, uint32 data_index);

/**
 * implemented by: dbal_db_hw_ent_direct_map_hash_tbl_get_by_index
 */
typedef int (*dbal_db_hw_ent_direct_map_hash_tbl_get_by_index_cb)(
    int unit, uint32 data_index, hw_ent_direct_map_hash_key *key, uint8 *found);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_create
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_create_cb)(
    int unit, sw_state_htbl_init_info_t *init_info);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_find
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_find_cb)(
    int unit, const hw_ent_groups_map_hash_key *key, uint32 *data_index, uint8 *found);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_insert
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_insert_cb)(
    int unit, const hw_ent_groups_map_hash_key *key, const uint32 *data_index, uint8 *success);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_get_next
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_get_next_cb)(
    int unit, SW_STATE_HASH_TABLE_ITER *iter, const hw_ent_groups_map_hash_key *key, const uint32 *data_index);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_clear
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_clear_cb)(
    int unit);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_delete
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_delete_cb)(
    int unit, const hw_ent_groups_map_hash_key *key);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_insert_at_index
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_insert_at_index_cb)(
    int unit, const hw_ent_groups_map_hash_key *key, uint32 data_idx, uint8 *success);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_delete_by_index
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_delete_by_index_cb)(
    int unit, uint32 data_index);

/**
 * implemented by: dbal_db_hw_ent_groups_map_hash_tbl_get_by_index
 */
typedef int (*dbal_db_hw_ent_groups_map_hash_tbl_get_by_index_cb)(
    int unit, uint32 data_index, hw_ent_groups_map_hash_key *key, uint8 *found);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable table_type
 */
typedef struct {
    dbal_db_sw_tables_table_type_set_cb set;
    dbal_db_sw_tables_table_type_get_cb get;
} dbal_db_sw_tables_table_type_cbs;

/**
 * This structure holds the access functions for the variable entries
 */
typedef struct {
    dbal_db_sw_tables_entries_alloc_bitmap_cb alloc_bitmap;
    dbal_db_sw_tables_entries_bit_set_cb bit_set;
    dbal_db_sw_tables_entries_bit_clear_cb bit_clear;
    dbal_db_sw_tables_entries_bit_get_cb bit_get;
    dbal_db_sw_tables_entries_bit_range_read_cb bit_range_read;
    dbal_db_sw_tables_entries_bit_range_write_cb bit_range_write;
    dbal_db_sw_tables_entries_bit_range_and_cb bit_range_and;
    dbal_db_sw_tables_entries_bit_range_or_cb bit_range_or;
    dbal_db_sw_tables_entries_bit_range_xor_cb bit_range_xor;
    dbal_db_sw_tables_entries_bit_range_remove_cb bit_range_remove;
    dbal_db_sw_tables_entries_bit_range_negate_cb bit_range_negate;
    dbal_db_sw_tables_entries_bit_range_clear_cb bit_range_clear;
    dbal_db_sw_tables_entries_bit_range_set_cb bit_range_set;
    dbal_db_sw_tables_entries_bit_range_null_cb bit_range_null;
    dbal_db_sw_tables_entries_bit_range_test_cb bit_range_test;
    dbal_db_sw_tables_entries_bit_range_eq_cb bit_range_eq;
    dbal_db_sw_tables_entries_bit_range_count_cb bit_range_count;
} dbal_db_sw_tables_entries_cbs;

/**
 * This structure holds the access functions for the variable hash_table
 */
typedef struct {
    dbal_db_sw_tables_hash_table_create_cb create;
    dbal_db_sw_tables_hash_table_find_cb find;
    dbal_db_sw_tables_hash_table_insert_cb insert;
    dbal_db_sw_tables_hash_table_get_next_cb get_next;
    dbal_db_sw_tables_hash_table_clear_cb clear;
    dbal_db_sw_tables_hash_table_delete_cb delete;
    dbal_db_sw_tables_hash_table_insert_at_index_cb insert_at_index;
    dbal_db_sw_tables_hash_table_delete_by_index_cb delete_by_index;
    dbal_db_sw_tables_hash_table_get_by_index_cb get_by_index;
} dbal_db_sw_tables_hash_table_cbs;

/**
 * This structure holds the access functions for the variable dbal_sw_state_table_t
 */
typedef struct {
    /**
     * Access struct for table_type
     */
    dbal_db_sw_tables_table_type_cbs table_type;
    /**
     * Access struct for entries
     */
    dbal_db_sw_tables_entries_cbs entries;
    /**
     * Access struct for hash_table
     */
    dbal_db_sw_tables_hash_table_cbs hash_table;
} dbal_db_sw_tables_cbs;

/**
 * This structure holds the access functions for the variable skip_read_from_shadow
 */
typedef struct {
    dbal_db_mdb_access_skip_read_from_shadow_set_cb set;
    dbal_db_mdb_access_skip_read_from_shadow_get_cb get;
} dbal_db_mdb_access_skip_read_from_shadow_cbs;

/**
 * This structure holds the access functions for the variable mdb_access_t
 */
typedef struct {
    /**
     * Access struct for skip_read_from_shadow
     */
    dbal_db_mdb_access_skip_read_from_shadow_cbs skip_read_from_shadow;
} dbal_db_mdb_access_cbs;

/**
 * This structure holds the access functions for the variable nof_entries
 */
typedef struct {
    dbal_db_mdb_phy_tables_nof_entries_set_cb set;
    dbal_db_mdb_phy_tables_nof_entries_get_cb get;
    dbal_db_mdb_phy_tables_nof_entries_inc_cb inc;
    dbal_db_mdb_phy_tables_nof_entries_dec_cb dec;
} dbal_db_mdb_phy_tables_nof_entries_cbs;

/**
 * This structure holds the access functions for the variable mdb_phy_table_t
 */
typedef struct {
    /**
     * Access struct for nof_entries
     */
    dbal_db_mdb_phy_tables_nof_entries_cbs nof_entries;
} dbal_db_mdb_phy_tables_cbs;

/**
 * This structure holds the access functions for the variable table_status
 */
typedef struct {
    dbal_db_tables_properties_table_status_set_cb set;
    dbal_db_tables_properties_table_status_get_cb get;
} dbal_db_tables_properties_table_status_cbs;

/**
 * This structure holds the access functions for the variable nof_set_operations
 */
typedef struct {
    dbal_db_tables_properties_nof_set_operations_set_cb set;
    dbal_db_tables_properties_nof_set_operations_get_cb get;
    dbal_db_tables_properties_nof_set_operations_inc_cb inc;
    dbal_db_tables_properties_nof_set_operations_dec_cb dec;
} dbal_db_tables_properties_nof_set_operations_cbs;

/**
 * This structure holds the access functions for the variable nof_get_operations
 */
typedef struct {
    dbal_db_tables_properties_nof_get_operations_set_cb set;
    dbal_db_tables_properties_nof_get_operations_get_cb get;
    dbal_db_tables_properties_nof_get_operations_inc_cb inc;
    dbal_db_tables_properties_nof_get_operations_dec_cb dec;
} dbal_db_tables_properties_nof_get_operations_cbs;

/**
 * This structure holds the access functions for the variable nof_entries
 */
typedef struct {
    dbal_db_tables_properties_nof_entries_set_cb set;
    dbal_db_tables_properties_nof_entries_get_cb get;
    dbal_db_tables_properties_nof_entries_inc_cb inc;
    dbal_db_tables_properties_nof_entries_dec_cb dec;
} dbal_db_tables_properties_nof_entries_cbs;

/**
 * This structure holds the access functions for the variable tcam_handler_id
 */
typedef struct {
    dbal_db_tables_properties_tcam_handler_id_set_cb set;
    dbal_db_tables_properties_tcam_handler_id_get_cb get;
} dbal_db_tables_properties_tcam_handler_id_cbs;

/**
 * This structure holds the access functions for the variable indications_bm
 */
typedef struct {
    dbal_db_tables_properties_indications_bm_set_cb set;
    dbal_db_tables_properties_indications_bm_get_cb get;
} dbal_db_tables_properties_indications_bm_cbs;

/**
 * This structure holds the access functions for the variable bitmap
 */
typedef struct {
    dbal_db_tables_properties_iterator_optimized_bitmap_alloc_bitmap_cb alloc_bitmap;
    dbal_db_tables_properties_iterator_optimized_bitmap_bit_set_cb bit_set;
    dbal_db_tables_properties_iterator_optimized_bitmap_bit_clear_cb bit_clear;
    dbal_db_tables_properties_iterator_optimized_bitmap_bit_get_cb bit_get;
    dbal_db_tables_properties_iterator_optimized_bitmap_bit_range_read_cb bit_range_read;
} dbal_db_tables_properties_iterator_optimized_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dbal_sw_state_iterator_optimized_t
 */
typedef struct {
    dbal_db_tables_properties_iterator_optimized_alloc_cb alloc;
    /**
     * Access struct for bitmap
     */
    dbal_db_tables_properties_iterator_optimized_bitmap_cbs bitmap;
} dbal_db_tables_properties_iterator_optimized_cbs;

/**
 * This structure holds the access functions for the variable dbal_sw_state_table_properties_t
 */
typedef struct {
    /**
     * Access struct for table_status
     */
    dbal_db_tables_properties_table_status_cbs table_status;
    /**
     * Access struct for nof_set_operations
     */
    dbal_db_tables_properties_nof_set_operations_cbs nof_set_operations;
    /**
     * Access struct for nof_get_operations
     */
    dbal_db_tables_properties_nof_get_operations_cbs nof_get_operations;
    /**
     * Access struct for nof_entries
     */
    dbal_db_tables_properties_nof_entries_cbs nof_entries;
    /**
     * Access struct for tcam_handler_id
     */
    dbal_db_tables_properties_tcam_handler_id_cbs tcam_handler_id;
    /**
     * Access struct for indications_bm
     */
    dbal_db_tables_properties_indications_bm_cbs indications_bm;
    /**
     * Access struct for iterator_optimized
     */
    dbal_db_tables_properties_iterator_optimized_cbs iterator_optimized;
} dbal_db_tables_properties_cbs;

/**
 * This structure holds the access functions for the variable table_id
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_table_id_set_cb set;
    dbal_db_dbal_dynamic_tables_table_id_get_cb get;
} dbal_db_dbal_dynamic_tables_table_id_cbs;

/**
 * This structure holds the access functions for the variable table_name
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_table_name_set_cb set;
    dbal_db_dbal_dynamic_tables_table_name_get_cb get;
} dbal_db_dbal_dynamic_tables_table_name_cbs;

/**
 * This structure holds the access functions for the variable labels
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_labels_set_cb set;
    dbal_db_dbal_dynamic_tables_labels_get_cb get;
    dbal_db_dbal_dynamic_tables_labels_alloc_cb alloc;
} dbal_db_dbal_dynamic_tables_labels_cbs;

/**
 * This structure holds the access functions for the variable data
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_data_set_cb set;
    dbal_db_dbal_dynamic_tables_data_get_cb get;
} dbal_db_dbal_dynamic_tables_data_cbs;

/**
 * This structure holds the access functions for the variable key_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_key_info_data_set_cb set;
    dbal_db_dbal_dynamic_tables_key_info_data_get_cb get;
    dbal_db_dbal_dynamic_tables_key_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_tables_key_info_data_cbs;

/**
 * This structure holds the access functions for the variable multi_res_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_multi_res_info_data_set_cb set;
    dbal_db_dbal_dynamic_tables_multi_res_info_data_get_cb get;
    dbal_db_dbal_dynamic_tables_multi_res_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_tables_multi_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable res_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_res_info_data_set_cb set;
    dbal_db_dbal_dynamic_tables_res_info_data_get_cb get;
    dbal_db_dbal_dynamic_tables_res_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_tables_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable access_info
 */
typedef struct {
    dbal_db_dbal_dynamic_tables_access_info_set_cb set;
    dbal_db_dbal_dynamic_tables_access_info_get_cb get;
    dbal_db_dbal_dynamic_tables_access_info_alloc_cb alloc;
    dbal_db_dbal_dynamic_tables_access_info_memread_cb memread;
    dbal_db_dbal_dynamic_tables_access_info_memwrite_cb memwrite;
    dbal_db_dbal_dynamic_tables_access_info_memcmp_cb memcmp;
    dbal_db_dbal_dynamic_tables_access_info_memset_cb memset;
} dbal_db_dbal_dynamic_tables_access_info_cbs;

/**
 * This structure holds the access functions for the variable dbal_dynamic_table_t
 */
typedef struct {
    /**
     * Access struct for table_id
     */
    dbal_db_dbal_dynamic_tables_table_id_cbs table_id;
    /**
     * Access struct for table_name
     */
    dbal_db_dbal_dynamic_tables_table_name_cbs table_name;
    /**
     * Access struct for labels
     */
    dbal_db_dbal_dynamic_tables_labels_cbs labels;
    /**
     * Access struct for data
     */
    dbal_db_dbal_dynamic_tables_data_cbs data;
    /**
     * Access struct for key_info_data
     */
    dbal_db_dbal_dynamic_tables_key_info_data_cbs key_info_data;
    /**
     * Access struct for multi_res_info_data
     */
    dbal_db_dbal_dynamic_tables_multi_res_info_data_cbs multi_res_info_data;
    /**
     * Access struct for res_info_data
     */
    dbal_db_dbal_dynamic_tables_res_info_data_cbs res_info_data;
    /**
     * Access struct for access_info
     */
    dbal_db_dbal_dynamic_tables_access_info_cbs access_info;
} dbal_db_dbal_dynamic_tables_cbs;

/**
 * This structure holds the access functions for the variable table_id
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_table_id_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_table_id_get_cb get;
} dbal_db_dbal_dynamic_xml_tables_table_id_cbs;

/**
 * This structure holds the access functions for the variable table_name
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_table_name_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_table_name_get_cb get;
} dbal_db_dbal_dynamic_xml_tables_table_name_cbs;

/**
 * This structure holds the access functions for the variable labels
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_labels_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_labels_get_cb get;
    dbal_db_dbal_dynamic_xml_tables_labels_alloc_cb alloc;
} dbal_db_dbal_dynamic_xml_tables_labels_cbs;

/**
 * This structure holds the access functions for the variable data
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_data_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_data_get_cb get;
} dbal_db_dbal_dynamic_xml_tables_data_cbs;

/**
 * This structure holds the access functions for the variable key_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_key_info_data_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_key_info_data_get_cb get;
    dbal_db_dbal_dynamic_xml_tables_key_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_xml_tables_key_info_data_cbs;

/**
 * This structure holds the access functions for the variable multi_res_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_get_cb get;
    dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable res_info_data
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_res_info_data_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_res_info_data_get_cb get;
    dbal_db_dbal_dynamic_xml_tables_res_info_data_alloc_cb alloc;
} dbal_db_dbal_dynamic_xml_tables_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable access_info
 */
typedef struct {
    dbal_db_dbal_dynamic_xml_tables_access_info_set_cb set;
    dbal_db_dbal_dynamic_xml_tables_access_info_get_cb get;
    dbal_db_dbal_dynamic_xml_tables_access_info_alloc_cb alloc;
    dbal_db_dbal_dynamic_xml_tables_access_info_memread_cb memread;
    dbal_db_dbal_dynamic_xml_tables_access_info_memwrite_cb memwrite;
    dbal_db_dbal_dynamic_xml_tables_access_info_memcmp_cb memcmp;
    dbal_db_dbal_dynamic_xml_tables_access_info_memset_cb memset;
} dbal_db_dbal_dynamic_xml_tables_access_info_cbs;

/**
 * This structure holds the access functions for the variable dbal_dynamic_table_t
 */
typedef struct {
    /**
     * Access struct for table_id
     */
    dbal_db_dbal_dynamic_xml_tables_table_id_cbs table_id;
    /**
     * Access struct for table_name
     */
    dbal_db_dbal_dynamic_xml_tables_table_name_cbs table_name;
    /**
     * Access struct for labels
     */
    dbal_db_dbal_dynamic_xml_tables_labels_cbs labels;
    /**
     * Access struct for data
     */
    dbal_db_dbal_dynamic_xml_tables_data_cbs data;
    /**
     * Access struct for key_info_data
     */
    dbal_db_dbal_dynamic_xml_tables_key_info_data_cbs key_info_data;
    /**
     * Access struct for multi_res_info_data
     */
    dbal_db_dbal_dynamic_xml_tables_multi_res_info_data_cbs multi_res_info_data;
    /**
     * Access struct for res_info_data
     */
    dbal_db_dbal_dynamic_xml_tables_res_info_data_cbs res_info_data;
    /**
     * Access struct for access_info
     */
    dbal_db_dbal_dynamic_xml_tables_access_info_cbs access_info;
} dbal_db_dbal_dynamic_xml_tables_cbs;

/**
 * This structure holds the access functions for the variable field_id
 */
typedef struct {
    dbal_db_dbal_fields_field_id_set_cb set;
    dbal_db_dbal_fields_field_id_get_cb get;
} dbal_db_dbal_fields_field_id_cbs;

/**
 * This structure holds the access functions for the variable field_type
 */
typedef struct {
    dbal_db_dbal_fields_field_type_set_cb set;
    dbal_db_dbal_fields_field_type_get_cb get;
} dbal_db_dbal_fields_field_type_cbs;

/**
 * This structure holds the access functions for the variable field_name
 */
typedef struct {
    dbal_db_dbal_fields_field_name_set_cb set;
    dbal_db_dbal_fields_field_name_get_cb get;
} dbal_db_dbal_fields_field_name_cbs;

/**
 * This structure holds the access functions for the variable dbal_dynamic_fields_t
 */
typedef struct {
    /**
     * Access struct for field_id
     */
    dbal_db_dbal_fields_field_id_cbs field_id;
    /**
     * Access struct for field_type
     */
    dbal_db_dbal_fields_field_type_cbs field_type;
    /**
     * Access struct for field_name
     */
    dbal_db_dbal_fields_field_name_cbs field_name;
} dbal_db_dbal_fields_cbs;

/**
 * This structure holds the access functions for the variable multi_res_info_status
 */
typedef struct {
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_set_cb set;
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_get_cb get;
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_alloc_cb alloc;
} dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_cbs;

/**
 * This structure holds the access functions for the variable multi_res_info_data
 */
typedef struct {
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_set_cb set;
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_get_cb get;
} dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable res_info_data
 */
typedef struct {
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_set_cb set;
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_get_cb get;
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_alloc_cb alloc;
} dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_cbs;

/**
 * This structure holds the access functions for the variable dbal_multi_res_info_data_t
 */
typedef struct {
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_alloc_cb alloc;
    /**
     * Access struct for multi_res_info_data
     */
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_multi_res_info_data_cbs multi_res_info_data;
    /**
     * Access struct for res_info_data
     */
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_res_info_data_cbs res_info_data;
} dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_cbs;

/**
 * This structure holds the access functions for the variable dbal_dynamic_table_res_types_t
 */
typedef struct {
    /**
     * Access struct for multi_res_info_status
     */
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_status_cbs multi_res_info_status;
    /**
     * Access struct for multi_res_info_data_sep
     */
    dbal_db_dbal_ppmc_table_res_types_multi_res_info_data_sep_cbs multi_res_info_data_sep;
} dbal_db_dbal_ppmc_table_res_types_cbs;

/**
 * This structure holds the access functions for the variable hw_ent_direct_map_hash_tbl
 */
typedef struct {
    dbal_db_hw_ent_direct_map_hash_tbl_create_cb create;
    dbal_db_hw_ent_direct_map_hash_tbl_find_cb find;
    dbal_db_hw_ent_direct_map_hash_tbl_insert_cb insert;
    dbal_db_hw_ent_direct_map_hash_tbl_get_next_cb get_next;
    dbal_db_hw_ent_direct_map_hash_tbl_clear_cb clear;
    dbal_db_hw_ent_direct_map_hash_tbl_delete_cb delete;
    dbal_db_hw_ent_direct_map_hash_tbl_insert_at_index_cb insert_at_index;
    dbal_db_hw_ent_direct_map_hash_tbl_delete_by_index_cb delete_by_index;
    dbal_db_hw_ent_direct_map_hash_tbl_get_by_index_cb get_by_index;
} dbal_db_hw_ent_direct_map_hash_tbl_cbs;

/**
 * This structure holds the access functions for the variable hw_ent_groups_map_hash_tbl
 */
typedef struct {
    dbal_db_hw_ent_groups_map_hash_tbl_create_cb create;
    dbal_db_hw_ent_groups_map_hash_tbl_find_cb find;
    dbal_db_hw_ent_groups_map_hash_tbl_insert_cb insert;
    dbal_db_hw_ent_groups_map_hash_tbl_get_next_cb get_next;
    dbal_db_hw_ent_groups_map_hash_tbl_clear_cb clear;
    dbal_db_hw_ent_groups_map_hash_tbl_delete_cb delete;
    dbal_db_hw_ent_groups_map_hash_tbl_insert_at_index_cb insert_at_index;
    dbal_db_hw_ent_groups_map_hash_tbl_delete_by_index_cb delete_by_index;
    dbal_db_hw_ent_groups_map_hash_tbl_get_by_index_cb get_by_index;
} dbal_db_hw_ent_groups_map_hash_tbl_cbs;

/**
 * This structure holds the access functions for the variable dnx_dbal_sw_state_t
 */
typedef struct {
    dbal_db_is_init_cb is_init;
    dbal_db_init_cb init;
    /**
     * Access struct for sw_tables
     */
    dbal_db_sw_tables_cbs sw_tables;
    /**
     * Access struct for mdb_access
     */
    dbal_db_mdb_access_cbs mdb_access;
    /**
     * Access struct for mdb_phy_tables
     */
    dbal_db_mdb_phy_tables_cbs mdb_phy_tables;
    /**
     * Access struct for tables_properties
     */
    dbal_db_tables_properties_cbs tables_properties;
    /**
     * Access struct for dbal_dynamic_tables
     */
    dbal_db_dbal_dynamic_tables_cbs dbal_dynamic_tables;
    /**
     * Access struct for dbal_dynamic_xml_tables
     */
    dbal_db_dbal_dynamic_xml_tables_cbs dbal_dynamic_xml_tables;
    /**
     * Access struct for dbal_fields
     */
    dbal_db_dbal_fields_cbs dbal_fields;
    /**
     * Access struct for dbal_ppmc_table_res_types
     */
    dbal_db_dbal_ppmc_table_res_types_cbs dbal_ppmc_table_res_types;
    /**
     * Access struct for hw_ent_direct_map_hash_tbl
     */
    dbal_db_hw_ent_direct_map_hash_tbl_cbs hw_ent_direct_map_hash_tbl;
    /**
     * Access struct for hw_ent_groups_map_hash_tbl
     */
    dbal_db_hw_ent_groups_map_hash_tbl_cbs hw_ent_groups_map_hash_tbl;
} dbal_db_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dbal_sw_state_table_type_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dbal_sw_state_table_type_e_get_name(dbal_sw_state_table_type_e value);


/*
 *
 * get_name function for enum type dbal_table_status_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dbal_table_status_e_get_name(dbal_table_status_e value);


/*
 *
 * get_name function for enum type dbal_multi_res_info_status_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dbal_multi_res_info_status_e_get_name(dbal_multi_res_info_status_e value);


/*
 * Global Variables
 */

extern dbal_db_cbs dbal_db;

#endif /* __DBAL_ACCESS_H__ */
