/** \file dnx_data_internal_arr.h
 * 
 * MODULE DEVICE DATA - DNX_DATA
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2019 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_INTERNAL_ARR_H_
/*{*/
#define _DNX_DATA_INTERNAL_ARR_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <soc/dnx/dnx_data/auto_generated/dnx_data_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_arr.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * TYPEDEFS:
 * {
 */
/**
 * \brief 
 * Submodule enum
 */
typedef enum
{
    dnx_data_arr_submodule_prefix,
    dnx_data_arr_submodule_max_nof_entries,
    dnx_data_arr_submodule_formats,

    /**
     * Must be last one!
     */
    _dnx_data_arr_submodule_nof
} dnx_data_arr_submodule_e;

/*
 * }
 */

/*
 * SUBMODULE PREFIX:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_arr_prefix_feature_get(
    int unit,
    dnx_data_arr_prefix_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_0,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_1,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_2,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_3,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_4,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_5,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_6,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_7,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_8,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_9,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_10,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_11,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_12,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_13,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_14,
    dnx_data_arr_prefix_define_ETPP_ETPS_FORMATS___prefix_15,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_0,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_2,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_3,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_4,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_5,
    dnx_data_arr_prefix_define_IRPP_FEC_ENTRY_FORMAT___prefix_6,
    dnx_data_arr_prefix_define_IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_0,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_0,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_1,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_2,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_3,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_4,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_5,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_6,
    dnx_data_arr_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_7,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_0,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_1,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_2,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_3,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_4,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_5,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_6,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_7,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_8,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_9,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_10,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_11,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_12,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_13,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_14,
    dnx_data_arr_prefix_define_IRPP_IN_LIF_FORMATS___prefix_15,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_0,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_1,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_2,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_3,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_4,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_5,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_6,
    dnx_data_arr_prefix_define_IRPP_VSI_FORMATS___prefix_7,

    /**
     * Must be last one!
     */
    _dnx_data_arr_prefix_define_nof
} dnx_data_arr_prefix_define_e;

/* Get Data */
/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_0'
 * prefix of format ETPP_ETPS_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_1
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_1'
 * prefix of format ETPP_ETPS_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_2
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_2'
 * prefix of format ETPP_ETPS_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_3
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_3'
 * prefix of format ETPP_ETPS_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_3_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_4
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_4'
 * prefix of format ETPP_ETPS_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_5
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_5'
 * prefix of format ETPP_ETPS_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_6
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_6'
 * prefix of format ETPP_ETPS_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_6_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_7
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_7'
 * prefix of format ETPP_ETPS_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_7_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_8
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_8'
 * prefix of format ETPP_ETPS_FORMATS at index 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_8 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_8_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_9
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_9'
 * prefix of format ETPP_ETPS_FORMATS at index 9
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_9 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_9_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_10
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_10'
 * prefix of format ETPP_ETPS_FORMATS at index 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_10 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_10_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_11
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_11'
 * prefix of format ETPP_ETPS_FORMATS at index 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_11 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_11_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_12
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_12'
 * prefix of format ETPP_ETPS_FORMATS at index 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_12 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_12_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_13
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_13'
 * prefix of format ETPP_ETPS_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_13 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_13_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_14
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_14'
 * prefix of format ETPP_ETPS_FORMATS at index 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_14 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_14_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_15
 * Module - 'arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_15'
 * prefix of format ETPP_ETPS_FORMATS at index 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_15 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_ETPP_ETPS_FORMATS___prefix_15_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_0'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_2
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_2'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_3
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_3'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_3_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_4
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_4'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_5
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_5'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_6
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_6'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_6_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_0'
 * prefix of format IRPP_FEC_SUPER_ENTRY_FORMAT at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_0'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_1
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_1'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_2
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_2'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_3
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_3'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_3_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_4
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_4'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_5
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_5'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_6
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_6'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_6_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_7
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_7'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_7_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_0'
 * prefix of format IRPP_IN_LIF_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_1
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_1'
 * prefix of format IRPP_IN_LIF_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_2
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_2'
 * prefix of format IRPP_IN_LIF_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_3
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_3'
 * prefix of format IRPP_IN_LIF_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_3_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_4
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_4'
 * prefix of format IRPP_IN_LIF_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_5
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_5'
 * prefix of format IRPP_IN_LIF_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_6
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_6'
 * prefix of format IRPP_IN_LIF_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_6_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_7
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_7'
 * prefix of format IRPP_IN_LIF_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_7_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_8
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_8'
 * prefix of format IRPP_IN_LIF_FORMATS at index 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_8 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_8_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_9
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_9'
 * prefix of format IRPP_IN_LIF_FORMATS at index 9
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_9 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_9_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_10
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_10'
 * prefix of format IRPP_IN_LIF_FORMATS at index 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_10 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_10_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_11
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_11'
 * prefix of format IRPP_IN_LIF_FORMATS at index 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_11 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_11_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_12
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_12'
 * prefix of format IRPP_IN_LIF_FORMATS at index 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_12 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_12_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_13
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_13'
 * prefix of format IRPP_IN_LIF_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_13 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_13_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_14
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_14'
 * prefix of format IRPP_IN_LIF_FORMATS at index 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_14 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_14_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_15
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_15'
 * prefix of format IRPP_IN_LIF_FORMATS at index 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_15 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_15_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_0
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_0'
 * prefix of format IRPP_VSI_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_1
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_1'
 * prefix of format IRPP_VSI_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_2
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_2'
 * prefix of format IRPP_VSI_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_3
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_3'
 * prefix of format IRPP_VSI_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_3_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_4
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_4'
 * prefix of format IRPP_VSI_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_5
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_5'
 * prefix of format IRPP_VSI_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_6
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_6'
 * prefix of format IRPP_VSI_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_6_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_7
 * Module - 'arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_7'
 * prefix of format IRPP_VSI_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_prefix_IRPP_VSI_FORMATS___prefix_7_get(
    int unit);

/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_arr_prefix_table_nof
} dnx_data_arr_prefix_table_e;

/* Get Data */
/* Get Value Str */
/* Get Table info */
/*
 * SUBMODULE MAX_NOF_ENTRIES:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_arr_max_nof_entries_feature_get(
    int unit,
    dnx_data_arr_max_nof_entries_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{
    dnx_data_arr_max_nof_entries_define_AGE_PROFILE_ARR,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_1_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_2_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_3_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_4_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_5_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_ENCAP_ARR_ToS_plus_2,
    dnx_data_arr_max_nof_entries_define_ETPP_FWD_ARR_ToS,
    dnx_data_arr_max_nof_entries_define_ETPP_FWD_ARR_ToS_plus_1,
    dnx_data_arr_max_nof_entries_define_ETPP_Preprocessing_ARR,
    dnx_data_arr_max_nof_entries_define_ETPP_Termination_1_ARR,
    dnx_data_arr_max_nof_entries_define_ETPP_Termination_2_ARR,
    dnx_data_arr_max_nof_entries_define_IPPB_ACCEPTED_ARR,
    dnx_data_arr_max_nof_entries_define_IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR,
    dnx_data_arr_max_nof_entries_define_IPPB_EXPECTED_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_FEC_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_FWD1_FWD_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_FWD1_RPF_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_SUPER_FEC_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_VSI_ARR,
    dnx_data_arr_max_nof_entries_define_IRPP_VTT_ARR,
    dnx_data_arr_max_nof_entries_define_ITPP_MACT_LEARN_JR1_TRANSLATE_ARR,
    dnx_data_arr_max_nof_entries_define_PPMC_ERPP_ARR,
    dnx_data_arr_max_nof_entries_define_USER_ALLOCATION,

    /**
     * Must be last one!
     */
    _dnx_data_arr_max_nof_entries_define_nof
} dnx_data_arr_max_nof_entries_define_e;

/* Get Data */
/**
 * \brief returns define data of AGE_PROFILE_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'AGE_PROFILE_ARR'
 * max_nof_entries of AGE_PROFILE_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     AGE_PROFILE_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_AGE_PROFILE_ARR_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_1_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_1_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_1_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_1_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_1_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_2_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_2_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_2_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_2_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_2_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_3_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_3_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_3_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_3_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_3_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_4_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_4_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_4_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_4_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_4_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_5_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_5_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_5_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_5_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_5_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_ARR_ToS_plus_2
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_ARR_ToS_plus_2'
 * max_nof_entries of ETPP_ENCAP_ARR_ToS_plus_2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_ARR_ToS_plus_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_ENCAP_ARR_ToS_plus_2_get(
    int unit);

/**
 * \brief returns define data of ETPP_FWD_ARR_ToS
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_FWD_ARR_ToS'
 * max_nof_entries of ETPP_FWD_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_FWD_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_FWD_ARR_ToS_get(
    int unit);

/**
 * \brief returns define data of ETPP_FWD_ARR_ToS_plus_1
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_FWD_ARR_ToS_plus_1'
 * max_nof_entries of ETPP_FWD_ARR_ToS_plus_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_FWD_ARR_ToS_plus_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_FWD_ARR_ToS_plus_1_get(
    int unit);

/**
 * \brief returns define data of ETPP_Preprocessing_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_Preprocessing_ARR'
 * max_nof_entries of ETPP_Preprocessing_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Preprocessing_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_Preprocessing_ARR_get(
    int unit);

/**
 * \brief returns define data of ETPP_Termination_1_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_Termination_1_ARR'
 * max_nof_entries of ETPP_Termination_1_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Termination_1_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_Termination_1_ARR_get(
    int unit);

/**
 * \brief returns define data of ETPP_Termination_2_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ETPP_Termination_2_ARR'
 * max_nof_entries of ETPP_Termination_2_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Termination_2_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ETPP_Termination_2_ARR_get(
    int unit);

/**
 * \brief returns define data of IPPB_ACCEPTED_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IPPB_ACCEPTED_ARR'
 * max_nof_entries of IPPB_ACCEPTED_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_ACCEPTED_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IPPB_ACCEPTED_ARR_get(
    int unit);

/**
 * \brief returns define data of IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR'
 * max_nof_entries of IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR_get(
    int unit);

/**
 * \brief returns define data of IPPB_EXPECTED_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IPPB_EXPECTED_ARR'
 * max_nof_entries of IPPB_EXPECTED_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_EXPECTED_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IPPB_EXPECTED_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_FEC_ARR'
 * max_nof_entries of IRPP_FEC_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_FEC_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD1_FWD_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_FWD1_FWD_ARR'
 * max_nof_entries of IRPP_FWD1_FWD_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD1_FWD_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_FWD1_FWD_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD1_RPF_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_FWD1_RPF_ARR'
 * max_nof_entries of IRPP_FWD1_RPF_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD1_RPF_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_FWD1_RPF_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_SUPER_FEC_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_SUPER_FEC_ARR'
 * max_nof_entries of IRPP_SUPER_FEC_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_SUPER_FEC_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_SUPER_FEC_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_VSI_ARR'
 * max_nof_entries of IRPP_VSI_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_VSI_ARR_get(
    int unit);

/**
 * \brief returns define data of IRPP_VTT_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'IRPP_VTT_ARR'
 * max_nof_entries of IRPP_VTT_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VTT_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_IRPP_VTT_ARR_get(
    int unit);

/**
 * \brief returns define data of ITPP_MACT_LEARN_JR1_TRANSLATE_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'ITPP_MACT_LEARN_JR1_TRANSLATE_ARR'
 * max_nof_entries of ITPP_MACT_LEARN_JR1_TRANSLATE_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ITPP_MACT_LEARN_JR1_TRANSLATE_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_ITPP_MACT_LEARN_JR1_TRANSLATE_ARR_get(
    int unit);

/**
 * \brief returns define data of PPMC_ERPP_ARR
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'PPMC_ERPP_ARR'
 * max_nof_entries of PPMC_ERPP_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     PPMC_ERPP_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_PPMC_ERPP_ARR_get(
    int unit);

/**
 * \brief returns define data of USER_ALLOCATION
 * Module - 'arr', Submodule - 'max_nof_entries', data - 'USER_ALLOCATION'
 * max_nof_entries of USER_ALLOCATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     USER_ALLOCATION - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_max_nof_entries_USER_ALLOCATION_get(
    int unit);

/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_arr_max_nof_entries_table_nof
} dnx_data_arr_max_nof_entries_table_e;

/* Get Data */
/* Get Value Str */
/* Get Table info */
/*
 * SUBMODULE FORMATS:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_arr_formats_feature_get(
    int unit,
    dnx_data_arr_formats_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_arr_formats_define_nof
} dnx_data_arr_formats_define_e;

/* Get Data */
/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{
    dnx_data_arr_formats_table_files,
    dnx_data_arr_formats_table_MACT_AGE_PROFILE_ARR_CFG,
    dnx_data_arr_formats_table_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0,
    dnx_data_arr_formats_table_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1,
    dnx_data_arr_formats_table_ETPPA_PRP_EES_ARR_CONFIGURATION,
    dnx_data_arr_formats_table_ETPPA_PRP_EES_ARR_CONFIGURATION___array,
    dnx_data_arr_formats_table_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION,
    dnx_data_arr_formats_table_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array,
    dnx_data_arr_formats_table_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION,
    dnx_data_arr_formats_table_IPPB_ACCEPTED_ARR_FORMAT_CONFIG,
    dnx_data_arr_formats_table_MACT_MRQ_ARR_CFG,
    dnx_data_arr_formats_table_IPPB_EXPECTED_ARR_FORMAT_CONFIG,
    dnx_data_arr_formats_table_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1,
    dnx_data_arr_formats_table_IPPF_VSI_FORMAT_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array,
    dnx_data_arr_formats_table_IPPD_LEARN_ARR_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_OLP_LEARN_ARR_CONFIGURATION_TABLE,
    dnx_data_arr_formats_table_ERPP_EGRESS_MCDB_FORMAT_CFG,

    /**
     * Must be last one!
     */
    _dnx_data_arr_formats_table_nof
} dnx_data_arr_formats_table_e;

/* Get Data */
/**
 * \brief get table files entry 
 * file locations
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     files - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_files_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_files_t * dnx_data_arr_formats_files_get(
    int unit);

/**
 * \brief get table MACT_AGE_PROFILE_ARR_CFG entry 
 * MACT_AGE_PROFILE_ARR_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MACT_AGE_PROFILE_ARR_CFG - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_MACT_AGE_PROFILE_ARR_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_MACT_AGE_PROFILE_ARR_CFG_t * dnx_data_arr_formats_MACT_AGE_PROFILE_ARR_CFG_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 entry 
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_t * dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 entry 
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_t * dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_get(
    int unit,
    int index);

/**
 * \brief get table ETPPA_PRP_EES_ARR_CONFIGURATION entry 
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_t * dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_get(
    int unit,
    int index);

/**
 * \brief get table ETPPA_PRP_EES_ARR_CONFIGURATION___array entry 
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_t * dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION entry 
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_get(
    int unit,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array entry 
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_2_CONFIGURATION entry 
 * ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_2_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_get(
    int unit,
    int index);

/**
 * \brief get table IPPB_ACCEPTED_ARR_FORMAT_CONFIG entry 
 * IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_ACCEPTED_ARR_FORMAT_CONFIG - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_t * dnx_data_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_get(
    int unit,
    int index);

/**
 * \brief get table MACT_MRQ_ARR_CFG entry 
 * MACT_MRQ_ARR_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MACT_MRQ_ARR_CFG - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_MACT_MRQ_ARR_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_MACT_MRQ_ARR_CFG_t * dnx_data_arr_formats_MACT_MRQ_ARR_CFG_get(
    int unit,
    int index);

/**
 * \brief get table IPPB_EXPECTED_ARR_FORMAT_CONFIG entry 
 * IPPB_EXPECTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_EXPECTED_ARR_FORMAT_CONFIG - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_t * dnx_data_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_get(
    int unit,
    int index);

/**
 * \brief get table IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPD_FEC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 entry 
 * IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_t * dnx_data_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_get(
    int unit,
    int index);

/**
 * \brief get table IPPF_VSI_FORMAT_CONFIGURATION_TABLE entry 
 * IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPF_VSI_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_t * dnx_data_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPA_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPF_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_t * dnx_data_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_get(
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPD_LEARN_ARR_CONFIGURATION_TABLE entry 
 * IPPD_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_LEARN_ARR_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_t * dnx_data_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table OLP_LEARN_ARR_CONFIGURATION_TABLE entry 
 * OLP_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     OLP_LEARN_ARR_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_t * dnx_data_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_get(
    int unit,
    int index);

/**
 * \brief get table ERPP_EGRESS_MCDB_FORMAT_CFG entry 
 * ERPP_EGRESS_MCDB_FORMAT_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ERPP_EGRESS_MCDB_FORMAT_CFG - returns the relevant entry values grouped in struct - see dnx_data_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_t * dnx_data_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_get(
    int unit,
    int index);

/* Get Value Str */
/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'files'
 * file locations
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_files_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'MACT_AGE_PROFILE_ARR_CFG'
 * MACT_AGE_PROFILE_ARR_CFG
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_MACT_AGE_PROFILE_ARR_CFG_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE'
 * ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_ENC_FORMAT_CONFIGURATION_TABLE'
 * ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE'
 * ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE'
 * ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0'
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1'
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPA_PRP_EES_ARR_CONFIGURATION'
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPA_PRP_EES_ARR_CONFIGURATION___array'
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_TERM_ETPS_ARR_1_CONFIGURATION'
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array'
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ETPPC_TERM_ETPS_ARR_2_CONFIGURATION'
 * ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPB_ACCEPTED_ARR_FORMAT_CONFIG'
 * IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'MACT_MRQ_ARR_CFG'
 * MACT_MRQ_ARR_CFG
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_MACT_MRQ_ARR_CFG_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPB_EXPECTED_ARR_FORMAT_CONFIG'
 * IPPB_EXPECTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array'
 * IPPD_FEC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array'
 * IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array'
 * IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array'
 * IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1'
 * IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPF_VSI_FORMAT_CONFIGURATION_TABLE'
 * IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array'
 * IPPA_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array'
 * IPPF_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'IPPD_LEARN_ARR_CONFIGURATION_TABLE'
 * IPPD_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'OLP_LEARN_ARR_CONFIGURATION_TABLE'
 * OLP_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/**
 * \brief Get table value as string
 * Module - 'arr', Submodule - 'formats', table - 'ERPP_EGRESS_MCDB_FORMAT_CFG'
 * ERPP_EGRESS_MCDB_FORMAT_CFG
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/* Get Table info */
/**
 * \brief get general info table about table (for example key size)files info
 * file locations
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     files - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_files_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)MACT_AGE_PROFILE_ARR_CFG info
 * MACT_AGE_PROFILE_ARR_CFG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     MACT_AGE_PROFILE_ARR_CFG - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_MACT_AGE_PROFILE_ARR_CFG_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE info
 * ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_ENC_FORMAT_CONFIGURATION_TABLE info
 * ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_ENC_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE info
 * ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE info
 * ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 info
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 info
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPA_PRP_EES_ARR_CONFIGURATION info
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPA_PRP_EES_ARR_CONFIGURATION___array info
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_1_CONFIGURATION info
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array info
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_2_CONFIGURATION info
 * ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_2_CONFIGURATION - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPB_ACCEPTED_ARR_FORMAT_CONFIG info
 * IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_ACCEPTED_ARR_FORMAT_CONFIG - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)MACT_MRQ_ARR_CFG info
 * MACT_MRQ_ARR_CFG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     MACT_MRQ_ARR_CFG - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_MACT_MRQ_ARR_CFG_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPB_EXPECTED_ARR_FORMAT_CONFIG info
 * IPPB_EXPECTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_EXPECTED_ARR_FORMAT_CONFIG - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array info
 * IPPD_FEC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array info
 * IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array info
 * IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array info
 * IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 info
 * IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPF_VSI_FORMAT_CONFIGURATION_TABLE info
 * IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPF_VSI_FORMAT_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array info
 * IPPA_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array info
 * IPPF_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)IPPD_LEARN_ARR_CONFIGURATION_TABLE info
 * IPPD_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPD_LEARN_ARR_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)OLP_LEARN_ARR_CONFIGURATION_TABLE info
 * OLP_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     OLP_LEARN_ARR_CONFIGURATION_TABLE - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_info_get(
    int unit);

/**
 * \brief get general info table about table (for example key size)ERPP_EGRESS_MCDB_FORMAT_CFG info
 * ERPP_EGRESS_MCDB_FORMAT_CFG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ERPP_EGRESS_MCDB_FORMAT_CFG - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_info_get(
    int unit);

/*
 * FUNCTIONS:
 * {
 */
/**
 * \brief Init module
 * 
 * \param [in] unit - Unit #
 * \param [out] module_data - pointer to module data
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_init(
    int unit,
    dnxc_data_module_t *module_data);

/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_INTERNAL_ARR_H_*/
/* *INDENT-ON* */
