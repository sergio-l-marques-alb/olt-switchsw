/** \file dnx_data_max_crps.h
 * 
 * MODULE DATA MAX - 
 * Maintain max value (of all devices) per define
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2019 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_MAX_CRPS_H_
/*{*/
#define _DNX_DATA_MAX_CRPS_H_
/*
 * INCLUDE FILES:
 * {
 */
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MAX DEFINES:
 * {
 */
/**
 * \brief
 * Number of counter engines per core
 */
#define DNX_DATA_MAX_CRPS_ENGINE_NOF_ENGINES (34)

/**
 * \brief
 * Number of mid counter engines per core
 */
#define DNX_DATA_MAX_CRPS_ENGINE_NOF_MID_ENGINES (8)

/**
 * \brief
 * Number of big counter engines per core
 */
#define DNX_DATA_MAX_CRPS_ENGINE_NOF_BIG_ENGINES (18)

/**
 * \brief
 * Number of counter databases per core
 */
#define DNX_DATA_MAX_CRPS_ENGINE_NOF_DATABASES (34)

/**
 * \brief
 * Number of entries in data mappnig table
 */
#define DNX_DATA_MAX_CRPS_ENGINE_DATA_MAPPING_TABLE_SIZE (1024)

/**
 * \brief
 * max size of the counter set
 */
#define DNX_DATA_MAX_CRPS_ENGINE_MAX_COUNTER_SET_SIZE (32)

/**
 * \brief
 * size of the counter set for OAM sources
 */
#define DNX_DATA_MAX_CRPS_ENGINE_OAM_COUNTER_SET_SIZE (1)

/**
 * \brief
 * number of bits of last address admitted per engine
 */
#define DNX_DATA_MAX_CRPS_ENGINE_LAST_ADDRESS_NOF_BITS (16)

/**
 * \brief
 * Indicates the FIFO depth in the host
 */
#define DNX_DATA_MAX_CRPS_EVICTION_COUNTERS_FIFO_DEPTH (16384)

/**
 * \brief
 * Indicates the number of FIFOs available for CRPS (for each core)
 */
#define DNX_DATA_MAX_CRPS_EVICTION_NOF_COUNTERS_FIFO (2)

/**
 * \brief
 * size (in bits) of one record that is copied by the DMA-FIFO
 */
#define DNX_DATA_MAX_CRPS_EVICTION_DMA_RECORD_ENTRY_NOF_BITS (120)

/**
 * \brief
 * size (in bits) of the packets, if format is packet and bytes
 */
#define DNX_DATA_MAX_CRPS_EVICTION_PACKET_AND_BYTES_PACKET_SIZE (30)

/**
 * \brief
 * The waiting period in clocks until requesting bubble, if EnginenScanBubbleRequestEnable=1
 */
#define DNX_DATA_MAX_CRPS_EVICTION_BUBBLE_BEFORE_REQUEST_TIMEOUT (500)

/**
 * \brief
 * The waiting period, after bubble reuest before forcing bubble (if force enable)
 */
#define DNX_DATA_MAX_CRPS_EVICTION_BUBBLE_AFTER_REQUEST_TIMEOUT (500)

/**
 * \brief
 * nof bit for sequential address (start/end)
 */
#define DNX_DATA_MAX_CRPS_EVICTION_SEQ_ADDRESS_NOF_BITS (17)

/**
 * \brief
 * define the size of the expansion (in bits)
 */
#define DNX_DATA_MAX_CRPS_EXPANSION_EXPANSION_SIZE (10)

/**
 * \brief
 * etpp command id that can be used for latency
 */
#define DNX_DATA_MAX_CRPS_LATENCY_ETPP_COMMAND_ID (5)

/**
 * \brief
 * offset of the port in the latency stat (flow) id  encoding
 */
#define DNX_DATA_MAX_CRPS_LATENCY_STAT_ID_PORT_OFFSET (0)

/**
 * \brief
 * offset of the traffic class in the latency stat (flow) id  encoding
 */
#define DNX_DATA_MAX_CRPS_LATENCY_STAT_ID_TC_OFFSET (8)

/**
 * \brief
 * offset of the multicast in the latency stat (flow) id  encoding
 */
#define DNX_DATA_MAX_CRPS_LATENCY_STAT_ID_MULTICAST_OFFSET (11)

/*
 * }
 */

/*}*/
#endif /*_DNX_DATA_MAX_CRPS_H_*/
/* *INDENT-ON* */
