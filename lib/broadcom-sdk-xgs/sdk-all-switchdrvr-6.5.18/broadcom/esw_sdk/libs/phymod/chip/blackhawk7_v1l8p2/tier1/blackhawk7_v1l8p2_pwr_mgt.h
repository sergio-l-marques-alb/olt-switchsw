/***********************************************************************************
 *                                                                                 *
 * Copyright: (c) 2019 Broadcom.                                                   *
 * Broadcom Proprietary and Confidential. All rights reserved.                     *
 *                                                                                 *
 ***********************************************************************************/

/***********************************************************************************
 ***********************************************************************************
 *                                                                                 *
 *  Revision    :    *
 *                                                                                 *
 *  Description :  Power management functions provided to IP User                  *
 *                                                                                 *
 ***********************************************************************************
 ***********************************************************************************/

/** @file blackhawk7_v1l8p2_pwr_mgt.h
 * Power management functions provided to IP User
 */
#ifdef __cplusplus
extern "C" {
#endif

#ifndef SMALL_FOOTPRINT
#ifndef BLACKHAWK7_V1L8P2_API_PWR_MGT_H
#define BLACKHAWK7_V1L8P2_API_PWR_MGT_H

#include "blackhawk7_v1l8p2_ipconfig.h"
#include "common/srds_api_enum.h"
#include "common/srds_api_err_code.h"
#include "blackhawk7_v1l8p2_dependencies.h"

/*-----------------------*/
/*  IDDQ / Clkgate APIs  */
/*-----------------------*/
/** Core configuration for IDDQ.
 * Note: User also needs to configure all lanes through blackhawk7_v1l8p2_lane_config_for_iddq()
 * before enabling IDDQ by asserting IDDQ pin.
 * @param sa__ is an opaque state vector passed through to device access functions.
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors)
 */
err_code_t blackhawk7_v1l8p2_core_config_for_iddq(srds_access_t *sa__);
/** Serdes Core Powerdown.
 * To complete a blackhawk7_v1l8p2_core_pwrdn(), all of the lane(s) belonging to the core being powered down
 * should also be issued a lane power down using blackhawk7_v1l8p2_lane_pwrdn().
 * @param sa__ is an opaque state vector passed through to device access functions.
 * @param mode based on enum #srds_core_pwrdn_mode_enum select from PWR_ON, PWRDN, PWRDN_DEEP power down modes
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors)
 */
err_code_t blackhawk7_v1l8p2_core_pwrdn(srds_access_t *sa__, enum srds_core_pwrdn_mode_enum mode);
/**************************************************/
/* LANE Based APIs - Required to be used per Lane */
/**************************************************/

/*--------------------------------------------------------------*/
/*  IDDQ / Powerdown / Deep Powerdown / Isolate Pins  */
/*--------------------------------------------------------------*/
/** Lane configurations for IDDQ.
 * Note: User needs to configure all lanes through blackhawk7_v1l8p2_lane_config_for_iddq() and also call blackhawk7_v1l8p2_core_config_for_iddq()
 * before enabling IDDQ by asserting IDDQ pin.
 * @param sa__ is an opaque state vector passed through to device access functions.
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors)
 */
err_code_t blackhawk7_v1l8p2_lane_config_for_iddq(srds_access_t *sa__);

/** Serdes Lane Powerdown.
 * Powers down option available - TX only, RX only, TX only DEEP, RX only DEEP,
 * complete LANE, complete lane DEEP, complete lane DEEP OFF, PWR_ON, PWR_ON TX only, PWR_ON RX only.
 * Note: To wake up from lane DEEP powerdown, first call PWR_ON and then de-assert lane_dp_reset [wr_ln_dp_s_rstb(0x1)].
 * Note: PWROFF_DEEP forces the OSR mode to 1, so while powering on a lane after a PWROFF_DEEP, the user needs to
 * configure the lane to the required OSR mode.
 * Note: PWRDN_TX_DEEP, PWRDN_RX_DEEP, and PWRDN_DEEP may require lane reconfiguration upon a PWR_ON.
 * @param sa__ is an opaque state vector passed through to device access functions.
 * @param mode Enable/Disable lane powerdown based on #srds_core_pwrdn_mode_enum
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors)
 */
err_code_t blackhawk7_v1l8p2_lane_pwrdn(srds_access_t *sa__, enum srds_core_pwrdn_mode_enum mode);

/** Serdes All Powerdown.
 * Powers down the core along with all PLLs and all lanes within the core. 
 * Note: PWROFF_DEEP forces the OSR mode to 1 for all lanes, so while powering on lanes after a PWROFF_DEEP, the user needs to
 * configure the lanes to the required OSR mode.
 * Note: PWRDN_DEEP may require lane reconfiguration upon a PWR_ON.
 * @param sa__ is an opaque state vector passed through to device access functions.
 * @param mode based on enum #srds_core_pwrdn_mode_enum select from PWRDN, PWRDN_DEEP, or PWROFF_DEEP power down modes
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors)
 */
err_code_t blackhawk7_v1l8p2_pwrdn_all(srds_access_t *sa__, enum srds_core_pwrdn_mode_enum mode);
#endif
#endif
#ifdef __cplusplus
}
#endif
