#ifndef REG_RAM_TEST_H
#define REG_RAM_TEST_H

#include "hal.h"
#include "sal.h"
#include "global_macro.h"
#include "reg_global_macro.h"
/*#include "ros.h"*/
#include "top.h"
#include "reg_operate.h"
/******************************************************************************
*VARIABLE DEFINE
******************************************************************************/

/*********************************struct define***********************************************/

typedef struct
{
	UINT_32 field_no;
	char* field_name;   /*add field_name_srt*/
	UINT_32 base_addr;
	UINT_32 offset_addr;
	UINT_32 end_bit;
	UINT_32 start_bit;
	UINT_32 default_value;
}NEW_CHIP_REG;

typedef struct
{
	UINT_32 reg_no;
	NEW_CHIP_REG* reg_field;
	char* reg_name;    /*add reg_name_str*/
	UINT_8 field_num;
	char* atr;
	UINT_8 instance_num;
	UINT_32 instance_offset;
}TEST_CHIP_REG;

typedef struct
{
	UINT_32 ram_no;
	CHIP_RAM* ram_name;
	char* ram_name_str;  /*add ram_name_str*/
	UINT_32 depth;
	char* default_value_str;
	char* atr;
	UINT_8 instance_num;
	UINT_32 instance_offset;
}TEST_CHIP_RAM;
/*******************************************CHIP_REG******************************************/
NEW_CHIP_REG test_levelclr_sch_reg[] =
{
	{ TEST_LEVELCLR_SCH, "levelclr_sch", B66SWITCH_BASE_ADDR, 0x40, 0, 0, 0x0 },
};
NEW_CHIP_REG test_maxlevel_sch_reg[] =
{
	{ TEST_MAXLEVEL_SCH_0, "maxlevel_sch_0", B66SWITCH_BASE_ADDR, 0x41, 31, 0, 0x0 },
	{ TEST_MAXLEVEL_SCH_1, "maxlevel_sch_1", B66SWITCH_BASE_ADDR, 0x42, 31, 0, 0x0 },
	{ TEST_MAXLEVEL_SCH_2, "maxlevel_sch_2", B66SWITCH_BASE_ADDR, 0x43, 31, 0, 0x0 },
	{ TEST_MAXLEVEL_SCH_3, "maxlevel_sch_3", B66SWITCH_BASE_ADDR, 0x44, 31, 0, 0x0 },
	{ TEST_MAXLEVEL_SCH_4, "maxlevel_sch_4", B66SWITCH_BASE_ADDR, 0x45, 31, 0, 0x0 },
};
NEW_CHIP_REG test_full_sch_reg[] =
{
	{ TEST_FULL_SCH, "full_sch", B66SWITCH_BASE_ADDR, 0x47, 19, 0, 0x0 },
};


/*flexe_oam_rx*/
NEW_CHIP_REG test_flexe_oam_rx_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BASE_LOS_SEL, "oam_rx_base_los_sel", FLEXE_OAM_RX_BASE_ADDR, 0x0, 17, 17, 0x0 },
	{ TEST_FLEXE_OAM_RX_OAM_CNT_CLR_NUM, "oam_cnt_clr_num", FLEXE_OAM_RX_BASE_ADDR, 0x0, 24, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_OAM_CNT_CLR_NUM, "base_oam_cnt_clr_num", FLEXE_OAM_RX_BASE_ADDR, 0x0, 31, 25, 0x0 },
	{ TEST_FLEXE_OAM_RX_GLB_BIPERR_BIT_CFG, "rx_glb_biperr_bit_cfg", FLEXE_OAM_RX_BASE_ADDR, 0x0, 0, 0, 0x1 },
	{ TEST_FLEXE_OAM_RX_GLB_BEIERR_BIT_CFG, "rx_glb_beierr_bit_cfg", FLEXE_OAM_RX_BASE_ADDR, 0x0, 1, 1, 0x1 },
	{ TEST_FLEXE_OAM_RX_CRC_INVERT, "crc_invert", FLEXE_OAM_RX_BASE_ADDR, 0x0, 3, 3, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_OAM_RX, "bypass_oam_rx", FLEXE_OAM_RX_BASE_ADDR, 0x0, 4, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_BLK, "oam_rx_rdi_blk", FLEXE_OAM_RX_BASE_ADDR, 0x0, 6, 5, 0x0 },
	{ TEST_FLEXE_OAM_RX_OAM_IDFY_37_34_CFG, "oam_idfy_37_34_cfg", FLEXE_OAM_RX_BASE_ADDR, 0x0, 11, 8, 0xc },
	{ TEST_FLEXE_OAM_RX_BAS_POS_CNT, "bas_pos_cnt", FLEXE_OAM_RX_BASE_ADDR, 0x0, 13, 12, 0x2 },
	{ TEST_FLEXE_OAM_RX_CRC_BASE_CNT_EN, "crc_base_cnt_en", FLEXE_OAM_RX_BASE_ADDR, 0x0, 14, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_CRC_OAM_CAL_EN, "crc_oam_cal_en", FLEXE_OAM_RX_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_OAM_ALM_ALL, "bypass_oam_alm_all", FLEXE_OAM_RX_BASE_ADDR, 0x0, 16, 16, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_idle_rpl_en_reg[] =
{
	{ TEST_FLEXE_OAM_RX_IDLE_RPL_EN_0, "rx_idle_rpl_en_0", FLEXE_OAM_RX_BASE_ADDR, 0xf, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_RX_IDLE_RPL_EN_1, "rx_idle_rpl_en_1", FLEXE_OAM_RX_BASE_ADDR, 0x10, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_RX_IDLE_RPL_EN_2, "rx_idle_rpl_en_2", FLEXE_OAM_RX_BASE_ADDR, 0x11, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_bypass_chnl_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BYPASS_CHNL_0, "bypass_chnl_0", FLEXE_OAM_RX_BASE_ADDR, 0x15, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_CHNL_1, "bypass_chnl_1", FLEXE_OAM_RX_BASE_ADDR, 0x16, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_CHNL_2, "bypass_chnl_2", FLEXE_OAM_RX_BASE_ADDR, 0x17, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_period_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_RX_PERIOD_CFG_0, "period_cfg_0", FLEXE_OAM_RX_BASE_ADDR, 0x18, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_PERIOD_CFG_1, "period_cfg_1", FLEXE_OAM_RX_BASE_ADDR, 0x19, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_PERIOD_CFG_2, "period_cfg_2", FLEXE_OAM_RX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_PERIOD_CFG_3, "period_cfg_3", FLEXE_OAM_RX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_PERIOD_CFG_4, "period_cfg_4", FLEXE_OAM_RX_BASE_ADDR, 0x1c, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_period_sel_reg[] =
{
	{ TEST_FLEXE_OAM_RX_PERIOD_SEL_0, "period_sel_0", FLEXE_OAM_RX_BASE_ADDR, 0x1d, 31, 0, 0xaaaaaaaa },
	{ TEST_FLEXE_OAM_RX_PERIOD_SEL_1, "period_sel_1", FLEXE_OAM_RX_BASE_ADDR, 0x1e, 31, 0, 0xaaaaaaaa },
	{ TEST_FLEXE_OAM_RX_PERIOD_SEL_2, "period_sel_2", FLEXE_OAM_RX_BASE_ADDR, 0x1f, 31, 0, 0xaaaaaaaa },
	{ TEST_FLEXE_OAM_RX_PERIOD_SEL_3, "period_sel_3", FLEXE_OAM_RX_BASE_ADDR, 0x20, 31, 0, 0xaaaaaaaa },
	{ TEST_FLEXE_OAM_RX_PERIOD_SEL_4, "period_sel_4", FLEXE_OAM_RX_BASE_ADDR, 0x21, 31, 0, 0xaaaaaaaa },
};
NEW_CHIP_REG test_flexe_oam_rx_alm_en_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BASE_LOS_ALM_EN, "base_los_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 0, 0, 0x1 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_ALM_EN, "bas_cs_lf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 1, 1, 0x1 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_ALM_EN, "bas_cs_rf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 2, 2, 0x1 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_ALM_EN, "bas_csf_lpi_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 3, 3, 0x1 },
	{ TEST_FLEXE_OAM_RX_SDBIP_ALM_EN, "sdbip_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 4, 4, 0x1 },
	{ TEST_FLEXE_OAM_RX_SDBEI_ALM_EN, "sdbei_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 5, 5, 0x1 },
	{ TEST_FLEXE_OAM_RX_CLIENT_LF_ALM_EN, "client_lf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 6, 6, 0x1 },
	{ TEST_FLEXE_OAM_RX_CLIENT_RF_ALM_EN, "client_rf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 7, 7, 0x1 },
	{ TEST_FLEXE_OAM_RX_CLIENT_LPI_ALM_EN, "client_lpi_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 8, 8, 0x1 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_ALM_EN, "bas_rdi_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 9, 9, 0x1 },
	{ TEST_FLEXE_OAM_RX_CLIENT_FAIL_ALM_EN, "client_fail_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 10, 10, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_SDBIP_ALM_EN, "tx_sdbip_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 11, 11, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_SDBEI_ALM_EN, "tx_sdbei_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 12, 12, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_BASE_LOS_ALM_EN, "tx_base_los_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 13, 13, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_BAS_PERIOD_ALM_EN, "tx_bas_period_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 14, 14, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_CLIENT_LF_ALM_EN, "tx_client_lf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 15, 15, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_CLIENT_RF_ALM_EN, "tx_client_rf_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 16, 16, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_CLIENT_LPI_ALM_EN, "tx_client_lpi_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 17, 17, 0x1 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_EN, "rx_lpi_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 18, 18, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_SFBIP_ALM_EN, "tx_sfbip_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 19, 19, 0x1 },
	{ TEST_FLEXE_OAM_RX_TX_SFBEI_ALM_EN, "tx_sfbei_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 20, 20, 0x1 },
	{ TEST_FLEXE_OAM_RX_SFBIP_ALM_EN, "sfbip_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 21, 21, 0x1 },
	{ TEST_FLEXE_OAM_RX_SFBEI_ALM_EN, "sfbei_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 22, 22, 0x1 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM_EN, "bas_period_alm_en", FLEXE_OAM_RX_BASE_ADDR, 0x28, 23, 23, 0x1 },
};
NEW_CHIP_REG test_flexe_bypass_xgmii_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BYPASS_XGMII_0, "bypass_xgmii_0", FLEXE_OAM_RX_BASE_ADDR, 0x68, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_XGMII_1, "bypass_xgmii_1", FLEXE_OAM_RX_BASE_ADDR, 0x69, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_XGMII_2, "bypass_xgmii_2", FLEXE_OAM_RX_BASE_ADDR, 0x6a, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_lpi_rpl_en_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_RPL_EN_0, "rx_lpi_rpl_en_0", FLEXE_OAM_RX_BASE_ADDR, 0x6b, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_RX_LPI_RPL_EN_1, "rx_lpi_rpl_en_1", FLEXE_OAM_RX_BASE_ADDR, 0x6c, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_RX_LPI_RPL_EN_2, "rx_lpi_rpl_en_2", FLEXE_OAM_RX_BASE_ADDR, 0x6d, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_bas_period_a_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_0, "bas_period_0", FLEXE_OAM_RX_BASE_ADDR, 0x6f, 9, 0, 0x10 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_1, "bas_period_1", FLEXE_OAM_RX_BASE_ADDR, 0x6f, 21, 12, 0x20 },
};
NEW_CHIP_REG test_flexe_bas_period_b_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_2, "bas_period_2", FLEXE_OAM_RX_BASE_ADDR, 0x70, 9, 0, 0x40 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_3, "bas_period_3", FLEXE_OAM_RX_BASE_ADDR, 0x70, 21, 12, 0x200 },
};
NEW_CHIP_REG test_flexe_bypass_oam_alm_ch_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BYPASS_OAM_ALM_CH_0, "bypass_oam_alm_ch_0", FLEXE_OAM_RX_BASE_ADDR, 0x72, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_OAM_ALM_CH_1, "bypass_oam_alm_ch_1", FLEXE_OAM_RX_BASE_ADDR, 0x73, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BYPASS_OAM_ALM_CH_2, "bypass_oam_alm_ch_2", FLEXE_OAM_RX_BASE_ADDR, 0x74, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_rx_config_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RAM_CLR_CH, "bas_ram_clr_ch", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 6, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_TIMESTAMP_SEL, "timestamp_sel", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 8, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_PRE_CNT, "lpi_pre_cnt", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 14, 12, 0x3 },
	{ TEST_FLEXE_OAM_RX_LPI_POS_CNT, "lpi_pos_cnt", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 18, 16, 0x3 },
	{ TEST_FLEXE_OAM_RX_BASE_LOS_RPL_EN, "base_los_rpl_en", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 9, 9, 0x0 },
	{ TEST_FLEXE_OAM_RX_BIP_RECAL_EN, "bip_recal_en", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 10, 10, 0x1 },
	{ TEST_FLEXE_OAM_RX_BASE_BIP_CRC_EN, "base_bip_crc_en", FLEXE_OAM_RX_BASE_ADDR, 0x7e, 11, 11, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_type_bip_cal_en_reg[] =
{
	{ TEST_FLEXE_OAM_RX_OAM_TYPE_BIP_CAL_EN_0, "oam_type_bip_cal_en_0", FLEXE_OAM_RX_BASE_ADDR, 0x7f, 31, 0, 0xfffffffd },
};
NEW_CHIP_REG test_flexe_lf_manual_insert_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LF_MANUAL_INSERT_0, "lf_manual_insert_0", FLEXE_OAM_RX_BASE_ADDR, 0x8a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LF_MANUAL_INSERT_1, "lf_manual_insert_1", FLEXE_OAM_RX_BASE_ADDR, 0x8b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LF_MANUAL_INSERT_2, "lf_manual_insert_2", FLEXE_OAM_RX_BASE_ADDR, 0x8c, 15, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_OAM_TYPE_BIP_CAL_EN_1, "oam_type_bip_cal_en_1", FLEXE_OAM_RX_BASE_ADDR, 0x8c, 31, 16, 0xffff },
};
NEW_CHIP_REG test_flexe_rf_manual_insert_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_MANUAL_INSERT_0, "rf_manual_insert_0", FLEXE_OAM_RX_BASE_ADDR, 0x8d, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_MANUAL_INSERT_1, "rf_manual_insert_1", FLEXE_OAM_RX_BASE_ADDR, 0x8e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_MANUAL_INSERT_2, "rf_manual_insert_2", FLEXE_OAM_RX_BASE_ADDR, 0x8f, 15, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_OAM_TYPE_BIP_CAL_EN_2, "oam_type_bip_cal_en_2", FLEXE_OAM_RX_BASE_ADDR, 0x8f, 31, 16, 0xffff },
};
NEW_CHIP_REG test_flexe_lpi_manual_insert_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_MANUAL_INSERT_0, "lpi_manual_insert_0", FLEXE_OAM_RX_BASE_ADDR, 0x90, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_MANUAL_INSERT_1, "lpi_manual_insert_1", FLEXE_OAM_RX_BASE_ADDR, 0x91, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_MANUAL_INSERT_2, "lpi_manual_insert_2", FLEXE_OAM_RX_BASE_ADDR, 0x92, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_biperr_cnt_clr_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BIPERR_CNT_CLR_0, "rx_biperr_cnt_clr_0", FLEXE_OAM_RX_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BIPERR_CNT_CLR_1, "rx_biperr_cnt_clr_1", FLEXE_OAM_RX_BASE_ADDR, 0x2, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BIPERR_CNT_CLR_2, "rx_biperr_cnt_clr_2", FLEXE_OAM_RX_BASE_ADDR, 0x3, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_beierr_cnt_clr_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BEIERR_CNT_CLR_0, "rx_beierr_cnt_clr_0", FLEXE_OAM_RX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BEIERR_CNT_CLR_1, "rx_beierr_cnt_clr_1", FLEXE_OAM_RX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BEIERR_CNT_CLR_2, "rx_beierr_cnt_clr_2", FLEXE_OAM_RX_BASE_ADDR, 0x6, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_clr_ram_init_reg[] =
{
	{ TEST_FLEXE_OAM_RX_OAM_CNT_CLR, "oam_cnt_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 0, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_OAM_CNT_ALL_CLR, "oam_cnt_all_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 1, 1, 0x0 },
	{ TEST_FLEXE_OAM_RX_TS_RAM_INIT, "ts_ram_init", FLEXE_OAM_RX_BASE_ADDR, 0x24, 2, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_OAM_CNT_CLR, "base_oam_cnt_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 3, 3, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_OAM_CNT_ALL_CLR, "base_oam_cnt_all_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 4, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_OAM_RAM_CLR, "base_oam_ram_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 5, 5, 0x0 },
	{ TEST_FLEXE_OAM_RX_FIFO_CNT_CLR, "fifo_cnt_clr", FLEXE_OAM_RX_BASE_ADDR, 0x24, 6, 6, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_cnt_clr_done_reg[] =
{
	{ TEST_FLEXE_OAM_RX_OAM_CNT_CLR_DONE, "oam_cnt_clr_done", FLEXE_OAM_RX_BASE_ADDR, 0x26, 0, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_TS_RAM_INIT_DONE, "ts_ram_init_done", FLEXE_OAM_RX_BASE_ADDR, 0x26, 1, 1, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_OAM_CNT_CLR_DONE, "base_oam_cnt_clr_done", FLEXE_OAM_RX_BASE_ADDR, 0x26, 2, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_FIFO_CNT_MAX, "fifo_cnt_max", FLEXE_OAM_RX_BASE_ADDR, 0x26, 14, 4, 0x0 },
};
NEW_CHIP_REG test_flexe_base_period_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BASE_PERIOD_0, "base_period_0", FLEXE_OAM_RX_BASE_ADDR, 0x39, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_PERIOD_1, "base_period_1", FLEXE_OAM_RX_BASE_ADDR, 0x3a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_PERIOD_2, "base_period_2", FLEXE_OAM_RX_BASE_ADDR, 0x3b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_PERIOD_3, "base_period_3", FLEXE_OAM_RX_BASE_ADDR, 0x3c, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BASE_PERIOD_4, "base_period_4", FLEXE_OAM_RX_BASE_ADDR, 0x3d, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_0, "rx_sdbip_0", FLEXE_OAM_RX_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_1, "rx_sdbip_1", FLEXE_OAM_RX_BASE_ADDR, 0x8, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_2, "rx_sdbip_2", FLEXE_OAM_RX_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_0, "rx_sfbip_0", FLEXE_OAM_RX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_1, "rx_sfbip_1", FLEXE_OAM_RX_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_2, "rx_sfbip_2", FLEXE_OAM_RX_BASE_ADDR, 0x14, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_rx_rdi_ram_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI, "oam_rx_rdi", FLEXE_OAM_RX_BASE_ADDR, 0x22, 19, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_FULL_1, "full_1", FLEXE_OAM_RX_BASE_ADDR, 0x22, 20, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_ECC_ERR_CORRECT, "ecc_err_correct", FLEXE_OAM_RX_BASE_ADDR, 0x22, 21, 21, 0x0 },
	{ TEST_FLEXE_OAM_RX_ECC_ERR_UNCORRECT, "ecc_err_uncorrect", FLEXE_OAM_RX_BASE_ADDR, 0x22, 22, 22, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_0, "rx_sfbei_0", FLEXE_OAM_RX_BASE_ADDR, 0x29, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_1, "rx_sfbei_1", FLEXE_OAM_RX_BASE_ADDR, 0x2a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_2, "rx_sfbei_2", FLEXE_OAM_RX_BASE_ADDR, 0x2b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_demux_client_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_DEMUX_CLIENT_ALM_0, "demux_client_alm_0", FLEXE_OAM_RX_BASE_ADDR, 0x3e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_DEMUX_CLIENT_ALM_1, "demux_client_alm_1", FLEXE_OAM_RX_BASE_ADDR, 0x3f, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_DEMUX_CLIENT_ALM_2, "demux_client_alm_2", FLEXE_OAM_RX_BASE_ADDR, 0x40, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_crc_alm_out_reg[] =
{
	{ TEST_FLEXE_OAM_RX_CRC_ALM_OUT_0, "crc_alm_out_0", FLEXE_OAM_RX_BASE_ADDR, 0x41, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_CRC_ALM_OUT_1, "crc_alm_out_1", FLEXE_OAM_RX_BASE_ADDR, 0x42, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_CRC_ALM_OUT_2, "crc_alm_out_2", FLEXE_OAM_RX_BASE_ADDR, 0x43, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_0, "bas_rdi_0", FLEXE_OAM_RX_BASE_ADDR, 0x44, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_1, "bas_rdi_1", FLEXE_OAM_RX_BASE_ADDR, 0x45, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_2, "bas_rdi_2", FLEXE_OAM_RX_BASE_ADDR, 0x46, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_0, "bas_csf_lpi_0", FLEXE_OAM_RX_BASE_ADDR, 0x47, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_1, "bas_csf_lpi_1", FLEXE_OAM_RX_BASE_ADDR, 0x48, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_2, "bas_csf_lpi_2", FLEXE_OAM_RX_BASE_ADDR, 0x49, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_0, "bas_cs_lf_0", FLEXE_OAM_RX_BASE_ADDR, 0x4a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_1, "bas_cs_lf_1", FLEXE_OAM_RX_BASE_ADDR, 0x4b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_2, "bas_cs_lf_2", FLEXE_OAM_RX_BASE_ADDR, 0x4c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_0, "bas_cs_rf_0", FLEXE_OAM_RX_BASE_ADDR, 0x4d, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_1, "bas_cs_rf_1", FLEXE_OAM_RX_BASE_ADDR, 0x4e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_2, "bas_cs_rf_2", FLEXE_OAM_RX_BASE_ADDR, 0x4f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_0, "bas_crc_err_0", FLEXE_OAM_RX_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_1, "bas_crc_err_1", FLEXE_OAM_RX_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_2, "bas_crc_err_2", FLEXE_OAM_RX_BASE_ADDR, 0x52, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_0, "bas_no_receive_alm_0", FLEXE_OAM_RX_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_1, "bas_no_receive_alm_1", FLEXE_OAM_RX_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_2, "bas_no_receive_alm_2", FLEXE_OAM_RX_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_0, "rdi_lf_0", FLEXE_OAM_RX_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_1, "rdi_lf_1", FLEXE_OAM_RX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_2, "rdi_lf_2", FLEXE_OAM_RX_BASE_ADDR, 0x58, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_0, "rx_sdbei_0", FLEXE_OAM_RX_BASE_ADDR, 0x5b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_1, "rx_sdbei_1", FLEXE_OAM_RX_BASE_ADDR, 0x5c, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_2, "rx_sdbei_2", FLEXE_OAM_RX_BASE_ADDR, 0x5d, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_0, "rf_alm_0", FLEXE_OAM_RX_BASE_ADDR, 0x5e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_1, "rf_alm_1", FLEXE_OAM_RX_BASE_ADDR, 0x5f, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_2, "rf_alm_2", FLEXE_OAM_RX_BASE_ADDR, 0x60, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_0, "lpi_alm_0", FLEXE_OAM_RX_BASE_ADDR, 0x61, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_1, "lpi_alm_1", FLEXE_OAM_RX_BASE_ADDR, 0x62, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_2, "lpi_alm_2", FLEXE_OAM_RX_BASE_ADDR, 0x63, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM_0, "bas_period_alm_0", FLEXE_OAM_RX_BASE_ADDR, 0x77, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM_1, "bas_period_alm_1", FLEXE_OAM_RX_BASE_ADDR, 0x78, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM_2, "bas_period_alm_2", FLEXE_OAM_RX_BASE_ADDR, 0x79, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_0_INT, "rx_sfbei_0_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_1_INT, "rx_sfbei_1_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_2_INT, "rx_sfbei_2_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_3_INT, "rx_sfbei_3_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_4_INT, "rx_sfbei_4_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_5_INT, "rx_sfbei_5_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_6_INT, "rx_sfbei_6_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_7_INT, "rx_sfbei_7_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_8_INT, "rx_sfbei_8_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_9_INT, "rx_sfbei_9_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_10_INT, "rx_sfbei_10_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_11_INT, "rx_sfbei_11_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_12_INT, "rx_sfbei_12_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_13_INT, "rx_sfbei_13_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_14_INT, "rx_sfbei_14_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_15_INT, "rx_sfbei_15_int", FLEXE_OAM_RX_BASE_ADDR, 0x25, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_0_INT_MASK, "rx_sfbei_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_1_INT_MASK, "rx_sfbei_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_2_INT_MASK, "rx_sfbei_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_3_INT_MASK, "rx_sfbei_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_4_INT_MASK, "rx_sfbei_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_5_INT_MASK, "rx_sfbei_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_6_INT_MASK, "rx_sfbei_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_7_INT_MASK, "rx_sfbei_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_8_INT_MASK, "rx_sfbei_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_9_INT_MASK, "rx_sfbei_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_10_INT_MASK, "rx_sfbei_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_11_INT_MASK, "rx_sfbei_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_12_INT_MASK, "rx_sfbei_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_13_INT_MASK, "rx_sfbei_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_14_INT_MASK, "rx_sfbei_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_15_INT_MASK, "rx_sfbei_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x27, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_0_INT, "rx_sfbip_0_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_1_INT, "rx_sfbip_1_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_2_INT, "rx_sfbip_2_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_3_INT, "rx_sfbip_3_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_4_INT, "rx_sfbip_4_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_5_INT, "rx_sfbip_5_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_6_INT, "rx_sfbip_6_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_7_INT, "rx_sfbip_7_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_8_INT, "rx_sfbip_8_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_9_INT, "rx_sfbip_9_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_10_INT, "rx_sfbip_10_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_11_INT, "rx_sfbip_11_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_12_INT, "rx_sfbip_12_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_13_INT, "rx_sfbip_13_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_14_INT, "rx_sfbip_14_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_15_INT, "rx_sfbip_15_int", FLEXE_OAM_RX_BASE_ADDR, 0x2c, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_0_INT_MASK, "rx_sfbip_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_1_INT_MASK, "rx_sfbip_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_2_INT_MASK, "rx_sfbip_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_3_INT_MASK, "rx_sfbip_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_4_INT_MASK, "rx_sfbip_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_5_INT_MASK, "rx_sfbip_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_6_INT_MASK, "rx_sfbip_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_7_INT_MASK, "rx_sfbip_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_8_INT_MASK, "rx_sfbip_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_9_INT_MASK, "rx_sfbip_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_10_INT_MASK, "rx_sfbip_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_11_INT_MASK, "rx_sfbip_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_12_INT_MASK, "rx_sfbip_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_13_INT_MASK, "rx_sfbip_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_14_INT_MASK, "rx_sfbip_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_15_INT_MASK, "rx_sfbip_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2d, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_30_INT, "rx_sfbip_30_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_31_INT, "rx_sfbip_31_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_16_INT, "rx_sfbip_16_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_17_INT, "rx_sfbip_17_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_18_INT, "rx_sfbip_18_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_19_INT, "rx_sfbip_19_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_20_INT, "rx_sfbip_20_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_21_INT, "rx_sfbip_21_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_22_INT, "rx_sfbip_22_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_23_INT, "rx_sfbip_23_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_24_INT, "rx_sfbip_24_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_25_INT, "rx_sfbip_25_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_26_INT, "rx_sfbip_26_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_27_INT, "rx_sfbip_27_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_28_INT, "rx_sfbip_28_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_29_INT, "rx_sfbip_29_int", FLEXE_OAM_RX_BASE_ADDR, 0x2e, 27, 26, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_30_INT_MASK, "rx_sfbip_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_31_INT_MASK, "rx_sfbip_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_16_INT_MASK, "rx_sfbip_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_17_INT_MASK, "rx_sfbip_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_18_INT_MASK, "rx_sfbip_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_19_INT_MASK, "rx_sfbip_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_20_INT_MASK, "rx_sfbip_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_21_INT_MASK, "rx_sfbip_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_22_INT_MASK, "rx_sfbip_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_23_INT_MASK, "rx_sfbip_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_24_INT_MASK, "rx_sfbip_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_25_INT_MASK, "rx_sfbip_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_26_INT_MASK, "rx_sfbip_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_27_INT_MASK, "rx_sfbip_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_28_INT_MASK, "rx_sfbip_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_29_INT_MASK, "rx_sfbip_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x2f, 27, 26, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_32_INT, "rx_sfbip_32_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_33_INT, "rx_sfbip_33_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_34_INT, "rx_sfbip_34_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_35_INT, "rx_sfbip_35_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_36_INT, "rx_sfbip_36_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_37_INT, "rx_sfbip_37_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_38_INT, "rx_sfbip_38_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_39_INT, "rx_sfbip_39_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_40_INT, "rx_sfbip_40_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_41_INT, "rx_sfbip_41_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_42_INT, "rx_sfbip_42_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_43_INT, "rx_sfbip_43_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_44_INT, "rx_sfbip_44_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_45_INT, "rx_sfbip_45_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_46_INT, "rx_sfbip_46_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_47_INT, "rx_sfbip_47_int", FLEXE_OAM_RX_BASE_ADDR, 0x30, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_32_INT_MASK, "rx_sfbip_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_33_INT_MASK, "rx_sfbip_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_34_INT_MASK, "rx_sfbip_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_35_INT_MASK, "rx_sfbip_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_36_INT_MASK, "rx_sfbip_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_37_INT_MASK, "rx_sfbip_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_38_INT_MASK, "rx_sfbip_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_39_INT_MASK, "rx_sfbip_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_40_INT_MASK, "rx_sfbip_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_41_INT_MASK, "rx_sfbip_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_42_INT_MASK, "rx_sfbip_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_43_INT_MASK, "rx_sfbip_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_44_INT_MASK, "rx_sfbip_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_45_INT_MASK, "rx_sfbip_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_46_INT_MASK, "rx_sfbip_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_47_INT_MASK, "rx_sfbip_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x31, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_59_INT, "rx_sfbip_59_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_60_INT, "rx_sfbip_60_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_61_INT, "rx_sfbip_61_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_62_INT, "rx_sfbip_62_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_63_INT, "rx_sfbip_63_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_48_INT, "rx_sfbip_48_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_49_INT, "rx_sfbip_49_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_50_INT, "rx_sfbip_50_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_51_INT, "rx_sfbip_51_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_52_INT, "rx_sfbip_52_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_53_INT, "rx_sfbip_53_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_54_INT, "rx_sfbip_54_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_55_INT, "rx_sfbip_55_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_56_INT, "rx_sfbip_56_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_57_INT, "rx_sfbip_57_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_58_INT, "rx_sfbip_58_int", FLEXE_OAM_RX_BASE_ADDR, 0x32, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_59_INT_MASK, "rx_sfbip_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_60_INT_MASK, "rx_sfbip_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_61_INT_MASK, "rx_sfbip_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_62_INT_MASK, "rx_sfbip_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_63_INT_MASK, "rx_sfbip_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_48_INT_MASK, "rx_sfbip_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_49_INT_MASK, "rx_sfbip_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_50_INT_MASK, "rx_sfbip_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_51_INT_MASK, "rx_sfbip_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_52_INT_MASK, "rx_sfbip_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_53_INT_MASK, "rx_sfbip_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_54_INT_MASK, "rx_sfbip_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_55_INT_MASK, "rx_sfbip_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_56_INT_MASK, "rx_sfbip_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_57_INT_MASK, "rx_sfbip_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_58_INT_MASK, "rx_sfbip_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x33, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_64_INT, "rx_sfbip_64_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_65_INT, "rx_sfbip_65_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_66_INT, "rx_sfbip_66_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_67_INT, "rx_sfbip_67_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_68_INT, "rx_sfbip_68_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_69_INT, "rx_sfbip_69_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_70_INT, "rx_sfbip_70_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_71_INT, "rx_sfbip_71_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_72_INT, "rx_sfbip_72_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_73_INT, "rx_sfbip_73_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_74_INT, "rx_sfbip_74_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_75_INT, "rx_sfbip_75_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_76_INT, "rx_sfbip_76_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_77_INT, "rx_sfbip_77_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_78_INT, "rx_sfbip_78_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_79_INT, "rx_sfbip_79_int", FLEXE_OAM_RX_BASE_ADDR, 0x34, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbip_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBIP_79_INT_MASK, "rx_sfbip_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_64_INT_MASK, "rx_sfbip_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_65_INT_MASK, "rx_sfbip_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_66_INT_MASK, "rx_sfbip_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_67_INT_MASK, "rx_sfbip_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_68_INT_MASK, "rx_sfbip_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_69_INT_MASK, "rx_sfbip_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_70_INT_MASK, "rx_sfbip_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_71_INT_MASK, "rx_sfbip_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_72_INT_MASK, "rx_sfbip_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_73_INT_MASK, "rx_sfbip_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_74_INT_MASK, "rx_sfbip_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_75_INT_MASK, "rx_sfbip_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_76_INT_MASK, "rx_sfbip_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_77_INT_MASK, "rx_sfbip_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBIP_78_INT_MASK, "rx_sfbip_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x35, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_16_INT, "rx_sfbei_16_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_17_INT, "rx_sfbei_17_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_18_INT, "rx_sfbei_18_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_19_INT, "rx_sfbei_19_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_20_INT, "rx_sfbei_20_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_21_INT, "rx_sfbei_21_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_22_INT, "rx_sfbei_22_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_23_INT, "rx_sfbei_23_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_24_INT, "rx_sfbei_24_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_25_INT, "rx_sfbei_25_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_26_INT, "rx_sfbei_26_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_27_INT, "rx_sfbei_27_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_28_INT, "rx_sfbei_28_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_29_INT, "rx_sfbei_29_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_30_INT, "rx_sfbei_30_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_31_INT, "rx_sfbei_31_int", FLEXE_OAM_RX_BASE_ADDR, 0x36, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_16_INT_MASK, "rx_sfbei_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_17_INT_MASK, "rx_sfbei_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_18_INT_MASK, "rx_sfbei_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_19_INT_MASK, "rx_sfbei_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_20_INT_MASK, "rx_sfbei_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_21_INT_MASK, "rx_sfbei_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_22_INT_MASK, "rx_sfbei_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_23_INT_MASK, "rx_sfbei_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_24_INT_MASK, "rx_sfbei_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_25_INT_MASK, "rx_sfbei_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_26_INT_MASK, "rx_sfbei_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_27_INT_MASK, "rx_sfbei_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_28_INT_MASK, "rx_sfbei_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_29_INT_MASK, "rx_sfbei_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_30_INT_MASK, "rx_sfbei_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_31_INT_MASK, "rx_sfbei_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x37, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_32_INT, "rx_sfbei_32_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_33_INT, "rx_sfbei_33_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_34_INT, "rx_sfbei_34_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_35_INT, "rx_sfbei_35_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_36_INT, "rx_sfbei_36_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_37_INT, "rx_sfbei_37_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_38_INT, "rx_sfbei_38_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_39_INT, "rx_sfbei_39_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_40_INT, "rx_sfbei_40_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_41_INT, "rx_sfbei_41_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_42_INT, "rx_sfbei_42_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_43_INT, "rx_sfbei_43_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_44_INT, "rx_sfbei_44_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_45_INT, "rx_sfbei_45_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_46_INT, "rx_sfbei_46_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_47_INT, "rx_sfbei_47_int", FLEXE_OAM_RX_BASE_ADDR, 0x38, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_32_INT_MASK, "rx_sfbei_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_33_INT_MASK, "rx_sfbei_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_34_INT_MASK, "rx_sfbei_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_35_INT_MASK, "rx_sfbei_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_36_INT_MASK, "rx_sfbei_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_37_INT_MASK, "rx_sfbei_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_38_INT_MASK, "rx_sfbei_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_39_INT_MASK, "rx_sfbei_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_40_INT_MASK, "rx_sfbei_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_41_INT_MASK, "rx_sfbei_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_42_INT_MASK, "rx_sfbei_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_43_INT_MASK, "rx_sfbei_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_44_INT_MASK, "rx_sfbei_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_45_INT_MASK, "rx_sfbei_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_46_INT_MASK, "rx_sfbei_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_47_INT_MASK, "rx_sfbei_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x59, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_48_INT, "rx_sfbei_48_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_49_INT, "rx_sfbei_49_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_50_INT, "rx_sfbei_50_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_51_INT, "rx_sfbei_51_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_52_INT, "rx_sfbei_52_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_53_INT, "rx_sfbei_53_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_54_INT, "rx_sfbei_54_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_55_INT, "rx_sfbei_55_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_56_INT, "rx_sfbei_56_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_57_INT, "rx_sfbei_57_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_58_INT, "rx_sfbei_58_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_59_INT, "rx_sfbei_59_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_60_INT, "rx_sfbei_60_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_61_INT, "rx_sfbei_61_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_62_INT, "rx_sfbei_62_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_63_INT, "rx_sfbei_63_int", FLEXE_OAM_RX_BASE_ADDR, 0x66, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_48_INT_MASK, "rx_sfbei_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_49_INT_MASK, "rx_sfbei_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_50_INT_MASK, "rx_sfbei_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_51_INT_MASK, "rx_sfbei_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_52_INT_MASK, "rx_sfbei_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_53_INT_MASK, "rx_sfbei_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_54_INT_MASK, "rx_sfbei_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_55_INT_MASK, "rx_sfbei_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_56_INT_MASK, "rx_sfbei_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_57_INT_MASK, "rx_sfbei_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_58_INT_MASK, "rx_sfbei_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_59_INT_MASK, "rx_sfbei_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_60_INT_MASK, "rx_sfbei_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_61_INT_MASK, "rx_sfbei_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_62_INT_MASK, "rx_sfbei_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_63_INT_MASK, "rx_sfbei_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x67, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_64_INT, "rx_sfbei_64_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_65_INT, "rx_sfbei_65_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_66_INT, "rx_sfbei_66_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_67_INT, "rx_sfbei_67_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_68_INT, "rx_sfbei_68_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_69_INT, "rx_sfbei_69_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_70_INT, "rx_sfbei_70_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_71_INT, "rx_sfbei_71_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_72_INT, "rx_sfbei_72_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_73_INT, "rx_sfbei_73_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_74_INT, "rx_sfbei_74_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_75_INT, "rx_sfbei_75_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_76_INT, "rx_sfbei_76_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_77_INT, "rx_sfbei_77_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_78_INT, "rx_sfbei_78_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_79_INT, "rx_sfbei_79_int", FLEXE_OAM_RX_BASE_ADDR, 0x6e, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sfbei_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SFBEI_64_INT_MASK, "rx_sfbei_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_65_INT_MASK, "rx_sfbei_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_66_INT_MASK, "rx_sfbei_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_67_INT_MASK, "rx_sfbei_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_68_INT_MASK, "rx_sfbei_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_69_INT_MASK, "rx_sfbei_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_70_INT_MASK, "rx_sfbei_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_71_INT_MASK, "rx_sfbei_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_72_INT_MASK, "rx_sfbei_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_73_INT_MASK, "rx_sfbei_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_74_INT_MASK, "rx_sfbei_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_75_INT_MASK, "rx_sfbei_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_76_INT_MASK, "rx_sfbei_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_77_INT_MASK, "rx_sfbei_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_78_INT_MASK, "rx_sfbei_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SFBEI_79_INT_MASK, "rx_sfbei_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x75, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM48_INT, "bas_period_alm48_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM49_INT, "bas_period_alm49_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM50_INT, "bas_period_alm50_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM51_INT, "bas_period_alm51_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM52_INT, "bas_period_alm52_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM53_INT, "bas_period_alm53_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM54_INT, "bas_period_alm54_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM55_INT, "bas_period_alm55_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM56_INT, "bas_period_alm56_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM57_INT, "bas_period_alm57_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM58_INT, "bas_period_alm58_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM59_INT, "bas_period_alm59_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM60_INT, "bas_period_alm60_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM61_INT, "bas_period_alm61_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM62_INT, "bas_period_alm62_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM63_INT, "bas_period_alm63_int", FLEXE_OAM_RX_BASE_ADDR, 0x7a, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM48_INT_MASK, "bas_period_alm48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM49_INT_MASK, "bas_period_alm49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM50_INT_MASK, "bas_period_alm50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM51_INT_MASK, "bas_period_alm51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM52_INT_MASK, "bas_period_alm52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM53_INT_MASK, "bas_period_alm53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM54_INT_MASK, "bas_period_alm54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM55_INT_MASK, "bas_period_alm55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM56_INT_MASK, "bas_period_alm56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM57_INT_MASK, "bas_period_alm57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM58_INT_MASK, "bas_period_alm58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM59_INT_MASK, "bas_period_alm59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM60_INT_MASK, "bas_period_alm60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM61_INT_MASK, "bas_period_alm61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM62_INT_MASK, "bas_period_alm62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM63_INT_MASK, "bas_period_alm63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7b, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM75_INT, "bas_period_alm75_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM76_INT, "bas_period_alm76_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM77_INT, "bas_period_alm77_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM78_INT, "bas_period_alm78_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM79_INT, "bas_period_alm79_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM64_INT, "bas_period_alm64_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM65_INT, "bas_period_alm65_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM66_INT, "bas_period_alm66_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM67_INT, "bas_period_alm67_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM68_INT, "bas_period_alm68_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM69_INT, "bas_period_alm69_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM70_INT, "bas_period_alm70_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM71_INT, "bas_period_alm71_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM72_INT, "bas_period_alm72_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM73_INT, "bas_period_alm73_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM74_INT, "bas_period_alm74_int", FLEXE_OAM_RX_BASE_ADDR, 0x7c, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM75_INT_MASK, "bas_period_alm75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM76_INT_MASK, "bas_period_alm76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM77_INT_MASK, "bas_period_alm77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM78_INT_MASK, "bas_period_alm78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM79_INT_MASK, "bas_period_alm79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM64_INT_MASK, "bas_period_alm64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM65_INT_MASK, "bas_period_alm65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM66_INT_MASK, "bas_period_alm66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM67_INT_MASK, "bas_period_alm67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM68_INT_MASK, "bas_period_alm68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM69_INT_MASK, "bas_period_alm69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM70_INT_MASK, "bas_period_alm70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM71_INT_MASK, "bas_period_alm71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM72_INT_MASK, "bas_period_alm72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM73_INT_MASK, "bas_period_alm73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM74_INT_MASK, "bas_period_alm74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x7d, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_0_INT, "rx_sdbip_0_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_1_INT, "rx_sdbip_1_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_2_INT, "rx_sdbip_2_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_3_INT, "rx_sdbip_3_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_4_INT, "rx_sdbip_4_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_5_INT, "rx_sdbip_5_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_6_INT, "rx_sdbip_6_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_7_INT, "rx_sdbip_7_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_8_INT, "rx_sdbip_8_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_9_INT, "rx_sdbip_9_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_10_INT, "rx_sdbip_10_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_11_INT, "rx_sdbip_11_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_12_INT, "rx_sdbip_12_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_13_INT, "rx_sdbip_13_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_14_INT, "rx_sdbip_14_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_15_INT, "rx_sdbip_15_int", FLEXE_OAM_RX_BASE_ADDR, 0x80, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_0_INT_MASK, "rx_sdbip_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_1_INT_MASK, "rx_sdbip_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_2_INT_MASK, "rx_sdbip_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_3_INT_MASK, "rx_sdbip_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_4_INT_MASK, "rx_sdbip_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_5_INT_MASK, "rx_sdbip_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_6_INT_MASK, "rx_sdbip_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_7_INT_MASK, "rx_sdbip_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_8_INT_MASK, "rx_sdbip_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_9_INT_MASK, "rx_sdbip_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_10_INT_MASK, "rx_sdbip_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_11_INT_MASK, "rx_sdbip_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_12_INT_MASK, "rx_sdbip_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_13_INT_MASK, "rx_sdbip_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_14_INT_MASK, "rx_sdbip_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_15_INT_MASK, "rx_sdbip_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x81, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_16_INT, "rx_sdbip_16_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_17_INT, "rx_sdbip_17_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_18_INT, "rx_sdbip_18_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_19_INT, "rx_sdbip_19_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_20_INT, "rx_sdbip_20_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_21_INT, "rx_sdbip_21_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_22_INT, "rx_sdbip_22_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_23_INT, "rx_sdbip_23_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_24_INT, "rx_sdbip_24_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_25_INT, "rx_sdbip_25_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_26_INT, "rx_sdbip_26_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_27_INT, "rx_sdbip_27_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_28_INT, "rx_sdbip_28_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_29_INT, "rx_sdbip_29_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_30_INT, "rx_sdbip_30_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_31_INT, "rx_sdbip_31_int", FLEXE_OAM_RX_BASE_ADDR, 0x82, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_31_INT_MASK, "rx_sdbip_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_16_INT_MASK, "rx_sdbip_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_17_INT_MASK, "rx_sdbip_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_18_INT_MASK, "rx_sdbip_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_19_INT_MASK, "rx_sdbip_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_20_INT_MASK, "rx_sdbip_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_21_INT_MASK, "rx_sdbip_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_22_INT_MASK, "rx_sdbip_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_23_INT_MASK, "rx_sdbip_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_24_INT_MASK, "rx_sdbip_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_25_INT_MASK, "rx_sdbip_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_26_INT_MASK, "rx_sdbip_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_27_INT_MASK, "rx_sdbip_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_28_INT_MASK, "rx_sdbip_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_29_INT_MASK, "rx_sdbip_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_30_INT_MASK, "rx_sdbip_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x83, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_32_INT, "rx_sdbip_32_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_33_INT, "rx_sdbip_33_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_34_INT, "rx_sdbip_34_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_35_INT, "rx_sdbip_35_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_36_INT, "rx_sdbip_36_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_37_INT, "rx_sdbip_37_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_38_INT, "rx_sdbip_38_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_39_INT, "rx_sdbip_39_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_40_INT, "rx_sdbip_40_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_41_INT, "rx_sdbip_41_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_42_INT, "rx_sdbip_42_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_43_INT, "rx_sdbip_43_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_44_INT, "rx_sdbip_44_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_45_INT, "rx_sdbip_45_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_46_INT, "rx_sdbip_46_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_47_INT, "rx_sdbip_47_int", FLEXE_OAM_RX_BASE_ADDR, 0x84, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_32_INT_MASK, "rx_sdbip_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_33_INT_MASK, "rx_sdbip_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_34_INT_MASK, "rx_sdbip_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_35_INT_MASK, "rx_sdbip_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_36_INT_MASK, "rx_sdbip_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_37_INT_MASK, "rx_sdbip_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_38_INT_MASK, "rx_sdbip_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_39_INT_MASK, "rx_sdbip_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_40_INT_MASK, "rx_sdbip_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_41_INT_MASK, "rx_sdbip_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_42_INT_MASK, "rx_sdbip_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_43_INT_MASK, "rx_sdbip_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_44_INT_MASK, "rx_sdbip_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_45_INT_MASK, "rx_sdbip_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_46_INT_MASK, "rx_sdbip_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_47_INT_MASK, "rx_sdbip_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x85, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_59_INT, "rx_sdbip_59_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_60_INT, "rx_sdbip_60_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_61_INT, "rx_sdbip_61_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_62_INT, "rx_sdbip_62_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_63_INT, "rx_sdbip_63_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_48_INT, "rx_sdbip_48_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_49_INT, "rx_sdbip_49_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_50_INT, "rx_sdbip_50_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_51_INT, "rx_sdbip_51_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_52_INT, "rx_sdbip_52_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_53_INT, "rx_sdbip_53_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_54_INT, "rx_sdbip_54_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_55_INT, "rx_sdbip_55_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_56_INT, "rx_sdbip_56_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_57_INT, "rx_sdbip_57_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_58_INT, "rx_sdbip_58_int", FLEXE_OAM_RX_BASE_ADDR, 0x86, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_59_INT_MASK, "rx_sdbip_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_60_INT_MASK, "rx_sdbip_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_61_INT_MASK, "rx_sdbip_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_62_INT_MASK, "rx_sdbip_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_63_INT_MASK, "rx_sdbip_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_48_INT_MASK, "rx_sdbip_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_49_INT_MASK, "rx_sdbip_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_50_INT_MASK, "rx_sdbip_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_51_INT_MASK, "rx_sdbip_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_52_INT_MASK, "rx_sdbip_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_53_INT_MASK, "rx_sdbip_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_54_INT_MASK, "rx_sdbip_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_55_INT_MASK, "rx_sdbip_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_56_INT_MASK, "rx_sdbip_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_57_INT_MASK, "rx_sdbip_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_58_INT_MASK, "rx_sdbip_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x87, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_64_INT, "rx_sdbip_64_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_65_INT, "rx_sdbip_65_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_66_INT, "rx_sdbip_66_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_67_INT, "rx_sdbip_67_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_68_INT, "rx_sdbip_68_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_69_INT, "rx_sdbip_69_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_70_INT, "rx_sdbip_70_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_71_INT, "rx_sdbip_71_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_72_INT, "rx_sdbip_72_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_73_INT, "rx_sdbip_73_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_74_INT, "rx_sdbip_74_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_75_INT, "rx_sdbip_75_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_76_INT, "rx_sdbip_76_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_77_INT, "rx_sdbip_77_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_78_INT, "rx_sdbip_78_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_79_INT, "rx_sdbip_79_int", FLEXE_OAM_RX_BASE_ADDR, 0x88, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbip_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBIP_64_INT_MASK, "rx_sdbip_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_65_INT_MASK, "rx_sdbip_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_66_INT_MASK, "rx_sdbip_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_67_INT_MASK, "rx_sdbip_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_68_INT_MASK, "rx_sdbip_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_69_INT_MASK, "rx_sdbip_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_70_INT_MASK, "rx_sdbip_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_71_INT_MASK, "rx_sdbip_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_72_INT_MASK, "rx_sdbip_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_73_INT_MASK, "rx_sdbip_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_74_INT_MASK, "rx_sdbip_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_75_INT_MASK, "rx_sdbip_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_76_INT_MASK, "rx_sdbip_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_77_INT_MASK, "rx_sdbip_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_78_INT_MASK, "rx_sdbip_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBIP_79_INT_MASK, "rx_sdbip_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x89, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_0_INT, "bas_rdi_0_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_1_INT, "bas_rdi_1_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_2_INT, "bas_rdi_2_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_3_INT, "bas_rdi_3_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_4_INT, "bas_rdi_4_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_5_INT, "bas_rdi_5_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_6_INT, "bas_rdi_6_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_7_INT, "bas_rdi_7_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_8_INT, "bas_rdi_8_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_9_INT, "bas_rdi_9_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_10_INT, "bas_rdi_10_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_11_INT, "bas_rdi_11_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_12_INT, "bas_rdi_12_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_13_INT, "bas_rdi_13_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_14_INT, "bas_rdi_14_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_15_INT, "bas_rdi_15_int", FLEXE_OAM_RX_BASE_ADDR, 0x94, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_0_INT_MASK, "bas_rdi_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_1_INT_MASK, "bas_rdi_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_2_INT_MASK, "bas_rdi_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_3_INT_MASK, "bas_rdi_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_4_INT_MASK, "bas_rdi_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_5_INT_MASK, "bas_rdi_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_6_INT_MASK, "bas_rdi_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_7_INT_MASK, "bas_rdi_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_8_INT_MASK, "bas_rdi_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_9_INT_MASK, "bas_rdi_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_10_INT_MASK, "bas_rdi_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_11_INT_MASK, "bas_rdi_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_12_INT_MASK, "bas_rdi_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_13_INT_MASK, "bas_rdi_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_14_INT_MASK, "bas_rdi_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_15_INT_MASK, "bas_rdi_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x95, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_27_INT, "bas_rdi_27_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_28_INT, "bas_rdi_28_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_29_INT, "bas_rdi_29_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_30_INT, "bas_rdi_30_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_31_INT, "bas_rdi_31_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_16_INT, "bas_rdi_16_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_17_INT, "bas_rdi_17_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_18_INT, "bas_rdi_18_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_19_INT, "bas_rdi_19_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_20_INT, "bas_rdi_20_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_21_INT, "bas_rdi_21_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_22_INT, "bas_rdi_22_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_23_INT, "bas_rdi_23_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_24_INT, "bas_rdi_24_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_25_INT, "bas_rdi_25_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_26_INT, "bas_rdi_26_int", FLEXE_OAM_RX_BASE_ADDR, 0x96, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_27_INT_MASK, "bas_rdi_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_28_INT_MASK, "bas_rdi_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_29_INT_MASK, "bas_rdi_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_30_INT_MASK, "bas_rdi_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_31_INT_MASK, "bas_rdi_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_16_INT_MASK, "bas_rdi_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_17_INT_MASK, "bas_rdi_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_18_INT_MASK, "bas_rdi_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_19_INT_MASK, "bas_rdi_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_20_INT_MASK, "bas_rdi_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_21_INT_MASK, "bas_rdi_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_22_INT_MASK, "bas_rdi_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_23_INT_MASK, "bas_rdi_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_24_INT_MASK, "bas_rdi_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_25_INT_MASK, "bas_rdi_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_26_INT_MASK, "bas_rdi_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x97, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_32_INT, "bas_rdi_32_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_33_INT, "bas_rdi_33_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_34_INT, "bas_rdi_34_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_35_INT, "bas_rdi_35_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_36_INT, "bas_rdi_36_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_37_INT, "bas_rdi_37_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_38_INT, "bas_rdi_38_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_39_INT, "bas_rdi_39_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_40_INT, "bas_rdi_40_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_41_INT, "bas_rdi_41_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_42_INT, "bas_rdi_42_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_43_INT, "bas_rdi_43_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_44_INT, "bas_rdi_44_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_45_INT, "bas_rdi_45_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_46_INT, "bas_rdi_46_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_47_INT, "bas_rdi_47_int", FLEXE_OAM_RX_BASE_ADDR, 0x98, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_32_INT_MASK, "bas_rdi_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_33_INT_MASK, "bas_rdi_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_34_INT_MASK, "bas_rdi_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_35_INT_MASK, "bas_rdi_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_36_INT_MASK, "bas_rdi_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_37_INT_MASK, "bas_rdi_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_38_INT_MASK, "bas_rdi_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_39_INT_MASK, "bas_rdi_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_40_INT_MASK, "bas_rdi_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_41_INT_MASK, "bas_rdi_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_42_INT_MASK, "bas_rdi_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_43_INT_MASK, "bas_rdi_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_44_INT_MASK, "bas_rdi_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_45_INT_MASK, "bas_rdi_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_46_INT_MASK, "bas_rdi_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_47_INT_MASK, "bas_rdi_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x99, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_48_INT, "bas_rdi_48_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_49_INT, "bas_rdi_49_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_50_INT, "bas_rdi_50_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_51_INT, "bas_rdi_51_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_52_INT, "bas_rdi_52_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_53_INT, "bas_rdi_53_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_54_INT, "bas_rdi_54_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_55_INT, "bas_rdi_55_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_56_INT, "bas_rdi_56_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_57_INT, "bas_rdi_57_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_58_INT, "bas_rdi_58_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_59_INT, "bas_rdi_59_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_60_INT, "bas_rdi_60_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_61_INT, "bas_rdi_61_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_62_INT, "bas_rdi_62_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_63_INT, "bas_rdi_63_int", FLEXE_OAM_RX_BASE_ADDR, 0x9a, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_48_INT_MASK, "bas_rdi_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_49_INT_MASK, "bas_rdi_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_50_INT_MASK, "bas_rdi_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_51_INT_MASK, "bas_rdi_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_52_INT_MASK, "bas_rdi_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_53_INT_MASK, "bas_rdi_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_54_INT_MASK, "bas_rdi_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_55_INT_MASK, "bas_rdi_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_56_INT_MASK, "bas_rdi_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_57_INT_MASK, "bas_rdi_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_58_INT_MASK, "bas_rdi_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_59_INT_MASK, "bas_rdi_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_60_INT_MASK, "bas_rdi_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_61_INT_MASK, "bas_rdi_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_62_INT_MASK, "bas_rdi_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_63_INT_MASK, "bas_rdi_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9b, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_64_INT, "bas_rdi_64_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_65_INT, "bas_rdi_65_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_66_INT, "bas_rdi_66_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_67_INT, "bas_rdi_67_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_68_INT, "bas_rdi_68_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_69_INT, "bas_rdi_69_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_70_INT, "bas_rdi_70_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_71_INT, "bas_rdi_71_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_72_INT, "bas_rdi_72_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_73_INT, "bas_rdi_73_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_74_INT, "bas_rdi_74_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_75_INT, "bas_rdi_75_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_76_INT, "bas_rdi_76_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_77_INT, "bas_rdi_77_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_78_INT, "bas_rdi_78_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_79_INT, "bas_rdi_79_int", FLEXE_OAM_RX_BASE_ADDR, 0x9c, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_rdi_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_RDI_64_INT_MASK, "bas_rdi_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_65_INT_MASK, "bas_rdi_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_66_INT_MASK, "bas_rdi_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_67_INT_MASK, "bas_rdi_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_68_INT_MASK, "bas_rdi_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_69_INT_MASK, "bas_rdi_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_70_INT_MASK, "bas_rdi_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_71_INT_MASK, "bas_rdi_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_72_INT_MASK, "bas_rdi_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_73_INT_MASK, "bas_rdi_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_74_INT_MASK, "bas_rdi_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_75_INT_MASK, "bas_rdi_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_76_INT_MASK, "bas_rdi_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_77_INT_MASK, "bas_rdi_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_78_INT_MASK, "bas_rdi_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_RDI_79_INT_MASK, "bas_rdi_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9d, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_0_INT, "bas_csf_lpi_0_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_1_INT, "bas_csf_lpi_1_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_2_INT, "bas_csf_lpi_2_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_3_INT, "bas_csf_lpi_3_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_4_INT, "bas_csf_lpi_4_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_5_INT, "bas_csf_lpi_5_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_6_INT, "bas_csf_lpi_6_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_7_INT, "bas_csf_lpi_7_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_8_INT, "bas_csf_lpi_8_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_9_INT, "bas_csf_lpi_9_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_10_INT, "bas_csf_lpi_10_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_11_INT, "bas_csf_lpi_11_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_12_INT, "bas_csf_lpi_12_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_13_INT, "bas_csf_lpi_13_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_14_INT, "bas_csf_lpi_14_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_15_INT, "bas_csf_lpi_15_int", FLEXE_OAM_RX_BASE_ADDR, 0x9e, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_0_INT_MASK, "bas_csf_lpi_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_1_INT_MASK, "bas_csf_lpi_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_2_INT_MASK, "bas_csf_lpi_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_3_INT_MASK, "bas_csf_lpi_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_4_INT_MASK, "bas_csf_lpi_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_5_INT_MASK, "bas_csf_lpi_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_6_INT_MASK, "bas_csf_lpi_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_7_INT_MASK, "bas_csf_lpi_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_8_INT_MASK, "bas_csf_lpi_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_9_INT_MASK, "bas_csf_lpi_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_10_INT_MASK, "bas_csf_lpi_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_11_INT_MASK, "bas_csf_lpi_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_12_INT_MASK, "bas_csf_lpi_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_13_INT_MASK, "bas_csf_lpi_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_14_INT_MASK, "bas_csf_lpi_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_15_INT_MASK, "bas_csf_lpi_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0x9f, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_16_INT, "bas_csf_lpi_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_17_INT, "bas_csf_lpi_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_18_INT, "bas_csf_lpi_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_19_INT, "bas_csf_lpi_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_20_INT, "bas_csf_lpi_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_21_INT, "bas_csf_lpi_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_22_INT, "bas_csf_lpi_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_23_INT, "bas_csf_lpi_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_24_INT, "bas_csf_lpi_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_25_INT, "bas_csf_lpi_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_26_INT, "bas_csf_lpi_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_27_INT, "bas_csf_lpi_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_28_INT, "bas_csf_lpi_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_29_INT, "bas_csf_lpi_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_30_INT, "bas_csf_lpi_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_31_INT, "bas_csf_lpi_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xa0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_16_INT_MASK, "bas_csf_lpi_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_17_INT_MASK, "bas_csf_lpi_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_18_INT_MASK, "bas_csf_lpi_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_19_INT_MASK, "bas_csf_lpi_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_20_INT_MASK, "bas_csf_lpi_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_21_INT_MASK, "bas_csf_lpi_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_22_INT_MASK, "bas_csf_lpi_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_23_INT_MASK, "bas_csf_lpi_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_24_INT_MASK, "bas_csf_lpi_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_25_INT_MASK, "bas_csf_lpi_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_26_INT_MASK, "bas_csf_lpi_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_27_INT_MASK, "bas_csf_lpi_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_28_INT_MASK, "bas_csf_lpi_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_29_INT_MASK, "bas_csf_lpi_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_30_INT_MASK, "bas_csf_lpi_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_31_INT_MASK, "bas_csf_lpi_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_32_INT, "bas_csf_lpi_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_33_INT, "bas_csf_lpi_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_34_INT, "bas_csf_lpi_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_35_INT, "bas_csf_lpi_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_36_INT, "bas_csf_lpi_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_37_INT, "bas_csf_lpi_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_38_INT, "bas_csf_lpi_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_39_INT, "bas_csf_lpi_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_40_INT, "bas_csf_lpi_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_41_INT, "bas_csf_lpi_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_42_INT, "bas_csf_lpi_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_43_INT, "bas_csf_lpi_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_44_INT, "bas_csf_lpi_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_45_INT, "bas_csf_lpi_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_46_INT, "bas_csf_lpi_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_47_INT, "bas_csf_lpi_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xa2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_47_INT_MASK, "bas_csf_lpi_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_32_INT_MASK, "bas_csf_lpi_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_33_INT_MASK, "bas_csf_lpi_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_34_INT_MASK, "bas_csf_lpi_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_35_INT_MASK, "bas_csf_lpi_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_36_INT_MASK, "bas_csf_lpi_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_37_INT_MASK, "bas_csf_lpi_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_38_INT_MASK, "bas_csf_lpi_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_39_INT_MASK, "bas_csf_lpi_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_40_INT_MASK, "bas_csf_lpi_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_41_INT_MASK, "bas_csf_lpi_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_42_INT_MASK, "bas_csf_lpi_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_43_INT_MASK, "bas_csf_lpi_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_44_INT_MASK, "bas_csf_lpi_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_45_INT_MASK, "bas_csf_lpi_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_46_INT_MASK, "bas_csf_lpi_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_48_INT, "bas_csf_lpi_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_49_INT, "bas_csf_lpi_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_50_INT, "bas_csf_lpi_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_51_INT, "bas_csf_lpi_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_52_INT, "bas_csf_lpi_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_53_INT, "bas_csf_lpi_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_54_INT, "bas_csf_lpi_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_55_INT, "bas_csf_lpi_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_56_INT, "bas_csf_lpi_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_57_INT, "bas_csf_lpi_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_58_INT, "bas_csf_lpi_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_59_INT, "bas_csf_lpi_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_60_INT, "bas_csf_lpi_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_61_INT, "bas_csf_lpi_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_62_INT, "bas_csf_lpi_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_63_INT, "bas_csf_lpi_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xa4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_48_INT_MASK, "bas_csf_lpi_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_49_INT_MASK, "bas_csf_lpi_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_50_INT_MASK, "bas_csf_lpi_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_51_INT_MASK, "bas_csf_lpi_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_52_INT_MASK, "bas_csf_lpi_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_53_INT_MASK, "bas_csf_lpi_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_54_INT_MASK, "bas_csf_lpi_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_55_INT_MASK, "bas_csf_lpi_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_56_INT_MASK, "bas_csf_lpi_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_57_INT_MASK, "bas_csf_lpi_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_58_INT_MASK, "bas_csf_lpi_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_59_INT_MASK, "bas_csf_lpi_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_60_INT_MASK, "bas_csf_lpi_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_61_INT_MASK, "bas_csf_lpi_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_62_INT_MASK, "bas_csf_lpi_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_63_INT_MASK, "bas_csf_lpi_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_75_INT, "bas_csf_lpi_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_76_INT, "bas_csf_lpi_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_77_INT, "bas_csf_lpi_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_78_INT, "bas_csf_lpi_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_79_INT, "bas_csf_lpi_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_64_INT, "bas_csf_lpi_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_65_INT, "bas_csf_lpi_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_66_INT, "bas_csf_lpi_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_67_INT, "bas_csf_lpi_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_68_INT, "bas_csf_lpi_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_69_INT, "bas_csf_lpi_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_70_INT, "bas_csf_lpi_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_71_INT, "bas_csf_lpi_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_72_INT, "bas_csf_lpi_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_73_INT, "bas_csf_lpi_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_74_INT, "bas_csf_lpi_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xa6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_csf_lpi_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_75_INT_MASK, "bas_csf_lpi_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_76_INT_MASK, "bas_csf_lpi_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_77_INT_MASK, "bas_csf_lpi_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_78_INT_MASK, "bas_csf_lpi_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_79_INT_MASK, "bas_csf_lpi_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_64_INT_MASK, "bas_csf_lpi_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_65_INT_MASK, "bas_csf_lpi_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_66_INT_MASK, "bas_csf_lpi_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_67_INT_MASK, "bas_csf_lpi_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_68_INT_MASK, "bas_csf_lpi_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_69_INT_MASK, "bas_csf_lpi_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_70_INT_MASK, "bas_csf_lpi_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_71_INT_MASK, "bas_csf_lpi_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_72_INT_MASK, "bas_csf_lpi_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_73_INT_MASK, "bas_csf_lpi_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CSF_LPI_74_INT_MASK, "bas_csf_lpi_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_0_INT, "bas_cs_lf_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_1_INT, "bas_cs_lf_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_2_INT, "bas_cs_lf_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_3_INT, "bas_cs_lf_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_4_INT, "bas_cs_lf_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_5_INT, "bas_cs_lf_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_6_INT, "bas_cs_lf_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_7_INT, "bas_cs_lf_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_8_INT, "bas_cs_lf_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_9_INT, "bas_cs_lf_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_10_INT, "bas_cs_lf_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_11_INT, "bas_cs_lf_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_12_INT, "bas_cs_lf_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_13_INT, "bas_cs_lf_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_14_INT, "bas_cs_lf_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_15_INT, "bas_cs_lf_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xa8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_0_INT_MASK, "bas_cs_lf_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_1_INT_MASK, "bas_cs_lf_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_2_INT_MASK, "bas_cs_lf_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_3_INT_MASK, "bas_cs_lf_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_4_INT_MASK, "bas_cs_lf_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_5_INT_MASK, "bas_cs_lf_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_6_INT_MASK, "bas_cs_lf_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_7_INT_MASK, "bas_cs_lf_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_8_INT_MASK, "bas_cs_lf_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_9_INT_MASK, "bas_cs_lf_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_10_INT_MASK, "bas_cs_lf_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_11_INT_MASK, "bas_cs_lf_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_12_INT_MASK, "bas_cs_lf_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_13_INT_MASK, "bas_cs_lf_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_14_INT_MASK, "bas_cs_lf_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_15_INT_MASK, "bas_cs_lf_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xa9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_16_INT, "bas_cs_lf_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_17_INT, "bas_cs_lf_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_18_INT, "bas_cs_lf_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_19_INT, "bas_cs_lf_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_20_INT, "bas_cs_lf_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_21_INT, "bas_cs_lf_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_22_INT, "bas_cs_lf_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_23_INT, "bas_cs_lf_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_24_INT, "bas_cs_lf_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_25_INT, "bas_cs_lf_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_26_INT, "bas_cs_lf_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_27_INT, "bas_cs_lf_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_28_INT, "bas_cs_lf_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_29_INT, "bas_cs_lf_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_30_INT, "bas_cs_lf_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_31_INT, "bas_cs_lf_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xaa, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_16_INT_MASK, "bas_cs_lf_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_17_INT_MASK, "bas_cs_lf_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_18_INT_MASK, "bas_cs_lf_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_19_INT_MASK, "bas_cs_lf_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_20_INT_MASK, "bas_cs_lf_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_21_INT_MASK, "bas_cs_lf_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_22_INT_MASK, "bas_cs_lf_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_23_INT_MASK, "bas_cs_lf_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_24_INT_MASK, "bas_cs_lf_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_25_INT_MASK, "bas_cs_lf_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_26_INT_MASK, "bas_cs_lf_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_27_INT_MASK, "bas_cs_lf_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_28_INT_MASK, "bas_cs_lf_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_29_INT_MASK, "bas_cs_lf_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_30_INT_MASK, "bas_cs_lf_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_31_INT_MASK, "bas_cs_lf_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xab, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_32_INT, "bas_cs_lf_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_33_INT, "bas_cs_lf_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_34_INT, "bas_cs_lf_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_35_INT, "bas_cs_lf_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_36_INT, "bas_cs_lf_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_37_INT, "bas_cs_lf_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_38_INT, "bas_cs_lf_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_39_INT, "bas_cs_lf_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_40_INT, "bas_cs_lf_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_41_INT, "bas_cs_lf_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_42_INT, "bas_cs_lf_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_43_INT, "bas_cs_lf_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_44_INT, "bas_cs_lf_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_45_INT, "bas_cs_lf_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_46_INT, "bas_cs_lf_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_47_INT, "bas_cs_lf_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xac, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_32_INT_MASK, "bas_cs_lf_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_33_INT_MASK, "bas_cs_lf_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_34_INT_MASK, "bas_cs_lf_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_35_INT_MASK, "bas_cs_lf_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_36_INT_MASK, "bas_cs_lf_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_37_INT_MASK, "bas_cs_lf_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_38_INT_MASK, "bas_cs_lf_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_39_INT_MASK, "bas_cs_lf_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_40_INT_MASK, "bas_cs_lf_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_41_INT_MASK, "bas_cs_lf_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_42_INT_MASK, "bas_cs_lf_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_43_INT_MASK, "bas_cs_lf_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_44_INT_MASK, "bas_cs_lf_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_45_INT_MASK, "bas_cs_lf_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_46_INT_MASK, "bas_cs_lf_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_47_INT_MASK, "bas_cs_lf_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xad, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_48_INT, "bas_cs_lf_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_49_INT, "bas_cs_lf_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_50_INT, "bas_cs_lf_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_51_INT, "bas_cs_lf_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_52_INT, "bas_cs_lf_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_53_INT, "bas_cs_lf_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_54_INT, "bas_cs_lf_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_55_INT, "bas_cs_lf_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_56_INT, "bas_cs_lf_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_57_INT, "bas_cs_lf_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_58_INT, "bas_cs_lf_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_59_INT, "bas_cs_lf_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_60_INT, "bas_cs_lf_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_61_INT, "bas_cs_lf_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_62_INT, "bas_cs_lf_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_63_INT, "bas_cs_lf_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xae, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_48_INT_MASK, "bas_cs_lf_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_49_INT_MASK, "bas_cs_lf_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_50_INT_MASK, "bas_cs_lf_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_51_INT_MASK, "bas_cs_lf_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_52_INT_MASK, "bas_cs_lf_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_53_INT_MASK, "bas_cs_lf_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_54_INT_MASK, "bas_cs_lf_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_55_INT_MASK, "bas_cs_lf_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_56_INT_MASK, "bas_cs_lf_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_57_INT_MASK, "bas_cs_lf_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_58_INT_MASK, "bas_cs_lf_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_59_INT_MASK, "bas_cs_lf_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_60_INT_MASK, "bas_cs_lf_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_61_INT_MASK, "bas_cs_lf_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_62_INT_MASK, "bas_cs_lf_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_63_INT_MASK, "bas_cs_lf_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xaf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_64_INT, "bas_cs_lf_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_65_INT, "bas_cs_lf_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_66_INT, "bas_cs_lf_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_67_INT, "bas_cs_lf_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_68_INT, "bas_cs_lf_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_69_INT, "bas_cs_lf_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_70_INT, "bas_cs_lf_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_71_INT, "bas_cs_lf_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_72_INT, "bas_cs_lf_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_73_INT, "bas_cs_lf_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_74_INT, "bas_cs_lf_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_75_INT, "bas_cs_lf_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_76_INT, "bas_cs_lf_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_77_INT, "bas_cs_lf_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_78_INT, "bas_cs_lf_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_79_INT, "bas_cs_lf_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xb0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_lf_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_64_INT_MASK, "bas_cs_lf_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_65_INT_MASK, "bas_cs_lf_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_66_INT_MASK, "bas_cs_lf_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_67_INT_MASK, "bas_cs_lf_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_68_INT_MASK, "bas_cs_lf_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_69_INT_MASK, "bas_cs_lf_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_70_INT_MASK, "bas_cs_lf_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_71_INT_MASK, "bas_cs_lf_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_72_INT_MASK, "bas_cs_lf_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_73_INT_MASK, "bas_cs_lf_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_74_INT_MASK, "bas_cs_lf_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_75_INT_MASK, "bas_cs_lf_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_76_INT_MASK, "bas_cs_lf_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_77_INT_MASK, "bas_cs_lf_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_78_INT_MASK, "bas_cs_lf_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_LF_79_INT_MASK, "bas_cs_lf_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_0_INT, "bas_cs_rf_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_1_INT, "bas_cs_rf_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_2_INT, "bas_cs_rf_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_3_INT, "bas_cs_rf_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_4_INT, "bas_cs_rf_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_5_INT, "bas_cs_rf_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_6_INT, "bas_cs_rf_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_7_INT, "bas_cs_rf_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_8_INT, "bas_cs_rf_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_9_INT, "bas_cs_rf_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_10_INT, "bas_cs_rf_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_11_INT, "bas_cs_rf_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_12_INT, "bas_cs_rf_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_13_INT, "bas_cs_rf_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_14_INT, "bas_cs_rf_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_15_INT, "bas_cs_rf_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xb2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_15_INT_MASK, "bas_cs_rf_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_0_INT_MASK, "bas_cs_rf_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_1_INT_MASK, "bas_cs_rf_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_2_INT_MASK, "bas_cs_rf_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_3_INT_MASK, "bas_cs_rf_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_4_INT_MASK, "bas_cs_rf_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_5_INT_MASK, "bas_cs_rf_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_6_INT_MASK, "bas_cs_rf_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_7_INT_MASK, "bas_cs_rf_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_8_INT_MASK, "bas_cs_rf_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_9_INT_MASK, "bas_cs_rf_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_10_INT_MASK, "bas_cs_rf_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_11_INT_MASK, "bas_cs_rf_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_12_INT_MASK, "bas_cs_rf_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_13_INT_MASK, "bas_cs_rf_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_14_INT_MASK, "bas_cs_rf_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_16_INT, "bas_cs_rf_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_17_INT, "bas_cs_rf_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_18_INT, "bas_cs_rf_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_19_INT, "bas_cs_rf_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_20_INT, "bas_cs_rf_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_21_INT, "bas_cs_rf_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_22_INT, "bas_cs_rf_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_23_INT, "bas_cs_rf_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_24_INT, "bas_cs_rf_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_25_INT, "bas_cs_rf_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_26_INT, "bas_cs_rf_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_27_INT, "bas_cs_rf_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_28_INT, "bas_cs_rf_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_29_INT, "bas_cs_rf_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_30_INT, "bas_cs_rf_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_31_INT, "bas_cs_rf_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xb4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_16_INT_MASK, "bas_cs_rf_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_17_INT_MASK, "bas_cs_rf_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_18_INT_MASK, "bas_cs_rf_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_19_INT_MASK, "bas_cs_rf_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_20_INT_MASK, "bas_cs_rf_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_21_INT_MASK, "bas_cs_rf_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_22_INT_MASK, "bas_cs_rf_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_23_INT_MASK, "bas_cs_rf_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_24_INT_MASK, "bas_cs_rf_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_25_INT_MASK, "bas_cs_rf_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_26_INT_MASK, "bas_cs_rf_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_27_INT_MASK, "bas_cs_rf_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_28_INT_MASK, "bas_cs_rf_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_29_INT_MASK, "bas_cs_rf_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_30_INT_MASK, "bas_cs_rf_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_31_INT_MASK, "bas_cs_rf_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_43_INT, "bas_cs_rf_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_44_INT, "bas_cs_rf_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_45_INT, "bas_cs_rf_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_46_INT, "bas_cs_rf_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_47_INT, "bas_cs_rf_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_32_INT, "bas_cs_rf_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_33_INT, "bas_cs_rf_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_34_INT, "bas_cs_rf_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_35_INT, "bas_cs_rf_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_36_INT, "bas_cs_rf_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_37_INT, "bas_cs_rf_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_38_INT, "bas_cs_rf_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_39_INT, "bas_cs_rf_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_40_INT, "bas_cs_rf_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_41_INT, "bas_cs_rf_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_42_INT, "bas_cs_rf_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xb6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_43_INT_MASK, "bas_cs_rf_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_44_INT_MASK, "bas_cs_rf_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_45_INT_MASK, "bas_cs_rf_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_46_INT_MASK, "bas_cs_rf_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_47_INT_MASK, "bas_cs_rf_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_32_INT_MASK, "bas_cs_rf_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_33_INT_MASK, "bas_cs_rf_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_34_INT_MASK, "bas_cs_rf_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_35_INT_MASK, "bas_cs_rf_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_36_INT_MASK, "bas_cs_rf_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_37_INT_MASK, "bas_cs_rf_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_38_INT_MASK, "bas_cs_rf_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_39_INT_MASK, "bas_cs_rf_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_40_INT_MASK, "bas_cs_rf_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_41_INT_MASK, "bas_cs_rf_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_42_INT_MASK, "bas_cs_rf_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_48_INT, "bas_cs_rf_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_49_INT, "bas_cs_rf_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_50_INT, "bas_cs_rf_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_51_INT, "bas_cs_rf_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_52_INT, "bas_cs_rf_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_53_INT, "bas_cs_rf_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_54_INT, "bas_cs_rf_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_55_INT, "bas_cs_rf_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_56_INT, "bas_cs_rf_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_57_INT, "bas_cs_rf_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_58_INT, "bas_cs_rf_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_59_INT, "bas_cs_rf_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_60_INT, "bas_cs_rf_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_61_INT, "bas_cs_rf_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_62_INT, "bas_cs_rf_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_63_INT, "bas_cs_rf_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xb8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_48_INT_MASK, "bas_cs_rf_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_49_INT_MASK, "bas_cs_rf_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_50_INT_MASK, "bas_cs_rf_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_51_INT_MASK, "bas_cs_rf_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_52_INT_MASK, "bas_cs_rf_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_53_INT_MASK, "bas_cs_rf_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_54_INT_MASK, "bas_cs_rf_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_55_INT_MASK, "bas_cs_rf_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_56_INT_MASK, "bas_cs_rf_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_57_INT_MASK, "bas_cs_rf_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_58_INT_MASK, "bas_cs_rf_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_59_INT_MASK, "bas_cs_rf_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_60_INT_MASK, "bas_cs_rf_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_61_INT_MASK, "bas_cs_rf_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_62_INT_MASK, "bas_cs_rf_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_63_INT_MASK, "bas_cs_rf_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xb9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_64_INT, "bas_cs_rf_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_65_INT, "bas_cs_rf_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_66_INT, "bas_cs_rf_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_67_INT, "bas_cs_rf_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_68_INT, "bas_cs_rf_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_69_INT, "bas_cs_rf_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_70_INT, "bas_cs_rf_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_71_INT, "bas_cs_rf_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_72_INT, "bas_cs_rf_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_73_INT, "bas_cs_rf_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_74_INT, "bas_cs_rf_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_75_INT, "bas_cs_rf_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_76_INT, "bas_cs_rf_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_77_INT, "bas_cs_rf_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_78_INT, "bas_cs_rf_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_79_INT, "bas_cs_rf_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xba, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cs_rf_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_64_INT_MASK, "bas_cs_rf_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_65_INT_MASK, "bas_cs_rf_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_66_INT_MASK, "bas_cs_rf_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_67_INT_MASK, "bas_cs_rf_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_68_INT_MASK, "bas_cs_rf_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_69_INT_MASK, "bas_cs_rf_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_70_INT_MASK, "bas_cs_rf_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_71_INT_MASK, "bas_cs_rf_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_72_INT_MASK, "bas_cs_rf_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_73_INT_MASK, "bas_cs_rf_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_74_INT_MASK, "bas_cs_rf_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_75_INT_MASK, "bas_cs_rf_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_76_INT_MASK, "bas_cs_rf_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_77_INT_MASK, "bas_cs_rf_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_78_INT_MASK, "bas_cs_rf_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CS_RF_79_INT_MASK, "bas_cs_rf_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_0_INT, "bas_crc_err_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_1_INT, "bas_crc_err_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_2_INT, "bas_crc_err_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_3_INT, "bas_crc_err_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_4_INT, "bas_crc_err_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_5_INT, "bas_crc_err_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_6_INT, "bas_crc_err_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_7_INT, "bas_crc_err_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_8_INT, "bas_crc_err_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_9_INT, "bas_crc_err_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_10_INT, "bas_crc_err_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_11_INT, "bas_crc_err_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_12_INT, "bas_crc_err_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_13_INT, "bas_crc_err_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_14_INT, "bas_crc_err_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_15_INT, "bas_crc_err_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xbc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_0_INT_MASK, "bas_crc_err_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_1_INT_MASK, "bas_crc_err_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_2_INT_MASK, "bas_crc_err_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_3_INT_MASK, "bas_crc_err_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_4_INT_MASK, "bas_crc_err_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_5_INT_MASK, "bas_crc_err_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_6_INT_MASK, "bas_crc_err_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_7_INT_MASK, "bas_crc_err_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_8_INT_MASK, "bas_crc_err_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_9_INT_MASK, "bas_crc_err_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_10_INT_MASK, "bas_crc_err_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_11_INT_MASK, "bas_crc_err_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_12_INT_MASK, "bas_crc_err_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_13_INT_MASK, "bas_crc_err_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_14_INT_MASK, "bas_crc_err_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_15_INT_MASK, "bas_crc_err_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_16_INT, "bas_crc_err_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_17_INT, "bas_crc_err_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_18_INT, "bas_crc_err_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_19_INT, "bas_crc_err_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_20_INT, "bas_crc_err_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_21_INT, "bas_crc_err_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_22_INT, "bas_crc_err_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_23_INT, "bas_crc_err_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_24_INT, "bas_crc_err_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_25_INT, "bas_crc_err_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_26_INT, "bas_crc_err_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_27_INT, "bas_crc_err_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_28_INT, "bas_crc_err_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_29_INT, "bas_crc_err_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_30_INT, "bas_crc_err_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_31_INT, "bas_crc_err_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xbe, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_16_INT_MASK, "bas_crc_err_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_17_INT_MASK, "bas_crc_err_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_18_INT_MASK, "bas_crc_err_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_19_INT_MASK, "bas_crc_err_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_20_INT_MASK, "bas_crc_err_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_21_INT_MASK, "bas_crc_err_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_22_INT_MASK, "bas_crc_err_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_23_INT_MASK, "bas_crc_err_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_24_INT_MASK, "bas_crc_err_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_25_INT_MASK, "bas_crc_err_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_26_INT_MASK, "bas_crc_err_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_27_INT_MASK, "bas_crc_err_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_28_INT_MASK, "bas_crc_err_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_29_INT_MASK, "bas_crc_err_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_30_INT_MASK, "bas_crc_err_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_31_INT_MASK, "bas_crc_err_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xbf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_32_INT, "bas_crc_err_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_33_INT, "bas_crc_err_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_34_INT, "bas_crc_err_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_35_INT, "bas_crc_err_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_36_INT, "bas_crc_err_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_37_INT, "bas_crc_err_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_38_INT, "bas_crc_err_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_39_INT, "bas_crc_err_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_40_INT, "bas_crc_err_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_41_INT, "bas_crc_err_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_42_INT, "bas_crc_err_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_43_INT, "bas_crc_err_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_44_INT, "bas_crc_err_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_45_INT, "bas_crc_err_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_46_INT, "bas_crc_err_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_47_INT, "bas_crc_err_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xc0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_32_INT_MASK, "bas_crc_err_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_33_INT_MASK, "bas_crc_err_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_34_INT_MASK, "bas_crc_err_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_35_INT_MASK, "bas_crc_err_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_36_INT_MASK, "bas_crc_err_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_37_INT_MASK, "bas_crc_err_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_38_INT_MASK, "bas_crc_err_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_39_INT_MASK, "bas_crc_err_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_40_INT_MASK, "bas_crc_err_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_41_INT_MASK, "bas_crc_err_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_42_INT_MASK, "bas_crc_err_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_43_INT_MASK, "bas_crc_err_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_44_INT_MASK, "bas_crc_err_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_45_INT_MASK, "bas_crc_err_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_46_INT_MASK, "bas_crc_err_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_47_INT_MASK, "bas_crc_err_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_48_INT, "bas_crc_err_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_49_INT, "bas_crc_err_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_50_INT, "bas_crc_err_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_51_INT, "bas_crc_err_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_52_INT, "bas_crc_err_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_53_INT, "bas_crc_err_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_54_INT, "bas_crc_err_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_55_INT, "bas_crc_err_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_56_INT, "bas_crc_err_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_57_INT, "bas_crc_err_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_58_INT, "bas_crc_err_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_59_INT, "bas_crc_err_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_60_INT, "bas_crc_err_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_61_INT, "bas_crc_err_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_62_INT, "bas_crc_err_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_63_INT, "bas_crc_err_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xc2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_63_INT_MASK, "bas_crc_err_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_48_INT_MASK, "bas_crc_err_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_49_INT_MASK, "bas_crc_err_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_50_INT_MASK, "bas_crc_err_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_51_INT_MASK, "bas_crc_err_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_52_INT_MASK, "bas_crc_err_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_53_INT_MASK, "bas_crc_err_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_54_INT_MASK, "bas_crc_err_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_55_INT_MASK, "bas_crc_err_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_56_INT_MASK, "bas_crc_err_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_57_INT_MASK, "bas_crc_err_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_58_INT_MASK, "bas_crc_err_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_59_INT_MASK, "bas_crc_err_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_60_INT_MASK, "bas_crc_err_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_61_INT_MASK, "bas_crc_err_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_62_INT_MASK, "bas_crc_err_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_64_INT, "bas_crc_err_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_65_INT, "bas_crc_err_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_66_INT, "bas_crc_err_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_67_INT, "bas_crc_err_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_68_INT, "bas_crc_err_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_69_INT, "bas_crc_err_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_70_INT, "bas_crc_err_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_71_INT, "bas_crc_err_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_72_INT, "bas_crc_err_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_73_INT, "bas_crc_err_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_74_INT, "bas_crc_err_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_75_INT, "bas_crc_err_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_76_INT, "bas_crc_err_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_77_INT, "bas_crc_err_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_78_INT, "bas_crc_err_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_79_INT, "bas_crc_err_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xc4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_crc_err_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_64_INT_MASK, "bas_crc_err_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_65_INT_MASK, "bas_crc_err_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_66_INT_MASK, "bas_crc_err_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_67_INT_MASK, "bas_crc_err_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_68_INT_MASK, "bas_crc_err_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_69_INT_MASK, "bas_crc_err_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_70_INT_MASK, "bas_crc_err_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_71_INT_MASK, "bas_crc_err_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_72_INT_MASK, "bas_crc_err_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_73_INT_MASK, "bas_crc_err_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_74_INT_MASK, "bas_crc_err_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_75_INT_MASK, "bas_crc_err_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_76_INT_MASK, "bas_crc_err_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_77_INT_MASK, "bas_crc_err_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_78_INT_MASK, "bas_crc_err_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_CRC_ERR_79_INT_MASK, "bas_crc_err_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_11_INT, "bas_no_receive_alm_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_12_INT, "bas_no_receive_alm_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_13_INT, "bas_no_receive_alm_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_14_INT, "bas_no_receive_alm_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_15_INT, "bas_no_receive_alm_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_0_INT, "bas_no_receive_alm_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_1_INT, "bas_no_receive_alm_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_2_INT, "bas_no_receive_alm_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_3_INT, "bas_no_receive_alm_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_4_INT, "bas_no_receive_alm_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_5_INT, "bas_no_receive_alm_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_6_INT, "bas_no_receive_alm_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_7_INT, "bas_no_receive_alm_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_8_INT, "bas_no_receive_alm_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_9_INT, "bas_no_receive_alm_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_10_INT, "bas_no_receive_alm_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xc6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_11_INT_MASK, "bas_no_receive_alm_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_12_INT_MASK, "bas_no_receive_alm_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_13_INT_MASK, "bas_no_receive_alm_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_14_INT_MASK, "bas_no_receive_alm_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_15_INT_MASK, "bas_no_receive_alm_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_0_INT_MASK, "bas_no_receive_alm_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_1_INT_MASK, "bas_no_receive_alm_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_2_INT_MASK, "bas_no_receive_alm_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_3_INT_MASK, "bas_no_receive_alm_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_4_INT_MASK, "bas_no_receive_alm_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_5_INT_MASK, "bas_no_receive_alm_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_6_INT_MASK, "bas_no_receive_alm_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_7_INT_MASK, "bas_no_receive_alm_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_8_INT_MASK, "bas_no_receive_alm_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_9_INT_MASK, "bas_no_receive_alm_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_10_INT_MASK, "bas_no_receive_alm_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_16_INT, "bas_no_receive_alm_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_17_INT, "bas_no_receive_alm_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_18_INT, "bas_no_receive_alm_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_19_INT, "bas_no_receive_alm_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_20_INT, "bas_no_receive_alm_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_21_INT, "bas_no_receive_alm_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_22_INT, "bas_no_receive_alm_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_23_INT, "bas_no_receive_alm_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_24_INT, "bas_no_receive_alm_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_25_INT, "bas_no_receive_alm_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_26_INT, "bas_no_receive_alm_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_27_INT, "bas_no_receive_alm_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_28_INT, "bas_no_receive_alm_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_29_INT, "bas_no_receive_alm_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_30_INT, "bas_no_receive_alm_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_31_INT, "bas_no_receive_alm_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xc8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_16_INT_MASK, "bas_no_receive_alm_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_17_INT_MASK, "bas_no_receive_alm_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_18_INT_MASK, "bas_no_receive_alm_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_19_INT_MASK, "bas_no_receive_alm_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_20_INT_MASK, "bas_no_receive_alm_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_21_INT_MASK, "bas_no_receive_alm_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_22_INT_MASK, "bas_no_receive_alm_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_23_INT_MASK, "bas_no_receive_alm_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_24_INT_MASK, "bas_no_receive_alm_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_25_INT_MASK, "bas_no_receive_alm_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_26_INT_MASK, "bas_no_receive_alm_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_27_INT_MASK, "bas_no_receive_alm_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_28_INT_MASK, "bas_no_receive_alm_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_29_INT_MASK, "bas_no_receive_alm_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_30_INT_MASK, "bas_no_receive_alm_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_31_INT_MASK, "bas_no_receive_alm_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xc9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_32_INT, "bas_no_receive_alm_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_33_INT, "bas_no_receive_alm_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_34_INT, "bas_no_receive_alm_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_35_INT, "bas_no_receive_alm_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_36_INT, "bas_no_receive_alm_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_37_INT, "bas_no_receive_alm_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_38_INT, "bas_no_receive_alm_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_39_INT, "bas_no_receive_alm_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_40_INT, "bas_no_receive_alm_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_41_INT, "bas_no_receive_alm_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_42_INT, "bas_no_receive_alm_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_43_INT, "bas_no_receive_alm_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_44_INT, "bas_no_receive_alm_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_45_INT, "bas_no_receive_alm_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_46_INT, "bas_no_receive_alm_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_47_INT, "bas_no_receive_alm_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xca, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_32_INT_MASK, "bas_no_receive_alm_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_33_INT_MASK, "bas_no_receive_alm_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_34_INT_MASK, "bas_no_receive_alm_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_35_INT_MASK, "bas_no_receive_alm_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_36_INT_MASK, "bas_no_receive_alm_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_37_INT_MASK, "bas_no_receive_alm_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_38_INT_MASK, "bas_no_receive_alm_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_39_INT_MASK, "bas_no_receive_alm_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_40_INT_MASK, "bas_no_receive_alm_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_41_INT_MASK, "bas_no_receive_alm_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_42_INT_MASK, "bas_no_receive_alm_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_43_INT_MASK, "bas_no_receive_alm_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_44_INT_MASK, "bas_no_receive_alm_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_45_INT_MASK, "bas_no_receive_alm_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_46_INT_MASK, "bas_no_receive_alm_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_47_INT_MASK, "bas_no_receive_alm_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_48_INT, "bas_no_receive_alm_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_49_INT, "bas_no_receive_alm_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_50_INT, "bas_no_receive_alm_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_51_INT, "bas_no_receive_alm_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_52_INT, "bas_no_receive_alm_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_53_INT, "bas_no_receive_alm_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_54_INT, "bas_no_receive_alm_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_55_INT, "bas_no_receive_alm_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_56_INT, "bas_no_receive_alm_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_57_INT, "bas_no_receive_alm_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_58_INT, "bas_no_receive_alm_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_59_INT, "bas_no_receive_alm_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_60_INT, "bas_no_receive_alm_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_61_INT, "bas_no_receive_alm_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_62_INT, "bas_no_receive_alm_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_63_INT, "bas_no_receive_alm_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xcc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_48_INT_MASK, "bas_no_receive_alm_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_49_INT_MASK, "bas_no_receive_alm_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_50_INT_MASK, "bas_no_receive_alm_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_51_INT_MASK, "bas_no_receive_alm_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_52_INT_MASK, "bas_no_receive_alm_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_53_INT_MASK, "bas_no_receive_alm_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_54_INT_MASK, "bas_no_receive_alm_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_55_INT_MASK, "bas_no_receive_alm_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_56_INT_MASK, "bas_no_receive_alm_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_57_INT_MASK, "bas_no_receive_alm_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_58_INT_MASK, "bas_no_receive_alm_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_59_INT_MASK, "bas_no_receive_alm_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_60_INT_MASK, "bas_no_receive_alm_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_61_INT_MASK, "bas_no_receive_alm_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_62_INT_MASK, "bas_no_receive_alm_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_63_INT_MASK, "bas_no_receive_alm_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_64_INT, "bas_no_receive_alm_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_65_INT, "bas_no_receive_alm_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_66_INT, "bas_no_receive_alm_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_67_INT, "bas_no_receive_alm_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_68_INT, "bas_no_receive_alm_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_69_INT, "bas_no_receive_alm_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_70_INT, "bas_no_receive_alm_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_71_INT, "bas_no_receive_alm_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_72_INT, "bas_no_receive_alm_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_73_INT, "bas_no_receive_alm_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_74_INT, "bas_no_receive_alm_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_75_INT, "bas_no_receive_alm_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_76_INT, "bas_no_receive_alm_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_77_INT, "bas_no_receive_alm_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_78_INT, "bas_no_receive_alm_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_79_INT, "bas_no_receive_alm_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xce, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_no_receive_alm_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_64_INT_MASK, "bas_no_receive_alm_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_65_INT_MASK, "bas_no_receive_alm_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_66_INT_MASK, "bas_no_receive_alm_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_67_INT_MASK, "bas_no_receive_alm_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_68_INT_MASK, "bas_no_receive_alm_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_69_INT_MASK, "bas_no_receive_alm_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_70_INT_MASK, "bas_no_receive_alm_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_71_INT_MASK, "bas_no_receive_alm_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_72_INT_MASK, "bas_no_receive_alm_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_73_INT_MASK, "bas_no_receive_alm_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_74_INT_MASK, "bas_no_receive_alm_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_75_INT_MASK, "bas_no_receive_alm_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_76_INT_MASK, "bas_no_receive_alm_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_77_INT_MASK, "bas_no_receive_alm_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_78_INT_MASK, "bas_no_receive_alm_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_NO_RECEIVE_ALM_79_INT_MASK, "bas_no_receive_alm_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xcf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_0_INT, "rdi_lf_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_1_INT, "rdi_lf_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_2_INT, "rdi_lf_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_3_INT, "rdi_lf_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_4_INT, "rdi_lf_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_5_INT, "rdi_lf_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_6_INT, "rdi_lf_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_7_INT, "rdi_lf_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_8_INT, "rdi_lf_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_9_INT, "rdi_lf_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_10_INT, "rdi_lf_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_11_INT, "rdi_lf_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_12_INT, "rdi_lf_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_13_INT, "rdi_lf_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_14_INT, "rdi_lf_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_15_INT, "rdi_lf_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xd0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_0_INT_MASK, "rdi_lf_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_1_INT_MASK, "rdi_lf_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_2_INT_MASK, "rdi_lf_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_3_INT_MASK, "rdi_lf_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_4_INT_MASK, "rdi_lf_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_5_INT_MASK, "rdi_lf_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_6_INT_MASK, "rdi_lf_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_7_INT_MASK, "rdi_lf_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_8_INT_MASK, "rdi_lf_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_9_INT_MASK, "rdi_lf_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_10_INT_MASK, "rdi_lf_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_11_INT_MASK, "rdi_lf_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_12_INT_MASK, "rdi_lf_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_13_INT_MASK, "rdi_lf_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_14_INT_MASK, "rdi_lf_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_15_INT_MASK, "rdi_lf_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_16_INT, "rdi_lf_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_17_INT, "rdi_lf_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_18_INT, "rdi_lf_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_19_INT, "rdi_lf_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_20_INT, "rdi_lf_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_21_INT, "rdi_lf_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_22_INT, "rdi_lf_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_23_INT, "rdi_lf_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_24_INT, "rdi_lf_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_25_INT, "rdi_lf_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_26_INT, "rdi_lf_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_27_INT, "rdi_lf_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_28_INT, "rdi_lf_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_29_INT, "rdi_lf_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_30_INT, "rdi_lf_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_31_INT, "rdi_lf_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xd2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_31_INT_MASK, "rdi_lf_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_16_INT_MASK, "rdi_lf_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_17_INT_MASK, "rdi_lf_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_18_INT_MASK, "rdi_lf_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_19_INT_MASK, "rdi_lf_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_20_INT_MASK, "rdi_lf_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_21_INT_MASK, "rdi_lf_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_22_INT_MASK, "rdi_lf_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_23_INT_MASK, "rdi_lf_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_24_INT_MASK, "rdi_lf_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_25_INT_MASK, "rdi_lf_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_26_INT_MASK, "rdi_lf_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_27_INT_MASK, "rdi_lf_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_28_INT_MASK, "rdi_lf_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_29_INT_MASK, "rdi_lf_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_30_INT_MASK, "rdi_lf_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_32_INT, "rdi_lf_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_33_INT, "rdi_lf_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_34_INT, "rdi_lf_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_35_INT, "rdi_lf_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_36_INT, "rdi_lf_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_37_INT, "rdi_lf_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_38_INT, "rdi_lf_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_39_INT, "rdi_lf_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_40_INT, "rdi_lf_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_41_INT, "rdi_lf_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_42_INT, "rdi_lf_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_43_INT, "rdi_lf_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_44_INT, "rdi_lf_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_45_INT, "rdi_lf_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_46_INT, "rdi_lf_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_47_INT, "rdi_lf_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xd4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_32_INT_MASK, "rdi_lf_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_33_INT_MASK, "rdi_lf_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_34_INT_MASK, "rdi_lf_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_35_INT_MASK, "rdi_lf_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_36_INT_MASK, "rdi_lf_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_37_INT_MASK, "rdi_lf_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_38_INT_MASK, "rdi_lf_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_39_INT_MASK, "rdi_lf_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_40_INT_MASK, "rdi_lf_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_41_INT_MASK, "rdi_lf_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_42_INT_MASK, "rdi_lf_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_43_INT_MASK, "rdi_lf_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_44_INT_MASK, "rdi_lf_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_45_INT_MASK, "rdi_lf_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_46_INT_MASK, "rdi_lf_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_47_INT_MASK, "rdi_lf_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_59_INT, "rdi_lf_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_60_INT, "rdi_lf_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_61_INT, "rdi_lf_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_62_INT, "rdi_lf_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_63_INT, "rdi_lf_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_48_INT, "rdi_lf_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_49_INT, "rdi_lf_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_50_INT, "rdi_lf_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_51_INT, "rdi_lf_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_52_INT, "rdi_lf_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_53_INT, "rdi_lf_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_54_INT, "rdi_lf_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_55_INT, "rdi_lf_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_56_INT, "rdi_lf_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_57_INT, "rdi_lf_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_58_INT, "rdi_lf_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xd6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_59_INT_MASK, "rdi_lf_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_60_INT_MASK, "rdi_lf_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_61_INT_MASK, "rdi_lf_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_62_INT_MASK, "rdi_lf_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_63_INT_MASK, "rdi_lf_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_48_INT_MASK, "rdi_lf_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_49_INT_MASK, "rdi_lf_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_50_INT_MASK, "rdi_lf_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_51_INT_MASK, "rdi_lf_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_52_INT_MASK, "rdi_lf_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_53_INT_MASK, "rdi_lf_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_54_INT_MASK, "rdi_lf_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_55_INT_MASK, "rdi_lf_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_56_INT_MASK, "rdi_lf_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_57_INT_MASK, "rdi_lf_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_58_INT_MASK, "rdi_lf_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_64_INT, "rdi_lf_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_65_INT, "rdi_lf_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_66_INT, "rdi_lf_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_67_INT, "rdi_lf_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_68_INT, "rdi_lf_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_69_INT, "rdi_lf_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_70_INT, "rdi_lf_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_71_INT, "rdi_lf_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_72_INT, "rdi_lf_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_73_INT, "rdi_lf_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_74_INT, "rdi_lf_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_75_INT, "rdi_lf_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_76_INT, "rdi_lf_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_77_INT, "rdi_lf_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_78_INT, "rdi_lf_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_79_INT, "rdi_lf_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xd8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rdi_lf_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RDI_LF_64_INT_MASK, "rdi_lf_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_65_INT_MASK, "rdi_lf_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_66_INT_MASK, "rdi_lf_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_67_INT_MASK, "rdi_lf_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_68_INT_MASK, "rdi_lf_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_69_INT_MASK, "rdi_lf_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_70_INT_MASK, "rdi_lf_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_71_INT_MASK, "rdi_lf_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_72_INT_MASK, "rdi_lf_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_73_INT_MASK, "rdi_lf_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_74_INT_MASK, "rdi_lf_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_75_INT_MASK, "rdi_lf_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_76_INT_MASK, "rdi_lf_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_77_INT_MASK, "rdi_lf_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_78_INT_MASK, "rdi_lf_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RDI_LF_79_INT_MASK, "rdi_lf_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xd9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_0_INT, "rx_sdbei_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_1_INT, "rx_sdbei_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_2_INT, "rx_sdbei_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_3_INT, "rx_sdbei_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_4_INT, "rx_sdbei_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_5_INT, "rx_sdbei_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_6_INT, "rx_sdbei_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_7_INT, "rx_sdbei_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_8_INT, "rx_sdbei_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_9_INT, "rx_sdbei_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_10_INT, "rx_sdbei_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_11_INT, "rx_sdbei_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_12_INT, "rx_sdbei_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_13_INT, "rx_sdbei_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_14_INT, "rx_sdbei_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_15_INT, "rx_sdbei_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xda, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_0_INT_MASK, "rx_sdbei_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_1_INT_MASK, "rx_sdbei_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_2_INT_MASK, "rx_sdbei_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_3_INT_MASK, "rx_sdbei_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_4_INT_MASK, "rx_sdbei_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_5_INT_MASK, "rx_sdbei_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_6_INT_MASK, "rx_sdbei_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_7_INT_MASK, "rx_sdbei_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_8_INT_MASK, "rx_sdbei_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_9_INT_MASK, "rx_sdbei_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_10_INT_MASK, "rx_sdbei_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_11_INT_MASK, "rx_sdbei_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_12_INT_MASK, "rx_sdbei_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_13_INT_MASK, "rx_sdbei_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_14_INT_MASK, "rx_sdbei_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_15_INT_MASK, "rx_sdbei_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_16_INT, "rx_sdbei_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_17_INT, "rx_sdbei_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_18_INT, "rx_sdbei_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_19_INT, "rx_sdbei_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_20_INT, "rx_sdbei_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_21_INT, "rx_sdbei_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_22_INT, "rx_sdbei_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_23_INT, "rx_sdbei_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_24_INT, "rx_sdbei_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_25_INT, "rx_sdbei_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_26_INT, "rx_sdbei_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_27_INT, "rx_sdbei_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_28_INT, "rx_sdbei_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_29_INT, "rx_sdbei_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_30_INT, "rx_sdbei_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_31_INT, "rx_sdbei_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xdc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_16_INT_MASK, "rx_sdbei_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_17_INT_MASK, "rx_sdbei_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_18_INT_MASK, "rx_sdbei_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_19_INT_MASK, "rx_sdbei_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_20_INT_MASK, "rx_sdbei_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_21_INT_MASK, "rx_sdbei_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_22_INT_MASK, "rx_sdbei_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_23_INT_MASK, "rx_sdbei_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_24_INT_MASK, "rx_sdbei_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_25_INT_MASK, "rx_sdbei_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_26_INT_MASK, "rx_sdbei_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_27_INT_MASK, "rx_sdbei_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_28_INT_MASK, "rx_sdbei_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_29_INT_MASK, "rx_sdbei_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_30_INT_MASK, "rx_sdbei_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_31_INT_MASK, "rx_sdbei_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_32_INT, "rx_sdbei_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_33_INT, "rx_sdbei_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_34_INT, "rx_sdbei_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_35_INT, "rx_sdbei_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_36_INT, "rx_sdbei_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_37_INT, "rx_sdbei_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_38_INT, "rx_sdbei_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_39_INT, "rx_sdbei_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_40_INT, "rx_sdbei_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_41_INT, "rx_sdbei_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_42_INT, "rx_sdbei_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_43_INT, "rx_sdbei_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_44_INT, "rx_sdbei_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_45_INT, "rx_sdbei_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_46_INT, "rx_sdbei_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_47_INT, "rx_sdbei_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xde, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_32_INT_MASK, "rx_sdbei_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_33_INT_MASK, "rx_sdbei_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_34_INT_MASK, "rx_sdbei_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_35_INT_MASK, "rx_sdbei_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_36_INT_MASK, "rx_sdbei_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_37_INT_MASK, "rx_sdbei_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_38_INT_MASK, "rx_sdbei_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_39_INT_MASK, "rx_sdbei_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_40_INT_MASK, "rx_sdbei_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_41_INT_MASK, "rx_sdbei_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_42_INT_MASK, "rx_sdbei_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_43_INT_MASK, "rx_sdbei_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_44_INT_MASK, "rx_sdbei_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_45_INT_MASK, "rx_sdbei_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_46_INT_MASK, "rx_sdbei_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_47_INT_MASK, "rx_sdbei_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xdf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_48_INT, "rx_sdbei_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_49_INT, "rx_sdbei_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_50_INT, "rx_sdbei_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_51_INT, "rx_sdbei_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_52_INT, "rx_sdbei_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_53_INT, "rx_sdbei_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_54_INT, "rx_sdbei_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_55_INT, "rx_sdbei_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_56_INT, "rx_sdbei_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_57_INT, "rx_sdbei_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_58_INT, "rx_sdbei_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_59_INT, "rx_sdbei_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_60_INT, "rx_sdbei_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_61_INT, "rx_sdbei_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_62_INT, "rx_sdbei_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_63_INT, "rx_sdbei_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xe0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_48_INT_MASK, "rx_sdbei_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_49_INT_MASK, "rx_sdbei_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_50_INT_MASK, "rx_sdbei_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_51_INT_MASK, "rx_sdbei_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_52_INT_MASK, "rx_sdbei_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_53_INT_MASK, "rx_sdbei_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_54_INT_MASK, "rx_sdbei_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_55_INT_MASK, "rx_sdbei_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_56_INT_MASK, "rx_sdbei_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_57_INT_MASK, "rx_sdbei_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_58_INT_MASK, "rx_sdbei_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_59_INT_MASK, "rx_sdbei_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_60_INT_MASK, "rx_sdbei_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_61_INT_MASK, "rx_sdbei_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_62_INT_MASK, "rx_sdbei_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_63_INT_MASK, "rx_sdbei_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_64_INT, "rx_sdbei_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_65_INT, "rx_sdbei_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_66_INT, "rx_sdbei_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_67_INT, "rx_sdbei_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_68_INT, "rx_sdbei_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_69_INT, "rx_sdbei_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_70_INT, "rx_sdbei_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_71_INT, "rx_sdbei_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_72_INT, "rx_sdbei_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_73_INT, "rx_sdbei_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_74_INT, "rx_sdbei_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_75_INT, "rx_sdbei_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_76_INT, "rx_sdbei_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_77_INT, "rx_sdbei_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_78_INT, "rx_sdbei_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_79_INT, "rx_sdbei_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xe2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_sdbei_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_SDBEI_79_INT_MASK, "rx_sdbei_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_64_INT_MASK, "rx_sdbei_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_65_INT_MASK, "rx_sdbei_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_66_INT_MASK, "rx_sdbei_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_67_INT_MASK, "rx_sdbei_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_68_INT_MASK, "rx_sdbei_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_69_INT_MASK, "rx_sdbei_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_70_INT_MASK, "rx_sdbei_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_71_INT_MASK, "rx_sdbei_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_72_INT_MASK, "rx_sdbei_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_73_INT_MASK, "rx_sdbei_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_74_INT_MASK, "rx_sdbei_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_75_INT_MASK, "rx_sdbei_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_76_INT_MASK, "rx_sdbei_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_77_INT_MASK, "rx_sdbei_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_SDBEI_78_INT_MASK, "rx_sdbei_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_0_INT, "rf_alm_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_1_INT, "rf_alm_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_2_INT, "rf_alm_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_3_INT, "rf_alm_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_4_INT, "rf_alm_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_5_INT, "rf_alm_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_6_INT, "rf_alm_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_7_INT, "rf_alm_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_8_INT, "rf_alm_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_9_INT, "rf_alm_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_10_INT, "rf_alm_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_11_INT, "rf_alm_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_12_INT, "rf_alm_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_13_INT, "rf_alm_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_14_INT, "rf_alm_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_15_INT, "rf_alm_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xe4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_0_INT_MASK, "rf_alm_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_1_INT_MASK, "rf_alm_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_2_INT_MASK, "rf_alm_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_3_INT_MASK, "rf_alm_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_4_INT_MASK, "rf_alm_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_5_INT_MASK, "rf_alm_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_6_INT_MASK, "rf_alm_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_7_INT_MASK, "rf_alm_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_8_INT_MASK, "rf_alm_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_9_INT_MASK, "rf_alm_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_10_INT_MASK, "rf_alm_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_11_INT_MASK, "rf_alm_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_12_INT_MASK, "rf_alm_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_13_INT_MASK, "rf_alm_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_14_INT_MASK, "rf_alm_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_15_INT_MASK, "rf_alm_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_27_INT, "rf_alm_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_28_INT, "rf_alm_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_29_INT, "rf_alm_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_30_INT, "rf_alm_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_31_INT, "rf_alm_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_16_INT, "rf_alm_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_17_INT, "rf_alm_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_18_INT, "rf_alm_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_19_INT, "rf_alm_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_20_INT, "rf_alm_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_21_INT, "rf_alm_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_22_INT, "rf_alm_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_23_INT, "rf_alm_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_24_INT, "rf_alm_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_25_INT, "rf_alm_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_26_INT, "rf_alm_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xe6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_27_INT_MASK, "rf_alm_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_28_INT_MASK, "rf_alm_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_29_INT_MASK, "rf_alm_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_30_INT_MASK, "rf_alm_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_31_INT_MASK, "rf_alm_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_16_INT_MASK, "rf_alm_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_17_INT_MASK, "rf_alm_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_18_INT_MASK, "rf_alm_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_19_INT_MASK, "rf_alm_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_20_INT_MASK, "rf_alm_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_21_INT_MASK, "rf_alm_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_22_INT_MASK, "rf_alm_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_23_INT_MASK, "rf_alm_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_24_INT_MASK, "rf_alm_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_25_INT_MASK, "rf_alm_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_26_INT_MASK, "rf_alm_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_32_INT, "rf_alm_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_33_INT, "rf_alm_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_34_INT, "rf_alm_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_35_INT, "rf_alm_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_36_INT, "rf_alm_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_37_INT, "rf_alm_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_38_INT, "rf_alm_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_39_INT, "rf_alm_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_40_INT, "rf_alm_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_41_INT, "rf_alm_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_42_INT, "rf_alm_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_43_INT, "rf_alm_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_44_INT, "rf_alm_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_45_INT, "rf_alm_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_46_INT, "rf_alm_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_47_INT, "rf_alm_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xe8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_32_INT_MASK, "rf_alm_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_33_INT_MASK, "rf_alm_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_34_INT_MASK, "rf_alm_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_35_INT_MASK, "rf_alm_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_36_INT_MASK, "rf_alm_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_37_INT_MASK, "rf_alm_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_38_INT_MASK, "rf_alm_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_39_INT_MASK, "rf_alm_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_40_INT_MASK, "rf_alm_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_41_INT_MASK, "rf_alm_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_42_INT_MASK, "rf_alm_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_43_INT_MASK, "rf_alm_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_44_INT_MASK, "rf_alm_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_45_INT_MASK, "rf_alm_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_46_INT_MASK, "rf_alm_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_47_INT_MASK, "rf_alm_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xe9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_48_INT, "rf_alm_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_49_INT, "rf_alm_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_50_INT, "rf_alm_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_51_INT, "rf_alm_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_52_INT, "rf_alm_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_53_INT, "rf_alm_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_54_INT, "rf_alm_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_55_INT, "rf_alm_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_56_INT, "rf_alm_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_57_INT, "rf_alm_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_58_INT, "rf_alm_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_59_INT, "rf_alm_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_60_INT, "rf_alm_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_61_INT, "rf_alm_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_62_INT, "rf_alm_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_63_INT, "rf_alm_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xea, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_48_INT_MASK, "rf_alm_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_49_INT_MASK, "rf_alm_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_50_INT_MASK, "rf_alm_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_51_INT_MASK, "rf_alm_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_52_INT_MASK, "rf_alm_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_53_INT_MASK, "rf_alm_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_54_INT_MASK, "rf_alm_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_55_INT_MASK, "rf_alm_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_56_INT_MASK, "rf_alm_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_57_INT_MASK, "rf_alm_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_58_INT_MASK, "rf_alm_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_59_INT_MASK, "rf_alm_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_60_INT_MASK, "rf_alm_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_61_INT_MASK, "rf_alm_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_62_INT_MASK, "rf_alm_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_63_INT_MASK, "rf_alm_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xeb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_64_INT, "rf_alm_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_65_INT, "rf_alm_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_66_INT, "rf_alm_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_67_INT, "rf_alm_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_68_INT, "rf_alm_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_69_INT, "rf_alm_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_70_INT, "rf_alm_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_71_INT, "rf_alm_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_72_INT, "rf_alm_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_73_INT, "rf_alm_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_74_INT, "rf_alm_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_75_INT, "rf_alm_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_76_INT, "rf_alm_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_77_INT, "rf_alm_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_78_INT, "rf_alm_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_79_INT, "rf_alm_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xec, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_rf_alm_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_RF_ALM_64_INT_MASK, "rf_alm_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_65_INT_MASK, "rf_alm_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_66_INT_MASK, "rf_alm_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_67_INT_MASK, "rf_alm_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_68_INT_MASK, "rf_alm_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_69_INT_MASK, "rf_alm_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_70_INT_MASK, "rf_alm_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_71_INT_MASK, "rf_alm_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_72_INT_MASK, "rf_alm_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_73_INT_MASK, "rf_alm_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_74_INT_MASK, "rf_alm_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_75_INT_MASK, "rf_alm_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_76_INT_MASK, "rf_alm_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_77_INT_MASK, "rf_alm_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_78_INT_MASK, "rf_alm_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_RF_ALM_79_INT_MASK, "rf_alm_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xed, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_0_INT, "lpi_alm_0_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_1_INT, "lpi_alm_1_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_2_INT, "lpi_alm_2_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_3_INT, "lpi_alm_3_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_4_INT, "lpi_alm_4_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_5_INT, "lpi_alm_5_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_6_INT, "lpi_alm_6_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_7_INT, "lpi_alm_7_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_8_INT, "lpi_alm_8_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_9_INT, "lpi_alm_9_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_10_INT, "lpi_alm_10_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_11_INT, "lpi_alm_11_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_12_INT, "lpi_alm_12_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_13_INT, "lpi_alm_13_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_14_INT, "lpi_alm_14_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_15_INT, "lpi_alm_15_int", FLEXE_OAM_RX_BASE_ADDR, 0xee, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_0_INT_MASK, "lpi_alm_0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_1_INT_MASK, "lpi_alm_1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_2_INT_MASK, "lpi_alm_2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_3_INT_MASK, "lpi_alm_3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_4_INT_MASK, "lpi_alm_4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_5_INT_MASK, "lpi_alm_5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_6_INT_MASK, "lpi_alm_6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_7_INT_MASK, "lpi_alm_7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_8_INT_MASK, "lpi_alm_8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_9_INT_MASK, "lpi_alm_9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_10_INT_MASK, "lpi_alm_10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_11_INT_MASK, "lpi_alm_11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_12_INT_MASK, "lpi_alm_12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_13_INT_MASK, "lpi_alm_13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_14_INT_MASK, "lpi_alm_14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_15_INT_MASK, "lpi_alm_15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xef, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_16_INT, "lpi_alm_16_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_17_INT, "lpi_alm_17_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_18_INT, "lpi_alm_18_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_19_INT, "lpi_alm_19_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_20_INT, "lpi_alm_20_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_21_INT, "lpi_alm_21_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_22_INT, "lpi_alm_22_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_23_INT, "lpi_alm_23_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_24_INT, "lpi_alm_24_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_25_INT, "lpi_alm_25_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_26_INT, "lpi_alm_26_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_27_INT, "lpi_alm_27_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_28_INT, "lpi_alm_28_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_29_INT, "lpi_alm_29_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_30_INT, "lpi_alm_30_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_31_INT, "lpi_alm_31_int", FLEXE_OAM_RX_BASE_ADDR, 0xf0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_16_INT_MASK, "lpi_alm_16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_17_INT_MASK, "lpi_alm_17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_18_INT_MASK, "lpi_alm_18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_19_INT_MASK, "lpi_alm_19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_20_INT_MASK, "lpi_alm_20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_21_INT_MASK, "lpi_alm_21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_22_INT_MASK, "lpi_alm_22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_23_INT_MASK, "lpi_alm_23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_24_INT_MASK, "lpi_alm_24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_25_INT_MASK, "lpi_alm_25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_26_INT_MASK, "lpi_alm_26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_27_INT_MASK, "lpi_alm_27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_28_INT_MASK, "lpi_alm_28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_29_INT_MASK, "lpi_alm_29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_30_INT_MASK, "lpi_alm_30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_31_INT_MASK, "lpi_alm_31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_32_INT, "lpi_alm_32_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_33_INT, "lpi_alm_33_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_34_INT, "lpi_alm_34_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_35_INT, "lpi_alm_35_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_36_INT, "lpi_alm_36_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_37_INT, "lpi_alm_37_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_38_INT, "lpi_alm_38_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_39_INT, "lpi_alm_39_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_40_INT, "lpi_alm_40_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_41_INT, "lpi_alm_41_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_42_INT, "lpi_alm_42_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_43_INT, "lpi_alm_43_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_44_INT, "lpi_alm_44_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_45_INT, "lpi_alm_45_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_46_INT, "lpi_alm_46_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_47_INT, "lpi_alm_47_int", FLEXE_OAM_RX_BASE_ADDR, 0xf2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_47_INT_MASK, "lpi_alm_47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_32_INT_MASK, "lpi_alm_32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_33_INT_MASK, "lpi_alm_33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_34_INT_MASK, "lpi_alm_34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_35_INT_MASK, "lpi_alm_35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_36_INT_MASK, "lpi_alm_36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_37_INT_MASK, "lpi_alm_37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_38_INT_MASK, "lpi_alm_38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_39_INT_MASK, "lpi_alm_39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_40_INT_MASK, "lpi_alm_40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_41_INT_MASK, "lpi_alm_41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_42_INT_MASK, "lpi_alm_42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_43_INT_MASK, "lpi_alm_43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_44_INT_MASK, "lpi_alm_44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_45_INT_MASK, "lpi_alm_45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_46_INT_MASK, "lpi_alm_46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf3, 29, 28, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_48_INT, "lpi_alm_48_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_49_INT, "lpi_alm_49_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_50_INT, "lpi_alm_50_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_51_INT, "lpi_alm_51_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_52_INT, "lpi_alm_52_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_53_INT, "lpi_alm_53_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_54_INT, "lpi_alm_54_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_55_INT, "lpi_alm_55_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_56_INT, "lpi_alm_56_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_57_INT, "lpi_alm_57_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_58_INT, "lpi_alm_58_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_59_INT, "lpi_alm_59_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_60_INT, "lpi_alm_60_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_61_INT, "lpi_alm_61_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_62_INT, "lpi_alm_62_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_63_INT, "lpi_alm_63_int", FLEXE_OAM_RX_BASE_ADDR, 0xf4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_48_INT_MASK, "lpi_alm_48_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_49_INT_MASK, "lpi_alm_49_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_50_INT_MASK, "lpi_alm_50_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_51_INT_MASK, "lpi_alm_51_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_52_INT_MASK, "lpi_alm_52_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_53_INT_MASK, "lpi_alm_53_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_54_INT_MASK, "lpi_alm_54_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_55_INT_MASK, "lpi_alm_55_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_56_INT_MASK, "lpi_alm_56_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_57_INT_MASK, "lpi_alm_57_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_58_INT_MASK, "lpi_alm_58_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_59_INT_MASK, "lpi_alm_59_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_60_INT_MASK, "lpi_alm_60_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_61_INT_MASK, "lpi_alm_61_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_62_INT_MASK, "lpi_alm_62_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_63_INT_MASK, "lpi_alm_63_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_75_INT, "lpi_alm_75_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_76_INT, "lpi_alm_76_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_77_INT, "lpi_alm_77_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_78_INT, "lpi_alm_78_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_79_INT, "lpi_alm_79_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_64_INT, "lpi_alm_64_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_65_INT, "lpi_alm_65_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_66_INT, "lpi_alm_66_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_67_INT, "lpi_alm_67_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_68_INT, "lpi_alm_68_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_69_INT, "lpi_alm_69_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_70_INT, "lpi_alm_70_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_71_INT, "lpi_alm_71_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_72_INT, "lpi_alm_72_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_73_INT, "lpi_alm_73_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_74_INT, "lpi_alm_74_int", FLEXE_OAM_RX_BASE_ADDR, 0xf6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_lpi_alm_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_LPI_ALM_75_INT_MASK, "lpi_alm_75_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_76_INT_MASK, "lpi_alm_76_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_77_INT_MASK, "lpi_alm_77_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_78_INT_MASK, "lpi_alm_78_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_79_INT_MASK, "lpi_alm_79_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 31, 30, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_64_INT_MASK, "lpi_alm_64_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_65_INT_MASK, "lpi_alm_65_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_66_INT_MASK, "lpi_alm_66_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_67_INT_MASK, "lpi_alm_67_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_68_INT_MASK, "lpi_alm_68_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_69_INT_MASK, "lpi_alm_69_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_70_INT_MASK, "lpi_alm_70_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_71_INT_MASK, "lpi_alm_71_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_72_INT_MASK, "lpi_alm_72_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_73_INT_MASK, "lpi_alm_73_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_LPI_ALM_74_INT_MASK, "lpi_alm_74_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xf7, 21, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM0_INT, "bas_period_alm0_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM1_INT, "bas_period_alm1_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM2_INT, "bas_period_alm2_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM3_INT, "bas_period_alm3_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM4_INT, "bas_period_alm4_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM5_INT, "bas_period_alm5_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM6_INT, "bas_period_alm6_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM7_INT, "bas_period_alm7_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM8_INT, "bas_period_alm8_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM9_INT, "bas_period_alm9_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM10_INT, "bas_period_alm10_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM11_INT, "bas_period_alm11_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM12_INT, "bas_period_alm12_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM13_INT, "bas_period_alm13_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM14_INT, "bas_period_alm14_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM15_INT, "bas_period_alm15_int", FLEXE_OAM_RX_BASE_ADDR, 0xfa, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM0_INT_MASK, "bas_period_alm0_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM1_INT_MASK, "bas_period_alm1_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM2_INT_MASK, "bas_period_alm2_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM3_INT_MASK, "bas_period_alm3_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM4_INT_MASK, "bas_period_alm4_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM5_INT_MASK, "bas_period_alm5_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM6_INT_MASK, "bas_period_alm6_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM7_INT_MASK, "bas_period_alm7_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM8_INT_MASK, "bas_period_alm8_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM9_INT_MASK, "bas_period_alm9_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM10_INT_MASK, "bas_period_alm10_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM11_INT_MASK, "bas_period_alm11_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM12_INT_MASK, "bas_period_alm12_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM13_INT_MASK, "bas_period_alm13_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM14_INT_MASK, "bas_period_alm14_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM15_INT_MASK, "bas_period_alm15_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM16_INT, "bas_period_alm16_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM17_INT, "bas_period_alm17_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM18_INT, "bas_period_alm18_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM19_INT, "bas_period_alm19_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM20_INT, "bas_period_alm20_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM21_INT, "bas_period_alm21_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM22_INT, "bas_period_alm22_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM23_INT, "bas_period_alm23_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM24_INT, "bas_period_alm24_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM25_INT, "bas_period_alm25_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM26_INT, "bas_period_alm26_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM27_INT, "bas_period_alm27_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM28_INT, "bas_period_alm28_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM29_INT, "bas_period_alm29_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM30_INT, "bas_period_alm30_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM31_INT, "bas_period_alm31_int", FLEXE_OAM_RX_BASE_ADDR, 0xfc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM16_INT_MASK, "bas_period_alm16_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM17_INT_MASK, "bas_period_alm17_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM18_INT_MASK, "bas_period_alm18_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM19_INT_MASK, "bas_period_alm19_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM20_INT_MASK, "bas_period_alm20_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM21_INT_MASK, "bas_period_alm21_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM22_INT_MASK, "bas_period_alm22_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM23_INT_MASK, "bas_period_alm23_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM24_INT_MASK, "bas_period_alm24_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM25_INT_MASK, "bas_period_alm25_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM26_INT_MASK, "bas_period_alm26_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM27_INT_MASK, "bas_period_alm27_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM28_INT_MASK, "bas_period_alm28_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM29_INT_MASK, "bas_period_alm29_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM30_INT_MASK, "bas_period_alm30_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM31_INT_MASK, "bas_period_alm31_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xfd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM32_INT, "bas_period_alm32_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM33_INT, "bas_period_alm33_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM34_INT, "bas_period_alm34_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM35_INT, "bas_period_alm35_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM36_INT, "bas_period_alm36_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM37_INT, "bas_period_alm37_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM38_INT, "bas_period_alm38_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM39_INT, "bas_period_alm39_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM40_INT, "bas_period_alm40_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM41_INT, "bas_period_alm41_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM42_INT, "bas_period_alm42_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM43_INT, "bas_period_alm43_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM44_INT, "bas_period_alm44_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM45_INT, "bas_period_alm45_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM46_INT, "bas_period_alm46_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM47_INT, "bas_period_alm47_int", FLEXE_OAM_RX_BASE_ADDR, 0xfe, 31, 30, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_alm_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM32_INT_MASK, "bas_period_alm32_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM33_INT_MASK, "bas_period_alm33_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM34_INT_MASK, "bas_period_alm34_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM35_INT_MASK, "bas_period_alm35_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM36_INT_MASK, "bas_period_alm36_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM37_INT_MASK, "bas_period_alm37_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM38_INT_MASK, "bas_period_alm38_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM39_INT_MASK, "bas_period_alm39_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM40_INT_MASK, "bas_period_alm40_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM41_INT_MASK, "bas_period_alm41_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM42_INT_MASK, "bas_period_alm42_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 21, 20, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM43_INT_MASK, "bas_period_alm43_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 23, 22, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM44_INT_MASK, "bas_period_alm44_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 25, 24, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM45_INT_MASK, "bas_period_alm45_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 27, 26, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM46_INT_MASK, "bas_period_alm46_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 29, 28, 0x0 },
	{ TEST_FLEXE_OAM_RX_BAS_PERIOD_ALM47_INT_MASK, "bas_period_alm47_int_mask", FLEXE_OAM_RX_BASE_ADDR, 0xff, 31, 30, 0x0 },
};


/*FLEXE_ENV*/
NEW_CHIP_REG test_flexe_env_cfg1_reg[] =
{
	{ TEST_FLEXE_ENV_CFG_PERIOD, "cfg_period", FLEXE_ENV_BASE_ADDR, 0x0, 14, 0, 0x2a0f },
	{ TEST_FLEXE_ENV_MULTIPLIER, "multiplier", FLEXE_ENV_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_FLEXE_ENV_NOM_CNT, "nom_cnt", FLEXE_ENV_BASE_ADDR, 0x0, 30, 16, 0x7ec },
};
NEW_CHIP_REG test_flexe_env_cfg2_reg[] =
{
	{ TEST_FLEXE_ENV_Q, "flexe_env_q", FLEXE_ENV_BASE_ADDR, 0x8, 14, 0, 0x20 },
	{ TEST_FLEXE_ENV_ADJ_01EN, "adj_01en", FLEXE_ENV_BASE_ADDR, 0x8, 15, 15, 0x0 },
	{ TEST_FLEXE_ENV_FIFO_ADJ_EN, "fifo_adj_en", FLEXE_ENV_BASE_ADDR, 0x8, 16, 16, 0x1 },
	{ TEST_FLEXE_ENV_FIFO_ADJ_PERIOD, "fifo_adj_period", FLEXE_ENV_BASE_ADDR, 0x8, 24, 17, 0x0 },
	{ TEST_FLEXE_ENV_ENV_EN, "env_en", FLEXE_ENV_BASE_ADDR, 0x8, 25, 25, 0x0 },
	{ TEST_FLEXE_ENV_FIFO_ADJ_MAX_EN, "fifo_adj_max_en", FLEXE_ENV_BASE_ADDR, 0x8, 26, 26, 0x1 },
	{ TEST_FLEXE_ENV_IS_LOCAL, "is_local", FLEXE_ENV_BASE_ADDR, 0x8, 27, 27, 0x0 },
};
NEW_CHIP_REG test_flexe_env_cfg3_reg[] =
{
	{ TEST_FLEXE_ENV_ADJ_IN_CHECK_VALUE, "adj_in_check_value", FLEXE_ENV_BASE_ADDR, 0x10, 9, 0, 0x64 },
	{ TEST_FLEXE_ENV_ADJ_IN_CORRECT_EN, "adj_in_correct_en", FLEXE_ENV_BASE_ADDR, 0x10, 10, 10, 0x1 },
	{ TEST_FLEXE_ENV_LOCAL_EN, "local_en", FLEXE_ENV_BASE_ADDR, 0x10, 11, 11, 0x1 },
	{ TEST_FLEXE_ENV_LOCAL_M, "local_m", FLEXE_ENV_BASE_ADDR, 0x10, 21, 12, 0x1f3 },
};
NEW_CHIP_REG test_m_cfg_reg[] =
{
	{ TEST_FLEXE_ENV_M, "flexe_env_m", FLEXE_ENV_BASE_ADDR, 0x18, 31, 0, 0xccfd4000 },
};
NEW_CHIP_REG test_base_m_cfg_reg[] =
{
	{ TEST_FLEXE_ENV_BASE_M, "flexe_env_base_m", FLEXE_ENV_BASE_ADDR, 0x20, 31, 0, 0xccfd8b2f },
};
NEW_CHIP_REG test_adj_in_alm_reg[] =
{
	{ TEST_FLEXE_ENV_ADJ_IN_ALM, "adj_in_alm", FLEXE_ENV_BASE_ADDR, 0x28, 7, 0, 0x0 },
};
NEW_CHIP_REG test_integral_alm_reg[] =
{
	{ TEST_FLEXE_ENV_I1_OVERFLOW, "i1_overflow", FLEXE_ENV_BASE_ADDR, 0x29, 7, 0, 0x0 },
	{ TEST_FLEXE_ENV_I1_UNDERFLOW, "i1_underflow", FLEXE_ENV_BASE_ADDR, 0x29, 15, 8, 0x0 },
	{ TEST_FLEXE_ENV_I2_OVERFLOW, "i2_overflow", FLEXE_ENV_BASE_ADDR, 0x29, 23, 16, 0x0 },
	{ TEST_FLEXE_ENV_I2_UNDERFLOW, "i2_underflow", FLEXE_ENV_BASE_ADDR, 0x29, 31, 24, 0x0 },
};


/*ILKN_WRAP_TX*/
/*
NEW_CHIP_REG test_ilk_cfg_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CFG_TX_EN, "cfg_tx_en", ILKN_WRAP_TX_BASE_ADDR, 0x0, 0, 0, 0x1 },
	{ TEST_ILKN_WRAP_TX_CFG_RX_EN, "cfg_rx_en", ILKN_WRAP_TX_BASE_ADDR, 0x0, 1, 1, 0x1 },
	{ TEST_ILKN_WRAP_TX_CFG_SYS_RX_LPBK_LOCAL_EN, "cfg_sys_rx_lpbk_local_en", ILKN_WRAP_TX_BASE_ADDR, 0x0, 2, 2, 0x0 },
	{ TEST_ILKN_WRAP_TX_FRM_MAX_128BYTE, "frm_max_128byte", ILKN_WRAP_TX_BASE_ADDR, 0x0, 14, 8, 0x50 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_FC_CH_CNT_SEL, "sys_tx_fc_ch_cnt_sel", ILKN_WRAP_TX_BASE_ADDR, 0x0, 19, 16, 0xf },
	{ TEST_ILKN_WRAP_TX_CFG_SYS_TX_FIFO_PAF, "cfg_sys_tx_fifo_paf", ILKN_WRAP_TX_BASE_ADDR, 0x0, 23, 20, 0xa },
	{ TEST_ILKN_WRAP_TX_CFG_SYS_AFTER_REORDER_RX_LPBK_EN, "cfg_sys_after_reorder_rx_lpbk_en", ILKN_WRAP_TX_BASE_ADDR, 0x0, 3, 3, 0x0 },
	{ TEST_ILKN_WRAP_TX_CFG_FC_BIT_ORDER_INVERSE, "cfg_fc_bit_order_inverse", ILKN_WRAP_TX_BASE_ADDR, 0x0, 4, 4, 0x1 },
};
NEW_CHIP_REG test_burst_len_cfg_reg[] =
{
	{ TEST_ILKN_WRAP_TX_BURST_SHORT, "burst_short", ILKN_WRAP_TX_BASE_ADDR, 0x5, 9, 0, 0x40 },
	{ TEST_ILKN_WRAP_TX_BURST_MAX, "burst_max", ILKN_WRAP_TX_BASE_ADDR, 0x5, 19, 10, 0x100 },
	{ TEST_ILKN_WRAP_TX_BURST_MIN, "burst_min", ILKN_WRAP_TX_BASE_ADDR, 0x5, 29, 20, 0x80 },
};
NEW_CHIP_REG test_chan_mapping_0_3_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_0_3, "chan_mapping_0_3", ILKN_WRAP_TX_BASE_ADDR, 0x10, 31, 0, 0x3020100 },
};
NEW_CHIP_REG test_chan_mapping_4_7_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_4_7, "chan_mapping_4_7", ILKN_WRAP_TX_BASE_ADDR, 0x11, 31, 0, 0x7060504 },
};
NEW_CHIP_REG test_chan_mapping_8_11_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_8_11, "chan_mapping_8_11", ILKN_WRAP_TX_BASE_ADDR, 0x12, 31, 0, 0xb0a0908 },
};
NEW_CHIP_REG test_chan_mapping_12_15_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_12_15, "chan_mapping_12_15", ILKN_WRAP_TX_BASE_ADDR, 0x13, 31, 0, 0xf0e0d0c },
};
NEW_CHIP_REG test_chan_mapping_16_19_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_16_19, "chan_mapping_16_19", ILKN_WRAP_TX_BASE_ADDR, 0x14, 31, 0, 0x13121110 },
};
NEW_CHIP_REG test_chan_mapping_20_23_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_20_23, "chan_mapping_20_23", ILKN_WRAP_TX_BASE_ADDR, 0x15, 31, 0, 0x17161514 },
};
NEW_CHIP_REG test_chan_mapping_24_27_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_24_27, "chan_mapping_24_27", ILKN_WRAP_TX_BASE_ADDR, 0x16, 31, 0, 0x1b1a1918 },
};
NEW_CHIP_REG test_chan_mapping_28_31_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_28_31, "chan_mapping_28_31", ILKN_WRAP_TX_BASE_ADDR, 0x17, 31, 0, 0x1f1e1d1c },
};
NEW_CHIP_REG test_chan_mapping_32_35_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_32_35, "chan_mapping_32_35", ILKN_WRAP_TX_BASE_ADDR, 0x18, 31, 0, 0x23222120 },
};
NEW_CHIP_REG test_chan_mapping_36_39_reg[] =
{
	{ TEST_ILKN_WRAP_TX_CHAN_MAPPING_36_39, "chan_mapping_36_39", ILKN_WRAP_TX_BASE_ADDR, 0x19, 31, 0, 0x27262524 },
};
NEW_CHIP_REG test_chan_demapping_reg[] =
{
	{ TEST_ILKN_WRAP_TX_DEMAPPING_FIELD_0, "demapping_field_0", ILKN_WRAP_TX_BASE_ADDR, 0x20, 6, 0, 0x0 },
	{ TEST_ILKN_WRAP_TX_DEMAPPING_FIELD_1, "demapping_field_1", ILKN_WRAP_TX_BASE_ADDR, 0x20, 14, 8, 0x0 },
	{ TEST_ILKN_WRAP_TX_DEMAPPING_FIELD_2, "demapping_field_2", ILKN_WRAP_TX_BASE_ADDR, 0x20, 22, 16, 0x0 },
	{ TEST_ILKN_WRAP_TX_DEMAPPING_FIELD_3, "demapping_field_3", ILKN_WRAP_TX_BASE_ADDR, 0x20, 30, 24, 0x0 },
};
NEW_CHIP_REG test_ilk_pcs_status_reg[] =
{
	{ TEST_ILKN_WRAP_TX_PHY_RX_BLOCK_LOCK_W, "phy_rx_block_lock_w", ILKN_WRAP_TX_BASE_ADDR, 0x2, 11, 0, 0x0 },
	{ TEST_ILKN_WRAP_TX_PHY_RX_FRAME_LOCK_W, "phy_rx_frame_lock_w", ILKN_WRAP_TX_BASE_ADDR, 0x2, 23, 12, 0x0 },
	{ TEST_ILKN_WRAP_TX_PCS_TX_ERR_FATAL, "pcs_tx_err_fatal", ILKN_WRAP_TX_BASE_ADDR, 0x2, 24, 24, 0x0 },
	{ TEST_ILKN_WRAP_TX_PCS_RX_STATUS, "pcs_rx_status", ILKN_WRAP_TX_BASE_ADDR, 0x2, 25, 25, 0x0 },
	{ TEST_ILKN_WRAP_TX_PHY_PLL_LOCKED, "phy_pll_locked", ILKN_WRAP_TX_BASE_ADDR, 0x2, 26, 26, 0x0 },
};
NEW_CHIP_REG test_ilk_pcs_status_2_reg[] =
{
	{ TEST_ILKN_WRAP_TX_PHY_RX_IS_LOCKEDTOREF_W, "phy_rx_is_lockedtoref_w", ILKN_WRAP_TX_BASE_ADDR, 0x6, 11, 0, 0x0 },
	{ TEST_ILKN_WRAP_TX_PHY_RX_IS_LOCKEDTODATA_W, "phy_rx_is_lockedtodata_w", ILKN_WRAP_TX_BASE_ADDR, 0x6, 23, 12, 0x0 },
};
NEW_CHIP_REG test_ilk_sys_alm_reg[] =
{
	{ TEST_ILKN_WRAP_TX_SYS_TX_ERR_PACKET_PROTOCOL, "sys_tx_err_packet_protocol", ILKN_WRAP_TX_BASE_ADDR, 0x1, 0, 0, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_ERR_FIFO_OVERFLOW, "sys_tx_err_fifo_overflow", ILKN_WRAP_TX_BASE_ADDR, 0x1, 1, 1, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_RX_ERR_PACKET_PROTOCOL, "sys_rx_err_packet_protocol", ILKN_WRAP_TX_BASE_ADDR, 0x1, 2, 2, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_RX_ERR_FIFO_OVERFLOW, "sys_rx_err_fifo_overflow", ILKN_WRAP_TX_BASE_ADDR, 0x1, 3, 3, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_RX_ERR_BURST_CNT, "sys_rx_err_burst_cnt", ILKN_WRAP_TX_BASE_ADDR, 0x1, 4, 4, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_ERR_SEGMENT_PROTOCOL, "sys_tx_err_segment_protocol", ILKN_WRAP_TX_BASE_ADDR, 0x1, 5, 5, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_ERR_FIFO_UNDERRUN, "sys_tx_err_fifo_underrun", ILKN_WRAP_TX_BASE_ADDR, 0x1, 6, 6, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_CB_ERR_BURST, "sys_tx_cb_err_burst", ILKN_WRAP_TX_BASE_ADDR, 0x1, 7, 7, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_CB_ERR_PKT, "sys_tx_cb_err_pkt", ILKN_WRAP_TX_BASE_ADDR, 0x1, 8, 8, 0x0 },
	{ TEST_ILKN_WRAP_TX_SYS_TX_ERR_BURST_PROTOCOL, "sys_tx_err_burst_protocol", ILKN_WRAP_TX_BASE_ADDR, 0x1, 9, 9, 0x0 },
};
*/
/*OHOAM_EF*/
NEW_CHIP_REG test_ext_gbfifo_lvl_reg[] =
{
	{ TEST_EXT_GBF_BACKPRE_LVL, "ext_gbf_backpre_lvl", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 7, 0, 0xc8 },
	{ TEST_B66ENCD_EN, "b66encd_testen", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 16, 16, 0x0 },
	{ TEST_B66ENCD_BKFTEN, "b66encd_bkften", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 17, 17, 0x0 },
	{ TEST_B66ENCD_RFCFG, "b66encd_rfcfg", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 19, 18, 0x0 },
	{ TEST_B66ENCD_LFCFG, "b66encd_lfcfg", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 21, 20, 0x0 },
	{ TEST_B66ENCD_MANRF, "b66encd_manrf", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 22, 22, 0x0 },
	{ TEST_B66ENCD_MANLF, "b66encd_manlf", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 23, 23, 0x0 },
	{ TEST_B66ENCD_MANIDL, "b66encd_manidl", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 24, 24, 0x0 },
	{ TEST_B66DECODE_SEL, "b66decode_sel", OHOAM_EF_BASE_ADDR, 0x0 + OHIF_ASIC, 25, 25, 0x0 },
};
NEW_CHIP_REG test_b66_encode_decode_cnt_reg[] =
{
	{ TEST_ENCODE_ERR_CNT, "encode_err_cnt", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC, 7, 0, 0x0 },
	{ TEST_DECODE_ERR_CNT, "decode_err_cnt", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC, 15, 8, 0x0 },
	{ TEST_B66_INS_BYTES_CNT, "b66_ins_bytes_cnt", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC, 31, 16, 0x0 },
};
NEW_CHIP_REG test_pkt_cnt_reg[] =
{
	{ TEST_B66_DECODE_PKT_CNT, "b66_decode_pkt_cnt", OHOAM_EF_BASE_ADDR, 0x3 + OHIF_ASIC, 15, 0, 0x0 },
	{ TEST_EXT_REQ_PKT_CNT, "ext_req_pkt_cnt", OHOAM_EF_BASE_ADDR, 0x3 + OHIF_ASIC, 31, 16, 0x0 },
};
NEW_CHIP_REG test_ins_crc_err_cnt_reg[] =
{
	{ TEST_INS_PKT_CRC_ERR_CNT, "ins_pkt_crc_err_cnt", OHOAM_EF_BASE_ADDR, 0x6 + OHIF_ASIC, 7, 0, 0x0 },
	{ TEST_INS_SHORT_PKT_CNT, "ins_short_pkt_cnt", OHOAM_EF_BASE_ADDR, 0x6 + OHIF_ASIC, 15, 8, 0x0 },
};
NEW_CHIP_REG test_ext_pkt_cnt_reg[] =
{
	{ TEST_EXT_PKT_SOP_CNT, "ext_pkt_sop_cnt", OHOAM_EF_BASE_ADDR, 0x7 + OHIF_ASIC, 15, 0, 0x0 },
	{ TEST_EXT_OAM_REQ_CNT, "ext_oam_req_cnt", OHOAM_EF_BASE_ADDR, 0x7 + OHIF_ASIC, 31, 16, 0x0 },
};
NEW_CHIP_REG test_ohif_asic_alm_reg[] =
{
	{ TEST_EXT_GBF_FULL_ALM, "ext_gbf_full_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 0, 0, 0x0 },
	{ TEST_EXT_GBF_EMPTY_ALM, "ext_gbf_empty_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 1, 1, 0x0 },
	{ TEST_B66_ENCODE_ERR_ALM, "b66_encode_err_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 2, 2, 0x0 },
	{ TEST_INS_GBF_FULL_ALM, "ins_gbf_full_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 3, 3, 0x0 },
	{ TEST_INS_PREF_FULL_ALM, "ins_pref_full_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 4, 4, 0x0 },
	{ TEST_FLEXE_SOAM_REQF_FULL_ALM, "flexe_soam_reqf_full_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 5, 5, 0x0 },
	{ TEST_MAC_SOAM_REQF_FULL_ALM, "mac_soam_reqf_full_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 6, 6, 0x0 },
	{ TEST_B66_DECODE_ERR_ALM, "b66_decode_err_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 7, 7, 0x0 },
	{ TEST_B66_DECODE_EOP_ABNOR_ALM, "b66_decode_eop_abnor_alm", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 8, 8, 0x0 },
	{ TEST_DE2EN_RF_STATUS, "de2en_rf_status", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 9, 9, 0x0 },
	{ TEST_DE2EN_LF_STATUS, "de2en_lf_status", OHOAM_EF_BASE_ADDR, 0x1 + OHIF_ASIC, 10, 10, 0x0 },
};

/*flexe_mux*/
NEW_CHIP_REG test_flexe_mode_reg[] =
{
	{ TEST_FLEXE_MODE, "flexe_mode", FLEXE_MUX_BASE_ADDR, 0x0, 15, 0, 0x0 },
	{ TEST_FLEXE_ENV_MODE, "flexe_env_mode", FLEXE_MUX_BASE_ADDR, 0x0, 16, 16, 0x0 },
};
NEW_CHIP_REG test_flexe_group_cfg_reg[] =
{
	{ TEST_FLEXE_GROUP_CFG, "flexe_group_cfg", FLEXE_MUX_BASE_ADDR, 0x1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_sch_cfg_reg[] =
{
	{ TEST_FLEXE_SCH_CFG, "flexe_sch_cfg", FLEXE_MUX_BASE_ADDR, 0x2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_msi_cfg_reg[] =
{
	{ TEST_FLEXE_MSI_CFG_0, "flexe_msi_cfg_0", FLEXE_MUX_BASE_ADDR, 0x3, 6, 0, 0x7f },
	{ TEST_FLEXE_MSI_CFG_1, "flexe_msi_cfg_1", FLEXE_MUX_BASE_ADDR, 0x3, 14, 8, 0x7f },
	{ TEST_FLEXE_MSI_CFG_2, "flexe_msi_cfg_2", FLEXE_MUX_BASE_ADDR, 0x3, 22, 16, 0x7f },
	{ TEST_FLEXE_MSI_CFG_3, "flexe_msi_cfg_3", FLEXE_MUX_BASE_ADDR, 0x3, 30, 24, 0x7f },
};
NEW_CHIP_REG test_tsnum_cfg_reg[] =
{
	{ TEST_TSNUM_CFG_0, "tsnum_cfg_0", FLEXE_MUX_BASE_ADDR, 0x17, 6, 0, 0x0 },
	{ TEST_TSNUM_CFG_1, "tsnum_cfg_1", FLEXE_MUX_BASE_ADDR, 0x17, 14, 8, 0x0 },
	{ TEST_TSNUM_CFG_2, "tsnum_cfg_2", FLEXE_MUX_BASE_ADDR, 0x17, 22, 16, 0x0 },
	{ TEST_TSNUM_CFG_3, "tsnum_cfg_3", FLEXE_MUX_BASE_ADDR, 0x17, 30, 24, 0x0 },
};
NEW_CHIP_REG test_cycle_cfg_reg[] =
{
	{ TEST_CYCLE_CFG_0, "cycle_cfg_0", FLEXE_MUX_BASE_ADDR, 0x2b, 6, 0, 0x0 },
	{ TEST_CYCLE_CFG_1, "cycle_cfg_1", FLEXE_MUX_BASE_ADDR, 0x2b, 14, 8, 0x0 },
	{ TEST_CYCLE_CFG_2, "cycle_cfg_2", FLEXE_MUX_BASE_ADDR, 0x2b, 22, 16, 0x0 },
	{ TEST_CYCLE_CFG_3, "cycle_cfg_3", FLEXE_MUX_BASE_ADDR, 0x2b, 30, 24, 0x0 },
};
NEW_CHIP_REG test_block_cfg_reg[] =
{
	{ TEST_BLOCK_CFG_0, "block_cfg_0", FLEXE_MUX_BASE_ADDR, 0x3f, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_1, "block_cfg_1", FLEXE_MUX_BASE_ADDR, 0x40, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_2, "block_cfg_2", FLEXE_MUX_BASE_ADDR, 0x41, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_3, "block_cfg_3", FLEXE_MUX_BASE_ADDR, 0x42, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_4, "block_cfg_4", FLEXE_MUX_BASE_ADDR, 0x43, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_5, "block_cfg_5", FLEXE_MUX_BASE_ADDR, 0x44, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_6, "block_cfg_6", FLEXE_MUX_BASE_ADDR, 0x45, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_7, "block_cfg_7", FLEXE_MUX_BASE_ADDR, 0x46, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_8, "block_cfg_8", FLEXE_MUX_BASE_ADDR, 0x47, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_9, "block_cfg_9", FLEXE_MUX_BASE_ADDR, 0x48, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ch_belong_flexe_reg[] =
{
	{ TEST_CH_BELONG_FLEXE_0, "ch_belong_flexe_0", FLEXE_MUX_BASE_ADDR, 0x49, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_1, "ch_belong_flexe_1", FLEXE_MUX_BASE_ADDR, 0x4a, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_2, "ch_belong_flexe_2", FLEXE_MUX_BASE_ADDR, 0x4b, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_3, "ch_belong_flexe_3", FLEXE_MUX_BASE_ADDR, 0x4c, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_4, "ch_belong_flexe_4", FLEXE_MUX_BASE_ADDR, 0x4d, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_5, "ch_belong_flexe_5", FLEXE_MUX_BASE_ADDR, 0x4e, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_6, "ch_belong_flexe_6", FLEXE_MUX_BASE_ADDR, 0x4f, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_7, "ch_belong_flexe_7", FLEXE_MUX_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_8, "ch_belong_flexe_8", FLEXE_MUX_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_CH_BELONG_FLEXE_9, "ch_belong_flexe_9", FLEXE_MUX_BASE_ADDR, 0x52, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_pcs_enable_reg[] =
{
	{ TEST_FLEXE_ENABLE, "flexe_enable", FLEXE_MUX_BASE_ADDR, 0x53, 7, 0, 0x0 },
	{ TEST_PCS_ENABLE, "pcs_enable", FLEXE_MUX_BASE_ADDR, 0x53, 15, 8, 0x0 },
	{ TEST_PCS_NUM, "pcs_num", FLEXE_MUX_BASE_ADDR, 0x53, 18, 16, 0x0 },
};
NEW_CHIP_REG test_ts_enable_reg[] =
{
	{ TEST_TS_ENABLE_0, "ts_enable_0", FLEXE_MUX_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_TS_ENABLE_1, "ts_enable_1", FLEXE_MUX_BASE_ADDR, 0x55, 31, 0, 0x0 },
	{ TEST_TS_ENABLE_2, "ts_enable_2", FLEXE_MUX_BASE_ADDR, 0x56, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_sch_cfg_reg[] =
{
	{ TEST_PCS_SCH_CFG, "pcs_sch_cfg", FLEXE_MUX_BASE_ADDR, 0x57, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_chid_cfg_reg[] =
{
	{ TEST_PCS_CHID_CFG_0, "pcs_chid_cfg_0", FLEXE_MUX_BASE_ADDR, 0x58, 6, 0, 0x0 },
	{ TEST_PCS_CHID_CFG_1, "pcs_chid_cfg_1", FLEXE_MUX_BASE_ADDR, 0x58, 14, 8, 0x0 },
	{ TEST_PCS_CHID_CFG_2, "pcs_chid_cfg_2", FLEXE_MUX_BASE_ADDR, 0x58, 22, 16, 0x0 },
	{ TEST_PCS_CHID_CFG_3, "pcs_chid_cfg_3", FLEXE_MUX_BASE_ADDR, 0x58, 30, 24, 0x0 },
};
NEW_CHIP_REG test_reqcnt_slvl_cfg_reg[] =
{
	{ TEST_REQCNT_SLVL_CFG, "reqcnt_slvl_cfg", FLEXE_MUX_BASE_ADDR, 0x6b, 10, 0, 0x258 },
	{ TEST_PCSREQCNT_SLVL_CFG, "pcsreqcnt_slvl_cfg", FLEXE_MUX_BASE_ADDR, 0x6b, 23, 16, 0x64 },
};
NEW_CHIP_REG test_c_cfg_reg[] =
{
	{ TEST_C_CFG, "c_cfg", FLEXE_MUX_BASE_ADDR, 0x6c, 7, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_msi_cfg_b_reg[] =
{
	{ TEST_FLEXE_MSI_CFG_B0, "flexe_msi_cfg_b0", FLEXE_MUX_BASE_ADDR, 0x6d, 6, 0, 0x7f },
	{ TEST_FLEXE_MSI_CFG_B1, "flexe_msi_cfg_b1", FLEXE_MUX_BASE_ADDR, 0x6d, 14, 8, 0x7f },
	{ TEST_FLEXE_MSI_CFG_B2, "flexe_msi_cfg_b2", FLEXE_MUX_BASE_ADDR, 0x6d, 22, 16, 0x7f },
	{ TEST_FLEXE_MSI_CFG_B3, "flexe_msi_cfg_b3", FLEXE_MUX_BASE_ADDR, 0x6d, 30, 24, 0x7f },
};
NEW_CHIP_REG test_tsnum_cfg_b_reg[] =
{
	{ TEST_TSNUM_CFG_B0, "tsnum_cfg_b0", FLEXE_MUX_BASE_ADDR, 0x81, 6, 0, 0x0 },
	{ TEST_TSNUM_CFG_B1, "tsnum_cfg_b1", FLEXE_MUX_BASE_ADDR, 0x81, 14, 8, 0x0 },
	{ TEST_TSNUM_CFG_B2, "tsnum_cfg_b2", FLEXE_MUX_BASE_ADDR, 0x81, 22, 16, 0x0 },
	{ TEST_TSNUM_CFG_B3, "tsnum_cfg_b3", FLEXE_MUX_BASE_ADDR, 0x81, 30, 24, 0x0 },
};
NEW_CHIP_REG test_cycle_cfg_b_reg[] =
{
	{ TEST_CYCLE_CFG_B0, "cycle_cfg_b0", FLEXE_MUX_BASE_ADDR, 0x95, 6, 0, 0x0 },
	{ TEST_CYCLE_CFG_B1, "cycle_cfg_b1", FLEXE_MUX_BASE_ADDR, 0x95, 14, 8, 0x0 },
	{ TEST_CYCLE_CFG_B2, "cycle_cfg_b2", FLEXE_MUX_BASE_ADDR, 0x95, 22, 16, 0x0 },
	{ TEST_CYCLE_CFG_B3, "cycle_cfg_b3", FLEXE_MUX_BASE_ADDR, 0x95, 30, 24, 0x0 },
};
NEW_CHIP_REG test_block_cfg_b_reg[] =
{
	{ TEST_BLOCK_CFG_B_0, "block_cfg_b_0", FLEXE_MUX_BASE_ADDR, 0xa9, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_1, "block_cfg_b_1", FLEXE_MUX_BASE_ADDR, 0xaa, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_2, "block_cfg_b_2", FLEXE_MUX_BASE_ADDR, 0xab, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_3, "block_cfg_b_3", FLEXE_MUX_BASE_ADDR, 0xac, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_4, "block_cfg_b_4", FLEXE_MUX_BASE_ADDR, 0xad, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_5, "block_cfg_b_5", FLEXE_MUX_BASE_ADDR, 0xae, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_6, "block_cfg_b_6", FLEXE_MUX_BASE_ADDR, 0xaf, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_7, "block_cfg_b_7", FLEXE_MUX_BASE_ADDR, 0xb0, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_8, "block_cfg_b_8", FLEXE_MUX_BASE_ADDR, 0xb1, 31, 0, 0x0 },
	{ TEST_BLOCK_CFG_B_9, "block_cfg_b_9", FLEXE_MUX_BASE_ADDR, 0xb2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ts_enable_b_reg[] =
{
	{ TEST_TS_ENABLE_B_0, "ts_enable_b_0", FLEXE_MUX_BASE_ADDR, 0xb3, 31, 0, 0x0 },
	{ TEST_TS_ENABLE_B_1, "ts_enable_b_1", FLEXE_MUX_BASE_ADDR, 0xb4, 31, 0, 0x0 },
	{ TEST_TS_ENABLE_B_2, "ts_enable_b_2", FLEXE_MUX_BASE_ADDR, 0xb5, 15, 0, 0x0 },
};
NEW_CHIP_REG test_cphy2_cfg_reg[] =
{
	{ TEST_CPHY2_CFG_0, "cphy2_cfg_0", FLEXE_MUX_BASE_ADDR, 0xc1, 2, 0, 0x0 },
	{ TEST_CPHY2_CFG_1, "cphy2_cfg_1", FLEXE_MUX_BASE_ADDR, 0xc1, 6, 4, 0x1 },
	{ TEST_CPHY2_CFG_2, "cphy2_cfg_2", FLEXE_MUX_BASE_ADDR, 0xc1, 10, 8, 0x2 },
	{ TEST_CPHY2_CFG_3, "cphy2_cfg_3", FLEXE_MUX_BASE_ADDR, 0xc1, 14, 12, 0x3 },
	{ TEST_CPHY2_CFG_4, "cphy2_cfg_4", FLEXE_MUX_BASE_ADDR, 0xc1, 18, 16, 0x4 },
	{ TEST_CPHY2_CFG_5, "cphy2_cfg_5", FLEXE_MUX_BASE_ADDR, 0xc1, 22, 20, 0x5 },
	{ TEST_CPHY2_CFG_6, "cphy2_cfg_6", FLEXE_MUX_BASE_ADDR, 0xc1, 26, 24, 0x6 },
	{ TEST_CPHY2_CFG_7, "cphy2_cfg_7", FLEXE_MUX_BASE_ADDR, 0xc1, 30, 28, 0x7 },
};
NEW_CHIP_REG test_cnt8_sch_cfg_reg[] =
{
	{ TEST_CNT8_SCH_CFG_0, "cnt8_sch_cfg_0", FLEXE_MUX_BASE_ADDR, 0xc2, 2, 0, 0x0 },
	{ TEST_CNT8_SCH_CFG_1, "cnt8_sch_cfg_1", FLEXE_MUX_BASE_ADDR, 0xc2, 6, 4, 0x1 },
	{ TEST_CNT8_SCH_CFG_2, "cnt8_sch_cfg_2", FLEXE_MUX_BASE_ADDR, 0xc2, 10, 8, 0x2 },
	{ TEST_CNT8_SCH_CFG_3, "cnt8_sch_cfg_3", FLEXE_MUX_BASE_ADDR, 0xc2, 14, 12, 0x3 },
	{ TEST_CNT8_SCH_CFG_4, "cnt8_sch_cfg_4", FLEXE_MUX_BASE_ADDR, 0xc2, 18, 16, 0x4 },
	{ TEST_CNT8_SCH_CFG_5, "cnt8_sch_cfg_5", FLEXE_MUX_BASE_ADDR, 0xc2, 22, 20, 0x5 },
	{ TEST_CNT8_SCH_CFG_6, "cnt8_sch_cfg_6", FLEXE_MUX_BASE_ADDR, 0xc2, 26, 24, 0x6 },
	{ TEST_CNT8_SCH_CFG_7, "cnt8_sch_cfg_7", FLEXE_MUX_BASE_ADDR, 0xc2, 30, 28, 0x7 },
};
NEW_CHIP_REG test_m_cfg_mux_reg[] =
{
	{ TEST_M_CFG_MUX, "m_cfg_mux", FLEXE_MUX_BASE_ADDR, 0xc3, 31, 0, 0x303a3f14 },
};
NEW_CHIP_REG test_base_m_cfg_mux_reg[] =
{
	{ TEST_BASE_M_CFG_MUX, "base_m_cfg_mux", FLEXE_MUX_BASE_ADDR, 0xc4, 31, 0, 0x303da985 },
};
NEW_CHIP_REG test_en_sel_cfg_reg[] =
{
	{ TEST_EN_SEL_CFG_0, "en_sel_cfg_0", FLEXE_MUX_BASE_ADDR, 0xc5, 2, 0, 0x0 },
	{ TEST_EN_SEL_CFG_1, "en_sel_cfg_1", FLEXE_MUX_BASE_ADDR, 0xc5, 6, 4, 0x1 },
	{ TEST_EN_SEL_CFG_2, "en_sel_cfg_2", FLEXE_MUX_BASE_ADDR, 0xc5, 10, 8, 0x2 },
	{ TEST_EN_SEL_CFG_3, "en_sel_cfg_3", FLEXE_MUX_BASE_ADDR, 0xc5, 14, 12, 0x3 },
	{ TEST_EN_SEL_CFG_4, "en_sel_cfg_4", FLEXE_MUX_BASE_ADDR, 0xc5, 18, 16, 0x4 },
	{ TEST_EN_SEL_CFG_5, "en_sel_cfg_5", FLEXE_MUX_BASE_ADDR, 0xc5, 22, 20, 0x5 },
	{ TEST_EN_SEL_CFG_6, "en_sel_cfg_6", FLEXE_MUX_BASE_ADDR, 0xc5, 26, 24, 0x6 },
	{ TEST_EN_SEL_CFG_7, "en_sel_cfg_7", FLEXE_MUX_BASE_ADDR, 0xc5, 30, 28, 0x7 },
};
NEW_CHIP_REG test_inst_sel_cfg_reg[] =
{
	{ TEST_INST_SEL_CFG_0, "inst_sel_cfg_0", FLEXE_MUX_BASE_ADDR, 0xc6, 2, 0, 0x0 },
	{ TEST_INST_SEL_CFG_1, "inst_sel_cfg_1", FLEXE_MUX_BASE_ADDR, 0xc6, 6, 4, 0x1 },
	{ TEST_INST_SEL_CFG_2, "inst_sel_cfg_2", FLEXE_MUX_BASE_ADDR, 0xc6, 10, 8, 0x2 },
	{ TEST_INST_SEL_CFG_3, "inst_sel_cfg_3", FLEXE_MUX_BASE_ADDR, 0xc6, 14, 12, 0x3 },
	{ TEST_INST_SEL_CFG_4, "inst_sel_cfg_4", FLEXE_MUX_BASE_ADDR, 0xc6, 18, 16, 0x4 },
	{ TEST_INST_SEL_CFG_5, "inst_sel_cfg_5", FLEXE_MUX_BASE_ADDR, 0xc6, 22, 20, 0x5 },
	{ TEST_INST_SEL_CFG_6, "inst_sel_cfg_6", FLEXE_MUX_BASE_ADDR, 0xc6, 26, 24, 0x6 },
	{ TEST_INST_SEL_CFG_7, "inst_sel_cfg_7", FLEXE_MUX_BASE_ADDR, 0xc6, 30, 28, 0x7 },
};
NEW_CHIP_REG test_cfg_pls_reg[] =
{
	{ TEST_CFG_PLS, "cfg_pls", FLEXE_MUX_BASE_ADDR, 0x6a, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ram_conflict_alm_reg[] =
{
	{ TEST_RAM_CONFLICT_ALM_0, "ram_conflict_alm_0", FLEXE_MUX_BASE_ADDR, 0x65, 31, 0, 0x0 },
	{ TEST_RAM_CONFLICT_ALM_1, "ram_conflict_alm_1", FLEXE_MUX_BASE_ADDR, 0x66, 31, 0, 0x0 },
	{ TEST_RAM_CONFLICT_ALM_2, "ram_conflict_alm_2", FLEXE_MUX_BASE_ADDR, 0x67, 31, 0, 0x0 },
	{ TEST_RAM_CONFLICT_ALM_3, "ram_conflict_alm_3", FLEXE_MUX_BASE_ADDR, 0x68, 3, 0, 0x0 },
};
NEW_CHIP_REG test_sys_signal_fifo_alm_reg[] =
{
	{ TEST_SYS_SGL_FIFO_EMPTY, "sys_sgl_fifo_empty", FLEXE_MUX_BASE_ADDR, 0x69, 7, 0, 0x0 },
	{ TEST_SYS_SGL_FIFO_FULL, "sys_sgl_fifo_full", FLEXE_MUX_BASE_ADDR, 0x69, 15, 8, 0x0 },
};
NEW_CHIP_REG test_ptp_rx_pkts_en_reg[] =
{
	{ TEST_ERROR_DROP_EN, "error_drop_en", PTP_RX_OH_BASE_ADDR, 0x0, 1, 1, 0x1 },
};
NEW_CHIP_REG test_rx_port_comp_reg[] =
{
	{ TEST_RX_COMP_FRAC, "rx_comp_frac", PTP_RX_OH_BASE_ADDR, 0x1, 3, 0, 0x0 },
	{ TEST_RX_COMP_NS, "rx_comp_ns", PTP_RX_OH_BASE_ADDR, 0x1, 19, 4, 0x0 },
	{ TEST_RX_COMP_SIGN, "rx_comp_sign", PTP_RX_OH_BASE_ADDR, 0x1, 20, 20, 0x0 },
};
NEW_CHIP_REG test_rx_frm_cnt_reg[] =
{
	{ TEST_RX_FRM_CNT, "rx_frm_cnt", PTP_RX_OH_BASE_ADDR, 0x2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bank_frm_all_cnt_reg[] =
{
	{ TEST_BK_FRM_ALL_CNT, "bk_frm_all_cnt", PTP_RX_OH_BASE_ADDR, 0x4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bank_frm_err_cnt_reg[] =
{
	{ TEST_BK_FRM_ERR_CNT, "bk_frm_err_cnt", PTP_RX_OH_BASE_ADDR, 0x5, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bank_drop_frm_cnt_reg[] =
{
	{ TEST_BK_DROP_FRM_CNT, "bk_drop_frm_cnt", PTP_RX_OH_BASE_ADDR, 0x6, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_ptp_port_buf_reg[] =
{
	{ TEST_CTC_PORT_BUFF_FULL, "ctc_port_buff_full", PTP_RX_OH_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_CTC_PORT_BUFF_EMPTY, "ctc_port_buff_empty", PTP_RX_OH_BASE_ADDR, 0x3, 1, 1, 0x1 },
	{ TEST_RX_BBUFF_BANK_ST, "rx_bbuff_bank_st", PTP_RX_OH_BASE_ADDR, 0x3, 6, 2, 0x0 },
};
NEW_CHIP_REG test_portrx_cap_ts_reg[] =
{
	{ TEST_PORTRX_CAP_TIMESTAMP_0, "portrx_cap_timestamp_0", PTP_RX_OH_BASE_ADDR, 0xa, 31, 0, 0x0 },
	{ TEST_PORTRX_CAP_TIMESTAMP_1, "portrx_cap_timestamp_1", PTP_RX_OH_BASE_ADDR, 0xb, 19, 0, 0x0 },
};
NEW_CHIP_REG test_ptp_rxoh_alm_reg[] =
{
	{ TEST_RX_PB_BUFF_FULL_ALM, "rx_pb_buff_full_alm", PTP_RX_OH_BASE_ADDR, 0x7, 0, 0, 0x0 },
	{ TEST_PTP_RX_OH_ERR, "ptp_rx_oh_err", PTP_RX_OH_BASE_ADDR, 0x7, 1, 1, 0x0 },
	{ TEST_RX_66B_CODE_ALM, "rx_66b_code_alm", PTP_RX_OH_BASE_ADDR, 0x7, 2, 2, 0x0 },
	{ TEST_RX_CAP_TS_READY, "rx_cap_ts_ready", PTP_RX_OH_BASE_ADDR, 0x7, 3, 3, 0x0 },
	{ TEST_PRD_LENGTH_ALM, "prd_length_alm", PTP_RX_OH_BASE_ADDR, 0x7, 4, 4, 0x0 },
};
NEW_CHIP_REG test_ptp_rxoh_int_reg[] =
{
	{ TEST_RX_PB_BUFF_FULL_ALM_INT, "rx_pb_buff_full_alm_int", PTP_RX_OH_BASE_ADDR, 0x8, 1, 0, 0x0 },
	{ TEST_PTP_RX_OH_ERR_INT, "ptp_rx_oh_err_int", PTP_RX_OH_BASE_ADDR, 0x8, 3, 2, 0x0 },
	{ TEST_RX_66B_CODE_ALM_INT, "rx_66b_code_alm_int", PTP_RX_OH_BASE_ADDR, 0x8, 5, 4, 0x0 },
	{ TEST_RX_CAP_TS_READY_INT, "rx_cap_ts_ready_int", PTP_RX_OH_BASE_ADDR, 0x8, 7, 6, 0x0 },
	{ TEST_PRD_LENGTH_ALM_INT, "prd_length_alm_int", PTP_RX_OH_BASE_ADDR, 0x8, 9, 8, 0x0 },
};
NEW_CHIP_REG test_ptp_rxoh_int_mask_reg[] =
{
	{ TEST_RX_PB_BUFF_FULL_ALM_INT_MASK, "rx_pb_buff_full_alm_int_mask", PTP_RX_OH_BASE_ADDR, 0x9, 1, 0, 0x0 },
	{ TEST_PTP_RX_OH_ERR_INT_MASK, "ptp_rx_oh_err_int_mask", PTP_RX_OH_BASE_ADDR, 0x9, 3, 2, 0x0 },
	{ TEST_RX_66B_CODE_ALM_INT_MASK, "rx_66b_code_alm_int_mask", PTP_RX_OH_BASE_ADDR, 0x9, 5, 4, 0x0 },
	{ TEST_RX_CAP_TS_READY_INT_MASK, "rx_cap_ts_ready_int_mask", PTP_RX_OH_BASE_ADDR, 0x9, 7, 6, 0x0 },
	{ TEST_PRD_LENGTH_ALM_INT_MASK, "prd_length_alm_int_mask", PTP_RX_OH_BASE_ADDR, 0x9, 9, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_instance_grp_cfg_0_reg[] =
{
	{ TEST_GRP_SORT_CFG0, "grp_sort_cfg0", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x0, 7, 0, 0x1 },
	{ TEST_GRP_SORT_CFG1, "grp_sort_cfg1", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x0, 15, 8, 0x2 },
	{ TEST_GRP_SORT_CFG2, "grp_sort_cfg2", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x0, 23, 16, 0x4 },
	{ TEST_GRP_SORT_CFG3, "grp_sort_cfg3", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x0, 31, 24, 0x8 },
};
NEW_CHIP_REG test_flexe_instance_grp_cfg_1_reg[] =
{
	{ TEST_GRP_SORT_CFG4, "grp_sort_cfg4", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x1, 7, 0, 0x10 },
	{ TEST_GRP_SORT_CFG5, "grp_sort_cfg5", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x1, 15, 8, 0x20 },
	{ TEST_GRP_SORT_CFG6, "grp_sort_cfg6", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x1, 23, 16, 0x40 },
	{ TEST_GRP_SORT_CFG7, "grp_sort_cfg7", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x1, 31, 24, 0x80 },
};
NEW_CHIP_REG test_flexe_dsw_margin_cfg_0_reg[] =
{
	{ TEST_DSW_MARGIN_CFG0, "dsw_margin_cfg0", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x2, 11, 0, 0x3f0 },
	{ TEST_DSW_MARGIN_CFG1, "dsw_margin_cfg1", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x2, 23, 12, 0x3f0 },
};
NEW_CHIP_REG test_flexe_dsw_margin_cfg_1_reg[] =
{
	{ TEST_DSW_MARGIN_CFG2, "dsw_margin_cfg2", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x3, 11, 0, 0x3f0 },
	{ TEST_DSW_MARGIN_CFG3, "dsw_margin_cfg3", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x3, 23, 12, 0x3f0 },
};
NEW_CHIP_REG test_flexe_dsw_margin_cfg_2_reg[] =
{
	{ TEST_DSW_MARGIN_CFG4, "dsw_margin_cfg4", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x4, 11, 0, 0x3f0 },
	{ TEST_DSW_MARGIN_CFG5, "dsw_margin_cfg5", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x4, 23, 12, 0x3f0 },
};
NEW_CHIP_REG test_flexe_dsw_margin_cfg_3_reg[] =
{
	{ TEST_DSW_MARGIN_CFG6, "dsw_margin_cfg6", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x5, 11, 0, 0x3f0 },
	{ TEST_DSW_MARGIN_CFG7, "dsw_margin_cfg7", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x5, 23, 12, 0x3f0 },
};
NEW_CHIP_REG test_flexe_grp_ssf_cfg_reg[] =
{
	{ TEST_GRP_SSF_EN, "grp_ssf_en", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x6, 7, 0, 0xff },
	{ TEST_PHY_SSF_EN, "phy_ssf_en", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x6, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_grp_ini_ctl_reg[] =
{
	{ TEST_GRP_INI_SEL, "grp_ini_sel", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x7, 7, 0, 0x0 },
	{ TEST_GRP_INI_CFG, "grp_ini_cfg", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x7, 15, 8, 0x0 },
	{ TEST_FIFO_ADDR_OFFSET, "fifo_addr_offset", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x7, 25, 16, 0x8 },
};
NEW_CHIP_REG test_flexe_grp_mode_reg[] =
{
	{ TEST_GRP_MODE, "grp_mode", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x8, 7, 0, 0x0 },
	{ TEST_BYPASS_50G, "bypass_50g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x8, 8, 8, 0x0 },
	{ TEST_BYPASS_100G, "bypass_100g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x8, 9, 9, 0x0 },
};
NEW_CHIP_REG test_deskew_rate_m_50g_reg[] =
{
	{ TEST_DESKEW_RATE_M_50G, "deskew_rate_m_50g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xa, 31, 0, 0x303580ba },
};
NEW_CHIP_REG test_deskew_rate_base_m_50g_reg[] =
{
	{ TEST_DESKEW_RATE_BASE_M_50G, "deskew_rate_base_m_50g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xb, 31, 0, 0x3036d5ba },
};
NEW_CHIP_REG test_deskew_rate_m_100g_reg[] =
{
	{ TEST_DESKEW_RATE_M_100G, "deskew_rate_m_100g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xc, 31, 0, 0x606b145a },
};
NEW_CHIP_REG test_deskew_rate_base_m_100g_reg[] =
{
	{ TEST_DESKEW_RATE_BASE_M_100G, "deskew_rate_base_m_100g", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xd, 31, 0, 0x606b6a5a },
};
NEW_CHIP_REG test_flexe_grp_dsw_en_reg[] =
{
	{ TEST_DESKEW_ALM_EN0, "deskew_alm_en0", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xe, 7, 0, 0xff },
	{ TEST_DESKEW_ALM_EN1, "deskew_alm_en1", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xe, 15, 8, 0xff },
	{ TEST_DESKEW_ALM_EN2, "deskew_alm_en2", FLEXE_MULTI_DESKEW_BASE_ADDR, 0xe, 23, 16, 0xff },
};
NEW_CHIP_REG test_flexe_dsw_measure_0_reg[] =
{
	{ TEST_DSW_MEASURE_GRP0, "dsw_measure_grp0", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x10, 11, 0, 0x0 },
	{ TEST_DSW_MEASURE_GRP1, "dsw_measure_grp1", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x10, 23, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_dsw_measure_1_reg[] =
{
	{ TEST_DSW_MEASURE_GRP2, "dsw_measure_grp2", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x11, 11, 0, 0x0 },
	{ TEST_DSW_MEASURE_GRP3, "dsw_measure_grp3", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x11, 23, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_dsw_measure_2_reg[] =
{
	{ TEST_DSW_MEASURE_GRP4, "dsw_measure_grp4", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x12, 11, 0, 0x0 },
	{ TEST_DSW_MEASURE_GRP5, "dsw_measure_grp5", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x12, 23, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_dsw_measure_3_reg[] =
{
	{ TEST_DSW_MEASURE_GRP6, "dsw_measure_grp6", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x13, 11, 0, 0x0 },
	{ TEST_DSW_MEASURE_GRP7, "dsw_measure_grp7", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x13, 23, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_dsw_alm_reg[] =
{
	{ TEST_GRP_DSW_FIFO_EMPTY, "grp_dsw_fifo_empty", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x15, 7, 0, 0x0 },
	{ TEST_GRP_DSW_FIFO_FULL, "grp_dsw_fifo_full", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x15, 15, 8, 0x0 },
	{ TEST_GRP_DSW_OVERMARGIN, "grp_dsw_overmargin", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x15, 23, 16, 0x0 },
	{ TEST_GRP_DSW_ALM, "grp_dsw_alm", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x15, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_grp_ssf_alm_reg[] =
{
	{ TEST_GRP_SSF_ALM, "grp_ssf_alm", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x16, 7, 0, 0x0 },
	{ TEST_PHY200G_INST_NUM_ALM, "phy200g_inst_num_alm", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x16, 11, 8, 0x0 },
	{ TEST_PHY400G_INST_NUM_ALM, "phy400g_inst_num_alm", FLEXE_MULTI_DESKEW_BASE_ADDR, 0x16, 12, 12, 0x0 },
};

/*FEC_ENC*/
/*
NEW_CHIP_REG test_fec_enc_en_reg[] =
{
	{ TEST_FEC_ENC_EN, "fec_enc_en", FEC_ENC_BASE_ADDR, 0x0, 0, 0, 0x1 },
};
NEW_CHIP_REG test_fec_err_insert_type_reg[] =
{
	{ TEST_FEC_ERR_INSERT_TYPE_0, "fec_err_insert_type_0", FEC_ENC_BASE_ADDR, 0x1, 1, 0, 0x0 },
	{ TEST_FEC_ERR_INSERT_TYPE_1, "fec_err_insert_type_1", FEC_ENC_BASE_ADDR, 0x1, 3, 2, 0x0 },
	{ TEST_FEC_ERR_INSERT_TYPE_2, "fec_err_insert_type_2", FEC_ENC_BASE_ADDR, 0x1, 5, 4, 0x0 },
	{ TEST_FEC_ERR_INSERT_TYPE_3, "fec_err_insert_type_3", FEC_ENC_BASE_ADDR, 0x1, 7, 6, 0x0 },
};
NEW_CHIP_REG test_burst_err_len_reg[] =
{
	{ TEST_BURST_ERR_LEN, "burst_err_len", FEC_ENC_BASE_ADDR, 0x2, 9, 0, 0x0 },
};
NEW_CHIP_REG test_burst_strat_position_reg[] =
{
	{ TEST_BURST_STRAT_POSITION, "burst_strat_position", FEC_ENC_BASE_ADDR, 0x3, 9, 0, 0x0 },
};
NEW_CHIP_REG test_burst_type_reg[] =
{
	{ TEST_BURST_TYPE, "burst_type", FEC_ENC_BASE_ADDR, 0x4, 0, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_bit_en_reg[] =
{
	{ TEST_ADV_ERR_BIT_EN, "adv_err_bit_en", FEC_ENC_BASE_ADDR, 0x5, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon1_reg[] =
{
	{ TEST_ADV_ERR_POSITON1, "adv_err_positon1", FEC_ENC_BASE_ADDR, 0x6, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon2_reg[] =
{
	{ TEST_ADV_ERR_POSITON2, "adv_err_positon2", FEC_ENC_BASE_ADDR, 0x7, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon3_reg[] =
{
	{ TEST_ADV_ERR_POSITON3, "adv_err_positon3", FEC_ENC_BASE_ADDR, 0x8, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon4_reg[] =
{
	{ TEST_ADV_ERR_POSITON4, "adv_err_positon4", FEC_ENC_BASE_ADDR, 0x9, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon5_reg[] =
{
	{ TEST_ADV_ERR_POSITON5, "adv_err_positon5", FEC_ENC_BASE_ADDR, 0xa, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon6_reg[] =
{
	{ TEST_ADV_ERR_POSITON6, "adv_err_positon6", FEC_ENC_BASE_ADDR, 0xb, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon7_reg[] =
{
	{ TEST_ADV_ERR_POSITON7, "adv_err_positon7", FEC_ENC_BASE_ADDR, 0xc, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon8_reg[] =
{
	{ TEST_ADV_ERR_POSITON8, "adv_err_positon8", FEC_ENC_BASE_ADDR, 0xd, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon9_reg[] =
{
	{ TEST_ADV_ERR_POSITON9, "adv_err_positon9", FEC_ENC_BASE_ADDR, 0xe, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon10_reg[] =
{
	{ TEST_ADV_ERR_POSITON10, "adv_err_positon10", FEC_ENC_BASE_ADDR, 0xf, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon11_reg[] =
{
	{ TEST_ADV_ERR_POSITON11, "adv_err_positon11", FEC_ENC_BASE_ADDR, 0x10, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon12_reg[] =
{
	{ TEST_ADV_ERR_POSITON12, "adv_err_positon12", FEC_ENC_BASE_ADDR, 0x11, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon13_reg[] =
{
	{ TEST_ADV_ERR_POSITON13, "adv_err_positon13", FEC_ENC_BASE_ADDR, 0x12, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon14_reg[] =
{
	{ TEST_ADV_ERR_POSITON14, "adv_err_positon14", FEC_ENC_BASE_ADDR, 0x13, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon15_reg[] =
{
	{ TEST_ADV_ERR_POSITON15, "adv_err_positon15", FEC_ENC_BASE_ADDR, 0x14, 9, 0, 0x0 },
};
NEW_CHIP_REG test_adv_err_positon16_reg[] =
{
	{ TEST_ADV_ERR_POSITON16, "adv_err_positon16", FEC_ENC_BASE_ADDR, 0x15, 9, 0, 0x0 },
};
NEW_CHIP_REG test_err_random_com_val_reg[] =
{
	{ TEST_ERR_RANDOM_COM_VAL, "err_random_com_val", FEC_ENC_BASE_ADDR, 0x16, 16, 0, 0xc80 },
};
NEW_CHIP_REG test_delay_value_0_reg[] =
{
	{ TEST_FEC_ENC_DELAY_VALUE0, "delay_value0", FEC_ENC_BASE_ADDR, 0x17, 8, 0, 0x50 },
	{ TEST_FEC_ENC_DELAY_VALUE1, "delay_value1", FEC_ENC_BASE_ADDR, 0x17, 17, 9, 0x50 },
};
NEW_CHIP_REG test_delay_value_1_reg[] =
{
	{ TEST_FEC_ENC_DELAY_VALUE2, "delay_value2", FEC_ENC_BASE_ADDR, 0x18, 8, 0, 0x50 },
	{ TEST_FEC_ENC_DELAY_VALUE3, "delay_value3", FEC_ENC_BASE_ADDR, 0x18, 17, 9, 0x50 },
};
NEW_CHIP_REG test_rs528_en_reg[] =
{
	{ TEST_RS528_EN_0, "rs528_en_0", FEC_ENC_BASE_ADDR, 0x19, 0, 0, 0x0 },
	{ TEST_RS528_EN_1, "rs528_en_1", FEC_ENC_BASE_ADDR, 0x19, 1, 1, 0x0 },
	{ TEST_RS528_EN_2, "rs528_en_2", FEC_ENC_BASE_ADDR, 0x19, 2, 2, 0x0 },
	{ TEST_RS528_EN_3, "rs528_en_3", FEC_ENC_BASE_ADDR, 0x19, 3, 3, 0x0 },
};
NEW_CHIP_REG test_fec_err_insert_en_reg[] =
{
	{ TEST_FEC_ERR_INSERT_EN_0, "fec_err_insert_en_0", FEC_ENC_BASE_ADDR, 0x20, 0, 0, 0x0 },
	{ TEST_FEC_ERR_INSERT_EN_1, "fec_err_insert_en_1", FEC_ENC_BASE_ADDR, 0x20, 1, 1, 0x0 },
	{ TEST_FEC_ERR_INSERT_EN_2, "fec_err_insert_en_2", FEC_ENC_BASE_ADDR, 0x20, 2, 2, 0x0 },
	{ TEST_FEC_ERR_INSERT_EN_3, "fec_err_insert_en_3", FEC_ENC_BASE_ADDR, 0x20, 3, 3, 0x0 },
};
NEW_CHIP_REG test_fec_enc_measure_max_0_reg[] =
{
	{ TEST_MEASURE_MAX_0, "measure_max_0", FEC_ENC_BASE_ADDR, 0x23, 8, 0, 0x0 },
};
NEW_CHIP_REG test_fec_enc_measure_max_1_reg[] =
{
	{ TEST_MEASURE_MAX_1, "measure_max_1", FEC_ENC_BASE_ADDR, 0x24, 8, 0, 0x0 },
};
NEW_CHIP_REG test_fec_enc_measure_max_2_reg[] =
{
	{ TEST_MEASURE_MAX_2, "measure_max_2", FEC_ENC_BASE_ADDR, 0x25, 8, 0, 0x0 },
};
NEW_CHIP_REG test_fec_enc_measure_max_3_reg[] =
{
	{ TEST_MEASURE_MAX_3, "measure_max_3", FEC_ENC_BASE_ADDR, 0x26, 8, 0, 0x0 },
};
NEW_CHIP_REG test_fec_enc_output_fifo_wr_full_reg[] =
{
	{ TEST_FEC_ENC_OUTPUT_FIFO_WR_FULL_0, "fec_enc_output_fifo_wr_full_0", FEC_ENC_BASE_ADDR, 0x21, 0, 0, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_WR_FULL_1, "fec_enc_output_fifo_wr_full_1", FEC_ENC_BASE_ADDR, 0x21, 1, 1, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_WR_FULL_2, "fec_enc_output_fifo_wr_full_2", FEC_ENC_BASE_ADDR, 0x21, 2, 2, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_WR_FULL_3, "fec_enc_output_fifo_wr_full_3", FEC_ENC_BASE_ADDR, 0x21, 3, 3, 0x0 },
};
NEW_CHIP_REG test_fec_enc_output_fifo_rd_empty_reg[] =
{
	{ TEST_FEC_ENC_OUTPUT_FIFO_RD_EMPTY_0, "fec_enc_output_fifo_rd_empty_0", FEC_ENC_BASE_ADDR, 0x22, 0, 0, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_RD_EMPTY_1, "fec_enc_output_fifo_rd_empty_1", FEC_ENC_BASE_ADDR, 0x22, 1, 1, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_RD_EMPTY_2, "fec_enc_output_fifo_rd_empty_2", FEC_ENC_BASE_ADDR, 0x22, 2, 2, 0x0 },
	{ TEST_FEC_ENC_OUTPUT_FIFO_RD_EMPTY_3, "fec_enc_output_fifo_rd_empty_3", FEC_ENC_BASE_ADDR, 0x22, 3, 3, 0x0 },
};
NEW_CHIP_REG test_enc_abnormal_reg[] =
{
	{ TEST_ENC_ABNORMAL0, "enc_abnormal0", FEC_ENC_BASE_ADDR, 0x27, 0, 0, 0x0 },
	{ TEST_ENC_ABNORMAL1, "enc_abnormal1", FEC_ENC_BASE_ADDR, 0x27, 1, 1, 0x0 },
	{ TEST_ENC_ABNORMAL2, "enc_abnormal2", FEC_ENC_BASE_ADDR, 0x27, 2, 2, 0x0 },
	{ TEST_ENC_ABNORMAL3, "enc_abnormal3", FEC_ENC_BASE_ADDR, 0x27, 3, 3, 0x0 },
};
*/
/*B66SWITCH*/
NEW_CHIP_REG test_protect_en_reg[] =
{
	{ TEST_PROTECT_EN, "protect_en", B66SWITCH_BASE_ADDR, 0x6, 0, 0, 0x0 },
};
NEW_CHIP_REG test_chid_cfg_reg[] =
{
	{ TEST_CHID_CFG, "chid_cfg", B66SWITCH_BASE_ADDR, 0x7, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_protect_info_reg[] =
{
	{ TEST_PROTECT_INFO_0, "protect_info_0", B66SWITCH_BASE_ADDR, 0x10, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_1, "protect_info_1", B66SWITCH_BASE_ADDR, 0x11, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_2, "protect_info_2", B66SWITCH_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_3, "protect_info_3", B66SWITCH_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_4, "protect_info_4", B66SWITCH_BASE_ADDR, 0x14, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_5, "protect_info_5", B66SWITCH_BASE_ADDR, 0x15, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_6, "protect_info_6", B66SWITCH_BASE_ADDR, 0x16, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_7, "protect_info_7", B66SWITCH_BASE_ADDR, 0x17, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_8, "protect_info_8", B66SWITCH_BASE_ADDR, 0x18, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_9, "protect_info_9", B66SWITCH_BASE_ADDR, 0x19, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_10, "protect_info_10", B66SWITCH_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_11, "protect_info_11", B66SWITCH_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_12, "protect_info_12", B66SWITCH_BASE_ADDR, 0x1c, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_13, "protect_info_13", B66SWITCH_BASE_ADDR, 0x1d, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_14, "protect_info_14", B66SWITCH_BASE_ADDR, 0x1e, 31, 0, 0x0 },
	{ TEST_PROTECT_INFO_15, "protect_info_15", B66SWITCH_BASE_ADDR, 0x1f, 11, 0, 0x0 },
};
NEW_CHIP_REG test_soh_ins_getpkt1_reg[] =
{
	{ TEST_SOH_INS_DRAM_INIT_EN, "soh_ins_dram_init_en", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 9, 9, 0x0 },
	{ TEST_SOH_INST_MODE, "soh_inst_mode", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 17, 10, 0xff },
	{ TEST_SOH_INS_CHKSH_MFI, "soh_ins_chksh_mfi", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 20, 18, 0x0 },
	{ TEST_SOH_INS_DBUFF_LVL_CLR, "soh_ins_dbuff_lvl_clr", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 21, 21, 0x0 },
	{ TEST_SOH_INS_DBUFF_LVL_RPT_SEL, "soh_ins_dbuff_lvl_rpt_sel", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 22, 22, 0x0 },
	{ TEST_SOAM_NO_OVERTIME_PRO, "soam_no_overtime_pro", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 8, 8, 0x0 },
	{ TEST_SOAM_OVERTIME, "soam_overtime", OHOAM_EF_BASE_ADDR, 0x0 + SOH_DCI, 7, 0, 0x7f },
};
NEW_CHIP_REG test_soam_loopback_reg[] =
{
	{ TEST_SOAM_FLEXE_LOOPBACK, "soam_flexe_loopback", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 0, 0, 0x0 },
	{ TEST_SOAM_MAC_LOOPBACK, "soam_mac_loopback", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 1, 1, 0x0 },
	{ TEST_MAC_INTE_RAM_INIT_EN, "mac_inte_ram_init_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 2, 2, 0x0 },
	{ TEST_FLEXE_INTE_RAM_INIT_EN, "flexe_inte_ram_init_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 3, 3, 0x0 },
	{ TEST_SOAM_FLEXE_CFG_DONE, "soam_flexe_cfg_done", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 4, 4, 0x0 },
	{ TEST_SOAM_MAC_CFG_DONE, "soam_mac_cfg_done", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 5, 5, 0x0 },
	{ TEST_ASIC_SOAM_FLEXE_ALM_EXT_EN, "asic_soam_flexe_alm_ext_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 6, 6, 0x1 },
	{ TEST_ASIC_SOAM_MAC_ALM_EXT_EN, "asic_soam_mac_alm_ext_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 7, 7, 0x1 },
	{ TEST_SOH_LOOPBACK, "soh_loopback", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 8, 8, 0x0 },
	{ TEST_SOAM_FLEXE_BAS_EXT_EN, "soam_flexe_bas_ext_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 9, 9, 0x0 },
	{ TEST_SOAM_MAC_BAS_EXT_EN, "soam_mac_bas_ext_en", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 10, 10, 0x0 },
	{ TEST_SOAM_FLEXE_FLVL_CLR, "soam_flexe_flvl_clr", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 11, 11, 0x0 },
	{ TEST_SOAM_MAC_FLVL_CLR, "soam_mac_flvl_clr", OHOAM_EF_BASE_ADDR, 0x9 + SOH_DCI, 12, 12, 0x0 },
};
NEW_CHIP_REG test_soam_alm_colection_reg[] =
{
	{ TEST_SOAM_FLEXE_ALM_PRD, "soam_flexe_alm_prd", OHOAM_EF_BASE_ADDR, 0xa + SOH_DCI, 3, 0, 0x1 },
	{ TEST_SOAM_MAC_ALM_PRD, "soam_mac_alm_prd", OHOAM_EF_BASE_ADDR, 0xa + SOH_DCI, 7, 4, 0x1 },
	{ TEST_SOAM_TIMER_STEP_CFG, "soam_timer_step_cfg", OHOAM_EF_BASE_ADDR, 0xa + SOH_DCI, 13, 8, 0x3f },
};
NEW_CHIP_REG test_asic_ohif_dasa_reg[] =
{
	{ TEST_ASIC_OHIF_LOCAL_ADDR_0, "asic_ohif_local_addr_0", OHOAM_EF_BASE_ADDR, 0xb + SOH_DCI, 31, 0, 0x0 },
	{ TEST_ASIC_OHIF_LOCAL_ADDR_1, "asic_ohif_local_addr_1", OHOAM_EF_BASE_ADDR, 0xc + SOH_DCI, 15, 0, 0x0 },
	{ TEST_ASIC_OHIF_DEST_ADDR_0, "asic_ohif_dest_addr_0", OHOAM_EF_BASE_ADDR, 0xc + SOH_DCI, 31, 16, 0x0 },
	{ TEST_ASIC_OHIF_DEST_ADDR_1, "asic_ohif_dest_addr_1", OHOAM_EF_BASE_ADDR, 0xd + SOH_DCI, 31, 0, 0x0 },
};
NEW_CHIP_REG test_soam_ext_dscf_lvl_stat_reg[] =
{
	{ TEST_SOAM_FLEXE_DSCFLVL_STAT, "soam_flexe_dscflvl_stat", OHOAM_EF_BASE_ADDR, 0x4 + SOH_DCI, 8, 0, 0x0 },
	{ TEST_SOAM_MAC_DSCFLVL_STAT, "soam_mac_dscflvl_stat", OHOAM_EF_BASE_ADDR, 0x4 + SOH_DCI, 17, 9, 0x0 },
	{ TEST_SOH_INS_DBUFF_MAX_LVL, "soh_ins_dbuff_max_lvl", OHOAM_EF_BASE_ADDR, 0x4 + SOH_DCI, 25, 18, 0x0 },
};
NEW_CHIP_REG test_soh_ins_pkt_port_id_err_reg[] =
{
	{ TEST_SOH_INS_PIDERR_ALARM, "soh_ins_piderr_alarm", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 0, 0, 0x0 },
	{ TEST_SOH_INS_REQ_FIFO_FULL_ALAM, "soh_ins_req_fifo_full_alam", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 1, 1, 0x0 },
	{ TEST_SOH_INS_DA_ERR, "soh_ins_da_err", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 2, 2, 0x0 },
	{ TEST_SOHSH_ERR, "sohsh_err", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 10, 3, 0x0 },
	{ TEST_INS_MFI_CON_ERR, "ins_mfi_con_err", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 18, 11, 0x0 },
	{ TEST_INS_CBAS_PLN_ERR, "ins_cbas_pln_err", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 19, 19, 0x0 },
	{ TEST_INS_ETHID_ERR, "ins_ethid_err", OHOAM_EF_BASE_ADDR, 0x1 + SOH_DCI, 20, 20, 0x0 },
};
NEW_CHIP_REG test_soh_ext_cffull_alarm_reg[] =
{
	{ TEST_SOH_EXT_CFFULL_ALARM, "soh_ext_cffull_alarm", OHOAM_EF_BASE_ADDR, 0x3 + SOH_DCI, 0, 0, 0x0 },
	{ TEST_SOH_INS_DBUFF_EMPTY, "soh_ins_dbuff_empty", OHOAM_EF_BASE_ADDR, 0x3 + SOH_DCI, 8, 1, 0x0 },
	{ TEST_SOH_INS_DBUFF_FULL, "soh_ins_dbuff_full", OHOAM_EF_BASE_ADDR, 0x3 + SOH_DCI, 16, 9, 0x0 },
};
NEW_CHIP_REG test_soam_ext_flexe_alam_reg[] =
{
	{ TEST_FLEXE_EXT_CHID_ERR_ALAM, "flexe_ext_chid_err_alam", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 0, 0, 0x0 },
	{ TEST_FLEXE_EXT_SEQ_ILGL_ALAM, "flexe_ext_seq_ilgl_alam", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 1, 1, 0x0 },
	{ TEST_FLEXE_EXT_SOP_ONLY_ALAM, "flexe_ext_sop_only_alam", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 2, 2, 0x0 },
	{ TEST_FLEXE_EXT_EOP_ONLY_ALAM, "flexe_ext_eop_only_alam", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 3, 3, 0x0 },
	{ TEST_FLEXE_EXT_DSC_FIFO_FULL, "flexe_ext_dsc_fifo_full", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 4, 4, 0x0 },
	{ TEST_FLEXE_SOAM_OVERTIME_ALM, "flexe_soam_overtime_alm", OHOAM_EF_BASE_ADDR, 0x5 + SOH_DCI, 5, 5, 0x0 },
};
NEW_CHIP_REG test_soam_ext_mac_alam_reg[] =
{
	{ TEST_MAC_EXT_CHID_ERR_ALAM, "mac_ext_chid_err_alam", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 0, 0, 0x0 },
	{ TEST_MAC_EXT_SEQ_ILGL_ALAM, "mac_ext_seq_ilgl_alam", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 1, 1, 0x0 },
	{ TEST_MAC_EXT_SOP_ONLY_ALAM, "mac_ext_sop_only_alam", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 2, 2, 0x0 },
	{ TEST_MAC_EXT_EOP_ONLY_ALAM, "mac_ext_eop_only_alam", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 3, 3, 0x0 },
	{ TEST_MAC_EXT_DSC_FIFO_FULL, "mac_ext_dsc_fifo_full", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 4, 4, 0x0 },
	{ TEST_MAC_SOAM_OVERTIME_ALM, "mac_soam_overtime_alm", OHOAM_EF_BASE_ADDR, 0x6 + SOH_DCI, 5, 5, 0x0 },
};

/*FLEXE_OH_TX*/
NEW_CHIP_REG test_flexe_tx_mode_cfg_reg[] =
{
	{ TEST_FLEXE_TX_MODE, "flexe_tx_mode", FLEXE_OH_TX_BASE_ADDR, 0x1, 1, 0, 0x0 },
	{ TEST_CRC_TX_MODE, "crc_tx_mode", FLEXE_OH_TX_BASE_ADDR, 0x1, 2, 2, 0x0 },
	{ TEST_UNEQUIPPED_CFG, "unequipped_cfg", FLEXE_OH_TX_BASE_ADDR, 0x1, 3, 3, 0x0 },
	{ TEST_B66_ERR_RPL, "b66_err_rpl", FLEXE_OH_TX_BASE_ADDR, 0x1, 4, 4, 0x1 },
	{ TEST_MF16T32_TX_CFG, "mf16t32_tx_cfg", FLEXE_OH_TX_BASE_ADDR, 0x1, 5, 5, 0x0 },
	{ TEST_PHY_INST_TX_RI_SW_CFG, "phy_inst_tx_ri_sw_cfg", FLEXE_OH_TX_BASE_ADDR, 0x1, 10, 8, 0x0 },
	{ TEST_SMC_REQ_CFG, "smc_req_cfg", FLEXE_OH_TX_BASE_ADDR, 0x1, 11, 11, 0x0 },
};
NEW_CHIP_REG test_oh_ins_src_cfg_reg[] =
{
	{ TEST_FAS_SRC_CFG, "fas_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 1, 0, 0x0 },
	{ TEST_CC_SRC_CFG, "cc_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 3, 2, 0x0 },
	{ TEST_OMF_SRC_CFG, "omf_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 5, 4, 0x0 },
	{ TEST_RPF_SRC_CFG, "rpf_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 7, 6, 0x0 },
	{ TEST_GID_SRC_CFG, "gid_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 9, 8, 0x0 },
	{ TEST_PYHMAP_SRC_CFG, "pyhmap_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 11, 10, 0x0 },
	{ TEST_PID_SRC_CFG, "pid_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 13, 12, 0x0 },
	{ TEST_CCA_SRC_CFG, "cca_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 15, 14, 0x0 },
	{ TEST_CCB_SRC_CFG, "ccb_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 17, 16, 0x0 },
	{ TEST_CR_SRC_CFG, "cr_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 19, 18, 0x0 },
	{ TEST_CA_SRC_CFG, "ca_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 21, 20, 0x0 },
	{ TEST_CRC16_SRC_CFG, "crc16_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 23, 22, 0x0 },
	{ TEST_SECTION_SRC_CFG, "section_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 25, 24, 0x0 },
	{ TEST_SHIM2SHIM_SRC_CFG, "shim2shim_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 27, 26, 0x0 },
	{ TEST_SMC_SRC_CFG, "smc_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 29, 28, 0x0 },
	{ TEST_SC_SRC_CFG, "sc_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_reserved_ins_src_cfg_reg[] =
{
	{ TEST_RESERVED1_SRC_CFG, "reserved1_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x3, 3, 2, 0x0 },
	{ TEST_RESERVED2_SRC_CFG, "reserved2_src_cfg", FLEXE_OH_TX_BASE_ADDR, 0x3, 5, 4, 0x0 },
};
NEW_CHIP_REG test_oh_ins_cfg0_reg[] =
{
	{ TEST_CCC_INS, "ccc_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 0, 0, 0x0 },
	{ TEST_CR_INS, "cr_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 1, 1, 0x0 },
	{ TEST_CA_INS, "ca_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 2, 2, 0x0 },
	{ TEST_RPF_INS, "rpf_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 3, 3, 0x0 },
	{ TEST_PID_INS, "pid_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 11, 4, 0x1 },
	{ TEST_GID_INS, "gid_ins", FLEXE_OH_TX_BASE_ADDR, 0x4, 31, 12, 0x2 },
};
NEW_CHIP_REG test_oh_ins_cfg1_reg[] =
{
	{ TEST_MC_SECTION_INS_0, "mc_section_ins_0", FLEXE_OH_TX_BASE_ADDR, 0x5, 31, 0, 0x1e },
	{ TEST_MC_SECTION_INS_1, "mc_section_ins_1", FLEXE_OH_TX_BASE_ADDR, 0x6, 31, 0, 0x0 },
	{ TEST_MC_SECTION_INS_2, "mc_section_ins_2", FLEXE_OH_TX_BASE_ADDR, 0x7, 31, 0, 0x1e },
	{ TEST_MC_SECTION_INS_3, "mc_section_ins_3", FLEXE_OH_TX_BASE_ADDR, 0x8, 31, 0, 0x0 },
};
NEW_CHIP_REG test_oh_ins_cfg2_reg[] =
{
	{ TEST_SMC_INS_0, "smc_ins_0", FLEXE_OH_TX_BASE_ADDR, 0x9, 31, 0, 0x1e },
	{ TEST_SMC_INS_1, "smc_ins_1", FLEXE_OH_TX_BASE_ADDR, 0xa, 31, 0, 0x0 },
	{ TEST_MC_S2S_INS_0, "mc_s2s_ins_0", FLEXE_OH_TX_BASE_ADDR, 0xb, 31, 0, 0x1e },
	{ TEST_MC_S2S_INS_1, "mc_s2s_ins_1", FLEXE_OH_TX_BASE_ADDR, 0xc, 31, 0, 0x0 },
	{ TEST_MC_S2S_INS_2, "mc_s2s_ins_2", FLEXE_OH_TX_BASE_ADDR, 0xd, 31, 0, 0x1e },
	{ TEST_MC_S2S_INS_3, "mc_s2s_ins_3", FLEXE_OH_TX_BASE_ADDR, 0xe, 31, 0, 0x0 },
};
NEW_CHIP_REG test_oh_sh_cfg_reg[] =
{
	{ TEST_OH_SH, "oh_sh", FLEXE_OH_TX_BASE_ADDR, 0xf, 11, 0, 0x555 },
};
NEW_CHIP_REG test_reserved_ins_cfg_reg[] =
{
	{ TEST_RESERVED1_INS_0, "reserved1_ins_0", FLEXE_OH_TX_BASE_ADDR, 0x10, 31, 4, 0x0 },
	{ TEST_RESERVED1_INS_1, "reserved1_ins_1", FLEXE_OH_TX_BASE_ADDR, 0x11, 18, 0, 0x0 },
	{ TEST_RESERVED2_INS, "reserved2_ins", FLEXE_OH_TX_BASE_ADDR, 0x11, 31, 19, 0x0 },
	{ TEST_SC_INS, "sc_ins", FLEXE_OH_TX_BASE_ADDR, 0x10, 0, 0, 0x0 },
};
NEW_CHIP_REG test_b66code_err_reg[] =
{
	{ TEST_B66CODE_ERR, "b66code_err", FLEXE_OH_TX_BASE_ADDR, 0x19, 0, 0, 0x0 },
};

/*CPB_INGRESS*/
/*
NEW_CHIP_REG test_cpb_in_mon_en_reg[] =
{
	{ TEST_CPB_INGRESS_MON_EN_0, "mon_en_0", CPB_INGRESS_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_CPB_INGRESS_MON_EN_1, "mon_en_1", CPB_INGRESS_BASE_ADDR, 0x2, 7, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_in_calendar_config_reg[] =
{
	{ TEST_CPB_INGRESS_CALENDAR_INIT_DONE, "calendar_init_done", CPB_INGRESS_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_CPB_INGRESS_CALENDAR_SEL, "calendar_sel", CPB_INGRESS_BASE_ADDR, 0x3, 1, 1, 0x0 },
	{ TEST_CPB_INGRESS_CALENDAR_SW_EN, "calendar_sw_en", CPB_INGRESS_BASE_ADDR, 0x3, 2, 2, 0x0 },
	{ TEST_CPB_INGRESS_CNT_CLEAR, "cnt_clear", CPB_INGRESS_BASE_ADDR, 0x3, 3, 3, 0x0 },
};
NEW_CHIP_REG test_cpb_in_depth_config_reg[] =
{
	{ TEST_CPB_INGRESS_FULL_DEPTH, "full_depth", CPB_INGRESS_BASE_ADDR, 0x17, 7, 0, 0x0 },
	{ TEST_CPB_INGRESS_FC_HIGH, "fc_high", CPB_INGRESS_BASE_ADDR, 0x17, 15, 8, 0x0 },
	{ TEST_CPB_INGRESS_FC_LOW, "fc_low", CPB_INGRESS_BASE_ADDR, 0x17, 23, 16, 0x0 },
	{ TEST_CPB_INGRESS_ALM_CFG, "alm_cfg", CPB_INGRESS_BASE_ADDR, 0x17, 30, 24, 0x0 },
	{ TEST_CPB_INGRESS_FC_EN, "fc_en", CPB_INGRESS_BASE_ADDR, 0x17, 31, 31, 0x0 },
};
NEW_CHIP_REG test_cpb_in_clr_chan_reg[] =
{
	{ TEST_CPB_INGRESS_CNT_CLR_CHAN, "cnt_clr_chan", CPB_INGRESS_BASE_ADDR, 0x40, 5, 0, 0x0 },
};
NEW_CHIP_REG test_adp_fifo_water_line_cfg_reg[] =
{
	{ TEST_CPB_INGRESS_WATER_LINE, "water_line", CPB_INGRESS_BASE_ADDR, 0x75, 5, 0, 0x1f },
};
NEW_CHIP_REG test_adp_chan_enable_cfg_reg[] =
{
	{ TEST_CPB_INGRESS_CHAN_EN_0, "chan_en_0", CPB_INGRESS_BASE_ADDR, 0x76, 31, 0, 0x0 },
	{ TEST_CPB_INGRESS_CHAN_EN_1, "chan_en_1", CPB_INGRESS_BASE_ADDR, 0x77, 7, 0, 0x0 },
};
NEW_CHIP_REG test_loop_en_ing_reg[] =
{
	{ TEST_CPB_INGRESS_LOOP_EN_ING, "loop_en_ing", CPB_INGRESS_BASE_ADDR, 0x78, 1, 1, 0x0 },
};
NEW_CHIP_REG test_cpb_in_sch_sw_pulse_reg[] =
{
	{ TEST_CPB_INGRESS_CALENDAR_SW_PLUSE, "calendar_sw_pluse", CPB_INGRESS_BASE_ADDR, 0x6, 1, 1, 0x0 },
	{ TEST_CPB_INGRESS_CPB_INIT_RST, "cpb_init_rst", CPB_INGRESS_BASE_ADDR, 0x6, 2, 2, 0x0 },
	{ TEST_CPB_INGRESS_ADP_INIT_RST, "adp_init_rst", CPB_INGRESS_BASE_ADDR, 0x6, 3, 3, 0x0 },
	{ TEST_CPB_INGRESS_CNT_CLR, "cpb_ingress_cnt_clr", CPB_INGRESS_BASE_ADDR, 0x6, 4, 4, 0x0 },
};
NEW_CHIP_REG test_cpb_in_sch_state_reg[] =
{
	{ TEST_CPB_INGRESS_SCH_CALENDAR_STATE, "sch_calendar_state", CPB_INGRESS_BASE_ADDR, 0x5, 1, 0, 0x0 },
	{ TEST_CPB_INGRESS_ILK_STALL, "ilk_stall", CPB_INGRESS_BASE_ADDR, 0x5, 2, 2, 0x0 },
	{ TEST_CPB_INGRESS_ADP_STALL, "adp_stall", CPB_INGRESS_BASE_ADDR, 0x5, 3, 3, 0x0 },
	{ TEST_CPB_INGRESS_ADP_FULL, "adp_full", CPB_INGRESS_BASE_ADDR, 0x5, 4, 4, 0x0 },
};
NEW_CHIP_REG test_cpb_in_maxcnt_reg[] =
{
	{ TEST_CPB_INGRESS_MAX_CNT, "max_cnt", CPB_INGRESS_BASE_ADDR, 0xb, 31, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_in_ram_full_reg[] =
{
	{ TEST_CPB_INGRESS_FULL_0, "full_0", CPB_INGRESS_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_CPB_INGRESS_FULL_1, "full_1", CPB_INGRESS_BASE_ADDR, 0x8, 7, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_in_ram_empty_reg[] =
{
	{ TEST_CPB_INGRESS_EMPTY_0, "empty_0", CPB_INGRESS_BASE_ADDR, 0x9, 31, 0, 0x0 },
	{ TEST_CPB_INGRESS_EMPTY_1, "empty_1", CPB_INGRESS_BASE_ADDR, 0xa, 7, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_in_ram_fc_reg[] =
{
	{ TEST_CPB_INGRESS_FIFO_FC_0, "fifo_fc_0", CPB_INGRESS_BASE_ADDR, 0x15, 31, 0, 0x0 },
	{ TEST_CPB_INGRESS_FIFO_FC_1, "fifo_fc_1", CPB_INGRESS_BASE_ADDR, 0x16, 7, 0, 0x0 },
};
*/

/*ohif_asic1*/
NEW_CHIP_REG test_test_cfg_reg[] =
{
	{ TEST_OAM_SEQ_ERR_CHID, "oam_seq_err_chid", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 6, 0, 0x0 },
	{ TEST_OAM_SEQ_ERR_EN, "oam_seq_err_en", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 7, 7, 0x0 },
	{ TEST_OAM_INS_MODE, "oam_ins_mode", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 8, 8, 0x1 },
	{ TEST_SELF_MAX_CHID, "self_max_chid", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 15, 9, 0x4f },
	{ TEST_SET_CRC_ERR, "set_crc_err", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 16, 16, 0x0 },
	{ TEST_SOAM_MAC_SELF_MAN, "soam_mac_self_man", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 17, 17, 0x0 },
	{ TEST_SOAM_FLEXE_SELF_MAN, "soam_flexe_self_man", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 18, 18, 0x0 },
	{ TEST_SOAM_FLEXE_INS_SELF_EN, "soam_flexe_ins_self_en", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 19, 19, 0x1 },
	{ TEST_SOAM_MAC_INS_SELF_EN, "soam_mac_ins_self_en", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 20, 20, 0x1 },
	{ TEST_SW66_BAS_SEL, "sw66_bas_sel", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 21, 21, 0x1 },
	{ TEST_SW66_BAS_START, "sw66_bas_start", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 22, 22, 0x0 },
	{ TEST_SW66_BAS_DONE, "sw66_bas_done", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 23, 23, 0x0 },
	{ TEST_INS_ETHIDERR_CFG, "ins_ethiderr_cfg", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 24, 24, 0x0 },
	{ TEST_SOEXT_TYPE_VALUE_SEL, "soext_type_value_sel", OHOAM_EF_BASE_ADDR, 0x2 + OHIF_ASIC1, 25, 25, 0x0 },
};
NEW_CHIP_REG test_oam_ext_cnt_addr_cfg_reg[] =
{
	{ TEST_SOAM_FLEXE_EXT_CNT_CFG, "soam_flexe_ext_cnt_cfg", OHOAM_EF_BASE_ADDR, 0xf + OHIF_ASIC1, 12, 0, 0x0 },
	{ TEST_SOAM_MAC_EXT_CNT_CFG, "soam_mac_ext_cnt_cfg", OHOAM_EF_BASE_ADDR, 0xf + OHIF_ASIC1, 25, 13, 0x0 },
};
NEW_CHIP_REG test_soam_flexe_ins_ext_cnt_reg[] =
{
	{ TEST_SOAM_FLEXE_INS_CNT, "soam_flexe_ins_cnt", OHOAM_EF_BASE_ADDR, 0xd + OHIF_ASIC1, 15, 0, 0x0 },
	{ TEST_SOAM_FLEXE_EXT_CNT, "soam_flexe_ext_cnt", OHOAM_EF_BASE_ADDR, 0xd + OHIF_ASIC1, 31, 16, 0x0 },
};
NEW_CHIP_REG test_soam_mac_ins_ext_cnt_reg[] =
{
	{ TEST_SOAM_MAC_INS_CNT, "soam_mac_ins_cnt", OHOAM_EF_BASE_ADDR, 0xe + OHIF_ASIC1, 15, 0, 0x0 },
	{ TEST_SOAM_MAC_EXT_CNT, "soam_mac_ext_cnt", OHOAM_EF_BASE_ADDR, 0xe + OHIF_ASIC1, 31, 16, 0x0 },
};
NEW_CHIP_REG test_test_oh_ext_err_reg[] =
{
	{ TEST_TEST_OH_EXT_ERR_0, "test_oh_ext_err_0", OHOAM_EF_BASE_ADDR, 0x6 + OHIF_ASIC1, 31, 0, 0x0 },
	{ TEST_TEST_OH_EXT_ERR_1, "test_oh_ext_err_1", OHOAM_EF_BASE_ADDR, 0x7 + OHIF_ASIC1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_test_alm_reg[] =
{
	{ TEST_TEST_TOLIUF_FULL_ALM, "test_toliuf_full_alm", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 0, 0, 0x0 },
	{ TEST_EXT_ETH_DNT_SQT, "ext_eth_dnt_sqt", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 1, 1, 0x0 },
	{ TEST_EXT_OAMREQ_DNT_SQT, "ext_oamreq_dnt_sqt", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 2, 2, 0x0 },
	{ TEST_REQ_MFI_CON_ERR, "req_mfi_con_err", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 15, 8, 0x0 },
	{ TEST_EXT_MFI_CON_ERR, "ext_mfi_con_err", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 23, 16, 0x0 },
	{ TEST_EXT_SSF_ALM, "ext_ssf_alm", OHOAM_EF_BASE_ADDR, 0xc + OHIF_ASIC1, 31, 24, 0x0 },
};

/*FLEXE_OH_RX*/
NEW_CHIP_REG test_flexe_oh_loopback_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_EN, "test_en", FLEXE_OH_RX_BASE_ADDR, 0x0, 0, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_OHRX_DIN_SRC_CFG, "ohrx_din_src_cfg", FLEXE_OH_RX_BASE_ADDR, 0x0, 1, 1, 0x0 },
	{ TEST_FLEXE_OH_RX_MUX2OHTX_CP_CFG, "mux2ohtx_cp_cfg", FLEXE_OH_RX_BASE_ADDR, 0x0, 2, 2, 0x0 },
};
NEW_CHIP_REG test_flexe_rx_mode_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_FLEXE_RX_MODE, "flexe_rx_mode", FLEXE_OH_RX_BASE_ADDR, 0x1, 1, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_MF16T32_RX_CFG, "mf16t32_rx_cfg", FLEXE_OH_RX_BASE_ADDR, 0x1, 2, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_OMF_CHK_CTRL, "omf_chk_ctrl", FLEXE_OH_RX_BASE_ADDR, 0x1, 3, 3, 0x0 },
	{ TEST_FLEXE_OH_RX_OMF_CRC_CTRL, "omf_crc_ctrl", FLEXE_OH_RX_BASE_ADDR, 0x1, 4, 4, 0x0 },
};
NEW_CHIP_REG test_alm_en_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_ALM_EN, "alm_en", FLEXE_OH_RX_BASE_ADDR, 0x2, 30, 0, 0x134d34d3 },
	{ TEST_FLEXE_OH_RX_CRC_RX_MODE, "crc_rx_mode", FLEXE_OH_RX_BASE_ADDR, 0x2, 31, 31, 0x0 },
};
NEW_CHIP_REG test_excc_oh_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_EXCCC, "exccc", FLEXE_OH_RX_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_EXSC, "exsc", FLEXE_OH_RX_BASE_ADDR, 0x3, 1, 1, 0x0 },
};
NEW_CHIP_REG test_exgid_oh_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_EXGID, "exgid", FLEXE_OH_RX_BASE_ADDR, 0x4, 19, 0, 0x1 },
	{ TEST_FLEXE_OH_RX_EXPID, "expid", FLEXE_OH_RX_BASE_ADDR, 0x4, 27, 20, 0x1 },
};
NEW_CHIP_REG test_fas_chk_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_OOF_SET_CFG, "oof_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x5, 3, 0, 0x5 },
	{ TEST_FLEXE_OH_RX_OOF_CLR_CFG, "oof_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x5, 7, 4, 0x2 },
	{ TEST_FLEXE_OH_RX_LOF_SET_CFG, "lof_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x5, 12, 8, 0x5 },
	{ TEST_FLEXE_OH_RX_LOF_CLR_CFG, "lof_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x5, 20, 16, 0x5 },
	{ TEST_FLEXE_OH_RX_FP_PATTERN_CFG, "fp_pattern_cfg", FLEXE_OH_RX_BASE_ADDR, 0x5, 22, 21, 0x0 },
};
NEW_CHIP_REG test_omf_chk_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_OOM_SET_CFG, "oom_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x6, 4, 0, 0x4 },
	{ TEST_FLEXE_OH_RX_OOM_CLR_CFG, "oom_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x6, 9, 5, 0x4 },
	{ TEST_FLEXE_OH_RX_LOM_SET_CFG, "lom_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x6, 14, 10, 0x6 },
	{ TEST_FLEXE_OH_RX_LOM_CLR_CFG, "lom_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x6, 20, 16, 0x6 },
};
NEW_CHIP_REG test_pad_chk_cfg_reg[] =
{
	{ TEST_FLEXE_OH_RX_OOP_SET_CFG, "oop_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x7, 3, 0, 0x5 },
	{ TEST_FLEXE_OH_RX_OOP_CLR_CFG, "oop_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x7, 7, 4, 0x2 },
	{ TEST_FLEXE_OH_RX_LOP_SET_CFG, "lop_set_cfg", FLEXE_OH_RX_BASE_ADDR, 0x7, 12, 8, 0x5 },
	{ TEST_FLEXE_OH_RX_LOP_CLR_CFG, "lop_clr_cfg", FLEXE_OH_RX_BASE_ADDR, 0x7, 20, 16, 0x5 },
};
NEW_CHIP_REG test_pad_alm_en_reg[] =
{
	{ TEST_FLEXE_OH_RX_PAD_ALM_EN, "pad_alm_en", FLEXE_OH_RX_BASE_ADDR, 0x8, 9, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_PCS_LF_EN, "pcs_lf_en", FLEXE_OH_RX_BASE_ADDR, 0x8, 10, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_CRC_ALM_EN, "crc_alm_en", FLEXE_OH_RX_BASE_ADDR, 0x8, 11, 11, 0x0 },
};
NEW_CHIP_REG test_cc_rx_value_reg[] =
{
	{ TEST_FLEXE_OH_RX_ACCCC, "acccc", FLEXE_OH_RX_BASE_ADDR, 0x10, 0, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_ACCR, "accr", FLEXE_OH_RX_BASE_ADDR, 0x10, 1, 1, 0x0 },
	{ TEST_FLEXE_OH_RX_ACCA, "acca", FLEXE_OH_RX_BASE_ADDR, 0x10, 2, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_ACSC, "acsc", FLEXE_OH_RX_BASE_ADDR, 0x10, 3, 3, 0x0 },
};
NEW_CHIP_REG test_id_rx_value_reg[] =
{
	{ TEST_FLEXE_OH_RX_ACGID, "acgid", FLEXE_OH_RX_BASE_ADDR, 0x11, 19, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_ACPID, "acpid", FLEXE_OH_RX_BASE_ADDR, 0x11, 27, 20, 0x0 },
};
NEW_CHIP_REG test_management_channel_section_reg[] =
{
	{ TEST_FLEXE_OH_RX_ACMC_SETION_0, "acmc_setion_0", FLEXE_OH_RX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_ACMC_SETION_1, "acmc_setion_1", FLEXE_OH_RX_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_ACMC_SETION_2, "acmc_setion_2", FLEXE_OH_RX_BASE_ADDR, 0x14, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_ACMC_SETION_3, "acmc_setion_3", FLEXE_OH_RX_BASE_ADDR, 0x15, 31, 0, 0x0 },
};
NEW_CHIP_REG test_management_channel_s2s_reg[] =
{
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_0, "ac_shim2shim_0", FLEXE_OH_RX_BASE_ADDR, 0x16, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_1, "ac_shim2shim_1", FLEXE_OH_RX_BASE_ADDR, 0x17, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_2, "ac_shim2shim_2", FLEXE_OH_RX_BASE_ADDR, 0x18, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_3, "ac_shim2shim_3", FLEXE_OH_RX_BASE_ADDR, 0x19, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_4, "ac_shim2shim_4", FLEXE_OH_RX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_SHIM2SHIM_5, "ac_shim2shim_5", FLEXE_OH_RX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
};
NEW_CHIP_REG test_reserved_rx_value_reg[] =
{
	{ TEST_FLEXE_OH_RX_AC_RESERVED1_0, "ac_reserved1_0", FLEXE_OH_RX_BASE_ADDR, 0x1e, 31, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_RESERVED1_1, "ac_reserved1_1", FLEXE_OH_RX_BASE_ADDR, 0x1f, 18, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_AC_RESERVED2, "ac_reserved2", FLEXE_OH_RX_BASE_ADDR, 0x1f, 31, 19, 0x0 },
};
NEW_CHIP_REG test_oh_rx_alm_reg[] =
{
	{ TEST_FLEXE_OH_RX_OOF_ALM, "OOF_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 0, 0, 0x1 },
	{ TEST_FLEXE_OH_RX_LOF_ALM, "LOF_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 1, 1, 0x1 },
	{ TEST_FLEXE_OH_RX_OOM_ALM, "OOM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 2, 2, 0x1 },
	{ TEST_FLEXE_OH_RX_LOM_ALM, "LOM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 3, 3, 0x1 },
	{ TEST_FLEXE_OH_RX_CRC_ALM, "CRC_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 4, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_GIDM_ALM, "GIDM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 5, 5, 0x0 },
	{ TEST_FLEXE_OH_RX_PIDM_ALM, "PIDM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 6, 6, 0x0 },
	{ TEST_FLEXE_OH_RX_PMM_ALM, "PMM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 7, 7, 0x0 },
	{ TEST_FLEXE_OH_RX_RPF_ALM, "RPF_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 8, 8, 0x0 },
	{ TEST_FLEXE_OH_RX_SCM_ALM, "SCM_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 9, 9, 0x0 },
	{ TEST_FLEXE_OH_RX_OOP_ALM, "OOP_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 10, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_LOP_ALM, "LOP_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 11, 11, 0x0 },
	{ TEST_FLEXE_OH_RX_OH1_BLOCK_ALM, "OH1_BLOCK_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 12, 12, 0x0 },
	{ TEST_FLEXE_OH_RX_C_BIT_ALM, "C_BIT_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 13, 13, 0x0 },
	{ TEST_FLEXE_OH_RX_GID_UNEQ_ALM, "GID_UNEQ_ALM", FLEXE_OH_RX_BASE_ADDR, 0x20, 14, 14, 0x0 },
};
NEW_CHIP_REG test_ccm_rx_alm_reg[] =
{
	{ TEST_FLEXE_OH_RX_CCM, "ccm", FLEXE_OH_RX_BASE_ADDR, 0x21, 19, 0, 0x0 },
};
NEW_CHIP_REG test_oh_alm_int_reg[] =
{
	{ TEST_FLEXE_OH_RX_LOF_ALM_INT, "lof_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 1, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_LOM_ALM_INT, "lom_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 3, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_GIDM_ALM_INT, "gidm_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 5, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_PIDM_ALM_INT, "pidm_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 7, 6, 0x0 },
	{ TEST_FLEXE_OH_RX_PMM_ALM_INT, "pmm_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 9, 8, 0x0 },
	{ TEST_FLEXE_OH_RX_RPF_ALM_INT, "rpf_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 11, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_DESKEW_ALM_INT, "deskew_alm_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 13, 12, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM0_INT, "ccm_alm0_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 15, 14, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM1_INT, "ccm_alm1_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 17, 16, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM2_INT, "ccm_alm2_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 19, 18, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM3_INT, "ccm_alm3_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 21, 20, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM4_INT, "ccm_alm4_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 23, 22, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM5_INT, "ccm_alm5_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 25, 24, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM6_INT, "ccm_alm6_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 27, 26, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM7_INT, "ccm_alm7_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 29, 28, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM8_INT, "ccm_alm8_int", FLEXE_OH_RX_BASE_ADDR, 0x30, 31, 30, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM9_INT, "ccm_alm9_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 1, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM10_INT, "ccm_alm10_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 3, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM11_INT, "ccm_alm11_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 5, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM12_INT, "ccm_alm12_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 7, 6, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM13_INT, "ccm_alm13_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 9, 8, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM14_INT, "ccm_alm14_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 11, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM15_INT, "ccm_alm15_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 13, 12, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM16_INT, "ccm_alm16_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 15, 14, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM17_INT, "ccm_alm17_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 17, 16, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM18_INT, "ccm_alm18_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 19, 18, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM19_INT, "ccm_alm19_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 21, 20, 0x0 },
	{ TEST_FLEXE_OH_RX_CR_STA_INT, "cr_sta_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 23, 22, 0x0 },
	{ TEST_FLEXE_OH_RX_CA_STA_INT, "ca_sta_int", FLEXE_OH_RX_BASE_ADDR, 0x31, 25, 24, 0x0 },
};
NEW_CHIP_REG test_oh_alm_int_mask_reg[] =
{
	{ TEST_FLEXE_OH_RX_LOF_ALM_INT_MASK, "lof_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 1, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_LOM_ALM_INT_MASK, "lom_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 3, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_GIDM_ALM_INT_MASK, "gidm_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 5, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_PIDM_ALM_INT_MASK, "pidm_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 7, 6, 0x0 },
	{ TEST_FLEXE_OH_RX_PMM_ALM_INT_MASK, "pmm_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 9, 8, 0x0 },
	{ TEST_FLEXE_OH_RX_RPF_ALM_INT_MASK, "rpf_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 11, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_DESKEW_ALM_INT_MASK, "deskew_alm_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 13, 12, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM0_INT_MASK, "ccm_alm0_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 15, 14, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM1_INT_MASK, "ccm_alm1_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 17, 16, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM2_INT_MASK, "ccm_alm2_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 19, 18, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM3_INT_MASK, "ccm_alm3_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 21, 20, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM4_INT_MASK, "ccm_alm4_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 23, 22, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM5_INT_MASK, "ccm_alm5_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 25, 24, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM6_INT_MASK, "ccm_alm6_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 27, 26, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM7_INT_MASK, "ccm_alm7_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 29, 28, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM8_INT_MASK, "ccm_alm8_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x32, 31, 30, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM9_INT_MASK, "ccm_alm9_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 1, 0, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM10_INT_MASK, "ccm_alm10_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 3, 2, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM11_INT_MASK, "ccm_alm11_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 5, 4, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM12_INT_MASK, "ccm_alm12_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 7, 6, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM13_INT_MASK, "ccm_alm13_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 9, 8, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM14_INT_MASK, "ccm_alm14_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 11, 10, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM15_INT_MASK, "ccm_alm15_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 13, 12, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM16_INT_MASK, "ccm_alm16_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 15, 14, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM17_INT_MASK, "ccm_alm17_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 17, 16, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM18_INT_MASK, "ccm_alm18_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 19, 18, 0x0 },
	{ TEST_FLEXE_OH_RX_CCM_ALM19_INT_MASK, "ccm_alm19_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 21, 20, 0x0 },
	{ TEST_FLEXE_OH_RX_CR_STA_INT_MASK, "cr_sta_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 23, 22, 0x0 },
	{ TEST_FLEXE_OH_RX_CA_STA_INT_MASK, "ca_sta_int_mask", FLEXE_OH_RX_BASE_ADDR, 0x33, 25, 24, 0x0 },
};


/*MAC_ADJ*/
NEW_CHIP_REG test_mac_adj_cfg_reg[] =
{
	{ TEST_MAC_ADJ_I_NOMINAL_VAL, "i_nominal_val", MAC_ADJ_BASE_ADDR, 0x0, 12, 0, 0xbb8 },
	{ TEST_MAC_ADJ_I_ADJ_P_I, "i_adj_p_i", MAC_ADJ_BASE_ADDR, 0x0, 28, 16, 0x12c },
	{ TEST_MAC_ADJ_I_ADJ_P_N, "i_adj_p_n", MAC_ADJ_BASE_ADDR, 0x1, 7, 0, 0x0 },
	{ TEST_MAC_ADJ_I_ADJ_P_D, "i_adj_p_d", MAC_ADJ_BASE_ADDR, 0x1, 15, 8, 0x0 },
	{ TEST_MAC_ADJ_I_ADJ_ONLY, "i_adj_only", MAC_ADJ_BASE_ADDR, 0x1, 16, 16, 0x0 },
	{ TEST_MAC_ADJ_I_FIFO_RESTART_EN, "i_fifo_restart_en", MAC_ADJ_BASE_ADDR, 0x1, 17, 17, 0x1 },
	{ TEST_MAC_ADJ_I_ADJ_ALM_RESTART_EN, "i_adj_alm_restart_en", MAC_ADJ_BASE_ADDR, 0x1, 18, 18, 0x1 },
	{ TEST_MAC_ADJ_I_PLL_COEFF, "i_pll_coeff", MAC_ADJ_BASE_ADDR, 0x1, 20, 19, 0x0 },
	{ TEST_MAC_ADJ_I_ADJ_P_D_EN, "i_adj_p_d_en", MAC_ADJ_BASE_ADDR, 0x1, 21, 21, 0x0 },
	{ TEST_MAC_ADJ_I_CFG_FINISH, "i_cfg_finish", MAC_ADJ_BASE_ADDR, 0x1, 22, 22, 0x0 },
};
NEW_CHIP_REG test_mac_del_cnt_cfg_reg[] =
{
	{ TEST_MAC_ADJ_CHID_DEL_CNT, "chid_del_cnt", MAC_ADJ_BASE_ADDR, 0xa6, 6, 0, 0x0 },
	{ TEST_MAC_ADJ_CLR_DEL_CNT, "clr_del_cnt", MAC_ADJ_BASE_ADDR, 0xa6, 8, 8, 0x0 },
};
NEW_CHIP_REG test_mac_adj_n_reg[] =
{
	{ TEST_MAC_ADJ_I_ADJ_N, "i_adj_n", MAC_ADJ_BASE_ADDR, 0xa8, 3, 0, 0x3 },
};
NEW_CHIP_REG test_mac_del_cnt_max_reg[] =
{
	{ TEST_MAC_ADJ_DEL_CNT_MAX, "del_cnt_max", MAC_ADJ_BASE_ADDR, 0xa7, 5, 0, 0x0 },
};
NEW_CHIP_REG test_mac_cnt_alm_reg[] =
{
	{ TEST_MAC_ADJ_O_ADJ_CNT_ALM_0, "o_adj_cnt_alm_0", MAC_ADJ_BASE_ADDR, 0xa0, 31, 0, 0x0 },
	{ TEST_MAC_ADJ_O_ADJ_CNT_ALM_1, "o_adj_cnt_alm_1", MAC_ADJ_BASE_ADDR, 0xa1, 31, 0, 0x0 },
	{ TEST_MAC_ADJ_O_ADJ_CNT_ALM_2, "o_adj_cnt_alm_2", MAC_ADJ_BASE_ADDR, 0xa2, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mac_core_alm_reg[] =
{
	{ TEST_MAC_ADJ_O_ADJ_CORE_ALM_0, "o_adj_core_alm_0", MAC_ADJ_BASE_ADDR, 0xa3, 31, 0, 0x0 },
	{ TEST_MAC_ADJ_O_ADJ_CORE_ALM_1, "o_adj_core_alm_1", MAC_ADJ_BASE_ADDR, 0xa4, 31, 0, 0x0 },
	{ TEST_MAC_ADJ_O_ADJ_CORE_ALM_2, "o_adj_core_alm_2", MAC_ADJ_BASE_ADDR, 0xa5, 15, 0, 0x0 },
};


/*FLEXE_MACRX*/
NEW_CHIP_REG test_flexe_macrx_stat_enable_reg[] =
{
	{ TEST_FLEXE_MACRX_STAT_EN_0, "stat_en_0", FLEXE_MACRX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_STAT_EN_1, "stat_en_1", FLEXE_MACRX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_STAT_EN_2, "stat_en_2", FLEXE_MACRX_BASE_ADDR, 0x6, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_statistic_clear_chan_reg[] =
{
	{ TEST_FLEXE_MACRX_STA_CLR_CHAN, "sta_clr_chan", FLEXE_MACRX_BASE_ADDR, 0xb, 6, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_decode_sel_reg[] =
{
	{ TEST_FLEXE_MACRX_DECODE_SEL, "decode_sel", FLEXE_MACRX_BASE_ADDR, 0xd, 0, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_statistic_clear_reg[] =
{
	{ TEST_FLEXE_MACRX_STA_CLR_PLS, "sta_clr_pls", FLEXE_MACRX_BASE_ADDR, 0xc, 0, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_statistic_all_clr_reg[] =
{
	{ TEST_FLEXE_MACRX_STA_ALL_CLR, "sta_all_clr", FLEXE_MACRX_BASE_ADDR, 0xf, 1, 1, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_sta_ram_init_done_reg[] =
{
	{ TEST_FLEXE_MACRX_STA_RAM_INIT_DONE, "sta_ram_init_done", FLEXE_MACRX_BASE_ADDR, 0x30, 0, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_error_reg[] =
{
	{ TEST_FLEXE_MACRX_SOP_WARNING, "sop_warning", FLEXE_MACRX_BASE_ADDR, 0x40, 0, 0, 0x0 },
	{ TEST_FLEXE_MACRX_EOP_WARNING, "eop_warning", FLEXE_MACRX_BASE_ADDR, 0x40, 1, 1, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_fault_alm_reg[] =
{
	{ TEST_FLEXE_MACRX_ARM_DECODE_ERR_0, "arm_decode_err_0", FLEXE_MACRX_BASE_ADDR, 0x58, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_DECODE_ERR_1, "arm_decode_err_1", FLEXE_MACRX_BASE_ADDR, 0x59, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_DECODE_ERR_2, "arm_decode_err_2", FLEXE_MACRX_BASE_ADDR, 0x5a, 15, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_RF_0, "arm_rf_0", FLEXE_MACRX_BASE_ADDR, 0x55, 31, 16, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_RF_1, "arm_rf_1", FLEXE_MACRX_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_RF_2, "arm_rf_2", FLEXE_MACRX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_LF_0, "arm_lf_0", FLEXE_MACRX_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_LF_1, "arm_lf_1", FLEXE_MACRX_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_ARM_LF_2, "arm_lf_2", FLEXE_MACRX_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_sta_ram_ecc_correct_alm_reg[] =
{
	{ TEST_FLEXE_MACRX_ENCODE_ERR_CODE_ECC_ERR_CORRECT1, "encode_err_code_ecc_err_correct1", FLEXE_MACRX_BASE_ADDR, 0x60, 0, 0, 0x0 },
	{ TEST_FLEXE_MACRX_DECODE_ERR_CODE_ECC_ERR_CORRECT, "decode_err_code_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 1, 1, 0x0 },
	{ TEST_FLEXE_MACRX_TOTAL_FRAME_ECC_ERR_CORRECT, "total_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 2, 2, 0x0 },
	{ TEST_FLEXE_MACRX_GOOD_FRAME_ECC_ERR_CORRECT, "good_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 3, 3, 0x0 },
	{ TEST_FLEXE_MACRX_BAD_FRAME_ECC_ERR_CORRECT, "bad_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 4, 4, 0x0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_FRAME_ECC_ERR_CORRECT, "fragment_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 5, 5, 0x0 },
	{ TEST_FLEXE_MACRX_JABBER_FRAME_ECC_ERR_CORRECT, "jabber_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 6, 6, 0x0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_FRAME_ECC_ERR_CORRECT, "oversize_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 7, 7, 0x0 },
	{ TEST_FLEXE_MACRX_UNICAST_FRAME_ECC_ERR_CORRECT, "unicast_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 8, 8, 0x0 },
	{ TEST_FLEXE_MACRX_MULTICAST_FRAME_ECC_ERR_CORRECT, "multicast_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 9, 9, 0x0 },
	{ TEST_FLEXE_MACRX_BROADCAST_FRAME_ECC_ERR_CORRECT, "broadcast_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 10, 10, 0x0 },
	{ TEST_FLEXE_MACRX_B64_FRAME_ECC_ERR_CORRECT, "b64_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 11, 11, 0x0 },
	{ TEST_FLEXE_MACRX_B65_MPL_FRAME_ECC_ERR_CORRECT, "b65_mpl_frame_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 12, 12, 0x0 },
	{ TEST_FLEXE_MACRX_TOTAL_BYTES_ECC_ERR_CORRECT, "total_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 13, 13, 0x0 },
	{ TEST_FLEXE_MACRX_GOOD_BYTES_ECC_ERR_CORRECT, "good_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 14, 14, 0x0 },
	{ TEST_FLEXE_MACRX_BAD_BYTES_ECC_ERR_CORRECT, "bad_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 15, 15, 0x0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_BYTES_ECC_ERR_CORRECT, "fragment_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 16, 16, 0x0 },
	{ TEST_FLEXE_MACRX_JABBER_BYTES_ECC_ERR_CORRECT, "jabber_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 17, 17, 0x0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_BYTES_ECC_ERR_CORRECT, "oversize_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 18, 18, 0x0 },
	{ TEST_FLEXE_MACRX_UNICAST_BYTES_ECC_ERR_CORRECT, "unicast_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 19, 19, 0x0 },
	{ TEST_FLEXE_MACRX_MULTICAST_BYTES_ECC_ERR_CORRECT, "multicast_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 20, 20, 0x0 },
	{ TEST_FLEXE_MACRX_BROADCAST_BYTES_ECC_ERR_CORRECT, "broadcast_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 21, 21, 0x0 },
	{ TEST_FLEXE_MACRX_B64_BYTES_ECC_ERR_CORRECT, "b64_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 22, 22, 0x0 },
	{ TEST_FLEXE_MACRX_B65_MPL_BYTES_ECC_ERR_CORRECT, "b65_mpl_bytes_ecc_err_correct", FLEXE_MACRX_BASE_ADDR, 0x60, 23, 23, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_sta_ram_ecc_uncorrect_alm_reg[] =
{
	{ TEST_FLEXE_MACRX_B64_BYTES_ECC_ERR_UNCORRECT, "b64_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 22, 22, 0x0 },
	{ TEST_FLEXE_MACRX_B65_MPL_BYTES_ECC_ERR_UNCORRECT, "b65_mpl_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 23, 23, 0x0 },
	{ TEST_FLEXE_MACRX_ENCODE_ERR_CODE_ECC_ERR_UNCORRECT1, "encode_err_code_ecc_err_uncorrect1", FLEXE_MACRX_BASE_ADDR, 0x61, 0, 0, 0x0 },
	{ TEST_FLEXE_MACRX_DECODE_ERR_CODE_ECC_ERR_UNCORRECT, "decode_err_code_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 1, 1, 0x0 },
	{ TEST_FLEXE_MACRX_TOTAL_FRAME_ECC_ERR_UNCORRECT, "total_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 2, 2, 0x0 },
	{ TEST_FLEXE_MACRX_GOOD_FRAME_ECC_ERR_UNCORRECT, "good_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 3, 3, 0x0 },
	{ TEST_FLEXE_MACRX_BAD_FRAME_ECC_ERR_UNCORRECT, "bad_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 4, 4, 0x0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_FRAME_ECC_ERR_UNCORRECT, "fragment_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 5, 5, 0x0 },
	{ TEST_FLEXE_MACRX_JABBER_FRAME_ECC_ERR_UNCORRECT, "jabber_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 6, 6, 0x0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_FRAME_ECC_ERR_UNCORRECT, "oversize_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 7, 7, 0x0 },
	{ TEST_FLEXE_MACRX_UNICAST_FRAME_ECC_ERR_UNCORRECT, "unicast_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 8, 8, 0x0 },
	{ TEST_FLEXE_MACRX_MULTICAST_FRAME_ECC_ERR_UNCORRECT, "multicast_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 9, 9, 0x0 },
	{ TEST_FLEXE_MACRX_BROADCAST_FRAME_ECC_ERR_UNCORRECT, "broadcast_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 10, 10, 0x0 },
	{ TEST_FLEXE_MACRX_B64_FRAME_ECC_ERR_UNCORRECT, "b64_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 11, 11, 0x0 },
	{ TEST_FLEXE_MACRX_B65_MPL_FRAME_ECC_ERR_UNCORRECT, "b65_mpl_frame_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 12, 12, 0x0 },
	{ TEST_FLEXE_MACRX_TOTAL_BYTES_ECC_ERR_UNCORRECT, "total_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 13, 13, 0x0 },
	{ TEST_FLEXE_MACRX_GOOD_BYTES_ECC_ERR_UNCORRECT, "good_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 14, 14, 0x0 },
	{ TEST_FLEXE_MACRX_BAD_BYTES_ECC_ERR_UNCORRECT, "bad_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 15, 15, 0x0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_BYTES_ECC_ERR_UNCORRECT, "fragment_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 16, 16, 0x0 },
	{ TEST_FLEXE_MACRX_JABBER_BYTES_ECC_ERR_UNCORRECT, "jabber_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 17, 17, 0x0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_BYTES_ECC_ERR_UNCORRECT, "oversize_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 18, 18, 0x0 },
	{ TEST_FLEXE_MACRX_UNICAST_BYTES_ECC_ERR_UNCORRECT, "unicast_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 19, 19, 0x0 },
	{ TEST_FLEXE_MACRX_MULTICAST_BYTES_ECC_ERR_UNCORRECT, "multicast_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 20, 20, 0x0 },
	{ TEST_FLEXE_MACRX_BROADCAST_BYTES_ECC_ERR_UNCORRECT, "broadcast_bytes_ecc_err_uncorrect", FLEXE_MACRX_BASE_ADDR, 0x61, 21, 21, 0x0 },
};
NEW_CHIP_REG test_flexe_macrx_eop_abnor_alm_reg[] =
{
	{ TEST_FLEXE_MACRX_EOP_ABNOR_ALM_0, "eop_abnor_alm_0", FLEXE_MACRX_BASE_ADDR, 0x62, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_EOP_ABNOR_ALM_1, "eop_abnor_alm_1", FLEXE_MACRX_BASE_ADDR, 0x63, 31, 0, 0x0 },
	{ TEST_FLEXE_MACRX_EOP_ABNOR_ALM_2, "eop_abnor_alm_2", FLEXE_MACRX_BASE_ADDR, 0x64, 15, 0, 0x0 },
};


/*PCS_TX_BASIC*/
/*
NEW_CHIP_REG test_enable_tx_fault_100g_reg[] =
{
	{ TEST_PCS_TX_ENABLE_TX_CLK_FAULT_100G, "enable_tx_clk_fault_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 1, 0, 0x3 },
	{ TEST_PCS_TX_ENABLE_TX_SYNC_FAULT_100G, "enable_tx_sync_fault_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 3, 2, 0x3 },
	{ TEST_PCS_TX_ENABLE_TX_HI_BER_100G, "enable_tx_hi_ber_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 5, 4, 0x3 },
	{ TEST_PCS_TX_ENABLE_TX_DESKEW_FAULT_100G, "enable_tx_deskew_fault_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 7, 6, 0x3 },
	{ TEST_PCS_TX_ENABLE_TX_AM_FAULT_100G, "enable_tx_am_fault_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 9, 8, 0x3 },
	{ TEST_PCS_TX_ENABLE_RX_FAULT_100G, "enable_rx_fault_100g", PCS_TX_BASIC_BASE_ADDR, 0x0, 11, 10, 0x3 },
};
NEW_CHIP_REG test_manual_fault_insert_100g_reg[] =
{
	{ TEST_PCS_TX_MANUAL_RF_INSERT_100G, "manual_rf_insert_100g", PCS_TX_BASIC_BASE_ADDR, 0x1, 1, 0, 0x0 },
	{ TEST_PCS_TX_MANUAL_LF_INSERT_100G, "manual_lf_insert_100g", PCS_TX_BASIC_BASE_ADDR, 0x1, 3, 2, 0x0 },
	{ TEST_PCS_TX_MANUAL_IDLE_INSERT_100G, "manual_idle_insert_100g", PCS_TX_BASIC_BASE_ADDR, 0x1, 5, 4, 0x0 },
	{ TEST_PCS_TX_MANUAL_LPI_INSERT_100G, "manual_lpi_insert_100g", PCS_TX_BASIC_BASE_ADDR, 0x1, 7, 6, 0x0 },
};
NEW_CHIP_REG test_insert_pattern_100g_reg[] =
{
	{ TEST_PCS_TX_REMOTE_FAULT_CONFIG_100G, "remote_fault_config_100g", PCS_TX_BASIC_BASE_ADDR, 0x2, 3, 0, 0x5 },
	{ TEST_PCS_TX_LOCAL_FAULT_CONFIG_100G, "local_fault_config_100g", PCS_TX_BASIC_BASE_ADDR, 0x2, 7, 4, 0xf },
};
NEW_CHIP_REG test_pcs_mode_100g_reg[] =
{
	{ TEST_PCS_TX_TX_TEST_EN_100G, "tx_test_en_100g", PCS_TX_BASIC_BASE_ADDR, 0x3, 1, 0, 0x0 },
	{ TEST_PCS_TX_IS_FLEXE_100G, "is_flexe_100g", PCS_TX_BASIC_BASE_ADDR, 0x3, 3, 2, 0x0 },
};
NEW_CHIP_REG test_chid_cfg_pcs0_100g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS0_100G, "chid_cfg_pcs0_100g", PCS_TX_BASIC_BASE_ADDR, 0x4, 5, 0, 0x0 },
};
NEW_CHIP_REG test_chid_cfg_pcs1_100g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS1_100G, "chid_cfg_pcs1_100g", PCS_TX_BASIC_BASE_ADDR, 0x5, 5, 0, 0x1 },
};
NEW_CHIP_REG test_enable_tx_fault_50g_reg[] =
{
	{ TEST_PCS_TX_ENABLE_TX_CLK_FAULT_50G, "enable_tx_clk_fault_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 3, 0, 0xf },
	{ TEST_PCS_TX_ENABLE_TX_SYNC_FAULT_50G, "enable_tx_sync_fault_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 7, 4, 0xf },
	{ TEST_PCS_TX_ENABLE_TX_HI_BER_50G, "enable_tx_hi_ber_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 11, 8, 0xf },
	{ TEST_PCS_TX_ENABLE_TX_DESKEW_FAULT_50G, "enable_tx_deskew_fault_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 15, 12, 0xf },
	{ TEST_PCS_TX_ENABLE_TX_AM_FAULT_50G, "enable_tx_am_fault_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 19, 16, 0xf },
	{ TEST_PCS_TX_ENABLE_RX_FAULT_50G, "enable_rx_fault_50g", PCS_TX_BASIC_BASE_ADDR, 0x9, 23, 20, 0xf },
};
NEW_CHIP_REG test_manual_fault_insert_50g_reg[] =
{
	{ TEST_PCS_TX_MANUAL_RF_INSERT_50G, "manual_rf_insert_50g", PCS_TX_BASIC_BASE_ADDR, 0xa, 3, 0, 0x0 },
	{ TEST_PCS_TX_MANUAL_LF_INSERT_50G, "manual_lf_insert_50g", PCS_TX_BASIC_BASE_ADDR, 0xa, 7, 4, 0x0 },
	{ TEST_PCS_TX_MANUAL_IDLE_INSERT_50G, "manual_idle_insert_50g", PCS_TX_BASIC_BASE_ADDR, 0xa, 11, 8, 0x0 },
	{ TEST_PCS_TX_MANUAL_LPI_INSERT_50G, "manual_lpi_insert_50g", PCS_TX_BASIC_BASE_ADDR, 0xa, 15, 12, 0x0 },
};
NEW_CHIP_REG test_insert_pattern_50g_reg[] =
{
	{ TEST_PCS_TX_REMOTE_FAULT_CONFIG_50G, "remote_fault_config_50g", PCS_TX_BASIC_BASE_ADDR, 0xb, 7, 0, 0x55 },
	{ TEST_PCS_TX_LOCAL_FAULT_CONFIG_50G, "local_fault_config_50g", PCS_TX_BASIC_BASE_ADDR, 0xb, 15, 8, 0xff },
};
NEW_CHIP_REG test_pcs_mode_50g_reg[] =
{
	{ TEST_PCS_TX_TX_TEST_EN_50G, "tx_test_en_50g", PCS_TX_BASIC_BASE_ADDR, 0xc, 3, 0, 0x0 },
	{ TEST_PCS_TX_IS_FLEXE_50G, "is_flexe_50g", PCS_TX_BASIC_BASE_ADDR, 0xc, 7, 4, 0x0 },
};
NEW_CHIP_REG test_chid_cfg_pcs0_50g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS0_50G, "chid_cfg_pcs0_50g", PCS_TX_BASIC_BASE_ADDR, 0xd, 5, 0, 0x0 },
};
NEW_CHIP_REG test_chid_cfg_pcs1_50g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS1_50G, "chid_cfg_pcs1_50g", PCS_TX_BASIC_BASE_ADDR, 0xe, 5, 0, 0x1 },
};
NEW_CHIP_REG test_chid_cfg_pcs2_50g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS2_50G, "chid_cfg_pcs2_50g", PCS_TX_BASIC_BASE_ADDR, 0xf, 5, 0, 0x2 },
};
NEW_CHIP_REG test_chid_cfg_pcs3_50g_reg[] =
{
	{ TEST_PCS_TX_CHID_CFG_PCS3_50G, "chid_cfg_pcs3_50g", PCS_TX_BASIC_BASE_ADDR, 0x10, 5, 0, 0x3 },
};
NEW_CHIP_REG test_pcs_tx_loop_reg[] =
{
	{ TEST_PCS_TX_LOOP, "pcs_tx_loop", PCS_TX_BASIC_BASE_ADDR, 0x14, 0, 0, 0x0 },
};
NEW_CHIP_REG test_lf_truncate_reg[] =
{
	{ TEST_PCS_TX_LF_TRUNCATE, "lf_truncate", PCS_TX_BASIC_BASE_ADDR, 0x15, 0, 0, 0x0 },
};
NEW_CHIP_REG test_bypass_scram_reg[] =
{
	{ TEST_PCS_TX_BYPASS_SCRAM, "bypass_scram", PCS_TX_BASIC_BASE_ADDR, 0x16, 0, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_level_cfg_pcs_reg[] =
{
	{ TEST_PCS_TX_HIG_LVL_PCS, "hig_lvl_pcs", PCS_TX_BASIC_BASE_ADDR, 0x17, 5, 0, 0x1a },
	{ TEST_PCS_TX_STA_LVL_PCS, "sta_lvl_pcs", PCS_TX_BASIC_BASE_ADDR, 0x17, 13, 8, 0x10 },
	{ TEST_PCS_TX_LOW_LVL_PCS, "low_lvl_pcs", PCS_TX_BASIC_BASE_ADDR, 0x17, 21, 16, 0x6 },
};
NEW_CHIP_REG test_req_sel_100g_reg[] =
{
	{ TEST_PCS_TX_REQ_SEL_100G0, "req_sel_100g0", PCS_TX_BASIC_BASE_ADDR, 0x1a, 0, 0, 0x0 },
	{ TEST_PCS_TX_REQ_SEL_100G1, "req_sel_100g1", PCS_TX_BASIC_BASE_ADDR, 0x1a, 1, 1, 0x1 },
};
NEW_CHIP_REG test_req_sel_50g_reg[] =
{
	{ TEST_PCS_TX_REQ_SEL_50G0, "req_sel_50g0", PCS_TX_BASIC_BASE_ADDR, 0x1b, 1, 0, 0x0 },
	{ TEST_PCS_TX_REQ_SEL_50G1, "req_sel_50g1", PCS_TX_BASIC_BASE_ADDR, 0x1b, 3, 2, 0x1 },
	{ TEST_PCS_TX_REQ_SEL_50G2, "req_sel_50g2", PCS_TX_BASIC_BASE_ADDR, 0x1b, 5, 4, 0x2 },
	{ TEST_PCS_TX_REQ_SEL_50G3, "req_sel_50g3", PCS_TX_BASIC_BASE_ADDR, 0x1b, 7, 6, 0x3 },
};
NEW_CHIP_REG test_rst_n_pro_reg[] =
{
	{ TEST_PCS_TX_RST_N_PRO, "rst_n_pro", PCS_TX_BASIC_BASE_ADDR, 0x1d, 3, 0, 0xf },
};
NEW_CHIP_REG test_cnt_cur_reg[] =
{
	{ TEST_PCS_TX_CNT_CUR_PHY0, "cnt_cur_phy0", PCS_TX_BASIC_BASE_ADDR, 0x1c, 5, 0, 0x0 },
	{ TEST_PCS_TX_CNT_CUR_PHY1, "cnt_cur_phy1", PCS_TX_BASIC_BASE_ADDR, 0x1c, 13, 8, 0x0 },
	{ TEST_PCS_TX_CNT_CUR_PHY2, "cnt_cur_phy2", PCS_TX_BASIC_BASE_ADDR, 0x1c, 21, 16, 0x0 },
	{ TEST_PCS_TX_CNT_CUR_PHY3, "cnt_cur_phy3", PCS_TX_BASIC_BASE_ADDR, 0x1c, 29, 24, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm0_100g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_660_330_100G, "full_gb_660_330_100g", PCS_TX_BASIC_BASE_ADDR, 0x6, 1, 0, 0x0 },
	{ TEST_PCS_TX_FULL_GB_640_320_100G, "full_gb_640_320_100g", PCS_TX_BASIC_BASE_ADDR, 0x6, 3, 2, 0x0 },
	{ TEST_PCS_TX_FULL_AM_PLACE_CAL_100G, "full_am_place_cal_100g", PCS_TX_BASIC_BASE_ADDR, 0x6, 5, 4, 0x0 },
	{ TEST_PCS_TX_EMPTY_AM_PLACE_CAL_100G, "empty_am_place_cal_100g", PCS_TX_BASIC_BASE_ADDR, 0x6, 7, 6, 0x0 },
	{ TEST_PCS_TX_T_ERR_100G, "t_err_100g", PCS_TX_BASIC_BASE_ADDR, 0x6, 9, 8, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm1_100g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_66_16_PCS0_100G, "full_gb_66_16_pcs0_100g", PCS_TX_BASIC_BASE_ADDR, 0x7, 19, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm2_100g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_66_16_PCS1_100G, "full_gb_66_16_pcs1_100g", PCS_TX_BASIC_BASE_ADDR, 0x8, 19, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm0_50g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_660_264_50G, "full_gb_660_264_50g", PCS_TX_BASIC_BASE_ADDR, 0x11, 3, 0, 0x0 },
	{ TEST_PCS_TX_FULL_GB_320_160_50G, "full_gb_320_160_50g", PCS_TX_BASIC_BASE_ADDR, 0x11, 7, 4, 0x0 },
	{ TEST_PCS_TX_FULL_AM_PLACE_CAL_50G, "full_am_place_cal_50g", PCS_TX_BASIC_BASE_ADDR, 0x11, 11, 8, 0x0 },
	{ TEST_PCS_TX_EMPTY_AM_PLACE_CAL_50G, "empty_am_place_cal_50g", PCS_TX_BASIC_BASE_ADDR, 0x11, 15, 12, 0x0 },
	{ TEST_PCS_TX_T_ERR_50G, "t_err_50g", PCS_TX_BASIC_BASE_ADDR, 0x11, 19, 16, 0x0 },
};

NEW_CHIP_REG test_fifo_alarm1_50g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_66_44_50G, "full_gb_66_44_50g", PCS_TX_BASIC_BASE_ADDR, 0x12, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm2_50g_reg[] =
{
	{ TEST_PCS_TX_FULL_GB_44_40_50G, "full_gb_44_40_50g", PCS_TX_BASIC_BASE_ADDR, 0x13, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm3_100g_reg[] =
{
	{ TEST_PCS_TX_HIG_ALM_100G, "hig_alm_100g", PCS_TX_BASIC_BASE_ADDR, 0x18, 1, 0, 0x0 },
	{ TEST_PCS_TX_LOW_ALM_100G, "low_alm_100g", PCS_TX_BASIC_BASE_ADDR, 0x18, 3, 2, 0x0 },
};
NEW_CHIP_REG test_fifo_alarm3_50g_reg[] =
{
	{ TEST_PCS_TX_HIG_ALM_50G, "hig_alm_50g", PCS_TX_BASIC_BASE_ADDR, 0x19, 3, 0, 0x0 },
	{ TEST_PCS_TX_LOW_ALM_50G, "low_alm_50g", PCS_TX_BASIC_BASE_ADDR, 0x19, 7, 4, 0x0 },
};
*/
/*B66SAR_RX*/
NEW_CHIP_REG test_cpb2sar_m_1st_reg[] =
{
	{ TEST_CPB2SAR_M_1ST, "cpb2sar_m_1st", B66SAR_RX_311M_BASE_ADDR, 0x0, 31, 0, 0xab77b8b0 },
};
NEW_CHIP_REG test_cpb2sar_base_m_1st_reg[] =
{
	{ TEST_CPB2SAR_BASE_M_1ST, "cpb2sar_base_m_1st", B66SAR_RX_311M_BASE_ADDR, 0x1, 31, 0, 0xab77c2b0 },
};
NEW_CHIP_REG test_cpb2sar_cfg_311m_reg[] =
{
	{ TEST_CPB2SAR_MULTIPLIER, "cpb2sar_multiplier", B66SAR_RX_311M_BASE_ADDR, 0x2, 1, 0, 0x3 },
	{ TEST_CPB2SAR_BYPASS_M_N_2ND, "cpb2sar_bypass_m_n_2nd", B66SAR_RX_311M_BASE_ADDR, 0x2, 2, 2, 0x0 },
};
NEW_CHIP_REG test_cpb2sar_m_2nd_reg[] =
{
	{ TEST_CPB2SAR_M_2ND, "cpb2sar_m_2nd", B66SAR_RX_311M_BASE_ADDR, 0x3, 31, 0, 0xfebc44ff },
};
NEW_CHIP_REG test_cpb2sar_base_m_2nd_reg[] =
{
	{ TEST_CPB2SAR_BASE_M_2ND, "cpb2sar_base_m_2nd", B66SAR_RX_311M_BASE_ADDR, 0x4, 31, 0, 0xfff8d4ff },
};

/*flexe_oam_tx*/
NEW_CHIP_REG test_flexe_oam_joit_bip_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_BRK_CFG, "bas_brk_cfg", FLEXE_OAM_TX_BASE_ADDR, 0x0, 2, 2, 0x1 },
	{ TEST_FLEXE_OAM_TX_LPI_INSERT_EN, "lpi_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 3, 3, 0x1 },
	{ TEST_FLEXE_OAM_TX_LF_INSERT_EN, "lf_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 4, 4, 0x1 },
	{ TEST_FLEXE_OAM_TX_RF_INSERT_EN, "rf_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 5, 5, 0x1 },
	{ TEST_FLEXE_OAM_TX_BAS_BRK_CH_CFG, "bas_brk_ch_cfg", FLEXE_OAM_TX_BASE_ADDR, 0x0, 12, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_TS_1DM_INSERT_EN, "ts_1dm_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 13, 13, 0x0 },
	{ TEST_FLEXE_OAM_TX_TS_2DMM_INSERT_EN, "ts_2dmm_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 14, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_TS_2DMR_INSERT_EN, "ts_2dmr_insert_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_FLEXE_OAM_TX_TS_DM_SEL, "ts_dm_sel", FLEXE_OAM_TX_BASE_ADDR, 0x0, 16, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_FAULT_RPL_EN, "fault_rpl_en", FLEXE_OAM_TX_BASE_ADDR, 0x0, 17, 17, 0x1 },
};
NEW_CHIP_REG test_flexe_bas_idty_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_IDTY_CFG, "bas_idty_cfg", FLEXE_OAM_TX_BASE_ADDR, 0x1, 3, 0, 0xc },
};
NEW_CHIP_REG test_flexe_bas_period_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG_0, "bas_period_cfg_0", FLEXE_OAM_TX_BASE_ADDR, 0x2, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG_1, "bas_period_cfg_1", FLEXE_OAM_TX_BASE_ADDR, 0x3, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG_2, "bas_period_cfg_2", FLEXE_OAM_TX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG_3, "bas_period_cfg_3", FLEXE_OAM_TX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG_4, "bas_period_cfg_4", FLEXE_OAM_TX_BASE_ADDR, 0x6, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_seq_type_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_SEQ_TYPE_CFG_0, "seq_type_cfg_0", FLEXE_OAM_TX_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_TYPE_CFG_1, "seq_type_cfg_1", FLEXE_OAM_TX_BASE_ADDR, 0x8, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_TYPE_CFG_2, "seq_type_cfg_2", FLEXE_OAM_TX_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_seq_num_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_0, "seq_num_cfg_0", FLEXE_OAM_TX_BASE_ADDR, 0xa, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_1, "seq_num_cfg_1", FLEXE_OAM_TX_BASE_ADDR, 0xb, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_2, "seq_num_cfg_2", FLEXE_OAM_TX_BASE_ADDR, 0xc, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_3, "seq_num_cfg_3", FLEXE_OAM_TX_BASE_ADDR, 0xd, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_4, "seq_num_cfg_4", FLEXE_OAM_TX_BASE_ADDR, 0xe, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_5, "seq_num_cfg_5", FLEXE_OAM_TX_BASE_ADDR, 0xf, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_6, "seq_num_cfg_6", FLEXE_OAM_TX_BASE_ADDR, 0x10, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_7, "seq_num_cfg_7", FLEXE_OAM_TX_BASE_ADDR, 0x11, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_8, "seq_num_cfg_8", FLEXE_OAM_TX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_SEQ_NUM_CFG_9, "seq_num_cfg_9", FLEXE_OAM_TX_BASE_ADDR, 0x13, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_crc_rev_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CRC_REV_CFG, "crc_rev_cfg", FLEXE_OAM_TX_BASE_ADDR, 0x14, 0, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_CRC_REV_CFG, "oth_crc_rev_cfg", FLEXE_OAM_TX_BASE_ADDR, 0x14, 1, 1, 0x0 },
};
NEW_CHIP_REG test_flexe_tx_idle_rpl_en_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_IDLE_RPL_EN_0, "tx_idle_rpl_en_0", FLEXE_OAM_TX_BASE_ADDR, 0x15, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_IDLE_RPL_EN_1, "tx_idle_rpl_en_1", FLEXE_OAM_TX_BASE_ADDR, 0x16, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_IDLE_RPL_EN_2, "tx_idle_rpl_en_2", FLEXE_OAM_TX_BASE_ADDR, 0x17, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_oam_tx_bypass_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OAM_TX_BYPASS, "oam_tx_bypass", FLEXE_OAM_TX_BASE_ADDR, 0x18, 0, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bip_err_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BIP_ERR_MASK, "bip_err_mask", FLEXE_OAM_TX_BASE_ADDR, 0x19, 7, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_manual_insert_csf_lpi_reg[] =
{
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LPI_0, "manual_insert_csf_lpi_0", FLEXE_OAM_TX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LPI_1, "manual_insert_csf_lpi_1", FLEXE_OAM_TX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LPI_2, "manual_insert_csf_lpi_2", FLEXE_OAM_TX_BASE_ADDR, 0x1c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_manual_insert_csf_lf_reg[] =
{
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LF_0, "manual_insert_csf_lf_0", FLEXE_OAM_TX_BASE_ADDR, 0x1d, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LF_1, "manual_insert_csf_lf_1", FLEXE_OAM_TX_BASE_ADDR, 0x1e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_LF_2, "manual_insert_csf_lf_2", FLEXE_OAM_TX_BASE_ADDR, 0x1f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_manual_insert_csf_rf_reg[] =
{
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_RF_0, "manual_insert_csf_rf_0", FLEXE_OAM_TX_BASE_ADDR, 0x20, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_RF_1, "manual_insert_csf_rf_1", FLEXE_OAM_TX_BASE_ADDR, 0x21, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_CSF_RF_2, "manual_insert_csf_rf_2", FLEXE_OAM_TX_BASE_ADDR, 0x22, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bip_err_level_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BIP_ERR_LEVEL_0, "bip_err_level_0", FLEXE_OAM_TX_BASE_ADDR, 0x23, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BIP_ERR_LEVEL_1, "bip_err_level_1", FLEXE_OAM_TX_BASE_ADDR, 0x24, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BIP_ERR_LEVEL_2, "bip_err_level_2", FLEXE_OAM_TX_BASE_ADDR, 0x25, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_tx_bypass_client_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OAM_TX_BYPASS_CLIENT_0, "oam_tx_bypass_client_0", FLEXE_OAM_TX_BASE_ADDR, 0x26, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OAM_TX_BYPASS_CLIENT_1, "oam_tx_bypass_client_1", FLEXE_OAM_TX_BASE_ADDR, 0x27, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OAM_TX_BYPASS_CLIENT_2, "oam_tx_bypass_client_2", FLEXE_OAM_TX_BASE_ADDR, 0x28, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_manual_insert_rdi_reg[] =
{
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_RDI_0, "manual_insert_rdi_0", FLEXE_OAM_TX_BASE_ADDR, 0x29, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_RDI_1, "manual_insert_rdi_1", FLEXE_OAM_TX_BASE_ADDR, 0x2a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_MANUAL_INSERT_RDI_2, "manual_insert_rdi_2", FLEXE_OAM_TX_BASE_ADDR, 0x2b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_period_cfg01_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG0, "bas_period_cfg0", FLEXE_OAM_TX_BASE_ADDR, 0x6d, 8, 0, 0xf },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG1, "bas_period_cfg1", FLEXE_OAM_TX_BASE_ADDR, 0x6d, 17, 9, 0x1f },
};
NEW_CHIP_REG test_flexe_bas_period_cfg23_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG2, "bas_period_cfg2", FLEXE_OAM_TX_BASE_ADDR, 0x6e, 8, 0, 0x3f },
	{ TEST_FLEXE_OAM_TX_BAS_PERIOD_CFG3, "bas_period_cfg3", FLEXE_OAM_TX_BASE_ADDR, 0x6e, 17, 9, 0x1ff },
};
NEW_CHIP_REG test_flexe_bas_en_cfg_asic_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_EN_CFG_ASIC_0, "bas_en_cfg_asic_0", FLEXE_OAM_TX_BASE_ADDR, 0x70, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_BAS_EN_CFG_ASIC_1, "bas_en_cfg_asic_1", FLEXE_OAM_TX_BASE_ADDR, 0x71, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_BAS_EN_CFG_ASIC_2, "bas_en_cfg_asic_2", FLEXE_OAM_TX_BASE_ADDR, 0x72, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_oam_pri_encode_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OAM_PRI_ENCODE, "oam_pri_encode", FLEXE_OAM_TX_BASE_ADDR, 0x73, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_SOURCE_SEL, "bas_source_sel", FLEXE_OAM_TX_BASE_ADDR, 0x73, 2, 2, 0x1 },
};
NEW_CHIP_REG test_flexe_tx_ohif_fifo_sel_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_OHIF_FIFO_SEL_0, "tx_ohif_fifo_sel_0", FLEXE_OAM_TX_BASE_ADDR, 0x74, 31, 0, 0x2c },
	{ TEST_FLEXE_OAM_TX_TX_OHIF_FIFO_SEL_1, "tx_ohif_fifo_sel_1", FLEXE_OAM_TX_BASE_ADDR, 0x75, 31, 0, 0x554 },
	{ TEST_FLEXE_OAM_TX_TX_OHIF_FIFO_SEL_2, "tx_ohif_fifo_sel_2", FLEXE_OAM_TX_BASE_ADDR, 0x76, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_OHIF_FIFO_SEL_3, "tx_ohif_fifo_sel_3", FLEXE_OAM_TX_BASE_ADDR, 0x77, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_cnt_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OAM_CNT_CH_CFG, "oam_cnt_ch_cfg", FLEXE_OAM_TX_BASE_ADDR, 0xb4, 6, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OAM_CNT_CLR, "oam_cnt_clr", FLEXE_OAM_TX_BASE_ADDR, 0xb4, 7, 7, 0x0 },
};
NEW_CHIP_REG test_flexe_tx_lpi_idle_rpl_en_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_LPI_IDLE_RPL_EN_0, "tx_lpi_idle_rpl_en_0", FLEXE_OAM_TX_BASE_ADDR, 0xb5, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_LPI_IDLE_RPL_EN_1, "tx_lpi_idle_rpl_en_1", FLEXE_OAM_TX_BASE_ADDR, 0xb6, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_LPI_IDLE_RPL_EN_2, "tx_lpi_idle_rpl_en_2", FLEXE_OAM_TX_BASE_ADDR, 0xb7, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_tx_insert_66bcode_en_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_INSERT_66BCODE_EN_0, "tx_insert_66bcode_en_0", FLEXE_OAM_TX_BASE_ADDR, 0xbd, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_INSERT_66BCODE_EN_1, "tx_insert_66bcode_en_1", FLEXE_OAM_TX_BASE_ADDR, 0xbe, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_INSERT_66BCODE_EN_2, "tx_insert_66bcode_en_2", FLEXE_OAM_TX_BASE_ADDR, 0xbf, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_new_period_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_NEW_PERIOD_CFG, "new_period_cfg", FLEXE_OAM_TX_BASE_ADDR, 0xc0, 8, 0, 0xf },
	{ TEST_FLEXE_OAM_TX_APS_PERIOD_CFG, "aps_period_cfg", FLEXE_OAM_TX_BASE_ADDR, 0xc0, 20, 12, 0xf },
};
NEW_CHIP_REG test_flexe_tx_bas_fifo_num_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_BAS_FIFO_NUM, "tx_bas_fifo_num", FLEXE_OAM_TX_BASE_ADDR, 0xc1, 5, 0, 0xc },
};
NEW_CHIP_REG test_flexe_tx_lpi_setclr_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_LPI_PRE_CNT, "lpi_pre_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xc2, 2, 0, 0x3 },
	{ TEST_FLEXE_OAM_TX_LPI_POS_CNT, "lpi_pos_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xc2, 6, 4, 0x3 },
};
NEW_CHIP_REG test_flexe_insert_66bcode_cfg_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FLEXE_INSERT_66BCODE_CFG_0, "flexe_insert_66bcode_cfg_0", FLEXE_OAM_TX_BASE_ADDR, 0xc3, 31, 0, 0x79 },
	{ TEST_FLEXE_OAM_TX_FLEXE_INSERT_66BCODE_CFG_1, "flexe_insert_66bcode_cfg_1", FLEXE_OAM_TX_BASE_ADDR, 0xc4, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FLEXE_INSERT_66BCODE_CFG_2, "flexe_insert_66bcode_cfg_2", FLEXE_OAM_TX_BASE_ADDR, 0xc5, 1, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_joit_bip_cfg2_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OAM_JOIT_BIP_CFG_0, "oam_joit_bip_cfg_0", FLEXE_OAM_TX_BASE_ADDR, 0xc6, 31, 0, 0xfffffffd },
	{ TEST_FLEXE_OAM_TX_OAM_JOIT_BIP_CFG_1, "oam_joit_bip_cfg_1", FLEXE_OAM_TX_BASE_ADDR, 0xc7, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_flexe_tx_lpi_bas_ins_en_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_LPI_BAS_INS_EN_0, "tx_lpi_bas_ins_en_0", FLEXE_OAM_TX_BASE_ADDR, 0xc8, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_LPI_BAS_INS_EN_1, "tx_lpi_bas_ins_en_1", FLEXE_OAM_TX_BASE_ADDR, 0xc9, 31, 0, 0xffffffff },
	{ TEST_FLEXE_OAM_TX_TX_LPI_BAS_INS_EN_2, "tx_lpi_bas_ins_en_2", FLEXE_OAM_TX_BASE_ADDR, 0xca, 15, 0, 0xffff },
};
NEW_CHIP_REG test_flexe_bas_crc_err_en_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TX_BAS_CRC_ERR_EN_0, "tx_bas_crc_err_en_0", FLEXE_OAM_TX_BASE_ADDR, 0xcb, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_BAS_CRC_ERR_EN_1, "tx_bas_crc_err_en_1", FLEXE_OAM_TX_BASE_ADDR, 0xcc, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_BAS_CRC_ERR_EN_2, "tx_bas_crc_err_en_2", FLEXE_OAM_TX_BASE_ADDR, 0xcd, 15, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TX_BAS_CRC_ERR_MASK, "tx_bas_crc_err_mask", FLEXE_OAM_TX_BASE_ADDR, 0xcd, 19, 16, 0x0 },
};
NEW_CHIP_REG test_flexe_bip_err_pulse_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BIP_ERR_PULSE_0, "bip_err_pulse_0", FLEXE_OAM_TX_BASE_ADDR, 0x2c, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BIP_ERR_PULSE_1, "bip_err_pulse_1", FLEXE_OAM_TX_BASE_ADDR, 0x2d, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BIP_ERR_PULSE_2, "bip_err_pulse_2", FLEXE_OAM_TX_BASE_ADDR, 0x2e, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_data_err_pulse_reg[] =
{
	{ TEST_FLEXE_OAM_TX_DATA_ERR_PULSE_0, "data_err_pulse_0", FLEXE_OAM_TX_BASE_ADDR, 0x69, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_DATA_ERR_PULSE_1, "data_err_pulse_1", FLEXE_OAM_TX_BASE_ADDR, 0x6a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_DATA_ERR_PULSE_2, "data_err_pulse_2", FLEXE_OAM_TX_BASE_ADDR, 0x6b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_0t3_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_0, "bas_insert_cnt_0", FLEXE_OAM_TX_BASE_ADDR, 0x2f, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_1, "bas_insert_cnt_1", FLEXE_OAM_TX_BASE_ADDR, 0x2f, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_2, "bas_insert_cnt_2", FLEXE_OAM_TX_BASE_ADDR, 0x2f, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_3, "bas_insert_cnt_3", FLEXE_OAM_TX_BASE_ADDR, 0x2f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_4t7_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_4, "bas_insert_cnt_4", FLEXE_OAM_TX_BASE_ADDR, 0x30, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_5, "bas_insert_cnt_5", FLEXE_OAM_TX_BASE_ADDR, 0x30, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_6, "bas_insert_cnt_6", FLEXE_OAM_TX_BASE_ADDR, 0x30, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_7, "bas_insert_cnt_7", FLEXE_OAM_TX_BASE_ADDR, 0x30, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_8t11_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_8, "bas_insert_cnt_8", FLEXE_OAM_TX_BASE_ADDR, 0x31, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_9, "bas_insert_cnt_9", FLEXE_OAM_TX_BASE_ADDR, 0x31, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_10, "bas_insert_cnt_10", FLEXE_OAM_TX_BASE_ADDR, 0x31, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_11, "bas_insert_cnt_11", FLEXE_OAM_TX_BASE_ADDR, 0x31, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_12t15_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_12, "bas_insert_cnt_12", FLEXE_OAM_TX_BASE_ADDR, 0x32, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_13, "bas_insert_cnt_13", FLEXE_OAM_TX_BASE_ADDR, 0x32, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_14, "bas_insert_cnt_14", FLEXE_OAM_TX_BASE_ADDR, 0x32, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_15, "bas_insert_cnt_15", FLEXE_OAM_TX_BASE_ADDR, 0x32, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_16t19_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_16, "bas_insert_cnt_16", FLEXE_OAM_TX_BASE_ADDR, 0x33, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_17, "bas_insert_cnt_17", FLEXE_OAM_TX_BASE_ADDR, 0x33, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_18, "bas_insert_cnt_18", FLEXE_OAM_TX_BASE_ADDR, 0x33, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_19, "bas_insert_cnt_19", FLEXE_OAM_TX_BASE_ADDR, 0x33, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_20t23_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_20, "bas_insert_cnt_20", FLEXE_OAM_TX_BASE_ADDR, 0x34, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_21, "bas_insert_cnt_21", FLEXE_OAM_TX_BASE_ADDR, 0x34, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_22, "bas_insert_cnt_22", FLEXE_OAM_TX_BASE_ADDR, 0x34, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_23, "bas_insert_cnt_23", FLEXE_OAM_TX_BASE_ADDR, 0x34, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_24t27_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_24, "bas_insert_cnt_24", FLEXE_OAM_TX_BASE_ADDR, 0x35, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_25, "bas_insert_cnt_25", FLEXE_OAM_TX_BASE_ADDR, 0x35, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_26, "bas_insert_cnt_26", FLEXE_OAM_TX_BASE_ADDR, 0x35, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_27, "bas_insert_cnt_27", FLEXE_OAM_TX_BASE_ADDR, 0x35, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_28t31_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_30, "bas_insert_cnt_30", FLEXE_OAM_TX_BASE_ADDR, 0x36, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_31, "bas_insert_cnt_31", FLEXE_OAM_TX_BASE_ADDR, 0x36, 31, 24, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_28, "bas_insert_cnt_28", FLEXE_OAM_TX_BASE_ADDR, 0x36, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_29, "bas_insert_cnt_29", FLEXE_OAM_TX_BASE_ADDR, 0x36, 15, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_32t35_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_32, "bas_insert_cnt_32", FLEXE_OAM_TX_BASE_ADDR, 0x37, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_33, "bas_insert_cnt_33", FLEXE_OAM_TX_BASE_ADDR, 0x37, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_34, "bas_insert_cnt_34", FLEXE_OAM_TX_BASE_ADDR, 0x37, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_35, "bas_insert_cnt_35", FLEXE_OAM_TX_BASE_ADDR, 0x37, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_36t39_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_36, "bas_insert_cnt_36", FLEXE_OAM_TX_BASE_ADDR, 0x38, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_37, "bas_insert_cnt_37", FLEXE_OAM_TX_BASE_ADDR, 0x38, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_38, "bas_insert_cnt_38", FLEXE_OAM_TX_BASE_ADDR, 0x38, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_39, "bas_insert_cnt_39", FLEXE_OAM_TX_BASE_ADDR, 0x38, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_40t43_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_40, "bas_insert_cnt_40", FLEXE_OAM_TX_BASE_ADDR, 0x39, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_41, "bas_insert_cnt_41", FLEXE_OAM_TX_BASE_ADDR, 0x39, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_42, "bas_insert_cnt_42", FLEXE_OAM_TX_BASE_ADDR, 0x39, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_43, "bas_insert_cnt_43", FLEXE_OAM_TX_BASE_ADDR, 0x39, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_44t47_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_44, "bas_insert_cnt_44", FLEXE_OAM_TX_BASE_ADDR, 0x3a, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_45, "bas_insert_cnt_45", FLEXE_OAM_TX_BASE_ADDR, 0x3a, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_46, "bas_insert_cnt_46", FLEXE_OAM_TX_BASE_ADDR, 0x3a, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_47, "bas_insert_cnt_47", FLEXE_OAM_TX_BASE_ADDR, 0x3a, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_48t51_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_48, "bas_insert_cnt_48", FLEXE_OAM_TX_BASE_ADDR, 0x3b, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_49, "bas_insert_cnt_49", FLEXE_OAM_TX_BASE_ADDR, 0x3b, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_50, "bas_insert_cnt_50", FLEXE_OAM_TX_BASE_ADDR, 0x3b, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_51, "bas_insert_cnt_51", FLEXE_OAM_TX_BASE_ADDR, 0x3b, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_52t55_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_52, "bas_insert_cnt_52", FLEXE_OAM_TX_BASE_ADDR, 0x3c, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_53, "bas_insert_cnt_53", FLEXE_OAM_TX_BASE_ADDR, 0x3c, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_54, "bas_insert_cnt_54", FLEXE_OAM_TX_BASE_ADDR, 0x3c, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_55, "bas_insert_cnt_55", FLEXE_OAM_TX_BASE_ADDR, 0x3c, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_56t59_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_56, "bas_insert_cnt_56", FLEXE_OAM_TX_BASE_ADDR, 0x3d, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_57, "bas_insert_cnt_57", FLEXE_OAM_TX_BASE_ADDR, 0x3d, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_58, "bas_insert_cnt_58", FLEXE_OAM_TX_BASE_ADDR, 0x3d, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_59, "bas_insert_cnt_59", FLEXE_OAM_TX_BASE_ADDR, 0x3d, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_60t63_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_60, "bas_insert_cnt_60", FLEXE_OAM_TX_BASE_ADDR, 0x3e, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_61, "bas_insert_cnt_61", FLEXE_OAM_TX_BASE_ADDR, 0x3e, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_62, "bas_insert_cnt_62", FLEXE_OAM_TX_BASE_ADDR, 0x3e, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_63, "bas_insert_cnt_63", FLEXE_OAM_TX_BASE_ADDR, 0x3e, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_64t67_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_64, "bas_insert_cnt_64", FLEXE_OAM_TX_BASE_ADDR, 0x3f, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_65, "bas_insert_cnt_65", FLEXE_OAM_TX_BASE_ADDR, 0x3f, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_66, "bas_insert_cnt_66", FLEXE_OAM_TX_BASE_ADDR, 0x3f, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_67, "bas_insert_cnt_67", FLEXE_OAM_TX_BASE_ADDR, 0x3f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_68t71_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_68, "bas_insert_cnt_68", FLEXE_OAM_TX_BASE_ADDR, 0x40, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_69, "bas_insert_cnt_69", FLEXE_OAM_TX_BASE_ADDR, 0x40, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_70, "bas_insert_cnt_70", FLEXE_OAM_TX_BASE_ADDR, 0x40, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_71, "bas_insert_cnt_71", FLEXE_OAM_TX_BASE_ADDR, 0x40, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_72t75_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_72, "bas_insert_cnt_72", FLEXE_OAM_TX_BASE_ADDR, 0x41, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_73, "bas_insert_cnt_73", FLEXE_OAM_TX_BASE_ADDR, 0x41, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_74, "bas_insert_cnt_74", FLEXE_OAM_TX_BASE_ADDR, 0x41, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_75, "bas_insert_cnt_75", FLEXE_OAM_TX_BASE_ADDR, 0x41, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_insert_cnt_76t79_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_76, "bas_insert_cnt_76", FLEXE_OAM_TX_BASE_ADDR, 0x42, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_77, "bas_insert_cnt_77", FLEXE_OAM_TX_BASE_ADDR, 0x42, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_78, "bas_insert_cnt_78", FLEXE_OAM_TX_BASE_ADDR, 0x42, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_BAS_INSERT_CNT_79, "bas_insert_cnt_79", FLEXE_OAM_TX_BASE_ADDR, 0x42, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_0t3_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_0, "oth_insert_cnt_0", FLEXE_OAM_TX_BASE_ADDR, 0x43, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_1, "oth_insert_cnt_1", FLEXE_OAM_TX_BASE_ADDR, 0x43, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_2, "oth_insert_cnt_2", FLEXE_OAM_TX_BASE_ADDR, 0x43, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_3, "oth_insert_cnt_3", FLEXE_OAM_TX_BASE_ADDR, 0x43, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_4t7_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_4, "oth_insert_cnt_4", FLEXE_OAM_TX_BASE_ADDR, 0x44, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_5, "oth_insert_cnt_5", FLEXE_OAM_TX_BASE_ADDR, 0x44, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_6, "oth_insert_cnt_6", FLEXE_OAM_TX_BASE_ADDR, 0x44, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_7, "oth_insert_cnt_7", FLEXE_OAM_TX_BASE_ADDR, 0x44, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_8t11_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_8, "oth_insert_cnt_8", FLEXE_OAM_TX_BASE_ADDR, 0x45, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_9, "oth_insert_cnt_9", FLEXE_OAM_TX_BASE_ADDR, 0x45, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_10, "oth_insert_cnt_10", FLEXE_OAM_TX_BASE_ADDR, 0x45, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_11, "oth_insert_cnt_11", FLEXE_OAM_TX_BASE_ADDR, 0x45, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_12t15_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_12, "oth_insert_cnt_12", FLEXE_OAM_TX_BASE_ADDR, 0x46, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_13, "oth_insert_cnt_13", FLEXE_OAM_TX_BASE_ADDR, 0x46, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_14, "oth_insert_cnt_14", FLEXE_OAM_TX_BASE_ADDR, 0x46, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_15, "oth_insert_cnt_15", FLEXE_OAM_TX_BASE_ADDR, 0x46, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_16t19_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_18, "oth_insert_cnt_18", FLEXE_OAM_TX_BASE_ADDR, 0x47, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_19, "oth_insert_cnt_19", FLEXE_OAM_TX_BASE_ADDR, 0x47, 31, 24, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_16, "oth_insert_cnt_16", FLEXE_OAM_TX_BASE_ADDR, 0x47, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_17, "oth_insert_cnt_17", FLEXE_OAM_TX_BASE_ADDR, 0x47, 15, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_20t23_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_20, "oth_insert_cnt_20", FLEXE_OAM_TX_BASE_ADDR, 0x48, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_21, "oth_insert_cnt_21", FLEXE_OAM_TX_BASE_ADDR, 0x48, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_22, "oth_insert_cnt_22", FLEXE_OAM_TX_BASE_ADDR, 0x48, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_23, "oth_insert_cnt_23", FLEXE_OAM_TX_BASE_ADDR, 0x48, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_24t27_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_24, "oth_insert_cnt_24", FLEXE_OAM_TX_BASE_ADDR, 0x49, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_25, "oth_insert_cnt_25", FLEXE_OAM_TX_BASE_ADDR, 0x49, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_26, "oth_insert_cnt_26", FLEXE_OAM_TX_BASE_ADDR, 0x49, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_27, "oth_insert_cnt_27", FLEXE_OAM_TX_BASE_ADDR, 0x49, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_28t31_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_28, "oth_insert_cnt_28", FLEXE_OAM_TX_BASE_ADDR, 0x4a, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_29, "oth_insert_cnt_29", FLEXE_OAM_TX_BASE_ADDR, 0x4a, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_30, "oth_insert_cnt_30", FLEXE_OAM_TX_BASE_ADDR, 0x4a, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_31, "oth_insert_cnt_31", FLEXE_OAM_TX_BASE_ADDR, 0x4a, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_32t35_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_32, "oth_insert_cnt_32", FLEXE_OAM_TX_BASE_ADDR, 0x4b, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_33, "oth_insert_cnt_33", FLEXE_OAM_TX_BASE_ADDR, 0x4b, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_34, "oth_insert_cnt_34", FLEXE_OAM_TX_BASE_ADDR, 0x4b, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_35, "oth_insert_cnt_35", FLEXE_OAM_TX_BASE_ADDR, 0x4b, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_36t39_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_36, "oth_insert_cnt_36", FLEXE_OAM_TX_BASE_ADDR, 0x4c, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_37, "oth_insert_cnt_37", FLEXE_OAM_TX_BASE_ADDR, 0x4c, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_38, "oth_insert_cnt_38", FLEXE_OAM_TX_BASE_ADDR, 0x4c, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_39, "oth_insert_cnt_39", FLEXE_OAM_TX_BASE_ADDR, 0x4c, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_40t43_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_40, "oth_insert_cnt_40", FLEXE_OAM_TX_BASE_ADDR, 0x4d, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_41, "oth_insert_cnt_41", FLEXE_OAM_TX_BASE_ADDR, 0x4d, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_42, "oth_insert_cnt_42", FLEXE_OAM_TX_BASE_ADDR, 0x4d, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_43, "oth_insert_cnt_43", FLEXE_OAM_TX_BASE_ADDR, 0x4d, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_44t47_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_44, "oth_insert_cnt_44", FLEXE_OAM_TX_BASE_ADDR, 0x4e, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_45, "oth_insert_cnt_45", FLEXE_OAM_TX_BASE_ADDR, 0x4e, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_46, "oth_insert_cnt_46", FLEXE_OAM_TX_BASE_ADDR, 0x4e, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_47, "oth_insert_cnt_47", FLEXE_OAM_TX_BASE_ADDR, 0x4e, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_48t51_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_48, "oth_insert_cnt_48", FLEXE_OAM_TX_BASE_ADDR, 0x4f, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_49, "oth_insert_cnt_49", FLEXE_OAM_TX_BASE_ADDR, 0x4f, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_50, "oth_insert_cnt_50", FLEXE_OAM_TX_BASE_ADDR, 0x4f, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_51, "oth_insert_cnt_51", FLEXE_OAM_TX_BASE_ADDR, 0x4f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_52t55_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_52, "oth_insert_cnt_52", FLEXE_OAM_TX_BASE_ADDR, 0x50, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_53, "oth_insert_cnt_53", FLEXE_OAM_TX_BASE_ADDR, 0x50, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_54, "oth_insert_cnt_54", FLEXE_OAM_TX_BASE_ADDR, 0x50, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_55, "oth_insert_cnt_55", FLEXE_OAM_TX_BASE_ADDR, 0x50, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_56t59_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_56, "oth_insert_cnt_56", FLEXE_OAM_TX_BASE_ADDR, 0x51, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_57, "oth_insert_cnt_57", FLEXE_OAM_TX_BASE_ADDR, 0x51, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_58, "oth_insert_cnt_58", FLEXE_OAM_TX_BASE_ADDR, 0x51, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_59, "oth_insert_cnt_59", FLEXE_OAM_TX_BASE_ADDR, 0x51, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_60t63_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_60, "oth_insert_cnt_60", FLEXE_OAM_TX_BASE_ADDR, 0x52, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_61, "oth_insert_cnt_61", FLEXE_OAM_TX_BASE_ADDR, 0x52, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_62, "oth_insert_cnt_62", FLEXE_OAM_TX_BASE_ADDR, 0x52, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_63, "oth_insert_cnt_63", FLEXE_OAM_TX_BASE_ADDR, 0x52, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_64t67_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_64, "oth_insert_cnt_64", FLEXE_OAM_TX_BASE_ADDR, 0x53, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_65, "oth_insert_cnt_65", FLEXE_OAM_TX_BASE_ADDR, 0x53, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_66, "oth_insert_cnt_66", FLEXE_OAM_TX_BASE_ADDR, 0x53, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_67, "oth_insert_cnt_67", FLEXE_OAM_TX_BASE_ADDR, 0x53, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_68t71_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_68, "oth_insert_cnt_68", FLEXE_OAM_TX_BASE_ADDR, 0x54, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_69, "oth_insert_cnt_69", FLEXE_OAM_TX_BASE_ADDR, 0x54, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_70, "oth_insert_cnt_70", FLEXE_OAM_TX_BASE_ADDR, 0x54, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_71, "oth_insert_cnt_71", FLEXE_OAM_TX_BASE_ADDR, 0x54, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_72t75_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_72, "oth_insert_cnt_72", FLEXE_OAM_TX_BASE_ADDR, 0x55, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_73, "oth_insert_cnt_73", FLEXE_OAM_TX_BASE_ADDR, 0x55, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_74, "oth_insert_cnt_74", FLEXE_OAM_TX_BASE_ADDR, 0x55, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_75, "oth_insert_cnt_75", FLEXE_OAM_TX_BASE_ADDR, 0x55, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_oth_insert_cnt_76t79_reg[] =
{
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_76, "oth_insert_cnt_76", FLEXE_OAM_TX_BASE_ADDR, 0x56, 7, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_77, "oth_insert_cnt_77", FLEXE_OAM_TX_BASE_ADDR, 0x56, 15, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_78, "oth_insert_cnt_78", FLEXE_OAM_TX_BASE_ADDR, 0x56, 23, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_OTH_INSERT_CNT_79, "oth_insert_cnt_79", FLEXE_OAM_TX_BASE_ADDR, 0x56, 31, 24, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_brk_cnt_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_BRK_CNT, "bas_brk_cnt", FLEXE_OAM_TX_BASE_ADDR, 0x6c, 2, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_bas_cnt_reg[] =
{
	{ TEST_FLEXE_OAM_TX_BAS_CNT, "bas_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xb0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_aps_cnt_reg[] =
{
	{ TEST_FLEXE_OAM_TX_APS_CNT, "aps_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xb1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_low_cnt_reg[] =
{
	{ TEST_FLEXE_OAM_TX_LOW_CNT, "low_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xb2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_new_cnt_reg[] =
{
	{ TEST_FLEXE_OAM_TX_NEW_CNT, "new_cnt", FLEXE_OAM_TX_BASE_ADDR, 0xb3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_timestamp_lock_reg[] =
{
	{ TEST_FLEXE_OAM_TX_TIMESTAMP_LOCK_0, "timestamp_lock_0", FLEXE_OAM_TX_BASE_ADDR, 0xbb, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_TIMESTAMP_LOCK_1, "timestamp_lock_1", FLEXE_OAM_TX_BASE_ADDR, 0xbc, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_0, "csf_lpi_0", FLEXE_OAM_TX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_1, "csf_lpi_1", FLEXE_OAM_TX_BASE_ADDR, 0x58, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_2, "csf_lpi_2", FLEXE_OAM_TX_BASE_ADDR, 0x59, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_0, "csf_lf_0", FLEXE_OAM_TX_BASE_ADDR, 0x5a, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_1, "csf_lf_1", FLEXE_OAM_TX_BASE_ADDR, 0x5b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_2, "csf_lf_2", FLEXE_OAM_TX_BASE_ADDR, 0x5c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_0, "csf_rf_0", FLEXE_OAM_TX_BASE_ADDR, 0x5d, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_1, "csf_rf_1", FLEXE_OAM_TX_BASE_ADDR, 0x5e, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_2, "csf_rf_2", FLEXE_OAM_TX_BASE_ADDR, 0x5f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_full_rei_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_REI_0, "fifo_full_rei_0", FLEXE_OAM_TX_BASE_ADDR, 0x60, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_REI_1, "fifo_full_rei_1", FLEXE_OAM_TX_BASE_ADDR, 0x61, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_REI_2, "fifo_full_rei_2", FLEXE_OAM_TX_BASE_ADDR, 0x62, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_full_aps_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_APS_0, "fifo_full_aps_0", FLEXE_OAM_TX_BASE_ADDR, 0x63, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_APS_1, "fifo_full_aps_1", FLEXE_OAM_TX_BASE_ADDR, 0x64, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_APS_2, "fifo_full_aps_2", FLEXE_OAM_TX_BASE_ADDR, 0x65, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_full_low_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_LOW_0, "fifo_full_low_0", FLEXE_OAM_TX_BASE_ADDR, 0x66, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_LOW_1, "fifo_full_low_1", FLEXE_OAM_TX_BASE_ADDR, 0x67, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_LOW_2, "fifo_full_low_2", FLEXE_OAM_TX_BASE_ADDR, 0x68, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_full_bas_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_BAS_0, "fifo_full_bas_0", FLEXE_OAM_TX_BASE_ADDR, 0x78, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_BAS_1, "fifo_full_bas_1", FLEXE_OAM_TX_BASE_ADDR, 0x79, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_BAS_2, "fifo_full_bas_2", FLEXE_OAM_TX_BASE_ADDR, 0x7a, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_full_new_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_NEW_0, "fifo_full_new_0", FLEXE_OAM_TX_BASE_ADDR, 0x7b, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_NEW_1, "fifo_full_new_1", FLEXE_OAM_TX_BASE_ADDR, 0x7c, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_FULL_NEW_2, "fifo_full_new_2", FLEXE_OAM_TX_BASE_ADDR, 0x7d, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_fifo_empty_bas_reg[] =
{
	{ TEST_FLEXE_OAM_TX_FIFO_EMPTY_BAS_0, "fifo_empty_bas_0", FLEXE_OAM_TX_BASE_ADDR, 0xb8, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_EMPTY_BAS_1, "fifo_empty_bas_1", FLEXE_OAM_TX_BASE_ADDR, 0xb9, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_FIFO_EMPTY_BAS_2, "fifo_empty_bas_2", FLEXE_OAM_TX_BASE_ADDR, 0xba, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_0_INT, "csf_lpi_0_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_1_INT, "csf_lpi_1_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_2_INT, "csf_lpi_2_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_3_INT, "csf_lpi_3_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_4_INT, "csf_lpi_4_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_5_INT, "csf_lpi_5_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_6_INT, "csf_lpi_6_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_7_INT, "csf_lpi_7_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_8_INT, "csf_lpi_8_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_9_INT, "csf_lpi_9_int", FLEXE_OAM_TX_BASE_ADDR, 0x80, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_0_INT_MASK, "csf_lpi_0_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_1_INT_MASK, "csf_lpi_1_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_2_INT_MASK, "csf_lpi_2_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_3_INT_MASK, "csf_lpi_3_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_4_INT_MASK, "csf_lpi_4_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_5_INT_MASK, "csf_lpi_5_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_6_INT_MASK, "csf_lpi_6_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_7_INT_MASK, "csf_lpi_7_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_8_INT_MASK, "csf_lpi_8_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_9_INT_MASK, "csf_lpi_9_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x81, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_10_INT, "csf_lpi_10_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_11_INT, "csf_lpi_11_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_12_INT, "csf_lpi_12_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_13_INT, "csf_lpi_13_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_14_INT, "csf_lpi_14_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_15_INT, "csf_lpi_15_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_16_INT, "csf_lpi_16_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_17_INT, "csf_lpi_17_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_18_INT, "csf_lpi_18_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_19_INT, "csf_lpi_19_int", FLEXE_OAM_TX_BASE_ADDR, 0x82, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_10_INT_MASK, "csf_lpi_10_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_11_INT_MASK, "csf_lpi_11_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_12_INT_MASK, "csf_lpi_12_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_13_INT_MASK, "csf_lpi_13_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_14_INT_MASK, "csf_lpi_14_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_15_INT_MASK, "csf_lpi_15_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_16_INT_MASK, "csf_lpi_16_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_17_INT_MASK, "csf_lpi_17_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_18_INT_MASK, "csf_lpi_18_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_19_INT_MASK, "csf_lpi_19_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x83, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_20_INT, "csf_lpi_20_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_21_INT, "csf_lpi_21_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_22_INT, "csf_lpi_22_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_23_INT, "csf_lpi_23_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_24_INT, "csf_lpi_24_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_25_INT, "csf_lpi_25_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_26_INT, "csf_lpi_26_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_27_INT, "csf_lpi_27_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_28_INT, "csf_lpi_28_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_29_INT, "csf_lpi_29_int", FLEXE_OAM_TX_BASE_ADDR, 0x84, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_20_INT_MASK, "csf_lpi_20_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_21_INT_MASK, "csf_lpi_21_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_22_INT_MASK, "csf_lpi_22_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_23_INT_MASK, "csf_lpi_23_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_24_INT_MASK, "csf_lpi_24_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_25_INT_MASK, "csf_lpi_25_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_26_INT_MASK, "csf_lpi_26_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_27_INT_MASK, "csf_lpi_27_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_28_INT_MASK, "csf_lpi_28_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_29_INT_MASK, "csf_lpi_29_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x85, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_36_INT, "csf_lpi_36_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_37_INT, "csf_lpi_37_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_38_INT, "csf_lpi_38_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_39_INT, "csf_lpi_39_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_30_INT, "csf_lpi_30_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_31_INT, "csf_lpi_31_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_32_INT, "csf_lpi_32_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_33_INT, "csf_lpi_33_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_34_INT, "csf_lpi_34_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_35_INT, "csf_lpi_35_int", FLEXE_OAM_TX_BASE_ADDR, 0x86, 11, 10, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_35_INT_MASK, "csf_lpi_35_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_36_INT_MASK, "csf_lpi_36_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_37_INT_MASK, "csf_lpi_37_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_38_INT_MASK, "csf_lpi_38_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_39_INT_MASK, "csf_lpi_39_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_30_INT_MASK, "csf_lpi_30_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_31_INT_MASK, "csf_lpi_31_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_32_INT_MASK, "csf_lpi_32_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_33_INT_MASK, "csf_lpi_33_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_34_INT_MASK, "csf_lpi_34_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x87, 9, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_40_INT, "csf_lpi_40_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_41_INT, "csf_lpi_41_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_42_INT, "csf_lpi_42_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_43_INT, "csf_lpi_43_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_44_INT, "csf_lpi_44_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_45_INT, "csf_lpi_45_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_46_INT, "csf_lpi_46_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_47_INT, "csf_lpi_47_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_48_INT, "csf_lpi_48_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_49_INT, "csf_lpi_49_int", FLEXE_OAM_TX_BASE_ADDR, 0x88, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_40_INT_MASK, "csf_lpi_40_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_41_INT_MASK, "csf_lpi_41_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_42_INT_MASK, "csf_lpi_42_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_43_INT_MASK, "csf_lpi_43_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_44_INT_MASK, "csf_lpi_44_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_45_INT_MASK, "csf_lpi_45_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_46_INT_MASK, "csf_lpi_46_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_47_INT_MASK, "csf_lpi_47_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_48_INT_MASK, "csf_lpi_48_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_49_INT_MASK, "csf_lpi_49_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x89, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i5_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_57_INT, "csf_lpi_57_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_58_INT, "csf_lpi_58_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_59_INT, "csf_lpi_59_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_50_INT, "csf_lpi_50_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_51_INT, "csf_lpi_51_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_52_INT, "csf_lpi_52_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_53_INT, "csf_lpi_53_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_54_INT, "csf_lpi_54_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_55_INT, "csf_lpi_55_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_56_INT, "csf_lpi_56_int", FLEXE_OAM_TX_BASE_ADDR, 0x8a, 13, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i5_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_57_INT_MASK, "csf_lpi_57_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_58_INT_MASK, "csf_lpi_58_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_59_INT_MASK, "csf_lpi_59_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_50_INT_MASK, "csf_lpi_50_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_51_INT_MASK, "csf_lpi_51_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_52_INT_MASK, "csf_lpi_52_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_53_INT_MASK, "csf_lpi_53_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_54_INT_MASK, "csf_lpi_54_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_55_INT_MASK, "csf_lpi_55_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_56_INT_MASK, "csf_lpi_56_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8b, 13, 12, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i6_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_60_INT, "csf_lpi_60_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_61_INT, "csf_lpi_61_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_62_INT, "csf_lpi_62_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_63_INT, "csf_lpi_63_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_64_INT, "csf_lpi_64_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_65_INT, "csf_lpi_65_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_66_INT, "csf_lpi_66_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_67_INT, "csf_lpi_67_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_68_INT, "csf_lpi_68_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_69_INT, "csf_lpi_69_int", FLEXE_OAM_TX_BASE_ADDR, 0x8c, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i6_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_60_INT_MASK, "csf_lpi_60_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_61_INT_MASK, "csf_lpi_61_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_62_INT_MASK, "csf_lpi_62_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_63_INT_MASK, "csf_lpi_63_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_64_INT_MASK, "csf_lpi_64_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_65_INT_MASK, "csf_lpi_65_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_66_INT_MASK, "csf_lpi_66_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_67_INT_MASK, "csf_lpi_67_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_68_INT_MASK, "csf_lpi_68_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_69_INT_MASK, "csf_lpi_69_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8d, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i7_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_70_INT, "csf_lpi_70_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_71_INT, "csf_lpi_71_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_72_INT, "csf_lpi_72_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_73_INT, "csf_lpi_73_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_74_INT, "csf_lpi_74_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_75_INT, "csf_lpi_75_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_76_INT, "csf_lpi_76_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_77_INT, "csf_lpi_77_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_78_INT, "csf_lpi_78_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_79_INT, "csf_lpi_79_int", FLEXE_OAM_TX_BASE_ADDR, 0x8e, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lpi_i7_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LPI_70_INT_MASK, "csf_lpi_70_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_71_INT_MASK, "csf_lpi_71_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_72_INT_MASK, "csf_lpi_72_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_73_INT_MASK, "csf_lpi_73_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_74_INT_MASK, "csf_lpi_74_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_75_INT_MASK, "csf_lpi_75_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_76_INT_MASK, "csf_lpi_76_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_77_INT_MASK, "csf_lpi_77_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_78_INT_MASK, "csf_lpi_78_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LPI_79_INT_MASK, "csf_lpi_79_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x8f, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_0_INT, "csf_lf_0_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_1_INT, "csf_lf_1_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_2_INT, "csf_lf_2_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_3_INT, "csf_lf_3_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_4_INT, "csf_lf_4_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_5_INT, "csf_lf_5_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_6_INT, "csf_lf_6_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_7_INT, "csf_lf_7_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_8_INT, "csf_lf_8_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_9_INT, "csf_lf_9_int", FLEXE_OAM_TX_BASE_ADDR, 0x90, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_0_INT_MASK, "csf_lf_0_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_1_INT_MASK, "csf_lf_1_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_2_INT_MASK, "csf_lf_2_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_3_INT_MASK, "csf_lf_3_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_4_INT_MASK, "csf_lf_4_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_5_INT_MASK, "csf_lf_5_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_6_INT_MASK, "csf_lf_6_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_7_INT_MASK, "csf_lf_7_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_8_INT_MASK, "csf_lf_8_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_9_INT_MASK, "csf_lf_9_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x91, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_10_INT, "csf_lf_10_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_11_INT, "csf_lf_11_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_12_INT, "csf_lf_12_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_13_INT, "csf_lf_13_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_14_INT, "csf_lf_14_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_15_INT, "csf_lf_15_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_16_INT, "csf_lf_16_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_17_INT, "csf_lf_17_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_18_INT, "csf_lf_18_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_19_INT, "csf_lf_19_int", FLEXE_OAM_TX_BASE_ADDR, 0x92, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_10_INT_MASK, "csf_lf_10_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_11_INT_MASK, "csf_lf_11_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_12_INT_MASK, "csf_lf_12_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_13_INT_MASK, "csf_lf_13_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_14_INT_MASK, "csf_lf_14_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_15_INT_MASK, "csf_lf_15_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_16_INT_MASK, "csf_lf_16_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_17_INT_MASK, "csf_lf_17_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_18_INT_MASK, "csf_lf_18_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_19_INT_MASK, "csf_lf_19_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x93, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_20_INT, "csf_lf_20_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_21_INT, "csf_lf_21_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_22_INT, "csf_lf_22_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_23_INT, "csf_lf_23_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_24_INT, "csf_lf_24_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_25_INT, "csf_lf_25_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_26_INT, "csf_lf_26_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_27_INT, "csf_lf_27_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_28_INT, "csf_lf_28_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_29_INT, "csf_lf_29_int", FLEXE_OAM_TX_BASE_ADDR, 0x94, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_20_INT_MASK, "csf_lf_20_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_21_INT_MASK, "csf_lf_21_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_22_INT_MASK, "csf_lf_22_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_23_INT_MASK, "csf_lf_23_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_24_INT_MASK, "csf_lf_24_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_25_INT_MASK, "csf_lf_25_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_26_INT_MASK, "csf_lf_26_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_27_INT_MASK, "csf_lf_27_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_28_INT_MASK, "csf_lf_28_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_29_INT_MASK, "csf_lf_29_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x95, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_30_INT, "csf_lf_30_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_31_INT, "csf_lf_31_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_32_INT, "csf_lf_32_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_33_INT, "csf_lf_33_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_34_INT, "csf_lf_34_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_35_INT, "csf_lf_35_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_36_INT, "csf_lf_36_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_37_INT, "csf_lf_37_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_38_INT, "csf_lf_38_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_39_INT, "csf_lf_39_int", FLEXE_OAM_TX_BASE_ADDR, 0x96, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_30_INT_MASK, "csf_lf_30_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_31_INT_MASK, "csf_lf_31_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_32_INT_MASK, "csf_lf_32_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_33_INT_MASK, "csf_lf_33_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_34_INT_MASK, "csf_lf_34_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_35_INT_MASK, "csf_lf_35_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_36_INT_MASK, "csf_lf_36_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_37_INT_MASK, "csf_lf_37_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_38_INT_MASK, "csf_lf_38_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_39_INT_MASK, "csf_lf_39_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x97, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_40_INT, "csf_lf_40_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_41_INT, "csf_lf_41_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_42_INT, "csf_lf_42_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_43_INT, "csf_lf_43_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_44_INT, "csf_lf_44_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_45_INT, "csf_lf_45_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_46_INT, "csf_lf_46_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_47_INT, "csf_lf_47_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_48_INT, "csf_lf_48_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_49_INT, "csf_lf_49_int", FLEXE_OAM_TX_BASE_ADDR, 0x98, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_40_INT_MASK, "csf_lf_40_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_41_INT_MASK, "csf_lf_41_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_42_INT_MASK, "csf_lf_42_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_43_INT_MASK, "csf_lf_43_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_44_INT_MASK, "csf_lf_44_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_45_INT_MASK, "csf_lf_45_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_46_INT_MASK, "csf_lf_46_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_47_INT_MASK, "csf_lf_47_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_48_INT_MASK, "csf_lf_48_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_49_INT_MASK, "csf_lf_49_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x99, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i5_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_50_INT, "csf_lf_50_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_51_INT, "csf_lf_51_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_52_INT, "csf_lf_52_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_53_INT, "csf_lf_53_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_54_INT, "csf_lf_54_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_55_INT, "csf_lf_55_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_56_INT, "csf_lf_56_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_57_INT, "csf_lf_57_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_58_INT, "csf_lf_58_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_59_INT, "csf_lf_59_int", FLEXE_OAM_TX_BASE_ADDR, 0x9a, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i5_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_50_INT_MASK, "csf_lf_50_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_51_INT_MASK, "csf_lf_51_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_52_INT_MASK, "csf_lf_52_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_53_INT_MASK, "csf_lf_53_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_54_INT_MASK, "csf_lf_54_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_55_INT_MASK, "csf_lf_55_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_56_INT_MASK, "csf_lf_56_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_57_INT_MASK, "csf_lf_57_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_58_INT_MASK, "csf_lf_58_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_59_INT_MASK, "csf_lf_59_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9b, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i6_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_60_INT, "csf_lf_60_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_61_INT, "csf_lf_61_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_62_INT, "csf_lf_62_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_63_INT, "csf_lf_63_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_64_INT, "csf_lf_64_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_65_INT, "csf_lf_65_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_66_INT, "csf_lf_66_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_67_INT, "csf_lf_67_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_68_INT, "csf_lf_68_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_69_INT, "csf_lf_69_int", FLEXE_OAM_TX_BASE_ADDR, 0x9c, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i6_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_60_INT_MASK, "csf_lf_60_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_61_INT_MASK, "csf_lf_61_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_62_INT_MASK, "csf_lf_62_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_63_INT_MASK, "csf_lf_63_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_64_INT_MASK, "csf_lf_64_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_65_INT_MASK, "csf_lf_65_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_66_INT_MASK, "csf_lf_66_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_67_INT_MASK, "csf_lf_67_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_68_INT_MASK, "csf_lf_68_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_69_INT_MASK, "csf_lf_69_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9d, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i7_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_70_INT, "csf_lf_70_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_71_INT, "csf_lf_71_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_72_INT, "csf_lf_72_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_73_INT, "csf_lf_73_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_74_INT, "csf_lf_74_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_75_INT, "csf_lf_75_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_76_INT, "csf_lf_76_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_77_INT, "csf_lf_77_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_78_INT, "csf_lf_78_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_79_INT, "csf_lf_79_int", FLEXE_OAM_TX_BASE_ADDR, 0x9e, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_lf_i7_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_LF_70_INT_MASK, "csf_lf_70_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_71_INT_MASK, "csf_lf_71_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_72_INT_MASK, "csf_lf_72_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_73_INT_MASK, "csf_lf_73_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_74_INT_MASK, "csf_lf_74_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_75_INT_MASK, "csf_lf_75_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_76_INT_MASK, "csf_lf_76_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_77_INT_MASK, "csf_lf_77_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_78_INT_MASK, "csf_lf_78_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_LF_79_INT_MASK, "csf_lf_79_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0x9f, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i0_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_4_INT, "csf_rf_4_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_5_INT, "csf_rf_5_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_6_INT, "csf_rf_6_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_7_INT, "csf_rf_7_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_8_INT, "csf_rf_8_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_9_INT, "csf_rf_9_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_0_INT, "csf_rf_0_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_1_INT, "csf_rf_1_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_2_INT, "csf_rf_2_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_3_INT, "csf_rf_3_int", FLEXE_OAM_TX_BASE_ADDR, 0xa0, 7, 6, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i0_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_3_INT_MASK, "csf_rf_3_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_4_INT_MASK, "csf_rf_4_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_5_INT_MASK, "csf_rf_5_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_6_INT_MASK, "csf_rf_6_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_7_INT_MASK, "csf_rf_7_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_8_INT_MASK, "csf_rf_8_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_9_INT_MASK, "csf_rf_9_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_0_INT_MASK, "csf_rf_0_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_1_INT_MASK, "csf_rf_1_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_2_INT_MASK, "csf_rf_2_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa1, 5, 4, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i1_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_10_INT, "csf_rf_10_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_11_INT, "csf_rf_11_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_12_INT, "csf_rf_12_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_13_INT, "csf_rf_13_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_14_INT, "csf_rf_14_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_15_INT, "csf_rf_15_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_16_INT, "csf_rf_16_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_17_INT, "csf_rf_17_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_18_INT, "csf_rf_18_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_19_INT, "csf_rf_19_int", FLEXE_OAM_TX_BASE_ADDR, 0xa2, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i1_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_10_INT_MASK, "csf_rf_10_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_11_INT_MASK, "csf_rf_11_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_12_INT_MASK, "csf_rf_12_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_13_INT_MASK, "csf_rf_13_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_14_INT_MASK, "csf_rf_14_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_15_INT_MASK, "csf_rf_15_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_16_INT_MASK, "csf_rf_16_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_17_INT_MASK, "csf_rf_17_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_18_INT_MASK, "csf_rf_18_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_19_INT_MASK, "csf_rf_19_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa3, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i2_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_25_INT, "csf_rf_25_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_26_INT, "csf_rf_26_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_27_INT, "csf_rf_27_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_28_INT, "csf_rf_28_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_29_INT, "csf_rf_29_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_20_INT, "csf_rf_20_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_21_INT, "csf_rf_21_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_22_INT, "csf_rf_22_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_23_INT, "csf_rf_23_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_24_INT, "csf_rf_24_int", FLEXE_OAM_TX_BASE_ADDR, 0xa4, 9, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i2_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_25_INT_MASK, "csf_rf_25_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_26_INT_MASK, "csf_rf_26_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_27_INT_MASK, "csf_rf_27_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_28_INT_MASK, "csf_rf_28_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_29_INT_MASK, "csf_rf_29_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 19, 18, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_20_INT_MASK, "csf_rf_20_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_21_INT_MASK, "csf_rf_21_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_22_INT_MASK, "csf_rf_22_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_23_INT_MASK, "csf_rf_23_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_24_INT_MASK, "csf_rf_24_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa5, 9, 8, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i3_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_30_INT, "csf_rf_30_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_31_INT, "csf_rf_31_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_32_INT, "csf_rf_32_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_33_INT, "csf_rf_33_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_34_INT, "csf_rf_34_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_35_INT, "csf_rf_35_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_36_INT, "csf_rf_36_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_37_INT, "csf_rf_37_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_38_INT, "csf_rf_38_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_39_INT, "csf_rf_39_int", FLEXE_OAM_TX_BASE_ADDR, 0xa6, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i3_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_30_INT_MASK, "csf_rf_30_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_31_INT_MASK, "csf_rf_31_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_32_INT_MASK, "csf_rf_32_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_33_INT_MASK, "csf_rf_33_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_34_INT_MASK, "csf_rf_34_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_35_INT_MASK, "csf_rf_35_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_36_INT_MASK, "csf_rf_36_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_37_INT_MASK, "csf_rf_37_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_38_INT_MASK, "csf_rf_38_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_39_INT_MASK, "csf_rf_39_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i4_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_40_INT, "csf_rf_40_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_41_INT, "csf_rf_41_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_42_INT, "csf_rf_42_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_43_INT, "csf_rf_43_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_44_INT, "csf_rf_44_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_45_INT, "csf_rf_45_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_46_INT, "csf_rf_46_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_47_INT, "csf_rf_47_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_48_INT, "csf_rf_48_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_49_INT, "csf_rf_49_int", FLEXE_OAM_TX_BASE_ADDR, 0xa8, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i4_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_40_INT_MASK, "csf_rf_40_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_41_INT_MASK, "csf_rf_41_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_42_INT_MASK, "csf_rf_42_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_43_INT_MASK, "csf_rf_43_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_44_INT_MASK, "csf_rf_44_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_45_INT_MASK, "csf_rf_45_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_46_INT_MASK, "csf_rf_46_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_47_INT_MASK, "csf_rf_47_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_48_INT_MASK, "csf_rf_48_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_49_INT_MASK, "csf_rf_49_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xa9, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i5_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_50_INT, "csf_rf_50_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_51_INT, "csf_rf_51_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_52_INT, "csf_rf_52_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_53_INT, "csf_rf_53_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_54_INT, "csf_rf_54_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_55_INT, "csf_rf_55_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_56_INT, "csf_rf_56_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_57_INT, "csf_rf_57_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_58_INT, "csf_rf_58_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_59_INT, "csf_rf_59_int", FLEXE_OAM_TX_BASE_ADDR, 0xaa, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i5_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_50_INT_MASK, "csf_rf_50_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_51_INT_MASK, "csf_rf_51_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_52_INT_MASK, "csf_rf_52_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_53_INT_MASK, "csf_rf_53_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_54_INT_MASK, "csf_rf_54_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_55_INT_MASK, "csf_rf_55_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_56_INT_MASK, "csf_rf_56_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_57_INT_MASK, "csf_rf_57_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_58_INT_MASK, "csf_rf_58_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_59_INT_MASK, "csf_rf_59_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xab, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i6_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_60_INT, "csf_rf_60_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_61_INT, "csf_rf_61_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_62_INT, "csf_rf_62_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_63_INT, "csf_rf_63_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_64_INT, "csf_rf_64_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_65_INT, "csf_rf_65_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_66_INT, "csf_rf_66_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_67_INT, "csf_rf_67_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_68_INT, "csf_rf_68_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_69_INT, "csf_rf_69_int", FLEXE_OAM_TX_BASE_ADDR, 0xac, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i6_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_60_INT_MASK, "csf_rf_60_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_61_INT_MASK, "csf_rf_61_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_62_INT_MASK, "csf_rf_62_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_63_INT_MASK, "csf_rf_63_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_64_INT_MASK, "csf_rf_64_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_65_INT_MASK, "csf_rf_65_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_66_INT_MASK, "csf_rf_66_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_67_INT_MASK, "csf_rf_67_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_68_INT_MASK, "csf_rf_68_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_69_INT_MASK, "csf_rf_69_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xad, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i7_int_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_70_INT, "csf_rf_70_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_71_INT, "csf_rf_71_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_72_INT, "csf_rf_72_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_73_INT, "csf_rf_73_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_74_INT, "csf_rf_74_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_75_INT, "csf_rf_75_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_76_INT, "csf_rf_76_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_77_INT, "csf_rf_77_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_78_INT, "csf_rf_78_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_79_INT, "csf_rf_79_int", FLEXE_OAM_TX_BASE_ADDR, 0xae, 19, 18, 0x0 },
};
NEW_CHIP_REG test_flexe_csf_rf_i7_int_mask_reg[] =
{
	{ TEST_FLEXE_OAM_TX_CSF_RF_70_INT_MASK, "csf_rf_70_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 1, 0, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_71_INT_MASK, "csf_rf_71_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 3, 2, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_72_INT_MASK, "csf_rf_72_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 5, 4, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_73_INT_MASK, "csf_rf_73_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 7, 6, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_74_INT_MASK, "csf_rf_74_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 9, 8, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_75_INT_MASK, "csf_rf_75_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 11, 10, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_76_INT_MASK, "csf_rf_76_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 13, 12, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_77_INT_MASK, "csf_rf_77_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 15, 14, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_78_INT_MASK, "csf_rf_78_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 17, 16, 0x0 },
	{ TEST_FLEXE_OAM_TX_CSF_RF_79_INT_MASK, "csf_rf_79_int_mask", FLEXE_OAM_TX_BASE_ADDR, 0xaf, 19, 18, 0x0 },
};


/*SERDES*/
/*
NEW_CHIP_REG test_serdes_brg_rdata_reg[] =
{
	{ TEST_SERDES_BRG_RDATA, "serdes_brg_rdata", SERDES_BASE_ADDR, 0x0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_serdes_lock_state_reg[] =
{
	{ TEST_SERDES_LINE100GE_1_LOCK2DATA, "line100ge_1_lock2data", SERDES_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_SERDES_LINE100GE_1_LOCK2REF, "line100ge_1_lock2ref", SERDES_BASE_ADDR, 0x3, 1, 1, 0x0 },
	{ TEST_SERDES_LINE100GE_2_LOCK2DATA, "line100ge_2_lock2data", SERDES_BASE_ADDR, 0x3, 2, 2, 0x0 },
	{ TEST_SERDES_LINE100GE_2_LOCK2REF, "line100ge_2_lock2ref", SERDES_BASE_ADDR, 0x3, 3, 3, 0x0 },
	{ TEST_SERDES_LINE50GE_1_LOCK2DATA, "line50ge_1_lock2data", SERDES_BASE_ADDR, 0x3, 4, 4, 0x0 },
	{ TEST_SERDES_LINE50GE_1_LOCK2REF, "line50ge_1_lock2ref", SERDES_BASE_ADDR, 0x3, 5, 5, 0x0 },
	{ TEST_SERDES_LINE50GE_2_LOCK2DATA, "line50ge_2_lock2data", SERDES_BASE_ADDR, 0x3, 6, 6, 0x0 },
	{ TEST_SERDES_LINE50GE_2_LOCK2REF, "line50ge_2_lock2ref", SERDES_BASE_ADDR, 0x3, 7, 7, 0x0 },
	{ TEST_SERDES_LINE50GE_3_LOCK2DATA, "line50ge_3_lock2data", SERDES_BASE_ADDR, 0x3, 8, 8, 0x0 },
	{ TEST_SERDES_LINE50GE_3_LOCK2REF, "line50ge_3_lock2ref", SERDES_BASE_ADDR, 0x3, 9, 9, 0x0 },
	{ TEST_SERDES_LINE50GE_4_LOCK2DATA, "line50ge_4_lock2data", SERDES_BASE_ADDR, 0x3, 10, 10, 0x0 },
	{ TEST_SERDES_LINE50GE_4_LOCK2REF, "line50ge_4_lock2ref", SERDES_BASE_ADDR, 0x3, 11, 11, 0x0 },
	{ TEST_SERDES_BP_ILK_300G_LOCK2DATA, "bp_ilk_300g_lock2data", SERDES_BASE_ADDR, 0x3, 12, 12, 0x0 },
	{ TEST_SERDES_BP_ILK_300G_LOCK2REF, "bp_ilk_300g_lock2ref", SERDES_BASE_ADDR, 0x3, 13, 13, 0x0 },
	{ TEST_SERDES_BP_ILK_150G_LOCK2DATA, "bp_ilk_150g_lock2data", SERDES_BASE_ADDR, 0x3, 14, 14, 0x0 },
	{ TEST_SERDES_BP_ILK_150G_LOCK2REF, "bp_ilk_150g_lock2ref", SERDES_BASE_ADDR, 0x3, 15, 15, 0x0 },
	{ TEST_SERDES_GE_1_LOCK2DATA, "ge_1_lock2data", SERDES_BASE_ADDR, 0x3, 16, 16, 0x0 },
	{ TEST_SERDES_GE_1_LOCK2REF, "ge_1_lock2ref", SERDES_BASE_ADDR, 0x3, 17, 17, 0x0 },
	{ TEST_SERDES_GE_2_LOCK2DATA, "ge_2_lock2data", SERDES_BASE_ADDR, 0x3, 18, 18, 0x0 },
	{ TEST_SERDES_GE_2_LOCK2REF, "ge_2_lock2ref", SERDES_BASE_ADDR, 0x3, 19, 19, 0x0 },
	{ TEST_SERDES_GE_3_LOCK2DATA, "ge_3_lock2data", SERDES_BASE_ADDR, 0x3, 20, 20, 0x0 },
	{ TEST_SERDES_GE_3_LOCK2REF, "ge_3_lock2ref", SERDES_BASE_ADDR, 0x3, 21, 21, 0x0 },
};
NEW_CHIP_REG test_fpga_info_reg[] =
{
	{ TEST_SERDES_FPGA_INFO, "fpga_info", SERDES_BASE_ADDR, 0x4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fpga_function_info_reg[] =
{
	{ TEST_SERDES_FPGA_FUNCTION_INFO, "fpga_function_info", SERDES_BASE_ADDR, 0x5, 3, 0, 0x0 },
};
NEW_CHIP_REG test_serdes_brg_wdata_reg[] =
{
	{ TEST_SERDES_BRG_WDATA, "serdes_brg_wdata", SERDES_BASE_ADDR, 0x1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_serdes_brg_ctrl_reg[] =
{
	{ TEST_SERDES_BRG_ADDR, "serdes_brg_addr", SERDES_BASE_ADDR, 0x2, 19, 0, 0x0 },
	{ TEST_SERDES_BRG_WR, "serdes_brg_wr", SERDES_BASE_ADDR, 0x2, 30, 30, 0x0 },
	{ TEST_SERDES_BRG_RD_ACK, "serdes_brg_rd_ack", SERDES_BASE_ADDR, 0x2, 31, 31, 0x0 },
};
*/

/*CCU_CFG*/
NEW_CHIP_REG test_ccu_rx_ptp_en_reg[] =
{
	{ CCU_RX_TAG_MATCH_EN, "ccu_rx_tag_match_en", CCU_CFG_BASE_ADDR, 0x1, 0, 0, 0x1 },
	{ TEST_CCU_RX_PARSE_EN, "ccu_rx_parse_en", CCU_CFG_BASE_ADDR, 0x1, 1, 1, 0x1 },
	{ TEST_CCU_RX_PTP_L2_UNI_EN, "ccu_rx_ptp_l2_uni_en", CCU_CFG_BASE_ADDR, 0x1, 2, 2, 0x0 },
	{ TEST_CCU_RX_CCU_PARSE_EN, "ccu_rx_ccu_parse_en", CCU_CFG_BASE_ADDR, 0x1, 4, 4, 0x1 },
	{ TEST_CCU_RX_TC_TYPE_MODE, "ccu_rx_tc_type_mode", CCU_CFG_BASE_ADDR, 0x1, 5, 5, 0x0 },
	{ TEST_CCU_RX_CF_UPDATE_MODE, "ccu_rx_cf_update_mode", CCU_CFG_BASE_ADDR, 0x1, 7, 6, 0x0 },
	{ TEST_CCU_RX_ID_MATCH_EN, "ccu_rx_id_match_en", CCU_CFG_BASE_ADDR, 0x1, 8, 8, 0x0 },
	{ TEST_CCU_RX_DROP_ERR_CTRL, "ccu_rx_drop_err_ctrl", CCU_CFG_BASE_ADDR, 0x1, 10, 10, 0x1 },
};
NEW_CHIP_REG test_ccu_rx_filt_fw_reg[] =
{
	{ TEST_CCU_RX_FRM_FW, "ccu_rx_frm_fw", CCU_CFG_BASE_ADDR, 0x2, 3, 0, 0x0 },
	{ TEST_CCU_RX_LAYER_FW, "ccu_rx_layer_fw", CCU_CFG_BASE_ADDR, 0x2, 6, 4, 0x0 },
	{ TEST_CCU_RX_VLAN_FW, "ccu_rx_vlan_fw", CCU_CFG_BASE_ADDR, 0x2, 9, 7, 0x0 },
	{ TEST_CCU_RX_MAC_FW, "ccu_rx_mac_fw", CCU_CFG_BASE_ADDR, 0x2, 10, 10, 0x0 },
	{ TEST_CCU_RX_PORT_FILTER, "ccu_rx_port_filter", CCU_CFG_BASE_ADDR, 0x2, 18, 11, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag0_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG0, "ccu_rx_eth_vlan_tag0", CCU_CFG_BASE_ADDR, 0x3, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG0, "ccu_rx_eth_cvlan_tag0", CCU_CFG_BASE_ADDR, 0x3, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_l2_eth_type_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE0, "ccu_rx_l2_eth_type0", CCU_CFG_BASE_ADDR, 0x4, 15, 0, 0x88f7 },
	{ TEST_CCU_RX_PTP_VERSION, "ccu_rx_ptp_version", CCU_CFG_BASE_ADDR, 0x4, 19, 16, 0x2 },
	{ TEST_CCU_RX_IPV4_VERSION, "ccu_rx_ipv4_version", CCU_CFG_BASE_ADDR, 0x4, 23, 20, 0x4 },
	{ TEST_CCU_RX_IPV6_VERSION, "ccu_rx_ipv6_version", CCU_CFG_BASE_ADDR, 0x4, 27, 24, 0x6 },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type0_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE0, "ccu_rx_l3_ipv4_type0", CCU_CFG_BASE_ADDR, 0x5, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE0, "ccu_rx_l3_ipv6_type0", CCU_CFG_BASE_ADDR, 0x5, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_eth_mul_norm_reg[] =
{
	{ TEST_CCU_RX_ETH_MUL_NORM_0, "ccu_rx_eth_mul_norm_0", CCU_CFG_BASE_ADDR, 0x6, 31, 0, 0x19000000 },
	{ TEST_CCU_RX_ETH_MUL_NORM_1, "ccu_rx_eth_mul_norm_1", CCU_CFG_BASE_ADDR, 0x7, 15, 0, 0x11b },
};
NEW_CHIP_REG test_ccu_rx_eth_mul_peer_reg[] =
{
	{ TEST_CCU_RX_ETH_MUL_PEER_0, "ccu_rx_eth_mul_peer_0", CCU_CFG_BASE_ADDR, 0x8, 31, 0, 0xc200000e },
	{ TEST_CCU_RX_ETH_MUL_PEER_1, "ccu_rx_eth_mul_peer_1", CCU_CFG_BASE_ADDR, 0x9, 15, 0, 0x180 },
};
NEW_CHIP_REG test_ccu_rx_ipv4_mul_norm_reg[] =
{
	{ TEST_CCU_RX_IPV4_MUL_NORM, "ccu_rx_ipv4_mul_norm", CCU_CFG_BASE_ADDR, 0xa, 31, 0, 0xe0000181 },
};
NEW_CHIP_REG test_ccu_rx_ipv4_mul_peer_reg[] =
{
	{ TEST_CCU_RX_IPV4_MUL_PEER, "ccu_rx_ipv4_mul_peer", CCU_CFG_BASE_ADDR, 0xb, 31, 0, 0xe000006b },
};
NEW_CHIP_REG test_ccu_rx_ipv6_mul_norm_reg[] =
{
	{ TEST_CCU_RX_IPV6_MUL_NORM_0, "ccu_rx_ipv6_mul_norm_0", CCU_CFG_BASE_ADDR, 0xc, 31, 0, 0x181 },
	{ TEST_CCU_RX_IPV6_MUL_NORM_1, "ccu_rx_ipv6_mul_norm_1", CCU_CFG_BASE_ADDR, 0xd, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_MUL_NORM_2, "ccu_rx_ipv6_mul_norm_2", CCU_CFG_BASE_ADDR, 0xe, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_MUL_NORM_3, "ccu_rx_ipv6_mul_norm_3", CCU_CFG_BASE_ADDR, 0xf, 31, 0, 0xff000000 },
};
NEW_CHIP_REG test_ccu_rx_ipv6_mul_peer_reg[] =
{
	{ TEST_CCU_RX_IPV6_MUL_PEER_0, "ccu_rx_ipv6_mul_peer_0", CCU_CFG_BASE_ADDR, 0x10, 31, 0, 0x6b },
	{ TEST_CCU_RX_IPV6_MUL_PEER_1, "ccu_rx_ipv6_mul_peer_1", CCU_CFG_BASE_ADDR, 0x11, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_MUL_PEER_2, "ccu_rx_ipv6_mul_peer_2", CCU_CFG_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_MUL_PEER_3, "ccu_rx_ipv6_mul_peer_3", CCU_CFG_BASE_ADDR, 0x13, 31, 0, 0xff020000 },
};
NEW_CHIP_REG test_ccu_rx_l2_ssm_type_reg[] =
{
	{ TEST_CCU_RX_L2_SSM_TYPE, "ccu_rx_l2_ssm_type", CCU_CFG_BASE_ADDR, 0x14, 15, 0, 0x8809 },
	{ TEST_CCU_RX_L2_SSM_SUBTYPE, "ccu_rx_l2_ssm_subtype", CCU_CFG_BASE_ADDR, 0x14, 23, 16, 0xa },
};
NEW_CHIP_REG test_ccu_rx_ssm_da_reg[] =
{
	{ TEST_CCU_RX_SSM_DA_0, "ccu_rx_ssm_da_0", CCU_CFG_BASE_ADDR, 0x15, 31, 0, 0xc2000002 },
	{ TEST_CCU_RX_SSM_DA_1, "ccu_rx_ssm_da_1", CCU_CFG_BASE_ADDR, 0x16, 15, 0, 0x180 },
};
NEW_CHIP_REG test_ccu_l2_eth_type1_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE1, "ccu_rx_l2_eth_type1", CCU_CFG_BASE_ADDR, 0x17, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE1, "ccu_tx_l2_eth_type1", CCU_CFG_BASE_ADDR, 0x17, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_l2_eth_type2_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE2, "ccu_rx_l2_eth_type2", CCU_CFG_BASE_ADDR, 0x18, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE2, "ccu_tx_l2_eth_type2", CCU_CFG_BASE_ADDR, 0x18, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_l2_eth_type3_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE3, "ccu_rx_l2_eth_type3", CCU_CFG_BASE_ADDR, 0x19, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE3, "ccu_tx_l2_eth_type3", CCU_CFG_BASE_ADDR, 0x19, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_rx_eth_uni_da_reg[] =
{
	{ TEST_CCU_RX_ETH_UNI_NORM_0, "ccu_rx_eth_uni_norm_0", CCU_CFG_BASE_ADDR, 0x1a, 31, 0, 0x19000000 },
	{ TEST_CCU_RX_ETH_UNI_NORM_1, "ccu_rx_eth_uni_norm_1", CCU_CFG_BASE_ADDR, 0x1b, 15, 0, 0x11b },
};
NEW_CHIP_REG test_ccu_rx_ipv4_uni_da_reg[] =
{
	{ TEST_CCU_RX_IPV4_UNI_NORM, "ccu_rx_ipv4_uni_norm", CCU_CFG_BASE_ADDR, 0x1c, 31, 0, 0xe0000181 },
};
NEW_CHIP_REG test_ccu_rx_ipv6_uni_da_reg[] =
{
	{ TEST_CCU_RX_IPV6_UNI_NORM_0, "ccu_rx_ipv6_uni_norm_0", CCU_CFG_BASE_ADDR, 0x1d, 31, 0, 0x181 },
	{ TEST_CCU_RX_IPV6_UNI_NORM_1, "ccu_rx_ipv6_uni_norm_1", CCU_CFG_BASE_ADDR, 0x1e, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_UNI_NORM_2, "ccu_rx_ipv6_uni_norm_2", CCU_CFG_BASE_ADDR, 0x1f, 31, 0, 0x0 },
	{ TEST_CCU_RX_IPV6_UNI_NORM_3, "ccu_rx_ipv6_uni_norm_3", CCU_CFG_BASE_ADDR, 0x20, 31, 0, 0xff000000 },
};
NEW_CHIP_REG test_ccu_rx_udp_port_norm_reg[] =
{
	{ TEST_CCU_RX_UDP_PORT_UNI_NORM, "ccu_rx_udp_port_uni_norm", CCU_CFG_BASE_ADDR, 0x21, 15, 0, 0x140 },
	{ TEST_CCU_RX_UDP_PORT_MUL_NORM, "ccu_rx_udp_port_mul_norm", CCU_CFG_BASE_ADDR, 0x21, 31, 16, 0x140 },
};
NEW_CHIP_REG test_ccu_rx_udp_port_ptp_reg[] =
{
	{ TEST_CCU_RX_UDP_PORT_UNI_OAM, "ccu_rx_udp_port_uni_oam", CCU_CFG_BASE_ADDR, 0x22, 15, 0, 0x0 },
	{ TEST_CCU_RX_UDP_PORT_EVENT, "ccu_rx_udp_port_event", CCU_CFG_BASE_ADDR, 0x22, 31, 16, 0x13f },
};
NEW_CHIP_REG test_ccu_rx_da_reg[] =
{
	{ TEST_CCU_RX_DA_0, "ccu_rx_da_0", CCU_CFG_BASE_ADDR, 0x23, 31, 0, 0xffffffff },
	{ TEST_CCU_RX_DA_1, "ccu_rx_da_1", CCU_CFG_BASE_ADDR, 0x24, 15, 0, 0xffff },
};
NEW_CHIP_REG test_ccu_rx_sa_reg[] =
{
	{ TEST_CCU_RX_SA_0, "ccu_rx_sa_0", CCU_CFG_BASE_ADDR, 0x25, 31, 0, 0x0 },
	{ TEST_CCU_RX_SA_1, "ccu_rx_sa_1", CCU_CFG_BASE_ADDR, 0x26, 15, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_vlan_tag_reg[] =
{
	{ TEST_CCU_RX_VLAN_TAG, "ccu_rx_vlan_tag", CCU_CFG_BASE_ADDR, 0x27, 15, 0, 0x8100 },
};
NEW_CHIP_REG test_ccu_rx_leth_type_reg[] =
{
	{ TEST_CCU_RX_LETH_TYPE, "ccu_rx_leth_type", CCU_CFG_BASE_ADDR, 0x28, 15, 0, 0x101 },
	{ TEST_CCU_RX_LETH_TYPE2, "ccu_rx_leth_type2", CCU_CFG_BASE_ADDR, 0x28, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_rx_vlan_id0_reg[] =
{
	{ TEST_CCU_RX_VLAN_VID0, "ccu_rx_vlan_vid0", CCU_CFG_BASE_ADDR, 0x29, 11, 0, 0xb },
	{ TEST_CCU_RX_VLAN_VID1, "ccu_rx_vlan_vid1", CCU_CFG_BASE_ADDR, 0x29, 27, 16, 0xc },
};
NEW_CHIP_REG test_ccu_rx_vlan_id1_reg[] =
{
	{ TEST_CCU_RX_VLAN_VID2, "ccu_rx_vlan_vid2", CCU_CFG_BASE_ADDR, 0x2a, 11, 0, 0xd },
	{ TEST_CCU_RX_VLAN_VID3, "ccu_rx_vlan_vid3", CCU_CFG_BASE_ADDR, 0x2a, 27, 16, 0xe },
};
NEW_CHIP_REG test_ccu_rx_vlan_id2_reg[] =
{
	{ TEST_CCU_RX_VLAN_VID4, "ccu_rx_vlan_vid4", CCU_CFG_BASE_ADDR, 0x2b, 11, 0, 0xf },
	{ TEST_CCU_RX_VLAN_VID5, "ccu_rx_vlan_vid5", CCU_CFG_BASE_ADDR, 0x2b, 27, 16, 0x10 },
};
NEW_CHIP_REG test_ccu_rx_vlan_id3_reg[] =
{
	{ TEST_CCU_RX_VLAN_VID6, "ccu_rx_vlan_vid6", CCU_CFG_BASE_ADDR, 0x2c, 11, 0, 0x11 },
	{ TEST_CCU_RX_VLAN_VID7, "ccu_rx_vlan_vid7", CCU_CFG_BASE_ADDR, 0x2c, 27, 16, 0x12 },
};
NEW_CHIP_REG test_ccu_l2_eth_type4_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE4, "ccu_rx_l2_eth_type4", CCU_CFG_BASE_ADDR, 0x2d, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE4, "ccu_tx_l2_eth_type4", CCU_CFG_BASE_ADDR, 0x2d, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_l2_eth_type5_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE5, "ccu_rx_l2_eth_type5", CCU_CFG_BASE_ADDR, 0x2e, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE5, "ccu_tx_l2_eth_type5", CCU_CFG_BASE_ADDR, 0x2e, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_l2_eth_type6_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE6, "ccu_rx_l2_eth_type6", CCU_CFG_BASE_ADDR, 0x2f, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE6, "ccu_tx_l2_eth_type6", CCU_CFG_BASE_ADDR, 0x2f, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_tx_da_reg[] =
{
	{ TEST_CCU_TX_DA_0, "ccu_tx_da_0", CCU_CFG_BASE_ADDR, 0x30, 31, 0, 0xffffffff },
	{ TEST_CCU_TX_DA_1, "ccu_tx_da_1", CCU_CFG_BASE_ADDR, 0x31, 15, 0, 0xffff },
};
NEW_CHIP_REG test_ccu_tx_sa_reg[] =
{
	{ TEST_CCU_TX_SA_0, "ccu_tx_sa_0", CCU_CFG_BASE_ADDR, 0x32, 31, 0, 0x0 },
	{ TEST_CCU_TX_SA_1, "ccu_tx_sa_1", CCU_CFG_BASE_ADDR, 0x33, 15, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_type_reg[] =
{
	{ TEST_CCU_TX_VLAN_TAG, "ccu_tx_vlan_tag", CCU_CFG_BASE_ADDR, 0x34, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_TYPE, "ccu_tx_eth_type", CCU_CFG_BASE_ADDR, 0x34, 31, 16, 0x101 },
};
NEW_CHIP_REG test_ccu_tx_cfg_reg[] =
{
	{ TEST_CCU_TX_CFG_PTP_VERSION, "ccu_tx_cfg_ptp_version", CCU_CFG_BASE_ADDR, 0x35, 7, 0, 0x2 },
	{ TEST_CCU_TX_CFG_MESSAGE, "ccu_tx_cfg_message", CCU_CFG_BASE_ADDR, 0x35, 15, 8, 0x0 },
	{ TEST_CCU_TX_CFG_TS_CTR, "ccu_tx_cfg_ts_ctr", CCU_CFG_BASE_ADDR, 0x35, 31, 16, 0x14 },
};
NEW_CHIP_REG test_ccu_tx_vlan_id0_reg[] =
{
	{ TEST_CCU_TX_VLAN_VID0, "ccu_tx_vlan_vid0", CCU_CFG_BASE_ADDR, 0x36, 15, 0, 0xb },
	{ TEST_CCU_TX_VLAN_VID1, "ccu_tx_vlan_vid1", CCU_CFG_BASE_ADDR, 0x36, 31, 16, 0xc },
};
NEW_CHIP_REG test_ccu_tx_vlan_id1_reg[] =
{
	{ TEST_CCU_TX_VLAN_VID2, "ccu_tx_vlan_vid2", CCU_CFG_BASE_ADDR, 0x37, 15, 0, 0xd },
	{ TEST_CCU_TX_VLAN_VID3, "ccu_tx_vlan_vid3", CCU_CFG_BASE_ADDR, 0x37, 31, 16, 0xe },
};
NEW_CHIP_REG test_ccu_tx_vlan_id2_reg[] =
{
	{ TEST_CCU_TX_VLAN_VID4, "ccu_tx_vlan_vid4", CCU_CFG_BASE_ADDR, 0x38, 15, 0, 0xf },
	{ TEST_CCU_TX_VLAN_VID5, "ccu_tx_vlan_vid5", CCU_CFG_BASE_ADDR, 0x38, 31, 16, 0x10 },
};
NEW_CHIP_REG test_ccu_tx_vlan_id3_reg[] =
{
	{ TEST_CCU_TX_VLAN_VID6, "ccu_tx_vlan_vid6", CCU_CFG_BASE_ADDR, 0x39, 15, 0, 0x11 },
	{ TEST_CCU_TX_VLAN_VID7, "ccu_tx_vlan_vid7", CCU_CFG_BASE_ADDR, 0x39, 31, 16, 0x12 },
};
NEW_CHIP_REG test_ccu_tx_en_reg[] =
{
	{ TEST_CCU_TX_PTP_L2_UNI_EN, "ccu_tx_ptp_l2_uni_en", CCU_CFG_BASE_ADDR, 0x3a, 1, 1, 0x0 },
	{ TEST_CCU_TX_CFG_EN, "ccu_tx_cfg_en", CCU_CFG_BASE_ADDR, 0x3a, 2, 2, 0x0 },
	{ TEST_CCU_TX_CRC_RECAL_EN, "ccu_tx_crc_recal_en", CCU_CFG_BASE_ADDR, 0x3a, 3, 3, 0x0 },
	{ TEST_CCU_TX_CFG_DIRECTION, "ccu_tx_cfg_direction", CCU_CFG_BASE_ADDR, 0x3a, 11, 4, 0x1 },
	{ TEST_CCU_TX_CFG_PORT_ID, "ccu_tx_cfg_port_id", CCU_CFG_BASE_ADDR, 0x3a, 19, 12, 0x0 },
	{ TEST_CCU_TX_TC_TYPE_MODE, "ccu_tx_tc_type_mode", CCU_CFG_BASE_ADDR, 0x3a, 20, 20, 0x0 },
	{ TEST_CCU_TX_CF_UPDATE_MODE, "ccu_tx_cf_update_mode", CCU_CFG_BASE_ADDR, 0x3a, 22, 21, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag0_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG0, "ccu_tx_eth_vlan_tag0", CCU_CFG_BASE_ADDR, 0x3b, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG0, "ccu_tx_eth_cvlan_tag0", CCU_CFG_BASE_ADDR, 0x3b, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_l2_eth_type_reg[] =
{
	{ TEST_CCU_TX_L2_ETH_TYPE0, "ccu_tx_l2_eth_type0", CCU_CFG_BASE_ADDR, 0x3c, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_PTP_VERSION, "ccu_tx_ptp_version", CCU_CFG_BASE_ADDR, 0x3c, 19, 16, 0x2 },
	{ TEST_CCU_TX_IPV4_VERSION, "ccu_tx_ipv4_version", CCU_CFG_BASE_ADDR, 0x3c, 23, 20, 0x4 },
	{ TEST_CCU_TX_IPV6_VERSION, "ccu_tx_ipv6_version", CCU_CFG_BASE_ADDR, 0x3c, 27, 24, 0x6 },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type0_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE0, "ccu_tx_l3_ipv4_type0", CCU_CFG_BASE_ADDR, 0x3d, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE0, "ccu_tx_l3_ipv6_type0", CCU_CFG_BASE_ADDR, 0x3d, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_eth_mul_norm_reg[] =
{
	{ TEST_CCU_TX_ETH_MUL_NORM_0, "ccu_tx_eth_mul_norm_0", CCU_CFG_BASE_ADDR, 0x3e, 31, 0, 0x19000000 },
	{ TEST_CCU_TX_ETH_MUL_NORM_1, "ccu_tx_eth_mul_norm_1", CCU_CFG_BASE_ADDR, 0x3f, 15, 0, 0x11b },
};
NEW_CHIP_REG test_ccu_tx_eth_mul_peer_reg[] =
{
	{ TEST_CCU_TX_ETH_MUL_PEER_0, "ccu_tx_eth_mul_peer_0", CCU_CFG_BASE_ADDR, 0x40, 31, 0, 0xc200000e },
	{ TEST_CCU_TX_ETH_MUL_PEER_1, "ccu_tx_eth_mul_peer_1", CCU_CFG_BASE_ADDR, 0x41, 15, 0, 0x180 },
};
NEW_CHIP_REG test_ccu_tx_ipv4_mul_norm_reg[] =
{
	{ TEST_CCU_TX_IPV4_MUL_NORM, "ccu_tx_ipv4_mul_norm", CCU_CFG_BASE_ADDR, 0x42, 31, 0, 0xe0000181 },
};
NEW_CHIP_REG test_ccu_tx_ipv4_mul_peer_reg[] =
{
	{ TEST_CCU_TX_IPV4_MUL_PEER, "ccu_tx_ipv4_mul_peer", CCU_CFG_BASE_ADDR, 0x43, 31, 0, 0xe000006b },
};
NEW_CHIP_REG test_ccu_tx_ipv6_mul_norm_reg[] =
{
	{ TEST_CCU_TX_IPV6_MUL_NORM_0, "ccu_tx_ipv6_mul_norm_0", CCU_CFG_BASE_ADDR, 0x44, 31, 0, 0x181 },
	{ TEST_CCU_TX_IPV6_MUL_NORM_1, "ccu_tx_ipv6_mul_norm_1", CCU_CFG_BASE_ADDR, 0x45, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_MUL_NORM_2, "ccu_tx_ipv6_mul_norm_2", CCU_CFG_BASE_ADDR, 0x46, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_MUL_NORM_3, "ccu_tx_ipv6_mul_norm_3", CCU_CFG_BASE_ADDR, 0x47, 31, 0, 0xff000000 },
};
NEW_CHIP_REG test_ccu_tx_ipv6_mul_peer_reg[] =
{
	{ TEST_CCU_TX_IPV6_MUL_PEER_0, "ccu_tx_ipv6_mul_peer_0", CCU_CFG_BASE_ADDR, 0x48, 31, 0, 0x6b },
	{ TEST_CCU_TX_IPV6_MUL_PEER_1, "ccu_tx_ipv6_mul_peer_1", CCU_CFG_BASE_ADDR, 0x49, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_MUL_PEER_2, "ccu_tx_ipv6_mul_peer_2", CCU_CFG_BASE_ADDR, 0x4a, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_MUL_PEER_3, "ccu_tx_ipv6_mul_peer_3", CCU_CFG_BASE_ADDR, 0x4b, 31, 0, 0xff020000 },
};
NEW_CHIP_REG test_ccu_tx_l2_ssm_type_reg[] =
{
	{ TEST_CCU_TX_L2_SSM_TYPE, "ccu_tx_l2_ssm_type", CCU_CFG_BASE_ADDR, 0x4c, 15, 0, 0x8809 },
	{ TEST_CCU_TX_L2_SSM_SUBTYPE, "ccu_tx_l2_ssm_subtype", CCU_CFG_BASE_ADDR, 0x4c, 23, 16, 0xa },
};
NEW_CHIP_REG test_ccu_tx_ssm_da_reg[] =
{
	{ TEST_CCU_TX_SSM_DA_0, "ccu_tx_ssm_da_0", CCU_CFG_BASE_ADDR, 0x4d, 31, 0, 0xc2000002 },
	{ TEST_CCU_TX_SSM_DA_1, "ccu_tx_ssm_da_1", CCU_CFG_BASE_ADDR, 0x4e, 15, 0, 0x180 },
};
NEW_CHIP_REG test_ccu_tx_filt_fw_reg[] =
{
	{ TEST_CCU_TX_FRM_FW, "ccu_tx_frm_fw", CCU_CFG_BASE_ADDR, 0x4f, 3, 0, 0x0 },
	{ TEST_CCU_TX_LAYER_FW, "ccu_tx_layer_fw", CCU_CFG_BASE_ADDR, 0x4f, 6, 4, 0x0 },
	{ TEST_CCU_TX_VLAN_FW, "ccu_tx_vlan_fw", CCU_CFG_BASE_ADDR, 0x4f, 9, 7, 0x0 },
	{ TEST_CCU_TX_MAC_FW, "ccu_tx_mac_fw", CCU_CFG_BASE_ADDR, 0x4f, 10, 10, 0x0 },
	{ TEST_CCU_TX_PORT_FILTER, "ccu_tx_port_filter", CCU_CFG_BASE_ADDR, 0x4f, 18, 11, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_eth_uni_da_reg[] =
{
	{ TEST_CCU_TX_ETH_UNI_NORM_0, "ccu_tx_eth_uni_norm_0", CCU_CFG_BASE_ADDR, 0x52, 31, 0, 0x19000000 },
	{ TEST_CCU_TX_ETH_UNI_NORM_1, "ccu_tx_eth_uni_norm_1", CCU_CFG_BASE_ADDR, 0x53, 15, 0, 0x11b },
};
NEW_CHIP_REG test_ccu_tx_ipv4_uni_da_reg[] =
{
	{ TEST_CCU_TX_IPV4_UNI_NORM, "ccu_tx_ipv4_uni_norm", CCU_CFG_BASE_ADDR, 0x54, 31, 0, 0xe0000181 },
};
NEW_CHIP_REG test_ccu_tx_ipv6_uni_da_reg[] =
{
	{ TEST_CCU_TX_IPV6_UNI_NORM_0, "ccu_tx_ipv6_uni_norm_0", CCU_CFG_BASE_ADDR, 0x55, 31, 0, 0x181 },
	{ TEST_CCU_TX_IPV6_UNI_NORM_1, "ccu_tx_ipv6_uni_norm_1", CCU_CFG_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_UNI_NORM_2, "ccu_tx_ipv6_uni_norm_2", CCU_CFG_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_CCU_TX_IPV6_UNI_NORM_3, "ccu_tx_ipv6_uni_norm_3", CCU_CFG_BASE_ADDR, 0x58, 31, 0, 0xff000000 },
};
NEW_CHIP_REG test_ccu_tx_udp_port_norm_reg[] =
{
	{ TEST_CCU_TX_UDP_PORT_UNI_NORM, "ccu_tx_udp_port_uni_norm", CCU_CFG_BASE_ADDR, 0x59, 15, 0, 0x140 },
	{ TEST_CCU_TX_UDP_PORT_MUL_NORM, "ccu_tx_udp_port_mul_norm", CCU_CFG_BASE_ADDR, 0x59, 31, 16, 0x140 },
};
NEW_CHIP_REG test_ccu_tx_udp_port_ptp_reg[] =
{
	{ TEST_CCU_TX_UDP_PORT_UNI_OAM, "ccu_tx_udp_port_uni_oam", CCU_CFG_BASE_ADDR, 0x5a, 15, 0, 0x0 },
	{ TEST_CCU_TX_UDP_PORT_EVENT, "ccu_tx_udp_port_event", CCU_CFG_BASE_ADDR, 0x5a, 31, 16, 0x13f },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag1_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG1, "ccu_rx_eth_vlan_tag1", CCU_CFG_BASE_ADDR, 0x5b, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG1, "ccu_rx_eth_cvlan_tag1", CCU_CFG_BASE_ADDR, 0x5b, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag2_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG2, "ccu_rx_eth_vlan_tag2", CCU_CFG_BASE_ADDR, 0x5c, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG2, "ccu_rx_eth_cvlan_tag2", CCU_CFG_BASE_ADDR, 0x5c, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag3_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG3, "ccu_rx_eth_vlan_tag3", CCU_CFG_BASE_ADDR, 0x5d, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG3, "ccu_rx_eth_cvlan_tag3", CCU_CFG_BASE_ADDR, 0x5d, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag4_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG4, "ccu_rx_eth_vlan_tag4", CCU_CFG_BASE_ADDR, 0x5e, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG4, "ccu_rx_eth_cvlan_tag4", CCU_CFG_BASE_ADDR, 0x5e, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag5_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG5, "ccu_rx_eth_vlan_tag5", CCU_CFG_BASE_ADDR, 0x5f, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG5, "ccu_rx_eth_cvlan_tag5", CCU_CFG_BASE_ADDR, 0x5f, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag6_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG6, "ccu_rx_eth_vlan_tag6", CCU_CFG_BASE_ADDR, 0x60, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG6, "ccu_rx_eth_cvlan_tag6", CCU_CFG_BASE_ADDR, 0x60, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_rx_eth_vlan_tag7_reg[] =
{
	{ TEST_CCU_RX_ETH_VLAN_TAG7, "ccu_rx_eth_vlan_tag7", CCU_CFG_BASE_ADDR, 0x61, 15, 0, 0x8100 },
	{ TEST_CCU_RX_ETH_CVLAN_TAG7, "ccu_rx_eth_cvlan_tag7", CCU_CFG_BASE_ADDR, 0x61, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag1_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG1, "ccu_tx_eth_vlan_tag1", CCU_CFG_BASE_ADDR, 0x62, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG1, "ccu_tx_eth_cvlan_tag1", CCU_CFG_BASE_ADDR, 0x62, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag2_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG2, "ccu_tx_eth_vlan_tag2", CCU_CFG_BASE_ADDR, 0x63, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG2, "ccu_tx_eth_cvlan_tag2", CCU_CFG_BASE_ADDR, 0x63, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag3_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG3, "ccu_tx_eth_vlan_tag3", CCU_CFG_BASE_ADDR, 0x64, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG3, "ccu_tx_eth_cvlan_tag3", CCU_CFG_BASE_ADDR, 0x64, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag4_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG4, "ccu_tx_eth_vlan_tag4", CCU_CFG_BASE_ADDR, 0x65, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG4, "ccu_tx_eth_cvlan_tag4", CCU_CFG_BASE_ADDR, 0x65, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag5_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG5, "ccu_tx_eth_vlan_tag5", CCU_CFG_BASE_ADDR, 0x66, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG5, "ccu_tx_eth_cvlan_tag5", CCU_CFG_BASE_ADDR, 0x66, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag6_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG6, "ccu_tx_eth_vlan_tag6", CCU_CFG_BASE_ADDR, 0x67, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG6, "ccu_tx_eth_cvlan_tag6", CCU_CFG_BASE_ADDR, 0x67, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_tx_eth_vlan_tag7_reg[] =
{
	{ TEST_CCU_TX_ETH_VLAN_TAG7, "ccu_tx_eth_vlan_tag7", CCU_CFG_BASE_ADDR, 0x68, 15, 0, 0x8100 },
	{ TEST_CCU_TX_ETH_CVLAN_TAG7, "ccu_tx_eth_cvlan_tag7", CCU_CFG_BASE_ADDR, 0x68, 31, 16, 0x8500 },
};
NEW_CHIP_REG test_ccu_l2_eth_type7_reg[] =
{
	{ TEST_CCU_RX_L2_ETH_TYPE7, "ccu_rx_l2_eth_type7", CCU_CFG_BASE_ADDR, 0x69, 15, 0, 0x88f7 },
	{ TEST_CCU_TX_L2_ETH_TYPE7, "ccu_tx_l2_eth_type7", CCU_CFG_BASE_ADDR, 0x69, 31, 16, 0x88f7 },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type1_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE1, "ccu_rx_l3_ipv4_type1", CCU_CFG_BASE_ADDR, 0x6a, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE1, "ccu_rx_l3_ipv6_type1", CCU_CFG_BASE_ADDR, 0x6a, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type2_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE2, "ccu_rx_l3_ipv4_type2", CCU_CFG_BASE_ADDR, 0x6b, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE2, "ccu_rx_l3_ipv6_type2", CCU_CFG_BASE_ADDR, 0x6b, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type3_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE3, "ccu_rx_l3_ipv4_type3", CCU_CFG_BASE_ADDR, 0x6c, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE3, "ccu_rx_l3_ipv6_type3", CCU_CFG_BASE_ADDR, 0x6c, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type4_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE4, "ccu_rx_l3_ipv4_type4", CCU_CFG_BASE_ADDR, 0x6d, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE4, "ccu_rx_l3_ipv6_type4", CCU_CFG_BASE_ADDR, 0x6d, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type5_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE5, "ccu_rx_l3_ipv4_type5", CCU_CFG_BASE_ADDR, 0x6e, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE5, "ccu_rx_l3_ipv6_type5", CCU_CFG_BASE_ADDR, 0x6e, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type6_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE6, "ccu_rx_l3_ipv4_type6", CCU_CFG_BASE_ADDR, 0x6f, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE6, "ccu_rx_l3_ipv6_type6", CCU_CFG_BASE_ADDR, 0x6f, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_rx_l3_ip_type7_reg[] =
{
	{ TEST_CCU_RX_L3_IPV4_TYPE7, "ccu_rx_l3_ipv4_type7", CCU_CFG_BASE_ADDR, 0x70, 15, 0, 0x800 },
	{ TEST_CCU_RX_L3_IPV6_TYPE7, "ccu_rx_l3_ipv6_type7", CCU_CFG_BASE_ADDR, 0x70, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type1_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE1, "ccu_tx_l3_ipv4_type1", CCU_CFG_BASE_ADDR, 0x71, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE1, "ccu_tx_l3_ipv6_type1", CCU_CFG_BASE_ADDR, 0x71, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type2_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE2, "ccu_tx_l3_ipv4_type2", CCU_CFG_BASE_ADDR, 0x72, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE2, "ccu_tx_l3_ipv6_type2", CCU_CFG_BASE_ADDR, 0x72, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type3_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE3, "ccu_tx_l3_ipv4_type3", CCU_CFG_BASE_ADDR, 0x73, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE3, "ccu_tx_l3_ipv6_type3", CCU_CFG_BASE_ADDR, 0x73, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type4_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE4, "ccu_tx_l3_ipv4_type4", CCU_CFG_BASE_ADDR, 0x74, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE4, "ccu_tx_l3_ipv6_type4", CCU_CFG_BASE_ADDR, 0x74, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type5_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE5, "ccu_tx_l3_ipv4_type5", CCU_CFG_BASE_ADDR, 0x75, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE5, "ccu_tx_l3_ipv6_type5", CCU_CFG_BASE_ADDR, 0x75, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type6_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE6, "ccu_tx_l3_ipv4_type6", CCU_CFG_BASE_ADDR, 0x76, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE6, "ccu_tx_l3_ipv6_type6", CCU_CFG_BASE_ADDR, 0x76, 31, 16, 0x86dd },
};
NEW_CHIP_REG test_ccu_tx_l3_ip_type7_reg[] =
{
	{ TEST_CCU_TX_L3_IPV4_TYPE7, "ccu_tx_l3_ipv4_type7", CCU_CFG_BASE_ADDR, 0x77, 15, 0, 0x800 },
	{ TEST_CCU_TX_L3_IPV6_TYPE7, "ccu_tx_l3_ipv6_type7", CCU_CFG_BASE_ADDR, 0x77, 31, 16, 0x86dd },
};

/*INF_CH_ADP_TX*/
NEW_CHIP_REG test_port_fifo_cfg1_reg[] =
{
	{ TEST_INF_START_LEVEL, "start_level", INF_CH_ADP_TX_BASE_ADDR, 0x2, 6, 0, 0x20 },
	{ TEST_INF_HIGH_LEVEL, "high_level", INF_CH_ADP_TX_BASE_ADDR, 0x2, 14, 8, 0x28 },
	{ TEST_INF_LOW_LEVEL, "low_level", INF_CH_ADP_TX_BASE_ADDR, 0x2, 22, 16, 0x18 },
};
NEW_CHIP_REG test_max_min_clr_reg[] =
{
	{ TEST_INF_MAX_MIN_CLR, "max_min_clr", INF_CH_ADP_TX_BASE_ADDR, 0xa, 7, 0, 0x0 },
};
NEW_CHIP_REG test_port_protect_en_reg[] =
{
	{ TEST_INF_PROTECT_EN_0, "protect_en_0", INF_CH_ADP_TX_BASE_ADDR, 0xb, 31, 0, 0x0 },
	{ TEST_INF_PROTECT_EN_1, "protect_en_1", INF_CH_ADP_TX_BASE_ADDR, 0xc, 31, 0, 0x0 },
};
NEW_CHIP_REG test_port_restart_reg[] =
{
	{ TEST_INF_PORT_RESTART, "port_restart", INF_CH_ADP_TX_BASE_ADDR, 0xd, 7, 0, 0x0 },
};
NEW_CHIP_REG test_tx_map_table_reg[] =
{
	{ TEST_INF_MAP_TABLE, "map_table", INF_CH_ADP_TX_BASE_ADDR, 0xe, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_map_en_reg[] =
{
	{ TEST_INF_MAP_EN, "map_en", INF_CH_ADP_TX_BASE_ADDR, 0xf, 0, 0, 0x0 },
};
NEW_CHIP_REG test_external_cfg_reg[] =
{
	{ TEST_INF_RA_IS_400G, "ra_is_400g", INF_CH_ADP_TX_BASE_ADDR, 0x1c, 0, 0, 0x0 },
	{ TEST_INF_RA_400G_CH, "ra_400g_ch", INF_CH_ADP_TX_BASE_ADDR, 0x1c, 14, 8, 0x7f },
};
NEW_CHIP_REG test_tx_mode_cfg_reg[] =
{
	{ TEST_INF_IS_400G, "is_400g", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 0, 0, 0x0 },
	{ TEST_INF_IS_200G, "is_200g", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 4, 1, 0x0 },
	{ TEST_INF_IS_BYPASS, "is_bypass", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 12, 5, 0x0 },
	{ TEST_INF_IS_PORT6, "is_port6", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 13, 13, 0x1 },
	{ TEST_INF_IS_ASYM, "is_asym", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 14, 14, 0x0 },
	{ TEST_INF_ASYM_INST_SEL, "asym_inst_sel", INF_CH_ADP_TX_BASE_ADDR, 0x1d, 15, 15, 0x0 },
};
NEW_CHIP_REG test_port_fifo_cfg2_reg[] =
{
	{ TEST_INF_PROTECT_UP_LEVEL, "protect_up_level", INF_CH_ADP_TX_BASE_ADDR, 0x1e, 6, 0, 0x38 },
	{ TEST_INF_PROTECT_DOWN_LEVEL, "protect_down_level", INF_CH_ADP_TX_BASE_ADDR, 0x1e, 14, 8, 0x8 },
};
NEW_CHIP_REG test_port_fifo_state_reg[] =
{
	{ TEST_INF_MAX_LEVEL, "max_level", INF_CH_ADP_TX_BASE_ADDR, 0x11, 6, 0, 0x0 },
	{ TEST_INF_MIN_LEVEL, "min_level", INF_CH_ADP_TX_BASE_ADDR, 0x11, 14, 8, 0x0 },
};
NEW_CHIP_REG test_tx_gearbox_alm_reg[] =
{
	{ TEST_INF_FULL_GB_400G, "full_gb_400g", INF_CH_ADP_TX_BASE_ADDR, 0x19, 0, 0, 0x0 },
	{ TEST_INF_EMPTY_GB_400G, "empty_gb_400g", INF_CH_ADP_TX_BASE_ADDR, 0x19, 1, 1, 0x0 },
	{ TEST_INF_FULL_GB_200G, "full_gb_200g", INF_CH_ADP_TX_BASE_ADDR, 0x19, 5, 2, 0x0 },
	{ TEST_INF_EMPTY_GB_200G, "empty_gb_200g", INF_CH_ADP_TX_BASE_ADDR, 0x19, 9, 6, 0x0 },
	{ TEST_INF_FULL_GB_RA, "full_gb_ra", INF_CH_ADP_TX_BASE_ADDR, 0x19, 17, 10, 0x0 },
	{ TEST_INF_EMPTY_GB_RA, "empty_gb_ra", INF_CH_ADP_TX_BASE_ADDR, 0x19, 25, 18, 0x0 },
};
NEW_CHIP_REG test_port_fifo_alm_reg[] =
{
	{ TEST_INF_HIGH_ALM, "high_alm", INF_CH_ADP_TX_BASE_ADDR, 0x1a, 7, 0, 0x0 },
	{ TEST_INF_LOW_ALM, "low_alm", INF_CH_ADP_TX_BASE_ADDR, 0x1a, 15, 8, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM, "protect_up_alm", INF_CH_ADP_TX_BASE_ADDR, 0x1a, 23, 16, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM, "protect_down_alm", INF_CH_ADP_TX_BASE_ADDR, 0x1a, 31, 24, 0x0 },
	{ TEST_INF_PORT_FIFO_FULL, "port_fifo_full", INF_CH_ADP_TX_BASE_ADDR, 0x1b, 7, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY, "port_fifo_empty", INF_CH_ADP_TX_BASE_ADDR, 0x1b, 15, 8, 0x0 },
};
NEW_CHIP_REG test_port_buffer0_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL0_INT, "port_fifo_full0_int", INF_CH_ADP_TX_BASE_ADDR, 0x26, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY0_INT, "port_fifo_empty0_int", INF_CH_ADP_TX_BASE_ADDR, 0x26, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM0_INT, "protect_up_alm0_int", INF_CH_ADP_TX_BASE_ADDR, 0x26, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM0_INT, "protect_down_alm0_int", INF_CH_ADP_TX_BASE_ADDR, 0x26, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer0_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL0_INT_MASK, "port_fifo_full0_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x27, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY0_INT_MASK, "port_fifo_empty0_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x27, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM0_INT_MASK, "protect_up_alm0_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x27, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM0_INT_MASK, "protect_down_alm0_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x27, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer1_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL1_INT, "port_fifo_full1_int", INF_CH_ADP_TX_BASE_ADDR, 0x28, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY1_INT, "port_fifo_empty1_int", INF_CH_ADP_TX_BASE_ADDR, 0x28, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM1_INT, "protect_up_alm1_int", INF_CH_ADP_TX_BASE_ADDR, 0x28, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM1_INT, "protect_down_alm1_int", INF_CH_ADP_TX_BASE_ADDR, 0x28, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer1_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL1_INT_MASK, "port_fifo_full1_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x29, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY1_INT_MASK, "port_fifo_empty1_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x29, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM1_INT_MASK, "protect_up_alm1_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x29, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM1_INT_MASK, "protect_down_alm1_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x29, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer2_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL2_INT, "port_fifo_full2_int", INF_CH_ADP_TX_BASE_ADDR, 0x2a, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY2_INT, "port_fifo_empty2_int", INF_CH_ADP_TX_BASE_ADDR, 0x2a, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM2_INT, "protect_up_alm2_int", INF_CH_ADP_TX_BASE_ADDR, 0x2a, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM2_INT, "protect_down_alm2_int", INF_CH_ADP_TX_BASE_ADDR, 0x2a, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer2_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL2_INT_MASK, "port_fifo_full2_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2b, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY2_INT_MASK, "port_fifo_empty2_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2b, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM2_INT_MASK, "protect_up_alm2_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2b, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM2_INT_MASK, "protect_down_alm2_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2b, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer3_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL3_INT, "port_fifo_full3_int", INF_CH_ADP_TX_BASE_ADDR, 0x2c, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY3_INT, "port_fifo_empty3_int", INF_CH_ADP_TX_BASE_ADDR, 0x2c, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM3_INT, "protect_up_alm3_int", INF_CH_ADP_TX_BASE_ADDR, 0x2c, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM3_INT, "protect_down_alm3_int", INF_CH_ADP_TX_BASE_ADDR, 0x2c, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer3_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL3_INT_MASK, "port_fifo_full3_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2d, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY3_INT_MASK, "port_fifo_empty3_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2d, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM3_INT_MASK, "protect_up_alm3_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2d, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM3_INT_MASK, "protect_down_alm3_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2d, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer4_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL4_INT, "port_fifo_full4_int", INF_CH_ADP_TX_BASE_ADDR, 0x2e, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY4_INT, "port_fifo_empty4_int", INF_CH_ADP_TX_BASE_ADDR, 0x2e, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM4_INT, "protect_up_alm4_int", INF_CH_ADP_TX_BASE_ADDR, 0x2e, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM4_INT, "protect_down_alm4_int", INF_CH_ADP_TX_BASE_ADDR, 0x2e, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer4_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL4_INT_MASK, "port_fifo_full4_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2f, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY4_INT_MASK, "port_fifo_empty4_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2f, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM4_INT_MASK, "protect_up_alm4_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2f, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM4_INT_MASK, "protect_down_alm4_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x2f, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer5_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL5_INT, "port_fifo_full5_int", INF_CH_ADP_TX_BASE_ADDR, 0x30, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY5_INT, "port_fifo_empty5_int", INF_CH_ADP_TX_BASE_ADDR, 0x30, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM5_INT, "protect_up_alm5_int", INF_CH_ADP_TX_BASE_ADDR, 0x30, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM5_INT, "protect_down_alm5_int", INF_CH_ADP_TX_BASE_ADDR, 0x30, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer5_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL5_INT_MASK, "port_fifo_full5_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x31, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY5_INT_MASK, "port_fifo_empty5_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x31, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM5_INT_MASK, "protect_up_alm5_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x31, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM5_INT_MASK, "protect_down_alm5_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x31, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer6_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL6_INT, "port_fifo_full6_int", INF_CH_ADP_TX_BASE_ADDR, 0x32, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY6_INT, "port_fifo_empty6_int", INF_CH_ADP_TX_BASE_ADDR, 0x32, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM6_INT, "protect_up_alm6_int", INF_CH_ADP_TX_BASE_ADDR, 0x32, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM6_INT, "protect_down_alm6_int", INF_CH_ADP_TX_BASE_ADDR, 0x32, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer6_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL6_INT_MASK, "port_fifo_full6_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x33, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY6_INT_MASK, "port_fifo_empty6_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x33, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM6_INT_MASK, "protect_up_alm6_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x33, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM6_INT_MASK, "protect_down_alm6_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x33, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer7_int_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL7_INT, "port_fifo_full7_int", INF_CH_ADP_TX_BASE_ADDR, 0x34, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY7_INT, "port_fifo_empty7_int", INF_CH_ADP_TX_BASE_ADDR, 0x34, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM7_INT, "protect_up_alm7_int", INF_CH_ADP_TX_BASE_ADDR, 0x34, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM7_INT, "protect_down_alm7_int", INF_CH_ADP_TX_BASE_ADDR, 0x34, 7, 6, 0x0 },
};
NEW_CHIP_REG test_port_buffer7_int_mask_reg[] =
{
	{ TEST_INF_PORT_FIFO_FULL7_INT_MASK, "port_fifo_full7_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x35, 1, 0, 0x0 },
	{ TEST_INF_PORT_FIFO_EMPTY7_INT_MASK, "port_fifo_empty7_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x35, 3, 2, 0x0 },
	{ TEST_INF_PROTECT_UP_ALM7_INT_MASK, "protect_up_alm7_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x35, 5, 4, 0x0 },
	{ TEST_INF_PROTECT_DOWN_ALM7_INT_MASK, "protect_down_alm7_int_mask", INF_CH_ADP_TX_BASE_ADDR, 0x35, 7, 6, 0x0 },
};

/*ADJ*/
NEW_CHIP_REG test_adj_cfg_reg[] =
{
	{ TEST_ADJ_I_NOMINAL_VAL, "i_nominal_val", ADJ_BASE_ADDR, 0x0, 12, 0, 0xbb8 },
	{ TEST_ADJ_I_ADJ_P_I, "i_adj_p_i", ADJ_BASE_ADDR, 0x0, 28, 16, 0x12c },
	{ TEST_ADJ_I_ADJ_P_N, "i_adj_p_n", ADJ_BASE_ADDR, 0x1, 7, 0, 0x0 },
	{ TEST_ADJ_I_ADJ_P_D, "i_adj_p_d", ADJ_BASE_ADDR, 0x1, 15, 8, 0x0 },
	{ TEST_ADJ_I_ADJ_ONLY, "i_adj_only", ADJ_BASE_ADDR, 0x1, 16, 16, 0x0 },
	{ TEST_ADJ_I_FIFO_RESTART_EN, "i_fifo_restart_en", ADJ_BASE_ADDR, 0x1, 17, 17, 0x1 },
	{ TEST_ADJ_I_ADJ_ALM_RESTART_EN, "i_adj_alm_restart_en", ADJ_BASE_ADDR, 0x1, 18, 18, 0x1 },
	{ TEST_ADJ_I_PLL_COEFF, "i_pll_coeff", ADJ_BASE_ADDR, 0x1, 20, 19, 0x0 },
	{ TEST_ADJ_I_ADJ_P_D_EN, "i_adj_p_d_en", ADJ_BASE_ADDR, 0x1, 21, 21, 0x0 },
	{ TEST_ADJ_I_CFG_FINISH, "i_cfg_finish", ADJ_BASE_ADDR, 0x1, 22, 22, 0x0 },
};
NEW_CHIP_REG test_del_cnt_cfg_reg[] =
{
	{ TEST_ADJ_CHID_DEL_CNT, "chid_del_cnt", ADJ_BASE_ADDR, 0xa6, 6, 0, 0x0 },
	{ TEST_ADJ_CLR_DEL_CNT, "clr_del_cnt", ADJ_BASE_ADDR, 0xa6, 8, 8, 0x0 },
};
NEW_CHIP_REG test_adj_n_reg[] =
{
	{ TEST_ADJ_I_ADJ_N, "i_adj_n", ADJ_BASE_ADDR, 0xa8, 3, 0, 0x3 },
};
NEW_CHIP_REG test_del_cnt_max_reg[] =
{
	{ TEST_ADJ_DEL_CNT_MAX, "del_cnt_max", ADJ_BASE_ADDR, 0xa7, 5, 0, 0x0 },
};
NEW_CHIP_REG test_cnt_alm_reg[] =
{
	{ TEST_ADJ_O_ADJ_CNT_ALM_0, "o_adj_cnt_alm_0", ADJ_BASE_ADDR, 0xa0, 31, 0, 0x0 },
	{ TEST_ADJ_O_ADJ_CNT_ALM_1, "o_adj_cnt_alm_1", ADJ_BASE_ADDR, 0xa1, 31, 0, 0x0 },
	{ TEST_ADJ_O_ADJ_CNT_ALM_2, "o_adj_cnt_alm_2", ADJ_BASE_ADDR, 0xa2, 15, 0, 0x0 },
};
NEW_CHIP_REG test_core_alm_reg[] =
{
	{ TEST_ADJ_O_ADJ_CORE_ALM_0, "o_adj_core_alm_0", ADJ_BASE_ADDR, 0xa3, 31, 0, 0x0 },
	{ TEST_ADJ_O_ADJ_CORE_ALM_1, "o_adj_core_alm_1", ADJ_BASE_ADDR, 0xa4, 31, 0, 0x0 },
	{ TEST_ADJ_O_ADJ_CORE_ALM_2, "o_adj_core_alm_2", ADJ_BASE_ADDR, 0xa5, 15, 0, 0x0 },
};

/*FLEXE_DEMUX*/
NEW_CHIP_REG test_ready_ts_reg[] =
{
	{ TEST_FLEXE_DEMUX_READY_TS_0, "ready_ts_0", FLEXE_DEMUX_BASE_ADDR, 0x0, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_READY_TS_1, "ready_ts_1", FLEXE_DEMUX_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_READY_TS_2, "ready_ts_2", FLEXE_DEMUX_BASE_ADDR, 0x2, 15, 0, 0x0 },
};
NEW_CHIP_REG test_flexegroup_info_reg[] =
{
	{ TEST_FLEXE_DEMUX_FLEXEGROUP_INFO, "flexegroup_info", FLEXE_DEMUX_BASE_ADDR, 0x3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_group_cfg_reg[] =
{
	{ TEST_FLEXE_DEMUX_GROUP_CFG_0, "group_cfg_0", FLEXE_DEMUX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_GROUP_CFG_1, "group_cfg_1", FLEXE_DEMUX_BASE_ADDR, 0x5, 31, 0, 0x0 },
};
NEW_CHIP_REG test_reorder_asic_reg[] =
{
	{ TEST_FLEXE_DEMUX_REORDER_ASIC_0, "reorder_asic_0", FLEXE_DEMUX_BASE_ADDR, 0x6, 31, 0, 0xffffffff },
	{ TEST_FLEXE_DEMUX_REORDER_ASIC_1, "reorder_asic_1", FLEXE_DEMUX_BASE_ADDR, 0x7, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_autoset_en_reg[] =
{
	{ TEST_FLEXE_DEMUX_AUTOSET_EN, "autoset_en", FLEXE_DEMUX_BASE_ADDR, 0xe, 31, 0, 0x1 },
};
NEW_CHIP_REG test_mode_info_reg[] =
{
	{ TEST_FLEXE_DEMUX_MODE_INFO, "mode_info", FLEXE_DEMUX_BASE_ADDR, 0xf, 7, 0, 0x0 },
};
NEW_CHIP_REG test_reorder_info_reg[] =
{
	{ TEST_FLEXE_DEMUX_REORDER_INFO, "reorder_info", FLEXE_DEMUX_BASE_ADDR, 0x10, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_calendar_cfg_reg[] =
{
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_0, "calendar_cfg_0", FLEXE_DEMUX_BASE_ADDR, 0x11, 31, 0, 0x1 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_1, "calendar_cfg_1", FLEXE_DEMUX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_2, "calendar_cfg_2", FLEXE_DEMUX_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_3, "calendar_cfg_3", FLEXE_DEMUX_BASE_ADDR, 0x14, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_4, "calendar_cfg_4", FLEXE_DEMUX_BASE_ADDR, 0x15, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_5, "calendar_cfg_5", FLEXE_DEMUX_BASE_ADDR, 0x16, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_6, "calendar_cfg_6", FLEXE_DEMUX_BASE_ADDR, 0x17, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_7, "calendar_cfg_7", FLEXE_DEMUX_BASE_ADDR, 0x18, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_8, "calendar_cfg_8", FLEXE_DEMUX_BASE_ADDR, 0x19, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_9, "calendar_cfg_9", FLEXE_DEMUX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_10, "calendar_cfg_10", FLEXE_DEMUX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_11, "calendar_cfg_11", FLEXE_DEMUX_BASE_ADDR, 0x1c, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_12, "calendar_cfg_12", FLEXE_DEMUX_BASE_ADDR, 0x1d, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_13, "calendar_cfg_13", FLEXE_DEMUX_BASE_ADDR, 0x1e, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_14, "calendar_cfg_14", FLEXE_DEMUX_BASE_ADDR, 0x1f, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_15, "calendar_cfg_15", FLEXE_DEMUX_BASE_ADDR, 0x20, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_16, "calendar_cfg_16", FLEXE_DEMUX_BASE_ADDR, 0x21, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_17, "calendar_cfg_17", FLEXE_DEMUX_BASE_ADDR, 0x22, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_18, "calendar_cfg_18", FLEXE_DEMUX_BASE_ADDR, 0x23, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_19, "calendar_cfg_19", FLEXE_DEMUX_BASE_ADDR, 0x24, 31, 0, 0x0 },
};
NEW_CHIP_REG test_channel_own_tsgroup_reg[] =
{
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_0, "channel_own_tsgroup_0", FLEXE_DEMUX_BASE_ADDR, 0x40, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_1, "channel_own_tsgroup_1", FLEXE_DEMUX_BASE_ADDR, 0x41, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_2, "channel_own_tsgroup_2", FLEXE_DEMUX_BASE_ADDR, 0x42, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_3, "channel_own_tsgroup_3", FLEXE_DEMUX_BASE_ADDR, 0x43, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_4, "channel_own_tsgroup_4", FLEXE_DEMUX_BASE_ADDR, 0x44, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_5, "channel_own_tsgroup_5", FLEXE_DEMUX_BASE_ADDR, 0x45, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_6, "channel_own_tsgroup_6", FLEXE_DEMUX_BASE_ADDR, 0x46, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_7, "channel_own_tsgroup_7", FLEXE_DEMUX_BASE_ADDR, 0x47, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_8, "channel_own_tsgroup_8", FLEXE_DEMUX_BASE_ADDR, 0x48, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_9, "channel_own_tsgroup_9", FLEXE_DEMUX_BASE_ADDR, 0x49, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_10, "channel_own_tsgroup_10", FLEXE_DEMUX_BASE_ADDR, 0x4a, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_11, "channel_own_tsgroup_11", FLEXE_DEMUX_BASE_ADDR, 0x4b, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_12, "channel_own_tsgroup_12", FLEXE_DEMUX_BASE_ADDR, 0x4c, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_13, "channel_own_tsgroup_13", FLEXE_DEMUX_BASE_ADDR, 0x4d, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_14, "channel_own_tsgroup_14", FLEXE_DEMUX_BASE_ADDR, 0x4e, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_15, "channel_own_tsgroup_15", FLEXE_DEMUX_BASE_ADDR, 0x4f, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_16, "channel_own_tsgroup_16", FLEXE_DEMUX_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_17, "channel_own_tsgroup_17", FLEXE_DEMUX_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_18, "channel_own_tsgroup_18", FLEXE_DEMUX_BASE_ADDR, 0x52, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_19, "channel_own_tsgroup_19", FLEXE_DEMUX_BASE_ADDR, 0x53, 31, 0, 0x0 },
};
NEW_CHIP_REG test_interleave_rst_reg[] =
{
	{ TEST_FLEXE_DEMUX_INTERLEAVE_RST, "interleave_rst", FLEXE_DEMUX_BASE_ADDR, 0x54, 7, 0, 0x0 },
};
NEW_CHIP_REG test_maxlevel_clr_reg[] =
{
	{ TEST_FLEXE_DEMUX_MAXLEVEL_CLR, "maxlevel_clr", FLEXE_DEMUX_BASE_ADDR, 0x55, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ready_ts_b_reg[] =
{
	{ TEST_FLEXE_DEMUX_READY_TS_B_0, "ready_ts_b_0", FLEXE_DEMUX_BASE_ADDR, 0x80, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_READY_TS_B_1, "ready_ts_b_1", FLEXE_DEMUX_BASE_ADDR, 0x81, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_READY_TS_B_2, "ready_ts_b_2", FLEXE_DEMUX_BASE_ADDR, 0x82, 15, 0, 0x0 },
};
NEW_CHIP_REG test_calendar_cfg_b_reg[] =
{
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_0, "calendar_cfg_b_0", FLEXE_DEMUX_BASE_ADDR, 0x91, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_1, "calendar_cfg_b_1", FLEXE_DEMUX_BASE_ADDR, 0x92, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_2, "calendar_cfg_b_2", FLEXE_DEMUX_BASE_ADDR, 0x93, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_3, "calendar_cfg_b_3", FLEXE_DEMUX_BASE_ADDR, 0x94, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_4, "calendar_cfg_b_4", FLEXE_DEMUX_BASE_ADDR, 0x95, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_5, "calendar_cfg_b_5", FLEXE_DEMUX_BASE_ADDR, 0x96, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_6, "calendar_cfg_b_6", FLEXE_DEMUX_BASE_ADDR, 0x97, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_7, "calendar_cfg_b_7", FLEXE_DEMUX_BASE_ADDR, 0x98, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_8, "calendar_cfg_b_8", FLEXE_DEMUX_BASE_ADDR, 0x99, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_9, "calendar_cfg_b_9", FLEXE_DEMUX_BASE_ADDR, 0x9a, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_10, "calendar_cfg_b_10", FLEXE_DEMUX_BASE_ADDR, 0x9b, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_11, "calendar_cfg_b_11", FLEXE_DEMUX_BASE_ADDR, 0x9c, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_12, "calendar_cfg_b_12", FLEXE_DEMUX_BASE_ADDR, 0x9d, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_13, "calendar_cfg_b_13", FLEXE_DEMUX_BASE_ADDR, 0x9e, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_14, "calendar_cfg_b_14", FLEXE_DEMUX_BASE_ADDR, 0x9f, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_15, "calendar_cfg_b_15", FLEXE_DEMUX_BASE_ADDR, 0xa0, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_16, "calendar_cfg_b_16", FLEXE_DEMUX_BASE_ADDR, 0xa1, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_17, "calendar_cfg_b_17", FLEXE_DEMUX_BASE_ADDR, 0xa2, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_18, "calendar_cfg_b_18", FLEXE_DEMUX_BASE_ADDR, 0xa3, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CALENDAR_CFG_B_19, "calendar_cfg_b_19", FLEXE_DEMUX_BASE_ADDR, 0xa4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_channel_own_tsgroup_b_reg[] =
{
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_0, "channel_own_tsgroup_b_0", FLEXE_DEMUX_BASE_ADDR, 0xc0, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_1, "channel_own_tsgroup_b_1", FLEXE_DEMUX_BASE_ADDR, 0xc1, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_2, "channel_own_tsgroup_b_2", FLEXE_DEMUX_BASE_ADDR, 0xc2, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_3, "channel_own_tsgroup_b_3", FLEXE_DEMUX_BASE_ADDR, 0xc3, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_4, "channel_own_tsgroup_b_4", FLEXE_DEMUX_BASE_ADDR, 0xc4, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_5, "channel_own_tsgroup_b_5", FLEXE_DEMUX_BASE_ADDR, 0xc5, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_6, "channel_own_tsgroup_b_6", FLEXE_DEMUX_BASE_ADDR, 0xc6, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_7, "channel_own_tsgroup_b_7", FLEXE_DEMUX_BASE_ADDR, 0xc7, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_8, "channel_own_tsgroup_b_8", FLEXE_DEMUX_BASE_ADDR, 0xc8, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_9, "channel_own_tsgroup_b_9", FLEXE_DEMUX_BASE_ADDR, 0xc9, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_10, "channel_own_tsgroup_b_10", FLEXE_DEMUX_BASE_ADDR, 0xca, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_11, "channel_own_tsgroup_b_11", FLEXE_DEMUX_BASE_ADDR, 0xcb, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_12, "channel_own_tsgroup_b_12", FLEXE_DEMUX_BASE_ADDR, 0xcc, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_13, "channel_own_tsgroup_b_13", FLEXE_DEMUX_BASE_ADDR, 0xcd, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_14, "channel_own_tsgroup_b_14", FLEXE_DEMUX_BASE_ADDR, 0xce, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_15, "channel_own_tsgroup_b_15", FLEXE_DEMUX_BASE_ADDR, 0xcf, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_16, "channel_own_tsgroup_b_16", FLEXE_DEMUX_BASE_ADDR, 0xd0, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_17, "channel_own_tsgroup_b_17", FLEXE_DEMUX_BASE_ADDR, 0xd1, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_18, "channel_own_tsgroup_b_18", FLEXE_DEMUX_BASE_ADDR, 0xd2, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_CHANNEL_OWN_TSGROUP_B_19, "channel_own_tsgroup_b_19", FLEXE_DEMUX_BASE_ADDR, 0xd3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_enable_ab_reg[] =
{
	{ TEST_FLEXE_DEMUX_ENABLE_AB, "enable_ab", FLEXE_DEMUX_BASE_ADDR, 0xdd, 0, 0, 0x0 },
};
NEW_CHIP_REG test_verify_cfg_reg[] =
{
	{ TEST_FLEXE_DEMUX_VERIFY_CFG, "verify_cfg", FLEXE_DEMUX_BASE_ADDR, 0xde, 15, 0, 0x13f0 },
};
NEW_CHIP_REG test_threshold_reg[] =
{
	{ TEST_FLEXE_DEMUX_THRESHOLD, "threshold", FLEXE_DEMUX_BASE_ADDR, 0xe0, 31, 0, 0xcccccccc },
};
NEW_CHIP_REG test_threshold_full_reg[] =
{
	{ TEST_FLEXE_DEMUX_THRESHOLD_FULL_0, "threshold_full_0", FLEXE_DEMUX_BASE_ADDR, 0xe1, 31, 0, 0x3c3c3c3c },
	{ TEST_FLEXE_DEMUX_THRESHOLD_FULL_1, "threshold_full_1", FLEXE_DEMUX_BASE_ADDR, 0xe2, 31, 0, 0x3c3c3c3c },
};
NEW_CHIP_REG test_threshold_empty_reg[] =
{
	{ TEST_FLEXE_DEMUX_THRESHOLD_EMPTY_0, "threshold_empty_0", FLEXE_DEMUX_BASE_ADDR, 0xe3, 31, 0, 0x1010101 },
	{ TEST_FLEXE_DEMUX_THRESHOLD_EMPTY_1, "threshold_empty_1", FLEXE_DEMUX_BASE_ADDR, 0xe4, 31, 0, 0x1010101 },
};
NEW_CHIP_REG test_maxlevel_interleave_reg[] =
{
	{ TEST_FLEXE_DEMUX_MAXLEVEL_INTERLEAVE_0, "maxlevel_interleave_0", FLEXE_DEMUX_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_MAXLEVEL_INTERLEAVE_1, "maxlevel_interleave_1", FLEXE_DEMUX_BASE_ADDR, 0x57, 31, 0, 0x0 },
};
NEW_CHIP_REG test_flexedemux_ram_full_reg[] =
{
	{ TEST_FLEXE_DEMUX_RAM_FULL_0, "flexedemux_ram_full_0", FLEXE_DEMUX_BASE_ADDR, 0x25, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_RAM_FULL_1, "flexedemux_ram_full_1", FLEXE_DEMUX_BASE_ADDR, 0x26, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_RAM_FULL_2, "flexedemux_ram_full_2", FLEXE_DEMUX_BASE_ADDR, 0x27, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_RAM_FULL_3, "flexedemux_ram_full_3", FLEXE_DEMUX_BASE_ADDR, 0x28, 3, 0, 0x0 },
};
NEW_CHIP_REG test_flexedemux_fifo_full_reg[] =
{
	{ TEST_FLEXE_DEMUX_FIFO_FULL, "flexedemux_fifo_full", FLEXE_DEMUX_BASE_ADDR, 0x29, 7, 0, 0x0 },
};
NEW_CHIP_REG test_flexedemux_fifo_empty_reg[] =
{
	{ TEST_FLEXE_DEMUX_FIFO_EMPTY, "flexedemux_fifo_empty", FLEXE_DEMUX_BASE_ADDR, 0x39, 7, 0, 0x0 },
};
NEW_CHIP_REG test_fp_check_alm_reg[] =
{
	{ TEST_FLEXE_DEMUX_FP_CHECK_ALM, "fp_check_alm", FLEXE_DEMUX_BASE_ADDR, 0xe5, 7, 0, 0x0 },
};
NEW_CHIP_REG test_head_check_phy_alm_reg[] =
{
	{ TEST_FLEXE_DEMUX_HEAD_CHECK_PHY_ALM, "head_check_phy_alm", FLEXE_DEMUX_BASE_ADDR, 0xe6, 7, 0, 0x0 },
};
NEW_CHIP_REG test_head_check_channel_alm_reg[] =
{
	{ TEST_FLEXE_DEMUX_HEAD_CHECK_CHANNEL_ALM_0, "head_check_channel_alm_0", FLEXE_DEMUX_BASE_ADDR, 0xe7, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_HEAD_CHECK_CHANNEL_ALM_1, "head_check_channel_alm_1", FLEXE_DEMUX_BASE_ADDR, 0xe8, 31, 0, 0x0 },
	{ TEST_FLEXE_DEMUX_HEAD_CHECK_CHANNEL_ALM_2, "head_check_channel_alm_2", FLEXE_DEMUX_BASE_ADDR, 0xe9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_ext_col_gen_m_reg[] =
{
	{ TEST_EXT_COL_GEN_M, "ext_col_gen_m", OHOAM_EF_ASIC_BASE_ADDR, 0x9, 31, 0, 0x2625a000 },
};
NEW_CHIP_REG test_ext_col_gen_base_m_reg[] =
{
	{ TEST_EXT_COL_GEN_BASE_M, "ext_col_gen_base_m", OHOAM_EF_ASIC_BASE_ADDR, 0xa, 31, 0, 0x5b7dbe00 },
};
NEW_CHIP_REG test_mac_ctrl_insert_oam_reg[] =
{
	{ TEST_SOAM_FLEXE_SELF_PLS, "soam_flexe_self_pls", OHOAM_EF_ASIC_BASE_ADDR, 0x6, 0, 0, 0x0 },
	{ TEST_SOAM_MAC_SELF_PLS, "soam_mac_self_pls", OHOAM_EF_ASIC_BASE_ADDR, 0x6, 1, 1, 0x0 },
};
NEW_CHIP_REG test_flexe_dm_cnt_reg[] =
{
	{ TEST_FLEXE_1DM_CNT, "flexe_1dm_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xd, 9, 0, 0x0 },
	{ TEST_FLEXE_2DMM_CNT, "flexe_2dmm_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xd, 19, 10, 0x0 },
	{ TEST_FLEXE_2DMR_CNT, "flexe_2dmr_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xd, 29, 20, 0x0 },
};
NEW_CHIP_REG test_mac_dm_cnt_reg[] =
{
	{ TEST_MAC_1DM_CNT, "mac_1dm_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xe, 9, 0, 0x0 },
	{ TEST_MAC_2DMM_CNT, "mac_2dmm_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xe, 19, 10, 0x0 },
	{ TEST_MAC_2DMR_CNT, "mac_2dmr_cnt", OHOAM_EF_ASIC_BASE_ADDR, 0xe, 29, 20, 0x0 },
};
NEW_CHIP_REG test_flexe_oam_cmp_alm_reg[] =
{
	{ TEST_FLEXE_OAM_CMP_ALM_0, "flexe_oam_cmp_alm_0", OHOAM_EF_ASIC_BASE_ADDR, 0x0, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_CMP_ALM_1, "flexe_oam_cmp_alm_1", OHOAM_EF_ASIC_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_FLEXE_OAM_CMP_ALM_2, "flexe_oam_cmp_alm_2", OHOAM_EF_ASIC_BASE_ADDR, 0x2, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mac_oam_cmp_alm_reg[] =
{
	{ TEST_MAC_OAM_CMP_ALM_0, "mac_oam_cmp_alm_0", OHOAM_EF_ASIC_BASE_ADDR, 0x3, 31, 0, 0x0 },
	{ TEST_MAC_OAM_CMP_ALM_1, "mac_oam_cmp_alm_1", OHOAM_EF_ASIC_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_MAC_OAM_CMP_ALM_2, "mac_oam_cmp_alm_2", OHOAM_EF_ASIC_BASE_ADDR, 0x5, 15, 0, 0x0 },
};


NEW_CHIP_REG test_oam_rx_cfg_reg[] =
{
	{ TEST_OAM_RX_GLB_BIPERR_BIT_CFG, "rx_glb_biperr_bit_cfg", OAM_RX_BASE_ADDR, 0x0, 0, 0, 0x1 },
	{ TEST_OAM_RX_GLB_BEIERR_BIT_CFG, "rx_glb_beierr_bit_cfg", OAM_RX_BASE_ADDR, 0x0, 1, 1, 0x1 },
	{ TEST_OAM_RX_CRC_INVERT, "crc_invert", OAM_RX_BASE_ADDR, 0x0, 3, 3, 0x0 },
	{ TEST_OAM_RX_BYPASS_OAM_RX, "bypass_oam_rx", OAM_RX_BASE_ADDR, 0x0, 4, 4, 0x0 },
	{ TEST_OAM_RX_OAM_RX_RDI_BLK, "oam_rx_rdi_blk", OAM_RX_BASE_ADDR, 0x0, 6, 5, 0x0 },
	{ TEST_OAM_RX_OAM_IDFY_37_34_CFG, "oam_idfy_37_34_cfg", OAM_RX_BASE_ADDR, 0x0, 11, 8, 0xc },
	{ TEST_OAM_RX_BAS_POS_CNT, "bas_pos_cnt", OAM_RX_BASE_ADDR, 0x0, 13, 12, 0x2 },
	{ TEST_OAM_RX_CRC_BASE_CNT_EN, "crc_base_cnt_en", OAM_RX_BASE_ADDR, 0x0, 14, 14, 0x0 },
	{ TEST_OAM_RX_CRC_OAM_CAL_EN, "crc_oam_cal_en", OAM_RX_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_OAM_RX_BYPASS_OAM_ALM_ALL, "bypass_oam_alm_all", OAM_RX_BASE_ADDR, 0x0, 16, 16, 0x0 },
	{ TEST_OAM_RX_OAM_RX_BASE_LOS_SEL, "oam_rx_base_los_sel", OAM_RX_BASE_ADDR, 0x0, 17, 17, 0x0 },
	{ TEST_OAM_RX_OAM_CNT_CLR_NUM, "oam_cnt_clr_num", OAM_RX_BASE_ADDR, 0x0, 24, 18, 0x0 },
	{ TEST_OAM_RX_BASE_OAM_CNT_CLR_NUM, "base_oam_cnt_clr_num", OAM_RX_BASE_ADDR, 0x0, 31, 25, 0x0 },
};
NEW_CHIP_REG test_rx_idle_rpl_en_reg[] =
{
	{ TEST_OAM_RX_IDLE_RPL_EN_0, "rx_idle_rpl_en_0", OAM_RX_BASE_ADDR, 0xf, 31, 0, 0xffffffff },
	{ TEST_OAM_RX_IDLE_RPL_EN_1, "rx_idle_rpl_en_1", OAM_RX_BASE_ADDR, 0x10, 31, 0, 0xffffffff },
	{ TEST_OAM_RX_IDLE_RPL_EN_2, "rx_idle_rpl_en_2", OAM_RX_BASE_ADDR, 0x11, 15, 0, 0xffff },
};
NEW_CHIP_REG test_bypass_chnl_reg[] =
{
	{ TEST_OAM_RX_BYPASS_CHNL_0, "bypass_chnl_0", OAM_RX_BASE_ADDR, 0x15, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_CHNL_1, "bypass_chnl_1", OAM_RX_BASE_ADDR, 0x16, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_CHNL_2, "bypass_chnl_2", OAM_RX_BASE_ADDR, 0x17, 15, 0, 0x0 },
};
NEW_CHIP_REG test_period_cfg_reg[] =
{
	{ TEST_OAM_RX_PERIOD_CFG_0, "period_cfg_0", OAM_RX_BASE_ADDR, 0x18, 31, 0, 0x0 },
	{ TEST_OAM_RX_PERIOD_CFG_1, "period_cfg_1", OAM_RX_BASE_ADDR, 0x19, 31, 0, 0x0 },
	{ TEST_OAM_RX_PERIOD_CFG_2, "period_cfg_2", OAM_RX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_OAM_RX_PERIOD_CFG_3, "period_cfg_3", OAM_RX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_OAM_RX_PERIOD_CFG_4, "period_cfg_4", OAM_RX_BASE_ADDR, 0x1c, 31, 0, 0x0 },
};
NEW_CHIP_REG test_period_sel_reg[] =
{
	{ TEST_OAM_RX_PERIOD_SEL_0, "period_sel_0", OAM_RX_BASE_ADDR, 0x1d, 31, 0, 0xaaaaaaaa },
	{ TEST_OAM_RX_PERIOD_SEL_1, "period_sel_1", OAM_RX_BASE_ADDR, 0x1e, 31, 0, 0xaaaaaaaa },
	{ TEST_OAM_RX_PERIOD_SEL_2, "period_sel_2", OAM_RX_BASE_ADDR, 0x1f, 31, 0, 0xaaaaaaaa },
	{ TEST_OAM_RX_PERIOD_SEL_3, "period_sel_3", OAM_RX_BASE_ADDR, 0x20, 31, 0, 0xaaaaaaaa },
	{ TEST_OAM_RX_PERIOD_SEL_4, "period_sel_4", OAM_RX_BASE_ADDR, 0x21, 31, 0, 0xaaaaaaaa },
};
NEW_CHIP_REG test_oam_rx_alm_en_reg[] =
{
	{ TEST_OAM_RX_BASE_LOS_ALM_EN, "base_los_alm_en", OAM_RX_BASE_ADDR, 0x28, 0, 0, 0x1 },
	{ TEST_OAM_RX_BAS_CS_LF_ALM_EN, "bas_cs_lf_alm_en", OAM_RX_BASE_ADDR, 0x28, 1, 1, 0x1 },
	{ TEST_OAM_RX_BAS_CS_RF_ALM_EN, "bas_cs_rf_alm_en", OAM_RX_BASE_ADDR, 0x28, 2, 2, 0x1 },
	{ TEST_OAM_RX_BAS_CSF_LPI_ALM_EN, "bas_csf_lpi_alm_en", OAM_RX_BASE_ADDR, 0x28, 3, 3, 0x1 },
	{ TEST_OAM_RX_SDBIP_ALM_EN, "sdbip_alm_en", OAM_RX_BASE_ADDR, 0x28, 4, 4, 0x1 },
	{ TEST_OAM_RX_SDBEI_ALM_EN, "sdbei_alm_en", OAM_RX_BASE_ADDR, 0x28, 5, 5, 0x1 },
	{ TEST_OAM_RX_CLIENT_LF_ALM_EN, "client_lf_alm_en", OAM_RX_BASE_ADDR, 0x28, 6, 6, 0x1 },
	{ TEST_OAM_RX_CLIENT_RF_ALM_EN, "client_rf_alm_en", OAM_RX_BASE_ADDR, 0x28, 7, 7, 0x1 },
	{ TEST_OAM_RX_CLIENT_LPI_ALM_EN, "client_lpi_alm_en", OAM_RX_BASE_ADDR, 0x28, 8, 8, 0x1 },
	{ TEST_OAM_RX_BAS_RDI_ALM_EN, "bas_rdi_alm_en", OAM_RX_BASE_ADDR, 0x28, 9, 9, 0x1 },
	{ TEST_OAM_RX_CLIENT_FAIL_ALM_EN, "client_fail_alm_en", OAM_RX_BASE_ADDR, 0x28, 10, 10, 0x1 },
	{ TEST_OAM_RX_TX_SDBIP_ALM_EN, "tx_sdbip_alm_en", OAM_RX_BASE_ADDR, 0x28, 11, 11, 0x1 },
	{ TEST_OAM_RX_TX_SDBEI_ALM_EN, "tx_sdbei_alm_en", OAM_RX_BASE_ADDR, 0x28, 12, 12, 0x1 },
	{ TEST_OAM_RX_TX_BASE_LOS_ALM_EN, "tx_base_los_alm_en", OAM_RX_BASE_ADDR, 0x28, 13, 13, 0x1 },
	{ TEST_OAM_RX_TX_BAS_PERIOD_ALM_EN, "tx_bas_period_alm_en", OAM_RX_BASE_ADDR, 0x28, 14, 14, 0x1 },
	{ TEST_OAM_RX_TX_CLIENT_LF_ALM_EN, "tx_client_lf_alm_en", OAM_RX_BASE_ADDR, 0x28, 15, 15, 0x1 },
	{ TEST_OAM_RX_TX_CLIENT_RF_ALM_EN, "tx_client_rf_alm_en", OAM_RX_BASE_ADDR, 0x28, 16, 16, 0x1 },
	{ TEST_OAM_RX_TX_CLIENT_LPI_ALM_EN, "tx_client_lpi_alm_en", OAM_RX_BASE_ADDR, 0x28, 17, 17, 0x1 },
	{ TEST_OAM_RX_LPI_ALM_EN, "rx_lpi_alm_en", OAM_RX_BASE_ADDR, 0x28, 18, 18, 0x1 },
	{ TEST_OAM_RX_TX_SFBIP_ALM_EN, "tx_sfbip_alm_en", OAM_RX_BASE_ADDR, 0x28, 19, 19, 0x1 },
	{ TEST_OAM_RX_TX_SFBEI_ALM_EN, "tx_sfbei_alm_en", OAM_RX_BASE_ADDR, 0x28, 20, 20, 0x1 },
	{ TEST_OAM_RX_SFBIP_ALM_EN, "sfbip_alm_en", OAM_RX_BASE_ADDR, 0x28, 21, 21, 0x1 },
	{ TEST_OAM_RX_SFBEI_ALM_EN, "sfbei_alm_en", OAM_RX_BASE_ADDR, 0x28, 22, 22, 0x1 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM_EN, "bas_period_alm_en", OAM_RX_BASE_ADDR, 0x28, 23, 23, 0x1 },
};
NEW_CHIP_REG test_bypass_xgmii_reg[] =
{
	{ TEST_OAM_RX_BYPASS_XGMII_0, "bypass_xgmii_0", OAM_RX_BASE_ADDR, 0x68, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_XGMII_1, "bypass_xgmii_1", OAM_RX_BASE_ADDR, 0x69, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_XGMII_2, "bypass_xgmii_2", OAM_RX_BASE_ADDR, 0x6a, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_lpi_rpl_en_reg[] =
{
	{ TEST_OAM_RX_LPI_RPL_EN_0, "rx_lpi_rpl_en_0", OAM_RX_BASE_ADDR, 0x6b, 31, 0, 0xffffffff },
	{ TEST_OAM_RX_LPI_RPL_EN_1, "rx_lpi_rpl_en_1", OAM_RX_BASE_ADDR, 0x6c, 31, 0, 0xffffffff },
	{ TEST_OAM_RX_LPI_RPL_EN_2, "rx_lpi_rpl_en_2", OAM_RX_BASE_ADDR, 0x6d, 15, 0, 0xffff },
};
NEW_CHIP_REG test_bas_period_a_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_0, "bas_period_0", OAM_RX_BASE_ADDR, 0x6f, 9, 0, 0x10 },
	{ TEST_OAM_RX_BAS_PERIOD_1, "bas_period_1", OAM_RX_BASE_ADDR, 0x6f, 21, 12, 0x20 },
};
NEW_CHIP_REG test_bas_period_b_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_2, "bas_period_2", OAM_RX_BASE_ADDR, 0x70, 9, 0, 0x40 },
	{ TEST_OAM_RX_BAS_PERIOD_3, "bas_period_3", OAM_RX_BASE_ADDR, 0x70, 21, 12, 0x200 },
};
NEW_CHIP_REG test_bypass_oam_alm_ch_reg[] =
{
	{ TEST_OAM_RX_BYPASS_OAM_ALM_CH_0, "bypass_oam_alm_ch_0", OAM_RX_BASE_ADDR, 0x72, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_OAM_ALM_CH_1, "bypass_oam_alm_ch_1", OAM_RX_BASE_ADDR, 0x73, 31, 0, 0x0 },
	{ TEST_OAM_RX_BYPASS_OAM_ALM_CH_2, "bypass_oam_alm_ch_2", OAM_RX_BASE_ADDR, 0x74, 15, 0, 0x0 },
};
NEW_CHIP_REG test_oam_rx_config_reg[] =
{
	{ TEST_OAM_RX_BAS_RAM_CLR_CH, "bas_ram_clr_ch", OAM_RX_BASE_ADDR, 0x7e, 6, 0, 0x0 },
	{ TEST_OAM_RX_TIMESTAMP_SEL, "timestamp_sel", OAM_RX_BASE_ADDR, 0x7e, 8, 8, 0x0 },
	{ TEST_OAM_RX_LPI_PRE_CNT, "lpi_pre_cnt", OAM_RX_BASE_ADDR, 0x7e, 14, 12, 0x3 },
	{ TEST_OAM_RX_LPI_POS_CNT, "lpi_pos_cnt", OAM_RX_BASE_ADDR, 0x7e, 18, 16, 0x3 },
	{ TEST_OAM_RX_BASE_LOS_RPL_EN, "base_los_rpl_en", OAM_RX_BASE_ADDR, 0x7e, 9, 9, 0x0 },
	{ TEST_OAM_RX_BIP_RECAL_EN, "bip_recal_en", OAM_RX_BASE_ADDR, 0x7e, 10, 10, 0x1 },
	{ TEST_OAM_RX_BASE_BIP_CRC_EN, "base_bip_crc_en", OAM_RX_BASE_ADDR, 0x7e, 11, 11, 0x0 },
};
NEW_CHIP_REG test_oam_type_bip_cal_en_reg[] =
{
	{ TEST_OAM_RX_OAM_TYPE_BIP_CAL_EN_0, "oam_type_bip_cal_en_0", OAM_RX_BASE_ADDR, 0x7f, 31, 0, 0xfffffffd },
};
NEW_CHIP_REG test_lf_manual_insert_reg[] =
{
	{ TEST_OAM_RX_LF_MANUAL_INSERT_0, "lf_manual_insert_0", OAM_RX_BASE_ADDR, 0x8a, 31, 0, 0x0 },
	{ TEST_OAM_RX_LF_MANUAL_INSERT_1, "lf_manual_insert_1", OAM_RX_BASE_ADDR, 0x8b, 31, 0, 0x0 },
	{ TEST_OAM_RX_LF_MANUAL_INSERT_2, "lf_manual_insert_2", OAM_RX_BASE_ADDR, 0x8c, 15, 0, 0x0 },
	{ TEST_OAM_RX_OAM_TYPE_BIP_CAL_EN_1, "oam_type_bip_cal_en_1", OAM_RX_BASE_ADDR, 0x8c, 31, 16, 0xffff },
};
NEW_CHIP_REG test_rf_manual_insert_reg[] =
{
	{ TEST_OAM_RX_RF_MANUAL_INSERT_0, "rf_manual_insert_0", OAM_RX_BASE_ADDR, 0x8d, 31, 0, 0x0 },
	{ TEST_OAM_RX_RF_MANUAL_INSERT_1, "rf_manual_insert_1", OAM_RX_BASE_ADDR, 0x8e, 31, 0, 0x0 },
	{ TEST_OAM_RX_RF_MANUAL_INSERT_2, "rf_manual_insert_2", OAM_RX_BASE_ADDR, 0x8f, 15, 0, 0x0 },
	{ TEST_OAM_RX_OAM_TYPE_BIP_CAL_EN_2, "oam_type_bip_cal_en_2", OAM_RX_BASE_ADDR, 0x8f, 31, 16, 0xffff },
};
NEW_CHIP_REG test_lpi_manual_insert_reg[] =
{
	{ TEST_OAM_RX_LPI_MANUAL_INSERT_0, "lpi_manual_insert_0", OAM_RX_BASE_ADDR, 0x90, 31, 0, 0x0 },
	{ TEST_OAM_RX_LPI_MANUAL_INSERT_1, "lpi_manual_insert_1", OAM_RX_BASE_ADDR, 0x91, 31, 0, 0x0 },
	{ TEST_OAM_RX_LPI_MANUAL_INSERT_2, "lpi_manual_insert_2", OAM_RX_BASE_ADDR, 0x92, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_biperr_cnt_clr_reg[] =
{
	{ TEST_OAM_RX_BIPERR_CNT_CLR_0, "rx_biperr_cnt_clr_0", OAM_RX_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_OAM_RX_BIPERR_CNT_CLR_1, "rx_biperr_cnt_clr_1", OAM_RX_BASE_ADDR, 0x2, 31, 0, 0x0 },
	{ TEST_OAM_RX_BIPERR_CNT_CLR_2, "rx_biperr_cnt_clr_2", OAM_RX_BASE_ADDR, 0x3, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_beierr_cnt_clr_reg[] =
{
	{ TEST_OAM_RX_BEIERR_CNT_CLR_0, "rx_beierr_cnt_clr_0", OAM_RX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_OAM_RX_BEIERR_CNT_CLR_1, "rx_beierr_cnt_clr_1", OAM_RX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_OAM_RX_BEIERR_CNT_CLR_2, "rx_beierr_cnt_clr_2", OAM_RX_BASE_ADDR, 0x6, 15, 0, 0x0 },
};
NEW_CHIP_REG test_oam_clr_ram_init_reg[] =
{
	{ TEST_OAM_RX_OAM_CNT_CLR, "oam_cnt_clr", OAM_RX_BASE_ADDR, 0x24, 0, 0, 0x0 },
	{ TEST_OAM_RX_OAM_CNT_ALL_CLR, "oam_cnt_all_clr", OAM_RX_BASE_ADDR, 0x24, 1, 1, 0x0 },
	{ TEST_OAM_RX_TS_RAM_INIT, "ts_ram_init", OAM_RX_BASE_ADDR, 0x24, 2, 2, 0x0 },
	{ TEST_OAM_RX_BASE_OAM_CNT_CLR, "base_oam_cnt_clr", OAM_RX_BASE_ADDR, 0x24, 3, 3, 0x0 },
	{ TEST_OAM_RX_BASE_OAM_CNT_ALL_CLR, "base_oam_cnt_all_clr", OAM_RX_BASE_ADDR, 0x24, 4, 4, 0x0 },
	{ TEST_OAM_RX_BASE_OAM_RAM_CLR, "base_oam_ram_clr", OAM_RX_BASE_ADDR, 0x24, 5, 5, 0x0 },
	{ TEST_OAM_RX_FIFO_CNT_CLR, "fifo_cnt_clr", OAM_RX_BASE_ADDR, 0x24, 6, 6, 0x0 },
};
NEW_CHIP_REG test_oam_cnt_clr_done_reg[] =
{
	{ TEST_OAM_RX_OAM_CNT_CLR_DONE, "oam_cnt_clr_done", OAM_RX_BASE_ADDR, 0x26, 0, 0, 0x0 },
	{ TEST_OAM_RX_TS_RAM_INIT_DONE, "ts_ram_init_done", OAM_RX_BASE_ADDR, 0x26, 1, 1, 0x0 },
	{ TEST_OAM_RX_BASE_OAM_CNT_CLR_DONE, "base_oam_cnt_clr_done", OAM_RX_BASE_ADDR, 0x26, 2, 2, 0x0 },
	{ TEST_OAM_RX_FIFO_CNT_MAX, "fifo_cnt_max", OAM_RX_BASE_ADDR, 0x26, 14, 4, 0x0 },
};
NEW_CHIP_REG test_base_period_reg[] =
{
	{ TEST_OAM_RX_BASE_PERIOD_0, "base_period_0", OAM_RX_BASE_ADDR, 0x39, 31, 0, 0x0 },
	{ TEST_OAM_RX_BASE_PERIOD_1, "base_period_1", OAM_RX_BASE_ADDR, 0x3a, 31, 0, 0x0 },
	{ TEST_OAM_RX_BASE_PERIOD_2, "base_period_2", OAM_RX_BASE_ADDR, 0x3b, 31, 0, 0x0 },
	{ TEST_OAM_RX_BASE_PERIOD_3, "base_period_3", OAM_RX_BASE_ADDR, 0x3c, 31, 0, 0x0 },
	{ TEST_OAM_RX_BASE_PERIOD_4, "base_period_4", OAM_RX_BASE_ADDR, 0x3d, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_reg[] =
{
	{ TEST_OAM_RX_SDBIP_0, "rx_sdbip_0", OAM_RX_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_1, "rx_sdbip_1", OAM_RX_BASE_ADDR, 0x8, 31, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_2, "rx_sdbip_2", OAM_RX_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_reg[] =
{
	{ TEST_OAM_RX_SFBIP_0, "rx_sfbip_0", OAM_RX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_1, "rx_sfbip_1", OAM_RX_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_2, "rx_sfbip_2", OAM_RX_BASE_ADDR, 0x14, 15, 0, 0x0 },
};
NEW_CHIP_REG test_oam_rx_rdi_ram_alm_reg[] =
{
	{ TEST_OAM_RX_OAM_RX_RDI, "oam_rx_rdi", OAM_RX_BASE_ADDR, 0x22, 19, 0, 0x0 },
	{ TEST_OAM_RX_FULL_1, "full_1", OAM_RX_BASE_ADDR, 0x22, 20, 20, 0x0 },
	{ TEST_OAM_RX_ECC_ERR_CORRECT, "ecc_err_correct", OAM_RX_BASE_ADDR, 0x22, 21, 21, 0x0 },
	{ TEST_OAM_RX_ECC_ERR_UNCORRECT, "ecc_err_uncorrect", OAM_RX_BASE_ADDR, 0x22, 22, 22, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_reg[] =
{
	{ TEST_OAM_RX_SFBEI_0, "rx_sfbei_0", OAM_RX_BASE_ADDR, 0x29, 31, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_1, "rx_sfbei_1", OAM_RX_BASE_ADDR, 0x2a, 31, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_2, "rx_sfbei_2", OAM_RX_BASE_ADDR, 0x2b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_demux_client_alm_reg[] =
{
	{ TEST_OAM_RX_DEMUX_CLIENT_ALM_0, "demux_client_alm_0", OAM_RX_BASE_ADDR, 0x3e, 31, 0, 0x0 },
	{ TEST_OAM_RX_DEMUX_CLIENT_ALM_1, "demux_client_alm_1", OAM_RX_BASE_ADDR, 0x3f, 31, 0, 0x0 },
	{ TEST_OAM_RX_DEMUX_CLIENT_ALM_2, "demux_client_alm_2", OAM_RX_BASE_ADDR, 0x40, 15, 0, 0x0 },
};
NEW_CHIP_REG test_crc_alm_out_reg[] =
{
	{ TEST_OAM_RX_CRC_ALM_OUT_0, "crc_alm_out_0", OAM_RX_BASE_ADDR, 0x41, 31, 0, 0x0 },
	{ TEST_OAM_RX_CRC_ALM_OUT_1, "crc_alm_out_1", OAM_RX_BASE_ADDR, 0x42, 31, 0, 0x0 },
	{ TEST_OAM_RX_CRC_ALM_OUT_2, "crc_alm_out_2", OAM_RX_BASE_ADDR, 0x43, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_0, "bas_rdi_0", OAM_RX_BASE_ADDR, 0x44, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_1, "bas_rdi_1", OAM_RX_BASE_ADDR, 0x45, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_2, "bas_rdi_2", OAM_RX_BASE_ADDR, 0x46, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_0, "bas_csf_lpi_0", OAM_RX_BASE_ADDR, 0x47, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_1, "bas_csf_lpi_1", OAM_RX_BASE_ADDR, 0x48, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_2, "bas_csf_lpi_2", OAM_RX_BASE_ADDR, 0x49, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_0, "bas_cs_lf_0", OAM_RX_BASE_ADDR, 0x4a, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_1, "bas_cs_lf_1", OAM_RX_BASE_ADDR, 0x4b, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_2, "bas_cs_lf_2", OAM_RX_BASE_ADDR, 0x4c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_0, "bas_cs_rf_0", OAM_RX_BASE_ADDR, 0x4d, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_1, "bas_cs_rf_1", OAM_RX_BASE_ADDR, 0x4e, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_2, "bas_cs_rf_2", OAM_RX_BASE_ADDR, 0x4f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_0, "bas_crc_err_0", OAM_RX_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_1, "bas_crc_err_1", OAM_RX_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_2, "bas_crc_err_2", OAM_RX_BASE_ADDR, 0x52, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_0, "bas_no_receive_alm_0", OAM_RX_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_1, "bas_no_receive_alm_1", OAM_RX_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_2, "bas_no_receive_alm_2", OAM_RX_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_0, "rdi_lf_0", OAM_RX_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_1, "rdi_lf_1", OAM_RX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_2, "rdi_lf_2", OAM_RX_BASE_ADDR, 0x58, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_reg[] =
{
	{ TEST_OAM_RX_SDBEI_0, "rx_sdbei_0", OAM_RX_BASE_ADDR, 0x5b, 31, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_1, "rx_sdbei_1", OAM_RX_BASE_ADDR, 0x5c, 31, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_2, "rx_sdbei_2", OAM_RX_BASE_ADDR, 0x5d, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rf_alm_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_0, "rf_alm_0", OAM_RX_BASE_ADDR, 0x5e, 31, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_1, "rf_alm_1", OAM_RX_BASE_ADDR, 0x5f, 31, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_2, "rf_alm_2", OAM_RX_BASE_ADDR, 0x60, 15, 0, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_0, "lpi_alm_0", OAM_RX_BASE_ADDR, 0x61, 31, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_1, "lpi_alm_1", OAM_RX_BASE_ADDR, 0x62, 31, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_2, "lpi_alm_2", OAM_RX_BASE_ADDR, 0x63, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM_0, "bas_period_alm_0", OAM_RX_BASE_ADDR, 0x77, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM_1, "bas_period_alm_1", OAM_RX_BASE_ADDR, 0x78, 31, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM_2, "bas_period_alm_2", OAM_RX_BASE_ADDR, 0x79, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i0_int_reg[] =
{
	{ TEST_OAM_RX_SFBEI_0_INT, "rx_sfbei_0_int", OAM_RX_BASE_ADDR, 0x25, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_1_INT, "rx_sfbei_1_int", OAM_RX_BASE_ADDR, 0x25, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_2_INT, "rx_sfbei_2_int", OAM_RX_BASE_ADDR, 0x25, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_3_INT, "rx_sfbei_3_int", OAM_RX_BASE_ADDR, 0x25, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_4_INT, "rx_sfbei_4_int", OAM_RX_BASE_ADDR, 0x25, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_5_INT, "rx_sfbei_5_int", OAM_RX_BASE_ADDR, 0x25, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_6_INT, "rx_sfbei_6_int", OAM_RX_BASE_ADDR, 0x25, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_7_INT, "rx_sfbei_7_int", OAM_RX_BASE_ADDR, 0x25, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_8_INT, "rx_sfbei_8_int", OAM_RX_BASE_ADDR, 0x25, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_9_INT, "rx_sfbei_9_int", OAM_RX_BASE_ADDR, 0x25, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_10_INT, "rx_sfbei_10_int", OAM_RX_BASE_ADDR, 0x25, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_11_INT, "rx_sfbei_11_int", OAM_RX_BASE_ADDR, 0x25, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_12_INT, "rx_sfbei_12_int", OAM_RX_BASE_ADDR, 0x25, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_13_INT, "rx_sfbei_13_int", OAM_RX_BASE_ADDR, 0x25, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_14_INT, "rx_sfbei_14_int", OAM_RX_BASE_ADDR, 0x25, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_15_INT, "rx_sfbei_15_int", OAM_RX_BASE_ADDR, 0x25, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBEI_0_INT_MASK, "rx_sfbei_0_int_mask", OAM_RX_BASE_ADDR, 0x27, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_1_INT_MASK, "rx_sfbei_1_int_mask", OAM_RX_BASE_ADDR, 0x27, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_2_INT_MASK, "rx_sfbei_2_int_mask", OAM_RX_BASE_ADDR, 0x27, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_3_INT_MASK, "rx_sfbei_3_int_mask", OAM_RX_BASE_ADDR, 0x27, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_4_INT_MASK, "rx_sfbei_4_int_mask", OAM_RX_BASE_ADDR, 0x27, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_5_INT_MASK, "rx_sfbei_5_int_mask", OAM_RX_BASE_ADDR, 0x27, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_6_INT_MASK, "rx_sfbei_6_int_mask", OAM_RX_BASE_ADDR, 0x27, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_7_INT_MASK, "rx_sfbei_7_int_mask", OAM_RX_BASE_ADDR, 0x27, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_8_INT_MASK, "rx_sfbei_8_int_mask", OAM_RX_BASE_ADDR, 0x27, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_9_INT_MASK, "rx_sfbei_9_int_mask", OAM_RX_BASE_ADDR, 0x27, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_10_INT_MASK, "rx_sfbei_10_int_mask", OAM_RX_BASE_ADDR, 0x27, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_11_INT_MASK, "rx_sfbei_11_int_mask", OAM_RX_BASE_ADDR, 0x27, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_12_INT_MASK, "rx_sfbei_12_int_mask", OAM_RX_BASE_ADDR, 0x27, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_13_INT_MASK, "rx_sfbei_13_int_mask", OAM_RX_BASE_ADDR, 0x27, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_14_INT_MASK, "rx_sfbei_14_int_mask", OAM_RX_BASE_ADDR, 0x27, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_15_INT_MASK, "rx_sfbei_15_int_mask", OAM_RX_BASE_ADDR, 0x27, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i0_int_reg[] =
{
	{ TEST_OAM_RX_SFBIP_0_INT, "rx_sfbip_0_int", OAM_RX_BASE_ADDR, 0x2c, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_1_INT, "rx_sfbip_1_int", OAM_RX_BASE_ADDR, 0x2c, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_2_INT, "rx_sfbip_2_int", OAM_RX_BASE_ADDR, 0x2c, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_3_INT, "rx_sfbip_3_int", OAM_RX_BASE_ADDR, 0x2c, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_4_INT, "rx_sfbip_4_int", OAM_RX_BASE_ADDR, 0x2c, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_5_INT, "rx_sfbip_5_int", OAM_RX_BASE_ADDR, 0x2c, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_6_INT, "rx_sfbip_6_int", OAM_RX_BASE_ADDR, 0x2c, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_7_INT, "rx_sfbip_7_int", OAM_RX_BASE_ADDR, 0x2c, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_8_INT, "rx_sfbip_8_int", OAM_RX_BASE_ADDR, 0x2c, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_9_INT, "rx_sfbip_9_int", OAM_RX_BASE_ADDR, 0x2c, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_10_INT, "rx_sfbip_10_int", OAM_RX_BASE_ADDR, 0x2c, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_11_INT, "rx_sfbip_11_int", OAM_RX_BASE_ADDR, 0x2c, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_12_INT, "rx_sfbip_12_int", OAM_RX_BASE_ADDR, 0x2c, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_13_INT, "rx_sfbip_13_int", OAM_RX_BASE_ADDR, 0x2c, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_14_INT, "rx_sfbip_14_int", OAM_RX_BASE_ADDR, 0x2c, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_15_INT, "rx_sfbip_15_int", OAM_RX_BASE_ADDR, 0x2c, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBIP_0_INT_MASK, "rx_sfbip_0_int_mask", OAM_RX_BASE_ADDR, 0x2d, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_1_INT_MASK, "rx_sfbip_1_int_mask", OAM_RX_BASE_ADDR, 0x2d, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_2_INT_MASK, "rx_sfbip_2_int_mask", OAM_RX_BASE_ADDR, 0x2d, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_3_INT_MASK, "rx_sfbip_3_int_mask", OAM_RX_BASE_ADDR, 0x2d, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_4_INT_MASK, "rx_sfbip_4_int_mask", OAM_RX_BASE_ADDR, 0x2d, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_5_INT_MASK, "rx_sfbip_5_int_mask", OAM_RX_BASE_ADDR, 0x2d, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_6_INT_MASK, "rx_sfbip_6_int_mask", OAM_RX_BASE_ADDR, 0x2d, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_7_INT_MASK, "rx_sfbip_7_int_mask", OAM_RX_BASE_ADDR, 0x2d, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_8_INT_MASK, "rx_sfbip_8_int_mask", OAM_RX_BASE_ADDR, 0x2d, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_9_INT_MASK, "rx_sfbip_9_int_mask", OAM_RX_BASE_ADDR, 0x2d, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_10_INT_MASK, "rx_sfbip_10_int_mask", OAM_RX_BASE_ADDR, 0x2d, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_11_INT_MASK, "rx_sfbip_11_int_mask", OAM_RX_BASE_ADDR, 0x2d, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_12_INT_MASK, "rx_sfbip_12_int_mask", OAM_RX_BASE_ADDR, 0x2d, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_13_INT_MASK, "rx_sfbip_13_int_mask", OAM_RX_BASE_ADDR, 0x2d, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_14_INT_MASK, "rx_sfbip_14_int_mask", OAM_RX_BASE_ADDR, 0x2d, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_15_INT_MASK, "rx_sfbip_15_int_mask", OAM_RX_BASE_ADDR, 0x2d, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i1_int_reg[] =
{
	{ TEST_OAM_RX_SFBIP_30_INT, "rx_sfbip_30_int", OAM_RX_BASE_ADDR, 0x2e, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_31_INT, "rx_sfbip_31_int", OAM_RX_BASE_ADDR, 0x2e, 31, 30, 0x0 },
	{ TEST_OAM_RX_SFBIP_16_INT, "rx_sfbip_16_int", OAM_RX_BASE_ADDR, 0x2e, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_17_INT, "rx_sfbip_17_int", OAM_RX_BASE_ADDR, 0x2e, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_18_INT, "rx_sfbip_18_int", OAM_RX_BASE_ADDR, 0x2e, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_19_INT, "rx_sfbip_19_int", OAM_RX_BASE_ADDR, 0x2e, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_20_INT, "rx_sfbip_20_int", OAM_RX_BASE_ADDR, 0x2e, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_21_INT, "rx_sfbip_21_int", OAM_RX_BASE_ADDR, 0x2e, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_22_INT, "rx_sfbip_22_int", OAM_RX_BASE_ADDR, 0x2e, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_23_INT, "rx_sfbip_23_int", OAM_RX_BASE_ADDR, 0x2e, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_24_INT, "rx_sfbip_24_int", OAM_RX_BASE_ADDR, 0x2e, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_25_INT, "rx_sfbip_25_int", OAM_RX_BASE_ADDR, 0x2e, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_26_INT, "rx_sfbip_26_int", OAM_RX_BASE_ADDR, 0x2e, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_27_INT, "rx_sfbip_27_int", OAM_RX_BASE_ADDR, 0x2e, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_28_INT, "rx_sfbip_28_int", OAM_RX_BASE_ADDR, 0x2e, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_29_INT, "rx_sfbip_29_int", OAM_RX_BASE_ADDR, 0x2e, 27, 26, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBIP_30_INT_MASK, "rx_sfbip_30_int_mask", OAM_RX_BASE_ADDR, 0x2f, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_31_INT_MASK, "rx_sfbip_31_int_mask", OAM_RX_BASE_ADDR, 0x2f, 31, 30, 0x0 },
	{ TEST_OAM_RX_SFBIP_16_INT_MASK, "rx_sfbip_16_int_mask", OAM_RX_BASE_ADDR, 0x2f, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_17_INT_MASK, "rx_sfbip_17_int_mask", OAM_RX_BASE_ADDR, 0x2f, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_18_INT_MASK, "rx_sfbip_18_int_mask", OAM_RX_BASE_ADDR, 0x2f, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_19_INT_MASK, "rx_sfbip_19_int_mask", OAM_RX_BASE_ADDR, 0x2f, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_20_INT_MASK, "rx_sfbip_20_int_mask", OAM_RX_BASE_ADDR, 0x2f, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_21_INT_MASK, "rx_sfbip_21_int_mask", OAM_RX_BASE_ADDR, 0x2f, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_22_INT_MASK, "rx_sfbip_22_int_mask", OAM_RX_BASE_ADDR, 0x2f, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_23_INT_MASK, "rx_sfbip_23_int_mask", OAM_RX_BASE_ADDR, 0x2f, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_24_INT_MASK, "rx_sfbip_24_int_mask", OAM_RX_BASE_ADDR, 0x2f, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_25_INT_MASK, "rx_sfbip_25_int_mask", OAM_RX_BASE_ADDR, 0x2f, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_26_INT_MASK, "rx_sfbip_26_int_mask", OAM_RX_BASE_ADDR, 0x2f, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_27_INT_MASK, "rx_sfbip_27_int_mask", OAM_RX_BASE_ADDR, 0x2f, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_28_INT_MASK, "rx_sfbip_28_int_mask", OAM_RX_BASE_ADDR, 0x2f, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_29_INT_MASK, "rx_sfbip_29_int_mask", OAM_RX_BASE_ADDR, 0x2f, 27, 26, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i2_int_reg[] =
{
	{ TEST_OAM_RX_SFBIP_32_INT, "rx_sfbip_32_int", OAM_RX_BASE_ADDR, 0x30, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_33_INT, "rx_sfbip_33_int", OAM_RX_BASE_ADDR, 0x30, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_34_INT, "rx_sfbip_34_int", OAM_RX_BASE_ADDR, 0x30, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_35_INT, "rx_sfbip_35_int", OAM_RX_BASE_ADDR, 0x30, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_36_INT, "rx_sfbip_36_int", OAM_RX_BASE_ADDR, 0x30, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_37_INT, "rx_sfbip_37_int", OAM_RX_BASE_ADDR, 0x30, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_38_INT, "rx_sfbip_38_int", OAM_RX_BASE_ADDR, 0x30, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_39_INT, "rx_sfbip_39_int", OAM_RX_BASE_ADDR, 0x30, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_40_INT, "rx_sfbip_40_int", OAM_RX_BASE_ADDR, 0x30, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_41_INT, "rx_sfbip_41_int", OAM_RX_BASE_ADDR, 0x30, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_42_INT, "rx_sfbip_42_int", OAM_RX_BASE_ADDR, 0x30, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_43_INT, "rx_sfbip_43_int", OAM_RX_BASE_ADDR, 0x30, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_44_INT, "rx_sfbip_44_int", OAM_RX_BASE_ADDR, 0x30, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_45_INT, "rx_sfbip_45_int", OAM_RX_BASE_ADDR, 0x30, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_46_INT, "rx_sfbip_46_int", OAM_RX_BASE_ADDR, 0x30, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_47_INT, "rx_sfbip_47_int", OAM_RX_BASE_ADDR, 0x30, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBIP_32_INT_MASK, "rx_sfbip_32_int_mask", OAM_RX_BASE_ADDR, 0x31, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_33_INT_MASK, "rx_sfbip_33_int_mask", OAM_RX_BASE_ADDR, 0x31, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_34_INT_MASK, "rx_sfbip_34_int_mask", OAM_RX_BASE_ADDR, 0x31, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_35_INT_MASK, "rx_sfbip_35_int_mask", OAM_RX_BASE_ADDR, 0x31, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_36_INT_MASK, "rx_sfbip_36_int_mask", OAM_RX_BASE_ADDR, 0x31, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_37_INT_MASK, "rx_sfbip_37_int_mask", OAM_RX_BASE_ADDR, 0x31, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_38_INT_MASK, "rx_sfbip_38_int_mask", OAM_RX_BASE_ADDR, 0x31, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_39_INT_MASK, "rx_sfbip_39_int_mask", OAM_RX_BASE_ADDR, 0x31, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_40_INT_MASK, "rx_sfbip_40_int_mask", OAM_RX_BASE_ADDR, 0x31, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_41_INT_MASK, "rx_sfbip_41_int_mask", OAM_RX_BASE_ADDR, 0x31, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_42_INT_MASK, "rx_sfbip_42_int_mask", OAM_RX_BASE_ADDR, 0x31, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_43_INT_MASK, "rx_sfbip_43_int_mask", OAM_RX_BASE_ADDR, 0x31, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_44_INT_MASK, "rx_sfbip_44_int_mask", OAM_RX_BASE_ADDR, 0x31, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_45_INT_MASK, "rx_sfbip_45_int_mask", OAM_RX_BASE_ADDR, 0x31, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_46_INT_MASK, "rx_sfbip_46_int_mask", OAM_RX_BASE_ADDR, 0x31, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_47_INT_MASK, "rx_sfbip_47_int_mask", OAM_RX_BASE_ADDR, 0x31, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i3_int_reg[] =
{
	{ TEST_OAM_RX_SFBIP_59_INT, "rx_sfbip_59_int", OAM_RX_BASE_ADDR, 0x32, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_60_INT, "rx_sfbip_60_int", OAM_RX_BASE_ADDR, 0x32, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_61_INT, "rx_sfbip_61_int", OAM_RX_BASE_ADDR, 0x32, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_62_INT, "rx_sfbip_62_int", OAM_RX_BASE_ADDR, 0x32, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_63_INT, "rx_sfbip_63_int", OAM_RX_BASE_ADDR, 0x32, 31, 30, 0x0 },
	{ TEST_OAM_RX_SFBIP_48_INT, "rx_sfbip_48_int", OAM_RX_BASE_ADDR, 0x32, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_49_INT, "rx_sfbip_49_int", OAM_RX_BASE_ADDR, 0x32, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_50_INT, "rx_sfbip_50_int", OAM_RX_BASE_ADDR, 0x32, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_51_INT, "rx_sfbip_51_int", OAM_RX_BASE_ADDR, 0x32, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_52_INT, "rx_sfbip_52_int", OAM_RX_BASE_ADDR, 0x32, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_53_INT, "rx_sfbip_53_int", OAM_RX_BASE_ADDR, 0x32, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_54_INT, "rx_sfbip_54_int", OAM_RX_BASE_ADDR, 0x32, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_55_INT, "rx_sfbip_55_int", OAM_RX_BASE_ADDR, 0x32, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_56_INT, "rx_sfbip_56_int", OAM_RX_BASE_ADDR, 0x32, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_57_INT, "rx_sfbip_57_int", OAM_RX_BASE_ADDR, 0x32, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_58_INT, "rx_sfbip_58_int", OAM_RX_BASE_ADDR, 0x32, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBIP_59_INT_MASK, "rx_sfbip_59_int_mask", OAM_RX_BASE_ADDR, 0x33, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_60_INT_MASK, "rx_sfbip_60_int_mask", OAM_RX_BASE_ADDR, 0x33, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_61_INT_MASK, "rx_sfbip_61_int_mask", OAM_RX_BASE_ADDR, 0x33, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_62_INT_MASK, "rx_sfbip_62_int_mask", OAM_RX_BASE_ADDR, 0x33, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_63_INT_MASK, "rx_sfbip_63_int_mask", OAM_RX_BASE_ADDR, 0x33, 31, 30, 0x0 },
	{ TEST_OAM_RX_SFBIP_48_INT_MASK, "rx_sfbip_48_int_mask", OAM_RX_BASE_ADDR, 0x33, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_49_INT_MASK, "rx_sfbip_49_int_mask", OAM_RX_BASE_ADDR, 0x33, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_50_INT_MASK, "rx_sfbip_50_int_mask", OAM_RX_BASE_ADDR, 0x33, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_51_INT_MASK, "rx_sfbip_51_int_mask", OAM_RX_BASE_ADDR, 0x33, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_52_INT_MASK, "rx_sfbip_52_int_mask", OAM_RX_BASE_ADDR, 0x33, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_53_INT_MASK, "rx_sfbip_53_int_mask", OAM_RX_BASE_ADDR, 0x33, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_54_INT_MASK, "rx_sfbip_54_int_mask", OAM_RX_BASE_ADDR, 0x33, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_55_INT_MASK, "rx_sfbip_55_int_mask", OAM_RX_BASE_ADDR, 0x33, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_56_INT_MASK, "rx_sfbip_56_int_mask", OAM_RX_BASE_ADDR, 0x33, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_57_INT_MASK, "rx_sfbip_57_int_mask", OAM_RX_BASE_ADDR, 0x33, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_58_INT_MASK, "rx_sfbip_58_int_mask", OAM_RX_BASE_ADDR, 0x33, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i4_int_reg[] =
{
	{ TEST_OAM_RX_SFBIP_64_INT, "rx_sfbip_64_int", OAM_RX_BASE_ADDR, 0x34, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_65_INT, "rx_sfbip_65_int", OAM_RX_BASE_ADDR, 0x34, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_66_INT, "rx_sfbip_66_int", OAM_RX_BASE_ADDR, 0x34, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_67_INT, "rx_sfbip_67_int", OAM_RX_BASE_ADDR, 0x34, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_68_INT, "rx_sfbip_68_int", OAM_RX_BASE_ADDR, 0x34, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_69_INT, "rx_sfbip_69_int", OAM_RX_BASE_ADDR, 0x34, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_70_INT, "rx_sfbip_70_int", OAM_RX_BASE_ADDR, 0x34, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_71_INT, "rx_sfbip_71_int", OAM_RX_BASE_ADDR, 0x34, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_72_INT, "rx_sfbip_72_int", OAM_RX_BASE_ADDR, 0x34, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_73_INT, "rx_sfbip_73_int", OAM_RX_BASE_ADDR, 0x34, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_74_INT, "rx_sfbip_74_int", OAM_RX_BASE_ADDR, 0x34, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_75_INT, "rx_sfbip_75_int", OAM_RX_BASE_ADDR, 0x34, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_76_INT, "rx_sfbip_76_int", OAM_RX_BASE_ADDR, 0x34, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_77_INT, "rx_sfbip_77_int", OAM_RX_BASE_ADDR, 0x34, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_78_INT, "rx_sfbip_78_int", OAM_RX_BASE_ADDR, 0x34, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_79_INT, "rx_sfbip_79_int", OAM_RX_BASE_ADDR, 0x34, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbip_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBIP_64_INT_MASK, "rx_sfbip_64_int_mask", OAM_RX_BASE_ADDR, 0x35, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBIP_65_INT_MASK, "rx_sfbip_65_int_mask", OAM_RX_BASE_ADDR, 0x35, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBIP_66_INT_MASK, "rx_sfbip_66_int_mask", OAM_RX_BASE_ADDR, 0x35, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBIP_67_INT_MASK, "rx_sfbip_67_int_mask", OAM_RX_BASE_ADDR, 0x35, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBIP_68_INT_MASK, "rx_sfbip_68_int_mask", OAM_RX_BASE_ADDR, 0x35, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBIP_69_INT_MASK, "rx_sfbip_69_int_mask", OAM_RX_BASE_ADDR, 0x35, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBIP_70_INT_MASK, "rx_sfbip_70_int_mask", OAM_RX_BASE_ADDR, 0x35, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBIP_71_INT_MASK, "rx_sfbip_71_int_mask", OAM_RX_BASE_ADDR, 0x35, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBIP_72_INT_MASK, "rx_sfbip_72_int_mask", OAM_RX_BASE_ADDR, 0x35, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBIP_73_INT_MASK, "rx_sfbip_73_int_mask", OAM_RX_BASE_ADDR, 0x35, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBIP_74_INT_MASK, "rx_sfbip_74_int_mask", OAM_RX_BASE_ADDR, 0x35, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBIP_75_INT_MASK, "rx_sfbip_75_int_mask", OAM_RX_BASE_ADDR, 0x35, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBIP_76_INT_MASK, "rx_sfbip_76_int_mask", OAM_RX_BASE_ADDR, 0x35, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBIP_77_INT_MASK, "rx_sfbip_77_int_mask", OAM_RX_BASE_ADDR, 0x35, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBIP_78_INT_MASK, "rx_sfbip_78_int_mask", OAM_RX_BASE_ADDR, 0x35, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBIP_79_INT_MASK, "rx_sfbip_79_int_mask", OAM_RX_BASE_ADDR, 0x35, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i1_int_reg[] =
{
	{ TEST_OAM_RX_SFBEI_16_INT, "rx_sfbei_16_int", OAM_RX_BASE_ADDR, 0x36, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_17_INT, "rx_sfbei_17_int", OAM_RX_BASE_ADDR, 0x36, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_18_INT, "rx_sfbei_18_int", OAM_RX_BASE_ADDR, 0x36, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_19_INT, "rx_sfbei_19_int", OAM_RX_BASE_ADDR, 0x36, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_20_INT, "rx_sfbei_20_int", OAM_RX_BASE_ADDR, 0x36, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_21_INT, "rx_sfbei_21_int", OAM_RX_BASE_ADDR, 0x36, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_22_INT, "rx_sfbei_22_int", OAM_RX_BASE_ADDR, 0x36, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_23_INT, "rx_sfbei_23_int", OAM_RX_BASE_ADDR, 0x36, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_24_INT, "rx_sfbei_24_int", OAM_RX_BASE_ADDR, 0x36, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_25_INT, "rx_sfbei_25_int", OAM_RX_BASE_ADDR, 0x36, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_26_INT, "rx_sfbei_26_int", OAM_RX_BASE_ADDR, 0x36, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_27_INT, "rx_sfbei_27_int", OAM_RX_BASE_ADDR, 0x36, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_28_INT, "rx_sfbei_28_int", OAM_RX_BASE_ADDR, 0x36, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_29_INT, "rx_sfbei_29_int", OAM_RX_BASE_ADDR, 0x36, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_30_INT, "rx_sfbei_30_int", OAM_RX_BASE_ADDR, 0x36, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_31_INT, "rx_sfbei_31_int", OAM_RX_BASE_ADDR, 0x36, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBEI_16_INT_MASK, "rx_sfbei_16_int_mask", OAM_RX_BASE_ADDR, 0x37, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_17_INT_MASK, "rx_sfbei_17_int_mask", OAM_RX_BASE_ADDR, 0x37, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_18_INT_MASK, "rx_sfbei_18_int_mask", OAM_RX_BASE_ADDR, 0x37, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_19_INT_MASK, "rx_sfbei_19_int_mask", OAM_RX_BASE_ADDR, 0x37, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_20_INT_MASK, "rx_sfbei_20_int_mask", OAM_RX_BASE_ADDR, 0x37, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_21_INT_MASK, "rx_sfbei_21_int_mask", OAM_RX_BASE_ADDR, 0x37, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_22_INT_MASK, "rx_sfbei_22_int_mask", OAM_RX_BASE_ADDR, 0x37, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_23_INT_MASK, "rx_sfbei_23_int_mask", OAM_RX_BASE_ADDR, 0x37, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_24_INT_MASK, "rx_sfbei_24_int_mask", OAM_RX_BASE_ADDR, 0x37, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_25_INT_MASK, "rx_sfbei_25_int_mask", OAM_RX_BASE_ADDR, 0x37, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_26_INT_MASK, "rx_sfbei_26_int_mask", OAM_RX_BASE_ADDR, 0x37, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_27_INT_MASK, "rx_sfbei_27_int_mask", OAM_RX_BASE_ADDR, 0x37, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_28_INT_MASK, "rx_sfbei_28_int_mask", OAM_RX_BASE_ADDR, 0x37, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_29_INT_MASK, "rx_sfbei_29_int_mask", OAM_RX_BASE_ADDR, 0x37, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_30_INT_MASK, "rx_sfbei_30_int_mask", OAM_RX_BASE_ADDR, 0x37, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_31_INT_MASK, "rx_sfbei_31_int_mask", OAM_RX_BASE_ADDR, 0x37, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i2_int_reg[] =
{
	{ TEST_OAM_RX_SFBEI_32_INT, "rx_sfbei_32_int", OAM_RX_BASE_ADDR, 0x38, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_33_INT, "rx_sfbei_33_int", OAM_RX_BASE_ADDR, 0x38, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_34_INT, "rx_sfbei_34_int", OAM_RX_BASE_ADDR, 0x38, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_35_INT, "rx_sfbei_35_int", OAM_RX_BASE_ADDR, 0x38, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_36_INT, "rx_sfbei_36_int", OAM_RX_BASE_ADDR, 0x38, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_37_INT, "rx_sfbei_37_int", OAM_RX_BASE_ADDR, 0x38, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_38_INT, "rx_sfbei_38_int", OAM_RX_BASE_ADDR, 0x38, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_39_INT, "rx_sfbei_39_int", OAM_RX_BASE_ADDR, 0x38, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_40_INT, "rx_sfbei_40_int", OAM_RX_BASE_ADDR, 0x38, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_41_INT, "rx_sfbei_41_int", OAM_RX_BASE_ADDR, 0x38, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_42_INT, "rx_sfbei_42_int", OAM_RX_BASE_ADDR, 0x38, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_43_INT, "rx_sfbei_43_int", OAM_RX_BASE_ADDR, 0x38, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_44_INT, "rx_sfbei_44_int", OAM_RX_BASE_ADDR, 0x38, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_45_INT, "rx_sfbei_45_int", OAM_RX_BASE_ADDR, 0x38, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_46_INT, "rx_sfbei_46_int", OAM_RX_BASE_ADDR, 0x38, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_47_INT, "rx_sfbei_47_int", OAM_RX_BASE_ADDR, 0x38, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBEI_32_INT_MASK, "rx_sfbei_32_int_mask", OAM_RX_BASE_ADDR, 0x59, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_33_INT_MASK, "rx_sfbei_33_int_mask", OAM_RX_BASE_ADDR, 0x59, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_34_INT_MASK, "rx_sfbei_34_int_mask", OAM_RX_BASE_ADDR, 0x59, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_35_INT_MASK, "rx_sfbei_35_int_mask", OAM_RX_BASE_ADDR, 0x59, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_36_INT_MASK, "rx_sfbei_36_int_mask", OAM_RX_BASE_ADDR, 0x59, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_37_INT_MASK, "rx_sfbei_37_int_mask", OAM_RX_BASE_ADDR, 0x59, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_38_INT_MASK, "rx_sfbei_38_int_mask", OAM_RX_BASE_ADDR, 0x59, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_39_INT_MASK, "rx_sfbei_39_int_mask", OAM_RX_BASE_ADDR, 0x59, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_40_INT_MASK, "rx_sfbei_40_int_mask", OAM_RX_BASE_ADDR, 0x59, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_41_INT_MASK, "rx_sfbei_41_int_mask", OAM_RX_BASE_ADDR, 0x59, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_42_INT_MASK, "rx_sfbei_42_int_mask", OAM_RX_BASE_ADDR, 0x59, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_43_INT_MASK, "rx_sfbei_43_int_mask", OAM_RX_BASE_ADDR, 0x59, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_44_INT_MASK, "rx_sfbei_44_int_mask", OAM_RX_BASE_ADDR, 0x59, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_45_INT_MASK, "rx_sfbei_45_int_mask", OAM_RX_BASE_ADDR, 0x59, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_46_INT_MASK, "rx_sfbei_46_int_mask", OAM_RX_BASE_ADDR, 0x59, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_47_INT_MASK, "rx_sfbei_47_int_mask", OAM_RX_BASE_ADDR, 0x59, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i3_int_reg[] =
{
	{ TEST_OAM_RX_SFBEI_48_INT, "rx_sfbei_48_int", OAM_RX_BASE_ADDR, 0x66, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_49_INT, "rx_sfbei_49_int", OAM_RX_BASE_ADDR, 0x66, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_50_INT, "rx_sfbei_50_int", OAM_RX_BASE_ADDR, 0x66, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_51_INT, "rx_sfbei_51_int", OAM_RX_BASE_ADDR, 0x66, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_52_INT, "rx_sfbei_52_int", OAM_RX_BASE_ADDR, 0x66, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_53_INT, "rx_sfbei_53_int", OAM_RX_BASE_ADDR, 0x66, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_54_INT, "rx_sfbei_54_int", OAM_RX_BASE_ADDR, 0x66, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_55_INT, "rx_sfbei_55_int", OAM_RX_BASE_ADDR, 0x66, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_56_INT, "rx_sfbei_56_int", OAM_RX_BASE_ADDR, 0x66, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_57_INT, "rx_sfbei_57_int", OAM_RX_BASE_ADDR, 0x66, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_58_INT, "rx_sfbei_58_int", OAM_RX_BASE_ADDR, 0x66, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_59_INT, "rx_sfbei_59_int", OAM_RX_BASE_ADDR, 0x66, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_60_INT, "rx_sfbei_60_int", OAM_RX_BASE_ADDR, 0x66, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_61_INT, "rx_sfbei_61_int", OAM_RX_BASE_ADDR, 0x66, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_62_INT, "rx_sfbei_62_int", OAM_RX_BASE_ADDR, 0x66, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_63_INT, "rx_sfbei_63_int", OAM_RX_BASE_ADDR, 0x66, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBEI_48_INT_MASK, "rx_sfbei_48_int_mask", OAM_RX_BASE_ADDR, 0x67, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_49_INT_MASK, "rx_sfbei_49_int_mask", OAM_RX_BASE_ADDR, 0x67, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_50_INT_MASK, "rx_sfbei_50_int_mask", OAM_RX_BASE_ADDR, 0x67, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_51_INT_MASK, "rx_sfbei_51_int_mask", OAM_RX_BASE_ADDR, 0x67, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_52_INT_MASK, "rx_sfbei_52_int_mask", OAM_RX_BASE_ADDR, 0x67, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_53_INT_MASK, "rx_sfbei_53_int_mask", OAM_RX_BASE_ADDR, 0x67, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_54_INT_MASK, "rx_sfbei_54_int_mask", OAM_RX_BASE_ADDR, 0x67, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_55_INT_MASK, "rx_sfbei_55_int_mask", OAM_RX_BASE_ADDR, 0x67, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_56_INT_MASK, "rx_sfbei_56_int_mask", OAM_RX_BASE_ADDR, 0x67, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_57_INT_MASK, "rx_sfbei_57_int_mask", OAM_RX_BASE_ADDR, 0x67, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_58_INT_MASK, "rx_sfbei_58_int_mask", OAM_RX_BASE_ADDR, 0x67, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_59_INT_MASK, "rx_sfbei_59_int_mask", OAM_RX_BASE_ADDR, 0x67, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_60_INT_MASK, "rx_sfbei_60_int_mask", OAM_RX_BASE_ADDR, 0x67, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_61_INT_MASK, "rx_sfbei_61_int_mask", OAM_RX_BASE_ADDR, 0x67, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_62_INT_MASK, "rx_sfbei_62_int_mask", OAM_RX_BASE_ADDR, 0x67, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_63_INT_MASK, "rx_sfbei_63_int_mask", OAM_RX_BASE_ADDR, 0x67, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i4_int_reg[] =
{
	{ TEST_OAM_RX_SFBEI_64_INT, "rx_sfbei_64_int", OAM_RX_BASE_ADDR, 0x6e, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_65_INT, "rx_sfbei_65_int", OAM_RX_BASE_ADDR, 0x6e, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_66_INT, "rx_sfbei_66_int", OAM_RX_BASE_ADDR, 0x6e, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_67_INT, "rx_sfbei_67_int", OAM_RX_BASE_ADDR, 0x6e, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_68_INT, "rx_sfbei_68_int", OAM_RX_BASE_ADDR, 0x6e, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_69_INT, "rx_sfbei_69_int", OAM_RX_BASE_ADDR, 0x6e, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_70_INT, "rx_sfbei_70_int", OAM_RX_BASE_ADDR, 0x6e, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_71_INT, "rx_sfbei_71_int", OAM_RX_BASE_ADDR, 0x6e, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_72_INT, "rx_sfbei_72_int", OAM_RX_BASE_ADDR, 0x6e, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_73_INT, "rx_sfbei_73_int", OAM_RX_BASE_ADDR, 0x6e, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_74_INT, "rx_sfbei_74_int", OAM_RX_BASE_ADDR, 0x6e, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_75_INT, "rx_sfbei_75_int", OAM_RX_BASE_ADDR, 0x6e, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_76_INT, "rx_sfbei_76_int", OAM_RX_BASE_ADDR, 0x6e, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_77_INT, "rx_sfbei_77_int", OAM_RX_BASE_ADDR, 0x6e, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_78_INT, "rx_sfbei_78_int", OAM_RX_BASE_ADDR, 0x6e, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_79_INT, "rx_sfbei_79_int", OAM_RX_BASE_ADDR, 0x6e, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sfbei_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_SFBEI_64_INT_MASK, "rx_sfbei_64_int_mask", OAM_RX_BASE_ADDR, 0x75, 1, 0, 0x0 },
	{ TEST_OAM_RX_SFBEI_65_INT_MASK, "rx_sfbei_65_int_mask", OAM_RX_BASE_ADDR, 0x75, 3, 2, 0x0 },
	{ TEST_OAM_RX_SFBEI_66_INT_MASK, "rx_sfbei_66_int_mask", OAM_RX_BASE_ADDR, 0x75, 5, 4, 0x0 },
	{ TEST_OAM_RX_SFBEI_67_INT_MASK, "rx_sfbei_67_int_mask", OAM_RX_BASE_ADDR, 0x75, 7, 6, 0x0 },
	{ TEST_OAM_RX_SFBEI_68_INT_MASK, "rx_sfbei_68_int_mask", OAM_RX_BASE_ADDR, 0x75, 9, 8, 0x0 },
	{ TEST_OAM_RX_SFBEI_69_INT_MASK, "rx_sfbei_69_int_mask", OAM_RX_BASE_ADDR, 0x75, 11, 10, 0x0 },
	{ TEST_OAM_RX_SFBEI_70_INT_MASK, "rx_sfbei_70_int_mask", OAM_RX_BASE_ADDR, 0x75, 13, 12, 0x0 },
	{ TEST_OAM_RX_SFBEI_71_INT_MASK, "rx_sfbei_71_int_mask", OAM_RX_BASE_ADDR, 0x75, 15, 14, 0x0 },
	{ TEST_OAM_RX_SFBEI_72_INT_MASK, "rx_sfbei_72_int_mask", OAM_RX_BASE_ADDR, 0x75, 17, 16, 0x0 },
	{ TEST_OAM_RX_SFBEI_73_INT_MASK, "rx_sfbei_73_int_mask", OAM_RX_BASE_ADDR, 0x75, 19, 18, 0x0 },
	{ TEST_OAM_RX_SFBEI_74_INT_MASK, "rx_sfbei_74_int_mask", OAM_RX_BASE_ADDR, 0x75, 21, 20, 0x0 },
	{ TEST_OAM_RX_SFBEI_75_INT_MASK, "rx_sfbei_75_int_mask", OAM_RX_BASE_ADDR, 0x75, 23, 22, 0x0 },
	{ TEST_OAM_RX_SFBEI_76_INT_MASK, "rx_sfbei_76_int_mask", OAM_RX_BASE_ADDR, 0x75, 25, 24, 0x0 },
	{ TEST_OAM_RX_SFBEI_77_INT_MASK, "rx_sfbei_77_int_mask", OAM_RX_BASE_ADDR, 0x75, 27, 26, 0x0 },
	{ TEST_OAM_RX_SFBEI_78_INT_MASK, "rx_sfbei_78_int_mask", OAM_RX_BASE_ADDR, 0x75, 29, 28, 0x0 },
	{ TEST_OAM_RX_SFBEI_79_INT_MASK, "rx_sfbei_79_int_mask", OAM_RX_BASE_ADDR, 0x75, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM48_INT, "bas_period_alm48_int", OAM_RX_BASE_ADDR, 0x7a, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM49_INT, "bas_period_alm49_int", OAM_RX_BASE_ADDR, 0x7a, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM50_INT, "bas_period_alm50_int", OAM_RX_BASE_ADDR, 0x7a, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM51_INT, "bas_period_alm51_int", OAM_RX_BASE_ADDR, 0x7a, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM52_INT, "bas_period_alm52_int", OAM_RX_BASE_ADDR, 0x7a, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM53_INT, "bas_period_alm53_int", OAM_RX_BASE_ADDR, 0x7a, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM54_INT, "bas_period_alm54_int", OAM_RX_BASE_ADDR, 0x7a, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM55_INT, "bas_period_alm55_int", OAM_RX_BASE_ADDR, 0x7a, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM56_INT, "bas_period_alm56_int", OAM_RX_BASE_ADDR, 0x7a, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM57_INT, "bas_period_alm57_int", OAM_RX_BASE_ADDR, 0x7a, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM58_INT, "bas_period_alm58_int", OAM_RX_BASE_ADDR, 0x7a, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM59_INT, "bas_period_alm59_int", OAM_RX_BASE_ADDR, 0x7a, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM60_INT, "bas_period_alm60_int", OAM_RX_BASE_ADDR, 0x7a, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM61_INT, "bas_period_alm61_int", OAM_RX_BASE_ADDR, 0x7a, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM62_INT, "bas_period_alm62_int", OAM_RX_BASE_ADDR, 0x7a, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM63_INT, "bas_period_alm63_int", OAM_RX_BASE_ADDR, 0x7a, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM48_INT_MASK, "bas_period_alm48_int_mask", OAM_RX_BASE_ADDR, 0x7b, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM49_INT_MASK, "bas_period_alm49_int_mask", OAM_RX_BASE_ADDR, 0x7b, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM50_INT_MASK, "bas_period_alm50_int_mask", OAM_RX_BASE_ADDR, 0x7b, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM51_INT_MASK, "bas_period_alm51_int_mask", OAM_RX_BASE_ADDR, 0x7b, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM52_INT_MASK, "bas_period_alm52_int_mask", OAM_RX_BASE_ADDR, 0x7b, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM53_INT_MASK, "bas_period_alm53_int_mask", OAM_RX_BASE_ADDR, 0x7b, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM54_INT_MASK, "bas_period_alm54_int_mask", OAM_RX_BASE_ADDR, 0x7b, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM55_INT_MASK, "bas_period_alm55_int_mask", OAM_RX_BASE_ADDR, 0x7b, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM56_INT_MASK, "bas_period_alm56_int_mask", OAM_RX_BASE_ADDR, 0x7b, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM57_INT_MASK, "bas_period_alm57_int_mask", OAM_RX_BASE_ADDR, 0x7b, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM58_INT_MASK, "bas_period_alm58_int_mask", OAM_RX_BASE_ADDR, 0x7b, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM59_INT_MASK, "bas_period_alm59_int_mask", OAM_RX_BASE_ADDR, 0x7b, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM60_INT_MASK, "bas_period_alm60_int_mask", OAM_RX_BASE_ADDR, 0x7b, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM61_INT_MASK, "bas_period_alm61_int_mask", OAM_RX_BASE_ADDR, 0x7b, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM62_INT_MASK, "bas_period_alm62_int_mask", OAM_RX_BASE_ADDR, 0x7b, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM63_INT_MASK, "bas_period_alm63_int_mask", OAM_RX_BASE_ADDR, 0x7b, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM75_INT, "bas_period_alm75_int", OAM_RX_BASE_ADDR, 0x7c, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM76_INT, "bas_period_alm76_int", OAM_RX_BASE_ADDR, 0x7c, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM77_INT, "bas_period_alm77_int", OAM_RX_BASE_ADDR, 0x7c, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM78_INT, "bas_period_alm78_int", OAM_RX_BASE_ADDR, 0x7c, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM79_INT, "bas_period_alm79_int", OAM_RX_BASE_ADDR, 0x7c, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM64_INT, "bas_period_alm64_int", OAM_RX_BASE_ADDR, 0x7c, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM65_INT, "bas_period_alm65_int", OAM_RX_BASE_ADDR, 0x7c, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM66_INT, "bas_period_alm66_int", OAM_RX_BASE_ADDR, 0x7c, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM67_INT, "bas_period_alm67_int", OAM_RX_BASE_ADDR, 0x7c, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM68_INT, "bas_period_alm68_int", OAM_RX_BASE_ADDR, 0x7c, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM69_INT, "bas_period_alm69_int", OAM_RX_BASE_ADDR, 0x7c, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM70_INT, "bas_period_alm70_int", OAM_RX_BASE_ADDR, 0x7c, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM71_INT, "bas_period_alm71_int", OAM_RX_BASE_ADDR, 0x7c, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM72_INT, "bas_period_alm72_int", OAM_RX_BASE_ADDR, 0x7c, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM73_INT, "bas_period_alm73_int", OAM_RX_BASE_ADDR, 0x7c, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM74_INT, "bas_period_alm74_int", OAM_RX_BASE_ADDR, 0x7c, 21, 20, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM75_INT_MASK, "bas_period_alm75_int_mask", OAM_RX_BASE_ADDR, 0x7d, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM76_INT_MASK, "bas_period_alm76_int_mask", OAM_RX_BASE_ADDR, 0x7d, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM77_INT_MASK, "bas_period_alm77_int_mask", OAM_RX_BASE_ADDR, 0x7d, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM78_INT_MASK, "bas_period_alm78_int_mask", OAM_RX_BASE_ADDR, 0x7d, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM79_INT_MASK, "bas_period_alm79_int_mask", OAM_RX_BASE_ADDR, 0x7d, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM64_INT_MASK, "bas_period_alm64_int_mask", OAM_RX_BASE_ADDR, 0x7d, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM65_INT_MASK, "bas_period_alm65_int_mask", OAM_RX_BASE_ADDR, 0x7d, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM66_INT_MASK, "bas_period_alm66_int_mask", OAM_RX_BASE_ADDR, 0x7d, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM67_INT_MASK, "bas_period_alm67_int_mask", OAM_RX_BASE_ADDR, 0x7d, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM68_INT_MASK, "bas_period_alm68_int_mask", OAM_RX_BASE_ADDR, 0x7d, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM69_INT_MASK, "bas_period_alm69_int_mask", OAM_RX_BASE_ADDR, 0x7d, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM70_INT_MASK, "bas_period_alm70_int_mask", OAM_RX_BASE_ADDR, 0x7d, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM71_INT_MASK, "bas_period_alm71_int_mask", OAM_RX_BASE_ADDR, 0x7d, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM72_INT_MASK, "bas_period_alm72_int_mask", OAM_RX_BASE_ADDR, 0x7d, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM73_INT_MASK, "bas_period_alm73_int_mask", OAM_RX_BASE_ADDR, 0x7d, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM74_INT_MASK, "bas_period_alm74_int_mask", OAM_RX_BASE_ADDR, 0x7d, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i0_int_reg[] =
{
	{ TEST_OAM_RX_SDBIP_0_INT, "rx_sdbip_0_int", OAM_RX_BASE_ADDR, 0x80, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_1_INT, "rx_sdbip_1_int", OAM_RX_BASE_ADDR, 0x80, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_2_INT, "rx_sdbip_2_int", OAM_RX_BASE_ADDR, 0x80, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_3_INT, "rx_sdbip_3_int", OAM_RX_BASE_ADDR, 0x80, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_4_INT, "rx_sdbip_4_int", OAM_RX_BASE_ADDR, 0x80, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_5_INT, "rx_sdbip_5_int", OAM_RX_BASE_ADDR, 0x80, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_6_INT, "rx_sdbip_6_int", OAM_RX_BASE_ADDR, 0x80, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_7_INT, "rx_sdbip_7_int", OAM_RX_BASE_ADDR, 0x80, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_8_INT, "rx_sdbip_8_int", OAM_RX_BASE_ADDR, 0x80, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_9_INT, "rx_sdbip_9_int", OAM_RX_BASE_ADDR, 0x80, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_10_INT, "rx_sdbip_10_int", OAM_RX_BASE_ADDR, 0x80, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_11_INT, "rx_sdbip_11_int", OAM_RX_BASE_ADDR, 0x80, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_12_INT, "rx_sdbip_12_int", OAM_RX_BASE_ADDR, 0x80, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_13_INT, "rx_sdbip_13_int", OAM_RX_BASE_ADDR, 0x80, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_14_INT, "rx_sdbip_14_int", OAM_RX_BASE_ADDR, 0x80, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_15_INT, "rx_sdbip_15_int", OAM_RX_BASE_ADDR, 0x80, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBIP_0_INT_MASK, "rx_sdbip_0_int_mask", OAM_RX_BASE_ADDR, 0x81, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_1_INT_MASK, "rx_sdbip_1_int_mask", OAM_RX_BASE_ADDR, 0x81, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_2_INT_MASK, "rx_sdbip_2_int_mask", OAM_RX_BASE_ADDR, 0x81, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_3_INT_MASK, "rx_sdbip_3_int_mask", OAM_RX_BASE_ADDR, 0x81, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_4_INT_MASK, "rx_sdbip_4_int_mask", OAM_RX_BASE_ADDR, 0x81, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_5_INT_MASK, "rx_sdbip_5_int_mask", OAM_RX_BASE_ADDR, 0x81, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_6_INT_MASK, "rx_sdbip_6_int_mask", OAM_RX_BASE_ADDR, 0x81, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_7_INT_MASK, "rx_sdbip_7_int_mask", OAM_RX_BASE_ADDR, 0x81, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_8_INT_MASK, "rx_sdbip_8_int_mask", OAM_RX_BASE_ADDR, 0x81, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_9_INT_MASK, "rx_sdbip_9_int_mask", OAM_RX_BASE_ADDR, 0x81, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_10_INT_MASK, "rx_sdbip_10_int_mask", OAM_RX_BASE_ADDR, 0x81, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_11_INT_MASK, "rx_sdbip_11_int_mask", OAM_RX_BASE_ADDR, 0x81, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_12_INT_MASK, "rx_sdbip_12_int_mask", OAM_RX_BASE_ADDR, 0x81, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_13_INT_MASK, "rx_sdbip_13_int_mask", OAM_RX_BASE_ADDR, 0x81, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_14_INT_MASK, "rx_sdbip_14_int_mask", OAM_RX_BASE_ADDR, 0x81, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_15_INT_MASK, "rx_sdbip_15_int_mask", OAM_RX_BASE_ADDR, 0x81, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i1_int_reg[] =
{
	{ TEST_OAM_RX_SDBIP_16_INT, "rx_sdbip_16_int", OAM_RX_BASE_ADDR, 0x82, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_17_INT, "rx_sdbip_17_int", OAM_RX_BASE_ADDR, 0x82, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_18_INT, "rx_sdbip_18_int", OAM_RX_BASE_ADDR, 0x82, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_19_INT, "rx_sdbip_19_int", OAM_RX_BASE_ADDR, 0x82, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_20_INT, "rx_sdbip_20_int", OAM_RX_BASE_ADDR, 0x82, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_21_INT, "rx_sdbip_21_int", OAM_RX_BASE_ADDR, 0x82, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_22_INT, "rx_sdbip_22_int", OAM_RX_BASE_ADDR, 0x82, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_23_INT, "rx_sdbip_23_int", OAM_RX_BASE_ADDR, 0x82, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_24_INT, "rx_sdbip_24_int", OAM_RX_BASE_ADDR, 0x82, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_25_INT, "rx_sdbip_25_int", OAM_RX_BASE_ADDR, 0x82, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_26_INT, "rx_sdbip_26_int", OAM_RX_BASE_ADDR, 0x82, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_27_INT, "rx_sdbip_27_int", OAM_RX_BASE_ADDR, 0x82, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_28_INT, "rx_sdbip_28_int", OAM_RX_BASE_ADDR, 0x82, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_29_INT, "rx_sdbip_29_int", OAM_RX_BASE_ADDR, 0x82, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_30_INT, "rx_sdbip_30_int", OAM_RX_BASE_ADDR, 0x82, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_31_INT, "rx_sdbip_31_int", OAM_RX_BASE_ADDR, 0x82, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBIP_16_INT_MASK, "rx_sdbip_16_int_mask", OAM_RX_BASE_ADDR, 0x83, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_17_INT_MASK, "rx_sdbip_17_int_mask", OAM_RX_BASE_ADDR, 0x83, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_18_INT_MASK, "rx_sdbip_18_int_mask", OAM_RX_BASE_ADDR, 0x83, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_19_INT_MASK, "rx_sdbip_19_int_mask", OAM_RX_BASE_ADDR, 0x83, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_20_INT_MASK, "rx_sdbip_20_int_mask", OAM_RX_BASE_ADDR, 0x83, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_21_INT_MASK, "rx_sdbip_21_int_mask", OAM_RX_BASE_ADDR, 0x83, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_22_INT_MASK, "rx_sdbip_22_int_mask", OAM_RX_BASE_ADDR, 0x83, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_23_INT_MASK, "rx_sdbip_23_int_mask", OAM_RX_BASE_ADDR, 0x83, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_24_INT_MASK, "rx_sdbip_24_int_mask", OAM_RX_BASE_ADDR, 0x83, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_25_INT_MASK, "rx_sdbip_25_int_mask", OAM_RX_BASE_ADDR, 0x83, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_26_INT_MASK, "rx_sdbip_26_int_mask", OAM_RX_BASE_ADDR, 0x83, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_27_INT_MASK, "rx_sdbip_27_int_mask", OAM_RX_BASE_ADDR, 0x83, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_28_INT_MASK, "rx_sdbip_28_int_mask", OAM_RX_BASE_ADDR, 0x83, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_29_INT_MASK, "rx_sdbip_29_int_mask", OAM_RX_BASE_ADDR, 0x83, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_30_INT_MASK, "rx_sdbip_30_int_mask", OAM_RX_BASE_ADDR, 0x83, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_31_INT_MASK, "rx_sdbip_31_int_mask", OAM_RX_BASE_ADDR, 0x83, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i2_int_reg[] =
{
	{ TEST_OAM_RX_SDBIP_32_INT, "rx_sdbip_32_int", OAM_RX_BASE_ADDR, 0x84, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_33_INT, "rx_sdbip_33_int", OAM_RX_BASE_ADDR, 0x84, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_34_INT, "rx_sdbip_34_int", OAM_RX_BASE_ADDR, 0x84, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_35_INT, "rx_sdbip_35_int", OAM_RX_BASE_ADDR, 0x84, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_36_INT, "rx_sdbip_36_int", OAM_RX_BASE_ADDR, 0x84, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_37_INT, "rx_sdbip_37_int", OAM_RX_BASE_ADDR, 0x84, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_38_INT, "rx_sdbip_38_int", OAM_RX_BASE_ADDR, 0x84, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_39_INT, "rx_sdbip_39_int", OAM_RX_BASE_ADDR, 0x84, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_40_INT, "rx_sdbip_40_int", OAM_RX_BASE_ADDR, 0x84, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_41_INT, "rx_sdbip_41_int", OAM_RX_BASE_ADDR, 0x84, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_42_INT, "rx_sdbip_42_int", OAM_RX_BASE_ADDR, 0x84, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_43_INT, "rx_sdbip_43_int", OAM_RX_BASE_ADDR, 0x84, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_44_INT, "rx_sdbip_44_int", OAM_RX_BASE_ADDR, 0x84, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_45_INT, "rx_sdbip_45_int", OAM_RX_BASE_ADDR, 0x84, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_46_INT, "rx_sdbip_46_int", OAM_RX_BASE_ADDR, 0x84, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_47_INT, "rx_sdbip_47_int", OAM_RX_BASE_ADDR, 0x84, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBIP_32_INT_MASK, "rx_sdbip_32_int_mask", OAM_RX_BASE_ADDR, 0x85, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_33_INT_MASK, "rx_sdbip_33_int_mask", OAM_RX_BASE_ADDR, 0x85, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_34_INT_MASK, "rx_sdbip_34_int_mask", OAM_RX_BASE_ADDR, 0x85, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_35_INT_MASK, "rx_sdbip_35_int_mask", OAM_RX_BASE_ADDR, 0x85, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_36_INT_MASK, "rx_sdbip_36_int_mask", OAM_RX_BASE_ADDR, 0x85, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_37_INT_MASK, "rx_sdbip_37_int_mask", OAM_RX_BASE_ADDR, 0x85, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_38_INT_MASK, "rx_sdbip_38_int_mask", OAM_RX_BASE_ADDR, 0x85, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_39_INT_MASK, "rx_sdbip_39_int_mask", OAM_RX_BASE_ADDR, 0x85, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_40_INT_MASK, "rx_sdbip_40_int_mask", OAM_RX_BASE_ADDR, 0x85, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_41_INT_MASK, "rx_sdbip_41_int_mask", OAM_RX_BASE_ADDR, 0x85, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_42_INT_MASK, "rx_sdbip_42_int_mask", OAM_RX_BASE_ADDR, 0x85, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_43_INT_MASK, "rx_sdbip_43_int_mask", OAM_RX_BASE_ADDR, 0x85, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_44_INT_MASK, "rx_sdbip_44_int_mask", OAM_RX_BASE_ADDR, 0x85, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_45_INT_MASK, "rx_sdbip_45_int_mask", OAM_RX_BASE_ADDR, 0x85, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_46_INT_MASK, "rx_sdbip_46_int_mask", OAM_RX_BASE_ADDR, 0x85, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_47_INT_MASK, "rx_sdbip_47_int_mask", OAM_RX_BASE_ADDR, 0x85, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i3_int_reg[] =
{
	{ TEST_OAM_RX_SDBIP_59_INT, "rx_sdbip_59_int", OAM_RX_BASE_ADDR, 0x86, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_60_INT, "rx_sdbip_60_int", OAM_RX_BASE_ADDR, 0x86, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_61_INT, "rx_sdbip_61_int", OAM_RX_BASE_ADDR, 0x86, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_62_INT, "rx_sdbip_62_int", OAM_RX_BASE_ADDR, 0x86, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_63_INT, "rx_sdbip_63_int", OAM_RX_BASE_ADDR, 0x86, 31, 30, 0x0 },
	{ TEST_OAM_RX_SDBIP_48_INT, "rx_sdbip_48_int", OAM_RX_BASE_ADDR, 0x86, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_49_INT, "rx_sdbip_49_int", OAM_RX_BASE_ADDR, 0x86, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_50_INT, "rx_sdbip_50_int", OAM_RX_BASE_ADDR, 0x86, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_51_INT, "rx_sdbip_51_int", OAM_RX_BASE_ADDR, 0x86, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_52_INT, "rx_sdbip_52_int", OAM_RX_BASE_ADDR, 0x86, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_53_INT, "rx_sdbip_53_int", OAM_RX_BASE_ADDR, 0x86, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_54_INT, "rx_sdbip_54_int", OAM_RX_BASE_ADDR, 0x86, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_55_INT, "rx_sdbip_55_int", OAM_RX_BASE_ADDR, 0x86, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_56_INT, "rx_sdbip_56_int", OAM_RX_BASE_ADDR, 0x86, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_57_INT, "rx_sdbip_57_int", OAM_RX_BASE_ADDR, 0x86, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_58_INT, "rx_sdbip_58_int", OAM_RX_BASE_ADDR, 0x86, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBIP_58_INT_MASK, "rx_sdbip_58_int_mask", OAM_RX_BASE_ADDR, 0x87, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_59_INT_MASK, "rx_sdbip_59_int_mask", OAM_RX_BASE_ADDR, 0x87, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_60_INT_MASK, "rx_sdbip_60_int_mask", OAM_RX_BASE_ADDR, 0x87, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_61_INT_MASK, "rx_sdbip_61_int_mask", OAM_RX_BASE_ADDR, 0x87, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_62_INT_MASK, "rx_sdbip_62_int_mask", OAM_RX_BASE_ADDR, 0x87, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_63_INT_MASK, "rx_sdbip_63_int_mask", OAM_RX_BASE_ADDR, 0x87, 31, 30, 0x0 },
	{ TEST_OAM_RX_SDBIP_48_INT_MASK, "rx_sdbip_48_int_mask", OAM_RX_BASE_ADDR, 0x87, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_49_INT_MASK, "rx_sdbip_49_int_mask", OAM_RX_BASE_ADDR, 0x87, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_50_INT_MASK, "rx_sdbip_50_int_mask", OAM_RX_BASE_ADDR, 0x87, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_51_INT_MASK, "rx_sdbip_51_int_mask", OAM_RX_BASE_ADDR, 0x87, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_52_INT_MASK, "rx_sdbip_52_int_mask", OAM_RX_BASE_ADDR, 0x87, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_53_INT_MASK, "rx_sdbip_53_int_mask", OAM_RX_BASE_ADDR, 0x87, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_54_INT_MASK, "rx_sdbip_54_int_mask", OAM_RX_BASE_ADDR, 0x87, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_55_INT_MASK, "rx_sdbip_55_int_mask", OAM_RX_BASE_ADDR, 0x87, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_56_INT_MASK, "rx_sdbip_56_int_mask", OAM_RX_BASE_ADDR, 0x87, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_57_INT_MASK, "rx_sdbip_57_int_mask", OAM_RX_BASE_ADDR, 0x87, 19, 18, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i4_int_reg[] =
{
	{ TEST_OAM_RX_SDBIP_64_INT, "rx_sdbip_64_int", OAM_RX_BASE_ADDR, 0x88, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_65_INT, "rx_sdbip_65_int", OAM_RX_BASE_ADDR, 0x88, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_66_INT, "rx_sdbip_66_int", OAM_RX_BASE_ADDR, 0x88, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_67_INT, "rx_sdbip_67_int", OAM_RX_BASE_ADDR, 0x88, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_68_INT, "rx_sdbip_68_int", OAM_RX_BASE_ADDR, 0x88, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_69_INT, "rx_sdbip_69_int", OAM_RX_BASE_ADDR, 0x88, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_70_INT, "rx_sdbip_70_int", OAM_RX_BASE_ADDR, 0x88, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_71_INT, "rx_sdbip_71_int", OAM_RX_BASE_ADDR, 0x88, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_72_INT, "rx_sdbip_72_int", OAM_RX_BASE_ADDR, 0x88, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_73_INT, "rx_sdbip_73_int", OAM_RX_BASE_ADDR, 0x88, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_74_INT, "rx_sdbip_74_int", OAM_RX_BASE_ADDR, 0x88, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_75_INT, "rx_sdbip_75_int", OAM_RX_BASE_ADDR, 0x88, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_76_INT, "rx_sdbip_76_int", OAM_RX_BASE_ADDR, 0x88, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_77_INT, "rx_sdbip_77_int", OAM_RX_BASE_ADDR, 0x88, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_78_INT, "rx_sdbip_78_int", OAM_RX_BASE_ADDR, 0x88, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_79_INT, "rx_sdbip_79_int", OAM_RX_BASE_ADDR, 0x88, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbip_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBIP_64_INT_MASK, "rx_sdbip_64_int_mask", OAM_RX_BASE_ADDR, 0x89, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBIP_65_INT_MASK, "rx_sdbip_65_int_mask", OAM_RX_BASE_ADDR, 0x89, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBIP_66_INT_MASK, "rx_sdbip_66_int_mask", OAM_RX_BASE_ADDR, 0x89, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBIP_67_INT_MASK, "rx_sdbip_67_int_mask", OAM_RX_BASE_ADDR, 0x89, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBIP_68_INT_MASK, "rx_sdbip_68_int_mask", OAM_RX_BASE_ADDR, 0x89, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBIP_69_INT_MASK, "rx_sdbip_69_int_mask", OAM_RX_BASE_ADDR, 0x89, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBIP_70_INT_MASK, "rx_sdbip_70_int_mask", OAM_RX_BASE_ADDR, 0x89, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBIP_71_INT_MASK, "rx_sdbip_71_int_mask", OAM_RX_BASE_ADDR, 0x89, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBIP_72_INT_MASK, "rx_sdbip_72_int_mask", OAM_RX_BASE_ADDR, 0x89, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBIP_73_INT_MASK, "rx_sdbip_73_int_mask", OAM_RX_BASE_ADDR, 0x89, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBIP_74_INT_MASK, "rx_sdbip_74_int_mask", OAM_RX_BASE_ADDR, 0x89, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBIP_75_INT_MASK, "rx_sdbip_75_int_mask", OAM_RX_BASE_ADDR, 0x89, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBIP_76_INT_MASK, "rx_sdbip_76_int_mask", OAM_RX_BASE_ADDR, 0x89, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBIP_77_INT_MASK, "rx_sdbip_77_int_mask", OAM_RX_BASE_ADDR, 0x89, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBIP_78_INT_MASK, "rx_sdbip_78_int_mask", OAM_RX_BASE_ADDR, 0x89, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBIP_79_INT_MASK, "rx_sdbip_79_int_mask", OAM_RX_BASE_ADDR, 0x89, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_0_INT, "bas_rdi_0_int", OAM_RX_BASE_ADDR, 0x94, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_1_INT, "bas_rdi_1_int", OAM_RX_BASE_ADDR, 0x94, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_2_INT, "bas_rdi_2_int", OAM_RX_BASE_ADDR, 0x94, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_3_INT, "bas_rdi_3_int", OAM_RX_BASE_ADDR, 0x94, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_4_INT, "bas_rdi_4_int", OAM_RX_BASE_ADDR, 0x94, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_5_INT, "bas_rdi_5_int", OAM_RX_BASE_ADDR, 0x94, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_6_INT, "bas_rdi_6_int", OAM_RX_BASE_ADDR, 0x94, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_7_INT, "bas_rdi_7_int", OAM_RX_BASE_ADDR, 0x94, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_8_INT, "bas_rdi_8_int", OAM_RX_BASE_ADDR, 0x94, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_9_INT, "bas_rdi_9_int", OAM_RX_BASE_ADDR, 0x94, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_10_INT, "bas_rdi_10_int", OAM_RX_BASE_ADDR, 0x94, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_11_INT, "bas_rdi_11_int", OAM_RX_BASE_ADDR, 0x94, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_12_INT, "bas_rdi_12_int", OAM_RX_BASE_ADDR, 0x94, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_13_INT, "bas_rdi_13_int", OAM_RX_BASE_ADDR, 0x94, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_14_INT, "bas_rdi_14_int", OAM_RX_BASE_ADDR, 0x94, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_15_INT, "bas_rdi_15_int", OAM_RX_BASE_ADDR, 0x94, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_0_INT_MASK, "bas_rdi_0_int_mask", OAM_RX_BASE_ADDR, 0x95, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_1_INT_MASK, "bas_rdi_1_int_mask", OAM_RX_BASE_ADDR, 0x95, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_2_INT_MASK, "bas_rdi_2_int_mask", OAM_RX_BASE_ADDR, 0x95, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_3_INT_MASK, "bas_rdi_3_int_mask", OAM_RX_BASE_ADDR, 0x95, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_4_INT_MASK, "bas_rdi_4_int_mask", OAM_RX_BASE_ADDR, 0x95, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_5_INT_MASK, "bas_rdi_5_int_mask", OAM_RX_BASE_ADDR, 0x95, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_6_INT_MASK, "bas_rdi_6_int_mask", OAM_RX_BASE_ADDR, 0x95, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_7_INT_MASK, "bas_rdi_7_int_mask", OAM_RX_BASE_ADDR, 0x95, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_8_INT_MASK, "bas_rdi_8_int_mask", OAM_RX_BASE_ADDR, 0x95, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_9_INT_MASK, "bas_rdi_9_int_mask", OAM_RX_BASE_ADDR, 0x95, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_10_INT_MASK, "bas_rdi_10_int_mask", OAM_RX_BASE_ADDR, 0x95, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_11_INT_MASK, "bas_rdi_11_int_mask", OAM_RX_BASE_ADDR, 0x95, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_12_INT_MASK, "bas_rdi_12_int_mask", OAM_RX_BASE_ADDR, 0x95, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_13_INT_MASK, "bas_rdi_13_int_mask", OAM_RX_BASE_ADDR, 0x95, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_14_INT_MASK, "bas_rdi_14_int_mask", OAM_RX_BASE_ADDR, 0x95, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_15_INT_MASK, "bas_rdi_15_int_mask", OAM_RX_BASE_ADDR, 0x95, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_27_INT, "bas_rdi_27_int", OAM_RX_BASE_ADDR, 0x96, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_28_INT, "bas_rdi_28_int", OAM_RX_BASE_ADDR, 0x96, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_29_INT, "bas_rdi_29_int", OAM_RX_BASE_ADDR, 0x96, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_30_INT, "bas_rdi_30_int", OAM_RX_BASE_ADDR, 0x96, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_31_INT, "bas_rdi_31_int", OAM_RX_BASE_ADDR, 0x96, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_16_INT, "bas_rdi_16_int", OAM_RX_BASE_ADDR, 0x96, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_17_INT, "bas_rdi_17_int", OAM_RX_BASE_ADDR, 0x96, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_18_INT, "bas_rdi_18_int", OAM_RX_BASE_ADDR, 0x96, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_19_INT, "bas_rdi_19_int", OAM_RX_BASE_ADDR, 0x96, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_20_INT, "bas_rdi_20_int", OAM_RX_BASE_ADDR, 0x96, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_21_INT, "bas_rdi_21_int", OAM_RX_BASE_ADDR, 0x96, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_22_INT, "bas_rdi_22_int", OAM_RX_BASE_ADDR, 0x96, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_23_INT, "bas_rdi_23_int", OAM_RX_BASE_ADDR, 0x96, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_24_INT, "bas_rdi_24_int", OAM_RX_BASE_ADDR, 0x96, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_25_INT, "bas_rdi_25_int", OAM_RX_BASE_ADDR, 0x96, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_26_INT, "bas_rdi_26_int", OAM_RX_BASE_ADDR, 0x96, 21, 20, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_26_INT_MASK, "bas_rdi_26_int_mask", OAM_RX_BASE_ADDR, 0x97, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_27_INT_MASK, "bas_rdi_27_int_mask", OAM_RX_BASE_ADDR, 0x97, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_28_INT_MASK, "bas_rdi_28_int_mask", OAM_RX_BASE_ADDR, 0x97, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_29_INT_MASK, "bas_rdi_29_int_mask", OAM_RX_BASE_ADDR, 0x97, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_30_INT_MASK, "bas_rdi_30_int_mask", OAM_RX_BASE_ADDR, 0x97, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_31_INT_MASK, "bas_rdi_31_int_mask", OAM_RX_BASE_ADDR, 0x97, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_16_INT_MASK, "bas_rdi_16_int_mask", OAM_RX_BASE_ADDR, 0x97, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_17_INT_MASK, "bas_rdi_17_int_mask", OAM_RX_BASE_ADDR, 0x97, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_18_INT_MASK, "bas_rdi_18_int_mask", OAM_RX_BASE_ADDR, 0x97, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_19_INT_MASK, "bas_rdi_19_int_mask", OAM_RX_BASE_ADDR, 0x97, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_20_INT_MASK, "bas_rdi_20_int_mask", OAM_RX_BASE_ADDR, 0x97, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_21_INT_MASK, "bas_rdi_21_int_mask", OAM_RX_BASE_ADDR, 0x97, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_22_INT_MASK, "bas_rdi_22_int_mask", OAM_RX_BASE_ADDR, 0x97, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_23_INT_MASK, "bas_rdi_23_int_mask", OAM_RX_BASE_ADDR, 0x97, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_24_INT_MASK, "bas_rdi_24_int_mask", OAM_RX_BASE_ADDR, 0x97, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_25_INT_MASK, "bas_rdi_25_int_mask", OAM_RX_BASE_ADDR, 0x97, 19, 18, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_32_INT, "bas_rdi_32_int", OAM_RX_BASE_ADDR, 0x98, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_33_INT, "bas_rdi_33_int", OAM_RX_BASE_ADDR, 0x98, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_34_INT, "bas_rdi_34_int", OAM_RX_BASE_ADDR, 0x98, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_35_INT, "bas_rdi_35_int", OAM_RX_BASE_ADDR, 0x98, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_36_INT, "bas_rdi_36_int", OAM_RX_BASE_ADDR, 0x98, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_37_INT, "bas_rdi_37_int", OAM_RX_BASE_ADDR, 0x98, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_38_INT, "bas_rdi_38_int", OAM_RX_BASE_ADDR, 0x98, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_39_INT, "bas_rdi_39_int", OAM_RX_BASE_ADDR, 0x98, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_40_INT, "bas_rdi_40_int", OAM_RX_BASE_ADDR, 0x98, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_41_INT, "bas_rdi_41_int", OAM_RX_BASE_ADDR, 0x98, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_42_INT, "bas_rdi_42_int", OAM_RX_BASE_ADDR, 0x98, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_43_INT, "bas_rdi_43_int", OAM_RX_BASE_ADDR, 0x98, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_44_INT, "bas_rdi_44_int", OAM_RX_BASE_ADDR, 0x98, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_45_INT, "bas_rdi_45_int", OAM_RX_BASE_ADDR, 0x98, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_46_INT, "bas_rdi_46_int", OAM_RX_BASE_ADDR, 0x98, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_47_INT, "bas_rdi_47_int", OAM_RX_BASE_ADDR, 0x98, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_32_INT_MASK, "bas_rdi_32_int_mask", OAM_RX_BASE_ADDR, 0x99, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_33_INT_MASK, "bas_rdi_33_int_mask", OAM_RX_BASE_ADDR, 0x99, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_34_INT_MASK, "bas_rdi_34_int_mask", OAM_RX_BASE_ADDR, 0x99, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_35_INT_MASK, "bas_rdi_35_int_mask", OAM_RX_BASE_ADDR, 0x99, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_36_INT_MASK, "bas_rdi_36_int_mask", OAM_RX_BASE_ADDR, 0x99, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_37_INT_MASK, "bas_rdi_37_int_mask", OAM_RX_BASE_ADDR, 0x99, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_38_INT_MASK, "bas_rdi_38_int_mask", OAM_RX_BASE_ADDR, 0x99, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_39_INT_MASK, "bas_rdi_39_int_mask", OAM_RX_BASE_ADDR, 0x99, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_40_INT_MASK, "bas_rdi_40_int_mask", OAM_RX_BASE_ADDR, 0x99, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_41_INT_MASK, "bas_rdi_41_int_mask", OAM_RX_BASE_ADDR, 0x99, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_42_INT_MASK, "bas_rdi_42_int_mask", OAM_RX_BASE_ADDR, 0x99, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_43_INT_MASK, "bas_rdi_43_int_mask", OAM_RX_BASE_ADDR, 0x99, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_44_INT_MASK, "bas_rdi_44_int_mask", OAM_RX_BASE_ADDR, 0x99, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_45_INT_MASK, "bas_rdi_45_int_mask", OAM_RX_BASE_ADDR, 0x99, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_46_INT_MASK, "bas_rdi_46_int_mask", OAM_RX_BASE_ADDR, 0x99, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_47_INT_MASK, "bas_rdi_47_int_mask", OAM_RX_BASE_ADDR, 0x99, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_48_INT, "bas_rdi_48_int", OAM_RX_BASE_ADDR, 0x9a, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_49_INT, "bas_rdi_49_int", OAM_RX_BASE_ADDR, 0x9a, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_50_INT, "bas_rdi_50_int", OAM_RX_BASE_ADDR, 0x9a, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_51_INT, "bas_rdi_51_int", OAM_RX_BASE_ADDR, 0x9a, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_52_INT, "bas_rdi_52_int", OAM_RX_BASE_ADDR, 0x9a, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_53_INT, "bas_rdi_53_int", OAM_RX_BASE_ADDR, 0x9a, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_54_INT, "bas_rdi_54_int", OAM_RX_BASE_ADDR, 0x9a, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_55_INT, "bas_rdi_55_int", OAM_RX_BASE_ADDR, 0x9a, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_56_INT, "bas_rdi_56_int", OAM_RX_BASE_ADDR, 0x9a, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_57_INT, "bas_rdi_57_int", OAM_RX_BASE_ADDR, 0x9a, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_58_INT, "bas_rdi_58_int", OAM_RX_BASE_ADDR, 0x9a, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_59_INT, "bas_rdi_59_int", OAM_RX_BASE_ADDR, 0x9a, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_60_INT, "bas_rdi_60_int", OAM_RX_BASE_ADDR, 0x9a, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_61_INT, "bas_rdi_61_int", OAM_RX_BASE_ADDR, 0x9a, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_62_INT, "bas_rdi_62_int", OAM_RX_BASE_ADDR, 0x9a, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_63_INT, "bas_rdi_63_int", OAM_RX_BASE_ADDR, 0x9a, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_48_INT_MASK, "bas_rdi_48_int_mask", OAM_RX_BASE_ADDR, 0x9b, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_49_INT_MASK, "bas_rdi_49_int_mask", OAM_RX_BASE_ADDR, 0x9b, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_50_INT_MASK, "bas_rdi_50_int_mask", OAM_RX_BASE_ADDR, 0x9b, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_51_INT_MASK, "bas_rdi_51_int_mask", OAM_RX_BASE_ADDR, 0x9b, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_52_INT_MASK, "bas_rdi_52_int_mask", OAM_RX_BASE_ADDR, 0x9b, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_53_INT_MASK, "bas_rdi_53_int_mask", OAM_RX_BASE_ADDR, 0x9b, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_54_INT_MASK, "bas_rdi_54_int_mask", OAM_RX_BASE_ADDR, 0x9b, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_55_INT_MASK, "bas_rdi_55_int_mask", OAM_RX_BASE_ADDR, 0x9b, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_56_INT_MASK, "bas_rdi_56_int_mask", OAM_RX_BASE_ADDR, 0x9b, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_57_INT_MASK, "bas_rdi_57_int_mask", OAM_RX_BASE_ADDR, 0x9b, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_58_INT_MASK, "bas_rdi_58_int_mask", OAM_RX_BASE_ADDR, 0x9b, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_59_INT_MASK, "bas_rdi_59_int_mask", OAM_RX_BASE_ADDR, 0x9b, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_60_INT_MASK, "bas_rdi_60_int_mask", OAM_RX_BASE_ADDR, 0x9b, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_61_INT_MASK, "bas_rdi_61_int_mask", OAM_RX_BASE_ADDR, 0x9b, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_62_INT_MASK, "bas_rdi_62_int_mask", OAM_RX_BASE_ADDR, 0x9b, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_63_INT_MASK, "bas_rdi_63_int_mask", OAM_RX_BASE_ADDR, 0x9b, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_64_INT, "bas_rdi_64_int", OAM_RX_BASE_ADDR, 0x9c, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_65_INT, "bas_rdi_65_int", OAM_RX_BASE_ADDR, 0x9c, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_66_INT, "bas_rdi_66_int", OAM_RX_BASE_ADDR, 0x9c, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_67_INT, "bas_rdi_67_int", OAM_RX_BASE_ADDR, 0x9c, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_68_INT, "bas_rdi_68_int", OAM_RX_BASE_ADDR, 0x9c, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_69_INT, "bas_rdi_69_int", OAM_RX_BASE_ADDR, 0x9c, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_70_INT, "bas_rdi_70_int", OAM_RX_BASE_ADDR, 0x9c, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_71_INT, "bas_rdi_71_int", OAM_RX_BASE_ADDR, 0x9c, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_72_INT, "bas_rdi_72_int", OAM_RX_BASE_ADDR, 0x9c, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_73_INT, "bas_rdi_73_int", OAM_RX_BASE_ADDR, 0x9c, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_74_INT, "bas_rdi_74_int", OAM_RX_BASE_ADDR, 0x9c, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_75_INT, "bas_rdi_75_int", OAM_RX_BASE_ADDR, 0x9c, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_76_INT, "bas_rdi_76_int", OAM_RX_BASE_ADDR, 0x9c, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_77_INT, "bas_rdi_77_int", OAM_RX_BASE_ADDR, 0x9c, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_78_INT, "bas_rdi_78_int", OAM_RX_BASE_ADDR, 0x9c, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_79_INT, "bas_rdi_79_int", OAM_RX_BASE_ADDR, 0x9c, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_rdi_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_RDI_64_INT_MASK, "bas_rdi_64_int_mask", OAM_RX_BASE_ADDR, 0x9d, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_65_INT_MASK, "bas_rdi_65_int_mask", OAM_RX_BASE_ADDR, 0x9d, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_66_INT_MASK, "bas_rdi_66_int_mask", OAM_RX_BASE_ADDR, 0x9d, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_67_INT_MASK, "bas_rdi_67_int_mask", OAM_RX_BASE_ADDR, 0x9d, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_68_INT_MASK, "bas_rdi_68_int_mask", OAM_RX_BASE_ADDR, 0x9d, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_69_INT_MASK, "bas_rdi_69_int_mask", OAM_RX_BASE_ADDR, 0x9d, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_70_INT_MASK, "bas_rdi_70_int_mask", OAM_RX_BASE_ADDR, 0x9d, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_71_INT_MASK, "bas_rdi_71_int_mask", OAM_RX_BASE_ADDR, 0x9d, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_72_INT_MASK, "bas_rdi_72_int_mask", OAM_RX_BASE_ADDR, 0x9d, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_73_INT_MASK, "bas_rdi_73_int_mask", OAM_RX_BASE_ADDR, 0x9d, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_74_INT_MASK, "bas_rdi_74_int_mask", OAM_RX_BASE_ADDR, 0x9d, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_75_INT_MASK, "bas_rdi_75_int_mask", OAM_RX_BASE_ADDR, 0x9d, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_76_INT_MASK, "bas_rdi_76_int_mask", OAM_RX_BASE_ADDR, 0x9d, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_77_INT_MASK, "bas_rdi_77_int_mask", OAM_RX_BASE_ADDR, 0x9d, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_78_INT_MASK, "bas_rdi_78_int_mask", OAM_RX_BASE_ADDR, 0x9d, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_RDI_79_INT_MASK, "bas_rdi_79_int_mask", OAM_RX_BASE_ADDR, 0x9d, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_0_INT, "bas_csf_lpi_0_int", OAM_RX_BASE_ADDR, 0x9e, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_1_INT, "bas_csf_lpi_1_int", OAM_RX_BASE_ADDR, 0x9e, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_2_INT, "bas_csf_lpi_2_int", OAM_RX_BASE_ADDR, 0x9e, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_3_INT, "bas_csf_lpi_3_int", OAM_RX_BASE_ADDR, 0x9e, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_4_INT, "bas_csf_lpi_4_int", OAM_RX_BASE_ADDR, 0x9e, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_5_INT, "bas_csf_lpi_5_int", OAM_RX_BASE_ADDR, 0x9e, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_6_INT, "bas_csf_lpi_6_int", OAM_RX_BASE_ADDR, 0x9e, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_7_INT, "bas_csf_lpi_7_int", OAM_RX_BASE_ADDR, 0x9e, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_8_INT, "bas_csf_lpi_8_int", OAM_RX_BASE_ADDR, 0x9e, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_9_INT, "bas_csf_lpi_9_int", OAM_RX_BASE_ADDR, 0x9e, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_10_INT, "bas_csf_lpi_10_int", OAM_RX_BASE_ADDR, 0x9e, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_11_INT, "bas_csf_lpi_11_int", OAM_RX_BASE_ADDR, 0x9e, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_12_INT, "bas_csf_lpi_12_int", OAM_RX_BASE_ADDR, 0x9e, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_13_INT, "bas_csf_lpi_13_int", OAM_RX_BASE_ADDR, 0x9e, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_14_INT, "bas_csf_lpi_14_int", OAM_RX_BASE_ADDR, 0x9e, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_15_INT, "bas_csf_lpi_15_int", OAM_RX_BASE_ADDR, 0x9e, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_0_INT_MASK, "bas_csf_lpi_0_int_mask", OAM_RX_BASE_ADDR, 0x9f, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_1_INT_MASK, "bas_csf_lpi_1_int_mask", OAM_RX_BASE_ADDR, 0x9f, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_2_INT_MASK, "bas_csf_lpi_2_int_mask", OAM_RX_BASE_ADDR, 0x9f, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_3_INT_MASK, "bas_csf_lpi_3_int_mask", OAM_RX_BASE_ADDR, 0x9f, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_4_INT_MASK, "bas_csf_lpi_4_int_mask", OAM_RX_BASE_ADDR, 0x9f, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_5_INT_MASK, "bas_csf_lpi_5_int_mask", OAM_RX_BASE_ADDR, 0x9f, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_6_INT_MASK, "bas_csf_lpi_6_int_mask", OAM_RX_BASE_ADDR, 0x9f, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_7_INT_MASK, "bas_csf_lpi_7_int_mask", OAM_RX_BASE_ADDR, 0x9f, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_8_INT_MASK, "bas_csf_lpi_8_int_mask", OAM_RX_BASE_ADDR, 0x9f, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_9_INT_MASK, "bas_csf_lpi_9_int_mask", OAM_RX_BASE_ADDR, 0x9f, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_10_INT_MASK, "bas_csf_lpi_10_int_mask", OAM_RX_BASE_ADDR, 0x9f, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_11_INT_MASK, "bas_csf_lpi_11_int_mask", OAM_RX_BASE_ADDR, 0x9f, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_12_INT_MASK, "bas_csf_lpi_12_int_mask", OAM_RX_BASE_ADDR, 0x9f, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_13_INT_MASK, "bas_csf_lpi_13_int_mask", OAM_RX_BASE_ADDR, 0x9f, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_14_INT_MASK, "bas_csf_lpi_14_int_mask", OAM_RX_BASE_ADDR, 0x9f, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_15_INT_MASK, "bas_csf_lpi_15_int_mask", OAM_RX_BASE_ADDR, 0x9f, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_16_INT, "bas_csf_lpi_16_int", OAM_RX_BASE_ADDR, 0xa0, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_17_INT, "bas_csf_lpi_17_int", OAM_RX_BASE_ADDR, 0xa0, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_18_INT, "bas_csf_lpi_18_int", OAM_RX_BASE_ADDR, 0xa0, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_19_INT, "bas_csf_lpi_19_int", OAM_RX_BASE_ADDR, 0xa0, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_20_INT, "bas_csf_lpi_20_int", OAM_RX_BASE_ADDR, 0xa0, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_21_INT, "bas_csf_lpi_21_int", OAM_RX_BASE_ADDR, 0xa0, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_22_INT, "bas_csf_lpi_22_int", OAM_RX_BASE_ADDR, 0xa0, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_23_INT, "bas_csf_lpi_23_int", OAM_RX_BASE_ADDR, 0xa0, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_24_INT, "bas_csf_lpi_24_int", OAM_RX_BASE_ADDR, 0xa0, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_25_INT, "bas_csf_lpi_25_int", OAM_RX_BASE_ADDR, 0xa0, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_26_INT, "bas_csf_lpi_26_int", OAM_RX_BASE_ADDR, 0xa0, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_27_INT, "bas_csf_lpi_27_int", OAM_RX_BASE_ADDR, 0xa0, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_28_INT, "bas_csf_lpi_28_int", OAM_RX_BASE_ADDR, 0xa0, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_29_INT, "bas_csf_lpi_29_int", OAM_RX_BASE_ADDR, 0xa0, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_30_INT, "bas_csf_lpi_30_int", OAM_RX_BASE_ADDR, 0xa0, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_31_INT, "bas_csf_lpi_31_int", OAM_RX_BASE_ADDR, 0xa0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_16_INT_MASK, "bas_csf_lpi_16_int_mask", OAM_RX_BASE_ADDR, 0xa1, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_17_INT_MASK, "bas_csf_lpi_17_int_mask", OAM_RX_BASE_ADDR, 0xa1, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_18_INT_MASK, "bas_csf_lpi_18_int_mask", OAM_RX_BASE_ADDR, 0xa1, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_19_INT_MASK, "bas_csf_lpi_19_int_mask", OAM_RX_BASE_ADDR, 0xa1, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_20_INT_MASK, "bas_csf_lpi_20_int_mask", OAM_RX_BASE_ADDR, 0xa1, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_21_INT_MASK, "bas_csf_lpi_21_int_mask", OAM_RX_BASE_ADDR, 0xa1, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_22_INT_MASK, "bas_csf_lpi_22_int_mask", OAM_RX_BASE_ADDR, 0xa1, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_23_INT_MASK, "bas_csf_lpi_23_int_mask", OAM_RX_BASE_ADDR, 0xa1, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_24_INT_MASK, "bas_csf_lpi_24_int_mask", OAM_RX_BASE_ADDR, 0xa1, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_25_INT_MASK, "bas_csf_lpi_25_int_mask", OAM_RX_BASE_ADDR, 0xa1, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_26_INT_MASK, "bas_csf_lpi_26_int_mask", OAM_RX_BASE_ADDR, 0xa1, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_27_INT_MASK, "bas_csf_lpi_27_int_mask", OAM_RX_BASE_ADDR, 0xa1, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_28_INT_MASK, "bas_csf_lpi_28_int_mask", OAM_RX_BASE_ADDR, 0xa1, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_29_INT_MASK, "bas_csf_lpi_29_int_mask", OAM_RX_BASE_ADDR, 0xa1, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_30_INT_MASK, "bas_csf_lpi_30_int_mask", OAM_RX_BASE_ADDR, 0xa1, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_31_INT_MASK, "bas_csf_lpi_31_int_mask", OAM_RX_BASE_ADDR, 0xa1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_32_INT, "bas_csf_lpi_32_int", OAM_RX_BASE_ADDR, 0xa2, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_33_INT, "bas_csf_lpi_33_int", OAM_RX_BASE_ADDR, 0xa2, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_34_INT, "bas_csf_lpi_34_int", OAM_RX_BASE_ADDR, 0xa2, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_35_INT, "bas_csf_lpi_35_int", OAM_RX_BASE_ADDR, 0xa2, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_36_INT, "bas_csf_lpi_36_int", OAM_RX_BASE_ADDR, 0xa2, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_37_INT, "bas_csf_lpi_37_int", OAM_RX_BASE_ADDR, 0xa2, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_38_INT, "bas_csf_lpi_38_int", OAM_RX_BASE_ADDR, 0xa2, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_39_INT, "bas_csf_lpi_39_int", OAM_RX_BASE_ADDR, 0xa2, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_40_INT, "bas_csf_lpi_40_int", OAM_RX_BASE_ADDR, 0xa2, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_41_INT, "bas_csf_lpi_41_int", OAM_RX_BASE_ADDR, 0xa2, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_42_INT, "bas_csf_lpi_42_int", OAM_RX_BASE_ADDR, 0xa2, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_43_INT, "bas_csf_lpi_43_int", OAM_RX_BASE_ADDR, 0xa2, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_44_INT, "bas_csf_lpi_44_int", OAM_RX_BASE_ADDR, 0xa2, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_45_INT, "bas_csf_lpi_45_int", OAM_RX_BASE_ADDR, 0xa2, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_46_INT, "bas_csf_lpi_46_int", OAM_RX_BASE_ADDR, 0xa2, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_47_INT, "bas_csf_lpi_47_int", OAM_RX_BASE_ADDR, 0xa2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_32_INT_MASK, "bas_csf_lpi_32_int_mask", OAM_RX_BASE_ADDR, 0xa3, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_33_INT_MASK, "bas_csf_lpi_33_int_mask", OAM_RX_BASE_ADDR, 0xa3, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_34_INT_MASK, "bas_csf_lpi_34_int_mask", OAM_RX_BASE_ADDR, 0xa3, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_35_INT_MASK, "bas_csf_lpi_35_int_mask", OAM_RX_BASE_ADDR, 0xa3, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_36_INT_MASK, "bas_csf_lpi_36_int_mask", OAM_RX_BASE_ADDR, 0xa3, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_37_INT_MASK, "bas_csf_lpi_37_int_mask", OAM_RX_BASE_ADDR, 0xa3, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_38_INT_MASK, "bas_csf_lpi_38_int_mask", OAM_RX_BASE_ADDR, 0xa3, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_39_INT_MASK, "bas_csf_lpi_39_int_mask", OAM_RX_BASE_ADDR, 0xa3, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_40_INT_MASK, "bas_csf_lpi_40_int_mask", OAM_RX_BASE_ADDR, 0xa3, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_41_INT_MASK, "bas_csf_lpi_41_int_mask", OAM_RX_BASE_ADDR, 0xa3, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_42_INT_MASK, "bas_csf_lpi_42_int_mask", OAM_RX_BASE_ADDR, 0xa3, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_43_INT_MASK, "bas_csf_lpi_43_int_mask", OAM_RX_BASE_ADDR, 0xa3, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_44_INT_MASK, "bas_csf_lpi_44_int_mask", OAM_RX_BASE_ADDR, 0xa3, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_45_INT_MASK, "bas_csf_lpi_45_int_mask", OAM_RX_BASE_ADDR, 0xa3, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_46_INT_MASK, "bas_csf_lpi_46_int_mask", OAM_RX_BASE_ADDR, 0xa3, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_47_INT_MASK, "bas_csf_lpi_47_int_mask", OAM_RX_BASE_ADDR, 0xa3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_48_INT, "bas_csf_lpi_48_int", OAM_RX_BASE_ADDR, 0xa4, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_49_INT, "bas_csf_lpi_49_int", OAM_RX_BASE_ADDR, 0xa4, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_50_INT, "bas_csf_lpi_50_int", OAM_RX_BASE_ADDR, 0xa4, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_51_INT, "bas_csf_lpi_51_int", OAM_RX_BASE_ADDR, 0xa4, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_52_INT, "bas_csf_lpi_52_int", OAM_RX_BASE_ADDR, 0xa4, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_53_INT, "bas_csf_lpi_53_int", OAM_RX_BASE_ADDR, 0xa4, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_54_INT, "bas_csf_lpi_54_int", OAM_RX_BASE_ADDR, 0xa4, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_55_INT, "bas_csf_lpi_55_int", OAM_RX_BASE_ADDR, 0xa4, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_56_INT, "bas_csf_lpi_56_int", OAM_RX_BASE_ADDR, 0xa4, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_57_INT, "bas_csf_lpi_57_int", OAM_RX_BASE_ADDR, 0xa4, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_58_INT, "bas_csf_lpi_58_int", OAM_RX_BASE_ADDR, 0xa4, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_59_INT, "bas_csf_lpi_59_int", OAM_RX_BASE_ADDR, 0xa4, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_60_INT, "bas_csf_lpi_60_int", OAM_RX_BASE_ADDR, 0xa4, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_61_INT, "bas_csf_lpi_61_int", OAM_RX_BASE_ADDR, 0xa4, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_62_INT, "bas_csf_lpi_62_int", OAM_RX_BASE_ADDR, 0xa4, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_63_INT, "bas_csf_lpi_63_int", OAM_RX_BASE_ADDR, 0xa4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_48_INT_MASK, "bas_csf_lpi_48_int_mask", OAM_RX_BASE_ADDR, 0xa5, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_49_INT_MASK, "bas_csf_lpi_49_int_mask", OAM_RX_BASE_ADDR, 0xa5, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_50_INT_MASK, "bas_csf_lpi_50_int_mask", OAM_RX_BASE_ADDR, 0xa5, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_51_INT_MASK, "bas_csf_lpi_51_int_mask", OAM_RX_BASE_ADDR, 0xa5, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_52_INT_MASK, "bas_csf_lpi_52_int_mask", OAM_RX_BASE_ADDR, 0xa5, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_53_INT_MASK, "bas_csf_lpi_53_int_mask", OAM_RX_BASE_ADDR, 0xa5, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_54_INT_MASK, "bas_csf_lpi_54_int_mask", OAM_RX_BASE_ADDR, 0xa5, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_55_INT_MASK, "bas_csf_lpi_55_int_mask", OAM_RX_BASE_ADDR, 0xa5, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_56_INT_MASK, "bas_csf_lpi_56_int_mask", OAM_RX_BASE_ADDR, 0xa5, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_57_INT_MASK, "bas_csf_lpi_57_int_mask", OAM_RX_BASE_ADDR, 0xa5, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_58_INT_MASK, "bas_csf_lpi_58_int_mask", OAM_RX_BASE_ADDR, 0xa5, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_59_INT_MASK, "bas_csf_lpi_59_int_mask", OAM_RX_BASE_ADDR, 0xa5, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_60_INT_MASK, "bas_csf_lpi_60_int_mask", OAM_RX_BASE_ADDR, 0xa5, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_61_INT_MASK, "bas_csf_lpi_61_int_mask", OAM_RX_BASE_ADDR, 0xa5, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_62_INT_MASK, "bas_csf_lpi_62_int_mask", OAM_RX_BASE_ADDR, 0xa5, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_63_INT_MASK, "bas_csf_lpi_63_int_mask", OAM_RX_BASE_ADDR, 0xa5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_75_INT, "bas_csf_lpi_75_int", OAM_RX_BASE_ADDR, 0xa6, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_76_INT, "bas_csf_lpi_76_int", OAM_RX_BASE_ADDR, 0xa6, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_77_INT, "bas_csf_lpi_77_int", OAM_RX_BASE_ADDR, 0xa6, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_78_INT, "bas_csf_lpi_78_int", OAM_RX_BASE_ADDR, 0xa6, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_79_INT, "bas_csf_lpi_79_int", OAM_RX_BASE_ADDR, 0xa6, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_64_INT, "bas_csf_lpi_64_int", OAM_RX_BASE_ADDR, 0xa6, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_65_INT, "bas_csf_lpi_65_int", OAM_RX_BASE_ADDR, 0xa6, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_66_INT, "bas_csf_lpi_66_int", OAM_RX_BASE_ADDR, 0xa6, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_67_INT, "bas_csf_lpi_67_int", OAM_RX_BASE_ADDR, 0xa6, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_68_INT, "bas_csf_lpi_68_int", OAM_RX_BASE_ADDR, 0xa6, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_69_INT, "bas_csf_lpi_69_int", OAM_RX_BASE_ADDR, 0xa6, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_70_INT, "bas_csf_lpi_70_int", OAM_RX_BASE_ADDR, 0xa6, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_71_INT, "bas_csf_lpi_71_int", OAM_RX_BASE_ADDR, 0xa6, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_72_INT, "bas_csf_lpi_72_int", OAM_RX_BASE_ADDR, 0xa6, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_73_INT, "bas_csf_lpi_73_int", OAM_RX_BASE_ADDR, 0xa6, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_74_INT, "bas_csf_lpi_74_int", OAM_RX_BASE_ADDR, 0xa6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_bas_csf_lpi_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CSF_LPI_74_INT_MASK, "bas_csf_lpi_74_int_mask", OAM_RX_BASE_ADDR, 0xa7, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_75_INT_MASK, "bas_csf_lpi_75_int_mask", OAM_RX_BASE_ADDR, 0xa7, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_76_INT_MASK, "bas_csf_lpi_76_int_mask", OAM_RX_BASE_ADDR, 0xa7, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_77_INT_MASK, "bas_csf_lpi_77_int_mask", OAM_RX_BASE_ADDR, 0xa7, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_78_INT_MASK, "bas_csf_lpi_78_int_mask", OAM_RX_BASE_ADDR, 0xa7, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_79_INT_MASK, "bas_csf_lpi_79_int_mask", OAM_RX_BASE_ADDR, 0xa7, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_64_INT_MASK, "bas_csf_lpi_64_int_mask", OAM_RX_BASE_ADDR, 0xa7, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_65_INT_MASK, "bas_csf_lpi_65_int_mask", OAM_RX_BASE_ADDR, 0xa7, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_66_INT_MASK, "bas_csf_lpi_66_int_mask", OAM_RX_BASE_ADDR, 0xa7, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_67_INT_MASK, "bas_csf_lpi_67_int_mask", OAM_RX_BASE_ADDR, 0xa7, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_68_INT_MASK, "bas_csf_lpi_68_int_mask", OAM_RX_BASE_ADDR, 0xa7, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_69_INT_MASK, "bas_csf_lpi_69_int_mask", OAM_RX_BASE_ADDR, 0xa7, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_70_INT_MASK, "bas_csf_lpi_70_int_mask", OAM_RX_BASE_ADDR, 0xa7, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_71_INT_MASK, "bas_csf_lpi_71_int_mask", OAM_RX_BASE_ADDR, 0xa7, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_72_INT_MASK, "bas_csf_lpi_72_int_mask", OAM_RX_BASE_ADDR, 0xa7, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CSF_LPI_73_INT_MASK, "bas_csf_lpi_73_int_mask", OAM_RX_BASE_ADDR, 0xa7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_0_INT, "bas_cs_lf_0_int", OAM_RX_BASE_ADDR, 0xa8, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_1_INT, "bas_cs_lf_1_int", OAM_RX_BASE_ADDR, 0xa8, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_2_INT, "bas_cs_lf_2_int", OAM_RX_BASE_ADDR, 0xa8, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_3_INT, "bas_cs_lf_3_int", OAM_RX_BASE_ADDR, 0xa8, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_4_INT, "bas_cs_lf_4_int", OAM_RX_BASE_ADDR, 0xa8, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_5_INT, "bas_cs_lf_5_int", OAM_RX_BASE_ADDR, 0xa8, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_6_INT, "bas_cs_lf_6_int", OAM_RX_BASE_ADDR, 0xa8, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_7_INT, "bas_cs_lf_7_int", OAM_RX_BASE_ADDR, 0xa8, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_8_INT, "bas_cs_lf_8_int", OAM_RX_BASE_ADDR, 0xa8, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_9_INT, "bas_cs_lf_9_int", OAM_RX_BASE_ADDR, 0xa8, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_10_INT, "bas_cs_lf_10_int", OAM_RX_BASE_ADDR, 0xa8, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_11_INT, "bas_cs_lf_11_int", OAM_RX_BASE_ADDR, 0xa8, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_12_INT, "bas_cs_lf_12_int", OAM_RX_BASE_ADDR, 0xa8, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_13_INT, "bas_cs_lf_13_int", OAM_RX_BASE_ADDR, 0xa8, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_14_INT, "bas_cs_lf_14_int", OAM_RX_BASE_ADDR, 0xa8, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_15_INT, "bas_cs_lf_15_int", OAM_RX_BASE_ADDR, 0xa8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_0_INT_MASK, "bas_cs_lf_0_int_mask", OAM_RX_BASE_ADDR, 0xa9, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_1_INT_MASK, "bas_cs_lf_1_int_mask", OAM_RX_BASE_ADDR, 0xa9, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_2_INT_MASK, "bas_cs_lf_2_int_mask", OAM_RX_BASE_ADDR, 0xa9, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_3_INT_MASK, "bas_cs_lf_3_int_mask", OAM_RX_BASE_ADDR, 0xa9, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_4_INT_MASK, "bas_cs_lf_4_int_mask", OAM_RX_BASE_ADDR, 0xa9, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_5_INT_MASK, "bas_cs_lf_5_int_mask", OAM_RX_BASE_ADDR, 0xa9, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_6_INT_MASK, "bas_cs_lf_6_int_mask", OAM_RX_BASE_ADDR, 0xa9, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_7_INT_MASK, "bas_cs_lf_7_int_mask", OAM_RX_BASE_ADDR, 0xa9, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_8_INT_MASK, "bas_cs_lf_8_int_mask", OAM_RX_BASE_ADDR, 0xa9, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_9_INT_MASK, "bas_cs_lf_9_int_mask", OAM_RX_BASE_ADDR, 0xa9, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_10_INT_MASK, "bas_cs_lf_10_int_mask", OAM_RX_BASE_ADDR, 0xa9, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_11_INT_MASK, "bas_cs_lf_11_int_mask", OAM_RX_BASE_ADDR, 0xa9, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_12_INT_MASK, "bas_cs_lf_12_int_mask", OAM_RX_BASE_ADDR, 0xa9, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_13_INT_MASK, "bas_cs_lf_13_int_mask", OAM_RX_BASE_ADDR, 0xa9, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_14_INT_MASK, "bas_cs_lf_14_int_mask", OAM_RX_BASE_ADDR, 0xa9, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_15_INT_MASK, "bas_cs_lf_15_int_mask", OAM_RX_BASE_ADDR, 0xa9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_16_INT, "bas_cs_lf_16_int", OAM_RX_BASE_ADDR, 0xaa, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_17_INT, "bas_cs_lf_17_int", OAM_RX_BASE_ADDR, 0xaa, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_18_INT, "bas_cs_lf_18_int", OAM_RX_BASE_ADDR, 0xaa, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_19_INT, "bas_cs_lf_19_int", OAM_RX_BASE_ADDR, 0xaa, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_20_INT, "bas_cs_lf_20_int", OAM_RX_BASE_ADDR, 0xaa, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_21_INT, "bas_cs_lf_21_int", OAM_RX_BASE_ADDR, 0xaa, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_22_INT, "bas_cs_lf_22_int", OAM_RX_BASE_ADDR, 0xaa, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_23_INT, "bas_cs_lf_23_int", OAM_RX_BASE_ADDR, 0xaa, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_24_INT, "bas_cs_lf_24_int", OAM_RX_BASE_ADDR, 0xaa, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_25_INT, "bas_cs_lf_25_int", OAM_RX_BASE_ADDR, 0xaa, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_26_INT, "bas_cs_lf_26_int", OAM_RX_BASE_ADDR, 0xaa, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_27_INT, "bas_cs_lf_27_int", OAM_RX_BASE_ADDR, 0xaa, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_28_INT, "bas_cs_lf_28_int", OAM_RX_BASE_ADDR, 0xaa, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_29_INT, "bas_cs_lf_29_int", OAM_RX_BASE_ADDR, 0xaa, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_30_INT, "bas_cs_lf_30_int", OAM_RX_BASE_ADDR, 0xaa, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_31_INT, "bas_cs_lf_31_int", OAM_RX_BASE_ADDR, 0xaa, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_16_INT_MASK, "bas_cs_lf_16_int_mask", OAM_RX_BASE_ADDR, 0xab, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_17_INT_MASK, "bas_cs_lf_17_int_mask", OAM_RX_BASE_ADDR, 0xab, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_18_INT_MASK, "bas_cs_lf_18_int_mask", OAM_RX_BASE_ADDR, 0xab, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_19_INT_MASK, "bas_cs_lf_19_int_mask", OAM_RX_BASE_ADDR, 0xab, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_20_INT_MASK, "bas_cs_lf_20_int_mask", OAM_RX_BASE_ADDR, 0xab, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_21_INT_MASK, "bas_cs_lf_21_int_mask", OAM_RX_BASE_ADDR, 0xab, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_22_INT_MASK, "bas_cs_lf_22_int_mask", OAM_RX_BASE_ADDR, 0xab, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_23_INT_MASK, "bas_cs_lf_23_int_mask", OAM_RX_BASE_ADDR, 0xab, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_24_INT_MASK, "bas_cs_lf_24_int_mask", OAM_RX_BASE_ADDR, 0xab, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_25_INT_MASK, "bas_cs_lf_25_int_mask", OAM_RX_BASE_ADDR, 0xab, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_26_INT_MASK, "bas_cs_lf_26_int_mask", OAM_RX_BASE_ADDR, 0xab, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_27_INT_MASK, "bas_cs_lf_27_int_mask", OAM_RX_BASE_ADDR, 0xab, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_28_INT_MASK, "bas_cs_lf_28_int_mask", OAM_RX_BASE_ADDR, 0xab, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_29_INT_MASK, "bas_cs_lf_29_int_mask", OAM_RX_BASE_ADDR, 0xab, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_30_INT_MASK, "bas_cs_lf_30_int_mask", OAM_RX_BASE_ADDR, 0xab, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_31_INT_MASK, "bas_cs_lf_31_int_mask", OAM_RX_BASE_ADDR, 0xab, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_32_INT, "bas_cs_lf_32_int", OAM_RX_BASE_ADDR, 0xac, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_33_INT, "bas_cs_lf_33_int", OAM_RX_BASE_ADDR, 0xac, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_34_INT, "bas_cs_lf_34_int", OAM_RX_BASE_ADDR, 0xac, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_35_INT, "bas_cs_lf_35_int", OAM_RX_BASE_ADDR, 0xac, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_36_INT, "bas_cs_lf_36_int", OAM_RX_BASE_ADDR, 0xac, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_37_INT, "bas_cs_lf_37_int", OAM_RX_BASE_ADDR, 0xac, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_38_INT, "bas_cs_lf_38_int", OAM_RX_BASE_ADDR, 0xac, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_39_INT, "bas_cs_lf_39_int", OAM_RX_BASE_ADDR, 0xac, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_40_INT, "bas_cs_lf_40_int", OAM_RX_BASE_ADDR, 0xac, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_41_INT, "bas_cs_lf_41_int", OAM_RX_BASE_ADDR, 0xac, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_42_INT, "bas_cs_lf_42_int", OAM_RX_BASE_ADDR, 0xac, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_43_INT, "bas_cs_lf_43_int", OAM_RX_BASE_ADDR, 0xac, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_44_INT, "bas_cs_lf_44_int", OAM_RX_BASE_ADDR, 0xac, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_45_INT, "bas_cs_lf_45_int", OAM_RX_BASE_ADDR, 0xac, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_46_INT, "bas_cs_lf_46_int", OAM_RX_BASE_ADDR, 0xac, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_47_INT, "bas_cs_lf_47_int", OAM_RX_BASE_ADDR, 0xac, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_32_INT_MASK, "bas_cs_lf_32_int_mask", OAM_RX_BASE_ADDR, 0xad, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_33_INT_MASK, "bas_cs_lf_33_int_mask", OAM_RX_BASE_ADDR, 0xad, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_34_INT_MASK, "bas_cs_lf_34_int_mask", OAM_RX_BASE_ADDR, 0xad, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_35_INT_MASK, "bas_cs_lf_35_int_mask", OAM_RX_BASE_ADDR, 0xad, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_36_INT_MASK, "bas_cs_lf_36_int_mask", OAM_RX_BASE_ADDR, 0xad, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_37_INT_MASK, "bas_cs_lf_37_int_mask", OAM_RX_BASE_ADDR, 0xad, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_38_INT_MASK, "bas_cs_lf_38_int_mask", OAM_RX_BASE_ADDR, 0xad, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_39_INT_MASK, "bas_cs_lf_39_int_mask", OAM_RX_BASE_ADDR, 0xad, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_40_INT_MASK, "bas_cs_lf_40_int_mask", OAM_RX_BASE_ADDR, 0xad, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_41_INT_MASK, "bas_cs_lf_41_int_mask", OAM_RX_BASE_ADDR, 0xad, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_42_INT_MASK, "bas_cs_lf_42_int_mask", OAM_RX_BASE_ADDR, 0xad, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_43_INT_MASK, "bas_cs_lf_43_int_mask", OAM_RX_BASE_ADDR, 0xad, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_44_INT_MASK, "bas_cs_lf_44_int_mask", OAM_RX_BASE_ADDR, 0xad, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_45_INT_MASK, "bas_cs_lf_45_int_mask", OAM_RX_BASE_ADDR, 0xad, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_46_INT_MASK, "bas_cs_lf_46_int_mask", OAM_RX_BASE_ADDR, 0xad, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_47_INT_MASK, "bas_cs_lf_47_int_mask", OAM_RX_BASE_ADDR, 0xad, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_48_INT, "bas_cs_lf_48_int", OAM_RX_BASE_ADDR, 0xae, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_49_INT, "bas_cs_lf_49_int", OAM_RX_BASE_ADDR, 0xae, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_50_INT, "bas_cs_lf_50_int", OAM_RX_BASE_ADDR, 0xae, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_51_INT, "bas_cs_lf_51_int", OAM_RX_BASE_ADDR, 0xae, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_52_INT, "bas_cs_lf_52_int", OAM_RX_BASE_ADDR, 0xae, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_53_INT, "bas_cs_lf_53_int", OAM_RX_BASE_ADDR, 0xae, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_54_INT, "bas_cs_lf_54_int", OAM_RX_BASE_ADDR, 0xae, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_55_INT, "bas_cs_lf_55_int", OAM_RX_BASE_ADDR, 0xae, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_56_INT, "bas_cs_lf_56_int", OAM_RX_BASE_ADDR, 0xae, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_57_INT, "bas_cs_lf_57_int", OAM_RX_BASE_ADDR, 0xae, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_58_INT, "bas_cs_lf_58_int", OAM_RX_BASE_ADDR, 0xae, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_59_INT, "bas_cs_lf_59_int", OAM_RX_BASE_ADDR, 0xae, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_60_INT, "bas_cs_lf_60_int", OAM_RX_BASE_ADDR, 0xae, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_61_INT, "bas_cs_lf_61_int", OAM_RX_BASE_ADDR, 0xae, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_62_INT, "bas_cs_lf_62_int", OAM_RX_BASE_ADDR, 0xae, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_63_INT, "bas_cs_lf_63_int", OAM_RX_BASE_ADDR, 0xae, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_48_INT_MASK, "bas_cs_lf_48_int_mask", OAM_RX_BASE_ADDR, 0xaf, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_49_INT_MASK, "bas_cs_lf_49_int_mask", OAM_RX_BASE_ADDR, 0xaf, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_50_INT_MASK, "bas_cs_lf_50_int_mask", OAM_RX_BASE_ADDR, 0xaf, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_51_INT_MASK, "bas_cs_lf_51_int_mask", OAM_RX_BASE_ADDR, 0xaf, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_52_INT_MASK, "bas_cs_lf_52_int_mask", OAM_RX_BASE_ADDR, 0xaf, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_53_INT_MASK, "bas_cs_lf_53_int_mask", OAM_RX_BASE_ADDR, 0xaf, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_54_INT_MASK, "bas_cs_lf_54_int_mask", OAM_RX_BASE_ADDR, 0xaf, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_55_INT_MASK, "bas_cs_lf_55_int_mask", OAM_RX_BASE_ADDR, 0xaf, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_56_INT_MASK, "bas_cs_lf_56_int_mask", OAM_RX_BASE_ADDR, 0xaf, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_57_INT_MASK, "bas_cs_lf_57_int_mask", OAM_RX_BASE_ADDR, 0xaf, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_58_INT_MASK, "bas_cs_lf_58_int_mask", OAM_RX_BASE_ADDR, 0xaf, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_59_INT_MASK, "bas_cs_lf_59_int_mask", OAM_RX_BASE_ADDR, 0xaf, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_60_INT_MASK, "bas_cs_lf_60_int_mask", OAM_RX_BASE_ADDR, 0xaf, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_61_INT_MASK, "bas_cs_lf_61_int_mask", OAM_RX_BASE_ADDR, 0xaf, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_62_INT_MASK, "bas_cs_lf_62_int_mask", OAM_RX_BASE_ADDR, 0xaf, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_63_INT_MASK, "bas_cs_lf_63_int_mask", OAM_RX_BASE_ADDR, 0xaf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_64_INT, "bas_cs_lf_64_int", OAM_RX_BASE_ADDR, 0xb0, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_65_INT, "bas_cs_lf_65_int", OAM_RX_BASE_ADDR, 0xb0, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_66_INT, "bas_cs_lf_66_int", OAM_RX_BASE_ADDR, 0xb0, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_67_INT, "bas_cs_lf_67_int", OAM_RX_BASE_ADDR, 0xb0, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_68_INT, "bas_cs_lf_68_int", OAM_RX_BASE_ADDR, 0xb0, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_69_INT, "bas_cs_lf_69_int", OAM_RX_BASE_ADDR, 0xb0, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_70_INT, "bas_cs_lf_70_int", OAM_RX_BASE_ADDR, 0xb0, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_71_INT, "bas_cs_lf_71_int", OAM_RX_BASE_ADDR, 0xb0, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_72_INT, "bas_cs_lf_72_int", OAM_RX_BASE_ADDR, 0xb0, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_73_INT, "bas_cs_lf_73_int", OAM_RX_BASE_ADDR, 0xb0, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_74_INT, "bas_cs_lf_74_int", OAM_RX_BASE_ADDR, 0xb0, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_75_INT, "bas_cs_lf_75_int", OAM_RX_BASE_ADDR, 0xb0, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_76_INT, "bas_cs_lf_76_int", OAM_RX_BASE_ADDR, 0xb0, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_77_INT, "bas_cs_lf_77_int", OAM_RX_BASE_ADDR, 0xb0, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_78_INT, "bas_cs_lf_78_int", OAM_RX_BASE_ADDR, 0xb0, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_79_INT, "bas_cs_lf_79_int", OAM_RX_BASE_ADDR, 0xb0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_lf_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_LF_64_INT_MASK, "bas_cs_lf_64_int_mask", OAM_RX_BASE_ADDR, 0xb1, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_65_INT_MASK, "bas_cs_lf_65_int_mask", OAM_RX_BASE_ADDR, 0xb1, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_66_INT_MASK, "bas_cs_lf_66_int_mask", OAM_RX_BASE_ADDR, 0xb1, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_67_INT_MASK, "bas_cs_lf_67_int_mask", OAM_RX_BASE_ADDR, 0xb1, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_68_INT_MASK, "bas_cs_lf_68_int_mask", OAM_RX_BASE_ADDR, 0xb1, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_69_INT_MASK, "bas_cs_lf_69_int_mask", OAM_RX_BASE_ADDR, 0xb1, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_70_INT_MASK, "bas_cs_lf_70_int_mask", OAM_RX_BASE_ADDR, 0xb1, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_71_INT_MASK, "bas_cs_lf_71_int_mask", OAM_RX_BASE_ADDR, 0xb1, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_72_INT_MASK, "bas_cs_lf_72_int_mask", OAM_RX_BASE_ADDR, 0xb1, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_73_INT_MASK, "bas_cs_lf_73_int_mask", OAM_RX_BASE_ADDR, 0xb1, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_74_INT_MASK, "bas_cs_lf_74_int_mask", OAM_RX_BASE_ADDR, 0xb1, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_75_INT_MASK, "bas_cs_lf_75_int_mask", OAM_RX_BASE_ADDR, 0xb1, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_76_INT_MASK, "bas_cs_lf_76_int_mask", OAM_RX_BASE_ADDR, 0xb1, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_77_INT_MASK, "bas_cs_lf_77_int_mask", OAM_RX_BASE_ADDR, 0xb1, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_78_INT_MASK, "bas_cs_lf_78_int_mask", OAM_RX_BASE_ADDR, 0xb1, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_LF_79_INT_MASK, "bas_cs_lf_79_int_mask", OAM_RX_BASE_ADDR, 0xb1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_0_INT, "bas_cs_rf_0_int", OAM_RX_BASE_ADDR, 0xb2, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_1_INT, "bas_cs_rf_1_int", OAM_RX_BASE_ADDR, 0xb2, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_2_INT, "bas_cs_rf_2_int", OAM_RX_BASE_ADDR, 0xb2, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_3_INT, "bas_cs_rf_3_int", OAM_RX_BASE_ADDR, 0xb2, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_4_INT, "bas_cs_rf_4_int", OAM_RX_BASE_ADDR, 0xb2, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_5_INT, "bas_cs_rf_5_int", OAM_RX_BASE_ADDR, 0xb2, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_6_INT, "bas_cs_rf_6_int", OAM_RX_BASE_ADDR, 0xb2, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_7_INT, "bas_cs_rf_7_int", OAM_RX_BASE_ADDR, 0xb2, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_8_INT, "bas_cs_rf_8_int", OAM_RX_BASE_ADDR, 0xb2, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_9_INT, "bas_cs_rf_9_int", OAM_RX_BASE_ADDR, 0xb2, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_10_INT, "bas_cs_rf_10_int", OAM_RX_BASE_ADDR, 0xb2, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_11_INT, "bas_cs_rf_11_int", OAM_RX_BASE_ADDR, 0xb2, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_12_INT, "bas_cs_rf_12_int", OAM_RX_BASE_ADDR, 0xb2, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_13_INT, "bas_cs_rf_13_int", OAM_RX_BASE_ADDR, 0xb2, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_14_INT, "bas_cs_rf_14_int", OAM_RX_BASE_ADDR, 0xb2, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_15_INT, "bas_cs_rf_15_int", OAM_RX_BASE_ADDR, 0xb2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_0_INT_MASK, "bas_cs_rf_0_int_mask", OAM_RX_BASE_ADDR, 0xb3, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_1_INT_MASK, "bas_cs_rf_1_int_mask", OAM_RX_BASE_ADDR, 0xb3, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_2_INT_MASK, "bas_cs_rf_2_int_mask", OAM_RX_BASE_ADDR, 0xb3, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_3_INT_MASK, "bas_cs_rf_3_int_mask", OAM_RX_BASE_ADDR, 0xb3, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_4_INT_MASK, "bas_cs_rf_4_int_mask", OAM_RX_BASE_ADDR, 0xb3, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_5_INT_MASK, "bas_cs_rf_5_int_mask", OAM_RX_BASE_ADDR, 0xb3, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_6_INT_MASK, "bas_cs_rf_6_int_mask", OAM_RX_BASE_ADDR, 0xb3, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_7_INT_MASK, "bas_cs_rf_7_int_mask", OAM_RX_BASE_ADDR, 0xb3, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_8_INT_MASK, "bas_cs_rf_8_int_mask", OAM_RX_BASE_ADDR, 0xb3, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_9_INT_MASK, "bas_cs_rf_9_int_mask", OAM_RX_BASE_ADDR, 0xb3, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_10_INT_MASK, "bas_cs_rf_10_int_mask", OAM_RX_BASE_ADDR, 0xb3, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_11_INT_MASK, "bas_cs_rf_11_int_mask", OAM_RX_BASE_ADDR, 0xb3, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_12_INT_MASK, "bas_cs_rf_12_int_mask", OAM_RX_BASE_ADDR, 0xb3, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_13_INT_MASK, "bas_cs_rf_13_int_mask", OAM_RX_BASE_ADDR, 0xb3, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_14_INT_MASK, "bas_cs_rf_14_int_mask", OAM_RX_BASE_ADDR, 0xb3, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_15_INT_MASK, "bas_cs_rf_15_int_mask", OAM_RX_BASE_ADDR, 0xb3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_16_INT, "bas_cs_rf_16_int", OAM_RX_BASE_ADDR, 0xb4, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_17_INT, "bas_cs_rf_17_int", OAM_RX_BASE_ADDR, 0xb4, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_18_INT, "bas_cs_rf_18_int", OAM_RX_BASE_ADDR, 0xb4, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_19_INT, "bas_cs_rf_19_int", OAM_RX_BASE_ADDR, 0xb4, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_20_INT, "bas_cs_rf_20_int", OAM_RX_BASE_ADDR, 0xb4, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_21_INT, "bas_cs_rf_21_int", OAM_RX_BASE_ADDR, 0xb4, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_22_INT, "bas_cs_rf_22_int", OAM_RX_BASE_ADDR, 0xb4, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_23_INT, "bas_cs_rf_23_int", OAM_RX_BASE_ADDR, 0xb4, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_24_INT, "bas_cs_rf_24_int", OAM_RX_BASE_ADDR, 0xb4, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_25_INT, "bas_cs_rf_25_int", OAM_RX_BASE_ADDR, 0xb4, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_26_INT, "bas_cs_rf_26_int", OAM_RX_BASE_ADDR, 0xb4, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_27_INT, "bas_cs_rf_27_int", OAM_RX_BASE_ADDR, 0xb4, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_28_INT, "bas_cs_rf_28_int", OAM_RX_BASE_ADDR, 0xb4, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_29_INT, "bas_cs_rf_29_int", OAM_RX_BASE_ADDR, 0xb4, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_30_INT, "bas_cs_rf_30_int", OAM_RX_BASE_ADDR, 0xb4, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_31_INT, "bas_cs_rf_31_int", OAM_RX_BASE_ADDR, 0xb4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_16_INT_MASK, "bas_cs_rf_16_int_mask", OAM_RX_BASE_ADDR, 0xb5, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_17_INT_MASK, "bas_cs_rf_17_int_mask", OAM_RX_BASE_ADDR, 0xb5, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_18_INT_MASK, "bas_cs_rf_18_int_mask", OAM_RX_BASE_ADDR, 0xb5, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_19_INT_MASK, "bas_cs_rf_19_int_mask", OAM_RX_BASE_ADDR, 0xb5, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_20_INT_MASK, "bas_cs_rf_20_int_mask", OAM_RX_BASE_ADDR, 0xb5, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_21_INT_MASK, "bas_cs_rf_21_int_mask", OAM_RX_BASE_ADDR, 0xb5, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_22_INT_MASK, "bas_cs_rf_22_int_mask", OAM_RX_BASE_ADDR, 0xb5, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_23_INT_MASK, "bas_cs_rf_23_int_mask", OAM_RX_BASE_ADDR, 0xb5, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_24_INT_MASK, "bas_cs_rf_24_int_mask", OAM_RX_BASE_ADDR, 0xb5, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_25_INT_MASK, "bas_cs_rf_25_int_mask", OAM_RX_BASE_ADDR, 0xb5, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_26_INT_MASK, "bas_cs_rf_26_int_mask", OAM_RX_BASE_ADDR, 0xb5, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_27_INT_MASK, "bas_cs_rf_27_int_mask", OAM_RX_BASE_ADDR, 0xb5, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_28_INT_MASK, "bas_cs_rf_28_int_mask", OAM_RX_BASE_ADDR, 0xb5, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_29_INT_MASK, "bas_cs_rf_29_int_mask", OAM_RX_BASE_ADDR, 0xb5, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_30_INT_MASK, "bas_cs_rf_30_int_mask", OAM_RX_BASE_ADDR, 0xb5, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_31_INT_MASK, "bas_cs_rf_31_int_mask", OAM_RX_BASE_ADDR, 0xb5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_43_INT, "bas_cs_rf_43_int", OAM_RX_BASE_ADDR, 0xb6, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_44_INT, "bas_cs_rf_44_int", OAM_RX_BASE_ADDR, 0xb6, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_45_INT, "bas_cs_rf_45_int", OAM_RX_BASE_ADDR, 0xb6, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_46_INT, "bas_cs_rf_46_int", OAM_RX_BASE_ADDR, 0xb6, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_47_INT, "bas_cs_rf_47_int", OAM_RX_BASE_ADDR, 0xb6, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_32_INT, "bas_cs_rf_32_int", OAM_RX_BASE_ADDR, 0xb6, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_33_INT, "bas_cs_rf_33_int", OAM_RX_BASE_ADDR, 0xb6, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_34_INT, "bas_cs_rf_34_int", OAM_RX_BASE_ADDR, 0xb6, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_35_INT, "bas_cs_rf_35_int", OAM_RX_BASE_ADDR, 0xb6, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_36_INT, "bas_cs_rf_36_int", OAM_RX_BASE_ADDR, 0xb6, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_37_INT, "bas_cs_rf_37_int", OAM_RX_BASE_ADDR, 0xb6, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_38_INT, "bas_cs_rf_38_int", OAM_RX_BASE_ADDR, 0xb6, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_39_INT, "bas_cs_rf_39_int", OAM_RX_BASE_ADDR, 0xb6, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_40_INT, "bas_cs_rf_40_int", OAM_RX_BASE_ADDR, 0xb6, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_41_INT, "bas_cs_rf_41_int", OAM_RX_BASE_ADDR, 0xb6, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_42_INT, "bas_cs_rf_42_int", OAM_RX_BASE_ADDR, 0xb6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_42_INT_MASK, "bas_cs_rf_42_int_mask", OAM_RX_BASE_ADDR, 0xb7, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_43_INT_MASK, "bas_cs_rf_43_int_mask", OAM_RX_BASE_ADDR, 0xb7, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_44_INT_MASK, "bas_cs_rf_44_int_mask", OAM_RX_BASE_ADDR, 0xb7, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_45_INT_MASK, "bas_cs_rf_45_int_mask", OAM_RX_BASE_ADDR, 0xb7, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_46_INT_MASK, "bas_cs_rf_46_int_mask", OAM_RX_BASE_ADDR, 0xb7, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_47_INT_MASK, "bas_cs_rf_47_int_mask", OAM_RX_BASE_ADDR, 0xb7, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_32_INT_MASK, "bas_cs_rf_32_int_mask", OAM_RX_BASE_ADDR, 0xb7, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_33_INT_MASK, "bas_cs_rf_33_int_mask", OAM_RX_BASE_ADDR, 0xb7, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_34_INT_MASK, "bas_cs_rf_34_int_mask", OAM_RX_BASE_ADDR, 0xb7, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_35_INT_MASK, "bas_cs_rf_35_int_mask", OAM_RX_BASE_ADDR, 0xb7, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_36_INT_MASK, "bas_cs_rf_36_int_mask", OAM_RX_BASE_ADDR, 0xb7, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_37_INT_MASK, "bas_cs_rf_37_int_mask", OAM_RX_BASE_ADDR, 0xb7, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_38_INT_MASK, "bas_cs_rf_38_int_mask", OAM_RX_BASE_ADDR, 0xb7, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_39_INT_MASK, "bas_cs_rf_39_int_mask", OAM_RX_BASE_ADDR, 0xb7, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_40_INT_MASK, "bas_cs_rf_40_int_mask", OAM_RX_BASE_ADDR, 0xb7, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_41_INT_MASK, "bas_cs_rf_41_int_mask", OAM_RX_BASE_ADDR, 0xb7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_48_INT, "bas_cs_rf_48_int", OAM_RX_BASE_ADDR, 0xb8, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_49_INT, "bas_cs_rf_49_int", OAM_RX_BASE_ADDR, 0xb8, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_50_INT, "bas_cs_rf_50_int", OAM_RX_BASE_ADDR, 0xb8, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_51_INT, "bas_cs_rf_51_int", OAM_RX_BASE_ADDR, 0xb8, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_52_INT, "bas_cs_rf_52_int", OAM_RX_BASE_ADDR, 0xb8, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_53_INT, "bas_cs_rf_53_int", OAM_RX_BASE_ADDR, 0xb8, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_54_INT, "bas_cs_rf_54_int", OAM_RX_BASE_ADDR, 0xb8, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_55_INT, "bas_cs_rf_55_int", OAM_RX_BASE_ADDR, 0xb8, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_56_INT, "bas_cs_rf_56_int", OAM_RX_BASE_ADDR, 0xb8, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_57_INT, "bas_cs_rf_57_int", OAM_RX_BASE_ADDR, 0xb8, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_58_INT, "bas_cs_rf_58_int", OAM_RX_BASE_ADDR, 0xb8, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_59_INT, "bas_cs_rf_59_int", OAM_RX_BASE_ADDR, 0xb8, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_60_INT, "bas_cs_rf_60_int", OAM_RX_BASE_ADDR, 0xb8, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_61_INT, "bas_cs_rf_61_int", OAM_RX_BASE_ADDR, 0xb8, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_62_INT, "bas_cs_rf_62_int", OAM_RX_BASE_ADDR, 0xb8, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_63_INT, "bas_cs_rf_63_int", OAM_RX_BASE_ADDR, 0xb8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_48_INT_MASK, "bas_cs_rf_48_int_mask", OAM_RX_BASE_ADDR, 0xb9, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_49_INT_MASK, "bas_cs_rf_49_int_mask", OAM_RX_BASE_ADDR, 0xb9, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_50_INT_MASK, "bas_cs_rf_50_int_mask", OAM_RX_BASE_ADDR, 0xb9, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_51_INT_MASK, "bas_cs_rf_51_int_mask", OAM_RX_BASE_ADDR, 0xb9, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_52_INT_MASK, "bas_cs_rf_52_int_mask", OAM_RX_BASE_ADDR, 0xb9, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_53_INT_MASK, "bas_cs_rf_53_int_mask", OAM_RX_BASE_ADDR, 0xb9, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_54_INT_MASK, "bas_cs_rf_54_int_mask", OAM_RX_BASE_ADDR, 0xb9, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_55_INT_MASK, "bas_cs_rf_55_int_mask", OAM_RX_BASE_ADDR, 0xb9, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_56_INT_MASK, "bas_cs_rf_56_int_mask", OAM_RX_BASE_ADDR, 0xb9, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_57_INT_MASK, "bas_cs_rf_57_int_mask", OAM_RX_BASE_ADDR, 0xb9, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_58_INT_MASK, "bas_cs_rf_58_int_mask", OAM_RX_BASE_ADDR, 0xb9, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_59_INT_MASK, "bas_cs_rf_59_int_mask", OAM_RX_BASE_ADDR, 0xb9, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_60_INT_MASK, "bas_cs_rf_60_int_mask", OAM_RX_BASE_ADDR, 0xb9, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_61_INT_MASK, "bas_cs_rf_61_int_mask", OAM_RX_BASE_ADDR, 0xb9, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_62_INT_MASK, "bas_cs_rf_62_int_mask", OAM_RX_BASE_ADDR, 0xb9, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_63_INT_MASK, "bas_cs_rf_63_int_mask", OAM_RX_BASE_ADDR, 0xb9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_64_INT, "bas_cs_rf_64_int", OAM_RX_BASE_ADDR, 0xba, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_65_INT, "bas_cs_rf_65_int", OAM_RX_BASE_ADDR, 0xba, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_66_INT, "bas_cs_rf_66_int", OAM_RX_BASE_ADDR, 0xba, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_67_INT, "bas_cs_rf_67_int", OAM_RX_BASE_ADDR, 0xba, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_68_INT, "bas_cs_rf_68_int", OAM_RX_BASE_ADDR, 0xba, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_69_INT, "bas_cs_rf_69_int", OAM_RX_BASE_ADDR, 0xba, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_70_INT, "bas_cs_rf_70_int", OAM_RX_BASE_ADDR, 0xba, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_71_INT, "bas_cs_rf_71_int", OAM_RX_BASE_ADDR, 0xba, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_72_INT, "bas_cs_rf_72_int", OAM_RX_BASE_ADDR, 0xba, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_73_INT, "bas_cs_rf_73_int", OAM_RX_BASE_ADDR, 0xba, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_74_INT, "bas_cs_rf_74_int", OAM_RX_BASE_ADDR, 0xba, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_75_INT, "bas_cs_rf_75_int", OAM_RX_BASE_ADDR, 0xba, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_76_INT, "bas_cs_rf_76_int", OAM_RX_BASE_ADDR, 0xba, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_77_INT, "bas_cs_rf_77_int", OAM_RX_BASE_ADDR, 0xba, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_78_INT, "bas_cs_rf_78_int", OAM_RX_BASE_ADDR, 0xba, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_79_INT, "bas_cs_rf_79_int", OAM_RX_BASE_ADDR, 0xba, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_cs_rf_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CS_RF_64_INT_MASK, "bas_cs_rf_64_int_mask", OAM_RX_BASE_ADDR, 0xbb, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_65_INT_MASK, "bas_cs_rf_65_int_mask", OAM_RX_BASE_ADDR, 0xbb, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_66_INT_MASK, "bas_cs_rf_66_int_mask", OAM_RX_BASE_ADDR, 0xbb, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_67_INT_MASK, "bas_cs_rf_67_int_mask", OAM_RX_BASE_ADDR, 0xbb, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_68_INT_MASK, "bas_cs_rf_68_int_mask", OAM_RX_BASE_ADDR, 0xbb, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_69_INT_MASK, "bas_cs_rf_69_int_mask", OAM_RX_BASE_ADDR, 0xbb, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_70_INT_MASK, "bas_cs_rf_70_int_mask", OAM_RX_BASE_ADDR, 0xbb, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_71_INT_MASK, "bas_cs_rf_71_int_mask", OAM_RX_BASE_ADDR, 0xbb, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_72_INT_MASK, "bas_cs_rf_72_int_mask", OAM_RX_BASE_ADDR, 0xbb, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_73_INT_MASK, "bas_cs_rf_73_int_mask", OAM_RX_BASE_ADDR, 0xbb, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_74_INT_MASK, "bas_cs_rf_74_int_mask", OAM_RX_BASE_ADDR, 0xbb, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_75_INT_MASK, "bas_cs_rf_75_int_mask", OAM_RX_BASE_ADDR, 0xbb, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_76_INT_MASK, "bas_cs_rf_76_int_mask", OAM_RX_BASE_ADDR, 0xbb, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_77_INT_MASK, "bas_cs_rf_77_int_mask", OAM_RX_BASE_ADDR, 0xbb, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_78_INT_MASK, "bas_cs_rf_78_int_mask", OAM_RX_BASE_ADDR, 0xbb, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CS_RF_79_INT_MASK, "bas_cs_rf_79_int_mask", OAM_RX_BASE_ADDR, 0xbb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_0_INT, "bas_crc_err_0_int", OAM_RX_BASE_ADDR, 0xbc, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_1_INT, "bas_crc_err_1_int", OAM_RX_BASE_ADDR, 0xbc, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_2_INT, "bas_crc_err_2_int", OAM_RX_BASE_ADDR, 0xbc, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_3_INT, "bas_crc_err_3_int", OAM_RX_BASE_ADDR, 0xbc, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_4_INT, "bas_crc_err_4_int", OAM_RX_BASE_ADDR, 0xbc, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_5_INT, "bas_crc_err_5_int", OAM_RX_BASE_ADDR, 0xbc, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_6_INT, "bas_crc_err_6_int", OAM_RX_BASE_ADDR, 0xbc, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_7_INT, "bas_crc_err_7_int", OAM_RX_BASE_ADDR, 0xbc, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_8_INT, "bas_crc_err_8_int", OAM_RX_BASE_ADDR, 0xbc, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_9_INT, "bas_crc_err_9_int", OAM_RX_BASE_ADDR, 0xbc, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_10_INT, "bas_crc_err_10_int", OAM_RX_BASE_ADDR, 0xbc, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_11_INT, "bas_crc_err_11_int", OAM_RX_BASE_ADDR, 0xbc, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_12_INT, "bas_crc_err_12_int", OAM_RX_BASE_ADDR, 0xbc, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_13_INT, "bas_crc_err_13_int", OAM_RX_BASE_ADDR, 0xbc, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_14_INT, "bas_crc_err_14_int", OAM_RX_BASE_ADDR, 0xbc, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_15_INT, "bas_crc_err_15_int", OAM_RX_BASE_ADDR, 0xbc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_0_INT_MASK, "bas_crc_err_0_int_mask", OAM_RX_BASE_ADDR, 0xbd, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_1_INT_MASK, "bas_crc_err_1_int_mask", OAM_RX_BASE_ADDR, 0xbd, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_2_INT_MASK, "bas_crc_err_2_int_mask", OAM_RX_BASE_ADDR, 0xbd, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_3_INT_MASK, "bas_crc_err_3_int_mask", OAM_RX_BASE_ADDR, 0xbd, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_4_INT_MASK, "bas_crc_err_4_int_mask", OAM_RX_BASE_ADDR, 0xbd, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_5_INT_MASK, "bas_crc_err_5_int_mask", OAM_RX_BASE_ADDR, 0xbd, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_6_INT_MASK, "bas_crc_err_6_int_mask", OAM_RX_BASE_ADDR, 0xbd, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_7_INT_MASK, "bas_crc_err_7_int_mask", OAM_RX_BASE_ADDR, 0xbd, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_8_INT_MASK, "bas_crc_err_8_int_mask", OAM_RX_BASE_ADDR, 0xbd, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_9_INT_MASK, "bas_crc_err_9_int_mask", OAM_RX_BASE_ADDR, 0xbd, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_10_INT_MASK, "bas_crc_err_10_int_mask", OAM_RX_BASE_ADDR, 0xbd, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_11_INT_MASK, "bas_crc_err_11_int_mask", OAM_RX_BASE_ADDR, 0xbd, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_12_INT_MASK, "bas_crc_err_12_int_mask", OAM_RX_BASE_ADDR, 0xbd, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_13_INT_MASK, "bas_crc_err_13_int_mask", OAM_RX_BASE_ADDR, 0xbd, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_14_INT_MASK, "bas_crc_err_14_int_mask", OAM_RX_BASE_ADDR, 0xbd, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_15_INT_MASK, "bas_crc_err_15_int_mask", OAM_RX_BASE_ADDR, 0xbd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_16_INT, "bas_crc_err_16_int", OAM_RX_BASE_ADDR, 0xbe, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_17_INT, "bas_crc_err_17_int", OAM_RX_BASE_ADDR, 0xbe, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_18_INT, "bas_crc_err_18_int", OAM_RX_BASE_ADDR, 0xbe, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_19_INT, "bas_crc_err_19_int", OAM_RX_BASE_ADDR, 0xbe, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_20_INT, "bas_crc_err_20_int", OAM_RX_BASE_ADDR, 0xbe, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_21_INT, "bas_crc_err_21_int", OAM_RX_BASE_ADDR, 0xbe, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_22_INT, "bas_crc_err_22_int", OAM_RX_BASE_ADDR, 0xbe, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_23_INT, "bas_crc_err_23_int", OAM_RX_BASE_ADDR, 0xbe, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_24_INT, "bas_crc_err_24_int", OAM_RX_BASE_ADDR, 0xbe, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_25_INT, "bas_crc_err_25_int", OAM_RX_BASE_ADDR, 0xbe, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_26_INT, "bas_crc_err_26_int", OAM_RX_BASE_ADDR, 0xbe, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_27_INT, "bas_crc_err_27_int", OAM_RX_BASE_ADDR, 0xbe, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_28_INT, "bas_crc_err_28_int", OAM_RX_BASE_ADDR, 0xbe, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_29_INT, "bas_crc_err_29_int", OAM_RX_BASE_ADDR, 0xbe, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_30_INT, "bas_crc_err_30_int", OAM_RX_BASE_ADDR, 0xbe, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_31_INT, "bas_crc_err_31_int", OAM_RX_BASE_ADDR, 0xbe, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_16_INT_MASK, "bas_crc_err_16_int_mask", OAM_RX_BASE_ADDR, 0xbf, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_17_INT_MASK, "bas_crc_err_17_int_mask", OAM_RX_BASE_ADDR, 0xbf, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_18_INT_MASK, "bas_crc_err_18_int_mask", OAM_RX_BASE_ADDR, 0xbf, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_19_INT_MASK, "bas_crc_err_19_int_mask", OAM_RX_BASE_ADDR, 0xbf, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_20_INT_MASK, "bas_crc_err_20_int_mask", OAM_RX_BASE_ADDR, 0xbf, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_21_INT_MASK, "bas_crc_err_21_int_mask", OAM_RX_BASE_ADDR, 0xbf, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_22_INT_MASK, "bas_crc_err_22_int_mask", OAM_RX_BASE_ADDR, 0xbf, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_23_INT_MASK, "bas_crc_err_23_int_mask", OAM_RX_BASE_ADDR, 0xbf, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_24_INT_MASK, "bas_crc_err_24_int_mask", OAM_RX_BASE_ADDR, 0xbf, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_25_INT_MASK, "bas_crc_err_25_int_mask", OAM_RX_BASE_ADDR, 0xbf, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_26_INT_MASK, "bas_crc_err_26_int_mask", OAM_RX_BASE_ADDR, 0xbf, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_27_INT_MASK, "bas_crc_err_27_int_mask", OAM_RX_BASE_ADDR, 0xbf, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_28_INT_MASK, "bas_crc_err_28_int_mask", OAM_RX_BASE_ADDR, 0xbf, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_29_INT_MASK, "bas_crc_err_29_int_mask", OAM_RX_BASE_ADDR, 0xbf, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_30_INT_MASK, "bas_crc_err_30_int_mask", OAM_RX_BASE_ADDR, 0xbf, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_31_INT_MASK, "bas_crc_err_31_int_mask", OAM_RX_BASE_ADDR, 0xbf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_32_INT, "bas_crc_err_32_int", OAM_RX_BASE_ADDR, 0xc0, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_33_INT, "bas_crc_err_33_int", OAM_RX_BASE_ADDR, 0xc0, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_34_INT, "bas_crc_err_34_int", OAM_RX_BASE_ADDR, 0xc0, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_35_INT, "bas_crc_err_35_int", OAM_RX_BASE_ADDR, 0xc0, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_36_INT, "bas_crc_err_36_int", OAM_RX_BASE_ADDR, 0xc0, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_37_INT, "bas_crc_err_37_int", OAM_RX_BASE_ADDR, 0xc0, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_38_INT, "bas_crc_err_38_int", OAM_RX_BASE_ADDR, 0xc0, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_39_INT, "bas_crc_err_39_int", OAM_RX_BASE_ADDR, 0xc0, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_40_INT, "bas_crc_err_40_int", OAM_RX_BASE_ADDR, 0xc0, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_41_INT, "bas_crc_err_41_int", OAM_RX_BASE_ADDR, 0xc0, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_42_INT, "bas_crc_err_42_int", OAM_RX_BASE_ADDR, 0xc0, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_43_INT, "bas_crc_err_43_int", OAM_RX_BASE_ADDR, 0xc0, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_44_INT, "bas_crc_err_44_int", OAM_RX_BASE_ADDR, 0xc0, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_45_INT, "bas_crc_err_45_int", OAM_RX_BASE_ADDR, 0xc0, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_46_INT, "bas_crc_err_46_int", OAM_RX_BASE_ADDR, 0xc0, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_47_INT, "bas_crc_err_47_int", OAM_RX_BASE_ADDR, 0xc0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_32_INT_MASK, "bas_crc_err_32_int_mask", OAM_RX_BASE_ADDR, 0xc1, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_33_INT_MASK, "bas_crc_err_33_int_mask", OAM_RX_BASE_ADDR, 0xc1, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_34_INT_MASK, "bas_crc_err_34_int_mask", OAM_RX_BASE_ADDR, 0xc1, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_35_INT_MASK, "bas_crc_err_35_int_mask", OAM_RX_BASE_ADDR, 0xc1, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_36_INT_MASK, "bas_crc_err_36_int_mask", OAM_RX_BASE_ADDR, 0xc1, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_37_INT_MASK, "bas_crc_err_37_int_mask", OAM_RX_BASE_ADDR, 0xc1, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_38_INT_MASK, "bas_crc_err_38_int_mask", OAM_RX_BASE_ADDR, 0xc1, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_39_INT_MASK, "bas_crc_err_39_int_mask", OAM_RX_BASE_ADDR, 0xc1, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_40_INT_MASK, "bas_crc_err_40_int_mask", OAM_RX_BASE_ADDR, 0xc1, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_41_INT_MASK, "bas_crc_err_41_int_mask", OAM_RX_BASE_ADDR, 0xc1, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_42_INT_MASK, "bas_crc_err_42_int_mask", OAM_RX_BASE_ADDR, 0xc1, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_43_INT_MASK, "bas_crc_err_43_int_mask", OAM_RX_BASE_ADDR, 0xc1, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_44_INT_MASK, "bas_crc_err_44_int_mask", OAM_RX_BASE_ADDR, 0xc1, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_45_INT_MASK, "bas_crc_err_45_int_mask", OAM_RX_BASE_ADDR, 0xc1, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_46_INT_MASK, "bas_crc_err_46_int_mask", OAM_RX_BASE_ADDR, 0xc1, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_47_INT_MASK, "bas_crc_err_47_int_mask", OAM_RX_BASE_ADDR, 0xc1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_48_INT, "bas_crc_err_48_int", OAM_RX_BASE_ADDR, 0xc2, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_49_INT, "bas_crc_err_49_int", OAM_RX_BASE_ADDR, 0xc2, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_50_INT, "bas_crc_err_50_int", OAM_RX_BASE_ADDR, 0xc2, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_51_INT, "bas_crc_err_51_int", OAM_RX_BASE_ADDR, 0xc2, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_52_INT, "bas_crc_err_52_int", OAM_RX_BASE_ADDR, 0xc2, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_53_INT, "bas_crc_err_53_int", OAM_RX_BASE_ADDR, 0xc2, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_54_INT, "bas_crc_err_54_int", OAM_RX_BASE_ADDR, 0xc2, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_55_INT, "bas_crc_err_55_int", OAM_RX_BASE_ADDR, 0xc2, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_56_INT, "bas_crc_err_56_int", OAM_RX_BASE_ADDR, 0xc2, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_57_INT, "bas_crc_err_57_int", OAM_RX_BASE_ADDR, 0xc2, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_58_INT, "bas_crc_err_58_int", OAM_RX_BASE_ADDR, 0xc2, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_59_INT, "bas_crc_err_59_int", OAM_RX_BASE_ADDR, 0xc2, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_60_INT, "bas_crc_err_60_int", OAM_RX_BASE_ADDR, 0xc2, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_61_INT, "bas_crc_err_61_int", OAM_RX_BASE_ADDR, 0xc2, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_62_INT, "bas_crc_err_62_int", OAM_RX_BASE_ADDR, 0xc2, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_63_INT, "bas_crc_err_63_int", OAM_RX_BASE_ADDR, 0xc2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_48_INT_MASK, "bas_crc_err_48_int_mask", OAM_RX_BASE_ADDR, 0xc3, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_49_INT_MASK, "bas_crc_err_49_int_mask", OAM_RX_BASE_ADDR, 0xc3, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_50_INT_MASK, "bas_crc_err_50_int_mask", OAM_RX_BASE_ADDR, 0xc3, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_51_INT_MASK, "bas_crc_err_51_int_mask", OAM_RX_BASE_ADDR, 0xc3, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_52_INT_MASK, "bas_crc_err_52_int_mask", OAM_RX_BASE_ADDR, 0xc3, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_53_INT_MASK, "bas_crc_err_53_int_mask", OAM_RX_BASE_ADDR, 0xc3, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_54_INT_MASK, "bas_crc_err_54_int_mask", OAM_RX_BASE_ADDR, 0xc3, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_55_INT_MASK, "bas_crc_err_55_int_mask", OAM_RX_BASE_ADDR, 0xc3, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_56_INT_MASK, "bas_crc_err_56_int_mask", OAM_RX_BASE_ADDR, 0xc3, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_57_INT_MASK, "bas_crc_err_57_int_mask", OAM_RX_BASE_ADDR, 0xc3, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_58_INT_MASK, "bas_crc_err_58_int_mask", OAM_RX_BASE_ADDR, 0xc3, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_59_INT_MASK, "bas_crc_err_59_int_mask", OAM_RX_BASE_ADDR, 0xc3, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_60_INT_MASK, "bas_crc_err_60_int_mask", OAM_RX_BASE_ADDR, 0xc3, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_61_INT_MASK, "bas_crc_err_61_int_mask", OAM_RX_BASE_ADDR, 0xc3, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_62_INT_MASK, "bas_crc_err_62_int_mask", OAM_RX_BASE_ADDR, 0xc3, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_63_INT_MASK, "bas_crc_err_63_int_mask", OAM_RX_BASE_ADDR, 0xc3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_64_INT, "bas_crc_err_64_int", OAM_RX_BASE_ADDR, 0xc4, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_65_INT, "bas_crc_err_65_int", OAM_RX_BASE_ADDR, 0xc4, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_66_INT, "bas_crc_err_66_int", OAM_RX_BASE_ADDR, 0xc4, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_67_INT, "bas_crc_err_67_int", OAM_RX_BASE_ADDR, 0xc4, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_68_INT, "bas_crc_err_68_int", OAM_RX_BASE_ADDR, 0xc4, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_69_INT, "bas_crc_err_69_int", OAM_RX_BASE_ADDR, 0xc4, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_70_INT, "bas_crc_err_70_int", OAM_RX_BASE_ADDR, 0xc4, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_71_INT, "bas_crc_err_71_int", OAM_RX_BASE_ADDR, 0xc4, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_72_INT, "bas_crc_err_72_int", OAM_RX_BASE_ADDR, 0xc4, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_73_INT, "bas_crc_err_73_int", OAM_RX_BASE_ADDR, 0xc4, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_74_INT, "bas_crc_err_74_int", OAM_RX_BASE_ADDR, 0xc4, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_75_INT, "bas_crc_err_75_int", OAM_RX_BASE_ADDR, 0xc4, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_76_INT, "bas_crc_err_76_int", OAM_RX_BASE_ADDR, 0xc4, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_77_INT, "bas_crc_err_77_int", OAM_RX_BASE_ADDR, 0xc4, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_78_INT, "bas_crc_err_78_int", OAM_RX_BASE_ADDR, 0xc4, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_79_INT, "bas_crc_err_79_int", OAM_RX_BASE_ADDR, 0xc4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_crc_err_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_CRC_ERR_64_INT_MASK, "bas_crc_err_64_int_mask", OAM_RX_BASE_ADDR, 0xc5, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_65_INT_MASK, "bas_crc_err_65_int_mask", OAM_RX_BASE_ADDR, 0xc5, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_66_INT_MASK, "bas_crc_err_66_int_mask", OAM_RX_BASE_ADDR, 0xc5, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_67_INT_MASK, "bas_crc_err_67_int_mask", OAM_RX_BASE_ADDR, 0xc5, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_68_INT_MASK, "bas_crc_err_68_int_mask", OAM_RX_BASE_ADDR, 0xc5, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_69_INT_MASK, "bas_crc_err_69_int_mask", OAM_RX_BASE_ADDR, 0xc5, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_70_INT_MASK, "bas_crc_err_70_int_mask", OAM_RX_BASE_ADDR, 0xc5, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_71_INT_MASK, "bas_crc_err_71_int_mask", OAM_RX_BASE_ADDR, 0xc5, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_72_INT_MASK, "bas_crc_err_72_int_mask", OAM_RX_BASE_ADDR, 0xc5, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_73_INT_MASK, "bas_crc_err_73_int_mask", OAM_RX_BASE_ADDR, 0xc5, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_74_INT_MASK, "bas_crc_err_74_int_mask", OAM_RX_BASE_ADDR, 0xc5, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_75_INT_MASK, "bas_crc_err_75_int_mask", OAM_RX_BASE_ADDR, 0xc5, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_76_INT_MASK, "bas_crc_err_76_int_mask", OAM_RX_BASE_ADDR, 0xc5, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_77_INT_MASK, "bas_crc_err_77_int_mask", OAM_RX_BASE_ADDR, 0xc5, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_78_INT_MASK, "bas_crc_err_78_int_mask", OAM_RX_BASE_ADDR, 0xc5, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_CRC_ERR_79_INT_MASK, "bas_crc_err_79_int_mask", OAM_RX_BASE_ADDR, 0xc5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_11_INT, "bas_no_receive_alm_11_int", OAM_RX_BASE_ADDR, 0xc6, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_12_INT, "bas_no_receive_alm_12_int", OAM_RX_BASE_ADDR, 0xc6, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_13_INT, "bas_no_receive_alm_13_int", OAM_RX_BASE_ADDR, 0xc6, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_14_INT, "bas_no_receive_alm_14_int", OAM_RX_BASE_ADDR, 0xc6, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_15_INT, "bas_no_receive_alm_15_int", OAM_RX_BASE_ADDR, 0xc6, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_0_INT, "bas_no_receive_alm_0_int", OAM_RX_BASE_ADDR, 0xc6, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_1_INT, "bas_no_receive_alm_1_int", OAM_RX_BASE_ADDR, 0xc6, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_2_INT, "bas_no_receive_alm_2_int", OAM_RX_BASE_ADDR, 0xc6, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_3_INT, "bas_no_receive_alm_3_int", OAM_RX_BASE_ADDR, 0xc6, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_4_INT, "bas_no_receive_alm_4_int", OAM_RX_BASE_ADDR, 0xc6, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_5_INT, "bas_no_receive_alm_5_int", OAM_RX_BASE_ADDR, 0xc6, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_6_INT, "bas_no_receive_alm_6_int", OAM_RX_BASE_ADDR, 0xc6, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_7_INT, "bas_no_receive_alm_7_int", OAM_RX_BASE_ADDR, 0xc6, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_8_INT, "bas_no_receive_alm_8_int", OAM_RX_BASE_ADDR, 0xc6, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_9_INT, "bas_no_receive_alm_9_int", OAM_RX_BASE_ADDR, 0xc6, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_10_INT, "bas_no_receive_alm_10_int", OAM_RX_BASE_ADDR, 0xc6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_10_INT_MASK, "bas_no_receive_alm_10_int_mask", OAM_RX_BASE_ADDR, 0xc7, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_11_INT_MASK, "bas_no_receive_alm_11_int_mask", OAM_RX_BASE_ADDR, 0xc7, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_12_INT_MASK, "bas_no_receive_alm_12_int_mask", OAM_RX_BASE_ADDR, 0xc7, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_13_INT_MASK, "bas_no_receive_alm_13_int_mask", OAM_RX_BASE_ADDR, 0xc7, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_14_INT_MASK, "bas_no_receive_alm_14_int_mask", OAM_RX_BASE_ADDR, 0xc7, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_15_INT_MASK, "bas_no_receive_alm_15_int_mask", OAM_RX_BASE_ADDR, 0xc7, 31, 30, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_0_INT_MASK, "bas_no_receive_alm_0_int_mask", OAM_RX_BASE_ADDR, 0xc7, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_1_INT_MASK, "bas_no_receive_alm_1_int_mask", OAM_RX_BASE_ADDR, 0xc7, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_2_INT_MASK, "bas_no_receive_alm_2_int_mask", OAM_RX_BASE_ADDR, 0xc7, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_3_INT_MASK, "bas_no_receive_alm_3_int_mask", OAM_RX_BASE_ADDR, 0xc7, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_4_INT_MASK, "bas_no_receive_alm_4_int_mask", OAM_RX_BASE_ADDR, 0xc7, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_5_INT_MASK, "bas_no_receive_alm_5_int_mask", OAM_RX_BASE_ADDR, 0xc7, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_6_INT_MASK, "bas_no_receive_alm_6_int_mask", OAM_RX_BASE_ADDR, 0xc7, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_7_INT_MASK, "bas_no_receive_alm_7_int_mask", OAM_RX_BASE_ADDR, 0xc7, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_8_INT_MASK, "bas_no_receive_alm_8_int_mask", OAM_RX_BASE_ADDR, 0xc7, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_9_INT_MASK, "bas_no_receive_alm_9_int_mask", OAM_RX_BASE_ADDR, 0xc7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_16_INT, "bas_no_receive_alm_16_int", OAM_RX_BASE_ADDR, 0xc8, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_17_INT, "bas_no_receive_alm_17_int", OAM_RX_BASE_ADDR, 0xc8, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_18_INT, "bas_no_receive_alm_18_int", OAM_RX_BASE_ADDR, 0xc8, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_19_INT, "bas_no_receive_alm_19_int", OAM_RX_BASE_ADDR, 0xc8, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_20_INT, "bas_no_receive_alm_20_int", OAM_RX_BASE_ADDR, 0xc8, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_21_INT, "bas_no_receive_alm_21_int", OAM_RX_BASE_ADDR, 0xc8, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_22_INT, "bas_no_receive_alm_22_int", OAM_RX_BASE_ADDR, 0xc8, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_23_INT, "bas_no_receive_alm_23_int", OAM_RX_BASE_ADDR, 0xc8, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_24_INT, "bas_no_receive_alm_24_int", OAM_RX_BASE_ADDR, 0xc8, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_25_INT, "bas_no_receive_alm_25_int", OAM_RX_BASE_ADDR, 0xc8, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_26_INT, "bas_no_receive_alm_26_int", OAM_RX_BASE_ADDR, 0xc8, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_27_INT, "bas_no_receive_alm_27_int", OAM_RX_BASE_ADDR, 0xc8, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_28_INT, "bas_no_receive_alm_28_int", OAM_RX_BASE_ADDR, 0xc8, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_29_INT, "bas_no_receive_alm_29_int", OAM_RX_BASE_ADDR, 0xc8, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_30_INT, "bas_no_receive_alm_30_int", OAM_RX_BASE_ADDR, 0xc8, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_31_INT, "bas_no_receive_alm_31_int", OAM_RX_BASE_ADDR, 0xc8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_16_INT_MASK, "bas_no_receive_alm_16_int_mask", OAM_RX_BASE_ADDR, 0xc9, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_17_INT_MASK, "bas_no_receive_alm_17_int_mask", OAM_RX_BASE_ADDR, 0xc9, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_18_INT_MASK, "bas_no_receive_alm_18_int_mask", OAM_RX_BASE_ADDR, 0xc9, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_19_INT_MASK, "bas_no_receive_alm_19_int_mask", OAM_RX_BASE_ADDR, 0xc9, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_20_INT_MASK, "bas_no_receive_alm_20_int_mask", OAM_RX_BASE_ADDR, 0xc9, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_21_INT_MASK, "bas_no_receive_alm_21_int_mask", OAM_RX_BASE_ADDR, 0xc9, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_22_INT_MASK, "bas_no_receive_alm_22_int_mask", OAM_RX_BASE_ADDR, 0xc9, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_23_INT_MASK, "bas_no_receive_alm_23_int_mask", OAM_RX_BASE_ADDR, 0xc9, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_24_INT_MASK, "bas_no_receive_alm_24_int_mask", OAM_RX_BASE_ADDR, 0xc9, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_25_INT_MASK, "bas_no_receive_alm_25_int_mask", OAM_RX_BASE_ADDR, 0xc9, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_26_INT_MASK, "bas_no_receive_alm_26_int_mask", OAM_RX_BASE_ADDR, 0xc9, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_27_INT_MASK, "bas_no_receive_alm_27_int_mask", OAM_RX_BASE_ADDR, 0xc9, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_28_INT_MASK, "bas_no_receive_alm_28_int_mask", OAM_RX_BASE_ADDR, 0xc9, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_29_INT_MASK, "bas_no_receive_alm_29_int_mask", OAM_RX_BASE_ADDR, 0xc9, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_30_INT_MASK, "bas_no_receive_alm_30_int_mask", OAM_RX_BASE_ADDR, 0xc9, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_31_INT_MASK, "bas_no_receive_alm_31_int_mask", OAM_RX_BASE_ADDR, 0xc9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_32_INT, "bas_no_receive_alm_32_int", OAM_RX_BASE_ADDR, 0xca, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_33_INT, "bas_no_receive_alm_33_int", OAM_RX_BASE_ADDR, 0xca, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_34_INT, "bas_no_receive_alm_34_int", OAM_RX_BASE_ADDR, 0xca, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_35_INT, "bas_no_receive_alm_35_int", OAM_RX_BASE_ADDR, 0xca, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_36_INT, "bas_no_receive_alm_36_int", OAM_RX_BASE_ADDR, 0xca, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_37_INT, "bas_no_receive_alm_37_int", OAM_RX_BASE_ADDR, 0xca, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_38_INT, "bas_no_receive_alm_38_int", OAM_RX_BASE_ADDR, 0xca, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_39_INT, "bas_no_receive_alm_39_int", OAM_RX_BASE_ADDR, 0xca, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_40_INT, "bas_no_receive_alm_40_int", OAM_RX_BASE_ADDR, 0xca, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_41_INT, "bas_no_receive_alm_41_int", OAM_RX_BASE_ADDR, 0xca, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_42_INT, "bas_no_receive_alm_42_int", OAM_RX_BASE_ADDR, 0xca, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_43_INT, "bas_no_receive_alm_43_int", OAM_RX_BASE_ADDR, 0xca, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_44_INT, "bas_no_receive_alm_44_int", OAM_RX_BASE_ADDR, 0xca, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_45_INT, "bas_no_receive_alm_45_int", OAM_RX_BASE_ADDR, 0xca, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_46_INT, "bas_no_receive_alm_46_int", OAM_RX_BASE_ADDR, 0xca, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_47_INT, "bas_no_receive_alm_47_int", OAM_RX_BASE_ADDR, 0xca, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_32_INT_MASK, "bas_no_receive_alm_32_int_mask", OAM_RX_BASE_ADDR, 0xcb, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_33_INT_MASK, "bas_no_receive_alm_33_int_mask", OAM_RX_BASE_ADDR, 0xcb, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_34_INT_MASK, "bas_no_receive_alm_34_int_mask", OAM_RX_BASE_ADDR, 0xcb, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_35_INT_MASK, "bas_no_receive_alm_35_int_mask", OAM_RX_BASE_ADDR, 0xcb, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_36_INT_MASK, "bas_no_receive_alm_36_int_mask", OAM_RX_BASE_ADDR, 0xcb, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_37_INT_MASK, "bas_no_receive_alm_37_int_mask", OAM_RX_BASE_ADDR, 0xcb, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_38_INT_MASK, "bas_no_receive_alm_38_int_mask", OAM_RX_BASE_ADDR, 0xcb, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_39_INT_MASK, "bas_no_receive_alm_39_int_mask", OAM_RX_BASE_ADDR, 0xcb, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_40_INT_MASK, "bas_no_receive_alm_40_int_mask", OAM_RX_BASE_ADDR, 0xcb, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_41_INT_MASK, "bas_no_receive_alm_41_int_mask", OAM_RX_BASE_ADDR, 0xcb, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_42_INT_MASK, "bas_no_receive_alm_42_int_mask", OAM_RX_BASE_ADDR, 0xcb, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_43_INT_MASK, "bas_no_receive_alm_43_int_mask", OAM_RX_BASE_ADDR, 0xcb, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_44_INT_MASK, "bas_no_receive_alm_44_int_mask", OAM_RX_BASE_ADDR, 0xcb, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_45_INT_MASK, "bas_no_receive_alm_45_int_mask", OAM_RX_BASE_ADDR, 0xcb, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_46_INT_MASK, "bas_no_receive_alm_46_int_mask", OAM_RX_BASE_ADDR, 0xcb, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_47_INT_MASK, "bas_no_receive_alm_47_int_mask", OAM_RX_BASE_ADDR, 0xcb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i3_int_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_48_INT, "bas_no_receive_alm_48_int", OAM_RX_BASE_ADDR, 0xcc, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_49_INT, "bas_no_receive_alm_49_int", OAM_RX_BASE_ADDR, 0xcc, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_50_INT, "bas_no_receive_alm_50_int", OAM_RX_BASE_ADDR, 0xcc, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_51_INT, "bas_no_receive_alm_51_int", OAM_RX_BASE_ADDR, 0xcc, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_52_INT, "bas_no_receive_alm_52_int", OAM_RX_BASE_ADDR, 0xcc, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_53_INT, "bas_no_receive_alm_53_int", OAM_RX_BASE_ADDR, 0xcc, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_54_INT, "bas_no_receive_alm_54_int", OAM_RX_BASE_ADDR, 0xcc, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_55_INT, "bas_no_receive_alm_55_int", OAM_RX_BASE_ADDR, 0xcc, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_56_INT, "bas_no_receive_alm_56_int", OAM_RX_BASE_ADDR, 0xcc, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_57_INT, "bas_no_receive_alm_57_int", OAM_RX_BASE_ADDR, 0xcc, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_58_INT, "bas_no_receive_alm_58_int", OAM_RX_BASE_ADDR, 0xcc, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_59_INT, "bas_no_receive_alm_59_int", OAM_RX_BASE_ADDR, 0xcc, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_60_INT, "bas_no_receive_alm_60_int", OAM_RX_BASE_ADDR, 0xcc, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_61_INT, "bas_no_receive_alm_61_int", OAM_RX_BASE_ADDR, 0xcc, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_62_INT, "bas_no_receive_alm_62_int", OAM_RX_BASE_ADDR, 0xcc, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_63_INT, "bas_no_receive_alm_63_int", OAM_RX_BASE_ADDR, 0xcc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_48_INT_MASK, "bas_no_receive_alm_48_int_mask", OAM_RX_BASE_ADDR, 0xcd, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_49_INT_MASK, "bas_no_receive_alm_49_int_mask", OAM_RX_BASE_ADDR, 0xcd, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_50_INT_MASK, "bas_no_receive_alm_50_int_mask", OAM_RX_BASE_ADDR, 0xcd, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_51_INT_MASK, "bas_no_receive_alm_51_int_mask", OAM_RX_BASE_ADDR, 0xcd, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_52_INT_MASK, "bas_no_receive_alm_52_int_mask", OAM_RX_BASE_ADDR, 0xcd, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_53_INT_MASK, "bas_no_receive_alm_53_int_mask", OAM_RX_BASE_ADDR, 0xcd, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_54_INT_MASK, "bas_no_receive_alm_54_int_mask", OAM_RX_BASE_ADDR, 0xcd, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_55_INT_MASK, "bas_no_receive_alm_55_int_mask", OAM_RX_BASE_ADDR, 0xcd, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_56_INT_MASK, "bas_no_receive_alm_56_int_mask", OAM_RX_BASE_ADDR, 0xcd, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_57_INT_MASK, "bas_no_receive_alm_57_int_mask", OAM_RX_BASE_ADDR, 0xcd, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_58_INT_MASK, "bas_no_receive_alm_58_int_mask", OAM_RX_BASE_ADDR, 0xcd, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_59_INT_MASK, "bas_no_receive_alm_59_int_mask", OAM_RX_BASE_ADDR, 0xcd, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_60_INT_MASK, "bas_no_receive_alm_60_int_mask", OAM_RX_BASE_ADDR, 0xcd, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_61_INT_MASK, "bas_no_receive_alm_61_int_mask", OAM_RX_BASE_ADDR, 0xcd, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_62_INT_MASK, "bas_no_receive_alm_62_int_mask", OAM_RX_BASE_ADDR, 0xcd, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_63_INT_MASK, "bas_no_receive_alm_63_int_mask", OAM_RX_BASE_ADDR, 0xcd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i4_int_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_64_INT, "bas_no_receive_alm_64_int", OAM_RX_BASE_ADDR, 0xce, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_65_INT, "bas_no_receive_alm_65_int", OAM_RX_BASE_ADDR, 0xce, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_66_INT, "bas_no_receive_alm_66_int", OAM_RX_BASE_ADDR, 0xce, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_67_INT, "bas_no_receive_alm_67_int", OAM_RX_BASE_ADDR, 0xce, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_68_INT, "bas_no_receive_alm_68_int", OAM_RX_BASE_ADDR, 0xce, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_69_INT, "bas_no_receive_alm_69_int", OAM_RX_BASE_ADDR, 0xce, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_70_INT, "bas_no_receive_alm_70_int", OAM_RX_BASE_ADDR, 0xce, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_71_INT, "bas_no_receive_alm_71_int", OAM_RX_BASE_ADDR, 0xce, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_72_INT, "bas_no_receive_alm_72_int", OAM_RX_BASE_ADDR, 0xce, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_73_INT, "bas_no_receive_alm_73_int", OAM_RX_BASE_ADDR, 0xce, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_74_INT, "bas_no_receive_alm_74_int", OAM_RX_BASE_ADDR, 0xce, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_75_INT, "bas_no_receive_alm_75_int", OAM_RX_BASE_ADDR, 0xce, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_76_INT, "bas_no_receive_alm_76_int", OAM_RX_BASE_ADDR, 0xce, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_77_INT, "bas_no_receive_alm_77_int", OAM_RX_BASE_ADDR, 0xce, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_78_INT, "bas_no_receive_alm_78_int", OAM_RX_BASE_ADDR, 0xce, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_79_INT, "bas_no_receive_alm_79_int", OAM_RX_BASE_ADDR, 0xce, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_no_receive_alm_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_64_INT_MASK, "bas_no_receive_alm_64_int_mask", OAM_RX_BASE_ADDR, 0xcf, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_65_INT_MASK, "bas_no_receive_alm_65_int_mask", OAM_RX_BASE_ADDR, 0xcf, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_66_INT_MASK, "bas_no_receive_alm_66_int_mask", OAM_RX_BASE_ADDR, 0xcf, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_67_INT_MASK, "bas_no_receive_alm_67_int_mask", OAM_RX_BASE_ADDR, 0xcf, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_68_INT_MASK, "bas_no_receive_alm_68_int_mask", OAM_RX_BASE_ADDR, 0xcf, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_69_INT_MASK, "bas_no_receive_alm_69_int_mask", OAM_RX_BASE_ADDR, 0xcf, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_70_INT_MASK, "bas_no_receive_alm_70_int_mask", OAM_RX_BASE_ADDR, 0xcf, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_71_INT_MASK, "bas_no_receive_alm_71_int_mask", OAM_RX_BASE_ADDR, 0xcf, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_72_INT_MASK, "bas_no_receive_alm_72_int_mask", OAM_RX_BASE_ADDR, 0xcf, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_73_INT_MASK, "bas_no_receive_alm_73_int_mask", OAM_RX_BASE_ADDR, 0xcf, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_74_INT_MASK, "bas_no_receive_alm_74_int_mask", OAM_RX_BASE_ADDR, 0xcf, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_75_INT_MASK, "bas_no_receive_alm_75_int_mask", OAM_RX_BASE_ADDR, 0xcf, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_76_INT_MASK, "bas_no_receive_alm_76_int_mask", OAM_RX_BASE_ADDR, 0xcf, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_77_INT_MASK, "bas_no_receive_alm_77_int_mask", OAM_RX_BASE_ADDR, 0xcf, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_78_INT_MASK, "bas_no_receive_alm_78_int_mask", OAM_RX_BASE_ADDR, 0xcf, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_NO_RECEIVE_ALM_79_INT_MASK, "bas_no_receive_alm_79_int_mask", OAM_RX_BASE_ADDR, 0xcf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i0_int_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_0_INT, "rdi_lf_0_int", OAM_RX_BASE_ADDR, 0xd0, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_1_INT, "rdi_lf_1_int", OAM_RX_BASE_ADDR, 0xd0, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_2_INT, "rdi_lf_2_int", OAM_RX_BASE_ADDR, 0xd0, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_3_INT, "rdi_lf_3_int", OAM_RX_BASE_ADDR, 0xd0, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_4_INT, "rdi_lf_4_int", OAM_RX_BASE_ADDR, 0xd0, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_5_INT, "rdi_lf_5_int", OAM_RX_BASE_ADDR, 0xd0, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_6_INT, "rdi_lf_6_int", OAM_RX_BASE_ADDR, 0xd0, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_7_INT, "rdi_lf_7_int", OAM_RX_BASE_ADDR, 0xd0, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_8_INT, "rdi_lf_8_int", OAM_RX_BASE_ADDR, 0xd0, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_9_INT, "rdi_lf_9_int", OAM_RX_BASE_ADDR, 0xd0, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_10_INT, "rdi_lf_10_int", OAM_RX_BASE_ADDR, 0xd0, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_11_INT, "rdi_lf_11_int", OAM_RX_BASE_ADDR, 0xd0, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_12_INT, "rdi_lf_12_int", OAM_RX_BASE_ADDR, 0xd0, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_13_INT, "rdi_lf_13_int", OAM_RX_BASE_ADDR, 0xd0, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_14_INT, "rdi_lf_14_int", OAM_RX_BASE_ADDR, 0xd0, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_15_INT, "rdi_lf_15_int", OAM_RX_BASE_ADDR, 0xd0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_0_INT_MASK, "rdi_lf_0_int_mask", OAM_RX_BASE_ADDR, 0xd1, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_1_INT_MASK, "rdi_lf_1_int_mask", OAM_RX_BASE_ADDR, 0xd1, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_2_INT_MASK, "rdi_lf_2_int_mask", OAM_RX_BASE_ADDR, 0xd1, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_3_INT_MASK, "rdi_lf_3_int_mask", OAM_RX_BASE_ADDR, 0xd1, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_4_INT_MASK, "rdi_lf_4_int_mask", OAM_RX_BASE_ADDR, 0xd1, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_5_INT_MASK, "rdi_lf_5_int_mask", OAM_RX_BASE_ADDR, 0xd1, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_6_INT_MASK, "rdi_lf_6_int_mask", OAM_RX_BASE_ADDR, 0xd1, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_7_INT_MASK, "rdi_lf_7_int_mask", OAM_RX_BASE_ADDR, 0xd1, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_8_INT_MASK, "rdi_lf_8_int_mask", OAM_RX_BASE_ADDR, 0xd1, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_9_INT_MASK, "rdi_lf_9_int_mask", OAM_RX_BASE_ADDR, 0xd1, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_10_INT_MASK, "rdi_lf_10_int_mask", OAM_RX_BASE_ADDR, 0xd1, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_11_INT_MASK, "rdi_lf_11_int_mask", OAM_RX_BASE_ADDR, 0xd1, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_12_INT_MASK, "rdi_lf_12_int_mask", OAM_RX_BASE_ADDR, 0xd1, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_13_INT_MASK, "rdi_lf_13_int_mask", OAM_RX_BASE_ADDR, 0xd1, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_14_INT_MASK, "rdi_lf_14_int_mask", OAM_RX_BASE_ADDR, 0xd1, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_15_INT_MASK, "rdi_lf_15_int_mask", OAM_RX_BASE_ADDR, 0xd1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i1_int_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_16_INT, "rdi_lf_16_int", OAM_RX_BASE_ADDR, 0xd2, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_17_INT, "rdi_lf_17_int", OAM_RX_BASE_ADDR, 0xd2, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_18_INT, "rdi_lf_18_int", OAM_RX_BASE_ADDR, 0xd2, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_19_INT, "rdi_lf_19_int", OAM_RX_BASE_ADDR, 0xd2, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_20_INT, "rdi_lf_20_int", OAM_RX_BASE_ADDR, 0xd2, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_21_INT, "rdi_lf_21_int", OAM_RX_BASE_ADDR, 0xd2, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_22_INT, "rdi_lf_22_int", OAM_RX_BASE_ADDR, 0xd2, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_23_INT, "rdi_lf_23_int", OAM_RX_BASE_ADDR, 0xd2, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_24_INT, "rdi_lf_24_int", OAM_RX_BASE_ADDR, 0xd2, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_25_INT, "rdi_lf_25_int", OAM_RX_BASE_ADDR, 0xd2, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_26_INT, "rdi_lf_26_int", OAM_RX_BASE_ADDR, 0xd2, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_27_INT, "rdi_lf_27_int", OAM_RX_BASE_ADDR, 0xd2, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_28_INT, "rdi_lf_28_int", OAM_RX_BASE_ADDR, 0xd2, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_29_INT, "rdi_lf_29_int", OAM_RX_BASE_ADDR, 0xd2, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_30_INT, "rdi_lf_30_int", OAM_RX_BASE_ADDR, 0xd2, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_31_INT, "rdi_lf_31_int", OAM_RX_BASE_ADDR, 0xd2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_16_INT_MASK, "rdi_lf_16_int_mask", OAM_RX_BASE_ADDR, 0xd3, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_17_INT_MASK, "rdi_lf_17_int_mask", OAM_RX_BASE_ADDR, 0xd3, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_18_INT_MASK, "rdi_lf_18_int_mask", OAM_RX_BASE_ADDR, 0xd3, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_19_INT_MASK, "rdi_lf_19_int_mask", OAM_RX_BASE_ADDR, 0xd3, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_20_INT_MASK, "rdi_lf_20_int_mask", OAM_RX_BASE_ADDR, 0xd3, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_21_INT_MASK, "rdi_lf_21_int_mask", OAM_RX_BASE_ADDR, 0xd3, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_22_INT_MASK, "rdi_lf_22_int_mask", OAM_RX_BASE_ADDR, 0xd3, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_23_INT_MASK, "rdi_lf_23_int_mask", OAM_RX_BASE_ADDR, 0xd3, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_24_INT_MASK, "rdi_lf_24_int_mask", OAM_RX_BASE_ADDR, 0xd3, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_25_INT_MASK, "rdi_lf_25_int_mask", OAM_RX_BASE_ADDR, 0xd3, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_26_INT_MASK, "rdi_lf_26_int_mask", OAM_RX_BASE_ADDR, 0xd3, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_27_INT_MASK, "rdi_lf_27_int_mask", OAM_RX_BASE_ADDR, 0xd3, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_28_INT_MASK, "rdi_lf_28_int_mask", OAM_RX_BASE_ADDR, 0xd3, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_29_INT_MASK, "rdi_lf_29_int_mask", OAM_RX_BASE_ADDR, 0xd3, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_30_INT_MASK, "rdi_lf_30_int_mask", OAM_RX_BASE_ADDR, 0xd3, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_31_INT_MASK, "rdi_lf_31_int_mask", OAM_RX_BASE_ADDR, 0xd3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i2_int_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_32_INT, "rdi_lf_32_int", OAM_RX_BASE_ADDR, 0xd4, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_33_INT, "rdi_lf_33_int", OAM_RX_BASE_ADDR, 0xd4, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_34_INT, "rdi_lf_34_int", OAM_RX_BASE_ADDR, 0xd4, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_35_INT, "rdi_lf_35_int", OAM_RX_BASE_ADDR, 0xd4, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_36_INT, "rdi_lf_36_int", OAM_RX_BASE_ADDR, 0xd4, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_37_INT, "rdi_lf_37_int", OAM_RX_BASE_ADDR, 0xd4, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_38_INT, "rdi_lf_38_int", OAM_RX_BASE_ADDR, 0xd4, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_39_INT, "rdi_lf_39_int", OAM_RX_BASE_ADDR, 0xd4, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_40_INT, "rdi_lf_40_int", OAM_RX_BASE_ADDR, 0xd4, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_41_INT, "rdi_lf_41_int", OAM_RX_BASE_ADDR, 0xd4, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_42_INT, "rdi_lf_42_int", OAM_RX_BASE_ADDR, 0xd4, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_43_INT, "rdi_lf_43_int", OAM_RX_BASE_ADDR, 0xd4, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_44_INT, "rdi_lf_44_int", OAM_RX_BASE_ADDR, 0xd4, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_45_INT, "rdi_lf_45_int", OAM_RX_BASE_ADDR, 0xd4, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_46_INT, "rdi_lf_46_int", OAM_RX_BASE_ADDR, 0xd4, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_47_INT, "rdi_lf_47_int", OAM_RX_BASE_ADDR, 0xd4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_32_INT_MASK, "rdi_lf_32_int_mask", OAM_RX_BASE_ADDR, 0xd5, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_33_INT_MASK, "rdi_lf_33_int_mask", OAM_RX_BASE_ADDR, 0xd5, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_34_INT_MASK, "rdi_lf_34_int_mask", OAM_RX_BASE_ADDR, 0xd5, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_35_INT_MASK, "rdi_lf_35_int_mask", OAM_RX_BASE_ADDR, 0xd5, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_36_INT_MASK, "rdi_lf_36_int_mask", OAM_RX_BASE_ADDR, 0xd5, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_37_INT_MASK, "rdi_lf_37_int_mask", OAM_RX_BASE_ADDR, 0xd5, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_38_INT_MASK, "rdi_lf_38_int_mask", OAM_RX_BASE_ADDR, 0xd5, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_39_INT_MASK, "rdi_lf_39_int_mask", OAM_RX_BASE_ADDR, 0xd5, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_40_INT_MASK, "rdi_lf_40_int_mask", OAM_RX_BASE_ADDR, 0xd5, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_41_INT_MASK, "rdi_lf_41_int_mask", OAM_RX_BASE_ADDR, 0xd5, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_42_INT_MASK, "rdi_lf_42_int_mask", OAM_RX_BASE_ADDR, 0xd5, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_43_INT_MASK, "rdi_lf_43_int_mask", OAM_RX_BASE_ADDR, 0xd5, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_44_INT_MASK, "rdi_lf_44_int_mask", OAM_RX_BASE_ADDR, 0xd5, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_45_INT_MASK, "rdi_lf_45_int_mask", OAM_RX_BASE_ADDR, 0xd5, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_46_INT_MASK, "rdi_lf_46_int_mask", OAM_RX_BASE_ADDR, 0xd5, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_47_INT_MASK, "rdi_lf_47_int_mask", OAM_RX_BASE_ADDR, 0xd5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i3_int_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_59_INT, "rdi_lf_59_int", OAM_RX_BASE_ADDR, 0xd6, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_60_INT, "rdi_lf_60_int", OAM_RX_BASE_ADDR, 0xd6, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_61_INT, "rdi_lf_61_int", OAM_RX_BASE_ADDR, 0xd6, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_62_INT, "rdi_lf_62_int", OAM_RX_BASE_ADDR, 0xd6, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_63_INT, "rdi_lf_63_int", OAM_RX_BASE_ADDR, 0xd6, 31, 30, 0x0 },
	{ TEST_OAM_RX_RDI_LF_48_INT, "rdi_lf_48_int", OAM_RX_BASE_ADDR, 0xd6, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_49_INT, "rdi_lf_49_int", OAM_RX_BASE_ADDR, 0xd6, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_50_INT, "rdi_lf_50_int", OAM_RX_BASE_ADDR, 0xd6, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_51_INT, "rdi_lf_51_int", OAM_RX_BASE_ADDR, 0xd6, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_52_INT, "rdi_lf_52_int", OAM_RX_BASE_ADDR, 0xd6, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_53_INT, "rdi_lf_53_int", OAM_RX_BASE_ADDR, 0xd6, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_54_INT, "rdi_lf_54_int", OAM_RX_BASE_ADDR, 0xd6, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_55_INT, "rdi_lf_55_int", OAM_RX_BASE_ADDR, 0xd6, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_56_INT, "rdi_lf_56_int", OAM_RX_BASE_ADDR, 0xd6, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_57_INT, "rdi_lf_57_int", OAM_RX_BASE_ADDR, 0xd6, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_58_INT, "rdi_lf_58_int", OAM_RX_BASE_ADDR, 0xd6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_58_INT_MASK, "rdi_lf_58_int_mask", OAM_RX_BASE_ADDR, 0xd7, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_59_INT_MASK, "rdi_lf_59_int_mask", OAM_RX_BASE_ADDR, 0xd7, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_60_INT_MASK, "rdi_lf_60_int_mask", OAM_RX_BASE_ADDR, 0xd7, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_61_INT_MASK, "rdi_lf_61_int_mask", OAM_RX_BASE_ADDR, 0xd7, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_62_INT_MASK, "rdi_lf_62_int_mask", OAM_RX_BASE_ADDR, 0xd7, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_63_INT_MASK, "rdi_lf_63_int_mask", OAM_RX_BASE_ADDR, 0xd7, 31, 30, 0x0 },
	{ TEST_OAM_RX_RDI_LF_48_INT_MASK, "rdi_lf_48_int_mask", OAM_RX_BASE_ADDR, 0xd7, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_49_INT_MASK, "rdi_lf_49_int_mask", OAM_RX_BASE_ADDR, 0xd7, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_50_INT_MASK, "rdi_lf_50_int_mask", OAM_RX_BASE_ADDR, 0xd7, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_51_INT_MASK, "rdi_lf_51_int_mask", OAM_RX_BASE_ADDR, 0xd7, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_52_INT_MASK, "rdi_lf_52_int_mask", OAM_RX_BASE_ADDR, 0xd7, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_53_INT_MASK, "rdi_lf_53_int_mask", OAM_RX_BASE_ADDR, 0xd7, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_54_INT_MASK, "rdi_lf_54_int_mask", OAM_RX_BASE_ADDR, 0xd7, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_55_INT_MASK, "rdi_lf_55_int_mask", OAM_RX_BASE_ADDR, 0xd7, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_56_INT_MASK, "rdi_lf_56_int_mask", OAM_RX_BASE_ADDR, 0xd7, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_57_INT_MASK, "rdi_lf_57_int_mask", OAM_RX_BASE_ADDR, 0xd7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i4_int_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_64_INT, "rdi_lf_64_int", OAM_RX_BASE_ADDR, 0xd8, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_65_INT, "rdi_lf_65_int", OAM_RX_BASE_ADDR, 0xd8, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_66_INT, "rdi_lf_66_int", OAM_RX_BASE_ADDR, 0xd8, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_67_INT, "rdi_lf_67_int", OAM_RX_BASE_ADDR, 0xd8, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_68_INT, "rdi_lf_68_int", OAM_RX_BASE_ADDR, 0xd8, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_69_INT, "rdi_lf_69_int", OAM_RX_BASE_ADDR, 0xd8, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_70_INT, "rdi_lf_70_int", OAM_RX_BASE_ADDR, 0xd8, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_71_INT, "rdi_lf_71_int", OAM_RX_BASE_ADDR, 0xd8, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_72_INT, "rdi_lf_72_int", OAM_RX_BASE_ADDR, 0xd8, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_73_INT, "rdi_lf_73_int", OAM_RX_BASE_ADDR, 0xd8, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_74_INT, "rdi_lf_74_int", OAM_RX_BASE_ADDR, 0xd8, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_75_INT, "rdi_lf_75_int", OAM_RX_BASE_ADDR, 0xd8, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_76_INT, "rdi_lf_76_int", OAM_RX_BASE_ADDR, 0xd8, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_77_INT, "rdi_lf_77_int", OAM_RX_BASE_ADDR, 0xd8, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_78_INT, "rdi_lf_78_int", OAM_RX_BASE_ADDR, 0xd8, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_79_INT, "rdi_lf_79_int", OAM_RX_BASE_ADDR, 0xd8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rdi_lf_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_RDI_LF_64_INT_MASK, "rdi_lf_64_int_mask", OAM_RX_BASE_ADDR, 0xd9, 1, 0, 0x0 },
	{ TEST_OAM_RX_RDI_LF_65_INT_MASK, "rdi_lf_65_int_mask", OAM_RX_BASE_ADDR, 0xd9, 3, 2, 0x0 },
	{ TEST_OAM_RX_RDI_LF_66_INT_MASK, "rdi_lf_66_int_mask", OAM_RX_BASE_ADDR, 0xd9, 5, 4, 0x0 },
	{ TEST_OAM_RX_RDI_LF_67_INT_MASK, "rdi_lf_67_int_mask", OAM_RX_BASE_ADDR, 0xd9, 7, 6, 0x0 },
	{ TEST_OAM_RX_RDI_LF_68_INT_MASK, "rdi_lf_68_int_mask", OAM_RX_BASE_ADDR, 0xd9, 9, 8, 0x0 },
	{ TEST_OAM_RX_RDI_LF_69_INT_MASK, "rdi_lf_69_int_mask", OAM_RX_BASE_ADDR, 0xd9, 11, 10, 0x0 },
	{ TEST_OAM_RX_RDI_LF_70_INT_MASK, "rdi_lf_70_int_mask", OAM_RX_BASE_ADDR, 0xd9, 13, 12, 0x0 },
	{ TEST_OAM_RX_RDI_LF_71_INT_MASK, "rdi_lf_71_int_mask", OAM_RX_BASE_ADDR, 0xd9, 15, 14, 0x0 },
	{ TEST_OAM_RX_RDI_LF_72_INT_MASK, "rdi_lf_72_int_mask", OAM_RX_BASE_ADDR, 0xd9, 17, 16, 0x0 },
	{ TEST_OAM_RX_RDI_LF_73_INT_MASK, "rdi_lf_73_int_mask", OAM_RX_BASE_ADDR, 0xd9, 19, 18, 0x0 },
	{ TEST_OAM_RX_RDI_LF_74_INT_MASK, "rdi_lf_74_int_mask", OAM_RX_BASE_ADDR, 0xd9, 21, 20, 0x0 },
	{ TEST_OAM_RX_RDI_LF_75_INT_MASK, "rdi_lf_75_int_mask", OAM_RX_BASE_ADDR, 0xd9, 23, 22, 0x0 },
	{ TEST_OAM_RX_RDI_LF_76_INT_MASK, "rdi_lf_76_int_mask", OAM_RX_BASE_ADDR, 0xd9, 25, 24, 0x0 },
	{ TEST_OAM_RX_RDI_LF_77_INT_MASK, "rdi_lf_77_int_mask", OAM_RX_BASE_ADDR, 0xd9, 27, 26, 0x0 },
	{ TEST_OAM_RX_RDI_LF_78_INT_MASK, "rdi_lf_78_int_mask", OAM_RX_BASE_ADDR, 0xd9, 29, 28, 0x0 },
	{ TEST_OAM_RX_RDI_LF_79_INT_MASK, "rdi_lf_79_int_mask", OAM_RX_BASE_ADDR, 0xd9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i0_int_reg[] =
{
	{ TEST_OAM_RX_SDBEI_0_INT, "rx_sdbei_0_int", OAM_RX_BASE_ADDR, 0xda, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_1_INT, "rx_sdbei_1_int", OAM_RX_BASE_ADDR, 0xda, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_2_INT, "rx_sdbei_2_int", OAM_RX_BASE_ADDR, 0xda, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_3_INT, "rx_sdbei_3_int", OAM_RX_BASE_ADDR, 0xda, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_4_INT, "rx_sdbei_4_int", OAM_RX_BASE_ADDR, 0xda, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_5_INT, "rx_sdbei_5_int", OAM_RX_BASE_ADDR, 0xda, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_6_INT, "rx_sdbei_6_int", OAM_RX_BASE_ADDR, 0xda, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_7_INT, "rx_sdbei_7_int", OAM_RX_BASE_ADDR, 0xda, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_8_INT, "rx_sdbei_8_int", OAM_RX_BASE_ADDR, 0xda, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_9_INT, "rx_sdbei_9_int", OAM_RX_BASE_ADDR, 0xda, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_10_INT, "rx_sdbei_10_int", OAM_RX_BASE_ADDR, 0xda, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_11_INT, "rx_sdbei_11_int", OAM_RX_BASE_ADDR, 0xda, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_12_INT, "rx_sdbei_12_int", OAM_RX_BASE_ADDR, 0xda, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_13_INT, "rx_sdbei_13_int", OAM_RX_BASE_ADDR, 0xda, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_14_INT, "rx_sdbei_14_int", OAM_RX_BASE_ADDR, 0xda, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_15_INT, "rx_sdbei_15_int", OAM_RX_BASE_ADDR, 0xda, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBEI_0_INT_MASK, "rx_sdbei_0_int_mask", OAM_RX_BASE_ADDR, 0xdb, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_1_INT_MASK, "rx_sdbei_1_int_mask", OAM_RX_BASE_ADDR, 0xdb, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_2_INT_MASK, "rx_sdbei_2_int_mask", OAM_RX_BASE_ADDR, 0xdb, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_3_INT_MASK, "rx_sdbei_3_int_mask", OAM_RX_BASE_ADDR, 0xdb, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_4_INT_MASK, "rx_sdbei_4_int_mask", OAM_RX_BASE_ADDR, 0xdb, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_5_INT_MASK, "rx_sdbei_5_int_mask", OAM_RX_BASE_ADDR, 0xdb, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_6_INT_MASK, "rx_sdbei_6_int_mask", OAM_RX_BASE_ADDR, 0xdb, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_7_INT_MASK, "rx_sdbei_7_int_mask", OAM_RX_BASE_ADDR, 0xdb, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_8_INT_MASK, "rx_sdbei_8_int_mask", OAM_RX_BASE_ADDR, 0xdb, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_9_INT_MASK, "rx_sdbei_9_int_mask", OAM_RX_BASE_ADDR, 0xdb, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_10_INT_MASK, "rx_sdbei_10_int_mask", OAM_RX_BASE_ADDR, 0xdb, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_11_INT_MASK, "rx_sdbei_11_int_mask", OAM_RX_BASE_ADDR, 0xdb, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_12_INT_MASK, "rx_sdbei_12_int_mask", OAM_RX_BASE_ADDR, 0xdb, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_13_INT_MASK, "rx_sdbei_13_int_mask", OAM_RX_BASE_ADDR, 0xdb, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_14_INT_MASK, "rx_sdbei_14_int_mask", OAM_RX_BASE_ADDR, 0xdb, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_15_INT_MASK, "rx_sdbei_15_int_mask", OAM_RX_BASE_ADDR, 0xdb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i1_int_reg[] =
{
	{ TEST_OAM_RX_SDBEI_16_INT, "rx_sdbei_16_int", OAM_RX_BASE_ADDR, 0xdc, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_17_INT, "rx_sdbei_17_int", OAM_RX_BASE_ADDR, 0xdc, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_18_INT, "rx_sdbei_18_int", OAM_RX_BASE_ADDR, 0xdc, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_19_INT, "rx_sdbei_19_int", OAM_RX_BASE_ADDR, 0xdc, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_20_INT, "rx_sdbei_20_int", OAM_RX_BASE_ADDR, 0xdc, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_21_INT, "rx_sdbei_21_int", OAM_RX_BASE_ADDR, 0xdc, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_22_INT, "rx_sdbei_22_int", OAM_RX_BASE_ADDR, 0xdc, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_23_INT, "rx_sdbei_23_int", OAM_RX_BASE_ADDR, 0xdc, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_24_INT, "rx_sdbei_24_int", OAM_RX_BASE_ADDR, 0xdc, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_25_INT, "rx_sdbei_25_int", OAM_RX_BASE_ADDR, 0xdc, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_26_INT, "rx_sdbei_26_int", OAM_RX_BASE_ADDR, 0xdc, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_27_INT, "rx_sdbei_27_int", OAM_RX_BASE_ADDR, 0xdc, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_28_INT, "rx_sdbei_28_int", OAM_RX_BASE_ADDR, 0xdc, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_29_INT, "rx_sdbei_29_int", OAM_RX_BASE_ADDR, 0xdc, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_30_INT, "rx_sdbei_30_int", OAM_RX_BASE_ADDR, 0xdc, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_31_INT, "rx_sdbei_31_int", OAM_RX_BASE_ADDR, 0xdc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBEI_16_INT_MASK, "rx_sdbei_16_int_mask", OAM_RX_BASE_ADDR, 0xdd, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_17_INT_MASK, "rx_sdbei_17_int_mask", OAM_RX_BASE_ADDR, 0xdd, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_18_INT_MASK, "rx_sdbei_18_int_mask", OAM_RX_BASE_ADDR, 0xdd, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_19_INT_MASK, "rx_sdbei_19_int_mask", OAM_RX_BASE_ADDR, 0xdd, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_20_INT_MASK, "rx_sdbei_20_int_mask", OAM_RX_BASE_ADDR, 0xdd, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_21_INT_MASK, "rx_sdbei_21_int_mask", OAM_RX_BASE_ADDR, 0xdd, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_22_INT_MASK, "rx_sdbei_22_int_mask", OAM_RX_BASE_ADDR, 0xdd, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_23_INT_MASK, "rx_sdbei_23_int_mask", OAM_RX_BASE_ADDR, 0xdd, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_24_INT_MASK, "rx_sdbei_24_int_mask", OAM_RX_BASE_ADDR, 0xdd, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_25_INT_MASK, "rx_sdbei_25_int_mask", OAM_RX_BASE_ADDR, 0xdd, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_26_INT_MASK, "rx_sdbei_26_int_mask", OAM_RX_BASE_ADDR, 0xdd, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_27_INT_MASK, "rx_sdbei_27_int_mask", OAM_RX_BASE_ADDR, 0xdd, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_28_INT_MASK, "rx_sdbei_28_int_mask", OAM_RX_BASE_ADDR, 0xdd, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_29_INT_MASK, "rx_sdbei_29_int_mask", OAM_RX_BASE_ADDR, 0xdd, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_30_INT_MASK, "rx_sdbei_30_int_mask", OAM_RX_BASE_ADDR, 0xdd, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_31_INT_MASK, "rx_sdbei_31_int_mask", OAM_RX_BASE_ADDR, 0xdd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i2_int_reg[] =
{
	{ TEST_OAM_RX_SDBEI_32_INT, "rx_sdbei_32_int", OAM_RX_BASE_ADDR, 0xde, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_33_INT, "rx_sdbei_33_int", OAM_RX_BASE_ADDR, 0xde, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_34_INT, "rx_sdbei_34_int", OAM_RX_BASE_ADDR, 0xde, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_35_INT, "rx_sdbei_35_int", OAM_RX_BASE_ADDR, 0xde, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_36_INT, "rx_sdbei_36_int", OAM_RX_BASE_ADDR, 0xde, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_37_INT, "rx_sdbei_37_int", OAM_RX_BASE_ADDR, 0xde, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_38_INT, "rx_sdbei_38_int", OAM_RX_BASE_ADDR, 0xde, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_39_INT, "rx_sdbei_39_int", OAM_RX_BASE_ADDR, 0xde, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_40_INT, "rx_sdbei_40_int", OAM_RX_BASE_ADDR, 0xde, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_41_INT, "rx_sdbei_41_int", OAM_RX_BASE_ADDR, 0xde, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_42_INT, "rx_sdbei_42_int", OAM_RX_BASE_ADDR, 0xde, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_43_INT, "rx_sdbei_43_int", OAM_RX_BASE_ADDR, 0xde, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_44_INT, "rx_sdbei_44_int", OAM_RX_BASE_ADDR, 0xde, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_45_INT, "rx_sdbei_45_int", OAM_RX_BASE_ADDR, 0xde, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_46_INT, "rx_sdbei_46_int", OAM_RX_BASE_ADDR, 0xde, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_47_INT, "rx_sdbei_47_int", OAM_RX_BASE_ADDR, 0xde, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBEI_32_INT_MASK, "rx_sdbei_32_int_mask", OAM_RX_BASE_ADDR, 0xdf, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_33_INT_MASK, "rx_sdbei_33_int_mask", OAM_RX_BASE_ADDR, 0xdf, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_34_INT_MASK, "rx_sdbei_34_int_mask", OAM_RX_BASE_ADDR, 0xdf, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_35_INT_MASK, "rx_sdbei_35_int_mask", OAM_RX_BASE_ADDR, 0xdf, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_36_INT_MASK, "rx_sdbei_36_int_mask", OAM_RX_BASE_ADDR, 0xdf, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_37_INT_MASK, "rx_sdbei_37_int_mask", OAM_RX_BASE_ADDR, 0xdf, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_38_INT_MASK, "rx_sdbei_38_int_mask", OAM_RX_BASE_ADDR, 0xdf, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_39_INT_MASK, "rx_sdbei_39_int_mask", OAM_RX_BASE_ADDR, 0xdf, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_40_INT_MASK, "rx_sdbei_40_int_mask", OAM_RX_BASE_ADDR, 0xdf, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_41_INT_MASK, "rx_sdbei_41_int_mask", OAM_RX_BASE_ADDR, 0xdf, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_42_INT_MASK, "rx_sdbei_42_int_mask", OAM_RX_BASE_ADDR, 0xdf, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_43_INT_MASK, "rx_sdbei_43_int_mask", OAM_RX_BASE_ADDR, 0xdf, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_44_INT_MASK, "rx_sdbei_44_int_mask", OAM_RX_BASE_ADDR, 0xdf, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_45_INT_MASK, "rx_sdbei_45_int_mask", OAM_RX_BASE_ADDR, 0xdf, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_46_INT_MASK, "rx_sdbei_46_int_mask", OAM_RX_BASE_ADDR, 0xdf, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_47_INT_MASK, "rx_sdbei_47_int_mask", OAM_RX_BASE_ADDR, 0xdf, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i3_int_reg[] =
{
	{ TEST_OAM_RX_SDBEI_48_INT, "rx_sdbei_48_int", OAM_RX_BASE_ADDR, 0xe0, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_49_INT, "rx_sdbei_49_int", OAM_RX_BASE_ADDR, 0xe0, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_50_INT, "rx_sdbei_50_int", OAM_RX_BASE_ADDR, 0xe0, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_51_INT, "rx_sdbei_51_int", OAM_RX_BASE_ADDR, 0xe0, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_52_INT, "rx_sdbei_52_int", OAM_RX_BASE_ADDR, 0xe0, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_53_INT, "rx_sdbei_53_int", OAM_RX_BASE_ADDR, 0xe0, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_54_INT, "rx_sdbei_54_int", OAM_RX_BASE_ADDR, 0xe0, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_55_INT, "rx_sdbei_55_int", OAM_RX_BASE_ADDR, 0xe0, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_56_INT, "rx_sdbei_56_int", OAM_RX_BASE_ADDR, 0xe0, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_57_INT, "rx_sdbei_57_int", OAM_RX_BASE_ADDR, 0xe0, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_58_INT, "rx_sdbei_58_int", OAM_RX_BASE_ADDR, 0xe0, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_59_INT, "rx_sdbei_59_int", OAM_RX_BASE_ADDR, 0xe0, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_60_INT, "rx_sdbei_60_int", OAM_RX_BASE_ADDR, 0xe0, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_61_INT, "rx_sdbei_61_int", OAM_RX_BASE_ADDR, 0xe0, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_62_INT, "rx_sdbei_62_int", OAM_RX_BASE_ADDR, 0xe0, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_63_INT, "rx_sdbei_63_int", OAM_RX_BASE_ADDR, 0xe0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBEI_48_INT_MASK, "rx_sdbei_48_int_mask", OAM_RX_BASE_ADDR, 0xe1, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_49_INT_MASK, "rx_sdbei_49_int_mask", OAM_RX_BASE_ADDR, 0xe1, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_50_INT_MASK, "rx_sdbei_50_int_mask", OAM_RX_BASE_ADDR, 0xe1, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_51_INT_MASK, "rx_sdbei_51_int_mask", OAM_RX_BASE_ADDR, 0xe1, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_52_INT_MASK, "rx_sdbei_52_int_mask", OAM_RX_BASE_ADDR, 0xe1, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_53_INT_MASK, "rx_sdbei_53_int_mask", OAM_RX_BASE_ADDR, 0xe1, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_54_INT_MASK, "rx_sdbei_54_int_mask", OAM_RX_BASE_ADDR, 0xe1, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_55_INT_MASK, "rx_sdbei_55_int_mask", OAM_RX_BASE_ADDR, 0xe1, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_56_INT_MASK, "rx_sdbei_56_int_mask", OAM_RX_BASE_ADDR, 0xe1, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_57_INT_MASK, "rx_sdbei_57_int_mask", OAM_RX_BASE_ADDR, 0xe1, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_58_INT_MASK, "rx_sdbei_58_int_mask", OAM_RX_BASE_ADDR, 0xe1, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_59_INT_MASK, "rx_sdbei_59_int_mask", OAM_RX_BASE_ADDR, 0xe1, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_60_INT_MASK, "rx_sdbei_60_int_mask", OAM_RX_BASE_ADDR, 0xe1, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_61_INT_MASK, "rx_sdbei_61_int_mask", OAM_RX_BASE_ADDR, 0xe1, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_62_INT_MASK, "rx_sdbei_62_int_mask", OAM_RX_BASE_ADDR, 0xe1, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_63_INT_MASK, "rx_sdbei_63_int_mask", OAM_RX_BASE_ADDR, 0xe1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i4_int_reg[] =
{
	{ TEST_OAM_RX_SDBEI_64_INT, "rx_sdbei_64_int", OAM_RX_BASE_ADDR, 0xe2, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_65_INT, "rx_sdbei_65_int", OAM_RX_BASE_ADDR, 0xe2, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_66_INT, "rx_sdbei_66_int", OAM_RX_BASE_ADDR, 0xe2, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_67_INT, "rx_sdbei_67_int", OAM_RX_BASE_ADDR, 0xe2, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_68_INT, "rx_sdbei_68_int", OAM_RX_BASE_ADDR, 0xe2, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_69_INT, "rx_sdbei_69_int", OAM_RX_BASE_ADDR, 0xe2, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_70_INT, "rx_sdbei_70_int", OAM_RX_BASE_ADDR, 0xe2, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_71_INT, "rx_sdbei_71_int", OAM_RX_BASE_ADDR, 0xe2, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_72_INT, "rx_sdbei_72_int", OAM_RX_BASE_ADDR, 0xe2, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_73_INT, "rx_sdbei_73_int", OAM_RX_BASE_ADDR, 0xe2, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_74_INT, "rx_sdbei_74_int", OAM_RX_BASE_ADDR, 0xe2, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_75_INT, "rx_sdbei_75_int", OAM_RX_BASE_ADDR, 0xe2, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_76_INT, "rx_sdbei_76_int", OAM_RX_BASE_ADDR, 0xe2, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_77_INT, "rx_sdbei_77_int", OAM_RX_BASE_ADDR, 0xe2, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_78_INT, "rx_sdbei_78_int", OAM_RX_BASE_ADDR, 0xe2, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_79_INT, "rx_sdbei_79_int", OAM_RX_BASE_ADDR, 0xe2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_sdbei_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_SDBEI_64_INT_MASK, "rx_sdbei_64_int_mask", OAM_RX_BASE_ADDR, 0xe3, 1, 0, 0x0 },
	{ TEST_OAM_RX_SDBEI_65_INT_MASK, "rx_sdbei_65_int_mask", OAM_RX_BASE_ADDR, 0xe3, 3, 2, 0x0 },
	{ TEST_OAM_RX_SDBEI_66_INT_MASK, "rx_sdbei_66_int_mask", OAM_RX_BASE_ADDR, 0xe3, 5, 4, 0x0 },
	{ TEST_OAM_RX_SDBEI_67_INT_MASK, "rx_sdbei_67_int_mask", OAM_RX_BASE_ADDR, 0xe3, 7, 6, 0x0 },
	{ TEST_OAM_RX_SDBEI_68_INT_MASK, "rx_sdbei_68_int_mask", OAM_RX_BASE_ADDR, 0xe3, 9, 8, 0x0 },
	{ TEST_OAM_RX_SDBEI_69_INT_MASK, "rx_sdbei_69_int_mask", OAM_RX_BASE_ADDR, 0xe3, 11, 10, 0x0 },
	{ TEST_OAM_RX_SDBEI_70_INT_MASK, "rx_sdbei_70_int_mask", OAM_RX_BASE_ADDR, 0xe3, 13, 12, 0x0 },
	{ TEST_OAM_RX_SDBEI_71_INT_MASK, "rx_sdbei_71_int_mask", OAM_RX_BASE_ADDR, 0xe3, 15, 14, 0x0 },
	{ TEST_OAM_RX_SDBEI_72_INT_MASK, "rx_sdbei_72_int_mask", OAM_RX_BASE_ADDR, 0xe3, 17, 16, 0x0 },
	{ TEST_OAM_RX_SDBEI_73_INT_MASK, "rx_sdbei_73_int_mask", OAM_RX_BASE_ADDR, 0xe3, 19, 18, 0x0 },
	{ TEST_OAM_RX_SDBEI_74_INT_MASK, "rx_sdbei_74_int_mask", OAM_RX_BASE_ADDR, 0xe3, 21, 20, 0x0 },
	{ TEST_OAM_RX_SDBEI_75_INT_MASK, "rx_sdbei_75_int_mask", OAM_RX_BASE_ADDR, 0xe3, 23, 22, 0x0 },
	{ TEST_OAM_RX_SDBEI_76_INT_MASK, "rx_sdbei_76_int_mask", OAM_RX_BASE_ADDR, 0xe3, 25, 24, 0x0 },
	{ TEST_OAM_RX_SDBEI_77_INT_MASK, "rx_sdbei_77_int_mask", OAM_RX_BASE_ADDR, 0xe3, 27, 26, 0x0 },
	{ TEST_OAM_RX_SDBEI_78_INT_MASK, "rx_sdbei_78_int_mask", OAM_RX_BASE_ADDR, 0xe3, 29, 28, 0x0 },
	{ TEST_OAM_RX_SDBEI_79_INT_MASK, "rx_sdbei_79_int_mask", OAM_RX_BASE_ADDR, 0xe3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i0_int_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_0_INT, "rf_alm_0_int", OAM_RX_BASE_ADDR, 0xe4, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_1_INT, "rf_alm_1_int", OAM_RX_BASE_ADDR, 0xe4, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_2_INT, "rf_alm_2_int", OAM_RX_BASE_ADDR, 0xe4, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_3_INT, "rf_alm_3_int", OAM_RX_BASE_ADDR, 0xe4, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_4_INT, "rf_alm_4_int", OAM_RX_BASE_ADDR, 0xe4, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_5_INT, "rf_alm_5_int", OAM_RX_BASE_ADDR, 0xe4, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_6_INT, "rf_alm_6_int", OAM_RX_BASE_ADDR, 0xe4, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_7_INT, "rf_alm_7_int", OAM_RX_BASE_ADDR, 0xe4, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_8_INT, "rf_alm_8_int", OAM_RX_BASE_ADDR, 0xe4, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_9_INT, "rf_alm_9_int", OAM_RX_BASE_ADDR, 0xe4, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_10_INT, "rf_alm_10_int", OAM_RX_BASE_ADDR, 0xe4, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_11_INT, "rf_alm_11_int", OAM_RX_BASE_ADDR, 0xe4, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_12_INT, "rf_alm_12_int", OAM_RX_BASE_ADDR, 0xe4, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_13_INT, "rf_alm_13_int", OAM_RX_BASE_ADDR, 0xe4, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_14_INT, "rf_alm_14_int", OAM_RX_BASE_ADDR, 0xe4, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_15_INT, "rf_alm_15_int", OAM_RX_BASE_ADDR, 0xe4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_0_INT_MASK, "rf_alm_0_int_mask", OAM_RX_BASE_ADDR, 0xe5, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_1_INT_MASK, "rf_alm_1_int_mask", OAM_RX_BASE_ADDR, 0xe5, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_2_INT_MASK, "rf_alm_2_int_mask", OAM_RX_BASE_ADDR, 0xe5, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_3_INT_MASK, "rf_alm_3_int_mask", OAM_RX_BASE_ADDR, 0xe5, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_4_INT_MASK, "rf_alm_4_int_mask", OAM_RX_BASE_ADDR, 0xe5, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_5_INT_MASK, "rf_alm_5_int_mask", OAM_RX_BASE_ADDR, 0xe5, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_6_INT_MASK, "rf_alm_6_int_mask", OAM_RX_BASE_ADDR, 0xe5, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_7_INT_MASK, "rf_alm_7_int_mask", OAM_RX_BASE_ADDR, 0xe5, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_8_INT_MASK, "rf_alm_8_int_mask", OAM_RX_BASE_ADDR, 0xe5, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_9_INT_MASK, "rf_alm_9_int_mask", OAM_RX_BASE_ADDR, 0xe5, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_10_INT_MASK, "rf_alm_10_int_mask", OAM_RX_BASE_ADDR, 0xe5, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_11_INT_MASK, "rf_alm_11_int_mask", OAM_RX_BASE_ADDR, 0xe5, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_12_INT_MASK, "rf_alm_12_int_mask", OAM_RX_BASE_ADDR, 0xe5, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_13_INT_MASK, "rf_alm_13_int_mask", OAM_RX_BASE_ADDR, 0xe5, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_14_INT_MASK, "rf_alm_14_int_mask", OAM_RX_BASE_ADDR, 0xe5, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_15_INT_MASK, "rf_alm_15_int_mask", OAM_RX_BASE_ADDR, 0xe5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i1_int_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_27_INT, "rf_alm_27_int", OAM_RX_BASE_ADDR, 0xe6, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_28_INT, "rf_alm_28_int", OAM_RX_BASE_ADDR, 0xe6, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_29_INT, "rf_alm_29_int", OAM_RX_BASE_ADDR, 0xe6, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_30_INT, "rf_alm_30_int", OAM_RX_BASE_ADDR, 0xe6, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_31_INT, "rf_alm_31_int", OAM_RX_BASE_ADDR, 0xe6, 31, 30, 0x0 },
	{ TEST_OAM_RX_RF_ALM_16_INT, "rf_alm_16_int", OAM_RX_BASE_ADDR, 0xe6, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_17_INT, "rf_alm_17_int", OAM_RX_BASE_ADDR, 0xe6, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_18_INT, "rf_alm_18_int", OAM_RX_BASE_ADDR, 0xe6, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_19_INT, "rf_alm_19_int", OAM_RX_BASE_ADDR, 0xe6, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_20_INT, "rf_alm_20_int", OAM_RX_BASE_ADDR, 0xe6, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_21_INT, "rf_alm_21_int", OAM_RX_BASE_ADDR, 0xe6, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_22_INT, "rf_alm_22_int", OAM_RX_BASE_ADDR, 0xe6, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_23_INT, "rf_alm_23_int", OAM_RX_BASE_ADDR, 0xe6, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_24_INT, "rf_alm_24_int", OAM_RX_BASE_ADDR, 0xe6, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_25_INT, "rf_alm_25_int", OAM_RX_BASE_ADDR, 0xe6, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_26_INT, "rf_alm_26_int", OAM_RX_BASE_ADDR, 0xe6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_26_INT_MASK, "rf_alm_26_int_mask", OAM_RX_BASE_ADDR, 0xe7, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_27_INT_MASK, "rf_alm_27_int_mask", OAM_RX_BASE_ADDR, 0xe7, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_28_INT_MASK, "rf_alm_28_int_mask", OAM_RX_BASE_ADDR, 0xe7, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_29_INT_MASK, "rf_alm_29_int_mask", OAM_RX_BASE_ADDR, 0xe7, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_30_INT_MASK, "rf_alm_30_int_mask", OAM_RX_BASE_ADDR, 0xe7, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_31_INT_MASK, "rf_alm_31_int_mask", OAM_RX_BASE_ADDR, 0xe7, 31, 30, 0x0 },
	{ TEST_OAM_RX_RF_ALM_16_INT_MASK, "rf_alm_16_int_mask", OAM_RX_BASE_ADDR, 0xe7, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_17_INT_MASK, "rf_alm_17_int_mask", OAM_RX_BASE_ADDR, 0xe7, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_18_INT_MASK, "rf_alm_18_int_mask", OAM_RX_BASE_ADDR, 0xe7, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_19_INT_MASK, "rf_alm_19_int_mask", OAM_RX_BASE_ADDR, 0xe7, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_20_INT_MASK, "rf_alm_20_int_mask", OAM_RX_BASE_ADDR, 0xe7, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_21_INT_MASK, "rf_alm_21_int_mask", OAM_RX_BASE_ADDR, 0xe7, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_22_INT_MASK, "rf_alm_22_int_mask", OAM_RX_BASE_ADDR, 0xe7, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_23_INT_MASK, "rf_alm_23_int_mask", OAM_RX_BASE_ADDR, 0xe7, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_24_INT_MASK, "rf_alm_24_int_mask", OAM_RX_BASE_ADDR, 0xe7, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_25_INT_MASK, "rf_alm_25_int_mask", OAM_RX_BASE_ADDR, 0xe7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i2_int_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_32_INT, "rf_alm_32_int", OAM_RX_BASE_ADDR, 0xe8, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_33_INT, "rf_alm_33_int", OAM_RX_BASE_ADDR, 0xe8, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_34_INT, "rf_alm_34_int", OAM_RX_BASE_ADDR, 0xe8, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_35_INT, "rf_alm_35_int", OAM_RX_BASE_ADDR, 0xe8, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_36_INT, "rf_alm_36_int", OAM_RX_BASE_ADDR, 0xe8, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_37_INT, "rf_alm_37_int", OAM_RX_BASE_ADDR, 0xe8, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_38_INT, "rf_alm_38_int", OAM_RX_BASE_ADDR, 0xe8, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_39_INT, "rf_alm_39_int", OAM_RX_BASE_ADDR, 0xe8, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_40_INT, "rf_alm_40_int", OAM_RX_BASE_ADDR, 0xe8, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_41_INT, "rf_alm_41_int", OAM_RX_BASE_ADDR, 0xe8, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_42_INT, "rf_alm_42_int", OAM_RX_BASE_ADDR, 0xe8, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_43_INT, "rf_alm_43_int", OAM_RX_BASE_ADDR, 0xe8, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_44_INT, "rf_alm_44_int", OAM_RX_BASE_ADDR, 0xe8, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_45_INT, "rf_alm_45_int", OAM_RX_BASE_ADDR, 0xe8, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_46_INT, "rf_alm_46_int", OAM_RX_BASE_ADDR, 0xe8, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_47_INT, "rf_alm_47_int", OAM_RX_BASE_ADDR, 0xe8, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_32_INT_MASK, "rf_alm_32_int_mask", OAM_RX_BASE_ADDR, 0xe9, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_33_INT_MASK, "rf_alm_33_int_mask", OAM_RX_BASE_ADDR, 0xe9, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_34_INT_MASK, "rf_alm_34_int_mask", OAM_RX_BASE_ADDR, 0xe9, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_35_INT_MASK, "rf_alm_35_int_mask", OAM_RX_BASE_ADDR, 0xe9, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_36_INT_MASK, "rf_alm_36_int_mask", OAM_RX_BASE_ADDR, 0xe9, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_37_INT_MASK, "rf_alm_37_int_mask", OAM_RX_BASE_ADDR, 0xe9, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_38_INT_MASK, "rf_alm_38_int_mask", OAM_RX_BASE_ADDR, 0xe9, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_39_INT_MASK, "rf_alm_39_int_mask", OAM_RX_BASE_ADDR, 0xe9, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_40_INT_MASK, "rf_alm_40_int_mask", OAM_RX_BASE_ADDR, 0xe9, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_41_INT_MASK, "rf_alm_41_int_mask", OAM_RX_BASE_ADDR, 0xe9, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_42_INT_MASK, "rf_alm_42_int_mask", OAM_RX_BASE_ADDR, 0xe9, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_43_INT_MASK, "rf_alm_43_int_mask", OAM_RX_BASE_ADDR, 0xe9, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_44_INT_MASK, "rf_alm_44_int_mask", OAM_RX_BASE_ADDR, 0xe9, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_45_INT_MASK, "rf_alm_45_int_mask", OAM_RX_BASE_ADDR, 0xe9, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_46_INT_MASK, "rf_alm_46_int_mask", OAM_RX_BASE_ADDR, 0xe9, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_47_INT_MASK, "rf_alm_47_int_mask", OAM_RX_BASE_ADDR, 0xe9, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i3_int_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_48_INT, "rf_alm_48_int", OAM_RX_BASE_ADDR, 0xea, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_49_INT, "rf_alm_49_int", OAM_RX_BASE_ADDR, 0xea, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_50_INT, "rf_alm_50_int", OAM_RX_BASE_ADDR, 0xea, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_51_INT, "rf_alm_51_int", OAM_RX_BASE_ADDR, 0xea, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_52_INT, "rf_alm_52_int", OAM_RX_BASE_ADDR, 0xea, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_53_INT, "rf_alm_53_int", OAM_RX_BASE_ADDR, 0xea, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_54_INT, "rf_alm_54_int", OAM_RX_BASE_ADDR, 0xea, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_55_INT, "rf_alm_55_int", OAM_RX_BASE_ADDR, 0xea, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_56_INT, "rf_alm_56_int", OAM_RX_BASE_ADDR, 0xea, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_57_INT, "rf_alm_57_int", OAM_RX_BASE_ADDR, 0xea, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_58_INT, "rf_alm_58_int", OAM_RX_BASE_ADDR, 0xea, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_59_INT, "rf_alm_59_int", OAM_RX_BASE_ADDR, 0xea, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_60_INT, "rf_alm_60_int", OAM_RX_BASE_ADDR, 0xea, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_61_INT, "rf_alm_61_int", OAM_RX_BASE_ADDR, 0xea, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_62_INT, "rf_alm_62_int", OAM_RX_BASE_ADDR, 0xea, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_63_INT, "rf_alm_63_int", OAM_RX_BASE_ADDR, 0xea, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_48_INT_MASK, "rf_alm_48_int_mask", OAM_RX_BASE_ADDR, 0xeb, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_49_INT_MASK, "rf_alm_49_int_mask", OAM_RX_BASE_ADDR, 0xeb, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_50_INT_MASK, "rf_alm_50_int_mask", OAM_RX_BASE_ADDR, 0xeb, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_51_INT_MASK, "rf_alm_51_int_mask", OAM_RX_BASE_ADDR, 0xeb, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_52_INT_MASK, "rf_alm_52_int_mask", OAM_RX_BASE_ADDR, 0xeb, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_53_INT_MASK, "rf_alm_53_int_mask", OAM_RX_BASE_ADDR, 0xeb, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_54_INT_MASK, "rf_alm_54_int_mask", OAM_RX_BASE_ADDR, 0xeb, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_55_INT_MASK, "rf_alm_55_int_mask", OAM_RX_BASE_ADDR, 0xeb, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_56_INT_MASK, "rf_alm_56_int_mask", OAM_RX_BASE_ADDR, 0xeb, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_57_INT_MASK, "rf_alm_57_int_mask", OAM_RX_BASE_ADDR, 0xeb, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_58_INT_MASK, "rf_alm_58_int_mask", OAM_RX_BASE_ADDR, 0xeb, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_59_INT_MASK, "rf_alm_59_int_mask", OAM_RX_BASE_ADDR, 0xeb, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_60_INT_MASK, "rf_alm_60_int_mask", OAM_RX_BASE_ADDR, 0xeb, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_61_INT_MASK, "rf_alm_61_int_mask", OAM_RX_BASE_ADDR, 0xeb, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_62_INT_MASK, "rf_alm_62_int_mask", OAM_RX_BASE_ADDR, 0xeb, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_63_INT_MASK, "rf_alm_63_int_mask", OAM_RX_BASE_ADDR, 0xeb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i4_int_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_64_INT, "rf_alm_64_int", OAM_RX_BASE_ADDR, 0xec, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_65_INT, "rf_alm_65_int", OAM_RX_BASE_ADDR, 0xec, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_66_INT, "rf_alm_66_int", OAM_RX_BASE_ADDR, 0xec, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_67_INT, "rf_alm_67_int", OAM_RX_BASE_ADDR, 0xec, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_68_INT, "rf_alm_68_int", OAM_RX_BASE_ADDR, 0xec, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_69_INT, "rf_alm_69_int", OAM_RX_BASE_ADDR, 0xec, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_70_INT, "rf_alm_70_int", OAM_RX_BASE_ADDR, 0xec, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_71_INT, "rf_alm_71_int", OAM_RX_BASE_ADDR, 0xec, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_72_INT, "rf_alm_72_int", OAM_RX_BASE_ADDR, 0xec, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_73_INT, "rf_alm_73_int", OAM_RX_BASE_ADDR, 0xec, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_74_INT, "rf_alm_74_int", OAM_RX_BASE_ADDR, 0xec, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_75_INT, "rf_alm_75_int", OAM_RX_BASE_ADDR, 0xec, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_76_INT, "rf_alm_76_int", OAM_RX_BASE_ADDR, 0xec, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_77_INT, "rf_alm_77_int", OAM_RX_BASE_ADDR, 0xec, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_78_INT, "rf_alm_78_int", OAM_RX_BASE_ADDR, 0xec, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_79_INT, "rf_alm_79_int", OAM_RX_BASE_ADDR, 0xec, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rf_alm_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_RF_ALM_64_INT_MASK, "rf_alm_64_int_mask", OAM_RX_BASE_ADDR, 0xed, 1, 0, 0x0 },
	{ TEST_OAM_RX_RF_ALM_65_INT_MASK, "rf_alm_65_int_mask", OAM_RX_BASE_ADDR, 0xed, 3, 2, 0x0 },
	{ TEST_OAM_RX_RF_ALM_66_INT_MASK, "rf_alm_66_int_mask", OAM_RX_BASE_ADDR, 0xed, 5, 4, 0x0 },
	{ TEST_OAM_RX_RF_ALM_67_INT_MASK, "rf_alm_67_int_mask", OAM_RX_BASE_ADDR, 0xed, 7, 6, 0x0 },
	{ TEST_OAM_RX_RF_ALM_68_INT_MASK, "rf_alm_68_int_mask", OAM_RX_BASE_ADDR, 0xed, 9, 8, 0x0 },
	{ TEST_OAM_RX_RF_ALM_69_INT_MASK, "rf_alm_69_int_mask", OAM_RX_BASE_ADDR, 0xed, 11, 10, 0x0 },
	{ TEST_OAM_RX_RF_ALM_70_INT_MASK, "rf_alm_70_int_mask", OAM_RX_BASE_ADDR, 0xed, 13, 12, 0x0 },
	{ TEST_OAM_RX_RF_ALM_71_INT_MASK, "rf_alm_71_int_mask", OAM_RX_BASE_ADDR, 0xed, 15, 14, 0x0 },
	{ TEST_OAM_RX_RF_ALM_72_INT_MASK, "rf_alm_72_int_mask", OAM_RX_BASE_ADDR, 0xed, 17, 16, 0x0 },
	{ TEST_OAM_RX_RF_ALM_73_INT_MASK, "rf_alm_73_int_mask", OAM_RX_BASE_ADDR, 0xed, 19, 18, 0x0 },
	{ TEST_OAM_RX_RF_ALM_74_INT_MASK, "rf_alm_74_int_mask", OAM_RX_BASE_ADDR, 0xed, 21, 20, 0x0 },
	{ TEST_OAM_RX_RF_ALM_75_INT_MASK, "rf_alm_75_int_mask", OAM_RX_BASE_ADDR, 0xed, 23, 22, 0x0 },
	{ TEST_OAM_RX_RF_ALM_76_INT_MASK, "rf_alm_76_int_mask", OAM_RX_BASE_ADDR, 0xed, 25, 24, 0x0 },
	{ TEST_OAM_RX_RF_ALM_77_INT_MASK, "rf_alm_77_int_mask", OAM_RX_BASE_ADDR, 0xed, 27, 26, 0x0 },
	{ TEST_OAM_RX_RF_ALM_78_INT_MASK, "rf_alm_78_int_mask", OAM_RX_BASE_ADDR, 0xed, 29, 28, 0x0 },
	{ TEST_OAM_RX_RF_ALM_79_INT_MASK, "rf_alm_79_int_mask", OAM_RX_BASE_ADDR, 0xed, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i0_int_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_0_INT, "lpi_alm_0_int", OAM_RX_BASE_ADDR, 0xee, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_1_INT, "lpi_alm_1_int", OAM_RX_BASE_ADDR, 0xee, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_2_INT, "lpi_alm_2_int", OAM_RX_BASE_ADDR, 0xee, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_3_INT, "lpi_alm_3_int", OAM_RX_BASE_ADDR, 0xee, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_4_INT, "lpi_alm_4_int", OAM_RX_BASE_ADDR, 0xee, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_5_INT, "lpi_alm_5_int", OAM_RX_BASE_ADDR, 0xee, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_6_INT, "lpi_alm_6_int", OAM_RX_BASE_ADDR, 0xee, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_7_INT, "lpi_alm_7_int", OAM_RX_BASE_ADDR, 0xee, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_8_INT, "lpi_alm_8_int", OAM_RX_BASE_ADDR, 0xee, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_9_INT, "lpi_alm_9_int", OAM_RX_BASE_ADDR, 0xee, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_10_INT, "lpi_alm_10_int", OAM_RX_BASE_ADDR, 0xee, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_11_INT, "lpi_alm_11_int", OAM_RX_BASE_ADDR, 0xee, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_12_INT, "lpi_alm_12_int", OAM_RX_BASE_ADDR, 0xee, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_13_INT, "lpi_alm_13_int", OAM_RX_BASE_ADDR, 0xee, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_14_INT, "lpi_alm_14_int", OAM_RX_BASE_ADDR, 0xee, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_15_INT, "lpi_alm_15_int", OAM_RX_BASE_ADDR, 0xee, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_0_INT_MASK, "lpi_alm_0_int_mask", OAM_RX_BASE_ADDR, 0xef, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_1_INT_MASK, "lpi_alm_1_int_mask", OAM_RX_BASE_ADDR, 0xef, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_2_INT_MASK, "lpi_alm_2_int_mask", OAM_RX_BASE_ADDR, 0xef, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_3_INT_MASK, "lpi_alm_3_int_mask", OAM_RX_BASE_ADDR, 0xef, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_4_INT_MASK, "lpi_alm_4_int_mask", OAM_RX_BASE_ADDR, 0xef, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_5_INT_MASK, "lpi_alm_5_int_mask", OAM_RX_BASE_ADDR, 0xef, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_6_INT_MASK, "lpi_alm_6_int_mask", OAM_RX_BASE_ADDR, 0xef, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_7_INT_MASK, "lpi_alm_7_int_mask", OAM_RX_BASE_ADDR, 0xef, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_8_INT_MASK, "lpi_alm_8_int_mask", OAM_RX_BASE_ADDR, 0xef, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_9_INT_MASK, "lpi_alm_9_int_mask", OAM_RX_BASE_ADDR, 0xef, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_10_INT_MASK, "lpi_alm_10_int_mask", OAM_RX_BASE_ADDR, 0xef, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_11_INT_MASK, "lpi_alm_11_int_mask", OAM_RX_BASE_ADDR, 0xef, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_12_INT_MASK, "lpi_alm_12_int_mask", OAM_RX_BASE_ADDR, 0xef, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_13_INT_MASK, "lpi_alm_13_int_mask", OAM_RX_BASE_ADDR, 0xef, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_14_INT_MASK, "lpi_alm_14_int_mask", OAM_RX_BASE_ADDR, 0xef, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_15_INT_MASK, "lpi_alm_15_int_mask", OAM_RX_BASE_ADDR, 0xef, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i1_int_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_16_INT, "lpi_alm_16_int", OAM_RX_BASE_ADDR, 0xf0, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_17_INT, "lpi_alm_17_int", OAM_RX_BASE_ADDR, 0xf0, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_18_INT, "lpi_alm_18_int", OAM_RX_BASE_ADDR, 0xf0, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_19_INT, "lpi_alm_19_int", OAM_RX_BASE_ADDR, 0xf0, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_20_INT, "lpi_alm_20_int", OAM_RX_BASE_ADDR, 0xf0, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_21_INT, "lpi_alm_21_int", OAM_RX_BASE_ADDR, 0xf0, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_22_INT, "lpi_alm_22_int", OAM_RX_BASE_ADDR, 0xf0, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_23_INT, "lpi_alm_23_int", OAM_RX_BASE_ADDR, 0xf0, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_24_INT, "lpi_alm_24_int", OAM_RX_BASE_ADDR, 0xf0, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_25_INT, "lpi_alm_25_int", OAM_RX_BASE_ADDR, 0xf0, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_26_INT, "lpi_alm_26_int", OAM_RX_BASE_ADDR, 0xf0, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_27_INT, "lpi_alm_27_int", OAM_RX_BASE_ADDR, 0xf0, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_28_INT, "lpi_alm_28_int", OAM_RX_BASE_ADDR, 0xf0, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_29_INT, "lpi_alm_29_int", OAM_RX_BASE_ADDR, 0xf0, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_30_INT, "lpi_alm_30_int", OAM_RX_BASE_ADDR, 0xf0, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_31_INT, "lpi_alm_31_int", OAM_RX_BASE_ADDR, 0xf0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_16_INT_MASK, "lpi_alm_16_int_mask", OAM_RX_BASE_ADDR, 0xf1, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_17_INT_MASK, "lpi_alm_17_int_mask", OAM_RX_BASE_ADDR, 0xf1, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_18_INT_MASK, "lpi_alm_18_int_mask", OAM_RX_BASE_ADDR, 0xf1, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_19_INT_MASK, "lpi_alm_19_int_mask", OAM_RX_BASE_ADDR, 0xf1, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_20_INT_MASK, "lpi_alm_20_int_mask", OAM_RX_BASE_ADDR, 0xf1, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_21_INT_MASK, "lpi_alm_21_int_mask", OAM_RX_BASE_ADDR, 0xf1, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_22_INT_MASK, "lpi_alm_22_int_mask", OAM_RX_BASE_ADDR, 0xf1, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_23_INT_MASK, "lpi_alm_23_int_mask", OAM_RX_BASE_ADDR, 0xf1, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_24_INT_MASK, "lpi_alm_24_int_mask", OAM_RX_BASE_ADDR, 0xf1, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_25_INT_MASK, "lpi_alm_25_int_mask", OAM_RX_BASE_ADDR, 0xf1, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_26_INT_MASK, "lpi_alm_26_int_mask", OAM_RX_BASE_ADDR, 0xf1, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_27_INT_MASK, "lpi_alm_27_int_mask", OAM_RX_BASE_ADDR, 0xf1, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_28_INT_MASK, "lpi_alm_28_int_mask", OAM_RX_BASE_ADDR, 0xf1, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_29_INT_MASK, "lpi_alm_29_int_mask", OAM_RX_BASE_ADDR, 0xf1, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_30_INT_MASK, "lpi_alm_30_int_mask", OAM_RX_BASE_ADDR, 0xf1, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_31_INT_MASK, "lpi_alm_31_int_mask", OAM_RX_BASE_ADDR, 0xf1, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i2_int_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_32_INT, "lpi_alm_32_int", OAM_RX_BASE_ADDR, 0xf2, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_33_INT, "lpi_alm_33_int", OAM_RX_BASE_ADDR, 0xf2, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_34_INT, "lpi_alm_34_int", OAM_RX_BASE_ADDR, 0xf2, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_35_INT, "lpi_alm_35_int", OAM_RX_BASE_ADDR, 0xf2, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_36_INT, "lpi_alm_36_int", OAM_RX_BASE_ADDR, 0xf2, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_37_INT, "lpi_alm_37_int", OAM_RX_BASE_ADDR, 0xf2, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_38_INT, "lpi_alm_38_int", OAM_RX_BASE_ADDR, 0xf2, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_39_INT, "lpi_alm_39_int", OAM_RX_BASE_ADDR, 0xf2, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_40_INT, "lpi_alm_40_int", OAM_RX_BASE_ADDR, 0xf2, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_41_INT, "lpi_alm_41_int", OAM_RX_BASE_ADDR, 0xf2, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_42_INT, "lpi_alm_42_int", OAM_RX_BASE_ADDR, 0xf2, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_43_INT, "lpi_alm_43_int", OAM_RX_BASE_ADDR, 0xf2, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_44_INT, "lpi_alm_44_int", OAM_RX_BASE_ADDR, 0xf2, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_45_INT, "lpi_alm_45_int", OAM_RX_BASE_ADDR, 0xf2, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_46_INT, "lpi_alm_46_int", OAM_RX_BASE_ADDR, 0xf2, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_47_INT, "lpi_alm_47_int", OAM_RX_BASE_ADDR, 0xf2, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_32_INT_MASK, "lpi_alm_32_int_mask", OAM_RX_BASE_ADDR, 0xf3, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_33_INT_MASK, "lpi_alm_33_int_mask", OAM_RX_BASE_ADDR, 0xf3, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_34_INT_MASK, "lpi_alm_34_int_mask", OAM_RX_BASE_ADDR, 0xf3, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_35_INT_MASK, "lpi_alm_35_int_mask", OAM_RX_BASE_ADDR, 0xf3, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_36_INT_MASK, "lpi_alm_36_int_mask", OAM_RX_BASE_ADDR, 0xf3, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_37_INT_MASK, "lpi_alm_37_int_mask", OAM_RX_BASE_ADDR, 0xf3, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_38_INT_MASK, "lpi_alm_38_int_mask", OAM_RX_BASE_ADDR, 0xf3, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_39_INT_MASK, "lpi_alm_39_int_mask", OAM_RX_BASE_ADDR, 0xf3, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_40_INT_MASK, "lpi_alm_40_int_mask", OAM_RX_BASE_ADDR, 0xf3, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_41_INT_MASK, "lpi_alm_41_int_mask", OAM_RX_BASE_ADDR, 0xf3, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_42_INT_MASK, "lpi_alm_42_int_mask", OAM_RX_BASE_ADDR, 0xf3, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_43_INT_MASK, "lpi_alm_43_int_mask", OAM_RX_BASE_ADDR, 0xf3, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_44_INT_MASK, "lpi_alm_44_int_mask", OAM_RX_BASE_ADDR, 0xf3, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_45_INT_MASK, "lpi_alm_45_int_mask", OAM_RX_BASE_ADDR, 0xf3, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_46_INT_MASK, "lpi_alm_46_int_mask", OAM_RX_BASE_ADDR, 0xf3, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_47_INT_MASK, "lpi_alm_47_int_mask", OAM_RX_BASE_ADDR, 0xf3, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i3_int_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_48_INT, "lpi_alm_48_int", OAM_RX_BASE_ADDR, 0xf4, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_49_INT, "lpi_alm_49_int", OAM_RX_BASE_ADDR, 0xf4, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_50_INT, "lpi_alm_50_int", OAM_RX_BASE_ADDR, 0xf4, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_51_INT, "lpi_alm_51_int", OAM_RX_BASE_ADDR, 0xf4, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_52_INT, "lpi_alm_52_int", OAM_RX_BASE_ADDR, 0xf4, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_53_INT, "lpi_alm_53_int", OAM_RX_BASE_ADDR, 0xf4, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_54_INT, "lpi_alm_54_int", OAM_RX_BASE_ADDR, 0xf4, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_55_INT, "lpi_alm_55_int", OAM_RX_BASE_ADDR, 0xf4, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_56_INT, "lpi_alm_56_int", OAM_RX_BASE_ADDR, 0xf4, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_57_INT, "lpi_alm_57_int", OAM_RX_BASE_ADDR, 0xf4, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_58_INT, "lpi_alm_58_int", OAM_RX_BASE_ADDR, 0xf4, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_59_INT, "lpi_alm_59_int", OAM_RX_BASE_ADDR, 0xf4, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_60_INT, "lpi_alm_60_int", OAM_RX_BASE_ADDR, 0xf4, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_61_INT, "lpi_alm_61_int", OAM_RX_BASE_ADDR, 0xf4, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_62_INT, "lpi_alm_62_int", OAM_RX_BASE_ADDR, 0xf4, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_63_INT, "lpi_alm_63_int", OAM_RX_BASE_ADDR, 0xf4, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i3_int_mask_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_48_INT_MASK, "lpi_alm_48_int_mask", OAM_RX_BASE_ADDR, 0xf5, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_49_INT_MASK, "lpi_alm_49_int_mask", OAM_RX_BASE_ADDR, 0xf5, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_50_INT_MASK, "lpi_alm_50_int_mask", OAM_RX_BASE_ADDR, 0xf5, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_51_INT_MASK, "lpi_alm_51_int_mask", OAM_RX_BASE_ADDR, 0xf5, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_52_INT_MASK, "lpi_alm_52_int_mask", OAM_RX_BASE_ADDR, 0xf5, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_53_INT_MASK, "lpi_alm_53_int_mask", OAM_RX_BASE_ADDR, 0xf5, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_54_INT_MASK, "lpi_alm_54_int_mask", OAM_RX_BASE_ADDR, 0xf5, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_55_INT_MASK, "lpi_alm_55_int_mask", OAM_RX_BASE_ADDR, 0xf5, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_56_INT_MASK, "lpi_alm_56_int_mask", OAM_RX_BASE_ADDR, 0xf5, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_57_INT_MASK, "lpi_alm_57_int_mask", OAM_RX_BASE_ADDR, 0xf5, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_58_INT_MASK, "lpi_alm_58_int_mask", OAM_RX_BASE_ADDR, 0xf5, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_59_INT_MASK, "lpi_alm_59_int_mask", OAM_RX_BASE_ADDR, 0xf5, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_60_INT_MASK, "lpi_alm_60_int_mask", OAM_RX_BASE_ADDR, 0xf5, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_61_INT_MASK, "lpi_alm_61_int_mask", OAM_RX_BASE_ADDR, 0xf5, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_62_INT_MASK, "lpi_alm_62_int_mask", OAM_RX_BASE_ADDR, 0xf5, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_63_INT_MASK, "lpi_alm_63_int_mask", OAM_RX_BASE_ADDR, 0xf5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i4_int_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_75_INT, "lpi_alm_75_int", OAM_RX_BASE_ADDR, 0xf6, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_76_INT, "lpi_alm_76_int", OAM_RX_BASE_ADDR, 0xf6, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_77_INT, "lpi_alm_77_int", OAM_RX_BASE_ADDR, 0xf6, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_78_INT, "lpi_alm_78_int", OAM_RX_BASE_ADDR, 0xf6, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_79_INT, "lpi_alm_79_int", OAM_RX_BASE_ADDR, 0xf6, 31, 30, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_64_INT, "lpi_alm_64_int", OAM_RX_BASE_ADDR, 0xf6, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_65_INT, "lpi_alm_65_int", OAM_RX_BASE_ADDR, 0xf6, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_66_INT, "lpi_alm_66_int", OAM_RX_BASE_ADDR, 0xf6, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_67_INT, "lpi_alm_67_int", OAM_RX_BASE_ADDR, 0xf6, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_68_INT, "lpi_alm_68_int", OAM_RX_BASE_ADDR, 0xf6, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_69_INT, "lpi_alm_69_int", OAM_RX_BASE_ADDR, 0xf6, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_70_INT, "lpi_alm_70_int", OAM_RX_BASE_ADDR, 0xf6, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_71_INT, "lpi_alm_71_int", OAM_RX_BASE_ADDR, 0xf6, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_72_INT, "lpi_alm_72_int", OAM_RX_BASE_ADDR, 0xf6, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_73_INT, "lpi_alm_73_int", OAM_RX_BASE_ADDR, 0xf6, 19, 18, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_74_INT, "lpi_alm_74_int", OAM_RX_BASE_ADDR, 0xf6, 21, 20, 0x0 },
};
NEW_CHIP_REG test_lpi_alm_i4_int_mask_reg[] =
{
	{ TEST_OAM_RX_LPI_ALM_74_INT_MASK, "lpi_alm_74_int_mask", OAM_RX_BASE_ADDR, 0xf7, 21, 20, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_75_INT_MASK, "lpi_alm_75_int_mask", OAM_RX_BASE_ADDR, 0xf7, 23, 22, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_76_INT_MASK, "lpi_alm_76_int_mask", OAM_RX_BASE_ADDR, 0xf7, 25, 24, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_77_INT_MASK, "lpi_alm_77_int_mask", OAM_RX_BASE_ADDR, 0xf7, 27, 26, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_78_INT_MASK, "lpi_alm_78_int_mask", OAM_RX_BASE_ADDR, 0xf7, 29, 28, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_79_INT_MASK, "lpi_alm_79_int_mask", OAM_RX_BASE_ADDR, 0xf7, 31, 30, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_64_INT_MASK, "lpi_alm_64_int_mask", OAM_RX_BASE_ADDR, 0xf7, 1, 0, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_65_INT_MASK, "lpi_alm_65_int_mask", OAM_RX_BASE_ADDR, 0xf7, 3, 2, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_66_INT_MASK, "lpi_alm_66_int_mask", OAM_RX_BASE_ADDR, 0xf7, 5, 4, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_67_INT_MASK, "lpi_alm_67_int_mask", OAM_RX_BASE_ADDR, 0xf7, 7, 6, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_68_INT_MASK, "lpi_alm_68_int_mask", OAM_RX_BASE_ADDR, 0xf7, 9, 8, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_69_INT_MASK, "lpi_alm_69_int_mask", OAM_RX_BASE_ADDR, 0xf7, 11, 10, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_70_INT_MASK, "lpi_alm_70_int_mask", OAM_RX_BASE_ADDR, 0xf7, 13, 12, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_71_INT_MASK, "lpi_alm_71_int_mask", OAM_RX_BASE_ADDR, 0xf7, 15, 14, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_72_INT_MASK, "lpi_alm_72_int_mask", OAM_RX_BASE_ADDR, 0xf7, 17, 16, 0x0 },
	{ TEST_OAM_RX_LPI_ALM_73_INT_MASK, "lpi_alm_73_int_mask", OAM_RX_BASE_ADDR, 0xf7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i0_int_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM0_INT, "bas_period_alm0_int", OAM_RX_BASE_ADDR, 0xfa, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM1_INT, "bas_period_alm1_int", OAM_RX_BASE_ADDR, 0xfa, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM2_INT, "bas_period_alm2_int", OAM_RX_BASE_ADDR, 0xfa, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM3_INT, "bas_period_alm3_int", OAM_RX_BASE_ADDR, 0xfa, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM4_INT, "bas_period_alm4_int", OAM_RX_BASE_ADDR, 0xfa, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM5_INT, "bas_period_alm5_int", OAM_RX_BASE_ADDR, 0xfa, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM6_INT, "bas_period_alm6_int", OAM_RX_BASE_ADDR, 0xfa, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM7_INT, "bas_period_alm7_int", OAM_RX_BASE_ADDR, 0xfa, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM8_INT, "bas_period_alm8_int", OAM_RX_BASE_ADDR, 0xfa, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM9_INT, "bas_period_alm9_int", OAM_RX_BASE_ADDR, 0xfa, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM10_INT, "bas_period_alm10_int", OAM_RX_BASE_ADDR, 0xfa, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM11_INT, "bas_period_alm11_int", OAM_RX_BASE_ADDR, 0xfa, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM12_INT, "bas_period_alm12_int", OAM_RX_BASE_ADDR, 0xfa, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM13_INT, "bas_period_alm13_int", OAM_RX_BASE_ADDR, 0xfa, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM14_INT, "bas_period_alm14_int", OAM_RX_BASE_ADDR, 0xfa, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM15_INT, "bas_period_alm15_int", OAM_RX_BASE_ADDR, 0xfa, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i0_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM0_INT_MASK, "bas_period_alm0_int_mask", OAM_RX_BASE_ADDR, 0xfb, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM1_INT_MASK, "bas_period_alm1_int_mask", OAM_RX_BASE_ADDR, 0xfb, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM2_INT_MASK, "bas_period_alm2_int_mask", OAM_RX_BASE_ADDR, 0xfb, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM3_INT_MASK, "bas_period_alm3_int_mask", OAM_RX_BASE_ADDR, 0xfb, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM4_INT_MASK, "bas_period_alm4_int_mask", OAM_RX_BASE_ADDR, 0xfb, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM5_INT_MASK, "bas_period_alm5_int_mask", OAM_RX_BASE_ADDR, 0xfb, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM6_INT_MASK, "bas_period_alm6_int_mask", OAM_RX_BASE_ADDR, 0xfb, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM7_INT_MASK, "bas_period_alm7_int_mask", OAM_RX_BASE_ADDR, 0xfb, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM8_INT_MASK, "bas_period_alm8_int_mask", OAM_RX_BASE_ADDR, 0xfb, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM9_INT_MASK, "bas_period_alm9_int_mask", OAM_RX_BASE_ADDR, 0xfb, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM10_INT_MASK, "bas_period_alm10_int_mask", OAM_RX_BASE_ADDR, 0xfb, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM11_INT_MASK, "bas_period_alm11_int_mask", OAM_RX_BASE_ADDR, 0xfb, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM12_INT_MASK, "bas_period_alm12_int_mask", OAM_RX_BASE_ADDR, 0xfb, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM13_INT_MASK, "bas_period_alm13_int_mask", OAM_RX_BASE_ADDR, 0xfb, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM14_INT_MASK, "bas_period_alm14_int_mask", OAM_RX_BASE_ADDR, 0xfb, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM15_INT_MASK, "bas_period_alm15_int_mask", OAM_RX_BASE_ADDR, 0xfb, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i1_int_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM16_INT, "bas_period_alm16_int", OAM_RX_BASE_ADDR, 0xfc, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM17_INT, "bas_period_alm17_int", OAM_RX_BASE_ADDR, 0xfc, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM18_INT, "bas_period_alm18_int", OAM_RX_BASE_ADDR, 0xfc, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM19_INT, "bas_period_alm19_int", OAM_RX_BASE_ADDR, 0xfc, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM20_INT, "bas_period_alm20_int", OAM_RX_BASE_ADDR, 0xfc, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM21_INT, "bas_period_alm21_int", OAM_RX_BASE_ADDR, 0xfc, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM22_INT, "bas_period_alm22_int", OAM_RX_BASE_ADDR, 0xfc, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM23_INT, "bas_period_alm23_int", OAM_RX_BASE_ADDR, 0xfc, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM24_INT, "bas_period_alm24_int", OAM_RX_BASE_ADDR, 0xfc, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM25_INT, "bas_period_alm25_int", OAM_RX_BASE_ADDR, 0xfc, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM26_INT, "bas_period_alm26_int", OAM_RX_BASE_ADDR, 0xfc, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM27_INT, "bas_period_alm27_int", OAM_RX_BASE_ADDR, 0xfc, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM28_INT, "bas_period_alm28_int", OAM_RX_BASE_ADDR, 0xfc, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM29_INT, "bas_period_alm29_int", OAM_RX_BASE_ADDR, 0xfc, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM30_INT, "bas_period_alm30_int", OAM_RX_BASE_ADDR, 0xfc, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM31_INT, "bas_period_alm31_int", OAM_RX_BASE_ADDR, 0xfc, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i1_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM16_INT_MASK, "bas_period_alm16_int_mask", OAM_RX_BASE_ADDR, 0xfd, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM17_INT_MASK, "bas_period_alm17_int_mask", OAM_RX_BASE_ADDR, 0xfd, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM18_INT_MASK, "bas_period_alm18_int_mask", OAM_RX_BASE_ADDR, 0xfd, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM19_INT_MASK, "bas_period_alm19_int_mask", OAM_RX_BASE_ADDR, 0xfd, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM20_INT_MASK, "bas_period_alm20_int_mask", OAM_RX_BASE_ADDR, 0xfd, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM21_INT_MASK, "bas_period_alm21_int_mask", OAM_RX_BASE_ADDR, 0xfd, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM22_INT_MASK, "bas_period_alm22_int_mask", OAM_RX_BASE_ADDR, 0xfd, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM23_INT_MASK, "bas_period_alm23_int_mask", OAM_RX_BASE_ADDR, 0xfd, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM24_INT_MASK, "bas_period_alm24_int_mask", OAM_RX_BASE_ADDR, 0xfd, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM25_INT_MASK, "bas_period_alm25_int_mask", OAM_RX_BASE_ADDR, 0xfd, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM26_INT_MASK, "bas_period_alm26_int_mask", OAM_RX_BASE_ADDR, 0xfd, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM27_INT_MASK, "bas_period_alm27_int_mask", OAM_RX_BASE_ADDR, 0xfd, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM28_INT_MASK, "bas_period_alm28_int_mask", OAM_RX_BASE_ADDR, 0xfd, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM29_INT_MASK, "bas_period_alm29_int_mask", OAM_RX_BASE_ADDR, 0xfd, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM30_INT_MASK, "bas_period_alm30_int_mask", OAM_RX_BASE_ADDR, 0xfd, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM31_INT_MASK, "bas_period_alm31_int_mask", OAM_RX_BASE_ADDR, 0xfd, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i2_int_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM32_INT, "bas_period_alm32_int", OAM_RX_BASE_ADDR, 0xfe, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM33_INT, "bas_period_alm33_int", OAM_RX_BASE_ADDR, 0xfe, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM34_INT, "bas_period_alm34_int", OAM_RX_BASE_ADDR, 0xfe, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM35_INT, "bas_period_alm35_int", OAM_RX_BASE_ADDR, 0xfe, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM36_INT, "bas_period_alm36_int", OAM_RX_BASE_ADDR, 0xfe, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM37_INT, "bas_period_alm37_int", OAM_RX_BASE_ADDR, 0xfe, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM38_INT, "bas_period_alm38_int", OAM_RX_BASE_ADDR, 0xfe, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM39_INT, "bas_period_alm39_int", OAM_RX_BASE_ADDR, 0xfe, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM40_INT, "bas_period_alm40_int", OAM_RX_BASE_ADDR, 0xfe, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM41_INT, "bas_period_alm41_int", OAM_RX_BASE_ADDR, 0xfe, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM42_INT, "bas_period_alm42_int", OAM_RX_BASE_ADDR, 0xfe, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM43_INT, "bas_period_alm43_int", OAM_RX_BASE_ADDR, 0xfe, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM44_INT, "bas_period_alm44_int", OAM_RX_BASE_ADDR, 0xfe, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM45_INT, "bas_period_alm45_int", OAM_RX_BASE_ADDR, 0xfe, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM46_INT, "bas_period_alm46_int", OAM_RX_BASE_ADDR, 0xfe, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM47_INT, "bas_period_alm47_int", OAM_RX_BASE_ADDR, 0xfe, 31, 30, 0x0 },
};
NEW_CHIP_REG test_bas_period_alm_i2_int_mask_reg[] =
{
	{ TEST_OAM_RX_BAS_PERIOD_ALM32_INT_MASK, "bas_period_alm32_int_mask", OAM_RX_BASE_ADDR, 0xff, 1, 0, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM33_INT_MASK, "bas_period_alm33_int_mask", OAM_RX_BASE_ADDR, 0xff, 3, 2, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM34_INT_MASK, "bas_period_alm34_int_mask", OAM_RX_BASE_ADDR, 0xff, 5, 4, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM35_INT_MASK, "bas_period_alm35_int_mask", OAM_RX_BASE_ADDR, 0xff, 7, 6, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM36_INT_MASK, "bas_period_alm36_int_mask", OAM_RX_BASE_ADDR, 0xff, 9, 8, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM37_INT_MASK, "bas_period_alm37_int_mask", OAM_RX_BASE_ADDR, 0xff, 11, 10, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM38_INT_MASK, "bas_period_alm38_int_mask", OAM_RX_BASE_ADDR, 0xff, 13, 12, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM39_INT_MASK, "bas_period_alm39_int_mask", OAM_RX_BASE_ADDR, 0xff, 15, 14, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM40_INT_MASK, "bas_period_alm40_int_mask", OAM_RX_BASE_ADDR, 0xff, 17, 16, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM41_INT_MASK, "bas_period_alm41_int_mask", OAM_RX_BASE_ADDR, 0xff, 19, 18, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM42_INT_MASK, "bas_period_alm42_int_mask", OAM_RX_BASE_ADDR, 0xff, 21, 20, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM43_INT_MASK, "bas_period_alm43_int_mask", OAM_RX_BASE_ADDR, 0xff, 23, 22, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM44_INT_MASK, "bas_period_alm44_int_mask", OAM_RX_BASE_ADDR, 0xff, 25, 24, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM45_INT_MASK, "bas_period_alm45_int_mask", OAM_RX_BASE_ADDR, 0xff, 27, 26, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM46_INT_MASK, "bas_period_alm46_int_mask", OAM_RX_BASE_ADDR, 0xff, 29, 28, 0x0 },
	{ TEST_OAM_RX_BAS_PERIOD_ALM47_INT_MASK, "bas_period_alm47_int_mask", OAM_RX_BASE_ADDR, 0xff, 31, 30, 0x0 },
};

/*PCS_RX_BASIC*/
/*
NEW_CHIP_REG test_pcs_rx_basic_cfg_0_reg[] =
{
	{ TEST_PCS_RX_TEST_EN, "rx_test_en", PCS_RX_BASIC_BASE_ADDR, 0x0, 3, 0, 0x0 },
	{ TEST_PCS_RX_DISABLE_DESCRAMBLE, "disable_descramble", PCS_RX_BASIC_BASE_ADDR, 0x0, 7, 4, 0x0 },
	{ TEST_PCS_RX_LF_IDLE_SEL, "lf_idle_sel", PCS_RX_BASIC_BASE_ADDR, 0x0, 11, 8, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_SYNC_FAULT, "enable_rx_sync_fault", PCS_RX_BASIC_BASE_ADDR, 0x0, 15, 12, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_AM_FAULT, "enable_rx_am_fault", PCS_RX_BASIC_BASE_ADDR, 0x0, 19, 16, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_DESKEW_FAULT, "enable_rx_deskew_fault", PCS_RX_BASIC_BASE_ADDR, 0x0, 23, 20, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_HI_BER_FAULT, "enable_rx_hi_ber_fault", PCS_RX_BASIC_BASE_ADDR, 0x0, 27, 24, 0xf },
	{ TEST_PCS_RX_ENABLE_CLK_RX_READY_FAULT, "enable_clk_rx_ready_fault", PCS_RX_BASIC_BASE_ADDR, 0x0, 31, 28, 0xf },
};
NEW_CHIP_REG test_pcs_rx_basic_cfg_1_reg[] =
{
	{ TEST_PCS_RX_ENABLE_RX_SYNC_FAULT_ALM, "enable_rx_sync_fault_alm", PCS_RX_BASIC_BASE_ADDR, 0x1, 3, 0, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_AM_FAULT_ALM, "enable_rx_am_fault_alm", PCS_RX_BASIC_BASE_ADDR, 0x1, 7, 4, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_DESKEW_FAULT_ALM, "enable_rx_deskew_fault_alm", PCS_RX_BASIC_BASE_ADDR, 0x1, 11, 8, 0xf },
	{ TEST_PCS_RX_ENABLE_RX_HI_BER_FAULT_ALM, "enable_rx_hi_ber_fault_alm", PCS_RX_BASIC_BASE_ADDR, 0x1, 15, 12, 0xf },
	{ TEST_PCS_RX_ENABLE_CLK_RX_READY_ALM, "enable_clk_rx_ready_alm", PCS_RX_BASIC_BASE_ADDR, 0x1, 19, 16, 0xf },
	{ TEST_PCS_RX_BER_EN, "rx_ber_en", PCS_RX_BASIC_BASE_ADDR, 0x1, 23, 20, 0xf },
	{ TEST_PCS_RX_FEC_ON, "fec_on", PCS_RX_BASIC_BASE_ADDR, 0x1, 27, 24, 0x0 },
	{ TEST_PCS_RX_FEC_UNCORR_RESTART_EN, "fec_uncorr_restart_en", PCS_RX_BASIC_BASE_ADDR, 0x1, 31, 28, 0xf },
};
NEW_CHIP_REG test_pcs_rx_basic_cfg_2_reg[] =
{
	{ TEST_PCS_RX_MANUAL_LF_INSERT, "manual_lf_insert", PCS_RX_BASIC_BASE_ADDR, 0x2, 3, 0, 0x0 },
	{ TEST_PCS_RX_MANUAL_RF_INSERT, "manual_rf_insert", PCS_RX_BASIC_BASE_ADDR, 0x2, 7, 4, 0x0 },
	{ TEST_PCS_RX_MANUAL_IDLE_INSERT, "manual_idle_insert", PCS_RX_BASIC_BASE_ADDR, 0x2, 11, 8, 0x0 },
	{ TEST_PCS_RX_BYPASS, "bypass", PCS_RX_BASIC_BASE_ADDR, 0x2, 15, 12, 0x0 },
	{ TEST_PCS_RX_SERDES_DATA_TYPE, "serdes_data_type", PCS_RX_BASIC_BASE_ADDR, 0x2, 31, 16, 0x2222 },
};
NEW_CHIP_REG test_time_fifo_level_reg[] =
{
	{ TEST_PCS_RX_TIME_FIFO_LEVEL, "time_fifo_level", PCS_RX_BASIC_BASE_ADDR, 0x3, 31, 0, 0x2020202 },
};
NEW_CHIP_REG test_type_cfg_0_reg[] =
{
	{ TEST_PCS_RX_DATA_TYPE, "data_type", PCS_RX_BASIC_BASE_ADDR, 0x4, 1, 0, 0x0 },
	{ TEST_PCS_RX_RATE_TYPE, "rate_type", PCS_RX_BASIC_BASE_ADDR, 0x4, 17, 2, 0x5555 },
	{ TEST_PCS_RX_FEC_TYPE, "fec_type", PCS_RX_BASIC_BASE_ADDR, 0x4, 23, 22, 0x3 },
	{ TEST_PCS_RX_RS_DEC_EN, "rs_dec_en", PCS_RX_BASIC_BASE_ADDR, 0x4, 19, 18, 0x3 },
	{ TEST_PCS_RX_RS_CORR_EN, "rs_corr_en", PCS_RX_BASIC_BASE_ADDR, 0x4, 21, 20, 0x3 },
};
NEW_CHIP_REG test_type_cfg_1_reg[] =
{
	{ TEST_PCS_RX_RATE_AM_TYPE, "rate_am_type", PCS_RX_BASIC_BASE_ADDR, 0x5, 31, 0, 0x11111111 },
};
NEW_CHIP_REG test_ber_cycle_cnt_50g_reg[] =
{
	{ TEST_PCS_RX_BER_CYCLE_CNT_50G, "ber_cycle_cnt_50g", PCS_RX_BASIC_BASE_ADDR, 0x6, 20, 0, 0x2625a },
};
NEW_CHIP_REG test_ber_cycle_cnt_100g_reg[] =
{
	{ TEST_PCS_RX_BER_CYCLE_CNT_100G, "ber_cycle_cnt_100g", PCS_RX_BASIC_BASE_ADDR, 0x7, 20, 0, 0x2625a },
};
NEW_CHIP_REG test_pcs_rx_basic_cfg_3_reg[] =
{
	{ TEST_PCS_RX_PRENUM_IN, "prenum_in", PCS_RX_BASIC_BASE_ADDR, 0x8, 15, 0, 0x4040 },
	{ TEST_PCS_RX_POSTNUM_IN, "postnum_in", PCS_RX_BASIC_BASE_ADDR, 0x8, 31, 16, 0x4141 },
};


NEW_CHIP_REG test_block_threshold_reg[] =
{
	{ TEST_PCS_RX_BLOCK_THRESHOLD, "block_threshold", PCS_RX_BASIC_BASE_ADDR, 0x9, 31, 0, 0x4000400 },
};

NEW_CHIP_REG test_fec_ser_clear_threhold_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_0_1_0, "fec_ser_clear_threhold_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x48, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_0_1_1, "fec_ser_clear_threhold_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x48, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_1_1_0, "fec_ser_clear_threhold_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x49, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_1_1_1, "fec_ser_clear_threhold_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x49, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_2_1_0, "fec_ser_clear_threhold_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x4a, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_2_1_1, "fec_ser_clear_threhold_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x4a, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_0_0_0, "fec_ser_clear_threhold_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x4b, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_0_0_1, "fec_ser_clear_threhold_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x4b, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_1_0_0, "fec_ser_clear_threhold_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x4c, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_1_0_1, "fec_ser_clear_threhold_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x4c, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_2_0_0, "fec_ser_clear_threhold_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x4d, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_2_0_1, "fec_ser_clear_threhold_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x4d, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_3_1_0, "fec_ser_clear_threhold_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x4e, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_3_1_1, "fec_ser_clear_threhold_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x4e, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_clear_threhold_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_3_0_0, "fec_ser_clear_threhold_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x4f, 15, 0, 0x8 },
	{ TEST_PCS_RX_FEC_SER_CLEAR_THREHOLD_3_0_1, "fec_ser_clear_threhold_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x4f, 31, 16, 0x8 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_0_0_0, "fec_ser_p_clear_cfg_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x60, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_0_0_1, "fec_ser_p_clear_cfg_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x60, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_1_0_0, "fec_ser_p_clear_cfg_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x61, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_1_0_1, "fec_ser_p_clear_cfg_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x61, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_2_0_0, "fec_ser_p_clear_cfg_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x62, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_2_0_1, "fec_ser_p_clear_cfg_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x62, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_3_0_0, "fec_ser_p_clear_cfg_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x63, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_3_0_1, "fec_ser_p_clear_cfg_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x63, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_0_1_0, "fec_ser_p_clear_cfg_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x68, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_0_1_1, "fec_ser_p_clear_cfg_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x68, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_1_1_0, "fec_ser_p_clear_cfg_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x69, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_1_1_1, "fec_ser_p_clear_cfg_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x69, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_2_1_0, "fec_ser_p_clear_cfg_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x6a, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_2_1_1, "fec_ser_p_clear_cfg_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x6a, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_clear_cfg_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_3_1_0, "fec_ser_p_clear_cfg_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x6b, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_CLEAR_CFG_3_1_1, "fec_ser_p_clear_cfg_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x6b, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_delay_value_0_reg[] =
{
	{ TEST_PCS_RX_DELAY_VALUE0, "delay_value0", PCS_RX_BASIC_BASE_ADDR, 0x70, 15, 0, 0xa0 },
	{ TEST_PCS_RX_DELAY_VALUE1, "delay_value1", PCS_RX_BASIC_BASE_ADDR, 0x70, 31, 16, 0xa0 },
};
NEW_CHIP_REG test_fec_delay_value_1_reg[] =
{
	{ TEST_PCS_RX_DELAY_VALUE2, "delay_value2", PCS_RX_BASIC_BASE_ADDR, 0x71, 15, 0, 0xa0 },
	{ TEST_PCS_RX_DELAY_VALUE3, "delay_value3", PCS_RX_BASIC_BASE_ADDR, 0x71, 31, 16, 0xa0 },
};
NEW_CHIP_REG test_fec_delay_value_2_reg[] =
{
	{ TEST_PCS_RX_DELAY_VALUE4, "delay_value4", PCS_RX_BASIC_BASE_ADDR, 0x72, 15, 0, 0xa0 },
	{ TEST_PCS_RX_DELAY_VALUE5, "delay_value5", PCS_RX_BASIC_BASE_ADDR, 0x72, 31, 16, 0xa0 },
};
NEW_CHIP_REG test_fec_delay_value_3_reg[] =
{
	{ TEST_PCS_RX_DELAY_VALUE6, "delay_value6", PCS_RX_BASIC_BASE_ADDR, 0x73, 15, 0, 0xa0 },
	{ TEST_PCS_RX_DELAY_VALUE7, "delay_value7", PCS_RX_BASIC_BASE_ADDR, 0x73, 31, 16, 0xa0 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_0_0_0, "fec_ser_p_set_cfg_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x74, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_0_0_1, "fec_ser_p_set_cfg_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x74, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_1_0_0, "fec_ser_p_set_cfg_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x75, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_1_0_1, "fec_ser_p_set_cfg_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x75, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_3_0_0, "fec_ser_p_set_cfg_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x76, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_3_0_1, "fec_ser_p_set_cfg_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x76, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_2_0_0, "fec_ser_p_set_cfg_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x77, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_2_0_1, "fec_ser_p_set_cfg_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x77, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_0_1_0, "fec_ser_p_set_cfg_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x78, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_0_1_1, "fec_ser_p_set_cfg_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x78, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_1_1_0, "fec_ser_p_set_cfg_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x79, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_1_1_1, "fec_ser_p_set_cfg_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x79, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_2_1_0, "fec_ser_p_set_cfg_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x7a, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_2_1_1, "fec_ser_p_set_cfg_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x7a, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_p_set_cfg_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_3_1_0, "fec_ser_p_set_cfg_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x7b, 5, 0, 0x2 },
	{ TEST_PCS_RX_FEC_SER_P_SET_CFG_3_1_1, "fec_ser_p_set_cfg_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x7b, 21, 16, 0x2 },
};
NEW_CHIP_REG test_fec_ser_set_window_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_0_0_0, "fec_ser_set_window_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x7c, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_0_0_1, "fec_ser_set_window_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x7c, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_1_0_0, "fec_ser_set_window_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x7d, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_1_0_1, "fec_ser_set_window_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x7d, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_2_0_0, "fec_ser_set_window_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x7e, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_2_0_1, "fec_ser_set_window_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x7e, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_3_0_0, "fec_ser_set_window_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x7f, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_3_0_1, "fec_ser_set_window_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x7f, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_0_1_0, "fec_ser_set_window_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x80, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_0_1_1, "fec_ser_set_window_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x80, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_1_1_0, "fec_ser_set_window_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x81, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_1_1_1, "fec_ser_set_window_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x81, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_2_1_0, "fec_ser_set_window_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x82, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_2_1_1, "fec_ser_set_window_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x82, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_window_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_3_1_0, "fec_ser_set_window_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x83, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_SET_WINDOW_3_1_1, "fec_ser_set_window_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x83, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_set_threhold_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_0_0_0, "fec_ser_set_threhold_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x84, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_0_0_1, "fec_ser_set_threhold_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x84, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_1_0_0, "fec_ser_set_threhold_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x85, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_1_0_1, "fec_ser_set_threhold_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x85, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_2_0_0, "fec_ser_set_threhold_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x86, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_2_0_1, "fec_ser_set_threhold_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x86, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_3_0_0, "fec_ser_set_threhold_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x87, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_3_0_1, "fec_ser_set_threhold_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x87, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_0_1_0, "fec_ser_set_threhold_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x88, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_0_1_1, "fec_ser_set_threhold_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x88, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_1_1_0, "fec_ser_set_threhold_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x89, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_1_1_1, "fec_ser_set_threhold_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x89, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_2_1_0, "fec_ser_set_threhold_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x8a, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_2_1_1, "fec_ser_set_threhold_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x8a, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_set_threhold_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_3_1_0, "fec_ser_set_threhold_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x8b, 15, 0, 0xf },
	{ TEST_PCS_RX_FEC_SER_SET_THREHOLD_3_1_1, "fec_ser_set_threhold_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x8b, 31, 16, 0xf },
};
NEW_CHIP_REG test_fec_ser_clear_window_0_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_0_0_0, "fec_ser_clear_window_0_0_0", PCS_RX_BASIC_BASE_ADDR, 0x8c, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_0_0_1, "fec_ser_clear_window_0_0_1", PCS_RX_BASIC_BASE_ADDR, 0x8c, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_1_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_1_0_0, "fec_ser_clear_window_1_0_0", PCS_RX_BASIC_BASE_ADDR, 0x8d, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_1_0_1, "fec_ser_clear_window_1_0_1", PCS_RX_BASIC_BASE_ADDR, 0x8d, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_2_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_2_0_0, "fec_ser_clear_window_2_0_0", PCS_RX_BASIC_BASE_ADDR, 0x8e, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_2_0_1, "fec_ser_clear_window_2_0_1", PCS_RX_BASIC_BASE_ADDR, 0x8e, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_3_0_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_3_0_0, "fec_ser_clear_window_3_0_0", PCS_RX_BASIC_BASE_ADDR, 0x8f, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_3_0_1, "fec_ser_clear_window_3_0_1", PCS_RX_BASIC_BASE_ADDR, 0x8f, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_0_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_0_1_0, "fec_ser_clear_window_0_1_0", PCS_RX_BASIC_BASE_ADDR, 0x90, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_0_1_1, "fec_ser_clear_window_0_1_1", PCS_RX_BASIC_BASE_ADDR, 0x90, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_1_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_1_1_0, "fec_ser_clear_window_1_1_0", PCS_RX_BASIC_BASE_ADDR, 0x91, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_1_1_1, "fec_ser_clear_window_1_1_1", PCS_RX_BASIC_BASE_ADDR, 0x91, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_2_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_2_1_0, "fec_ser_clear_window_2_1_0", PCS_RX_BASIC_BASE_ADDR, 0x92, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_2_1_1, "fec_ser_clear_window_2_1_1", PCS_RX_BASIC_BASE_ADDR, 0x92, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_clear_window_3_1_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_3_1_0, "fec_ser_clear_window_3_1_0", PCS_RX_BASIC_BASE_ADDR, 0x93, 9, 0, 0xa },
	{ TEST_PCS_RX_FEC_SER_CLEAR_WINDOW_3_1_1, "fec_ser_clear_window_3_1_1", PCS_RX_BASIC_BASE_ADDR, 0x93, 25, 16, 0xa },
};
NEW_CHIP_REG test_fec_ser_base_time_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_BASE_TIME, "fec_ser_base_time", PCS_RX_BASIC_BASE_ADDR, 0x94, 31, 0, 0xaa },
};
NEW_CHIP_REG test_env_fifo_high_max_reg[] =
{
	{ TEST_PCS_RX_ENV_FIFO_HIGH_MAX, "env_fifo_high_max", PCS_RX_BASIC_BASE_ADDR, 0x99, 31, 0, 0x13131313 },
};
NEW_CHIP_REG test_env_fifo_high_min_reg[] =
{
	{ TEST_PCS_RX_ENV_FIFO_HIGH_MIN, "env_fifo_high_min", PCS_RX_BASIC_BASE_ADDR, 0x9a, 31, 0, 0x2020202 },
};
NEW_CHIP_REG test_env_fifo_low_max_reg[] =
{
	{ TEST_PCS_RX_ENV_FIFO_LOW_MAX, "env_fifo_low_max", PCS_RX_BASIC_BASE_ADDR, 0x9b, 31, 0, 0x2020202 },
};
NEW_CHIP_REG test_env_fifo_low_min_reg[] =
{
	{ TEST_PCS_RX_ENV_FIFO_LOW_MIN, "env_fifo_low_min", PCS_RX_BASIC_BASE_ADDR, 0x9c, 31, 0, 0x1010101 },
};
NEW_CHIP_REG test_rd_threshold_reg[] =
{
	{ TEST_PCS_RX_RD_THRESHOLD, "rd_threshold", PCS_RX_BASIC_BASE_ADDR, 0x9d, 5, 0, 0x4 },
	{ TEST_PCS_RX_RD_THRESHOLD_FEC, "rd_threshold_fec", PCS_RX_BASIC_BASE_ADDR, 0x9d, 14, 8, 0x5 },
};
NEW_CHIP_REG test_pcs_rx_lpi_en_reg[] =
{
	{ TEST_PCS_RX_LPI_ALM_EN, "lpi_alm_en", PCS_RX_BASIC_BASE_ADDR, 0x9e, 3, 0, 0xf },
	{ TEST_PCS_RX_LPI_STA_EN, "lpi_sta_en", PCS_RX_BASIC_BASE_ADDR, 0x9e, 7, 4, 0xf },
};
NEW_CHIP_REG test_pcs_rx_alm_clr_en_reg[] =
{
	{ TEST_PCS_RX_ALM_CLR_EN, "alm_clr_en", PCS_RX_BASIC_BASE_ADDR, 0xa0, 3, 0, 0xf },
};
NEW_CHIP_REG test_word_err_cnt_100g_0_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_100G_0, "word_err_cnt_100g_0", PCS_RX_BASIC_BASE_ADDR, 0x20, 31, 0, 0x0 },
};
NEW_CHIP_REG test_word_err_cnt_100g_1_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_100G_1, "word_err_cnt_100g_1", PCS_RX_BASIC_BASE_ADDR, 0x21, 31, 0, 0x0 },
};
NEW_CHIP_REG test_word_err_cnt_50g_0_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_50G_0, "word_err_cnt_50g_0", PCS_RX_BASIC_BASE_ADDR, 0x22, 31, 0, 0x0 },
};
NEW_CHIP_REG test_word_err_cnt_50g_1_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_50G_1, "word_err_cnt_50g_1", PCS_RX_BASIC_BASE_ADDR, 0x23, 31, 0, 0x0 },
};
NEW_CHIP_REG test_word_err_cnt_50g_2_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_50G_2, "word_err_cnt_50g_2", PCS_RX_BASIC_BASE_ADDR, 0x24, 31, 0, 0x0 },
};
NEW_CHIP_REG test_word_err_cnt_50g_3_reg[] =
{
	{ TEST_PCS_RX_WORD_ERR_CNT_50G_3, "word_err_cnt_50g_3", PCS_RX_BASIC_BASE_ADDR, 0x25, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_100g_0_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_100G_0, "bip_err_cnt_100g_0", PCS_RX_BASIC_BASE_ADDR, 0x26, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_100g_1_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_100G_1, "bip_err_cnt_100g_1", PCS_RX_BASIC_BASE_ADDR, 0x27, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_50g_0_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_50G_0, "bip_err_cnt_50g_0", PCS_RX_BASIC_BASE_ADDR, 0x28, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_50g_1_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_50G_1, "bip_err_cnt_50g_1", PCS_RX_BASIC_BASE_ADDR, 0x29, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_50g_2_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_50G_2, "bip_err_cnt_50g_2", PCS_RX_BASIC_BASE_ADDR, 0x2a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_cnt_50g_3_reg[] =
{
	{ TEST_PCS_RX_BIP_ERR_CNT_50G_3, "bip_err_cnt_50g_3", PCS_RX_BASIC_BASE_ADDR, 0x2b, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_100g_0_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_100G_0, "am_invld_cnt_100g_0", PCS_RX_BASIC_BASE_ADDR, 0x2c, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_100g_1_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_100G_1, "am_invld_cnt_100g_1", PCS_RX_BASIC_BASE_ADDR, 0x2d, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_50g_0_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_50G_0, "am_invld_cnt_50g_0", PCS_RX_BASIC_BASE_ADDR, 0x2e, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_50g_1_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_50G_1, "am_invld_cnt_50g_1", PCS_RX_BASIC_BASE_ADDR, 0x2f, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_50g_2_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_50G_2, "am_invld_cnt_50g_2", PCS_RX_BASIC_BASE_ADDR, 0x30, 31, 0, 0x0 },
};
NEW_CHIP_REG test_am_invld_cnt_50g_3_reg[] =
{
	{ TEST_PCS_RX_AM_INVLD_CNT_50G_3, "am_invld_cnt_50g_3", PCS_RX_BASIC_BASE_ADDR, 0x31, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_test_err_cnt_0_reg[] =
{
	{ TEST_PCS_RX_TEST_ERR_CNT_0, "rx_test_err_cnt_0", PCS_RX_BASIC_BASE_ADDR, 0x32, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_test_err_cnt_1_reg[] =
{
	{ TEST_PCS_RX_TEST_ERR_CNT_1, "rx_test_err_cnt_1", PCS_RX_BASIC_BASE_ADDR, 0x33, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_test_err_cnt_2_reg[] =
{
	{ TEST_PCS_RX_TEST_ERR_CNT_2, "rx_test_err_cnt_2", PCS_RX_BASIC_BASE_ADDR, 0x34, 31, 0, 0x0 },
};
NEW_CHIP_REG test_rx_test_err_cnt_3_reg[] =
{
	{ TEST_PCS_RX_TEST_ERR_CNT_3, "rx_test_err_cnt_3", PCS_RX_BASIC_BASE_ADDR, 0x35, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_one2zero_cnt_0_reg[] =
{
	{ TEST_PCS_RX_FEC_ONE2ZERO_CNT_0, "fec_one2zero_cnt_0", PCS_RX_BASIC_BASE_ADDR, 0x36, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_one2zero_cnt_1_reg[] =
{
	{ TEST_PCS_RX_FEC_ONE2ZERO_CNT_1, "fec_one2zero_cnt_1", PCS_RX_BASIC_BASE_ADDR, 0x37, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_one2zero_cnt_2_reg[] =
{
	{ TEST_PCS_RX_FEC_ONE2ZERO_CNT_2, "fec_one2zero_cnt_2", PCS_RX_BASIC_BASE_ADDR, 0x38, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_one2zero_cnt_3_reg[] =
{
	{ TEST_PCS_RX_FEC_ONE2ZERO_CNT_3, "fec_one2zero_cnt_3", PCS_RX_BASIC_BASE_ADDR, 0x39, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_zero2one_cnt_0_reg[] =
{
	{ TEST_PCS_RX_FEC_ZERO2ONE_CNT_0, "fec_zero2one_cnt_0", PCS_RX_BASIC_BASE_ADDR, 0x3a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_zero2one_cnt_1_reg[] =
{
	{ TEST_PCS_RX_FEC_ZERO2ONE_CNT_1, "fec_zero2one_cnt_1", PCS_RX_BASIC_BASE_ADDR, 0x3b, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_zero2one_cnt_2_reg[] =
{
	{ TEST_PCS_RX_FEC_ZERO2ONE_CNT_2, "fec_zero2one_cnt_2", PCS_RX_BASIC_BASE_ADDR, 0x3c, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_zero2one_cnt_3_reg[] =
{
	{ TEST_PCS_RX_FEC_ZERO2ONE_CNT_3, "fec_zero2one_cnt_3", PCS_RX_BASIC_BASE_ADDR, 0x3d, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_err_symbol_cnt_0_reg[] =
{
	{ TEST_PCS_RX_FEC_ERR_SYMBOL_CNT_0, "fec_err_symbol_cnt_0", PCS_RX_BASIC_BASE_ADDR, 0x3e, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_err_symbol_cnt_1_reg[] =
{
	{ TEST_PCS_RX_FEC_ERR_SYMBOL_CNT_1, "fec_err_symbol_cnt_1", PCS_RX_BASIC_BASE_ADDR, 0x3f, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_err_symbol_cnt_2_reg[] =
{
	{ TEST_PCS_RX_FEC_ERR_SYMBOL_CNT_2, "fec_err_symbol_cnt_2", PCS_RX_BASIC_BASE_ADDR, 0x40, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_err_symbol_cnt_3_reg[] =
{
	{ TEST_PCS_RX_FEC_ERR_SYMBOL_CNT_3, "fec_err_symbol_cnt_3", PCS_RX_BASIC_BASE_ADDR, 0x41, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_cw_uncorr_flg_0_reg[] =
{
	{ TEST_PCS_RX_FEC_CW_UNCORR_FLG_0, "fec_cw_uncorr_flg_0", PCS_RX_BASIC_BASE_ADDR, 0x42, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_cw_uncorr_flg_1_reg[] =
{
	{ TEST_PCS_RX_FEC_CW_UNCORR_FLG_1, "fec_cw_uncorr_flg_1", PCS_RX_BASIC_BASE_ADDR, 0x43, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_cw_uncorr_flg_2_reg[] =
{
	{ TEST_PCS_RX_FEC_CW_UNCORR_FLG_2, "fec_cw_uncorr_flg_2", PCS_RX_BASIC_BASE_ADDR, 0x44, 31, 0, 0x0 },
};
NEW_CHIP_REG test_fec_cw_uncorr_flg_3_reg[] =
{
	{ TEST_PCS_RX_FEC_CW_UNCORR_FLG_3, "fec_cw_uncorr_flg_3", PCS_RX_BASIC_BASE_ADDR, 0x45, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g0_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G0, "vlane_tags_100g0", PCS_RX_BASIC_BASE_ADDR, 0xa, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g1_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G1, "vlane_tags_100g1", PCS_RX_BASIC_BASE_ADDR, 0xb, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g2_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G2, "vlane_tags_100g2", PCS_RX_BASIC_BASE_ADDR, 0xc, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g3_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G3, "vlane_tags_100g3", PCS_RX_BASIC_BASE_ADDR, 0xd, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g4_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G4, "vlane_tags_100g4", PCS_RX_BASIC_BASE_ADDR, 0xe, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g5_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G5, "vlane_tags_100g5", PCS_RX_BASIC_BASE_ADDR, 0xf, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g6_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G6, "vlane_tags_100g6", PCS_RX_BASIC_BASE_ADDR, 0x10, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g7_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G7, "vlane_tags_100g7", PCS_RX_BASIC_BASE_ADDR, 0x11, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g8_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G8, "vlane_tags_100g8", PCS_RX_BASIC_BASE_ADDR, 0x12, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_100g9_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_100G9, "vlane_tags_100g9", PCS_RX_BASIC_BASE_ADDR, 0x13, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_50g0_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_50G0, "vlane_tags_50g0", PCS_RX_BASIC_BASE_ADDR, 0x14, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_50g1_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_50G1, "vlane_tags_50g1", PCS_RX_BASIC_BASE_ADDR, 0x15, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_50g2_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_50G2, "vlane_tags_50g2", PCS_RX_BASIC_BASE_ADDR, 0x16, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_vlane_tag_50g3_reg[] =
{
	{ TEST_PCS_RX_VLANE_TAGS_50G3, "vlane_tags_50g3", PCS_RX_BASIC_BASE_ADDR, 0x17, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_wd_lock_0_reg[] =
{
	{ TEST_PCS_RX_WORD_LOCK_0, "word_lock_0", PCS_RX_BASIC_BASE_ADDR, 0x18, 19, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_wd_lock_1_reg[] =
{
	{ TEST_PCS_RX_WORD_LOCK_1, "word_lock_1", PCS_RX_BASIC_BASE_ADDR, 0x19, 19, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_am_lock_deskew_0_reg[] =
{
	{ TEST_PCS_RX_AM_LOCK_0, "am_lock_0", PCS_RX_BASIC_BASE_ADDR, 0x1a, 19, 0, 0x0 },
	{ TEST_PCS_RX_LANES_DESKEW, "lanes_deskew", PCS_RX_BASIC_BASE_ADDR, 0x1a, 23, 20, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_am_lock_1_reg[] =
{
	{ TEST_PCS_RX_AM_LOCK_1, "am_lock_1", PCS_RX_BASIC_BASE_ADDR, 0x1b, 19, 0, 0x0 },
};
NEW_CHIP_REG test_measure_max_0_reg[] =
{
	{ TEST_PCS_RX_MEASURE_MAX_0_0, "measure_max_0_0", PCS_RX_BASIC_BASE_ADDR, 0x1c, 8, 0, 0x0 },
	{ TEST_PCS_RX_MEASURE_MAX_0_1, "measure_max_0_1", PCS_RX_BASIC_BASE_ADDR, 0x1c, 17, 9, 0x0 },
};
NEW_CHIP_REG test_measure_max_1_reg[] =
{
	{ TEST_PCS_RX_MEASURE_MAX_1_0, "measure_max_1_0", PCS_RX_BASIC_BASE_ADDR, 0x1d, 8, 0, 0x0 },
	{ TEST_PCS_RX_MEASURE_MAX_1_1, "measure_max_1_1", PCS_RX_BASIC_BASE_ADDR, 0x1d, 17, 9, 0x0 },
};
NEW_CHIP_REG test_measure_max_2_reg[] =
{
	{ TEST_PCS_RX_MEASURE_MAX_2_0, "measure_max_2_0", PCS_RX_BASIC_BASE_ADDR, 0x1e, 8, 0, 0x0 },
	{ TEST_PCS_RX_MEASURE_MAX_2_1, "measure_max_2_1", PCS_RX_BASIC_BASE_ADDR, 0x1e, 17, 9, 0x0 },
};
NEW_CHIP_REG test_measure_max_3_reg[] =
{
	{ TEST_PCS_RX_MEASURE_MAX_3_0, "measure_max_3_0", PCS_RX_BASIC_BASE_ADDR, 0x1f, 8, 0, 0x0 },
	{ TEST_PCS_RX_MEASURE_MAX_3_1, "measure_max_3_1", PCS_RX_BASIC_BASE_ADDR, 0x1f, 17, 9, 0x0 },
};
NEW_CHIP_REG test_word_lock_alm_0_reg[] =
{
	{ TEST_PCS_RX_WORD_LOCK_ALM_0, "word_lock_alm_0", PCS_RX_BASIC_BASE_ADDR, 0x50, 19, 0, 0x0 },
};
NEW_CHIP_REG test_word_lock_alm_1_reg[] =
{
	{ TEST_PCS_RX_WORD_LOCK_ALM_1, "word_lock_alm_1", PCS_RX_BASIC_BASE_ADDR, 0x51, 19, 0, 0x0 },
};
NEW_CHIP_REG test_word_error_alm_0_reg[] =
{
	{ TEST_PCS_RX_WORD_ERROR_ALM_0, "word_error_alm_0", PCS_RX_BASIC_BASE_ADDR, 0x52, 19, 0, 0x0 },
};
NEW_CHIP_REG test_word_error_alm_1_reg[] =
{
	{ TEST_PCS_RX_WORD_ERROR_ALM_1, "word_error_alm_1", PCS_RX_BASIC_BASE_ADDR, 0x53, 19, 0, 0x0 },
};
NEW_CHIP_REG test_am_lock_alm_0_reg[] =
{
	{ TEST_PCS_RX_AM_LOCK_ALM_0, "am_lock_alm_0", PCS_RX_BASIC_BASE_ADDR, 0x54, 19, 0, 0x0 },
};
NEW_CHIP_REG test_am_lock_alm_1_reg[] =
{
	{ TEST_PCS_RX_AM_LOCK_ALM_1, "am_lock_alm_1", PCS_RX_BASIC_BASE_ADDR, 0x55, 19, 0, 0x0 },
};
NEW_CHIP_REG test_am_invalid_alm_0_reg[] =
{
	{ TEST_PCS_RX_AM_INVALID_ALM_0, "am_invalid_alm_0", PCS_RX_BASIC_BASE_ADDR, 0x56, 19, 0, 0x0 },
};
NEW_CHIP_REG test_am_invalid_alm_1_reg[] =
{
	{ TEST_PCS_RX_AM_INVALID_ALM_1, "am_invalid_alm_1", PCS_RX_BASIC_BASE_ADDR, 0x57, 19, 0, 0x0 },
};
NEW_CHIP_REG test_bip_error_0_reg[] =
{
	{ TEST_PCS_RX_BIP_ERROR_0, "bip_error_0", PCS_RX_BASIC_BASE_ADDR, 0x58, 19, 0, 0x0 },
};
NEW_CHIP_REG test_bip_error_1_reg[] =
{
	{ TEST_PCS_RX_BIP_ERROR_1, "bip_error_1", PCS_RX_BASIC_BASE_ADDR, 0x59, 19, 0, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_basic_alm_reg[] =
{
	{ TEST_PCS_RX_LINK_DOWN_ALM, "link_down_alm", PCS_RX_BASIC_BASE_ADDR, 0x5a, 3, 0, 0x0 },
	{ TEST_PCS_RX_DROP_ADJUSTMENTS, "drop_adjustments", PCS_RX_BASIC_BASE_ADDR, 0x5a, 7, 4, 0x0 },
	{ TEST_PCS_RX_HI_BER, "hi_ber", PCS_RX_BASIC_BASE_ADDR, 0x5a, 11, 8, 0x0 },
	{ TEST_PCS_RX_LANES_DESKEW_ALM, "lanes_deskew_alm", PCS_RX_BASIC_BASE_ADDR, 0x5a, 15, 12, 0x0 },
	{ TEST_PCS_RX_CLK_READY_ALM, "rx_clk_ready_alm", PCS_RX_BASIC_BASE_ADDR, 0x5a, 23, 16, 0x0 },
	{ TEST_PCS_RX_257DEC_ALM, "rx_257dec_alm", PCS_RX_BASIC_BASE_ADDR, 0x5a, 27, 24, 0x0 },
	{ TEST_PCS_RX_BLK_TF_ALM, "rx_blk_tf_alm", PCS_RX_BASIC_BASE_ADDR, 0x5a, 31, 28, 0x0 },
};
NEW_CHIP_REG test_fifo_alm_reg[] =
{
	{ TEST_PCS_RX_OVERFLOW, "overflow", PCS_RX_BASIC_BASE_ADDR, 0x5b, 3, 0, 0x0 },
	{ TEST_PCS_RX_UNDERFLOW, "underflow", PCS_RX_BASIC_BASE_ADDR, 0x5b, 7, 4, 0x0 },
	{ TEST_PCS_RX_RS_DEC_FULL_528TO330, "rs_dec_full_528to330", PCS_RX_BASIC_BASE_ADDR, 0x5b, 9, 8, 0x0 },
	{ TEST_PCS_RX_RS_DEC_FULL_320TO257, "rs_dec_full_320to257", PCS_RX_BASIC_BASE_ADDR, 0x5b, 13, 10, 0x0 },
	{ TEST_PCS_RX_RS_DEC_IN_FIFO_FULL, "rs_dec_in_fifo_full", PCS_RX_BASIC_BASE_ADDR, 0x5b, 17, 14, 0x0 },
	{ TEST_PCS_RX_RS_DEC_OUT_FIFO_FULL, "rs_dec_out_fifo_full", PCS_RX_BASIC_BASE_ADDR, 0x5b, 21, 18, 0x0 },
	{ TEST_PCS_RX_RS_DEC_OUT_FIFO_EMPTY, "rs_dec_out_fifo_empty", PCS_RX_BASIC_BASE_ADDR, 0x5b, 25, 22, 0x0 },
};
NEW_CHIP_REG test_time_fifo_alm_reg[] =
{
	{ TEST_PCS_RX_TIME_FIFO_EMPTY, "time_fifo_empty", PCS_RX_BASIC_BASE_ADDR, 0x5c, 3, 0, 0x0 },
	{ TEST_PCS_RX_TIME_FIFO_FULL, "time_fifo_full", PCS_RX_BASIC_BASE_ADDR, 0x5c, 7, 4, 0x0 },
};
NEW_CHIP_REG test_fec_cw_uncorr_alm_reg[] =
{
	{ TEST_PCS_RX_FEC_CW_UNCORR_ALM, "fec_cw_uncorr_alm", PCS_RX_BASIC_BASE_ADDR, 0x5d, 3, 0, 0x0 },
};
NEW_CHIP_REG test_fault_status_reg[] =
{
	{ TEST_PCS_RX_LOCAL_FAULT_STATUS, "local_fault_status", PCS_RX_BASIC_BASE_ADDR, 0x5e, 3, 0, 0x0 },
	{ TEST_PCS_RX_REMOTE_FAULT_STATUS, "remote_fault_status", PCS_RX_BASIC_BASE_ADDR, 0x5e, 7, 4, 0x0 },
};
NEW_CHIP_REG test_dec_abnormal_reg[] =
{
	{ TEST_PCS_RX_DEC_ABNORMAL0_0, "dec_abnormal0_0", PCS_RX_BASIC_BASE_ADDR, 0x5f, 0, 0, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL1_0, "dec_abnormal1_0", PCS_RX_BASIC_BASE_ADDR, 0x5f, 1, 1, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL2_0, "dec_abnormal2_0", PCS_RX_BASIC_BASE_ADDR, 0x5f, 2, 2, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL3_0, "dec_abnormal3_0", PCS_RX_BASIC_BASE_ADDR, 0x5f, 3, 3, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL0_1, "dec_abnormal0_1", PCS_RX_BASIC_BASE_ADDR, 0x5f, 4, 4, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL1_1, "dec_abnormal1_1", PCS_RX_BASIC_BASE_ADDR, 0x5f, 5, 5, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL2_1, "dec_abnormal2_1", PCS_RX_BASIC_BASE_ADDR, 0x5f, 6, 6, 0x0 },
	{ TEST_PCS_RX_DEC_ABNORMAL3_1, "dec_abnormal3_1", PCS_RX_BASIC_BASE_ADDR, 0x5f, 7, 7, 0x0 },
};
NEW_CHIP_REG test_fec_ser_alm_sf_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_ALM_SF_0_0, "fec_ser_alm_sf_0_0", PCS_RX_BASIC_BASE_ADDR, 0x97, 0, 0, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_1_0, "fec_ser_alm_sf_1_0", PCS_RX_BASIC_BASE_ADDR, 0x97, 1, 1, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_2_0, "fec_ser_alm_sf_2_0", PCS_RX_BASIC_BASE_ADDR, 0x97, 2, 2, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_3_0, "fec_ser_alm_sf_3_0", PCS_RX_BASIC_BASE_ADDR, 0x97, 3, 3, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_0_1, "fec_ser_alm_sf_0_1", PCS_RX_BASIC_BASE_ADDR, 0x97, 4, 4, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_1_1, "fec_ser_alm_sf_1_1", PCS_RX_BASIC_BASE_ADDR, 0x97, 5, 5, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_2_1, "fec_ser_alm_sf_2_1", PCS_RX_BASIC_BASE_ADDR, 0x97, 6, 6, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SF_3_1, "fec_ser_alm_sf_3_1", PCS_RX_BASIC_BASE_ADDR, 0x97, 7, 7, 0x0 },
};
NEW_CHIP_REG test_fec_ser_alm_sd_reg[] =
{
	{ TEST_PCS_RX_FEC_SER_ALM_SD_0_0, "fec_ser_alm_sd_0_0", PCS_RX_BASIC_BASE_ADDR, 0x98, 0, 0, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_1_0, "fec_ser_alm_sd_1_0", PCS_RX_BASIC_BASE_ADDR, 0x98, 1, 1, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_2_0, "fec_ser_alm_sd_2_0", PCS_RX_BASIC_BASE_ADDR, 0x98, 2, 2, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_3_0, "fec_ser_alm_sd_3_0", PCS_RX_BASIC_BASE_ADDR, 0x98, 3, 3, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_0_1, "fec_ser_alm_sd_0_1", PCS_RX_BASIC_BASE_ADDR, 0x98, 4, 4, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_1_1, "fec_ser_alm_sd_1_1", PCS_RX_BASIC_BASE_ADDR, 0x98, 5, 5, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_2_1, "fec_ser_alm_sd_2_1", PCS_RX_BASIC_BASE_ADDR, 0x98, 6, 6, 0x0 },
	{ TEST_PCS_RX_FEC_SER_ALM_SD_3_1, "fec_ser_alm_sd_3_1", PCS_RX_BASIC_BASE_ADDR, 0x98, 7, 7, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_lpi_alm_reg[] =
{
	{ TEST_PCS_RX_LPI_ALM, "lpi_alm", PCS_RX_BASIC_BASE_ADDR, 0x9f, 3, 0, 0x0 },
};
*/

/*CPU*/
NEW_CHIP_REG test_cpu2ptp_wdata_reg[] =
{
	{ TEST_C2P_WDATA, "c2p_wdata", CPU_BASE_ADDR, 0x0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_cpu2ptp_finish_reg[] =
{
	{ TEST_C2P_FINISH, "c2p_finish", CPU_BASE_ADDR, 0x1, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_finish_reg[] =
{
	{ TEST_P2C_FINISH, "p2c_finish", CPU_BASE_ADDR, 0x2, 0, 0, 0x0 },
};
NEW_CHIP_REG test_cpu2ptp_frm_cnt_reg[] =
{
	{ TEST_C2P_FRM_CNT, "c2p_frm_cnt", CPU_BASE_ADDR, 0x3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_frm_cnt_reg[] =
{
	{ TEST_P2C_FRM_CNT, "p2c_frm_cnt", CPU_BASE_ADDR, 0x4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_cpu2ptp_cstate_reg[] =
{
	{ TEST_C2P_CSTATE, "c2p_cstate", CPU_BASE_ADDR, 0x5, 1, 0, 0x0 },
};
NEW_CHIP_REG test_cpu2ptp_bank_full_reg[] =
{
	{ TEST_C2P_BANK_FULL, "c2p_bank_full", CPU_BASE_ADDR, 0x6, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_rdata_reg[] =
{
	{ TEST_P2C_RDATA, "p2c_rdata", CPU_BASE_ADDR, 0x7, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_cstate_reg[] =
{
	{ TEST_P2C_CSTATE, "p2c_cstate", CPU_BASE_ADDR, 0x8, 1, 0, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_bank_empty_reg[] =
{
	{ TEST_P2C_BANK_EMPTY, "p2c_bank_empty", CPU_BASE_ADDR, 0x9, 0, 0, 0x0 },
};
NEW_CHIP_REG test_cpu2ptp_len_err_reg[] =
{
	{ TEST_C2P_DSCP_ERR, "c2p_dscp_err", CPU_BASE_ADDR, 0xa, 0, 0, 0x0 },
	{ TEST_C2P_LEN_ERR, "c2p_len_err", CPU_BASE_ADDR, 0xa, 1, 1, 0x0 },
	{ TEST_C2P_RAM_READ_PKT_ERR, "c2p_ram_read_pkt_err", CPU_BASE_ADDR, 0xa, 2, 2, 0x0 },
};
NEW_CHIP_REG test_ptp2cpu_len_err_reg[] =
{
	{ TEST_P2C_PTP_ERR, "p2c_ptp_err", CPU_BASE_ADDR, 0xb, 0, 0, 0x0 },
	{ TEST_P2C_LEN_ERR, "p2c_len_err", CPU_BASE_ADDR, 0xb, 1, 1, 0x0 },
};


NEW_CHIP_REG test_ieee1588_global_cfg_reg[] =
{
	{ TEST_GLOBAL_PTP_1588_MODE, "ptp_1588_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 1, 0, 0x2 },
	{ TEST_GLOBAL_RX_TIMESTAMP_MODE, "rx_timestamp_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 2, 2, 0x0 },
	{ TEST_GLOBAL_RX_TS_SRC_MODE, "rx_ts_src_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 3, 3, 0x0 },
	{ TEST_GLOBAL_RX_TS_SAMPLE_MODE, "rx_ts_sample_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 4, 4, 0x0 },
	{ TEST_GLOBAL_TX_TS_SRC_MODE, "tx_ts_src_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 5, 5, 0x0 },
	{ TEST_GLOBAL_TX_TS_SAMPLE_MODE, "tx_ts_sample_mode", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 6, 6, 0x0 },
	{ TEST_GLOBAL_CF_THRESHOLD_EN, "cf_threshold_en", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 7, 7, 0x0 },
	{ TEST_GLOBAL_TX_TEST_EN, "tx_test_en", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 8, 8, 0x0 },
	{ TEST_GLOBAL_ENABLE_RX_FAULT, "enable_rx_fault", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 9, 9, 0x0 },
	{ TEST_GLOBAL_REMOTE_FAULT_CONFIG, "remote_fault_config", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 11, 10, 0x0 },
	{ TEST_GLOBAL_LOCAL_FAULT_CONFIG, "local_fault_config", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 13, 12, 0x0 },
	{ TEST_GLOBAL_MANUAL_RF_INSERT, "manual_rf_insert", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 14, 14, 0x0 },
	{ TEST_GLOBAL_MANUAL_LF_INSERT, "manual_lf_insert", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_GLOBAL_MANUAL_IDLE_INSERT, "manual_idle_insert", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 16, 16, 0x0 },
	{ TEST_GLOBAL_DECODE_SEL, "decode_sel", GLOBAL_IEEE1588_BASE_ADDR, 0x0, 17, 17, 0x0 },
};
NEW_CHIP_REG test_ptp_ts_cfg_reg[] =
{
	{ TEST_GLOBAL_RX_PORT_EN, "rx_port_en", GLOBAL_IEEE1588_BASE_ADDR, 0x1, 7, 0, 0xff },
	{ TEST_GLOBAL_TX_PORT_EN, "tx_port_en", GLOBAL_IEEE1588_BASE_ADDR, 0x1, 15, 8, 0xff },
	{ TEST_GLOBAL_TX2RX_PORT_EN, "tx2rx_port_en", GLOBAL_IEEE1588_BASE_ADDR, 0x1, 23, 16, 0xff },
};
NEW_CHIP_REG test_ptp_glb_int1_int_reg[] =
{
	{ TEST_GLOBAL_PTP_RX0_OH_INT, "ptp_rx0_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 0, 0, 0x0 },
	{ TEST_GLOBAL_PTP_RX1_OH_INT, "ptp_rx1_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 1, 1, 0x0 },
	{ TEST_GLOBAL_PTP_RX2_OH_INT, "ptp_rx2_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 2, 2, 0x0 },
	{ TEST_GLOBAL_PTP_RX3_OH_INT, "ptp_rx3_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 3, 3, 0x0 },
	{ TEST_GLOBAL_PTP_RX4_OH_INT, "ptp_rx4_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 4, 4, 0x0 },
	{ TEST_GLOBAL_PTP_RX5_OH_INT, "ptp_rx5_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 5, 5, 0x0 },
	{ TEST_GLOBAL_PTP_RX6_OH_INT, "ptp_rx6_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 6, 6, 0x0 },
	{ TEST_GLOBAL_PTP_RX7_OH_INT, "ptp_rx7_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 7, 7, 0x0 },
	{ TEST_GLOBAL_PTP_RX8_OH_INT, "ptp_rx8_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 8, 8, 0x0 },
	{ TEST_GLOBAL_PTP_RX9_OH_INT, "ptp_rx9_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 9, 9, 0x0 },
	{ TEST_GLOBAL_PTP_RX10_OH_INT, "ptp_rx10_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 10, 10, 0x0 },
	{ TEST_GLOBAL_PTP_RX11_OH_INT, "ptp_rx11_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 11, 11, 0x0 },
	{ TEST_GLOBAL_PTP_RX12_OH_INT, "ptp_rx12_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 12, 12, 0x0 },
	{ TEST_GLOBAL_PTP_RX13_OH_INT, "ptp_rx13_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 13, 13, 0x0 },
	{ TEST_GLOBAL_PTP_RX14_OH_INT, "ptp_rx14_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 14, 14, 0x0 },
	{ TEST_GLOBAL_PTP_RX15_OH_INT, "ptp_rx15_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 15, 15, 0x0 },
	{ TEST_GLOBAL_PTP_TX0_OH_INT, "ptp_tx0_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 16, 16, 0x0 },
	{ TEST_GLOBAL_PTP_TX1_OH_INT, "ptp_tx1_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 17, 17, 0x0 },
	{ TEST_GLOBAL_PTP_TX2_OH_INT, "ptp_tx2_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 18, 18, 0x0 },
	{ TEST_GLOBAL_PTP_TX3_OH_INT, "ptp_tx3_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 19, 19, 0x0 },
	{ TEST_GLOBAL_PTP_TX4_OH_INT, "ptp_tx4_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 20, 20, 0x0 },
	{ TEST_GLOBAL_PTP_TX5_OH_INT, "ptp_tx5_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 21, 21, 0x0 },
	{ TEST_GLOBAL_PTP_TX6_OH_INT, "ptp_tx6_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 22, 22, 0x0 },
	{ TEST_GLOBAL_PTP_TX7_OH_INT, "ptp_tx7_oh_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 23, 23, 0x0 },
	{ TEST_GLOBAL_CCU_RX_INT, "ccu_rx_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 24, 24, 0x0 },
	{ TEST_GLOBAL_CCU_TX_INT, "ccu_tx_int", GLOBAL_IEEE1588_BASE_ADDR, 0x2, 25, 25, 0x0 },
};
NEW_CHIP_REG test_ptp_glb_int1_int_mask_reg[] =
{
	{ TEST_GLOBAL_PTP_RX0_OH_INT_MASK, "ptp_rx0_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_GLOBAL_PTP_RX1_OH_INT_MASK, "ptp_rx1_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 1, 1, 0x0 },
	{ TEST_GLOBAL_PTP_RX2_OH_INT_MASK, "ptp_rx2_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 2, 2, 0x0 },
	{ TEST_GLOBAL_PTP_RX3_OH_INT_MASK, "ptp_rx3_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 3, 3, 0x0 },
	{ TEST_GLOBAL_PTP_RX4_OH_INT_MASK, "ptp_rx4_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 4, 4, 0x0 },
	{ TEST_GLOBAL_PTP_RX5_OH_INT_MASK, "ptp_rx5_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 5, 5, 0x0 },
	{ TEST_GLOBAL_PTP_RX6_OH_INT_MASK, "ptp_rx6_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 6, 6, 0x0 },
	{ TEST_GLOBAL_PTP_RX7_OH_INT_MASK, "ptp_rx7_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 7, 7, 0x0 },
	{ TEST_GLOBAL_PTP_RX8_OH_INT_MASK, "ptp_rx8_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 8, 8, 0x0 },
	{ TEST_GLOBAL_PTP_RX9_OH_INT_MASK, "ptp_rx9_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 9, 9, 0x0 },
	{ TEST_GLOBAL_PTP_RX10_OH_INT_MASK, "ptp_rx10_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 10, 10, 0x0 },
	{ TEST_GLOBAL_PTP_RX11_OH_INT_MASK, "ptp_rx11_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 11, 11, 0x0 },
	{ TEST_GLOBAL_PTP_RX12_OH_INT_MASK, "ptp_rx12_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 12, 12, 0x0 },
	{ TEST_GLOBAL_PTP_RX13_OH_INT_MASK, "ptp_rx13_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 13, 13, 0x0 },
	{ TEST_GLOBAL_PTP_RX14_OH_INT_MASK, "ptp_rx14_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 14, 14, 0x0 },
	{ TEST_GLOBAL_PTP_RX15_OH_INT_MASK, "ptp_rx15_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 15, 15, 0x0 },
	{ TEST_GLOBAL_PTP_TX0_OH_INT_MASK, "ptp_tx0_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 16, 16, 0x0 },
	{ TEST_GLOBAL_PTP_TX1_OH_INT_MASK, "ptp_tx1_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 17, 17, 0x0 },
	{ TEST_GLOBAL_PTP_TX2_OH_INT_MASK, "ptp_tx2_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 18, 18, 0x0 },
	{ TEST_GLOBAL_PTP_TX3_OH_INT_MASK, "ptp_tx3_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 19, 19, 0x0 },
	{ TEST_GLOBAL_PTP_TX4_OH_INT_MASK, "ptp_tx4_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 20, 20, 0x0 },
	{ TEST_GLOBAL_PTP_TX5_OH_INT_MASK, "ptp_tx5_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 21, 21, 0x0 },
	{ TEST_GLOBAL_PTP_TX6_OH_INT_MASK, "ptp_tx6_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 22, 22, 0x0 },
	{ TEST_GLOBAL_PTP_TX7_OH_INT_MASK, "ptp_tx7_oh_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 23, 23, 0x0 },
	{ TEST_GLOBAL_CCU_RX_INT_MASK, "ccu_rx_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 24, 24, 0x0 },
	{ TEST_GLOBAL_CCU_TX_INT_MASK, "ccu_tx_int_mask", GLOBAL_IEEE1588_BASE_ADDR, 0x3, 25, 25, 0x0 },
};

NEW_CHIP_REG test_ccu_rx_ssm_req_reg[] =
{
	{ TEST_CCU_RX_SSM_REQ, "ccu_rx_ssm_req", CCU_RX_BASE_ADDR, 0x19, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_frame_cnt_reg[] =
{
	{ TEST_CCU_RX_FRAME_CNT, "ccu_rx_frame_cnt", CCU_RX_BASE_ADDR, 0x0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_drop_cnt_reg[] =
{
	{ TEST_CCU_RX_DROP_CNT, "ccu_rx_drop_cnt", CCU_RX_BASE_ADDR, 0x1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_filter_cnt_reg[] =
{
	{ TEST_CCU_RX_FILTER_CNT, "ccu_rx_filter_cnt", CCU_RX_BASE_ADDR, 0x2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_frm_err_cnt_reg[] =
{
	{ TEST_CCU_RX_FRM_ERR_CNT, "ccu_rx_frm_err_cnt", CCU_RX_BASE_ADDR, 0x3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_len_err_cnt_reg[] =
{
	{ TEST_CCU_RX_LEN_ERR_CNT, "ccu_rx_len_err_cnt", CCU_RX_BASE_ADDR, 0x4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_pkt_in_num_reg[] =
{
	{ TEST_CCU_RX_PKT_IN_NUM, "ccu_rx_pkt_in_num", CCU_RX_BASE_ADDR, 0x8, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_sync_cnt_reg[] =
{
	{ TEST_CCU_RX_SYNC_CNT, "ccu_rx_sync_cnt", CCU_RX_BASE_ADDR, 0xd, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_delay_req_cnt_reg[] =
{
	{ TEST_CCU_RX_DELAY_REQ_CNT, "ccu_rx_delay_req_cnt", CCU_RX_BASE_ADDR, 0xe, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_pdelay_req_cnt_reg[] =
{
	{ TEST_CCU_RX_PDELAY_REQ_CNT, "ccu_rx_pdelay_req_cnt", CCU_RX_BASE_ADDR, 0xf, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_pdelay_resp_cnt_reg[] =
{
	{ TEST_CCU_RX_PDELAY_RESP_CNT, "ccu_rx_pdelay_resp_cnt", CCU_RX_BASE_ADDR, 0x10, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_follow_up_cnt_reg[] =
{
	{ TEST_CCU_RX_FOLLOW_UP_CNT, "ccu_rx_follow_up_cnt", CCU_RX_BASE_ADDR, 0x11, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_delay_resp_cnt_reg[] =
{
	{ TEST_CCU_RX_DELAY_RESP_CNT, "ccu_rx_delay_resp_cnt", CCU_RX_BASE_ADDR, 0x12, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_pdelay_follow_cnt_reg[] =
{
	{ TEST_CCU_RX_PDELAY_FOLLOW_CNT, "ccu_rx_pdelay_follow_cnt", CCU_RX_BASE_ADDR, 0x13, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_announce_cnt_reg[] =
{
	{ TEST_CCU_RX_ANNOUNCE_CNT, "ccu_rx_announce_cnt", CCU_RX_BASE_ADDR, 0x14, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_signaling_cnt_reg[] =
{
	{ TEST_CCU_RX_SIGNALING_CNT, "ccu_rx_signaling_cnt", CCU_RX_BASE_ADDR, 0x15, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_management_cnt_reg[] =
{
	{ TEST_CCU_RX_MANAGEMENT_CNT, "ccu_rx_management_cnt", CCU_RX_BASE_ADDR, 0x16, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_ssm_cnt_reg[] =
{
	{ TEST_CCU_RX_SSM_CNT, "ccu_rx_ssm_cnt", CCU_RX_BASE_ADDR, 0x17, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_resv_cnt_reg[] =
{
	{ TEST_CCU_RX_RESV_CNT, "ccu_rx_resv_cnt", CCU_RX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_decode_err_cnt_reg[] =
{
	{ TEST_CCU_RX_DECODE_ERR_CNT, "ccu_rx_decode_err_cnt", CCU_RX_BASE_ADDR, 0x1c, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_decode_spkt_byte_cnt_reg[] =
{
	{ TEST_CCU_RX_DECODE_SPKT_BYTE_CNT, "ccu_rx_decode_spkt_byte_cnt", CCU_RX_BASE_ADDR, 0x1d, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_decode_spkt_num_cnt_reg[] =
{
	{ TEST_CCU_RX_DECODE_SPKT_NUM_CNT, "ccu_rx_decode_spkt_num_cnt", CCU_RX_BASE_ADDR, 0x1e, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_ssm_message0_reg[] =
{
	{ TEST_CCU_RX_SSM_MESSAGE0, "ccu_rx_ssm_message0", CCU_RX_BASE_ADDR, 0x18, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_ssm_message1_reg[] =
{
	{ TEST_CCU_RX_SSM_MESSAGE1, "ccu_rx_ssm_message1", CCU_RX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_alarm_reg[] =
{
	{ TEST_CCU_RX_INPORT_FIFO_FULL, "ccu_rx_inport_fifo_full", CCU_RX_BASE_ADDR, 0x5, 0, 0, 0x0 },
	{ TEST_CCU_RX_OVER_LENGTH, "ccu_rx_over_length", CCU_RX_BASE_ADDR, 0x5, 1, 1, 0x0 },
	{ TEST_CCU_RX_DECODE_ERR, "ccu_rx_decode_err", CCU_RX_BASE_ADDR, 0x5, 2, 2, 0x0 },
	{ TEST_CCU_RX_OH_BUFF_FULL, "ccu_rx_oh_buff_full", CCU_RX_BASE_ADDR, 0x5, 3, 3, 0x0 },
	{ TEST_CCU_RX_DECODE_EOP_ABNOR, "ccu_rx_decode_eop_abnor", CCU_RX_BASE_ADDR, 0x5, 4, 4, 0x0 },
	{ TEST_CCU_RX_DECODE_REMOTE_FAULT, "ccu_rx_decode_remote_fault", CCU_RX_BASE_ADDR, 0x5, 5, 5, 0x0 },
	{ TEST_CCU_RX_DECODE_LOCAL_FAULT, "ccu_rx_decode_local_fault", CCU_RX_BASE_ADDR, 0x5, 6, 6, 0x0 },
	{ TEST_CCU_RX_LEN_MISMATCH, "ccu_rx_len_mismatch", CCU_RX_BASE_ADDR, 0x5, 7, 7, 0x0 },
	{ TEST_CCU_RX_INPUT_NO_EOP, "ccu_rx_input_no_eop", CCU_RX_BASE_ADDR, 0x5, 8, 8, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_int_reg[] =
{
	{ TEST_CCU_RX_INPORT_FIFO_FULL_INT, "ccu_rx_inport_fifo_full_int", CCU_RX_BASE_ADDR, 0x6, 1, 0, 0x0 },
	{ TEST_CCU_RX_OVER_LENGTH_INT, "ccu_rx_over_length_int", CCU_RX_BASE_ADDR, 0x6, 3, 2, 0x0 },
	{ TEST_CCU_RX_DECODE_ERR_INT, "ccu_rx_decode_err_int", CCU_RX_BASE_ADDR, 0x6, 5, 4, 0x0 },
	{ TEST_CCU_RX_OH_BUFF_FULL_INT, "ccu_rx_oh_buff_full_int", CCU_RX_BASE_ADDR, 0x6, 7, 6, 0x0 },
	{ TEST_CCU_RX_DECODE_EOP_ABNOR_INT, "ccu_rx_decode_eop_abnor_int", CCU_RX_BASE_ADDR, 0x6, 9, 8, 0x0 },
	{ TEST_CCU_RX_INPUT_NO_EOP_INT, "ccu_rx_input_no_eop_int", CCU_RX_BASE_ADDR, 0x6, 11, 10, 0x0 },
};
NEW_CHIP_REG test_ccu_rx_int_mask_reg[] =
{
	{ TEST_CCU_RX_INPORT_FIFO_FULL_INT_MASK, "ccu_rx_inport_fifo_full_int_mask", CCU_RX_BASE_ADDR, 0x7, 1, 0, 0x0 },
	{ TEST_CCU_RX_OVER_LENGTH_INT_MASK, "ccu_rx_over_length_int_mask", CCU_RX_BASE_ADDR, 0x7, 3, 2, 0x0 },
	{ TEST_CCU_RX_DECODE_ERR_INT_MASK, "ccu_rx_decode_err_int_mask", CCU_RX_BASE_ADDR, 0x7, 5, 4, 0x0 },
	{ TEST_CCU_RX_OH_BUFF_FULL_INT_MASK, "ccu_rx_oh_buff_full_int_mask", CCU_RX_BASE_ADDR, 0x7, 7, 6, 0x0 },
	{ TEST_CCU_RX_DECODE_EOP_ABNOR_INT_MASK, "ccu_rx_decode_eop_abnor_int_mask", CCU_RX_BASE_ADDR, 0x7, 9, 8, 0x0 },
	{ TEST_CCU_RX_INPUT_NO_EOP_INT_MASK, "ccu_rx_input_no_eop_int_mask", CCU_RX_BASE_ADDR, 0x7, 11, 10, 0x0 },
};

/*RATEADP*/
NEW_CHIP_REG test_fifo_level_cfg_reg[] =
{
	{ TEST_RATEADP_LOW_LVL, "low_lvl", RATEADP_BASE_ADDR, 0x0, 7, 0, 0x14 },
	{ TEST_RATEADP_STA_LVL, "sta_lvl", RATEADP_BASE_ADDR, 0x0, 15, 8, 0x32 },
	{ TEST_RATEADP_HIG_LVL, "hig_lvl", RATEADP_BASE_ADDR, 0x0, 23, 16, 0x50 },
	{ TEST_RATEADP_RSK_LVL, "rsk_lvl", RATEADP_BASE_ADDR, 0x0, 31, 24, 0x64 },
};
NEW_CHIP_REG test_block_type_reg[] =
{
	{ TEST_RATEADP_BLOCK_TYPE, "block_type", RATEADP_BASE_ADDR, 0x56, 1, 0, 0x0 },
};
NEW_CHIP_REG test_clr_hist_reg[] =
{
	{ TEST_RATEADP_CHID_LVL_HIST, "chid_lvl_hist", RATEADP_BASE_ADDR, 0x57, 6, 0, 0x0 },
	{ TEST_RATEADP_CLR_HIST, "clr_hist", RATEADP_BASE_ADDR, 0x57, 8, 8, 0x0 },
};
NEW_CHIP_REG test_ind_sel_reg[] =
{
	{ TEST_RATEADP_IND_SEL, "ind_sel", RATEADP_BASE_ADDR, 0x59, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ins_del_gap_reg[] =
{
	{ TEST_RATEADP_INS_GAP, "ins_gap", RATEADP_BASE_ADDR, 0x5a, 8, 0, 0x3f },
	{ TEST_RATEADP_DEL_GAP, "del_gap", RATEADP_BASE_ADDR, 0x5a, 24, 16, 0x7 },
};
NEW_CHIP_REG test_blk_num_cfg_reg[] =
{
	{ TEST_RATEADP_BLK_NUM, "blk_num", RATEADP_BASE_ADDR, 0x5b, 4, 0, 0x0 },
	{ TEST_RATEADP_CHAN_EN, "chan_en", RATEADP_BASE_ADDR, 0x5b, 5, 5, 0x0 },
};
NEW_CHIP_REG test_map_reg_reg[] =
{
	{ TEST_RATEADP_MAP_SEQ, "map_seq", RATEADP_BASE_ADDR, 0xab, 3, 0, 0xf },
	{ TEST_RATEADP_MAP_CHID, "map_chid", RATEADP_BASE_ADDR, 0xab, 14, 8, 0x7f },
	{ TEST_RATEADP_MAP_EN, "map_en", RATEADP_BASE_ADDR, 0xab, 16, 16, 0x0 },
};
NEW_CHIP_REG test_drag_para_cfg_reg[] =
{
	{ TEST_RATEADP_CLR_PERIOD, "clr_period", RATEADP_BASE_ADDR, 0xfe, 11, 0, 0xfff },
	{ TEST_RATEADP_CNT_TO_LOW, "cnt_to_low", RATEADP_BASE_ADDR, 0xfe, 15, 12, 0x2 },
	{ TEST_RATEADP_DRAG_EN, "drag_en", RATEADP_BASE_ADDR, 0xfe, 16, 16, 0x1 },
};
NEW_CHIP_REG test_lvl_hist_reg[] =
{
	{ TEST_RATEADP_LOW_HIST, "low_hist", RATEADP_BASE_ADDR, 0x58, 7, 0, 0x0 },
	{ TEST_RATEADP_HIG_HIST, "hig_hist", RATEADP_BASE_ADDR, 0x58, 15, 8, 0x0 },
};
NEW_CHIP_REG test_rateadp_full_reg[] =
{
	{ TEST_RATEADP_RATEADP_FULL_0, "rateadp_full_0", RATEADP_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_RATEADP_RATEADP_FULL_1, "rateadp_full_1", RATEADP_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_RATEADP_RATEADP_FULL_2, "rateadp_full_2", RATEADP_BASE_ADDR, 0x52, 15, 0, 0x0 },
};
NEW_CHIP_REG test_rateadp_empty_reg[] =
{
	{ TEST_RATEADP_RATEADP_EMPTY_0, "rateadp_empty_0", RATEADP_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_RATEADP_RATEADP_EMPTY_1, "rateadp_empty_1", RATEADP_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_RATEADP_RATEADP_EMPTY_2, "rateadp_empty_2", RATEADP_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_ram_overflow_reg[] =
{
	{ TEST_RATEADP_OVERFLOW_0, "overflow_0", RATEADP_BASE_ADDR, 0xfb, 31, 0, 0x0 },
	{ TEST_RATEADP_OVERFLOW_1, "overflow_1", RATEADP_BASE_ADDR, 0xfc, 31, 0, 0x0 },
	{ TEST_RATEADP_OVERFLOW_2, "overflow_2", RATEADP_BASE_ADDR, 0xfd, 15, 0, 0x0 },
};

/*cpb_egress*/
NEW_CHIP_REG test_sel_tb_en_reg[] =
{
	{ TEST_CPB_EGRESS_SEL_TB_EN, "sel_tb_en", CPB_EGRESS_BASE_ADDR, 0xf, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mon_en_eg_reg[] =
{
	{ TEST_CPB_EGRESS_MON_EN_EG_0, "mon_en_eg_0", CPB_EGRESS_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_MON_EN_EG_1, "mon_en_eg_1", CPB_EGRESS_BASE_ADDR, 0x14, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_MON_EN_EG_2, "mon_en_eg_2", CPB_EGRESS_BASE_ADDR, 0x15, 15, 0, 0x0 },
};
NEW_CHIP_REG test_sta_clr_ch_eg_reg[] =
{
	{ TEST_CPB_EGRESS_STA_CLR_CH_EG, "sta_clr_ch_eg", CPB_EGRESS_BASE_ADDR, 0x74, 6, 0, 0x3f },
};
NEW_CHIP_REG test_sar_pathdelay_chan_reg[] =
{
	{ TEST_CPB_EGRESS_DEBUG_CHAN, "debug_chan", CPB_EGRESS_BASE_ADDR, 0x7c, 6, 0, 0x0 },
};
NEW_CHIP_REG test_clr_eg_reg[] =
{
	{ TEST_CPB_EGRESS_CLR_EG, "clr_eg", CPB_EGRESS_BASE_ADDR, 0x0, 0, 0, 0x0 },
};
NEW_CHIP_REG test_sta_clr_eg_reg[] =
{
	{ TEST_CPB_EGRESS_STA_CLR_EG, "sta_clr_eg", CPB_EGRESS_BASE_ADDR, 0x7d, 0, 0, 0x0 },
	{ TEST_CPB_EGRESS_DEBUG_CLR, "debug_clr", CPB_EGRESS_BASE_ADDR, 0x7d, 1, 1, 0x0 },
};
NEW_CHIP_REG test_cnt_max_eg_reg[] =
{
	{ TEST_CPB_EGRESS_CNT_MAX_EG, "cnt_max_eg", CPB_EGRESS_BASE_ADDR, 0x20, 15, 0, 0x0 },
};
NEW_CHIP_REG test_cnt_depth_eg_reg[] =
{
	{ TEST_CPB_EGRESS_CNT_MIN_EG, "cnt_min_eg", CPB_EGRESS_BASE_ADDR, 0x70, 31, 16, 0xffff },
	{ TEST_CPB_EGRESS_CNT_DEPTH_EG, "cnt_depth_eg", CPB_EGRESS_BASE_ADDR, 0x70, 15, 0, 0x0 },
};
NEW_CHIP_REG test_sar_pathdelay_stat_reg[] =
{
	{ TEST_CPB_EGRESS_MIN_PATHDELAY, "min_pathdelay", CPB_EGRESS_BASE_ADDR, 0x7e, 15, 0, 0x0 },
	{ TEST_CPB_EGRESS_MAX_PATHDELAY, "max_pathdelay", CPB_EGRESS_BASE_ADDR, 0x7e, 31, 16, 0x0 },
};
NEW_CHIP_REG test_sar_pathdelay_real_reg[] =
{
	{ TEST_CPB_EGRESS_REAL_PATHDELAY, "real_pathdelay", CPB_EGRESS_BASE_ADDR, 0x7f, 15, 0, 0x0 },
	{ TEST_CPB_EGRESS_STA_CLR_DONE, "sta_clr_done", CPB_EGRESS_BASE_ADDR, 0x7f, 31, 31, 0x0 },
};
NEW_CHIP_REG test_sq_err_eg_reg[] =
{
	{ TEST_CPB_EGRESS_SQ_ERR_EG_0, "sq_err_eg_0", CPB_EGRESS_BASE_ADDR, 0x10, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_SQ_ERR_EG_1, "sq_err_eg_1", CPB_EGRESS_BASE_ADDR, 0x11, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_SQ_ERR_EG_2, "sq_err_eg_2", CPB_EGRESS_BASE_ADDR, 0x12, 15, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_ilk_bp_reg[] =
{
	{ TEST_CPB_EGRESS_CPB_ILK_BP_0, "cpb_ilk_bp_0", CPB_EGRESS_BASE_ADDR, 0x71, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_CPB_ILK_BP_1, "cpb_ilk_bp_1", CPB_EGRESS_BASE_ADDR, 0x72, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_CPB_ILK_BP_2, "cpb_ilk_bp_2", CPB_EGRESS_BASE_ADDR, 0x73, 15, 0, 0x0 },
};
NEW_CHIP_REG test_dly_fifo_state_reg[] =
{
	{ TEST_CPB_EGRESS_DLY_FIFO_STATE, "dly_fifo_state", CPB_EGRESS_BASE_ADDR, 0x75, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_DATA_RAM_ADDR_ALM, "data_ram_addr_alm", CPB_EGRESS_BASE_ADDR, 0x75, 2, 2, 0x0 },
};
NEW_CHIP_REG test_link_full_eg_reg[] =
{
	{ TEST_CPB_EGRESS_LINK_FULL_EG_0, "link_full_eg_0", CPB_EGRESS_BASE_ADDR, 0x76, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_LINK_FULL_EG_1, "link_full_eg_1", CPB_EGRESS_BASE_ADDR, 0x77, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_LINK_FULL_EG_2, "link_full_eg_2", CPB_EGRESS_BASE_ADDR, 0x78, 15, 0, 0x0 },
};
NEW_CHIP_REG test_link_empty_eg_reg[] =
{
	{ TEST_CPB_EGRESS_LINK_EMPTY_EG_0, "link_empty_eg_0", CPB_EGRESS_BASE_ADDR, 0x79, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_LINK_EMPTY_EG_1, "link_empty_eg_1", CPB_EGRESS_BASE_ADDR, 0x7a, 31, 0, 0x0 },
	{ TEST_CPB_EGRESS_LINK_EMPTY_EG_2, "link_empty_eg_2", CPB_EGRESS_BASE_ADDR, 0x7b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_cpb_eg0_int_reg[] =
{
	{ TEST_CPB_EGRESS_CH0_FULL_INT, "ch0_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH1_FULL_INT, "ch1_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH2_FULL_INT, "ch2_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH3_FULL_INT, "ch3_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH4_FULL_INT, "ch4_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH5_FULL_INT, "ch5_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH6_FULL_INT, "ch6_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH7_FULL_INT, "ch7_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH8_FULL_INT, "ch8_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH9_FULL_INT, "ch9_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH10_FULL_INT, "ch10_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH11_FULL_INT, "ch11_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH12_FULL_INT, "ch12_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH13_FULL_INT, "ch13_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH14_FULL_INT, "ch14_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH15_FULL_INT, "ch15_full_int", CPB_EGRESS_BASE_ADDR, 0x16, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg0_int_mask_reg[] =
{
	{ TEST_CPB_EGRESS_CH0_FULL_INT_MASK, "ch0_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH1_FULL_INT_MASK, "ch1_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH2_FULL_INT_MASK, "ch2_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH3_FULL_INT_MASK, "ch3_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH4_FULL_INT_MASK, "ch4_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH5_FULL_INT_MASK, "ch5_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH6_FULL_INT_MASK, "ch6_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH7_FULL_INT_MASK, "ch7_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH8_FULL_INT_MASK, "ch8_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH9_FULL_INT_MASK, "ch9_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH10_FULL_INT_MASK, "ch10_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH11_FULL_INT_MASK, "ch11_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH12_FULL_INT_MASK, "ch12_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH13_FULL_INT_MASK, "ch13_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH14_FULL_INT_MASK, "ch14_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH15_FULL_INT_MASK, "ch15_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x17, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg1_int_reg[] =
{
	{ TEST_CPB_EGRESS_CH16_FULL_INT, "ch16_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH17_FULL_INT, "ch17_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH18_FULL_INT, "ch18_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH19_FULL_INT, "ch19_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH20_FULL_INT, "ch20_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH21_FULL_INT, "ch21_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH22_FULL_INT, "ch22_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH23_FULL_INT, "ch23_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH24_FULL_INT, "ch24_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH25_FULL_INT, "ch25_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH26_FULL_INT, "ch26_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH27_FULL_INT, "ch27_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH28_FULL_INT, "ch28_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH29_FULL_INT, "ch29_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH30_FULL_INT, "ch30_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH31_FULL_INT, "ch31_full_int", CPB_EGRESS_BASE_ADDR, 0x18, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg1_int_mask_reg[] =
{
	{ TEST_CPB_EGRESS_CH16_FULL_INT_MASK, "ch16_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH17_FULL_INT_MASK, "ch17_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH18_FULL_INT_MASK, "ch18_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH19_FULL_INT_MASK, "ch19_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH20_FULL_INT_MASK, "ch20_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH21_FULL_INT_MASK, "ch21_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH22_FULL_INT_MASK, "ch22_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH23_FULL_INT_MASK, "ch23_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH24_FULL_INT_MASK, "ch24_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH25_FULL_INT_MASK, "ch25_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH26_FULL_INT_MASK, "ch26_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH27_FULL_INT_MASK, "ch27_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH28_FULL_INT_MASK, "ch28_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH29_FULL_INT_MASK, "ch29_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH30_FULL_INT_MASK, "ch30_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH31_FULL_INT_MASK, "ch31_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x19, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg2_int_reg[] =
{
	{ TEST_CPB_EGRESS_CH32_FULL_INT, "ch32_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH33_FULL_INT, "ch33_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH34_FULL_INT, "ch34_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH35_FULL_INT, "ch35_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH36_FULL_INT, "ch36_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH37_FULL_INT, "ch37_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH38_FULL_INT, "ch38_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH39_FULL_INT, "ch39_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH40_FULL_INT, "ch40_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH41_FULL_INT, "ch41_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH42_FULL_INT, "ch42_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH43_FULL_INT, "ch43_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH44_FULL_INT, "ch44_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH45_FULL_INT, "ch45_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH46_FULL_INT, "ch46_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH47_FULL_INT, "ch47_full_int", CPB_EGRESS_BASE_ADDR, 0x1a, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg2_int_mask_reg[] =
{
	{ TEST_CPB_EGRESS_CH32_FULL_INT_MASK, "ch32_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH33_FULL_INT_MASK, "ch33_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH34_FULL_INT_MASK, "ch34_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH35_FULL_INT_MASK, "ch35_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH36_FULL_INT_MASK, "ch36_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH37_FULL_INT_MASK, "ch37_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH38_FULL_INT_MASK, "ch38_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH39_FULL_INT_MASK, "ch39_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH40_FULL_INT_MASK, "ch40_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH41_FULL_INT_MASK, "ch41_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH42_FULL_INT_MASK, "ch42_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH43_FULL_INT_MASK, "ch43_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH44_FULL_INT_MASK, "ch44_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH45_FULL_INT_MASK, "ch45_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH46_FULL_INT_MASK, "ch46_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH47_FULL_INT_MASK, "ch47_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1b, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg3_int_reg[] =
{
	{ TEST_CPB_EGRESS_CH48_FULL_INT, "ch48_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH49_FULL_INT, "ch49_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH50_FULL_INT, "ch50_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH51_FULL_INT, "ch51_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH52_FULL_INT, "ch52_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH53_FULL_INT, "ch53_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH54_FULL_INT, "ch54_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH55_FULL_INT, "ch55_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH56_FULL_INT, "ch56_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH57_FULL_INT, "ch57_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH58_FULL_INT, "ch58_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH59_FULL_INT, "ch59_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH60_FULL_INT, "ch60_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH61_FULL_INT, "ch61_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH62_FULL_INT, "ch62_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH63_FULL_INT, "ch63_full_int", CPB_EGRESS_BASE_ADDR, 0x1c, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg3_int_mask_reg[] =
{
	{ TEST_CPB_EGRESS_CH48_FULL_INT_MASK, "ch48_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH49_FULL_INT_MASK, "ch49_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH50_FULL_INT_MASK, "ch50_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH51_FULL_INT_MASK, "ch51_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH52_FULL_INT_MASK, "ch52_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH53_FULL_INT_MASK, "ch53_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH54_FULL_INT_MASK, "ch54_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH55_FULL_INT_MASK, "ch55_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH56_FULL_INT_MASK, "ch56_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH57_FULL_INT_MASK, "ch57_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH58_FULL_INT_MASK, "ch58_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH59_FULL_INT_MASK, "ch59_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH60_FULL_INT_MASK, "ch60_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH61_FULL_INT_MASK, "ch61_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH62_FULL_INT_MASK, "ch62_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH63_FULL_INT_MASK, "ch63_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1d, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg4_int_reg[] =
{
	{ TEST_CPB_EGRESS_CH64_FULL_INT, "ch64_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH65_FULL_INT, "ch65_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH66_FULL_INT, "ch66_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH67_FULL_INT, "ch67_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH68_FULL_INT, "ch68_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH69_FULL_INT, "ch69_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH70_FULL_INT, "ch70_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH71_FULL_INT, "ch71_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH72_FULL_INT, "ch72_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH73_FULL_INT, "ch73_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH74_FULL_INT, "ch74_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH75_FULL_INT, "ch75_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH76_FULL_INT, "ch76_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH77_FULL_INT, "ch77_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH78_FULL_INT, "ch78_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH79_FULL_INT, "ch79_full_int", CPB_EGRESS_BASE_ADDR, 0x1e, 31, 30, 0x0 },
};
NEW_CHIP_REG test_cpb_eg4_int_mask_reg[] =
{
	{ TEST_CPB_EGRESS_CH64_FULL_INT_MASK, "ch64_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 1, 0, 0x0 },
	{ TEST_CPB_EGRESS_CH65_FULL_INT_MASK, "ch65_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 3, 2, 0x0 },
	{ TEST_CPB_EGRESS_CH66_FULL_INT_MASK, "ch66_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 5, 4, 0x0 },
	{ TEST_CPB_EGRESS_CH67_FULL_INT_MASK, "ch67_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 7, 6, 0x0 },
	{ TEST_CPB_EGRESS_CH68_FULL_INT_MASK, "ch68_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 9, 8, 0x0 },
	{ TEST_CPB_EGRESS_CH69_FULL_INT_MASK, "ch69_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 11, 10, 0x0 },
	{ TEST_CPB_EGRESS_CH70_FULL_INT_MASK, "ch70_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 13, 12, 0x0 },
	{ TEST_CPB_EGRESS_CH71_FULL_INT_MASK, "ch71_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 15, 14, 0x0 },
	{ TEST_CPB_EGRESS_CH72_FULL_INT_MASK, "ch72_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 17, 16, 0x0 },
	{ TEST_CPB_EGRESS_CH73_FULL_INT_MASK, "ch73_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 19, 18, 0x0 },
	{ TEST_CPB_EGRESS_CH74_FULL_INT_MASK, "ch74_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 21, 20, 0x0 },
	{ TEST_CPB_EGRESS_CH75_FULL_INT_MASK, "ch75_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 23, 22, 0x0 },
	{ TEST_CPB_EGRESS_CH76_FULL_INT_MASK, "ch76_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 25, 24, 0x0 },
	{ TEST_CPB_EGRESS_CH77_FULL_INT_MASK, "ch77_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 27, 26, 0x0 },
	{ TEST_CPB_EGRESS_CH78_FULL_INT_MASK, "ch78_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 29, 28, 0x0 },
	{ TEST_CPB_EGRESS_CH79_FULL_INT_MASK, "ch79_full_int_mask", CPB_EGRESS_BASE_ADDR, 0x1f, 31, 30, 0x0 },
};

/*MAC_ADAPT*/
NEW_CHIP_REG test_mac_fifo_level_cfg_reg[] =
{
	{ TEST_MAC_ADAPT_LOW_LVL, "low_lvl", MAC_ADAPT_BASE_ADDR, 0x0, 7, 0, 0x14 },
	{ TEST_MAC_ADAPT_STA_LVL, "sta_lvl", MAC_ADAPT_BASE_ADDR, 0x0, 15, 8, 0x32 },
	{ TEST_MAC_ADAPT_HIG_LVL, "hig_lvl", MAC_ADAPT_BASE_ADDR, 0x0, 23, 16, 0x50 },
	{ TEST_MAC_ADAPT_RSK_LVL, "rsk_lvl", MAC_ADAPT_BASE_ADDR, 0x0, 31, 24, 0x64 },
};
NEW_CHIP_REG test_mac_block_type_reg[] =
{
	{ TEST_MAC_ADAPT_BLOCK_TYPE, "block_type", MAC_ADAPT_BASE_ADDR, 0x56, 1, 0, 0x0 },
};
NEW_CHIP_REG test_mac_clr_hist_reg[] =
{
	{ TEST_MAC_ADAPT_CHID_LVL_HIST, "chid_lvl_hist", MAC_ADAPT_BASE_ADDR, 0x57, 6, 0, 0x0 },
	{ TEST_MAC_ADAPT_CLR_HIST, "clr_hist", MAC_ADAPT_BASE_ADDR, 0x57, 8, 8, 0x0 },
};
NEW_CHIP_REG test_mac_ind_sel_reg[] =
{
	{ TEST_MAC_ADAPT_IND_SEL, "ind_sel", MAC_ADAPT_BASE_ADDR, 0x59, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mac_ins_del_gap_reg[] =
{
	{ TEST_MAC_ADAPT_INS_GAP, "ins_gap", MAC_ADAPT_BASE_ADDR, 0x5a, 8, 0, 0x3f },
	{ TEST_MAC_ADAPT_DEL_GAP, "del_gap", MAC_ADAPT_BASE_ADDR, 0x5a, 24, 16, 0x7 },
};
NEW_CHIP_REG test_mac_blk_num_cfg_reg[] =
{
	{ TEST_MAC_ADAPT_BLK_NUM, "blk_num", MAC_ADAPT_BASE_ADDR, 0x5b, 4, 0, 0x0 },
	{ TEST_MAC_ADAPT_CHAN_EN, "chan_en", MAC_ADAPT_BASE_ADDR, 0x5b, 5, 5, 0x0 },
};
NEW_CHIP_REG test_mac_map_reg_reg[] =
{
	{ TEST_MAC_ADAPT_MAP_SEQ, "map_seq", MAC_ADAPT_BASE_ADDR, 0xab, 3, 0, 0xf },
	{ TEST_MAC_ADAPT_MAP_CHID, "map_chid", MAC_ADAPT_BASE_ADDR, 0xab, 14, 8, 0x7f },
	{ TEST_MAC_ADAPT_MAP_EN, "map_en", MAC_ADAPT_BASE_ADDR, 0xab, 16, 16, 0x0 },
};
NEW_CHIP_REG test_mac_drag_para_cfg_reg[] =
{
	{ TEST_MAC_ADAPT_CLR_PERIOD, "clr_period", MAC_ADAPT_BASE_ADDR, 0xfe, 11, 0, 0xfff },
	{ TEST_MAC_ADAPT_CNT_TO_LOW, "cnt_to_low", MAC_ADAPT_BASE_ADDR, 0xfe, 15, 12, 0x2 },
	{ TEST_MAC_ADAPT_DRAG_EN, "drag_en", MAC_ADAPT_BASE_ADDR, 0xfe, 16, 16, 0x1 },
};
NEW_CHIP_REG test_mac_lvl_hist_reg[] =
{
	{ TEST_MAC_ADAPT_LOW_HIST, "low_hist", MAC_ADAPT_BASE_ADDR, 0x58, 7, 0, 0x0 },
	{ TEST_MAC_ADAPT_HIG_HIST, "hig_hist", MAC_ADAPT_BASE_ADDR, 0x58, 15, 8, 0x0 },
};
NEW_CHIP_REG test_mac_rateadp_full_reg[] =
{
	{ TEST_MAC_ADAPT_RATEADP_FULL_0, "rateadp_full_0", MAC_ADAPT_BASE_ADDR, 0x50, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_RATEADP_FULL_1, "rateadp_full_1", MAC_ADAPT_BASE_ADDR, 0x51, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_RATEADP_FULL_2, "rateadp_full_2", MAC_ADAPT_BASE_ADDR, 0x52, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mac_rateadp_empty_reg[] =
{
	{ TEST_MAC_ADAPT_RATEADP_EMPTY_0, "rateadp_empty_0", MAC_ADAPT_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_RATEADP_EMPTY_1, "rateadp_empty_1", MAC_ADAPT_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_RATEADP_EMPTY_2, "rateadp_empty_2", MAC_ADAPT_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mac_ram_overflow_reg[] =
{
	{ TEST_MAC_ADAPT_OVERFLOW_0, "overflow_0", MAC_ADAPT_BASE_ADDR, 0xfb, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_OVERFLOW_1, "overflow_1", MAC_ADAPT_BASE_ADDR, 0xfc, 31, 0, 0x0 },
	{ TEST_MAC_ADAPT_OVERFLOW_2, "overflow_2", MAC_ADAPT_BASE_ADDR, 0xfd, 15, 0, 0x0 },
};


/*TOP*/
NEW_CHIP_REG test_pps_time_cfg_reg[] =
{
	{ TEST_TOP_PPS_TIME_CFG, "pps_time_cfg", TOP_BASE_ADDR, 0x8, 31, 0, 0x0 },
};
NEW_CHIP_REG test_phy_sel_cfg_reg[] =
{
	{ TEST_TOP_PHY_SEL_CFG, "phy_sel_cfg", TOP_BASE_ADDR, 0x22, 31, 0, 0x0 },
};
NEW_CHIP_REG test_clk_measure_cfg_reg[] =
{
	{ TEST_TOP_MEASURE_TIME, "measure_time", TOP_BASE_ADDR, 0x2a, 1, 0, 0x1 },
	{ TEST_TOP_MEASURE_CLR, "measure_clr", TOP_BASE_ADDR, 0x2a, 2, 2, 0x0 },
};
NEW_CHIP_REG test_cdr_sel_reg[] =
{
	{ TEST_TOP_CDR_SEL, "cdr_sel", TOP_BASE_ADDR, 0x46, 1, 0, 0x0 },
};
NEW_CHIP_REG test_rst_glb_fuci_soft_n_reg[] =
{
	{ TEST_TOP_RST_GLB_FUCI_SOFT_N, "rst_glb_fuci_soft_n", TOP_BASE_ADDR, 0x0, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_glb_logic_n_reg[] =
{
	{ TEST_TOP_RST_GLB_LOGIC_N, "rst_glb_logic_n", TOP_BASE_ADDR, 0x1, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_logic_sys1_n_reg[] =
{
	{ TEST_TOP_RST_FLEXE_MUX_N, "rst_flexe_mux_n", TOP_BASE_ADDR, 0x2, 0, 0, 0x1 },
	{ TEST_TOP_RST_OAM_RX_N, "rst_oam_rx_n", TOP_BASE_ADDR, 0x2, 1, 1, 0x1 },
	{ TEST_TOP_RST_DEMUX_SYS_N, "rst_demux_sys_n", TOP_BASE_ADDR, 0x2, 3, 3, 0x1 },
	{ TEST_TOP_RST_CHANNELIZE_SYS_N, "rst_channelize_sys_n", TOP_BASE_ADDR, 0x2, 4, 4, 0x1 },
	{ TEST_TOP_RST_B66SWITCH_SYS_N, "rst_b66switch_sys_n", TOP_BASE_ADDR, 0x2, 5, 5, 0x1 },
	{ TEST_TOP_RST_SOH_EXT_SCH_N, "rst_soh_ext_sch_n", TOP_BASE_ADDR, 0x2, 6, 6, 0x1 },
	{ TEST_TOP_RST_SOH_INS_SCH_N, "rst_soh_ins_sch_n", TOP_BASE_ADDR, 0x2, 7, 7, 0x1 },
	{ TEST_TOP_RST_SOAM_EXT_330M_0_N, "rst_soam_ext_330m_0_n", TOP_BASE_ADDR, 0x2, 9, 9, 0x1 },
	{ TEST_TOP_RST_SOAM_EXT_330M_1_N, "rst_soam_ext_330m_1_n", TOP_BASE_ADDR, 0x2, 10, 10, 0x1 },
	{ TEST_TOP_RST_SOAM_EXT_SCH_N, "rst_soam_ext_sch_n", TOP_BASE_ADDR, 0x2, 11, 11, 0x1 },
	{ TEST_TOP_RST_SOAM_INS_DISTR_N, "rst_soam_ins_distr_n", TOP_BASE_ADDR, 0x2, 12, 12, 0x1 },
	{ TEST_TOP_RST_SYS_DW_N, "rst_sys_dw_n", TOP_BASE_ADDR, 0x2, 13, 13, 0x1 },
	{ TEST_TOP_RST_SYS_UP_N, "rst_sys_up_n", TOP_BASE_ADDR, 0x2, 14, 14, 0x1 },
	{ TEST_TOP_RST_SYS_TS_N, "rst_sys_ts_n", TOP_BASE_ADDR, 0x2, 15, 15, 0x1 },
	{ TEST_TOP_RST_FEC_ENC_N, "rst_fec_enc_n", TOP_BASE_ADDR, 0x2, 16, 16, 0x1 },
	{ TEST_TOP_RST_DEC_ENC_N, "rst_dec_enc_n", TOP_BASE_ADDR, 0x2, 17, 17, 0x1 },
	{ TEST_TOP_RST_SYS_CPBEGRESS_N, "rst_sys_cpbegress_n", TOP_BASE_ADDR, 0x2, 18, 18, 0x1 },
	{ TEST_TOP_RST_CPB_INGRESS_N, "rst_cpb_ingress_n", TOP_BASE_ADDR, 0x2, 19, 19, 0x1 },
	{ TEST_TOP_RST_ENCODE_N, "rst_encode_n", TOP_BASE_ADDR, 0x2, 20, 20, 0x1 },
	{ TEST_TOP_RST_DECODE_N, "rst_decode_n", TOP_BASE_ADDR, 0x2, 21, 21, 0x1 },
	{ TEST_TOP_RST_RATEADP_N, "rst_rateadp_n", TOP_BASE_ADDR, 0x2, 23, 23, 0x1 },
	{ TEST_TOP_RST_OAM_TX_N, "rst_oam_tx_n", TOP_BASE_ADDR, 0x2, 24, 24, 0x1 },
	{ TEST_TOP_RST_SYS_MCMACTX_N, "rst_sys_mcmactx_n", TOP_BASE_ADDR, 0x2, 25, 25, 0x1 },
	{ TEST_TOP_RST_SYS_MCMACRX_N, "rst_sys_mcmacrx_n", TOP_BASE_ADDR, 0x2, 26, 26, 0x1 },
	{ TEST_TOP_RST_PPSTOD_N, "rst_ppstod_n", TOP_BASE_ADDR, 0x2, 27, 27, 0x1 },
	{ TEST_TOP_RST_PCS_TX_ENV_N, "rst_pcs_tx_env_n", TOP_BASE_ADDR, 0x2, 28, 28, 0x1 },
	{ TEST_TOP_RST_PCS_RX_SMOOTH_N, "rst_pcs_rx_smooth_n", TOP_BASE_ADDR, 0x2, 29, 29, 0x1 },
	{ TEST_TOP_RST_FLEXE_MAC_N, "rst_flexe_mac_n", TOP_BASE_ADDR, 0x2, 30, 30, 0x1 },
	{ TEST_TOP_RST_ILK_N, "rst_ilk_n", TOP_BASE_ADDR, 0x2, 31, 31, 0x1 },
};
NEW_CHIP_REG test_rst_fpga_serdes_n_reg[] =
{
	{ TEST_TOP_RST_SERDES_100GE1_N, "rst_serdes_100ge1_n", TOP_BASE_ADDR, 0x3, 0, 0, 0x1 },
	{ TEST_TOP_RST_SERDES_100GE2_N, "rst_serdes_100ge2_n", TOP_BASE_ADDR, 0x3, 1, 1, 0x1 },
	{ TEST_TOP_RST_SERDES_50GE1_N, "rst_serdes_50ge1_n", TOP_BASE_ADDR, 0x3, 2, 2, 0x1 },
	{ TEST_TOP_RST_SERDES_50GE2_N, "rst_serdes_50ge2_n", TOP_BASE_ADDR, 0x3, 3, 3, 0x1 },
	{ TEST_TOP_RST_SERDES_50GE3_N, "rst_serdes_50ge3_n", TOP_BASE_ADDR, 0x3, 4, 4, 0x1 },
	{ TEST_TOP_RST_SERDES_50GE4_N, "rst_serdes_50ge4_n", TOP_BASE_ADDR, 0x3, 5, 5, 0x1 },
	{ TEST_TOP_RST_SERDES_GE_N, "rst_serdes_ge_n", TOP_BASE_ADDR, 0x3, 6, 6, 0x1 },
	{ TEST_TOP_RST_SERDES_GE1_N, "rst_serdes_ge1_n", TOP_BASE_ADDR, 0x3, 7, 7, 0x1 },
	{ TEST_TOP_RST_SERDES_GE2_N, "rst_serdes_ge2_n", TOP_BASE_ADDR, 0x3, 8, 8, 0x1 },
	{ TEST_TOP_RST_SERDES_ILK_N, "rst_serdes_ilk_n", TOP_BASE_ADDR, 0x3, 9, 9, 0x1 },
	{ TEST_TOP_RST_SERDES_CFG_UPI_N, "rst_serdes_cfg_upi_n", TOP_BASE_ADDR, 0x3, 10, 10, 0x1 },
};
NEW_CHIP_REG test_rst_logic_sys3_n_reg[] =
{
	{ TEST_TOP_RST_OH_RX_0_N, "rst_oh_rx_0_n", TOP_BASE_ADDR, 0x4, 0, 0, 0x1 },
	{ TEST_TOP_RST_OH_RX_1_N, "rst_oh_rx_1_n", TOP_BASE_ADDR, 0x4, 1, 1, 0x1 },
	{ TEST_TOP_RST_OH_RX_2_N, "rst_oh_rx_2_n", TOP_BASE_ADDR, 0x4, 2, 2, 0x1 },
	{ TEST_TOP_RST_OH_RX_3_N, "rst_oh_rx_3_n", TOP_BASE_ADDR, 0x4, 3, 3, 0x1 },
	{ TEST_TOP_RST_OH_RX_4_N, "rst_oh_rx_4_n", TOP_BASE_ADDR, 0x4, 4, 4, 0x1 },
	{ TEST_TOP_RST_OH_RX_5_N, "rst_oh_rx_5_n", TOP_BASE_ADDR, 0x4, 5, 5, 0x1 },
	{ TEST_TOP_RST_OH_RX_6_N, "rst_oh_rx_6_n", TOP_BASE_ADDR, 0x4, 6, 6, 0x1 },
	{ TEST_TOP_RST_OH_RX_7_N, "rst_oh_rx_7_n", TOP_BASE_ADDR, 0x4, 7, 7, 0x1 },
	{ TEST_TOP_RST_OH_TX_0_N, "rst_oh_tx_0_n", TOP_BASE_ADDR, 0x4, 8, 8, 0x1 },
	{ TEST_TOP_RST_OH_TX_1_N, "rst_oh_tx_1_n", TOP_BASE_ADDR, 0x4, 9, 9, 0x1 },
	{ TEST_TOP_RST_OH_TX_2_N, "rst_oh_tx_2_n", TOP_BASE_ADDR, 0x4, 10, 10, 0x1 },
	{ TEST_TOP_RST_OH_TX_3_N, "rst_oh_tx_3_n", TOP_BASE_ADDR, 0x4, 11, 11, 0x1 },
	{ TEST_TOP_RST_OH_TX_4_N, "rst_oh_tx_4_n", TOP_BASE_ADDR, 0x4, 12, 12, 0x1 },
	{ TEST_TOP_RST_OH_TX_5_N, "rst_oh_tx_5_n", TOP_BASE_ADDR, 0x4, 13, 13, 0x1 },
	{ TEST_TOP_RST_OH_TX_6_N, "rst_oh_tx_6_n", TOP_BASE_ADDR, 0x4, 14, 14, 0x1 },
	{ TEST_TOP_RST_OH_TX_7_N, "rst_oh_tx_7_n", TOP_BASE_ADDR, 0x4, 15, 15, 0x1 },
	{ TEST_TOP_RST_DESKEW_0_N, "rst_deskew_0_n", TOP_BASE_ADDR, 0x4, 16, 16, 0x1 },
	{ TEST_TOP_RST_DESKEW_1_N, "rst_deskew_1_n", TOP_BASE_ADDR, 0x4, 17, 17, 0x1 },
	{ TEST_TOP_RST_DESKEW_2_N, "rst_deskew_2_n", TOP_BASE_ADDR, 0x4, 18, 18, 0x1 },
	{ TEST_TOP_RST_DESKEW_3_N, "rst_deskew_3_n", TOP_BASE_ADDR, 0x4, 19, 19, 0x1 },
	{ TEST_TOP_RST_DESKEW_4_N, "rst_deskew_4_n", TOP_BASE_ADDR, 0x4, 20, 20, 0x1 },
	{ TEST_TOP_RST_DESKEW_5_N, "rst_deskew_5_n", TOP_BASE_ADDR, 0x4, 21, 21, 0x1 },
	{ TEST_TOP_RST_DESKEW_6_N, "rst_deskew_6_n", TOP_BASE_ADDR, 0x4, 22, 22, 0x1 },
	{ TEST_TOP_RST_DESKEW_7_N, "rst_deskew_7_n", TOP_BASE_ADDR, 0x4, 23, 23, 0x1 },
	{ TEST_TOP_RST_SYS_HANDLING_N, "rst_sys_handling_n", TOP_BASE_ADDR, 0x4, 25, 25, 0x1 },
	{ TEST_TOP_RST_SYS_B66SARRX_N, "rst_sys_b66sarrx_n", TOP_BASE_ADDR, 0x4, 26, 26, 0x1 },
	{ TEST_TOP_RST_SYS_OAM_RX_N, "rst_sys_oam_rx_n", TOP_BASE_ADDR, 0x4, 27, 27, 0x1 },
	{ TEST_TOP_RST_SYS_PORTSCH_DW_N, "rst_sys_portsch_dw_n", TOP_BASE_ADDR, 0x4, 28, 28, 0x1 },
	{ TEST_TOP_RST_SYS_OAM_TX_N, "rst_sys_oam_tx_n", TOP_BASE_ADDR, 0x4, 29, 29, 0x1 },
	{ TEST_TOP_RST_SYS_RATEADP_N, "rst_sys_rateadp_n", TOP_BASE_ADDR, 0x4, 30, 30, 0x1 },
	{ TEST_TOP_RST_SYS_B66SARTX_N, "rst_sys_b66sartx_n", TOP_BASE_ADDR, 0x4, 31, 31, 0x1 },
};
NEW_CHIP_REG test_rst_125m_pps_n_reg[] =
{
	{ TEST_TOP_RST_125M_PPS_N, "rst_125m_pps_n", TOP_BASE_ADDR, 0x5, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_fuci_module1_n_reg[] =
{
	{ TEST_TOP_RST_UPI_FLEXE_MUX_N, "rst_upi_flexe_mux_n", TOP_BASE_ADDR, 0x6, 0, 0, 0x1 },
	{ TEST_TOP_RST_OAM_RX_UPI_N, "rst_oam_rx_upi_n", TOP_BASE_ADDR, 0x6, 1, 1, 0x1 },
	{ TEST_TOP_RST_MR_PCS_RX_UPI_N, "rst_mr_pcs_rx_upi_n", TOP_BASE_ADDR, 0x6, 2, 2, 0x1 },
	{ TEST_TOP_RST_DEMUX_UPI_SYS_N, "rst_demux_upi_sys_n", TOP_BASE_ADDR, 0x6, 3, 3, 0x1 },
	{ TEST_TOP_RST_CHANNELIZE_UPI_SYS_N, "rst_channelize_upi_sys_n", TOP_BASE_ADDR, 0x6, 4, 4, 0x1 },
	{ TEST_TOP_RST_B66SWITCH_UPI_SYS_N, "rst_b66switch_upi_sys_n", TOP_BASE_ADDR, 0x6, 5, 5, 0x1 },
	{ TEST_TOP_RST_SYS_DW_UPI_N, "rst_sys_dw_upi_n", TOP_BASE_ADDR, 0x6, 7, 7, 0x1 },
	{ TEST_TOP_RST_SYS_UP_UPI_N, "rst_sys_up_upi_n", TOP_BASE_ADDR, 0x6, 8, 8, 0x1 },
	{ TEST_TOP_RST_FEC_ENC_UPI_N, "rst_fec_enc_upi_n", TOP_BASE_ADDR, 0x6, 9, 9, 0x1 },
	{ TEST_TOP_RST_FEC_DEC_UPI_N, "rst_fec_dec_upi_n", TOP_BASE_ADDR, 0x6, 10, 10, 0x1 },
	{ TEST_TOP_RST_CPB_EGRESS_UPI_N, "rst_cpb_egress_upi_n", TOP_BASE_ADDR, 0x6, 11, 11, 0x1 },
	{ TEST_TOP_RST_CPB_INGRESS_UPI_N, "rst_cpb_ingress_upi_n", TOP_BASE_ADDR, 0x6, 12, 12, 0x1 },
	{ TEST_TOP_RST_MR_PCS_TX_UPI_N, "rst_mr_pcs_tx_upi_n", TOP_BASE_ADDR, 0x6, 13, 13, 0x1 },
	{ TEST_TOP_RST_RATEADP_UPI_N, "rst_rateadp_upi_n", TOP_BASE_ADDR, 0x6, 14, 14, 0x1 },
	{ TEST_TOP_RST_OAM_TX_UPI_N, "rst_oam_tx_upi_n", TOP_BASE_ADDR, 0x6, 15, 15, 0x1 },
	{ TEST_TOP_RST_MACTX_UPI_N, "rst_mactx_upi_n", TOP_BASE_ADDR, 0x6, 16, 16, 0x1 },
	{ TEST_TOP_RST_MACRX_UPI_N, "rst_macrx_upi_n", TOP_BASE_ADDR, 0x6, 17, 17, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_0_N, "rst_deskew_fuci_0_n", TOP_BASE_ADDR, 0x6, 18, 18, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_1_N, "rst_deskew_fuci_1_n", TOP_BASE_ADDR, 0x6, 19, 19, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_2_N, "rst_deskew_fuci_2_n", TOP_BASE_ADDR, 0x6, 20, 20, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_3_N, "rst_deskew_fuci_3_n", TOP_BASE_ADDR, 0x6, 21, 21, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_4_N, "rst_deskew_fuci_4_n", TOP_BASE_ADDR, 0x6, 22, 22, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_5_N, "rst_deskew_fuci_5_n", TOP_BASE_ADDR, 0x6, 23, 23, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_6_N, "rst_deskew_fuci_6_n", TOP_BASE_ADDR, 0x6, 24, 24, 0x1 },
	{ TEST_TOP_RST_DESKEW_FUCI_7_N, "rst_deskew_fuci_7_n", TOP_BASE_ADDR, 0x6, 25, 25, 0x1 },
	{ TEST_TOP_RST_TX_ENV_GEARBOX_UPI_N, "rst_tx_env_gearbox_upi_n", TOP_BASE_ADDR, 0x6, 26, 26, 0x1 },
	{ TEST_TOP_RST_RX_ENV_GEARBOX_UPI_N, "rst_rx_env_gearbox_upi_n", TOP_BASE_ADDR, 0x6, 27, 27, 0x1 },
	{ TEST_TOP_RST_FLEXE_MAC_UPI_N, "rst_flexe_mac_upi_n", TOP_BASE_ADDR, 0x6, 28, 28, 0x1 },
	{ TEST_TOP_RST_SOH_UPI_DCI_N, "rst_soh_upi_dci_n", TOP_BASE_ADDR, 0x6, 6, 6, 0x1 },
	{ TEST_TOP_RST_FUCI_ILKN_N, "rst_fuci_ilkn_n", TOP_BASE_ADDR, 0x6, 29, 29, 0x1 },
};
NEW_CHIP_REG test_rst_fuci_module2_n_reg[] =
{
	{ TEST_TOP_RST_OH_RX_FUCI_0_N, "rst_oh_rx_fuci_0_n", TOP_BASE_ADDR, 0x7, 0, 0, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_1_N, "rst_oh_rx_fuci_1_n", TOP_BASE_ADDR, 0x7, 1, 1, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_2_N, "rst_oh_rx_fuci_2_n", TOP_BASE_ADDR, 0x7, 2, 2, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_3_N, "rst_oh_rx_fuci_3_n", TOP_BASE_ADDR, 0x7, 3, 3, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_4_N, "rst_oh_rx_fuci_4_n", TOP_BASE_ADDR, 0x7, 4, 4, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_5_N, "rst_oh_rx_fuci_5_n", TOP_BASE_ADDR, 0x7, 5, 5, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_6_N, "rst_oh_rx_fuci_6_n", TOP_BASE_ADDR, 0x7, 6, 6, 0x1 },
	{ TEST_TOP_RST_OH_RX_FUCI_7_N, "rst_oh_rx_fuci_7_n", TOP_BASE_ADDR, 0x7, 7, 7, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_0_N, "rst_oh_tx_fuci_0_n", TOP_BASE_ADDR, 0x7, 8, 8, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_1_N, "rst_oh_tx_fuci_1_n", TOP_BASE_ADDR, 0x7, 9, 9, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_2_N, "rst_oh_tx_fuci_2_n", TOP_BASE_ADDR, 0x7, 10, 10, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_3_N, "rst_oh_tx_fuci_3_n", TOP_BASE_ADDR, 0x7, 11, 11, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_4_N, "rst_oh_tx_fuci_4_n", TOP_BASE_ADDR, 0x7, 12, 12, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_5_N, "rst_oh_tx_fuci_5_n", TOP_BASE_ADDR, 0x7, 13, 13, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_6_N, "rst_oh_tx_fuci_6_n", TOP_BASE_ADDR, 0x7, 14, 14, 0x1 },
	{ TEST_TOP_RST_OH_TX_FUCI_7_N, "rst_oh_tx_fuci_7_n", TOP_BASE_ADDR, 0x7, 15, 15, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_HANDLING_N, "rst_sys_upi_handling_n", TOP_BASE_ADDR, 0x7, 17, 17, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_CPBEGRESS_N, "rst_sys_upi_cpbegress_n", TOP_BASE_ADDR, 0x7, 18, 18, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_MCMACTX_N, "rst_sys_upi_mcmactx_n", TOP_BASE_ADDR, 0x7, 19, 19, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_B66SARRX_N, "rst_sys_upi_b66sarrx_n", TOP_BASE_ADDR, 0x7, 20, 20, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_OAM_RX_N, "rst_sys_upi_oam_rx_n", TOP_BASE_ADDR, 0x7, 21, 21, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_OAM_TX_N, "rst_sys_upi_oam_tx_n", TOP_BASE_ADDR, 0x7, 22, 22, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_RATEADP_N, "rst_sys_upi_rateadp_n", TOP_BASE_ADDR, 0x7, 23, 23, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_B66SARTX_N, "rst_sys_upi_b66sartx_n", TOP_BASE_ADDR, 0x7, 24, 24, 0x1 },
	{ TEST_TOP_RST_SYS_UPI_MCMACRX_N, "rst_sys_upi_mcmacrx_n", TOP_BASE_ADDR, 0x7, 25, 25, 0x1 },
	{ TEST_TOP_RST_INF_CH_ADP_RX_UPI_N, "rst_inf_ch_adp_rx_upi_n", TOP_BASE_ADDR, 0x7, 26, 26, 0x1 },
	{ TEST_TOP_RST_INF_CH_ADP_TX_UPI_N, "rst_inf_ch_adp_tx_upi_n", TOP_BASE_ADDR, 0x7, 27, 27, 0x1 },
	{ TEST_TOP_RST_FLEXE_ENV_UPI_N, "rst_flexe_env_upi_n", TOP_BASE_ADDR, 0x7, 28, 28, 0x1 },
	{ TEST_TOP_RST_REQ_GEN_UPI_N, "rst_req_gen_upi_n", TOP_BASE_ADDR, 0x7, 29, 29, 0x1 },
};
NEW_CHIP_REG test_rst_soh_ext_125m_n_reg[] =
{
	{ TEST_TOP_RST_SOH_EXT_125M_N, "rst_soh_ext_125m_n", TOP_BASE_ADDR, 0x1d, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soh_ins_125m_n_reg[] =
{
	{ TEST_TOP_RST_SOH_INS_125M_N, "rst_soh_ins_125m_n", TOP_BASE_ADDR, 0x1e, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soam_ext_125m_n_reg[] =
{
	{ TEST_TOP_RST_SOAM_EXT_125M_N, "rst_soam_ext_125m_n", TOP_BASE_ADDR, 0x1f, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soam_ins_125m_n_reg[] =
{
	{ TEST_TOP_RST_SOAM_INS_125M_N, "rst_soam_ins_125m_n", TOP_BASE_ADDR, 0x20, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_gearbox_n_reg[] =
{
	{ TEST_TOP_RST_GEARBOX_RX_N, "rst_gearbox_rx_n", TOP_BASE_ADDR, 0x21, 0, 0, 0x1 },
	{ TEST_TOP_RST_GEARBOX_TX_N, "rst_gearbox_tx_n", TOP_BASE_ADDR, 0x21, 1, 1, 0x1 },
	{ TEST_TOP_RST_CLK_MEASURE_N, "rst_clk_measure_n", TOP_BASE_ADDR, 0x21, 2, 2, 0x1 },
	{ TEST_TOP_RST_GEARBOX_RX_REQ_N, "rst_gearbox_rx_req_n", TOP_BASE_ADDR, 0x21, 3, 3, 0x1 },
	{ TEST_TOP_RST_GEARBOX_TX_REQ_N, "rst_gearbox_tx_req_n", TOP_BASE_ADDR, 0x21, 4, 4, 0x1 },
};
NEW_CHIP_REG test_rst_311m_n_reg[] =
{
	{ TEST_TOP_RST_311M_B66SARRX_N, "rst_311m_b66sarrx_n", TOP_BASE_ADDR, 0x23, 0, 0, 0x1 },
	{ TEST_TOP_RST_311M_B66SARTX_N, "rst_311m_b66sartx_n", TOP_BASE_ADDR, 0x23, 1, 1, 0x1 },
	{ TEST_TOP_RST_311M_TS_N, "rst_311m_ts_n", TOP_BASE_ADDR, 0x23, 2, 2, 0x1 },
};
NEW_CHIP_REG test_rst_311m_upi_n_reg[] =
{
	{ TEST_TOP_RST_311M_UPI_B66SARTX_N, "rst_311m_upi_b66sartx_n", TOP_BASE_ADDR, 0x24, 0, 0, 0x1 },
	{ TEST_TOP_RST_311M_UPI_B66SARRX_N, "rst_311m_upi_b66sarrx_n", TOP_BASE_ADDR, 0x24, 1, 1, 0x1 },
};
NEW_CHIP_REG test_rst_soh_upi_125ext_n_reg[] =
{
	{ TEST_TOP_RST_SOH_UPI_125EXT_N, "rst_soh_upi_125ext_n", TOP_BASE_ADDR, 0x25, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soh_upi_125ins_n_reg[] =
{
	{ TEST_TOP_RST_SOH_UPI_125INS_N, "rst_soh_upi_125ins_n", TOP_BASE_ADDR, 0x26, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soam_upi_125ext_n_reg[] =
{
	{ TEST_TOP_RST_SOAM_UPI_125EXT_N, "rst_soam_upi_125ext_n", TOP_BASE_ADDR, 0x27, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soam_upi_125ins_n_reg[] =
{
	{ TEST_TOP_RST_SOAM_UPI_125INS_N, "rst_soam_upi_125ins_n", TOP_BASE_ADDR, 0x28, 0, 0, 0x1 },
};
NEW_CHIP_REG test_rst_soh_upi_fuci_n_reg[] =
{
	{ TEST_TOP_RST_SOH_UPI_FUCI_N, "rst_soh_upi_fuci_n", TOP_BASE_ADDR, 0x29, 0, 0, 0x1 },
	{ TEST_TOP_RST_SUBSYS_MAC_FUCI_N, "rst_subsys_mac_fuci_n", TOP_BASE_ADDR, 0x29, 1, 1, 0x1 },
};
NEW_CHIP_REG test_rst_sys_logic4_n_reg[] =
{
	{ TEST_TOP_RST_SYS_PORTSCH_UP_N, "rst_sys_portsch_up_n", TOP_BASE_ADDR, 0x45, 0, 0, 0x1 },
	{ TEST_TOP_RST_INF_CH_ADP_RX_N, "rst_inf_ch_adp_rx_n", TOP_BASE_ADDR, 0x45, 1, 1, 0x1 },
	{ TEST_TOP_RST_INF_CH_ADP_TX_N, "rst_inf_ch_adp_tx_n", TOP_BASE_ADDR, 0x45, 2, 2, 0x1 },
	{ TEST_TOP_RST_FLEXE_ENV_N, "rst_flexe_env_n", TOP_BASE_ADDR, 0x45, 3, 3, 0x1 },
	{ TEST_TOP_RST_REQ_GEN_N, "rst_req_gen_n", TOP_BASE_ADDR, 0x45, 4, 4, 0x1 },
	{ TEST_TOP_RST_MR_PCS_RX_0_N, "rst_mr_pcs_rx_0_n", TOP_BASE_ADDR, 0x45, 5, 5, 0x1 },
	{ TEST_TOP_RST_MR_PCS_RX_1_N, "rst_mr_pcs_rx_1_n", TOP_BASE_ADDR, 0x45, 6, 6, 0x1 },
	{ TEST_TOP_RST_MR_PCS_RX_2_N, "rst_mr_pcs_rx_2_n", TOP_BASE_ADDR, 0x45, 7, 7, 0x1 },
	{ TEST_TOP_RST_MR_PCS_RX_3_N, "rst_mr_pcs_rx_3_n", TOP_BASE_ADDR, 0x45, 8, 8, 0x1 },
	{ TEST_TOP_RST_MR_PCS_TX_0_N, "rst_mr_pcs_tx_0_n", TOP_BASE_ADDR, 0x45, 9, 9, 0x1 },
	{ TEST_TOP_RST_MR_PCS_TX_1_N, "rst_mr_pcs_tx_1_n", TOP_BASE_ADDR, 0x45, 10, 10, 0x1 },
	{ TEST_TOP_RST_MR_PCS_TX_2_N, "rst_mr_pcs_tx_2_n", TOP_BASE_ADDR, 0x45, 11, 11, 0x1 },
	{ TEST_TOP_RST_MR_PCS_TX_3_N, "rst_mr_pcs_tx_3_n", TOP_BASE_ADDR, 0x45, 12, 12, 0x1 },
	{ TEST_TOP_RST_FEC_DEC_0_N, "rst_fec_dec_0_n", TOP_BASE_ADDR, 0x45, 13, 13, 0x1 },
	{ TEST_TOP_RST_FEC_DEC_1_N, "rst_fec_dec_1_n", TOP_BASE_ADDR, 0x45, 14, 14, 0x1 },
	{ TEST_TOP_RST_FEC_ENC_0_N, "rst_fec_enc_0_n", TOP_BASE_ADDR, 0x45, 15, 15, 0x1 },
	{ TEST_TOP_RST_FEC_ENC_1_N, "rst_fec_enc_1_n", TOP_BASE_ADDR, 0x45, 16, 16, 0x1 },
	{ TEST_TOP_RST_OH_N, "rst_oh_n", TOP_BASE_ADDR, 0x45, 17, 17, 0x1 },
	{ TEST_TOP_RST_OHIF_1588_RATE_LIMIT_N, "rst_ohif_1588_rate_limit_n", TOP_BASE_ADDR, 0x45, 18, 18, 0x1 },
};
NEW_CHIP_REG test_rst_ieee1588_1_reg[] =
{
	{ TEST_TOP_RST_FLEXE_PTP_RX_0_N, "rst_flexe_ptp_rx_0_n", TOP_BASE_ADDR, 0x47, 0, 0, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_1_N, "rst_flexe_ptp_rx_1_n", TOP_BASE_ADDR, 0x47, 1, 1, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_2_N, "rst_flexe_ptp_rx_2_n", TOP_BASE_ADDR, 0x47, 2, 2, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_3_N, "rst_flexe_ptp_rx_3_n", TOP_BASE_ADDR, 0x47, 3, 3, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_4_N, "rst_flexe_ptp_rx_4_n", TOP_BASE_ADDR, 0x47, 4, 4, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_5_N, "rst_flexe_ptp_rx_5_n", TOP_BASE_ADDR, 0x47, 5, 5, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_6_N, "rst_flexe_ptp_rx_6_n", TOP_BASE_ADDR, 0x47, 6, 6, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_7_N, "rst_flexe_ptp_rx_7_n", TOP_BASE_ADDR, 0x47, 7, 7, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_8_N, "rst_flexe_ptp_rx_8_n", TOP_BASE_ADDR, 0x47, 8, 8, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_9_N, "rst_flexe_ptp_rx_9_n", TOP_BASE_ADDR, 0x47, 9, 9, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_10_N, "rst_flexe_ptp_rx_10_n", TOP_BASE_ADDR, 0x47, 10, 10, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_11_N, "rst_flexe_ptp_rx_11_n", TOP_BASE_ADDR, 0x47, 11, 11, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_12_N, "rst_flexe_ptp_rx_12_n", TOP_BASE_ADDR, 0x47, 12, 12, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_13_N, "rst_flexe_ptp_rx_13_n", TOP_BASE_ADDR, 0x47, 13, 13, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_14_N, "rst_flexe_ptp_rx_14_n", TOP_BASE_ADDR, 0x47, 14, 14, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_RX_15_N, "rst_flexe_ptp_rx_15_n", TOP_BASE_ADDR, 0x47, 15, 15, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_0_N, "rst_flexe_ptp_tx_0_n", TOP_BASE_ADDR, 0x47, 16, 16, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_1_N, "rst_flexe_ptp_tx_1_n", TOP_BASE_ADDR, 0x47, 17, 17, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_2_N, "rst_flexe_ptp_tx_2_n", TOP_BASE_ADDR, 0x47, 18, 18, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_3_N, "rst_flexe_ptp_tx_3_n", TOP_BASE_ADDR, 0x47, 19, 19, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_4_N, "rst_flexe_ptp_tx_4_n", TOP_BASE_ADDR, 0x47, 20, 20, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_5_N, "rst_flexe_ptp_tx_5_n", TOP_BASE_ADDR, 0x47, 21, 21, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_6_N, "rst_flexe_ptp_tx_6_n", TOP_BASE_ADDR, 0x47, 22, 22, 0x1 },
	{ TEST_TOP_RST_FLEXE_PTP_TX_7_N, "rst_flexe_ptp_tx_7_n", TOP_BASE_ADDR, 0x47, 23, 23, 0x1 },
	{ TEST_TOP_RST_XGMII_RX_N, "rst_xgmii_rx_n", TOP_BASE_ADDR, 0x47, 24, 24, 0x1 },
	{ TEST_TOP_RST_XGMII_TX_N, "rst_xgmii_tx_n", TOP_BASE_ADDR, 0x47, 25, 25, 0x1 },
	{ TEST_TOP_RST_CPU_RX_N, "rst_cpu_rx_n", TOP_BASE_ADDR, 0x47, 26, 26, 0x1 },
	{ TEST_TOP_RST_CPU_TX_N, "rst_cpu_tx_n", TOP_BASE_ADDR, 0x47, 27, 27, 0x1 },
};
NEW_CHIP_REG test_rst_ieee1588_2_reg[] =
{
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_0_N, "rst_upi_flexe_ptp_rx_0_n", TOP_BASE_ADDR, 0x48, 0, 0, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_1_N, "rst_upi_flexe_ptp_rx_1_n", TOP_BASE_ADDR, 0x48, 1, 1, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_2_N, "rst_upi_flexe_ptp_rx_2_n", TOP_BASE_ADDR, 0x48, 2, 2, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_3_N, "rst_upi_flexe_ptp_rx_3_n", TOP_BASE_ADDR, 0x48, 3, 3, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_4_N, "rst_upi_flexe_ptp_rx_4_n", TOP_BASE_ADDR, 0x48, 4, 4, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_5_N, "rst_upi_flexe_ptp_rx_5_n", TOP_BASE_ADDR, 0x48, 5, 5, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_6_N, "rst_upi_flexe_ptp_rx_6_n", TOP_BASE_ADDR, 0x48, 6, 6, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_7_N, "rst_upi_flexe_ptp_rx_7_n", TOP_BASE_ADDR, 0x48, 7, 7, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_8_N, "rst_upi_flexe_ptp_rx_8_n", TOP_BASE_ADDR, 0x48, 8, 8, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_9_N, "rst_upi_flexe_ptp_rx_9_n", TOP_BASE_ADDR, 0x48, 9, 9, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_10_N, "rst_upi_flexe_ptp_rx_10_n", TOP_BASE_ADDR, 0x48, 10, 10, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_11_N, "rst_upi_flexe_ptp_rx_11_n", TOP_BASE_ADDR, 0x48, 11, 11, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_12_N, "rst_upi_flexe_ptp_rx_12_n", TOP_BASE_ADDR, 0x48, 12, 12, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_13_N, "rst_upi_flexe_ptp_rx_13_n", TOP_BASE_ADDR, 0x48, 13, 13, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_14_N, "rst_upi_flexe_ptp_rx_14_n", TOP_BASE_ADDR, 0x48, 14, 14, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_RX_15_N, "rst_upi_flexe_ptp_rx_15_n", TOP_BASE_ADDR, 0x48, 15, 15, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_0_N, "rst_upi_flexe_ptp_tx_0_n", TOP_BASE_ADDR, 0x48, 16, 16, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_1_N, "rst_upi_flexe_ptp_tx_1_n", TOP_BASE_ADDR, 0x48, 17, 17, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_2_N, "rst_upi_flexe_ptp_tx_2_n", TOP_BASE_ADDR, 0x48, 18, 18, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_3_N, "rst_upi_flexe_ptp_tx_3_n", TOP_BASE_ADDR, 0x48, 19, 19, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_4_N, "rst_upi_flexe_ptp_tx_4_n", TOP_BASE_ADDR, 0x48, 20, 20, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_5_N, "rst_upi_flexe_ptp_tx_5_n", TOP_BASE_ADDR, 0x48, 21, 21, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_6_N, "rst_upi_flexe_ptp_tx_6_n", TOP_BASE_ADDR, 0x48, 22, 22, 0x1 },
	{ TEST_TOP_RST_UPI_FLEXE_PTP_TX_7_N, "rst_upi_flexe_ptp_tx_7_n", TOP_BASE_ADDR, 0x48, 23, 23, 0x1 },
	{ TEST_TOP_RST_UPI_GLOBAL_IEEE1588_N, "rst_upi_global_ieee1588_n", TOP_BASE_ADDR, 0x48, 24, 24, 0x1 },
	{ TEST_TOP_RST_UPI_XGMII_RX_N, "rst_upi_xgmii_rx_n", TOP_BASE_ADDR, 0x48, 25, 25, 0x1 },
	{ TEST_TOP_RST_UPI_XGMII_TX_N, "rst_upi_xgmii_tx_n", TOP_BASE_ADDR, 0x48, 26, 26, 0x1 },
	{ TEST_TOP_RST_UPI_CCU_GE_N, "rst_upi_ccu_ge_n", TOP_BASE_ADDR, 0x48, 27, 27, 0x1 },
	{ TEST_TOP_RST_UPI_CPU_N, "rst_upi_cpu_n", TOP_BASE_ADDR, 0x48, 28, 28, 0x1 },
};
NEW_CHIP_REG test_glb_clr_reg[] =
{
	{ TEST_TOP_GLB_CNT_CLR, "glb_cnt_clr", TOP_BASE_ADDR, 0xf, 0, 0, 0x0 },
	{ TEST_TOP_GLB_ALM_CLR, "glb_alm_clr", TOP_BASE_ADDR, 0xf, 1, 1, 0x0 },
	{ TEST_TOP_GLB_INT_CLR, "glb_int_clr", TOP_BASE_ADDR, 0xf, 2, 2, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_num_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_NUM, "pps_tod_rx_num", TOP_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_type_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_TYPE, "pps_tod_rx_type", TOP_BASE_ADDR, 0xa, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_len_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_LEN, "pps_tod_rx_len", TOP_BASE_ADDR, 0xb, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_tod_byte0_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_TOD_BYTE0, "pps_tod_rx_tod_byte0", TOP_BASE_ADDR, 0xc, 7, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_tod_sec_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_TOD_SEC_0, "pps_tod_rx_tod_sec_0", TOP_BASE_ADDR, 0xd, 31, 0, 0x0 },
	{ TEST_TOP_PPS_TOD_RX_TOD_SEC_1, "pps_tod_rx_tod_sec_1", TOP_BASE_ADDR, 0xe, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_tod_nsec_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_TOD_NSEC, "pps_tod_rx_tod_nsec", TOP_BASE_ADDR, 0x10, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_tod_res_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_TOD_RES, "pps_tod_rx_tod_res", TOP_BASE_ADDR, 0x11, 31, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_crc_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_CRC, "pps_tod_rx_crc", TOP_BASE_ADDR, 0x12, 7, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_real_time_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_REAL_TIME_0, "pps_tod_rx_real_time_0", TOP_BASE_ADDR, 0x13, 31, 0, 0x0 },
	{ TEST_TOP_PPS_TOD_RX_REAL_TIME_1, "pps_tod_rx_real_time_1", TOP_BASE_ADDR, 0x14, 31, 0, 0x0 },
	{ TEST_TOP_PPS_TOD_RX_REAL_TIME_2, "pps_tod_rx_real_time_2", TOP_BASE_ADDR, 0x15, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_cnt_tod_lost_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_CNT_TOD_LOST, "pps_tod_rx_cnt_tod_lost", TOP_BASE_ADDR, 0x16, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_cnt_pps_adjust_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_CNT_PPS_ADJUST, "pps_tod_rx_cnt_pps_adjust", TOP_BASE_ADDR, 0x17, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_cnt_crc_eor_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_CNT_CRC_EOR, "pps_tod_rx_cnt_crc_eor", TOP_BASE_ADDR, 0x18, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_cnt_wave_broken_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_CNT_WAVE_BROKEN, "pps_tod_rx_cnt_wave_broken", TOP_BASE_ADDR, 0x19, 15, 0, 0x0 },
};
NEW_CHIP_REG test_pps_tod_rx_reg_cnt_25m_reg[] =
{
	{ TEST_TOP_PPS_TOD_RX_REG_CNT_25M, "pps_tod_rx_reg_cnt_25m", TOP_BASE_ADDR, 0x1a, 2, 0, 0x0 },
};
NEW_CHIP_REG test_measure_cnt_max_reg[] =
{
	{ TEST_TOP_MEASURE_CNT_MAX, "measure_cnt_max", TOP_BASE_ADDR, 0x2b, 29, 0, 0x0 },
};
NEW_CHIP_REG test_measure_cnt_min_reg[] =
{
	{ TEST_TOP_MEASURE_CNT_MIN, "measure_cnt_min", TOP_BASE_ADDR, 0x38, 29, 0, 0x0 },
};
NEW_CHIP_REG test_top_int1_int_reg[] =
{
	{ TEST_TOP_OH_RX0_INT, "oh_rx0_int", TOP_BASE_ADDR, 0x51, 0, 0, 0x0 },
	{ TEST_TOP_OH_RX1_INT, "oh_rx1_int", TOP_BASE_ADDR, 0x51, 1, 1, 0x0 },
	{ TEST_TOP_OH_RX2_INT, "oh_rx2_int", TOP_BASE_ADDR, 0x51, 2, 2, 0x0 },
	{ TEST_TOP_OH_RX3_INT, "oh_rx3_int", TOP_BASE_ADDR, 0x51, 3, 3, 0x0 },
	{ TEST_TOP_OH_RX4_INT, "oh_rx4_int", TOP_BASE_ADDR, 0x51, 4, 4, 0x0 },
	{ TEST_TOP_OH_RX5_INT, "oh_rx5_int", TOP_BASE_ADDR, 0x51, 5, 5, 0x0 },
	{ TEST_TOP_OH_RX6_INT, "oh_rx6_int", TOP_BASE_ADDR, 0x51, 6, 6, 0x0 },
	{ TEST_TOP_OH_RX7_INT, "oh_rx7_int", TOP_BASE_ADDR, 0x51, 7, 7, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX0_INT, "flexe_oam_rx0_int", TOP_BASE_ADDR, 0x51, 8, 8, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX2_INT, "flexe_oam_rx2_int", TOP_BASE_ADDR, 0x51, 10, 10, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX3_INT, "flexe_oam_rx3_int", TOP_BASE_ADDR, 0x51, 11, 11, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX4_INT, "flexe_oam_rx4_int", TOP_BASE_ADDR, 0x51, 12, 12, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX5_INT, "flexe_oam_rx5_int", TOP_BASE_ADDR, 0x51, 13, 13, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX6_INT, "flexe_oam_rx6_int", TOP_BASE_ADDR, 0x51, 14, 14, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX7_INT, "flexe_oam_rx7_int", TOP_BASE_ADDR, 0x51, 15, 15, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX8_INT, "flexe_oam_rx8_int", TOP_BASE_ADDR, 0x51, 16, 16, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX9_INT, "flexe_oam_rx9_int", TOP_BASE_ADDR, 0x51, 17, 17, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX10_INT, "flexe_oam_rx10_int", TOP_BASE_ADDR, 0x51, 18, 18, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX11_INT, "flexe_oam_rx11_int", TOP_BASE_ADDR, 0x51, 19, 19, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX0_INT, "flexe_oam_tx0_int", TOP_BASE_ADDR, 0x51, 20, 20, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX1_INT, "flexe_oam_tx1_int", TOP_BASE_ADDR, 0x51, 21, 21, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX2_INT, "flexe_oam_tx2_int", TOP_BASE_ADDR, 0x51, 22, 22, 0x0 },
	{ TEST_TOP_SAR_RX_INT, "sar_rx_int", TOP_BASE_ADDR, 0x51, 23, 23, 0x0 },
	{ TEST_TOP_SAR_TX_INT, "sar_tx_int", TOP_BASE_ADDR, 0x51, 24, 24, 0x0 },
	{ TEST_TOP_SAR_OAM_RX0_INT, "sar_oam_rx0_int", TOP_BASE_ADDR, 0x51, 25, 25, 0x0 },
	{ TEST_TOP_SAR_OAM_RX2_INT, "sar_oam_rx2_int", TOP_BASE_ADDR, 0x51, 27, 27, 0x0 },
	{ TEST_TOP_SAR_OAM_RX3_INT, "sar_oam_rx3_int", TOP_BASE_ADDR, 0x51, 28, 28, 0x0 },
	{ TEST_TOP_SAR_OAM_RX4_INT, "sar_oam_rx4_int", TOP_BASE_ADDR, 0x51, 29, 29, 0x0 },
	{ TEST_TOP_SAR_OAM_RX5_INT, "sar_oam_rx5_int", TOP_BASE_ADDR, 0x51, 30, 30, 0x0 },
	{ TEST_TOP_SAR_OAM_RX6_INT, "sar_oam_rx6_int", TOP_BASE_ADDR, 0x51, 31, 31, 0x0 },
};
NEW_CHIP_REG test_top_int1_int_mask_reg[] =
{
	{ TEST_TOP_OH_RX0_INT_MASK, "oh_rx0_int_mask", TOP_BASE_ADDR, 0x52, 0, 0, 0x0 },
	{ TEST_TOP_OH_RX1_INT_MASK, "oh_rx1_int_mask", TOP_BASE_ADDR, 0x52, 1, 1, 0x0 },
	{ TEST_TOP_OH_RX2_INT_MASK, "oh_rx2_int_mask", TOP_BASE_ADDR, 0x52, 2, 2, 0x0 },
	{ TEST_TOP_OH_RX3_INT_MASK, "oh_rx3_int_mask", TOP_BASE_ADDR, 0x52, 3, 3, 0x0 },
	{ TEST_TOP_OH_RX4_INT_MASK, "oh_rx4_int_mask", TOP_BASE_ADDR, 0x52, 4, 4, 0x0 },
	{ TEST_TOP_OH_RX5_INT_MASK, "oh_rx5_int_mask", TOP_BASE_ADDR, 0x52, 5, 5, 0x0 },
	{ TEST_TOP_OH_RX6_INT_MASK, "oh_rx6_int_mask", TOP_BASE_ADDR, 0x52, 6, 6, 0x0 },
	{ TEST_TOP_OH_RX7_INT_MASK, "oh_rx7_int_mask", TOP_BASE_ADDR, 0x52, 7, 7, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX0_INT_MASK, "flexe_oam_rx0_int_mask", TOP_BASE_ADDR, 0x52, 8, 8, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX2_INT_MASK, "flexe_oam_rx2_int_mask", TOP_BASE_ADDR, 0x52, 10, 10, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX3_INT_MASK, "flexe_oam_rx3_int_mask", TOP_BASE_ADDR, 0x52, 11, 11, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX4_INT_MASK, "flexe_oam_rx4_int_mask", TOP_BASE_ADDR, 0x52, 12, 12, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX5_INT_MASK, "flexe_oam_rx5_int_mask", TOP_BASE_ADDR, 0x52, 13, 13, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX6_INT_MASK, "flexe_oam_rx6_int_mask", TOP_BASE_ADDR, 0x52, 14, 14, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX7_INT_MASK, "flexe_oam_rx7_int_mask", TOP_BASE_ADDR, 0x52, 15, 15, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX8_INT_MASK, "flexe_oam_rx8_int_mask", TOP_BASE_ADDR, 0x52, 16, 16, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX9_INT_MASK, "flexe_oam_rx9_int_mask", TOP_BASE_ADDR, 0x52, 17, 17, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX10_INT_MASK, "flexe_oam_rx10_int_mask", TOP_BASE_ADDR, 0x52, 18, 18, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX11_INT_MASK, "flexe_oam_rx11_int_mask", TOP_BASE_ADDR, 0x52, 19, 19, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX0_INT_MASK, "flexe_oam_tx0_int_mask", TOP_BASE_ADDR, 0x52, 20, 20, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX1_INT_MASK, "flexe_oam_tx1_int_mask", TOP_BASE_ADDR, 0x52, 21, 21, 0x0 },
	{ TEST_TOP_FLEXE_OAM_TX2_INT_MASK, "flexe_oam_tx2_int_mask", TOP_BASE_ADDR, 0x52, 22, 22, 0x0 },
	{ TEST_TOP_SAR_RX_INT_MASK, "sar_rx_int_mask", TOP_BASE_ADDR, 0x52, 23, 23, 0x0 },
	{ TEST_TOP_SAR_TX_INT_MASK, "sar_tx_int_mask", TOP_BASE_ADDR, 0x52, 24, 24, 0x0 },
	{ TEST_TOP_SAR_OAM_RX0_INT_MASK, "sar_oam_rx0_int_mask", TOP_BASE_ADDR, 0x52, 25, 25, 0x0 },
	{ TEST_TOP_SAR_OAM_RX2_INT_MASK, "sar_oam_rx2_int_mask", TOP_BASE_ADDR, 0x52, 27, 27, 0x0 },
	{ TEST_TOP_SAR_OAM_RX3_INT_MASK, "sar_oam_rx3_int_mask", TOP_BASE_ADDR, 0x52, 28, 28, 0x0 },
	{ TEST_TOP_SAR_OAM_RX4_INT_MASK, "sar_oam_rx4_int_mask", TOP_BASE_ADDR, 0x52, 29, 29, 0x0 },
	{ TEST_TOP_SAR_OAM_RX5_INT_MASK, "sar_oam_rx5_int_mask", TOP_BASE_ADDR, 0x52, 30, 30, 0x0 },
	{ TEST_TOP_SAR_OAM_RX6_INT_MASK, "sar_oam_rx6_int_mask", TOP_BASE_ADDR, 0x52, 31, 31, 0x0 },
};
NEW_CHIP_REG test_top_int2_int_reg[] =
{
	{ TEST_TOP_SAR_OAM_RX7_INT, "sar_oam_rx7_int", TOP_BASE_ADDR, 0x53, 1, 1, 0x0 },
	{ TEST_TOP_SAR_OAM_RX8_INT, "sar_oam_rx8_int", TOP_BASE_ADDR, 0x53, 2, 2, 0x0 },
	{ TEST_TOP_SAR_OAM_RX9_INT, "sar_oam_rx9_int", TOP_BASE_ADDR, 0x53, 3, 3, 0x0 },
	{ TEST_TOP_SAR_OAM_RX10_INT, "sar_oam_rx10_int", TOP_BASE_ADDR, 0x53, 4, 4, 0x0 },
	{ TEST_TOP_SAR_OAM_RX11_INT, "sar_oam_rx11_int", TOP_BASE_ADDR, 0x53, 5, 5, 0x0 },
	{ TEST_TOP_SAR_OAM_TX0_INT, "sar_oam_tx0_int", TOP_BASE_ADDR, 0x53, 6, 6, 0x0 },
	{ TEST_TOP_SAR_OAM_TX1_INT, "sar_oam_tx1_int", TOP_BASE_ADDR, 0x53, 7, 7, 0x0 },
	{ TEST_TOP_SAR_OAM_TX2_INT, "sar_oam_tx2_int", TOP_BASE_ADDR, 0x53, 8, 8, 0x0 },
	{ TEST_TOP_IEEE_1588_INT, "ieee_1588_int", TOP_BASE_ADDR, 0x53, 9, 9, 0x0 },
	{ TEST_TOP_SAR_OAM_RX13_INT, "sar_oam_rx13_int", TOP_BASE_ADDR, 0x53, 12, 12, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX13_INT, "flexe_oam_rx13_int", TOP_BASE_ADDR, 0x53, 13, 13, 0x0 },
	{ TEST_TOP_SAR_OAM_RX14_INT, "sar_oam_rx14_int", TOP_BASE_ADDR, 0x53, 14, 14, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX14_INT, "flexe_oam_rx14_int", TOP_BASE_ADDR, 0x53, 15, 15, 0x0 },
	{ TEST_TOP_SAR_OAM_RX15_INT, "sar_oam_rx15_int", TOP_BASE_ADDR, 0x53, 16, 16, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX15_INT, "flexe_oam_rx15_int", TOP_BASE_ADDR, 0x53, 17, 17, 0x0 },
	{ TEST_TOP_PORT_BUFFER0_INT, "port_buffer0_int", TOP_BASE_ADDR, 0x53, 18, 18, 0x0 },
	{ TEST_TOP_PORT_BUFFER1_INT, "port_buffer1_int", TOP_BASE_ADDR, 0x53, 19, 19, 0x0 },
	{ TEST_TOP_PORT_BUFFER2_INT, "port_buffer2_int", TOP_BASE_ADDR, 0x53, 20, 20, 0x0 },
	{ TEST_TOP_PORT_BUFFER3_INT, "port_buffer3_int", TOP_BASE_ADDR, 0x53, 21, 21, 0x0 },
	{ TEST_TOP_PORT_BUFFER4_INT, "port_buffer4_int", TOP_BASE_ADDR, 0x53, 22, 22, 0x0 },
	{ TEST_TOP_PORT_BUFFER5_INT, "port_buffer5_int", TOP_BASE_ADDR, 0x53, 23, 23, 0x0 },
	{ TEST_TOP_PORT_BUFFER6_INT, "port_buffer6_int", TOP_BASE_ADDR, 0x53, 24, 24, 0x0 },
	{ TEST_TOP_PORT_BUFFER7_INT, "port_buffer7_int", TOP_BASE_ADDR, 0x53, 25, 25, 0x0 },
};
NEW_CHIP_REG test_top_int2_int_mask_reg[] =
{
	{ TEST_TOP_SAR_OAM_RX7_INT_MASK, "sar_oam_rx7_int_mask", TOP_BASE_ADDR, 0x54, 1, 1, 0x0 },
	{ TEST_TOP_SAR_OAM_RX8_INT_MASK, "sar_oam_rx8_int_mask", TOP_BASE_ADDR, 0x54, 2, 2, 0x0 },
	{ TEST_TOP_SAR_OAM_RX9_INT_MASK, "sar_oam_rx9_int_mask", TOP_BASE_ADDR, 0x54, 3, 3, 0x0 },
	{ TEST_TOP_SAR_OAM_RX10_INT_MASK, "sar_oam_rx10_int_mask", TOP_BASE_ADDR, 0x54, 4, 4, 0x0 },
	{ TEST_TOP_SAR_OAM_RX11_INT_MASK, "sar_oam_rx11_int_mask", TOP_BASE_ADDR, 0x54, 5, 5, 0x0 },
	{ TEST_TOP_SAR_OAM_TX0_INT_MASK, "sar_oam_tx0_int_mask", TOP_BASE_ADDR, 0x54, 6, 6, 0x0 },
	{ TEST_TOP_SAR_OAM_TX1_INT_MASK, "sar_oam_tx1_int_mask", TOP_BASE_ADDR, 0x54, 7, 7, 0x0 },
	{ TEST_TOP_SAR_OAM_TX2_INT_MASK, "sar_oam_tx2_int_mask", TOP_BASE_ADDR, 0x54, 8, 8, 0x0 },
	{ TEST_TOP_IEEE_1588_INT_MASK, "ieee_1588_int_mask", TOP_BASE_ADDR, 0x54, 9, 9, 0x0 },
	{ TEST_TOP_SAR_OAM_RX13_INT_MASK, "sar_oam_rx13_int_mask", TOP_BASE_ADDR, 0x54, 12, 12, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX13_INT_MASK, "flexe_oam_rx13_int_mask", TOP_BASE_ADDR, 0x54, 13, 13, 0x0 },
	{ TEST_TOP_SAR_OAM_RX14_INT_MASK, "sar_oam_rx14_int_mask", TOP_BASE_ADDR, 0x54, 14, 14, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX14_INT_MASK, "flexe_oam_rx14_int_mask", TOP_BASE_ADDR, 0x54, 15, 15, 0x0 },
	{ TEST_TOP_SAR_OAM_RX15_INT_MASK, "sar_oam_rx15_int_mask", TOP_BASE_ADDR, 0x54, 16, 16, 0x0 },
	{ TEST_TOP_FLEXE_OAM_RX15_INT_MASK, "flexe_oam_rx15_int_mask", TOP_BASE_ADDR, 0x54, 17, 17, 0x0 },
	{ TEST_TOP_PORT_BUFFER0_INT_MASK, "port_buffer0_int_mask", TOP_BASE_ADDR, 0x54, 18, 18, 0x0 },
	{ TEST_TOP_PORT_BUFFER1_INT_MASK, "port_buffer1_int_mask", TOP_BASE_ADDR, 0x54, 19, 19, 0x0 },
	{ TEST_TOP_PORT_BUFFER2_INT_MASK, "port_buffer2_int_mask", TOP_BASE_ADDR, 0x54, 20, 20, 0x0 },
	{ TEST_TOP_PORT_BUFFER3_INT_MASK, "port_buffer3_int_mask", TOP_BASE_ADDR, 0x54, 21, 21, 0x0 },
	{ TEST_TOP_PORT_BUFFER4_INT_MASK, "port_buffer4_int_mask", TOP_BASE_ADDR, 0x54, 22, 22, 0x0 },
	{ TEST_TOP_PORT_BUFFER5_INT_MASK, "port_buffer5_int_mask", TOP_BASE_ADDR, 0x54, 23, 23, 0x0 },
	{ TEST_TOP_PORT_BUFFER6_INT_MASK, "port_buffer6_int_mask", TOP_BASE_ADDR, 0x54, 24, 24, 0x0 },
	{ TEST_TOP_PORT_BUFFER7_INT_MASK, "port_buffer7_int_mask", TOP_BASE_ADDR, 0x54, 25, 25, 0x0 },
};


/*B66SAR_TX*/
NEW_CHIP_REG test_sar_tx_glb_cfg_reg[] =
{
	{ TEST_B66SAR_TX_LOOPBACK, "tx_loopback", B66SAR_TX_BASE_ADDR, 0x0, 0, 0, 0x0 },
	{ TEST_B66SAR_TX_B66SIZE_29B, "b66size_29b", B66SAR_TX_BASE_ADDR, 0x0, 1, 1, 0x0 },
	{ TEST_B66SAR_TX_CNT_PROB, "tx_cnt_prob", B66SAR_TX_BASE_ADDR, 0x0, 14, 8, 0x0 },
	{ TEST_B66SAR_TX_BT256_CNT_PROB, "tx_bt256_cnt_prob", B66SAR_TX_BASE_ADDR, 0x0, 25, 16, 0x200 },
	{ TEST_B66SAR_TX_BDCOME_LOOPBACK, "bdcome_loopback", B66SAR_TX_BASE_ADDR, 0x0, 31, 31, 0x0 },
};
NEW_CHIP_REG test_ra2sar_cfg1_reg[] =
{
	{ TEST_B66SAR_TX_RA2SAR_CFG_PERIOD, "ra2sar_cfg_period", B66SAR_TX_BASE_ADDR, 0x1, 12, 0, 0x9cb },
	{ TEST_B66SAR_TX_RA2SAR_NOM_CNT, "ra2sar_nom_cnt", B66SAR_TX_BASE_ADDR, 0x1, 25, 13, 0x75f },
};
NEW_CHIP_REG test_sar_tx_ctrl_cfg_reg[] =
{
	{ TEST_B66SAR_TX_SEG_EN, "seg_en", B66SAR_TX_BASE_ADDR, 0x2, 0, 0, 0x0 },
	{ TEST_B66SAR_TX_RA2SAR_CH_EN, "ra2sar_ch_en", B66SAR_TX_BASE_ADDR, 0x2, 1, 1, 0x0 },
	{ TEST_B66SAR_TX_CHAN_MAP, "tx_chan_map", B66SAR_TX_BASE_ADDR, 0x2, 17, 8, 0x200 },
};
NEW_CHIP_REG test_ra2sar_cfg2_reg[] =
{
	{ TEST_B66SAR_TX_RA2SAR_Q, "ra2sar_q", B66SAR_TX_BASE_ADDR, 0x53, 12, 0, 0x20 },
	{ TEST_B66SAR_TX_RA2SAR_ADJ_01EN, "ra2sar_adj_01en", B66SAR_TX_BASE_ADDR, 0x53, 13, 13, 0x0 },
	{ TEST_B66SAR_TX_RA2SAR_CALENDAR_EN, "ra2sar_calendar_en", B66SAR_TX_BASE_ADDR, 0x53, 14, 14, 0x0 },
	{ TEST_B66SAR_TX_ADJ_IN_CHECK_VALUE, "adj_in_check_value", B66SAR_TX_BASE_ADDR, 0x53, 24, 15, 0x64 },
	{ TEST_B66SAR_TX_ADJ_IN_CORRECT_EN, "adj_in_correct_en", B66SAR_TX_BASE_ADDR, 0x53, 25, 25, 0x1 },
};
NEW_CHIP_REG test_ra2sar_cfg3_reg[] =
{
	{ TEST_B66SAR_TX_LOCAL_EN, "local_en", B66SAR_TX_BASE_ADDR, 0x58, 0, 0, 0x1 },
	{ TEST_B66SAR_TX_LOCAL_M, "local_m", B66SAR_TX_BASE_ADDR, 0x58, 10, 1, 0x1aa },
};
NEW_CHIP_REG test_ra2sar_table_switch_reg[] =
{
	{ TEST_B66SAR_TX_RA2SAR_TABLE_SWITCH, "ra2sar_table_switch", B66SAR_TX_BASE_ADDR, 0x55, 0, 0, 0x0 },
};
NEW_CHIP_REG test_sar_tx_pkt_cnt_reg[] =
{
	{ TEST_B66SAR_TX_PKT_CNT, "tx_pkt_cnt", B66SAR_TX_BASE_ADDR, 0x54, 31, 0, 0x0 },
};
NEW_CHIP_REG test_sar_tx_pkt_cnt_256_reg[] =
{
	{ TEST_B66SAR_TX_PKT_CNT_256, "tx_pkt_cnt_256", B66SAR_TX_BASE_ADDR, 0x59, 31, 0, 0x0 },
};
NEW_CHIP_REG test_sar_tx_state_reg[] =
{
	{ TEST_B66SAR_TX_SEG_FSM_STATE, "seg_fsm_state", B66SAR_TX_BASE_ADDR, 0x56, 3, 0, 0x0 },
	{ TEST_B66SAR_TX_RA2SAR_CURRENT_TABLE, "ra2sar_current_table", B66SAR_TX_BASE_ADDR, 0x56, 4, 4, 0x0 },
	{ TEST_B66SAR_TX_RA2SAR_BUSY, "ra2sar_busy", B66SAR_TX_BASE_ADDR, 0x56, 5, 5, 0x0 },
};
NEW_CHIP_REG test_ra2sar_env_alm_reg[] =
{
	{ TEST_B66SAR_TX_ADJ_IN_ALM, "adj_in_alm", B66SAR_TX_BASE_ADDR, 0x57, 0, 0, 0x0 },
	{ TEST_B66SAR_TX_I1_OVERFLOW, "i1_overflow", B66SAR_TX_BASE_ADDR, 0x57, 1, 1, 0x0 },
	{ TEST_B66SAR_TX_I1_UNDERFLOW, "i1_underflow", B66SAR_TX_BASE_ADDR, 0x57, 2, 2, 0x0 },
	{ TEST_B66SAR_TX_I2_OVERFLOW, "i2_overflow", B66SAR_TX_BASE_ADDR, 0x57, 3, 3, 0x0 },
	{ TEST_B66SAR_TX_I2_UNDERFLOW, "i2_underflow", B66SAR_TX_BASE_ADDR, 0x57, 4, 4, 0x0 },
	{ TEST_B66SAR_TX_BTFIFO_FULL, "tx_btfifo_full", B66SAR_TX_BASE_ADDR, 0x57, 5, 5, 0x0 },
};
NEW_CHIP_REG test_b66sar_tx_int_reg[] =
{
	{ TEST_B66SAR_TX_BTFIFO_FULL_INT, "tx_btfifo_full_int", B66SAR_TX_BASE_ADDR, 0x60, 1, 0, 0x0 },
};
NEW_CHIP_REG test_b66sar_tx_int_mask_reg[] =
{
	{ TEST_B66SAR_TX_BTFIFO_FULL_INT_MASK, "tx_btfifo_full_int_mask", B66SAR_TX_BASE_ADDR, 0x61, 1, 0, 0x0 },
};


/*MCMACRX*/
NEW_CHIP_REG test_macrx_cfg_reg[] =
{
	{ TEST_MCMACRX_WATCHDOG_EN, "watchdog_en", MCMACRX_BASE_ADDR, 0x0, 15, 15, 0x1 },
	{ TEST_MCMACRX_WATCHDOG_TIME, "watchdog_time", MCMACRX_BASE_ADDR, 0x0, 23, 16, 0x12 },
};
NEW_CHIP_REG test_macrx_enable_reg[] =
{
	{ TEST_MCMACRX_CHAN_EN_0, "chan_en_0", MCMACRX_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_MCMACRX_CHAN_EN_1, "chan_en_1", MCMACRX_BASE_ADDR, 0x2, 31, 0, 0x0 },
	{ TEST_MCMACRX_CHAN_EN_2, "chan_en_2", MCMACRX_BASE_ADDR, 0x3, 15, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_stat_enable_reg[] =
{
	{ TEST_MCMACRX_STAT_EN_0, "stat_en_0", MCMACRX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_MCMACRX_STAT_EN_1, "stat_en_1", MCMACRX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_MCMACRX_STAT_EN_2, "stat_en_2", MCMACRX_BASE_ADDR, 0x6, 15, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_crc_cutoff_en_reg[] =
{
	{ TEST_MCMACRX_CRC_CUTOFF_EN_0, "crc_cutoff_en_0", MCMACRX_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_MCMACRX_CRC_CUTOFF_EN_1, "crc_cutoff_en_1", MCMACRX_BASE_ADDR, 0x8, 31, 0, 0x0 },
	{ TEST_MCMACRX_CRC_CUTOFF_EN_2, "crc_cutoff_en_2", MCMACRX_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_statistic_clear_chan_reg[] =
{
	{ TEST_MCMACRX_STA_CLR_CHAN, "sta_clr_chan", MCMACRX_BASE_ADDR, 0xb, 6, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_crc_errdrop_en_reg[] =
{
	{ TEST_MCMACRX_CRC_ERRDROP_EN_0, "crc_errdrop_en_0", MCMACRX_BASE_ADDR, 0x10, 31, 0, 0xffffffff },
	{ TEST_MCMACRX_CRC_ERRDROP_EN_1, "crc_errdrop_en_1", MCMACRX_BASE_ADDR, 0x11, 31, 0, 0xffffffff },
	{ TEST_MCMACRX_CRC_ERRDROP_EN_2, "crc_errdrop_en_2", MCMACRX_BASE_ADDR, 0x12, 15, 0, 0xffff },
};
NEW_CHIP_REG test_macrx_decode_sel_reg[] =
{
	{ TEST_MCMACRX_DECODE_SEL, "decode_sel", MCMACRX_BASE_ADDR, 0x13, 0, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_statistic_clear_reg[] =
{
	{ TEST_MCMACRX_STA_CLR_PLS, "sta_clr_pls", MCMACRX_BASE_ADDR, 0xc, 0, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_statistic_all_clr_reg[] =
{
	{ TEST_MCMACRX_STA_ALL_CLR, "sta_all_clr", MCMACRX_BASE_ADDR, 0xf, 1, 1, 0x0 },
};
NEW_CHIP_REG test_macrx_out_sop_reg[] =
{
	{ TEST_MCMACRX_SOP_CNT, "sop_cnt", MCMACRX_BASE_ADDR, 0x20, 31, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_out_eop_reg[] =
{
	{ TEST_MCMACRX_EOP_CNT, "eop_cnt", MCMACRX_BASE_ADDR, 0x21, 31, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_sta_ram_init_done_reg[] =
{
	{ TEST_MCMACRX_STA_RAM_INIT_DONE, "sta_ram_init_done", MCMACRX_BASE_ADDR, 0x30, 0, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_error_reg[] =
{
	{ TEST_MCMACRX_SOP_WARNING, "sop_warning", MCMACRX_BASE_ADDR, 0x40, 0, 0, 0x0 },
	{ TEST_MCMACRX_EOP_WARNING, "eop_warning", MCMACRX_BASE_ADDR, 0x40, 1, 1, 0x0 },
	{ TEST_MCMACRX_SW_RAM_FULL, "sw_ram_full", MCMACRX_BASE_ADDR, 0x40, 2, 2, 0x0 },
};
NEW_CHIP_REG test_macrx_fault_alm_reg[] =
{
	{ TEST_MCMACRX_ARM_DECODE_ERR_0, "arm_decode_err_0", MCMACRX_BASE_ADDR, 0x58, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_DECODE_ERR_1, "arm_decode_err_1", MCMACRX_BASE_ADDR, 0x59, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_DECODE_ERR_2, "arm_decode_err_2", MCMACRX_BASE_ADDR, 0x5a, 15, 0, 0x0 },
	{ TEST_MCMACRX_ARM_RF_0, "arm_rf_0", MCMACRX_BASE_ADDR, 0x55, 31, 16, 0x0 },
	{ TEST_MCMACRX_ARM_RF_1, "arm_rf_1", MCMACRX_BASE_ADDR, 0x56, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_RF_2, "arm_rf_2", MCMACRX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_LF_0, "arm_lf_0", MCMACRX_BASE_ADDR, 0x53, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_LF_1, "arm_lf_1", MCMACRX_BASE_ADDR, 0x54, 31, 0, 0x0 },
	{ TEST_MCMACRX_ARM_LF_2, "arm_lf_2", MCMACRX_BASE_ADDR, 0x55, 15, 0, 0x0 },
};
NEW_CHIP_REG test_macrx_sta_ram_ecc_correct_alm_reg[] =
{
	{ TEST_MCMACRX_ENCODE_ERR_CODE_ECC_ERR_CORRECT1, "encode_err_code_ecc_err_correct1", MCMACRX_BASE_ADDR, 0x60, 0, 0, 0x0 },
	{ TEST_MCMACRX_DECODE_ERR_CODE_ECC_ERR_CORRECT, "decode_err_code_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 1, 1, 0x0 },
	{ TEST_MCMACRX_TOTAL_FRAME_ECC_ERR_CORRECT, "total_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 2, 2, 0x0 },
	{ TEST_MCMACRX_GOOD_FRAME_ECC_ERR_CORRECT, "good_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 3, 3, 0x0 },
	{ TEST_MCMACRX_BAD_FRAME_ECC_ERR_CORRECT, "bad_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 4, 4, 0x0 },
	{ TEST_MCMACRX_FRAGMENT_FRAME_ECC_ERR_CORRECT, "fragment_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 5, 5, 0x0 },
	{ TEST_MCMACRX_JABBER_FRAME_ECC_ERR_CORRECT, "jabber_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 6, 6, 0x0 },
	{ TEST_MCMACRX_OVERSIZE_FRAME_ECC_ERR_CORRECT, "oversize_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 7, 7, 0x0 },
	{ TEST_MCMACRX_UNICAST_FRAME_ECC_ERR_CORRECT, "unicast_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 8, 8, 0x0 },
	{ TEST_MCMACRX_MULTICAST_FRAME_ECC_ERR_CORRECT, "multicast_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 9, 9, 0x0 },
	{ TEST_MCMACRX_BROADCAST_FRAME_ECC_ERR_CORRECT, "broadcast_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 10, 10, 0x0 },
	{ TEST_MCMACRX_B64_FRAME_ECC_ERR_CORRECT, "b64_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 11, 11, 0x0 },
	{ TEST_MCMACRX_B65_MPL_FRAME_ECC_ERR_CORRECT, "b65_mpl_frame_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 12, 12, 0x0 },
	{ TEST_MCMACRX_TOTAL_BYTES_ECC_ERR_CORRECT, "total_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 13, 13, 0x0 },
	{ TEST_MCMACRX_GOOD_BYTES_ECC_ERR_CORRECT, "good_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 14, 14, 0x0 },
	{ TEST_MCMACRX_BAD_BYTES_ECC_ERR_CORRECT, "bad_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 15, 15, 0x0 },
	{ TEST_MCMACRX_FRAGMENT_BYTES_ECC_ERR_CORRECT, "fragment_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 16, 16, 0x0 },
	{ TEST_MCMACRX_JABBER_BYTES_ECC_ERR_CORRECT, "jabber_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 17, 17, 0x0 },
	{ TEST_MCMACRX_OVERSIZE_BYTES_ECC_ERR_CORRECT, "oversize_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 18, 18, 0x0 },
	{ TEST_MCMACRX_UNICAST_BYTES_ECC_ERR_CORRECT, "unicast_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 19, 19, 0x0 },
	{ TEST_MCMACRX_MULTICAST_BYTES_ECC_ERR_CORRECT, "multicast_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 20, 20, 0x0 },
	{ TEST_MCMACRX_BROADCAST_BYTES_ECC_ERR_CORRECT, "broadcast_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 21, 21, 0x0 },
	{ TEST_MCMACRX_B64_BYTES_ECC_ERR_CORRECT, "b64_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 22, 22, 0x0 },
	{ TEST_MCMACRX_B65_MPL_BYTES_ECC_ERR_CORRECT, "b65_mpl_bytes_ecc_err_correct", MCMACRX_BASE_ADDR, 0x60, 23, 23, 0x0 },
};
NEW_CHIP_REG test_macrx_sta_ram_ecc_uncorrect_alm_reg[] =
{
	{ TEST_MCMACRX_ENCODE_ERR_CODE_ECC_ERR_UNCORRECT1, "encode_err_code_ecc_err_uncorrect1", MCMACRX_BASE_ADDR, 0x61, 0, 0, 0x0 },
	{ TEST_MCMACRX_DECODE_ERR_CODE_ECC_ERR_UNCORRECT, "decode_err_code_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 1, 1, 0x0 },
	{ TEST_MCMACRX_TOTAL_FRAME_ECC_ERR_UNCORRECT, "total_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 2, 2, 0x0 },
	{ TEST_MCMACRX_GOOD_FRAME_ECC_ERR_UNCORRECT, "good_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 3, 3, 0x0 },
	{ TEST_MCMACRX_BAD_FRAME_ECC_ERR_UNCORRECT, "bad_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 4, 4, 0x0 },
	{ TEST_MCMACRX_FRAGMENT_FRAME_ECC_ERR_UNCORRECT, "fragment_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 5, 5, 0x0 },
	{ TEST_MCMACRX_JABBER_FRAME_ECC_ERR_UNCORRECT, "jabber_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 6, 6, 0x0 },
	{ TEST_MCMACRX_OVERSIZE_FRAME_ECC_ERR_UNCORRECT, "oversize_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 7, 7, 0x0 },
	{ TEST_MCMACRX_UNICAST_FRAME_ECC_ERR_UNCORRECT, "unicast_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 8, 8, 0x0 },
	{ TEST_MCMACRX_MULTICAST_FRAME_ECC_ERR_UNCORRECT, "multicast_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 9, 9, 0x0 },
	{ TEST_MCMACRX_BROADCAST_FRAME_ECC_ERR_UNCORRECT, "broadcast_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 10, 10, 0x0 },
	{ TEST_MCMACRX_B64_FRAME_ECC_ERR_UNCORRECT, "b64_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 11, 11, 0x0 },
	{ TEST_MCMACRX_B65_MPL_FRAME_ECC_ERR_UNCORRECT, "b65_mpl_frame_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 12, 12, 0x0 },
	{ TEST_MCMACRX_TOTAL_BYTES_ECC_ERR_UNCORRECT, "total_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 13, 13, 0x0 },
	{ TEST_MCMACRX_GOOD_BYTES_ECC_ERR_UNCORRECT, "good_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 14, 14, 0x0 },
	{ TEST_MCMACRX_BAD_BYTES_ECC_ERR_UNCORRECT, "bad_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 15, 15, 0x0 },
	{ TEST_MCMACRX_FRAGMENT_BYTES_ECC_ERR_UNCORRECT, "fragment_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 16, 16, 0x0 },
	{ TEST_MCMACRX_JABBER_BYTES_ECC_ERR_UNCORRECT, "jabber_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 17, 17, 0x0 },
	{ TEST_MCMACRX_OVERSIZE_BYTES_ECC_ERR_UNCORRECT, "oversize_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 18, 18, 0x0 },
	{ TEST_MCMACRX_UNICAST_BYTES_ECC_ERR_UNCORRECT, "unicast_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 19, 19, 0x0 },
	{ TEST_MCMACRX_MULTICAST_BYTES_ECC_ERR_UNCORRECT, "multicast_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 20, 20, 0x0 },
	{ TEST_MCMACRX_BROADCAST_BYTES_ECC_ERR_UNCORRECT, "broadcast_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 21, 21, 0x0 },
	{ TEST_MCMACRX_B64_BYTES_ECC_ERR_UNCORRECT, "b64_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 22, 22, 0x0 },
	{ TEST_MCMACRX_B65_MPL_BYTES_ECC_ERR_UNCORRECT, "b65_mpl_bytes_ecc_err_uncorrect", MCMACRX_BASE_ADDR, 0x61, 23, 23, 0x0 },
};
NEW_CHIP_REG test_macrx_eop_abnor_alm_reg[] =
{
	{ TEST_MCMACRX_EOP_ABNOR_ALM_0, "eop_abnor_alm_0", MCMACRX_BASE_ADDR, 0x62, 31, 0, 0x0 },
	{ TEST_MCMACRX_EOP_ABNOR_ALM_1, "eop_abnor_alm_1", MCMACRX_BASE_ADDR, 0x63, 31, 0, 0x0 },
	{ TEST_MCMACRX_EOP_ABNOR_ALM_2, "eop_abnor_alm_2", MCMACRX_BASE_ADDR, 0x64, 15, 0, 0x0 },
};

/*PCS_TX_ENV*/
/*
NEW_CHIP_REG test_pcs_tx_env_cfg1_reg[] =
{
	{ TEST_PCS_TX_ENV_CFG_PERIOD, "tx_env_cfg_period", PCS_TX_ENV_BASE_ADDR, 0x0, 11, 0, 0xc3d },
	{ TEST_PCS_TX_ENV_NOM_CNT, "tx_env_nom_cnt", PCS_TX_ENV_BASE_ADDR, 0x0, 23, 12, 0x714 },
	{ TEST_PCS_TX_ENV_MULTIPLIER, "tx_env_multiplier", PCS_TX_ENV_BASE_ADDR, 0x0, 24, 24, 0x0 },
};
NEW_CHIP_REG test_pcs_tx_env_cfg2_reg[] =
{
	{ TEST_PCS_TX_ENV_Q, "tx_env_q", PCS_TX_ENV_BASE_ADDR, 0x4, 11, 0, 0x20 },
	{ TEST_PCS_TX_ENV_ADJ_01EN, "tx_env_adj_01en", PCS_TX_ENV_BASE_ADDR, 0x4, 12, 12, 0x0 },
	{ TEST_PCS_TX_ENV_FIFO_ADJ_EN, "tx_env_fifo_adj_en", PCS_TX_ENV_BASE_ADDR, 0x4, 13, 13, 0x1 },
	{ TEST_PCS_TX_ENV_FIFO_ADJ_PERIOD, "tx_env_fifo_adj_period", PCS_TX_ENV_BASE_ADDR, 0x4, 21, 14, 0x0 },
	{ TEST_PCS_TX_KP4_EN, "kp4_en", PCS_TX_ENV_BASE_ADDR, 0x4, 22, 22, 0x0 },
	{ TEST_PCS_TX_FLEXE_BYPASS, "flexe_bypass", PCS_TX_ENV_BASE_ADDR, 0x4, 23, 23, 0x0 },
	{ TEST_PCS_TX_ENV_EN, "env_en", PCS_TX_ENV_BASE_ADDR, 0x4, 24, 24, 0x0 },
	{ TEST_PCS_TX_FLEXE_ENV_FIFO_ADJ_EN, "flexe_env_fifo_adj_en", PCS_TX_ENV_BASE_ADDR, 0x4, 25, 25, 0x1 },
	{ TEST_PCS_TX_FLEXE_ENV_FIFO_ADJ_PERIOD, "flexe_env_fifo_adj_period", PCS_TX_ENV_BASE_ADDR, 0x4, 27, 26, 0x0 },
};
NEW_CHIP_REG test_gearbox_tx_cfg1_reg[] =
{
	{ TEST_PCS_TX_FIFO_JUDGE_VALUE, "fifo_judge_value", PCS_TX_ENV_BASE_ADDR, 0x8, 2, 0, 0x4 },
	{ TEST_PCS_TX_ALM_MASK, "alm_mask", PCS_TX_ENV_BASE_ADDR, 0x8, 3, 3, 0x0 },
	{ TEST_PCS_TX_SEL_50G_100G, "sel_50g_100g", PCS_TX_ENV_BASE_ADDR, 0x8, 4, 4, 0x0 },
	{ TEST_PCS_TX_PROTECT_EN, "protect_en", PCS_TX_ENV_BASE_ADDR, 0x8, 5, 5, 0x1 },
	{ TEST_PCS_TX_PROTECT_TIME, "protect_time", PCS_TX_ENV_BASE_ADDR, 0x8, 8, 6, 0x0 },
	{ TEST_PCS_TX_INIT_PTR, "init_ptr", PCS_TX_ENV_BASE_ADDR, 0x8, 12, 9, 0x8 },
	{ TEST_PCS_TX_FORCE_LOCK, "force_lock", PCS_TX_ENV_BASE_ADDR, 0x8, 13, 13, 0x0 },
	{ TEST_PCS_TX_RST_2LANE_N, "rst_2lane_n", PCS_TX_ENV_BASE_ADDR, 0x8, 17, 14, 0xf },
};
NEW_CHIP_REG test_gearbox_tx_cfg2_reg[] =
{
	{ TEST_PCS_TX_MAX_MIN_CLR, "max_min_clr", PCS_TX_ENV_BASE_ADDR, 0x9, 0, 0, 0x0 },
	{ TEST_PCS_TX_FIFO_START_LEVEL, "fifo_start_level", PCS_TX_ENV_BASE_ADDR, 0x9, 5, 1, 0x6 },
	{ TEST_PCS_TX_FIFO_HIGH_LEVEL, "fifo_high_level", PCS_TX_ENV_BASE_ADDR, 0x9, 10, 6, 0x8 },
	{ TEST_PCS_TX_FIFO_LOW_LEVEL, "fifo_low_level", PCS_TX_ENV_BASE_ADDR, 0x9, 15, 11, 0x4 },
	{ TEST_PCS_TX_FIFO_MAX_MIN_CLR, "fifo_max_min_clr", PCS_TX_ENV_BASE_ADDR, 0x9, 16, 16, 0x0 },
};
NEW_CHIP_REG test_pcs_tx_env_cfg3_reg[] =
{
	{ TEST_PCS_TX_ADJ_IN_CHECK_VALUE, "adj_in_check_value", PCS_TX_ENV_BASE_ADDR, 0x21, 9, 0, 0x64 },
	{ TEST_PCS_TX_ADJ_IN_CORRECT_EN, "adj_in_correct_en", PCS_TX_ENV_BASE_ADDR, 0x21, 10, 10, 0x1 },
	{ TEST_PCS_TX_FIFO_ADJ_MAX_EN, "fifo_adj_max_en", PCS_TX_ENV_BASE_ADDR, 0x21, 11, 11, 0x1 },
	{ TEST_PCS_TX_LOCAL_EN, "local_en", PCS_TX_ENV_BASE_ADDR, 0x21, 12, 12, 0x1 },
	{ TEST_PCS_TX_LOCAL_M, "local_m", PCS_TX_ENV_BASE_ADDR, 0x21, 22, 13, 0x1eb },
};
NEW_CHIP_REG test_gearbox_tx_state_reg[] =
{
	{ TEST_PCS_TX_MAX_LEVEL, "max_level", PCS_TX_ENV_BASE_ADDR, 0x11, 3, 0, 0x0 },
	{ TEST_PCS_TX_MIN_LEVEL, "min_level", PCS_TX_ENV_BASE_ADDR, 0x11, 7, 4, 0x0 },
	{ TEST_PCS_TX_FIFO_MAX_LEVEL, "fifo_max_level", PCS_TX_ENV_BASE_ADDR, 0x11, 12, 8, 0x0 },
	{ TEST_PCS_TX_FIFO_MIN_LEVEL, "fifo_min_level", PCS_TX_ENV_BASE_ADDR, 0x11, 17, 13, 0x0 },
};
NEW_CHIP_REG test_gearbox_tx_alm_reg[] =
{
	{ TEST_PCS_TX_LEVEL_HIGH_ALM, "level_high_alm", PCS_TX_ENV_BASE_ADDR, 0x19, 0, 0, 0x0 },
	{ TEST_PCS_TX_LEVEL_LOW_ALM, "level_low_alm", PCS_TX_ENV_BASE_ADDR, 0x19, 1, 1, 0x0 },
	{ TEST_PCS_TX_FIFO_FULL, "fifo_full", PCS_TX_ENV_BASE_ADDR, 0x19, 2, 2, 0x0 },
	{ TEST_PCS_TX_FIFO_EMPTY, "fifo_empty", PCS_TX_ENV_BASE_ADDR, 0x19, 3, 3, 0x0 },
	{ TEST_PCS_TX_FIFO_HIGH_ALM, "fifo_high_alm", PCS_TX_ENV_BASE_ADDR, 0x19, 4, 4, 0x0 },
	{ TEST_PCS_TX_FIFO_LOW_ALM, "fifo_low_alm", PCS_TX_ENV_BASE_ADDR, 0x19, 5, 5, 0x0 },
};
NEW_CHIP_REG test_pcs_tx_env_alm_reg[] =
{
	{ TEST_PCS_TX_ADJ_IN_ALM, "adj_in_alm", PCS_TX_ENV_BASE_ADDR, 0x25, 3, 0, 0x0 },
	{ TEST_PCS_TX_I1_OVERFLOW, "i1_overflow", PCS_TX_ENV_BASE_ADDR, 0x25, 7, 4, 0x0 },
	{ TEST_PCS_TX_I1_UNDERFLOW, "i1_underflow", PCS_TX_ENV_BASE_ADDR, 0x25, 11, 8, 0x0 },
	{ TEST_PCS_TX_I2_OVERFLOW, "i2_overflow", PCS_TX_ENV_BASE_ADDR, 0x25, 15, 12, 0x0 },
	{ TEST_PCS_TX_I2_UNDERFLOW, "i2_underflow", PCS_TX_ENV_BASE_ADDR, 0x25, 19, 16, 0x0 },
};
NEW_CHIP_REG test_gearbox_tx_alm2_reg[] =
{
	{ TEST_PCS_TX_UNLOCK, "tx_unlock", PCS_TX_ENV_BASE_ADDR, 0x26, 11, 8, 0x0 },
	{ TEST_PCS_TX_PLL_UNLOCK, "pll_unlock", PCS_TX_ENV_BASE_ADDR, 0x26, 7, 0, 0x0 },
};
*/

/*PCS_RX_ENV*/
/*
NEW_CHIP_REG test_pcs_rx_env_cfg1_reg[] =
{
	{ TEST_PCS_RX_SMOOTH_CFG_PERIOD, "smooth_cfg_period", PCS_RX_ENV_BASE_ADDR, 0x0, 11, 0, 0xfa5 },
	{ TEST_PCS_RX_SMOOTH_NOM_CNT, "smooth_nom_cnt", PCS_RX_ENV_BASE_ADDR, 0x0, 23, 12, 0x73d },
	{ TEST_PCS_RX_ADJ_IN_CORRECT_EN, "adj_in_correct_en", PCS_RX_ENV_BASE_ADDR, 0x0, 24, 24, 0x1 },
	{ TEST_PCS_RX_FIFO_ADJ_MAX_EN, "fifo_adj_max_en", PCS_RX_ENV_BASE_ADDR, 0x0, 25, 25, 0x1 },
	{ TEST_PCS_RX_SRC_SEL, "src_sel", PCS_RX_ENV_BASE_ADDR, 0x0, 26, 26, 0x0 },
	{ TEST_PCS_RX_KP4_EN, "kp4_en", PCS_RX_ENV_BASE_ADDR, 0x0, 27, 27, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_env_cfg2_reg[] =
{
	{ TEST_PCS_RX_SMOOTH_Q, "smooth_q", PCS_RX_ENV_BASE_ADDR, 0x4, 11, 0, 0x20 },
	{ TEST_PCS_RX_SMOOTH_ADJ_01EN, "smooth_adj_01en", PCS_RX_ENV_BASE_ADDR, 0x4, 12, 12, 0x0 },
	{ TEST_PCS_RX_SMOOTH_FIFO_ADJ_EN, "smooth_fifo_adj_en", PCS_RX_ENV_BASE_ADDR, 0x4, 13, 13, 0x1 },
	{ TEST_PCS_RX_SMOOTH_FIFO_ADJ_PERIOD, "smooth_fifo_adj_period", PCS_RX_ENV_BASE_ADDR, 0x4, 21, 14, 0x0 },
	{ TEST_PCS_RX_ADJ_IN_CHECK_VALUE, "adj_in_check_value", PCS_RX_ENV_BASE_ADDR, 0x4, 31, 22, 0x64 },
};
NEW_CHIP_REG test_gearbox_rx_cfg_reg[] =
{
	{ TEST_PCS_RX_FIFO_JUDGE_VALUE, "fifo_judge_value", PCS_RX_ENV_BASE_ADDR, 0x8, 2, 0, 0x4 },
	{ TEST_PCS_RX_ALM_MASK, "alm_mask", PCS_RX_ENV_BASE_ADDR, 0x8, 3, 3, 0x0 },
	{ TEST_PCS_RX_SEL_50G_100G, "sel_50g_100g", PCS_RX_ENV_BASE_ADDR, 0x8, 4, 4, 0x0 },
	{ TEST_PCS_RX_PROTECT_EN, "protect_en", PCS_RX_ENV_BASE_ADDR, 0x8, 5, 5, 0x1 },
	{ TEST_PCS_RX_PROTECT_TIME, "protect_time", PCS_RX_ENV_BASE_ADDR, 0x8, 8, 6, 0x0 },
	{ TEST_PCS_RX_LOCK_MASK, "lock_mask", PCS_RX_ENV_BASE_ADDR, 0x8, 12, 9, 0x0 },
	{ TEST_PCS_RX_MAX_MIN_CLR, "max_min_clr", PCS_RX_ENV_BASE_ADDR, 0x8, 20, 13, 0x0 },
	{ TEST_PCS_RX_INIT_PTR, "init_ptr", PCS_RX_ENV_BASE_ADDR, 0x8, 24, 21, 0x8 },
	{ TEST_PCS_RX_FORCE_LOCK, "force_lock", PCS_RX_ENV_BASE_ADDR, 0x8, 25, 25, 0x0 },
	{ TEST_PCS_RX_RST_2LANE_N, "rst_2lane_n", PCS_RX_ENV_BASE_ADDR, 0x8, 29, 26, 0xf },
};
NEW_CHIP_REG test_pcs_rx_env_cfg3_reg[] =
{
	{ TEST_PCS_RX_LOCAL_EN, "local_en", PCS_RX_ENV_BASE_ADDR, 0xd, 0, 0, 0x1 },
	{ TEST_PCS_RX_LOCAL_M, "local_m", PCS_RX_ENV_BASE_ADDR, 0xd, 10, 1, 0x1da },
};
NEW_CHIP_REG test_max_level_reg[] =
{
	{ TEST_PCS_RX_MAX_LEVEL, "max_level", PCS_RX_ENV_BASE_ADDR, 0xa, 31, 0, 0x0 },
};
NEW_CHIP_REG test_min_level_reg[] =
{
	{ TEST_PCS_RX_MIN_LEVEL, "min_level", PCS_RX_ENV_BASE_ADDR, 0xb, 31, 0, 0x0 },
};
NEW_CHIP_REG test_gearbox_rx_alm_reg[] =
{
	{ TEST_PCS_RX_LEVEL_HIGH_ALM, "level_high_alm", PCS_RX_ENV_BASE_ADDR, 0x9, 7, 0, 0x0 },
	{ TEST_PCS_RX_LEVEL_LOW_ALM, "level_low_alm", PCS_RX_ENV_BASE_ADDR, 0x9, 15, 8, 0x0 },
	{ TEST_PCS_RX_CDR_UNLOCK, "cdr_unlock", PCS_RX_ENV_BASE_ADDR, 0x9, 23, 16, 0x0 },
	{ TEST_PCS_RX_UNLOCK, "rx_unlock", PCS_RX_ENV_BASE_ADDR, 0x9, 27, 24, 0x0 },
};
NEW_CHIP_REG test_pcs_rx_smooth_alm_reg[] =
{
	{ TEST_PCS_RX_ADJ_IN_ALM, "adj_in_alm", PCS_RX_ENV_BASE_ADDR, 0xc, 3, 0, 0x0 },
	{ TEST_PCS_RX_I1_OVERFLOW, "i1_overflow", PCS_RX_ENV_BASE_ADDR, 0xc, 7, 4, 0x0 },
	{ TEST_PCS_RX_I1_UNDERFLOW, "i1_underflow", PCS_RX_ENV_BASE_ADDR, 0xc, 11, 8, 0x0 },
	{ TEST_PCS_RX_I2_OVERFLOW, "i2_overflow", PCS_RX_ENV_BASE_ADDR, 0xc, 15, 12, 0x0 },
	{ TEST_PCS_RX_I2_UNDERFLOW, "i2_underflow", PCS_RX_ENV_BASE_ADDR, 0xc, 19, 16, 0x0 },
};
*/
/*B66SAR_TX*/
NEW_CHIP_REG test_ra2sar_m_1st_reg[] =
{
	{ TEST_RA2SAR_M_1ST, "ra2sar_m_1st", B66SAR_TX_311M_BASE_ADDR, 0x0, 31, 0, 0xab77b8b0 },
};
NEW_CHIP_REG test_ra2sar_base_m_1st_reg[] =
{
	{ TEST_RA2SAR_BASE_M_1ST, "ra2sar_base_m_1st", B66SAR_TX_311M_BASE_ADDR, 0x1, 31, 0, 0xab77c2b0 },
};
NEW_CHIP_REG test_ra2sar_cfg_311m_reg[] =
{
	{ TEST_RA2SAR_MULTIPLIER, "ra2sar_multiplier", B66SAR_TX_311M_BASE_ADDR, 0x2, 1, 0, 0x3 },
	{ TEST_RA2SAR_BYPASS_M_N_2ND, "ra2sar_bypass_m_n_2nd", B66SAR_TX_311M_BASE_ADDR, 0x2, 2, 2, 0x0 },
};
NEW_CHIP_REG test_ra2sar_m_2nd_reg[] =
{
	{ TEST_RA2SAR_M_2ND, "ra2sar_m_2nd", B66SAR_TX_311M_BASE_ADDR, 0x3, 31, 0, 0xfebc44ff },
};
NEW_CHIP_REG test_ra2sar_base_m_2nd_reg[] =
{
	{ TEST_RA2SAR_BASE_M_2ND, "ra2sar_base_m_2nd", B66SAR_TX_311M_BASE_ADDR, 0x4, 31, 0, 0xfff8d4ff },
};

/*CHAN*/
NEW_CHIP_REG test_levelclr_channelize_reg[] =
{
	{ TEST_CHAN_LEVELCLR_CHANNELIZE, "levelclr_channelize", CHANNELIZE_BASE_ADDR, 0x0, 0, 0, 0x0 },
};
NEW_CHIP_REG test_bypass_en_reg[] =
{
	{ TEST_CHAN_BYPASS_EN, "bypass_en", CHANNELIZE_BASE_ADDR, 0x1, 7, 0, 0x0 },
	{ TEST_CHAN_B66REPLACE_EN, "b66replace_en", CHANNELIZE_BASE_ADDR, 0x1, 15, 8, 0x0 },
	{ TEST_CHAN_B66REPLACE_PATTERN, "b66replace_pattern", CHANNELIZE_BASE_ADDR, 0x1, 31, 16, 0x0 },
};
NEW_CHIP_REG test_pcschid_cfg_reg[] =
{
	{ TEST_CHAN_PCSCHID_CFG_0, "pcschid_cfg_0", CHANNELIZE_BASE_ADDR, 0x2, 31, 0, 0xffffffff },
	{ TEST_CHAN_PCSCHID_CFG_1, "pcschid_cfg_1", CHANNELIZE_BASE_ADDR, 0x3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_maxlevel_channelize_reg[] =
{
	{ TEST_CHAN_MAXLEVEL_CHANNELIZE_0, "maxlevel_channelize_0", CHANNELIZE_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_CHAN_MAXLEVEL_CHANNELIZE_1, "maxlevel_channelize_1", CHANNELIZE_BASE_ADDR, 0x5, 7, 0, 0x0 },
};
NEW_CHIP_REG test_full_channelize_reg[] =
{
	{ TEST_CHAN_FULL_CHANNELIZE, "full_channelize", CHANNELIZE_BASE_ADDR, 0x6, 4, 0, 0x0 },
};

/*OAM_TX*/
NEW_CHIP_REG test_oam_joit_bip_cfg_reg[] =
{
	{ TEST_OAM_TX_BAS_BRK_CFG, "bas_brk_cfg", OAM_TX_BASE_ADDR, 0x0, 2, 2, 0x1 },
	{ TEST_OAM_TX_LPI_INSERT_EN, "lpi_insert_en", OAM_TX_BASE_ADDR, 0x0, 3, 3, 0x1 },
	{ TEST_OAM_TX_LF_INSERT_EN, "lf_insert_en", OAM_TX_BASE_ADDR, 0x0, 4, 4, 0x1 },
	{ TEST_OAM_TX_RF_INSERT_EN, "rf_insert_en", OAM_TX_BASE_ADDR, 0x0, 5, 5, 0x1 },
	{ TEST_OAM_TX_BAS_BRK_CH_CFG, "bas_brk_ch_cfg", OAM_TX_BASE_ADDR, 0x0, 12, 6, 0x0 },
	{ TEST_OAM_TX_TS_1DM_INSERT_EN, "ts_1dm_insert_en", OAM_TX_BASE_ADDR, 0x0, 13, 13, 0x0 },
	{ TEST_OAM_TX_TS_2DMM_INSERT_EN, "ts_2dmm_insert_en", OAM_TX_BASE_ADDR, 0x0, 14, 14, 0x0 },
	{ TEST_OAM_TX_TS_2DMR_INSERT_EN, "ts_2dmr_insert_en", OAM_TX_BASE_ADDR, 0x0, 15, 15, 0x0 },
	{ TEST_OAM_TX_TS_DM_SEL, "ts_dm_sel", OAM_TX_BASE_ADDR, 0x0, 16, 16, 0x0 },
	{ TEST_OAM_TX_FAULT_RPL_EN, "fault_rpl_en", OAM_TX_BASE_ADDR, 0x0, 17, 17, 0x1 },
};
NEW_CHIP_REG test_bas_idty_cfg_reg[] =
{
	{ TEST_OAM_TX_BAS_IDTY_CFG, "bas_idty_cfg", OAM_TX_BASE_ADDR, 0x1, 3, 0, 0xc },
};
NEW_CHIP_REG test_bas_period_cfg_reg[] =
{
	{ TEST_OAM_TX_BAS_PERIOD_CFG_0, "bas_period_cfg_0", OAM_TX_BASE_ADDR, 0x2, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_PERIOD_CFG_1, "bas_period_cfg_1", OAM_TX_BASE_ADDR, 0x3, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_PERIOD_CFG_2, "bas_period_cfg_2", OAM_TX_BASE_ADDR, 0x4, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_PERIOD_CFG_3, "bas_period_cfg_3", OAM_TX_BASE_ADDR, 0x5, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_PERIOD_CFG_4, "bas_period_cfg_4", OAM_TX_BASE_ADDR, 0x6, 31, 0, 0x0 },
};
NEW_CHIP_REG test_seq_type_cfg_reg[] =
{
	{ TEST_OAM_TX_SEQ_TYPE_CFG_0, "seq_type_cfg_0", OAM_TX_BASE_ADDR, 0x7, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_TYPE_CFG_1, "seq_type_cfg_1", OAM_TX_BASE_ADDR, 0x8, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_TYPE_CFG_2, "seq_type_cfg_2", OAM_TX_BASE_ADDR, 0x9, 15, 0, 0x0 },
};
NEW_CHIP_REG test_seq_num_cfg_reg[] =
{
	{ TEST_OAM_TX_SEQ_NUM_CFG_0, "seq_num_cfg_0", OAM_TX_BASE_ADDR, 0xa, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_1, "seq_num_cfg_1", OAM_TX_BASE_ADDR, 0xb, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_2, "seq_num_cfg_2", OAM_TX_BASE_ADDR, 0xc, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_3, "seq_num_cfg_3", OAM_TX_BASE_ADDR, 0xd, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_4, "seq_num_cfg_4", OAM_TX_BASE_ADDR, 0xe, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_5, "seq_num_cfg_5", OAM_TX_BASE_ADDR, 0xf, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_6, "seq_num_cfg_6", OAM_TX_BASE_ADDR, 0x10, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_7, "seq_num_cfg_7", OAM_TX_BASE_ADDR, 0x11, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_8, "seq_num_cfg_8", OAM_TX_BASE_ADDR, 0x12, 31, 0, 0x0 },
	{ TEST_OAM_TX_SEQ_NUM_CFG_9, "seq_num_cfg_9", OAM_TX_BASE_ADDR, 0x13, 31, 0, 0x0 },
};
NEW_CHIP_REG test_crc_rev_cfg_reg[] =
{
	{ TEST_OAM_TX_CRC_REV_CFG, "crc_rev_cfg", OAM_TX_BASE_ADDR, 0x14, 0, 0, 0x0 },
	{ TEST_OAM_TX_OTH_CRC_REV_CFG, "oth_crc_rev_cfg", OAM_TX_BASE_ADDR, 0x14, 1, 1, 0x0 },
};
NEW_CHIP_REG test_tx_idle_rpl_en_reg[] =
{
	{ TEST_OAM_TX_IDLE_RPL_EN_0, "tx_idle_rpl_en_0", OAM_TX_BASE_ADDR, 0x15, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_IDLE_RPL_EN_1, "tx_idle_rpl_en_1", OAM_TX_BASE_ADDR, 0x16, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_IDLE_RPL_EN_2, "tx_idle_rpl_en_2", OAM_TX_BASE_ADDR, 0x17, 15, 0, 0xffff },
};
NEW_CHIP_REG test_oam_tx_bypass_reg[] =
{
	{ TEST_OAM_TX_OAM_TX_BYPASS, "oam_tx_bypass", OAM_TX_BASE_ADDR, 0x18, 0, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_mask_reg[] =
{
	{ TEST_OAM_TX_BIP_ERR_MASK, "bip_err_mask", OAM_TX_BASE_ADDR, 0x19, 7, 0, 0x0 },
};
NEW_CHIP_REG test_manual_insert_csf_lpi_reg[] =
{
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LPI_0, "manual_insert_csf_lpi_0", OAM_TX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LPI_1, "manual_insert_csf_lpi_1", OAM_TX_BASE_ADDR, 0x1b, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LPI_2, "manual_insert_csf_lpi_2", OAM_TX_BASE_ADDR, 0x1c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_manual_insert_csf_lf_reg[] =
{
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LF_0, "manual_insert_csf_lf_0", OAM_TX_BASE_ADDR, 0x1d, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LF_1, "manual_insert_csf_lf_1", OAM_TX_BASE_ADDR, 0x1e, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_LF_2, "manual_insert_csf_lf_2", OAM_TX_BASE_ADDR, 0x1f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_manual_insert_csf_rf_reg[] =
{
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_RF_0, "manual_insert_csf_rf_0", OAM_TX_BASE_ADDR, 0x20, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_RF_1, "manual_insert_csf_rf_1", OAM_TX_BASE_ADDR, 0x21, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_CSF_RF_2, "manual_insert_csf_rf_2", OAM_TX_BASE_ADDR, 0x22, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bip_err_level_reg[] =
{
	{ TEST_OAM_TX_BIP_ERR_LEVEL_0, "bip_err_level_0", OAM_TX_BASE_ADDR, 0x23, 31, 0, 0x0 },
	{ TEST_OAM_TX_BIP_ERR_LEVEL_1, "bip_err_level_1", OAM_TX_BASE_ADDR, 0x24, 31, 0, 0x0 },
	{ TEST_OAM_TX_BIP_ERR_LEVEL_2, "bip_err_level_2", OAM_TX_BASE_ADDR, 0x25, 15, 0, 0x0 },
};
NEW_CHIP_REG test_oam_tx_bypass_client_reg[] =
{
	{ TEST_OAM_TX_OAM_TX_BYPASS_CLIENT_0, "oam_tx_bypass_client_0", OAM_TX_BASE_ADDR, 0x26, 31, 0, 0x0 },
	{ TEST_OAM_TX_OAM_TX_BYPASS_CLIENT_1, "oam_tx_bypass_client_1", OAM_TX_BASE_ADDR, 0x27, 31, 0, 0x0 },
	{ TEST_OAM_TX_OAM_TX_BYPASS_CLIENT_2, "oam_tx_bypass_client_2", OAM_TX_BASE_ADDR, 0x28, 15, 0, 0x0 },
};
NEW_CHIP_REG test_manual_insert_rdi_reg[] =
{
	{ TEST_OAM_TX_MANUAL_INSERT_RDI_0, "manual_insert_rdi_0", OAM_TX_BASE_ADDR, 0x29, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_RDI_1, "manual_insert_rdi_1", OAM_TX_BASE_ADDR, 0x2a, 31, 0, 0x0 },
	{ TEST_OAM_TX_MANUAL_INSERT_RDI_2, "manual_insert_rdi_2", OAM_TX_BASE_ADDR, 0x2b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_period_cfg01_reg[] =
{
	{ TEST_OAM_TX_BAS_PERIOD_CFG0, "bas_period_cfg0", OAM_TX_BASE_ADDR, 0x6d, 8, 0, 0xf },
	{ TEST_OAM_TX_BAS_PERIOD_CFG1, "bas_period_cfg1", OAM_TX_BASE_ADDR, 0x6d, 17, 9, 0x1f },
};
NEW_CHIP_REG test_bas_period_cfg23_reg[] =
{
	{ TEST_OAM_TX_BAS_PERIOD_CFG2, "bas_period_cfg2", OAM_TX_BASE_ADDR, 0x6e, 8, 0, 0x3f },
	{ TEST_OAM_TX_BAS_PERIOD_CFG3, "bas_period_cfg3", OAM_TX_BASE_ADDR, 0x6e, 17, 9, 0x1ff },
};
NEW_CHIP_REG test_bas_en_cfg_asic_reg[] =
{
	{ TEST_OAM_TX_BAS_EN_CFG_ASIC_0, "bas_en_cfg_asic_0", OAM_TX_BASE_ADDR, 0x70, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_BAS_EN_CFG_ASIC_1, "bas_en_cfg_asic_1", OAM_TX_BASE_ADDR, 0x71, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_BAS_EN_CFG_ASIC_2, "bas_en_cfg_asic_2", OAM_TX_BASE_ADDR, 0x72, 15, 0, 0xffff },
};
NEW_CHIP_REG test_oam_pri_encode_reg[] =
{
	{ TEST_OAM_TX_OAM_PRI_ENCODE, "oam_pri_encode", OAM_TX_BASE_ADDR, 0x73, 1, 0, 0x0 },
	{ TEST_OAM_TX_BAS_SOURCE_SEL, "bas_source_sel", OAM_TX_BASE_ADDR, 0x73, 2, 2, 0x1 },
};
NEW_CHIP_REG test_tx_ohif_fifo_sel_reg[] =
{
	{ TEST_OAM_TX_OHIF_FIFO_SEL_0, "tx_ohif_fifo_sel_0", OAM_TX_BASE_ADDR, 0x74, 31, 0, 0x2c },
	{ TEST_OAM_TX_OHIF_FIFO_SEL_1, "tx_ohif_fifo_sel_1", OAM_TX_BASE_ADDR, 0x75, 31, 0, 0x554 },
	{ TEST_OAM_TX_OHIF_FIFO_SEL_2, "tx_ohif_fifo_sel_2", OAM_TX_BASE_ADDR, 0x76, 31, 0, 0x0 },
	{ TEST_OAM_TX_OHIF_FIFO_SEL_3, "tx_ohif_fifo_sel_3", OAM_TX_BASE_ADDR, 0x77, 31, 0, 0x0 },
};
NEW_CHIP_REG test_oam_cnt_cfg_reg[] =
{
	{ TEST_OAM_TX_OAM_CNT_CH_CFG, "oam_cnt_ch_cfg", OAM_TX_BASE_ADDR, 0xb4, 6, 0, 0x0 },
	{ TEST_OAM_TX_OAM_CNT_CLR, "oam_cnt_clr", OAM_TX_BASE_ADDR, 0xb4, 7, 7, 0x0 },
};
NEW_CHIP_REG test_tx_lpi_idle_rpl_en_reg[] =
{
	{ TEST_OAM_TX_LPI_IDLE_RPL_EN_0, "tx_lpi_idle_rpl_en_0", OAM_TX_BASE_ADDR, 0xb5, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_LPI_IDLE_RPL_EN_1, "tx_lpi_idle_rpl_en_1", OAM_TX_BASE_ADDR, 0xb6, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_LPI_IDLE_RPL_EN_2, "tx_lpi_idle_rpl_en_2", OAM_TX_BASE_ADDR, 0xb7, 15, 0, 0xffff },
};
NEW_CHIP_REG test_tx_insert_66bcode_en_reg[] =
{
	{ TEST_OAM_TX_INSERT_66BCODE_EN_0, "tx_insert_66bcode_en_0", OAM_TX_BASE_ADDR, 0xbd, 31, 0, 0x0 },
	{ TEST_OAM_TX_INSERT_66BCODE_EN_1, "tx_insert_66bcode_en_1", OAM_TX_BASE_ADDR, 0xbe, 31, 0, 0x0 },
	{ TEST_OAM_TX_INSERT_66BCODE_EN_2, "tx_insert_66bcode_en_2", OAM_TX_BASE_ADDR, 0xbf, 15, 0, 0x0 },
};
NEW_CHIP_REG test_new_period_cfg_reg[] =
{
	{ TEST_OAM_TX_NEW_PERIOD_CFG, "new_period_cfg", OAM_TX_BASE_ADDR, 0xc0, 8, 0, 0xf },
	{ TEST_OAM_TX_APS_PERIOD_CFG, "aps_period_cfg", OAM_TX_BASE_ADDR, 0xc0, 20, 12, 0xf },
};
NEW_CHIP_REG test_tx_bas_fifo_num_reg[] =
{
	{ TEST_OAM_TX_BAS_FIFO_NUM, "tx_bas_fifo_num", OAM_TX_BASE_ADDR, 0xc1, 5, 0, 0xc },
};
NEW_CHIP_REG test_tx_lpi_setclr_cfg_reg[] =
{
	{ TEST_OAM_TX_LPI_PRE_CNT, "lpi_pre_cnt", OAM_TX_BASE_ADDR, 0xc2, 2, 0, 0x3 },
	{ TEST_OAM_TX_LPI_POS_CNT, "lpi_pos_cnt", OAM_TX_BASE_ADDR, 0xc2, 6, 4, 0x3 },
};
NEW_CHIP_REG test_tx_insert_66bcode_cfg_reg[] =
{
	{ TEST_OAM_TX_INSERT_66BCODE_CFG_0, "tx_insert_66bcode_cfg_0", OAM_TX_BASE_ADDR, 0xc3, 31, 0, 0x79 },
	{ TEST_OAM_TX_INSERT_66BCODE_CFG_1, "tx_insert_66bcode_cfg_1", OAM_TX_BASE_ADDR, 0xc4, 31, 0, 0x0 },
	{ TEST_OAM_TX_INSERT_66BCODE_CFG_2, "tx_insert_66bcode_cfg_2", OAM_TX_BASE_ADDR, 0xc5, 1, 0, 0x0 },
};
NEW_CHIP_REG test_oam_joit_bip_cfg2_reg[] =
{
	{ TEST_OAM_TX_OAM_JOIT_BIP_CFG_0, "oam_joit_bip_cfg_0", OAM_TX_BASE_ADDR, 0xc6, 31, 0, 0xfffffffd },
	{ TEST_OAM_TX_OAM_JOIT_BIP_CFG_1, "oam_joit_bip_cfg_1", OAM_TX_BASE_ADDR, 0xc7, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_tx_lpi_bas_ins_en_reg[] =
{
	{ TEST_OAM_TX_LPI_BAS_INS_EN_0, "tx_lpi_bas_ins_en_0", OAM_TX_BASE_ADDR, 0xc8, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_LPI_BAS_INS_EN_1, "tx_lpi_bas_ins_en_1", OAM_TX_BASE_ADDR, 0xc9, 31, 0, 0xffffffff },
	{ TEST_OAM_TX_LPI_BAS_INS_EN_2, "tx_lpi_bas_ins_en_2", OAM_TX_BASE_ADDR, 0xca, 15, 0, 0xffff },
};
NEW_CHIP_REG test_bas_crc_err_en_reg[] =
{
	{ TEST_OAM_TX_BAS_CRC_ERR_EN_0, "tx_bas_crc_err_en_0", OAM_TX_BASE_ADDR, 0xcb, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_CRC_ERR_EN_1, "tx_bas_crc_err_en_1", OAM_TX_BASE_ADDR, 0xcc, 31, 0, 0x0 },
	{ TEST_OAM_TX_BAS_CRC_ERR_EN_2, "tx_bas_crc_err_en_2", OAM_TX_BASE_ADDR, 0xcd, 15, 0, 0x0 },
	{ TEST_OAM_TX_BAS_CRC_ERR_MASK, "tx_bas_crc_err_mask", OAM_TX_BASE_ADDR, 0xcd, 19, 16, 0x0 },
};
NEW_CHIP_REG test_bip_err_pulse_reg[] =
{
	{ TEST_OAM_TX_BIP_ERR_PULSE_0, "bip_err_pulse_0", OAM_TX_BASE_ADDR, 0x2c, 31, 0, 0x0 },
	{ TEST_OAM_TX_BIP_ERR_PULSE_1, "bip_err_pulse_1", OAM_TX_BASE_ADDR, 0x2d, 31, 0, 0x0 },
	{ TEST_OAM_TX_BIP_ERR_PULSE_2, "bip_err_pulse_2", OAM_TX_BASE_ADDR, 0x2e, 15, 0, 0x0 },
};
NEW_CHIP_REG test_data_err_pulse_reg[] =
{
	{ TEST_OAM_TX_DATA_ERR_PULSE_0, "data_err_pulse_0", OAM_TX_BASE_ADDR, 0x69, 31, 0, 0x0 },
	{ TEST_OAM_TX_DATA_ERR_PULSE_1, "data_err_pulse_1", OAM_TX_BASE_ADDR, 0x6a, 31, 0, 0x0 },
	{ TEST_OAM_TX_DATA_ERR_PULSE_2, "data_err_pulse_2", OAM_TX_BASE_ADDR, 0x6b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_0t3_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_0, "bas_insert_cnt_0", OAM_TX_BASE_ADDR, 0x2f, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_1, "bas_insert_cnt_1", OAM_TX_BASE_ADDR, 0x2f, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_2, "bas_insert_cnt_2", OAM_TX_BASE_ADDR, 0x2f, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_3, "bas_insert_cnt_3", OAM_TX_BASE_ADDR, 0x2f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_4t7_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_4, "bas_insert_cnt_4", OAM_TX_BASE_ADDR, 0x30, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_5, "bas_insert_cnt_5", OAM_TX_BASE_ADDR, 0x30, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_6, "bas_insert_cnt_6", OAM_TX_BASE_ADDR, 0x30, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_7, "bas_insert_cnt_7", OAM_TX_BASE_ADDR, 0x30, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_8t11_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_8, "bas_insert_cnt_8", OAM_TX_BASE_ADDR, 0x31, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_9, "bas_insert_cnt_9", OAM_TX_BASE_ADDR, 0x31, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_10, "bas_insert_cnt_10", OAM_TX_BASE_ADDR, 0x31, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_11, "bas_insert_cnt_11", OAM_TX_BASE_ADDR, 0x31, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_12t15_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_12, "bas_insert_cnt_12", OAM_TX_BASE_ADDR, 0x32, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_13, "bas_insert_cnt_13", OAM_TX_BASE_ADDR, 0x32, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_14, "bas_insert_cnt_14", OAM_TX_BASE_ADDR, 0x32, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_15, "bas_insert_cnt_15", OAM_TX_BASE_ADDR, 0x32, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_16t19_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_16, "bas_insert_cnt_16", OAM_TX_BASE_ADDR, 0x33, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_17, "bas_insert_cnt_17", OAM_TX_BASE_ADDR, 0x33, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_18, "bas_insert_cnt_18", OAM_TX_BASE_ADDR, 0x33, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_19, "bas_insert_cnt_19", OAM_TX_BASE_ADDR, 0x33, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_20t23_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_20, "bas_insert_cnt_20", OAM_TX_BASE_ADDR, 0x34, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_21, "bas_insert_cnt_21", OAM_TX_BASE_ADDR, 0x34, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_22, "bas_insert_cnt_22", OAM_TX_BASE_ADDR, 0x34, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_23, "bas_insert_cnt_23", OAM_TX_BASE_ADDR, 0x34, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_24t27_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_24, "bas_insert_cnt_24", OAM_TX_BASE_ADDR, 0x35, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_25, "bas_insert_cnt_25", OAM_TX_BASE_ADDR, 0x35, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_26, "bas_insert_cnt_26", OAM_TX_BASE_ADDR, 0x35, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_27, "bas_insert_cnt_27", OAM_TX_BASE_ADDR, 0x35, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_28t31_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_28, "bas_insert_cnt_28", OAM_TX_BASE_ADDR, 0x36, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_29, "bas_insert_cnt_29", OAM_TX_BASE_ADDR, 0x36, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_30, "bas_insert_cnt_30", OAM_TX_BASE_ADDR, 0x36, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_31, "bas_insert_cnt_31", OAM_TX_BASE_ADDR, 0x36, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_32t35_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_32, "bas_insert_cnt_32", OAM_TX_BASE_ADDR, 0x37, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_33, "bas_insert_cnt_33", OAM_TX_BASE_ADDR, 0x37, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_34, "bas_insert_cnt_34", OAM_TX_BASE_ADDR, 0x37, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_35, "bas_insert_cnt_35", OAM_TX_BASE_ADDR, 0x37, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_36t39_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_36, "bas_insert_cnt_36", OAM_TX_BASE_ADDR, 0x38, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_37, "bas_insert_cnt_37", OAM_TX_BASE_ADDR, 0x38, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_38, "bas_insert_cnt_38", OAM_TX_BASE_ADDR, 0x38, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_39, "bas_insert_cnt_39", OAM_TX_BASE_ADDR, 0x38, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_40t43_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_40, "bas_insert_cnt_40", OAM_TX_BASE_ADDR, 0x39, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_41, "bas_insert_cnt_41", OAM_TX_BASE_ADDR, 0x39, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_42, "bas_insert_cnt_42", OAM_TX_BASE_ADDR, 0x39, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_43, "bas_insert_cnt_43", OAM_TX_BASE_ADDR, 0x39, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_44t47_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_44, "bas_insert_cnt_44", OAM_TX_BASE_ADDR, 0x3a, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_45, "bas_insert_cnt_45", OAM_TX_BASE_ADDR, 0x3a, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_46, "bas_insert_cnt_46", OAM_TX_BASE_ADDR, 0x3a, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_47, "bas_insert_cnt_47", OAM_TX_BASE_ADDR, 0x3a, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_48t51_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_48, "bas_insert_cnt_48", OAM_TX_BASE_ADDR, 0x3b, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_49, "bas_insert_cnt_49", OAM_TX_BASE_ADDR, 0x3b, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_50, "bas_insert_cnt_50", OAM_TX_BASE_ADDR, 0x3b, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_51, "bas_insert_cnt_51", OAM_TX_BASE_ADDR, 0x3b, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_52t55_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_52, "bas_insert_cnt_52", OAM_TX_BASE_ADDR, 0x3c, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_53, "bas_insert_cnt_53", OAM_TX_BASE_ADDR, 0x3c, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_54, "bas_insert_cnt_54", OAM_TX_BASE_ADDR, 0x3c, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_55, "bas_insert_cnt_55", OAM_TX_BASE_ADDR, 0x3c, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_56t59_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_56, "bas_insert_cnt_56", OAM_TX_BASE_ADDR, 0x3d, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_57, "bas_insert_cnt_57", OAM_TX_BASE_ADDR, 0x3d, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_58, "bas_insert_cnt_58", OAM_TX_BASE_ADDR, 0x3d, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_59, "bas_insert_cnt_59", OAM_TX_BASE_ADDR, 0x3d, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_60t63_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_60, "bas_insert_cnt_60", OAM_TX_BASE_ADDR, 0x3e, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_61, "bas_insert_cnt_61", OAM_TX_BASE_ADDR, 0x3e, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_62, "bas_insert_cnt_62", OAM_TX_BASE_ADDR, 0x3e, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_63, "bas_insert_cnt_63", OAM_TX_BASE_ADDR, 0x3e, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_64t67_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_64, "bas_insert_cnt_64", OAM_TX_BASE_ADDR, 0x3f, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_65, "bas_insert_cnt_65", OAM_TX_BASE_ADDR, 0x3f, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_66, "bas_insert_cnt_66", OAM_TX_BASE_ADDR, 0x3f, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_67, "bas_insert_cnt_67", OAM_TX_BASE_ADDR, 0x3f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_68t71_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_68, "bas_insert_cnt_68", OAM_TX_BASE_ADDR, 0x40, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_69, "bas_insert_cnt_69", OAM_TX_BASE_ADDR, 0x40, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_70, "bas_insert_cnt_70", OAM_TX_BASE_ADDR, 0x40, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_71, "bas_insert_cnt_71", OAM_TX_BASE_ADDR, 0x40, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_72t75_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_72, "bas_insert_cnt_72", OAM_TX_BASE_ADDR, 0x41, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_73, "bas_insert_cnt_73", OAM_TX_BASE_ADDR, 0x41, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_74, "bas_insert_cnt_74", OAM_TX_BASE_ADDR, 0x41, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_75, "bas_insert_cnt_75", OAM_TX_BASE_ADDR, 0x41, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_insert_cnt_76t79_reg[] =
{
	{ TEST_OAM_TX_BAS_INSERT_CNT_76, "bas_insert_cnt_76", OAM_TX_BASE_ADDR, 0x42, 7, 0, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_77, "bas_insert_cnt_77", OAM_TX_BASE_ADDR, 0x42, 15, 8, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_78, "bas_insert_cnt_78", OAM_TX_BASE_ADDR, 0x42, 23, 16, 0x0 },
	{ TEST_OAM_TX_BAS_INSERT_CNT_79, "bas_insert_cnt_79", OAM_TX_BASE_ADDR, 0x42, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_0t3_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_0, "oth_insert_cnt_0", OAM_TX_BASE_ADDR, 0x43, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_1, "oth_insert_cnt_1", OAM_TX_BASE_ADDR, 0x43, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_2, "oth_insert_cnt_2", OAM_TX_BASE_ADDR, 0x43, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_3, "oth_insert_cnt_3", OAM_TX_BASE_ADDR, 0x43, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_4t7_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_4, "oth_insert_cnt_4", OAM_TX_BASE_ADDR, 0x44, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_5, "oth_insert_cnt_5", OAM_TX_BASE_ADDR, 0x44, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_6, "oth_insert_cnt_6", OAM_TX_BASE_ADDR, 0x44, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_7, "oth_insert_cnt_7", OAM_TX_BASE_ADDR, 0x44, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_8t11_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_8, "oth_insert_cnt_8", OAM_TX_BASE_ADDR, 0x45, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_9, "oth_insert_cnt_9", OAM_TX_BASE_ADDR, 0x45, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_10, "oth_insert_cnt_10", OAM_TX_BASE_ADDR, 0x45, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_11, "oth_insert_cnt_11", OAM_TX_BASE_ADDR, 0x45, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_12t15_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_12, "oth_insert_cnt_12", OAM_TX_BASE_ADDR, 0x46, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_13, "oth_insert_cnt_13", OAM_TX_BASE_ADDR, 0x46, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_14, "oth_insert_cnt_14", OAM_TX_BASE_ADDR, 0x46, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_15, "oth_insert_cnt_15", OAM_TX_BASE_ADDR, 0x46, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_16t19_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_18, "oth_insert_cnt_18", OAM_TX_BASE_ADDR, 0x47, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_19, "oth_insert_cnt_19", OAM_TX_BASE_ADDR, 0x47, 31, 24, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_16, "oth_insert_cnt_16", OAM_TX_BASE_ADDR, 0x47, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_17, "oth_insert_cnt_17", OAM_TX_BASE_ADDR, 0x47, 15, 8, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_20t23_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_20, "oth_insert_cnt_20", OAM_TX_BASE_ADDR, 0x48, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_21, "oth_insert_cnt_21", OAM_TX_BASE_ADDR, 0x48, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_22, "oth_insert_cnt_22", OAM_TX_BASE_ADDR, 0x48, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_23, "oth_insert_cnt_23", OAM_TX_BASE_ADDR, 0x48, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_24t27_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_24, "oth_insert_cnt_24", OAM_TX_BASE_ADDR, 0x49, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_25, "oth_insert_cnt_25", OAM_TX_BASE_ADDR, 0x49, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_26, "oth_insert_cnt_26", OAM_TX_BASE_ADDR, 0x49, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_27, "oth_insert_cnt_27", OAM_TX_BASE_ADDR, 0x49, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_28t31_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_28, "oth_insert_cnt_28", OAM_TX_BASE_ADDR, 0x4a, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_29, "oth_insert_cnt_29", OAM_TX_BASE_ADDR, 0x4a, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_30, "oth_insert_cnt_30", OAM_TX_BASE_ADDR, 0x4a, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_31, "oth_insert_cnt_31", OAM_TX_BASE_ADDR, 0x4a, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_32t35_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_32, "oth_insert_cnt_32", OAM_TX_BASE_ADDR, 0x4b, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_33, "oth_insert_cnt_33", OAM_TX_BASE_ADDR, 0x4b, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_34, "oth_insert_cnt_34", OAM_TX_BASE_ADDR, 0x4b, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_35, "oth_insert_cnt_35", OAM_TX_BASE_ADDR, 0x4b, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_36t39_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_36, "oth_insert_cnt_36", OAM_TX_BASE_ADDR, 0x4c, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_37, "oth_insert_cnt_37", OAM_TX_BASE_ADDR, 0x4c, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_38, "oth_insert_cnt_38", OAM_TX_BASE_ADDR, 0x4c, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_39, "oth_insert_cnt_39", OAM_TX_BASE_ADDR, 0x4c, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_40t43_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_40, "oth_insert_cnt_40", OAM_TX_BASE_ADDR, 0x4d, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_41, "oth_insert_cnt_41", OAM_TX_BASE_ADDR, 0x4d, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_42, "oth_insert_cnt_42", OAM_TX_BASE_ADDR, 0x4d, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_43, "oth_insert_cnt_43", OAM_TX_BASE_ADDR, 0x4d, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_44t47_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_44, "oth_insert_cnt_44", OAM_TX_BASE_ADDR, 0x4e, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_45, "oth_insert_cnt_45", OAM_TX_BASE_ADDR, 0x4e, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_46, "oth_insert_cnt_46", OAM_TX_BASE_ADDR, 0x4e, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_47, "oth_insert_cnt_47", OAM_TX_BASE_ADDR, 0x4e, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_48t51_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_48, "oth_insert_cnt_48", OAM_TX_BASE_ADDR, 0x4f, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_49, "oth_insert_cnt_49", OAM_TX_BASE_ADDR, 0x4f, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_50, "oth_insert_cnt_50", OAM_TX_BASE_ADDR, 0x4f, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_51, "oth_insert_cnt_51", OAM_TX_BASE_ADDR, 0x4f, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_52t55_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_52, "oth_insert_cnt_52", OAM_TX_BASE_ADDR, 0x50, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_53, "oth_insert_cnt_53", OAM_TX_BASE_ADDR, 0x50, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_54, "oth_insert_cnt_54", OAM_TX_BASE_ADDR, 0x50, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_55, "oth_insert_cnt_55", OAM_TX_BASE_ADDR, 0x50, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_56t59_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_56, "oth_insert_cnt_56", OAM_TX_BASE_ADDR, 0x51, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_57, "oth_insert_cnt_57", OAM_TX_BASE_ADDR, 0x51, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_58, "oth_insert_cnt_58", OAM_TX_BASE_ADDR, 0x51, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_59, "oth_insert_cnt_59", OAM_TX_BASE_ADDR, 0x51, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_60t63_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_60, "oth_insert_cnt_60", OAM_TX_BASE_ADDR, 0x52, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_61, "oth_insert_cnt_61", OAM_TX_BASE_ADDR, 0x52, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_62, "oth_insert_cnt_62", OAM_TX_BASE_ADDR, 0x52, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_63, "oth_insert_cnt_63", OAM_TX_BASE_ADDR, 0x52, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_64t67_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_64, "oth_insert_cnt_64", OAM_TX_BASE_ADDR, 0x53, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_65, "oth_insert_cnt_65", OAM_TX_BASE_ADDR, 0x53, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_66, "oth_insert_cnt_66", OAM_TX_BASE_ADDR, 0x53, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_67, "oth_insert_cnt_67", OAM_TX_BASE_ADDR, 0x53, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_68t71_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_68, "oth_insert_cnt_68", OAM_TX_BASE_ADDR, 0x54, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_69, "oth_insert_cnt_69", OAM_TX_BASE_ADDR, 0x54, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_70, "oth_insert_cnt_70", OAM_TX_BASE_ADDR, 0x54, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_71, "oth_insert_cnt_71", OAM_TX_BASE_ADDR, 0x54, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_72t75_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_72, "oth_insert_cnt_72", OAM_TX_BASE_ADDR, 0x55, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_73, "oth_insert_cnt_73", OAM_TX_BASE_ADDR, 0x55, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_74, "oth_insert_cnt_74", OAM_TX_BASE_ADDR, 0x55, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_75, "oth_insert_cnt_75", OAM_TX_BASE_ADDR, 0x55, 31, 24, 0x0 },
};
NEW_CHIP_REG test_oth_insert_cnt_76t79_reg[] =
{
	{ TEST_OAM_TX_OTH_INSERT_CNT_76, "oth_insert_cnt_76", OAM_TX_BASE_ADDR, 0x56, 7, 0, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_77, "oth_insert_cnt_77", OAM_TX_BASE_ADDR, 0x56, 15, 8, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_78, "oth_insert_cnt_78", OAM_TX_BASE_ADDR, 0x56, 23, 16, 0x0 },
	{ TEST_OAM_TX_OTH_INSERT_CNT_79, "oth_insert_cnt_79", OAM_TX_BASE_ADDR, 0x56, 31, 24, 0x0 },
};
NEW_CHIP_REG test_bas_brk_cnt_reg[] =
{
	{ TEST_OAM_TX_BAS_BRK_CNT, "bas_brk_cnt", OAM_TX_BASE_ADDR, 0x6c, 2, 0, 0x0 },
};
NEW_CHIP_REG test_bas_cnt_reg[] =
{
	{ TEST_OAM_TX_BAS_CNT, "bas_cnt", OAM_TX_BASE_ADDR, 0xb0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_aps_cnt_reg[] =
{
	{ TEST_OAM_TX_APS_CNT, "aps_cnt", OAM_TX_BASE_ADDR, 0xb1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_low_cnt_reg[] =
{
	{ TEST_OAM_TX_LOW_CNT, "low_cnt", OAM_TX_BASE_ADDR, 0xb2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_new_cnt_reg[] =
{
	{ TEST_OAM_TX_NEW_CNT, "new_cnt", OAM_TX_BASE_ADDR, 0xb3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_timestamp_lock_reg[] =
{
	{ TEST_OAM_TX_TIMESTAMP_LOCK_0, "timestamp_lock_0", OAM_TX_BASE_ADDR, 0xbb, 31, 0, 0x0 },
	{ TEST_OAM_TX_TIMESTAMP_LOCK_1, "timestamp_lock_1", OAM_TX_BASE_ADDR, 0xbc, 31, 0, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_0, "csf_lpi_0", OAM_TX_BASE_ADDR, 0x57, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_1, "csf_lpi_1", OAM_TX_BASE_ADDR, 0x58, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_2, "csf_lpi_2", OAM_TX_BASE_ADDR, 0x59, 15, 0, 0x0 },
};
NEW_CHIP_REG test_csf_lf_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_0, "csf_lf_0", OAM_TX_BASE_ADDR, 0x5a, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_1, "csf_lf_1", OAM_TX_BASE_ADDR, 0x5b, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_2, "csf_lf_2", OAM_TX_BASE_ADDR, 0x5c, 15, 0, 0x0 },
};
NEW_CHIP_REG test_csf_rf_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_0, "csf_rf_0", OAM_TX_BASE_ADDR, 0x5d, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_1, "csf_rf_1", OAM_TX_BASE_ADDR, 0x5e, 31, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_2, "csf_rf_2", OAM_TX_BASE_ADDR, 0x5f, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_full_rei_reg[] =
{
	{ TEST_OAM_TX_FIFO_FULL_REI_0, "fifo_full_rei_0", OAM_TX_BASE_ADDR, 0x60, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_REI_1, "fifo_full_rei_1", OAM_TX_BASE_ADDR, 0x61, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_REI_2, "fifo_full_rei_2", OAM_TX_BASE_ADDR, 0x62, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_full_aps_reg[] =
{
	{ TEST_OAM_TX_FIFO_FULL_APS_0, "fifo_full_aps_0", OAM_TX_BASE_ADDR, 0x63, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_APS_1, "fifo_full_aps_1", OAM_TX_BASE_ADDR, 0x64, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_APS_2, "fifo_full_aps_2", OAM_TX_BASE_ADDR, 0x65, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_full_low_reg[] =
{
	{ TEST_OAM_TX_FIFO_FULL_LOW_0, "fifo_full_low_0", OAM_TX_BASE_ADDR, 0x66, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_LOW_1, "fifo_full_low_1", OAM_TX_BASE_ADDR, 0x67, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_LOW_2, "fifo_full_low_2", OAM_TX_BASE_ADDR, 0x68, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_full_bas_reg[] =
{
	{ TEST_OAM_TX_FIFO_FULL_BAS_0, "fifo_full_bas_0", OAM_TX_BASE_ADDR, 0x78, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_BAS_1, "fifo_full_bas_1", OAM_TX_BASE_ADDR, 0x79, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_BAS_2, "fifo_full_bas_2", OAM_TX_BASE_ADDR, 0x7a, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_full_new_reg[] =
{
	{ TEST_OAM_TX_FIFO_FULL_NEW_0, "fifo_full_new_0", OAM_TX_BASE_ADDR, 0x7b, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_NEW_1, "fifo_full_new_1", OAM_TX_BASE_ADDR, 0x7c, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_FULL_NEW_2, "fifo_full_new_2", OAM_TX_BASE_ADDR, 0x7d, 15, 0, 0x0 },
};
NEW_CHIP_REG test_fifo_empty_bas_reg[] =
{
	{ TEST_OAM_TX_FIFO_EMPTY_BAS_0, "fifo_empty_bas_0", OAM_TX_BASE_ADDR, 0xb8, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_EMPTY_BAS_1, "fifo_empty_bas_1", OAM_TX_BASE_ADDR, 0xb9, 31, 0, 0x0 },
	{ TEST_OAM_TX_FIFO_EMPTY_BAS_2, "fifo_empty_bas_2", OAM_TX_BASE_ADDR, 0xba, 15, 0, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i0_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_0_INT, "csf_lpi_0_int", OAM_TX_BASE_ADDR, 0x80, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_1_INT, "csf_lpi_1_int", OAM_TX_BASE_ADDR, 0x80, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_2_INT, "csf_lpi_2_int", OAM_TX_BASE_ADDR, 0x80, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_3_INT, "csf_lpi_3_int", OAM_TX_BASE_ADDR, 0x80, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_4_INT, "csf_lpi_4_int", OAM_TX_BASE_ADDR, 0x80, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_5_INT, "csf_lpi_5_int", OAM_TX_BASE_ADDR, 0x80, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_6_INT, "csf_lpi_6_int", OAM_TX_BASE_ADDR, 0x80, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_7_INT, "csf_lpi_7_int", OAM_TX_BASE_ADDR, 0x80, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_8_INT, "csf_lpi_8_int", OAM_TX_BASE_ADDR, 0x80, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_9_INT, "csf_lpi_9_int", OAM_TX_BASE_ADDR, 0x80, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i0_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_0_INT_MASK, "csf_lpi_0_int_mask", OAM_TX_BASE_ADDR, 0x81, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_1_INT_MASK, "csf_lpi_1_int_mask", OAM_TX_BASE_ADDR, 0x81, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_2_INT_MASK, "csf_lpi_2_int_mask", OAM_TX_BASE_ADDR, 0x81, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_3_INT_MASK, "csf_lpi_3_int_mask", OAM_TX_BASE_ADDR, 0x81, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_4_INT_MASK, "csf_lpi_4_int_mask", OAM_TX_BASE_ADDR, 0x81, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_5_INT_MASK, "csf_lpi_5_int_mask", OAM_TX_BASE_ADDR, 0x81, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_6_INT_MASK, "csf_lpi_6_int_mask", OAM_TX_BASE_ADDR, 0x81, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_7_INT_MASK, "csf_lpi_7_int_mask", OAM_TX_BASE_ADDR, 0x81, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_8_INT_MASK, "csf_lpi_8_int_mask", OAM_TX_BASE_ADDR, 0x81, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_9_INT_MASK, "csf_lpi_9_int_mask", OAM_TX_BASE_ADDR, 0x81, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i1_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_10_INT, "csf_lpi_10_int", OAM_TX_BASE_ADDR, 0x82, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_11_INT, "csf_lpi_11_int", OAM_TX_BASE_ADDR, 0x82, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_12_INT, "csf_lpi_12_int", OAM_TX_BASE_ADDR, 0x82, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_13_INT, "csf_lpi_13_int", OAM_TX_BASE_ADDR, 0x82, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_14_INT, "csf_lpi_14_int", OAM_TX_BASE_ADDR, 0x82, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_15_INT, "csf_lpi_15_int", OAM_TX_BASE_ADDR, 0x82, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_16_INT, "csf_lpi_16_int", OAM_TX_BASE_ADDR, 0x82, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_17_INT, "csf_lpi_17_int", OAM_TX_BASE_ADDR, 0x82, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_18_INT, "csf_lpi_18_int", OAM_TX_BASE_ADDR, 0x82, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_19_INT, "csf_lpi_19_int", OAM_TX_BASE_ADDR, 0x82, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i1_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_10_INT_MASK, "csf_lpi_10_int_mask", OAM_TX_BASE_ADDR, 0x83, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_11_INT_MASK, "csf_lpi_11_int_mask", OAM_TX_BASE_ADDR, 0x83, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_12_INT_MASK, "csf_lpi_12_int_mask", OAM_TX_BASE_ADDR, 0x83, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_13_INT_MASK, "csf_lpi_13_int_mask", OAM_TX_BASE_ADDR, 0x83, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_14_INT_MASK, "csf_lpi_14_int_mask", OAM_TX_BASE_ADDR, 0x83, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_15_INT_MASK, "csf_lpi_15_int_mask", OAM_TX_BASE_ADDR, 0x83, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_16_INT_MASK, "csf_lpi_16_int_mask", OAM_TX_BASE_ADDR, 0x83, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_17_INT_MASK, "csf_lpi_17_int_mask", OAM_TX_BASE_ADDR, 0x83, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_18_INT_MASK, "csf_lpi_18_int_mask", OAM_TX_BASE_ADDR, 0x83, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_19_INT_MASK, "csf_lpi_19_int_mask", OAM_TX_BASE_ADDR, 0x83, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i2_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_20_INT, "csf_lpi_20_int", OAM_TX_BASE_ADDR, 0x84, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_21_INT, "csf_lpi_21_int", OAM_TX_BASE_ADDR, 0x84, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_22_INT, "csf_lpi_22_int", OAM_TX_BASE_ADDR, 0x84, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_23_INT, "csf_lpi_23_int", OAM_TX_BASE_ADDR, 0x84, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_24_INT, "csf_lpi_24_int", OAM_TX_BASE_ADDR, 0x84, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_25_INT, "csf_lpi_25_int", OAM_TX_BASE_ADDR, 0x84, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_26_INT, "csf_lpi_26_int", OAM_TX_BASE_ADDR, 0x84, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_27_INT, "csf_lpi_27_int", OAM_TX_BASE_ADDR, 0x84, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_28_INT, "csf_lpi_28_int", OAM_TX_BASE_ADDR, 0x84, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_29_INT, "csf_lpi_29_int", OAM_TX_BASE_ADDR, 0x84, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i2_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_20_INT_MASK, "csf_lpi_20_int_mask", OAM_TX_BASE_ADDR, 0x85, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_21_INT_MASK, "csf_lpi_21_int_mask", OAM_TX_BASE_ADDR, 0x85, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_22_INT_MASK, "csf_lpi_22_int_mask", OAM_TX_BASE_ADDR, 0x85, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_23_INT_MASK, "csf_lpi_23_int_mask", OAM_TX_BASE_ADDR, 0x85, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_24_INT_MASK, "csf_lpi_24_int_mask", OAM_TX_BASE_ADDR, 0x85, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_25_INT_MASK, "csf_lpi_25_int_mask", OAM_TX_BASE_ADDR, 0x85, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_26_INT_MASK, "csf_lpi_26_int_mask", OAM_TX_BASE_ADDR, 0x85, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_27_INT_MASK, "csf_lpi_27_int_mask", OAM_TX_BASE_ADDR, 0x85, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_28_INT_MASK, "csf_lpi_28_int_mask", OAM_TX_BASE_ADDR, 0x85, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_29_INT_MASK, "csf_lpi_29_int_mask", OAM_TX_BASE_ADDR, 0x85, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i3_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_30_INT, "csf_lpi_30_int", OAM_TX_BASE_ADDR, 0x86, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_31_INT, "csf_lpi_31_int", OAM_TX_BASE_ADDR, 0x86, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_32_INT, "csf_lpi_32_int", OAM_TX_BASE_ADDR, 0x86, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_33_INT, "csf_lpi_33_int", OAM_TX_BASE_ADDR, 0x86, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_34_INT, "csf_lpi_34_int", OAM_TX_BASE_ADDR, 0x86, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_35_INT, "csf_lpi_35_int", OAM_TX_BASE_ADDR, 0x86, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_36_INT, "csf_lpi_36_int", OAM_TX_BASE_ADDR, 0x86, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_37_INT, "csf_lpi_37_int", OAM_TX_BASE_ADDR, 0x86, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_38_INT, "csf_lpi_38_int", OAM_TX_BASE_ADDR, 0x86, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_39_INT, "csf_lpi_39_int", OAM_TX_BASE_ADDR, 0x86, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i3_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_30_INT_MASK, "csf_lpi_30_int_mask", OAM_TX_BASE_ADDR, 0x87, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_31_INT_MASK, "csf_lpi_31_int_mask", OAM_TX_BASE_ADDR, 0x87, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_32_INT_MASK, "csf_lpi_32_int_mask", OAM_TX_BASE_ADDR, 0x87, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_33_INT_MASK, "csf_lpi_33_int_mask", OAM_TX_BASE_ADDR, 0x87, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_34_INT_MASK, "csf_lpi_34_int_mask", OAM_TX_BASE_ADDR, 0x87, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_35_INT_MASK, "csf_lpi_35_int_mask", OAM_TX_BASE_ADDR, 0x87, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_36_INT_MASK, "csf_lpi_36_int_mask", OAM_TX_BASE_ADDR, 0x87, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_37_INT_MASK, "csf_lpi_37_int_mask", OAM_TX_BASE_ADDR, 0x87, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_38_INT_MASK, "csf_lpi_38_int_mask", OAM_TX_BASE_ADDR, 0x87, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_39_INT_MASK, "csf_lpi_39_int_mask", OAM_TX_BASE_ADDR, 0x87, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i4_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_40_INT, "csf_lpi_40_int", OAM_TX_BASE_ADDR, 0x88, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_41_INT, "csf_lpi_41_int", OAM_TX_BASE_ADDR, 0x88, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_42_INT, "csf_lpi_42_int", OAM_TX_BASE_ADDR, 0x88, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_43_INT, "csf_lpi_43_int", OAM_TX_BASE_ADDR, 0x88, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_44_INT, "csf_lpi_44_int", OAM_TX_BASE_ADDR, 0x88, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_45_INT, "csf_lpi_45_int", OAM_TX_BASE_ADDR, 0x88, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_46_INT, "csf_lpi_46_int", OAM_TX_BASE_ADDR, 0x88, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_47_INT, "csf_lpi_47_int", OAM_TX_BASE_ADDR, 0x88, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_48_INT, "csf_lpi_48_int", OAM_TX_BASE_ADDR, 0x88, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_49_INT, "csf_lpi_49_int", OAM_TX_BASE_ADDR, 0x88, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i4_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_40_INT_MASK, "csf_lpi_40_int_mask", OAM_TX_BASE_ADDR, 0x89, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_41_INT_MASK, "csf_lpi_41_int_mask", OAM_TX_BASE_ADDR, 0x89, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_42_INT_MASK, "csf_lpi_42_int_mask", OAM_TX_BASE_ADDR, 0x89, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_43_INT_MASK, "csf_lpi_43_int_mask", OAM_TX_BASE_ADDR, 0x89, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_44_INT_MASK, "csf_lpi_44_int_mask", OAM_TX_BASE_ADDR, 0x89, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_45_INT_MASK, "csf_lpi_45_int_mask", OAM_TX_BASE_ADDR, 0x89, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_46_INT_MASK, "csf_lpi_46_int_mask", OAM_TX_BASE_ADDR, 0x89, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_47_INT_MASK, "csf_lpi_47_int_mask", OAM_TX_BASE_ADDR, 0x89, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_48_INT_MASK, "csf_lpi_48_int_mask", OAM_TX_BASE_ADDR, 0x89, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_49_INT_MASK, "csf_lpi_49_int_mask", OAM_TX_BASE_ADDR, 0x89, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i5_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_50_INT, "csf_lpi_50_int", OAM_TX_BASE_ADDR, 0x8a, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_51_INT, "csf_lpi_51_int", OAM_TX_BASE_ADDR, 0x8a, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_52_INT, "csf_lpi_52_int", OAM_TX_BASE_ADDR, 0x8a, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_53_INT, "csf_lpi_53_int", OAM_TX_BASE_ADDR, 0x8a, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_54_INT, "csf_lpi_54_int", OAM_TX_BASE_ADDR, 0x8a, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_55_INT, "csf_lpi_55_int", OAM_TX_BASE_ADDR, 0x8a, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_56_INT, "csf_lpi_56_int", OAM_TX_BASE_ADDR, 0x8a, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_57_INT, "csf_lpi_57_int", OAM_TX_BASE_ADDR, 0x8a, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_58_INT, "csf_lpi_58_int", OAM_TX_BASE_ADDR, 0x8a, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_59_INT, "csf_lpi_59_int", OAM_TX_BASE_ADDR, 0x8a, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i5_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_50_INT_MASK, "csf_lpi_50_int_mask", OAM_TX_BASE_ADDR, 0x8b, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_51_INT_MASK, "csf_lpi_51_int_mask", OAM_TX_BASE_ADDR, 0x8b, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_52_INT_MASK, "csf_lpi_52_int_mask", OAM_TX_BASE_ADDR, 0x8b, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_53_INT_MASK, "csf_lpi_53_int_mask", OAM_TX_BASE_ADDR, 0x8b, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_54_INT_MASK, "csf_lpi_54_int_mask", OAM_TX_BASE_ADDR, 0x8b, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_55_INT_MASK, "csf_lpi_55_int_mask", OAM_TX_BASE_ADDR, 0x8b, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_56_INT_MASK, "csf_lpi_56_int_mask", OAM_TX_BASE_ADDR, 0x8b, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_57_INT_MASK, "csf_lpi_57_int_mask", OAM_TX_BASE_ADDR, 0x8b, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_58_INT_MASK, "csf_lpi_58_int_mask", OAM_TX_BASE_ADDR, 0x8b, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_59_INT_MASK, "csf_lpi_59_int_mask", OAM_TX_BASE_ADDR, 0x8b, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i6_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_60_INT, "csf_lpi_60_int", OAM_TX_BASE_ADDR, 0x8c, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_61_INT, "csf_lpi_61_int", OAM_TX_BASE_ADDR, 0x8c, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_62_INT, "csf_lpi_62_int", OAM_TX_BASE_ADDR, 0x8c, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_63_INT, "csf_lpi_63_int", OAM_TX_BASE_ADDR, 0x8c, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_64_INT, "csf_lpi_64_int", OAM_TX_BASE_ADDR, 0x8c, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_65_INT, "csf_lpi_65_int", OAM_TX_BASE_ADDR, 0x8c, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_66_INT, "csf_lpi_66_int", OAM_TX_BASE_ADDR, 0x8c, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_67_INT, "csf_lpi_67_int", OAM_TX_BASE_ADDR, 0x8c, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_68_INT, "csf_lpi_68_int", OAM_TX_BASE_ADDR, 0x8c, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_69_INT, "csf_lpi_69_int", OAM_TX_BASE_ADDR, 0x8c, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i6_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_60_INT_MASK, "csf_lpi_60_int_mask", OAM_TX_BASE_ADDR, 0x8d, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_61_INT_MASK, "csf_lpi_61_int_mask", OAM_TX_BASE_ADDR, 0x8d, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_62_INT_MASK, "csf_lpi_62_int_mask", OAM_TX_BASE_ADDR, 0x8d, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_63_INT_MASK, "csf_lpi_63_int_mask", OAM_TX_BASE_ADDR, 0x8d, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_64_INT_MASK, "csf_lpi_64_int_mask", OAM_TX_BASE_ADDR, 0x8d, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_65_INT_MASK, "csf_lpi_65_int_mask", OAM_TX_BASE_ADDR, 0x8d, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_66_INT_MASK, "csf_lpi_66_int_mask", OAM_TX_BASE_ADDR, 0x8d, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_67_INT_MASK, "csf_lpi_67_int_mask", OAM_TX_BASE_ADDR, 0x8d, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_68_INT_MASK, "csf_lpi_68_int_mask", OAM_TX_BASE_ADDR, 0x8d, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_69_INT_MASK, "csf_lpi_69_int_mask", OAM_TX_BASE_ADDR, 0x8d, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i7_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_70_INT, "csf_lpi_70_int", OAM_TX_BASE_ADDR, 0x8e, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_71_INT, "csf_lpi_71_int", OAM_TX_BASE_ADDR, 0x8e, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_72_INT, "csf_lpi_72_int", OAM_TX_BASE_ADDR, 0x8e, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_73_INT, "csf_lpi_73_int", OAM_TX_BASE_ADDR, 0x8e, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_74_INT, "csf_lpi_74_int", OAM_TX_BASE_ADDR, 0x8e, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_75_INT, "csf_lpi_75_int", OAM_TX_BASE_ADDR, 0x8e, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_76_INT, "csf_lpi_76_int", OAM_TX_BASE_ADDR, 0x8e, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_77_INT, "csf_lpi_77_int", OAM_TX_BASE_ADDR, 0x8e, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_78_INT, "csf_lpi_78_int", OAM_TX_BASE_ADDR, 0x8e, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_79_INT, "csf_lpi_79_int", OAM_TX_BASE_ADDR, 0x8e, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lpi_i7_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LPI_70_INT_MASK, "csf_lpi_70_int_mask", OAM_TX_BASE_ADDR, 0x8f, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_71_INT_MASK, "csf_lpi_71_int_mask", OAM_TX_BASE_ADDR, 0x8f, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_72_INT_MASK, "csf_lpi_72_int_mask", OAM_TX_BASE_ADDR, 0x8f, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_73_INT_MASK, "csf_lpi_73_int_mask", OAM_TX_BASE_ADDR, 0x8f, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_74_INT_MASK, "csf_lpi_74_int_mask", OAM_TX_BASE_ADDR, 0x8f, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_75_INT_MASK, "csf_lpi_75_int_mask", OAM_TX_BASE_ADDR, 0x8f, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_76_INT_MASK, "csf_lpi_76_int_mask", OAM_TX_BASE_ADDR, 0x8f, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_77_INT_MASK, "csf_lpi_77_int_mask", OAM_TX_BASE_ADDR, 0x8f, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_78_INT_MASK, "csf_lpi_78_int_mask", OAM_TX_BASE_ADDR, 0x8f, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LPI_79_INT_MASK, "csf_lpi_79_int_mask", OAM_TX_BASE_ADDR, 0x8f, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i0_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_0_INT, "csf_lf_0_int", OAM_TX_BASE_ADDR, 0x90, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_1_INT, "csf_lf_1_int", OAM_TX_BASE_ADDR, 0x90, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_2_INT, "csf_lf_2_int", OAM_TX_BASE_ADDR, 0x90, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_3_INT, "csf_lf_3_int", OAM_TX_BASE_ADDR, 0x90, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_4_INT, "csf_lf_4_int", OAM_TX_BASE_ADDR, 0x90, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_5_INT, "csf_lf_5_int", OAM_TX_BASE_ADDR, 0x90, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_6_INT, "csf_lf_6_int", OAM_TX_BASE_ADDR, 0x90, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_7_INT, "csf_lf_7_int", OAM_TX_BASE_ADDR, 0x90, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_8_INT, "csf_lf_8_int", OAM_TX_BASE_ADDR, 0x90, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_9_INT, "csf_lf_9_int", OAM_TX_BASE_ADDR, 0x90, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i0_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_0_INT_MASK, "csf_lf_0_int_mask", OAM_TX_BASE_ADDR, 0x91, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_1_INT_MASK, "csf_lf_1_int_mask", OAM_TX_BASE_ADDR, 0x91, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_2_INT_MASK, "csf_lf_2_int_mask", OAM_TX_BASE_ADDR, 0x91, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_3_INT_MASK, "csf_lf_3_int_mask", OAM_TX_BASE_ADDR, 0x91, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_4_INT_MASK, "csf_lf_4_int_mask", OAM_TX_BASE_ADDR, 0x91, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_5_INT_MASK, "csf_lf_5_int_mask", OAM_TX_BASE_ADDR, 0x91, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_6_INT_MASK, "csf_lf_6_int_mask", OAM_TX_BASE_ADDR, 0x91, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_7_INT_MASK, "csf_lf_7_int_mask", OAM_TX_BASE_ADDR, 0x91, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_8_INT_MASK, "csf_lf_8_int_mask", OAM_TX_BASE_ADDR, 0x91, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_9_INT_MASK, "csf_lf_9_int_mask", OAM_TX_BASE_ADDR, 0x91, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i1_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_10_INT, "csf_lf_10_int", OAM_TX_BASE_ADDR, 0x92, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_11_INT, "csf_lf_11_int", OAM_TX_BASE_ADDR, 0x92, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_12_INT, "csf_lf_12_int", OAM_TX_BASE_ADDR, 0x92, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_13_INT, "csf_lf_13_int", OAM_TX_BASE_ADDR, 0x92, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_14_INT, "csf_lf_14_int", OAM_TX_BASE_ADDR, 0x92, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_15_INT, "csf_lf_15_int", OAM_TX_BASE_ADDR, 0x92, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_16_INT, "csf_lf_16_int", OAM_TX_BASE_ADDR, 0x92, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_17_INT, "csf_lf_17_int", OAM_TX_BASE_ADDR, 0x92, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_18_INT, "csf_lf_18_int", OAM_TX_BASE_ADDR, 0x92, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_19_INT, "csf_lf_19_int", OAM_TX_BASE_ADDR, 0x92, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i1_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_10_INT_MASK, "csf_lf_10_int_mask", OAM_TX_BASE_ADDR, 0x93, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_11_INT_MASK, "csf_lf_11_int_mask", OAM_TX_BASE_ADDR, 0x93, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_12_INT_MASK, "csf_lf_12_int_mask", OAM_TX_BASE_ADDR, 0x93, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_13_INT_MASK, "csf_lf_13_int_mask", OAM_TX_BASE_ADDR, 0x93, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_14_INT_MASK, "csf_lf_14_int_mask", OAM_TX_BASE_ADDR, 0x93, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_15_INT_MASK, "csf_lf_15_int_mask", OAM_TX_BASE_ADDR, 0x93, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_16_INT_MASK, "csf_lf_16_int_mask", OAM_TX_BASE_ADDR, 0x93, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_17_INT_MASK, "csf_lf_17_int_mask", OAM_TX_BASE_ADDR, 0x93, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_18_INT_MASK, "csf_lf_18_int_mask", OAM_TX_BASE_ADDR, 0x93, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_19_INT_MASK, "csf_lf_19_int_mask", OAM_TX_BASE_ADDR, 0x93, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i2_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_20_INT, "csf_lf_20_int", OAM_TX_BASE_ADDR, 0x94, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_21_INT, "csf_lf_21_int", OAM_TX_BASE_ADDR, 0x94, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_22_INT, "csf_lf_22_int", OAM_TX_BASE_ADDR, 0x94, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_23_INT, "csf_lf_23_int", OAM_TX_BASE_ADDR, 0x94, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_24_INT, "csf_lf_24_int", OAM_TX_BASE_ADDR, 0x94, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_25_INT, "csf_lf_25_int", OAM_TX_BASE_ADDR, 0x94, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_26_INT, "csf_lf_26_int", OAM_TX_BASE_ADDR, 0x94, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_27_INT, "csf_lf_27_int", OAM_TX_BASE_ADDR, 0x94, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_28_INT, "csf_lf_28_int", OAM_TX_BASE_ADDR, 0x94, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_29_INT, "csf_lf_29_int", OAM_TX_BASE_ADDR, 0x94, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i2_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_20_INT_MASK, "csf_lf_20_int_mask", OAM_TX_BASE_ADDR, 0x95, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_21_INT_MASK, "csf_lf_21_int_mask", OAM_TX_BASE_ADDR, 0x95, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_22_INT_MASK, "csf_lf_22_int_mask", OAM_TX_BASE_ADDR, 0x95, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_23_INT_MASK, "csf_lf_23_int_mask", OAM_TX_BASE_ADDR, 0x95, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_24_INT_MASK, "csf_lf_24_int_mask", OAM_TX_BASE_ADDR, 0x95, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_25_INT_MASK, "csf_lf_25_int_mask", OAM_TX_BASE_ADDR, 0x95, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_26_INT_MASK, "csf_lf_26_int_mask", OAM_TX_BASE_ADDR, 0x95, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_27_INT_MASK, "csf_lf_27_int_mask", OAM_TX_BASE_ADDR, 0x95, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_28_INT_MASK, "csf_lf_28_int_mask", OAM_TX_BASE_ADDR, 0x95, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_29_INT_MASK, "csf_lf_29_int_mask", OAM_TX_BASE_ADDR, 0x95, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i3_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_30_INT, "csf_lf_30_int", OAM_TX_BASE_ADDR, 0x96, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_31_INT, "csf_lf_31_int", OAM_TX_BASE_ADDR, 0x96, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_32_INT, "csf_lf_32_int", OAM_TX_BASE_ADDR, 0x96, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_33_INT, "csf_lf_33_int", OAM_TX_BASE_ADDR, 0x96, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_34_INT, "csf_lf_34_int", OAM_TX_BASE_ADDR, 0x96, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_35_INT, "csf_lf_35_int", OAM_TX_BASE_ADDR, 0x96, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_36_INT, "csf_lf_36_int", OAM_TX_BASE_ADDR, 0x96, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_37_INT, "csf_lf_37_int", OAM_TX_BASE_ADDR, 0x96, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_38_INT, "csf_lf_38_int", OAM_TX_BASE_ADDR, 0x96, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_39_INT, "csf_lf_39_int", OAM_TX_BASE_ADDR, 0x96, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i3_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_30_INT_MASK, "csf_lf_30_int_mask", OAM_TX_BASE_ADDR, 0x97, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_31_INT_MASK, "csf_lf_31_int_mask", OAM_TX_BASE_ADDR, 0x97, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_32_INT_MASK, "csf_lf_32_int_mask", OAM_TX_BASE_ADDR, 0x97, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_33_INT_MASK, "csf_lf_33_int_mask", OAM_TX_BASE_ADDR, 0x97, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_34_INT_MASK, "csf_lf_34_int_mask", OAM_TX_BASE_ADDR, 0x97, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_35_INT_MASK, "csf_lf_35_int_mask", OAM_TX_BASE_ADDR, 0x97, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_36_INT_MASK, "csf_lf_36_int_mask", OAM_TX_BASE_ADDR, 0x97, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_37_INT_MASK, "csf_lf_37_int_mask", OAM_TX_BASE_ADDR, 0x97, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_38_INT_MASK, "csf_lf_38_int_mask", OAM_TX_BASE_ADDR, 0x97, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_39_INT_MASK, "csf_lf_39_int_mask", OAM_TX_BASE_ADDR, 0x97, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i4_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_40_INT, "csf_lf_40_int", OAM_TX_BASE_ADDR, 0x98, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_41_INT, "csf_lf_41_int", OAM_TX_BASE_ADDR, 0x98, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_42_INT, "csf_lf_42_int", OAM_TX_BASE_ADDR, 0x98, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_43_INT, "csf_lf_43_int", OAM_TX_BASE_ADDR, 0x98, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_44_INT, "csf_lf_44_int", OAM_TX_BASE_ADDR, 0x98, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_45_INT, "csf_lf_45_int", OAM_TX_BASE_ADDR, 0x98, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_46_INT, "csf_lf_46_int", OAM_TX_BASE_ADDR, 0x98, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_47_INT, "csf_lf_47_int", OAM_TX_BASE_ADDR, 0x98, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_48_INT, "csf_lf_48_int", OAM_TX_BASE_ADDR, 0x98, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_49_INT, "csf_lf_49_int", OAM_TX_BASE_ADDR, 0x98, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i4_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_40_INT_MASK, "csf_lf_40_int_mask", OAM_TX_BASE_ADDR, 0x99, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_41_INT_MASK, "csf_lf_41_int_mask", OAM_TX_BASE_ADDR, 0x99, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_42_INT_MASK, "csf_lf_42_int_mask", OAM_TX_BASE_ADDR, 0x99, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_43_INT_MASK, "csf_lf_43_int_mask", OAM_TX_BASE_ADDR, 0x99, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_44_INT_MASK, "csf_lf_44_int_mask", OAM_TX_BASE_ADDR, 0x99, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_45_INT_MASK, "csf_lf_45_int_mask", OAM_TX_BASE_ADDR, 0x99, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_46_INT_MASK, "csf_lf_46_int_mask", OAM_TX_BASE_ADDR, 0x99, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_47_INT_MASK, "csf_lf_47_int_mask", OAM_TX_BASE_ADDR, 0x99, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_48_INT_MASK, "csf_lf_48_int_mask", OAM_TX_BASE_ADDR, 0x99, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_49_INT_MASK, "csf_lf_49_int_mask", OAM_TX_BASE_ADDR, 0x99, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i5_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_50_INT, "csf_lf_50_int", OAM_TX_BASE_ADDR, 0x9a, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_51_INT, "csf_lf_51_int", OAM_TX_BASE_ADDR, 0x9a, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_52_INT, "csf_lf_52_int", OAM_TX_BASE_ADDR, 0x9a, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_53_INT, "csf_lf_53_int", OAM_TX_BASE_ADDR, 0x9a, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_54_INT, "csf_lf_54_int", OAM_TX_BASE_ADDR, 0x9a, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_55_INT, "csf_lf_55_int", OAM_TX_BASE_ADDR, 0x9a, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_56_INT, "csf_lf_56_int", OAM_TX_BASE_ADDR, 0x9a, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_57_INT, "csf_lf_57_int", OAM_TX_BASE_ADDR, 0x9a, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_58_INT, "csf_lf_58_int", OAM_TX_BASE_ADDR, 0x9a, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_59_INT, "csf_lf_59_int", OAM_TX_BASE_ADDR, 0x9a, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i5_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_50_INT_MASK, "csf_lf_50_int_mask", OAM_TX_BASE_ADDR, 0x9b, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_51_INT_MASK, "csf_lf_51_int_mask", OAM_TX_BASE_ADDR, 0x9b, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_52_INT_MASK, "csf_lf_52_int_mask", OAM_TX_BASE_ADDR, 0x9b, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_53_INT_MASK, "csf_lf_53_int_mask", OAM_TX_BASE_ADDR, 0x9b, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_54_INT_MASK, "csf_lf_54_int_mask", OAM_TX_BASE_ADDR, 0x9b, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_55_INT_MASK, "csf_lf_55_int_mask", OAM_TX_BASE_ADDR, 0x9b, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_56_INT_MASK, "csf_lf_56_int_mask", OAM_TX_BASE_ADDR, 0x9b, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_57_INT_MASK, "csf_lf_57_int_mask", OAM_TX_BASE_ADDR, 0x9b, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_58_INT_MASK, "csf_lf_58_int_mask", OAM_TX_BASE_ADDR, 0x9b, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_59_INT_MASK, "csf_lf_59_int_mask", OAM_TX_BASE_ADDR, 0x9b, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i6_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_60_INT, "csf_lf_60_int", OAM_TX_BASE_ADDR, 0x9c, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_61_INT, "csf_lf_61_int", OAM_TX_BASE_ADDR, 0x9c, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_62_INT, "csf_lf_62_int", OAM_TX_BASE_ADDR, 0x9c, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_63_INT, "csf_lf_63_int", OAM_TX_BASE_ADDR, 0x9c, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_64_INT, "csf_lf_64_int", OAM_TX_BASE_ADDR, 0x9c, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_65_INT, "csf_lf_65_int", OAM_TX_BASE_ADDR, 0x9c, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_66_INT, "csf_lf_66_int", OAM_TX_BASE_ADDR, 0x9c, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_67_INT, "csf_lf_67_int", OAM_TX_BASE_ADDR, 0x9c, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_68_INT, "csf_lf_68_int", OAM_TX_BASE_ADDR, 0x9c, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_69_INT, "csf_lf_69_int", OAM_TX_BASE_ADDR, 0x9c, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i6_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_60_INT_MASK, "csf_lf_60_int_mask", OAM_TX_BASE_ADDR, 0x9d, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_61_INT_MASK, "csf_lf_61_int_mask", OAM_TX_BASE_ADDR, 0x9d, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_62_INT_MASK, "csf_lf_62_int_mask", OAM_TX_BASE_ADDR, 0x9d, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_63_INT_MASK, "csf_lf_63_int_mask", OAM_TX_BASE_ADDR, 0x9d, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_64_INT_MASK, "csf_lf_64_int_mask", OAM_TX_BASE_ADDR, 0x9d, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_65_INT_MASK, "csf_lf_65_int_mask", OAM_TX_BASE_ADDR, 0x9d, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_66_INT_MASK, "csf_lf_66_int_mask", OAM_TX_BASE_ADDR, 0x9d, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_67_INT_MASK, "csf_lf_67_int_mask", OAM_TX_BASE_ADDR, 0x9d, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_68_INT_MASK, "csf_lf_68_int_mask", OAM_TX_BASE_ADDR, 0x9d, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_69_INT_MASK, "csf_lf_69_int_mask", OAM_TX_BASE_ADDR, 0x9d, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i7_int_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_70_INT, "csf_lf_70_int", OAM_TX_BASE_ADDR, 0x9e, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_71_INT, "csf_lf_71_int", OAM_TX_BASE_ADDR, 0x9e, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_72_INT, "csf_lf_72_int", OAM_TX_BASE_ADDR, 0x9e, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_73_INT, "csf_lf_73_int", OAM_TX_BASE_ADDR, 0x9e, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_74_INT, "csf_lf_74_int", OAM_TX_BASE_ADDR, 0x9e, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_75_INT, "csf_lf_75_int", OAM_TX_BASE_ADDR, 0x9e, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_76_INT, "csf_lf_76_int", OAM_TX_BASE_ADDR, 0x9e, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_77_INT, "csf_lf_77_int", OAM_TX_BASE_ADDR, 0x9e, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_78_INT, "csf_lf_78_int", OAM_TX_BASE_ADDR, 0x9e, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_79_INT, "csf_lf_79_int", OAM_TX_BASE_ADDR, 0x9e, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_lf_i7_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_LF_70_INT_MASK, "csf_lf_70_int_mask", OAM_TX_BASE_ADDR, 0x9f, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_LF_71_INT_MASK, "csf_lf_71_int_mask", OAM_TX_BASE_ADDR, 0x9f, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_LF_72_INT_MASK, "csf_lf_72_int_mask", OAM_TX_BASE_ADDR, 0x9f, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_LF_73_INT_MASK, "csf_lf_73_int_mask", OAM_TX_BASE_ADDR, 0x9f, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_LF_74_INT_MASK, "csf_lf_74_int_mask", OAM_TX_BASE_ADDR, 0x9f, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_LF_75_INT_MASK, "csf_lf_75_int_mask", OAM_TX_BASE_ADDR, 0x9f, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_LF_76_INT_MASK, "csf_lf_76_int_mask", OAM_TX_BASE_ADDR, 0x9f, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_LF_77_INT_MASK, "csf_lf_77_int_mask", OAM_TX_BASE_ADDR, 0x9f, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_LF_78_INT_MASK, "csf_lf_78_int_mask", OAM_TX_BASE_ADDR, 0x9f, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_LF_79_INT_MASK, "csf_lf_79_int_mask", OAM_TX_BASE_ADDR, 0x9f, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i0_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_0_INT, "csf_rf_0_int", OAM_TX_BASE_ADDR, 0xa0, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_1_INT, "csf_rf_1_int", OAM_TX_BASE_ADDR, 0xa0, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_2_INT, "csf_rf_2_int", OAM_TX_BASE_ADDR, 0xa0, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_3_INT, "csf_rf_3_int", OAM_TX_BASE_ADDR, 0xa0, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_4_INT, "csf_rf_4_int", OAM_TX_BASE_ADDR, 0xa0, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_5_INT, "csf_rf_5_int", OAM_TX_BASE_ADDR, 0xa0, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_6_INT, "csf_rf_6_int", OAM_TX_BASE_ADDR, 0xa0, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_7_INT, "csf_rf_7_int", OAM_TX_BASE_ADDR, 0xa0, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_8_INT, "csf_rf_8_int", OAM_TX_BASE_ADDR, 0xa0, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_9_INT, "csf_rf_9_int", OAM_TX_BASE_ADDR, 0xa0, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i0_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_0_INT_MASK, "csf_rf_0_int_mask", OAM_TX_BASE_ADDR, 0xa1, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_1_INT_MASK, "csf_rf_1_int_mask", OAM_TX_BASE_ADDR, 0xa1, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_2_INT_MASK, "csf_rf_2_int_mask", OAM_TX_BASE_ADDR, 0xa1, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_3_INT_MASK, "csf_rf_3_int_mask", OAM_TX_BASE_ADDR, 0xa1, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_4_INT_MASK, "csf_rf_4_int_mask", OAM_TX_BASE_ADDR, 0xa1, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_5_INT_MASK, "csf_rf_5_int_mask", OAM_TX_BASE_ADDR, 0xa1, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_6_INT_MASK, "csf_rf_6_int_mask", OAM_TX_BASE_ADDR, 0xa1, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_7_INT_MASK, "csf_rf_7_int_mask", OAM_TX_BASE_ADDR, 0xa1, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_8_INT_MASK, "csf_rf_8_int_mask", OAM_TX_BASE_ADDR, 0xa1, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_9_INT_MASK, "csf_rf_9_int_mask", OAM_TX_BASE_ADDR, 0xa1, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i1_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_10_INT, "csf_rf_10_int", OAM_TX_BASE_ADDR, 0xa2, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_11_INT, "csf_rf_11_int", OAM_TX_BASE_ADDR, 0xa2, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_12_INT, "csf_rf_12_int", OAM_TX_BASE_ADDR, 0xa2, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_13_INT, "csf_rf_13_int", OAM_TX_BASE_ADDR, 0xa2, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_14_INT, "csf_rf_14_int", OAM_TX_BASE_ADDR, 0xa2, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_15_INT, "csf_rf_15_int", OAM_TX_BASE_ADDR, 0xa2, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_16_INT, "csf_rf_16_int", OAM_TX_BASE_ADDR, 0xa2, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_17_INT, "csf_rf_17_int", OAM_TX_BASE_ADDR, 0xa2, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_18_INT, "csf_rf_18_int", OAM_TX_BASE_ADDR, 0xa2, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_19_INT, "csf_rf_19_int", OAM_TX_BASE_ADDR, 0xa2, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i1_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_10_INT_MASK, "csf_rf_10_int_mask", OAM_TX_BASE_ADDR, 0xa3, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_11_INT_MASK, "csf_rf_11_int_mask", OAM_TX_BASE_ADDR, 0xa3, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_12_INT_MASK, "csf_rf_12_int_mask", OAM_TX_BASE_ADDR, 0xa3, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_13_INT_MASK, "csf_rf_13_int_mask", OAM_TX_BASE_ADDR, 0xa3, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_14_INT_MASK, "csf_rf_14_int_mask", OAM_TX_BASE_ADDR, 0xa3, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_15_INT_MASK, "csf_rf_15_int_mask", OAM_TX_BASE_ADDR, 0xa3, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_16_INT_MASK, "csf_rf_16_int_mask", OAM_TX_BASE_ADDR, 0xa3, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_17_INT_MASK, "csf_rf_17_int_mask", OAM_TX_BASE_ADDR, 0xa3, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_18_INT_MASK, "csf_rf_18_int_mask", OAM_TX_BASE_ADDR, 0xa3, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_19_INT_MASK, "csf_rf_19_int_mask", OAM_TX_BASE_ADDR, 0xa3, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i2_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_20_INT, "csf_rf_20_int", OAM_TX_BASE_ADDR, 0xa4, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_21_INT, "csf_rf_21_int", OAM_TX_BASE_ADDR, 0xa4, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_22_INT, "csf_rf_22_int", OAM_TX_BASE_ADDR, 0xa4, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_23_INT, "csf_rf_23_int", OAM_TX_BASE_ADDR, 0xa4, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_24_INT, "csf_rf_24_int", OAM_TX_BASE_ADDR, 0xa4, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_25_INT, "csf_rf_25_int", OAM_TX_BASE_ADDR, 0xa4, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_26_INT, "csf_rf_26_int", OAM_TX_BASE_ADDR, 0xa4, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_27_INT, "csf_rf_27_int", OAM_TX_BASE_ADDR, 0xa4, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_28_INT, "csf_rf_28_int", OAM_TX_BASE_ADDR, 0xa4, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_29_INT, "csf_rf_29_int", OAM_TX_BASE_ADDR, 0xa4, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i2_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_20_INT_MASK, "csf_rf_20_int_mask", OAM_TX_BASE_ADDR, 0xa5, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_21_INT_MASK, "csf_rf_21_int_mask", OAM_TX_BASE_ADDR, 0xa5, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_22_INT_MASK, "csf_rf_22_int_mask", OAM_TX_BASE_ADDR, 0xa5, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_23_INT_MASK, "csf_rf_23_int_mask", OAM_TX_BASE_ADDR, 0xa5, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_24_INT_MASK, "csf_rf_24_int_mask", OAM_TX_BASE_ADDR, 0xa5, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_25_INT_MASK, "csf_rf_25_int_mask", OAM_TX_BASE_ADDR, 0xa5, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_26_INT_MASK, "csf_rf_26_int_mask", OAM_TX_BASE_ADDR, 0xa5, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_27_INT_MASK, "csf_rf_27_int_mask", OAM_TX_BASE_ADDR, 0xa5, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_28_INT_MASK, "csf_rf_28_int_mask", OAM_TX_BASE_ADDR, 0xa5, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_29_INT_MASK, "csf_rf_29_int_mask", OAM_TX_BASE_ADDR, 0xa5, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i3_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_30_INT, "csf_rf_30_int", OAM_TX_BASE_ADDR, 0xa6, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_31_INT, "csf_rf_31_int", OAM_TX_BASE_ADDR, 0xa6, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_32_INT, "csf_rf_32_int", OAM_TX_BASE_ADDR, 0xa6, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_33_INT, "csf_rf_33_int", OAM_TX_BASE_ADDR, 0xa6, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_34_INT, "csf_rf_34_int", OAM_TX_BASE_ADDR, 0xa6, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_35_INT, "csf_rf_35_int", OAM_TX_BASE_ADDR, 0xa6, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_36_INT, "csf_rf_36_int", OAM_TX_BASE_ADDR, 0xa6, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_37_INT, "csf_rf_37_int", OAM_TX_BASE_ADDR, 0xa6, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_38_INT, "csf_rf_38_int", OAM_TX_BASE_ADDR, 0xa6, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_39_INT, "csf_rf_39_int", OAM_TX_BASE_ADDR, 0xa6, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i3_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_30_INT_MASK, "csf_rf_30_int_mask", OAM_TX_BASE_ADDR, 0xa7, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_31_INT_MASK, "csf_rf_31_int_mask", OAM_TX_BASE_ADDR, 0xa7, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_32_INT_MASK, "csf_rf_32_int_mask", OAM_TX_BASE_ADDR, 0xa7, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_33_INT_MASK, "csf_rf_33_int_mask", OAM_TX_BASE_ADDR, 0xa7, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_34_INT_MASK, "csf_rf_34_int_mask", OAM_TX_BASE_ADDR, 0xa7, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_35_INT_MASK, "csf_rf_35_int_mask", OAM_TX_BASE_ADDR, 0xa7, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_36_INT_MASK, "csf_rf_36_int_mask", OAM_TX_BASE_ADDR, 0xa7, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_37_INT_MASK, "csf_rf_37_int_mask", OAM_TX_BASE_ADDR, 0xa7, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_38_INT_MASK, "csf_rf_38_int_mask", OAM_TX_BASE_ADDR, 0xa7, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_39_INT_MASK, "csf_rf_39_int_mask", OAM_TX_BASE_ADDR, 0xa7, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i4_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_40_INT, "csf_rf_40_int", OAM_TX_BASE_ADDR, 0xa8, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_41_INT, "csf_rf_41_int", OAM_TX_BASE_ADDR, 0xa8, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_42_INT, "csf_rf_42_int", OAM_TX_BASE_ADDR, 0xa8, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_43_INT, "csf_rf_43_int", OAM_TX_BASE_ADDR, 0xa8, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_44_INT, "csf_rf_44_int", OAM_TX_BASE_ADDR, 0xa8, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_45_INT, "csf_rf_45_int", OAM_TX_BASE_ADDR, 0xa8, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_46_INT, "csf_rf_46_int", OAM_TX_BASE_ADDR, 0xa8, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_47_INT, "csf_rf_47_int", OAM_TX_BASE_ADDR, 0xa8, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_48_INT, "csf_rf_48_int", OAM_TX_BASE_ADDR, 0xa8, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_49_INT, "csf_rf_49_int", OAM_TX_BASE_ADDR, 0xa8, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i4_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_40_INT_MASK, "csf_rf_40_int_mask", OAM_TX_BASE_ADDR, 0xa9, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_41_INT_MASK, "csf_rf_41_int_mask", OAM_TX_BASE_ADDR, 0xa9, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_42_INT_MASK, "csf_rf_42_int_mask", OAM_TX_BASE_ADDR, 0xa9, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_43_INT_MASK, "csf_rf_43_int_mask", OAM_TX_BASE_ADDR, 0xa9, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_44_INT_MASK, "csf_rf_44_int_mask", OAM_TX_BASE_ADDR, 0xa9, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_45_INT_MASK, "csf_rf_45_int_mask", OAM_TX_BASE_ADDR, 0xa9, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_46_INT_MASK, "csf_rf_46_int_mask", OAM_TX_BASE_ADDR, 0xa9, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_47_INT_MASK, "csf_rf_47_int_mask", OAM_TX_BASE_ADDR, 0xa9, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_48_INT_MASK, "csf_rf_48_int_mask", OAM_TX_BASE_ADDR, 0xa9, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_49_INT_MASK, "csf_rf_49_int_mask", OAM_TX_BASE_ADDR, 0xa9, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i5_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_50_INT, "csf_rf_50_int", OAM_TX_BASE_ADDR, 0xaa, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_51_INT, "csf_rf_51_int", OAM_TX_BASE_ADDR, 0xaa, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_52_INT, "csf_rf_52_int", OAM_TX_BASE_ADDR, 0xaa, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_53_INT, "csf_rf_53_int", OAM_TX_BASE_ADDR, 0xaa, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_54_INT, "csf_rf_54_int", OAM_TX_BASE_ADDR, 0xaa, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_55_INT, "csf_rf_55_int", OAM_TX_BASE_ADDR, 0xaa, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_56_INT, "csf_rf_56_int", OAM_TX_BASE_ADDR, 0xaa, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_57_INT, "csf_rf_57_int", OAM_TX_BASE_ADDR, 0xaa, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_58_INT, "csf_rf_58_int", OAM_TX_BASE_ADDR, 0xaa, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_59_INT, "csf_rf_59_int", OAM_TX_BASE_ADDR, 0xaa, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i5_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_50_INT_MASK, "csf_rf_50_int_mask", OAM_TX_BASE_ADDR, 0xab, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_51_INT_MASK, "csf_rf_51_int_mask", OAM_TX_BASE_ADDR, 0xab, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_52_INT_MASK, "csf_rf_52_int_mask", OAM_TX_BASE_ADDR, 0xab, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_53_INT_MASK, "csf_rf_53_int_mask", OAM_TX_BASE_ADDR, 0xab, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_54_INT_MASK, "csf_rf_54_int_mask", OAM_TX_BASE_ADDR, 0xab, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_55_INT_MASK, "csf_rf_55_int_mask", OAM_TX_BASE_ADDR, 0xab, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_56_INT_MASK, "csf_rf_56_int_mask", OAM_TX_BASE_ADDR, 0xab, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_57_INT_MASK, "csf_rf_57_int_mask", OAM_TX_BASE_ADDR, 0xab, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_58_INT_MASK, "csf_rf_58_int_mask", OAM_TX_BASE_ADDR, 0xab, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_59_INT_MASK, "csf_rf_59_int_mask", OAM_TX_BASE_ADDR, 0xab, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i6_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_60_INT, "csf_rf_60_int", OAM_TX_BASE_ADDR, 0xac, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_61_INT, "csf_rf_61_int", OAM_TX_BASE_ADDR, 0xac, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_62_INT, "csf_rf_62_int", OAM_TX_BASE_ADDR, 0xac, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_63_INT, "csf_rf_63_int", OAM_TX_BASE_ADDR, 0xac, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_64_INT, "csf_rf_64_int", OAM_TX_BASE_ADDR, 0xac, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_65_INT, "csf_rf_65_int", OAM_TX_BASE_ADDR, 0xac, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_66_INT, "csf_rf_66_int", OAM_TX_BASE_ADDR, 0xac, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_67_INT, "csf_rf_67_int", OAM_TX_BASE_ADDR, 0xac, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_68_INT, "csf_rf_68_int", OAM_TX_BASE_ADDR, 0xac, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_69_INT, "csf_rf_69_int", OAM_TX_BASE_ADDR, 0xac, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i6_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_60_INT_MASK, "csf_rf_60_int_mask", OAM_TX_BASE_ADDR, 0xad, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_61_INT_MASK, "csf_rf_61_int_mask", OAM_TX_BASE_ADDR, 0xad, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_62_INT_MASK, "csf_rf_62_int_mask", OAM_TX_BASE_ADDR, 0xad, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_63_INT_MASK, "csf_rf_63_int_mask", OAM_TX_BASE_ADDR, 0xad, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_64_INT_MASK, "csf_rf_64_int_mask", OAM_TX_BASE_ADDR, 0xad, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_65_INT_MASK, "csf_rf_65_int_mask", OAM_TX_BASE_ADDR, 0xad, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_66_INT_MASK, "csf_rf_66_int_mask", OAM_TX_BASE_ADDR, 0xad, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_67_INT_MASK, "csf_rf_67_int_mask", OAM_TX_BASE_ADDR, 0xad, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_68_INT_MASK, "csf_rf_68_int_mask", OAM_TX_BASE_ADDR, 0xad, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_69_INT_MASK, "csf_rf_69_int_mask", OAM_TX_BASE_ADDR, 0xad, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i7_int_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_70_INT, "csf_rf_70_int", OAM_TX_BASE_ADDR, 0xae, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_71_INT, "csf_rf_71_int", OAM_TX_BASE_ADDR, 0xae, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_72_INT, "csf_rf_72_int", OAM_TX_BASE_ADDR, 0xae, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_73_INT, "csf_rf_73_int", OAM_TX_BASE_ADDR, 0xae, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_74_INT, "csf_rf_74_int", OAM_TX_BASE_ADDR, 0xae, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_75_INT, "csf_rf_75_int", OAM_TX_BASE_ADDR, 0xae, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_76_INT, "csf_rf_76_int", OAM_TX_BASE_ADDR, 0xae, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_77_INT, "csf_rf_77_int", OAM_TX_BASE_ADDR, 0xae, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_78_INT, "csf_rf_78_int", OAM_TX_BASE_ADDR, 0xae, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_79_INT, "csf_rf_79_int", OAM_TX_BASE_ADDR, 0xae, 19, 18, 0x0 },
};
NEW_CHIP_REG test_csf_rf_i7_int_mask_reg[] =
{
	{ TEST_OAM_TX_CSF_RF_70_INT_MASK, "csf_rf_70_int_mask", OAM_TX_BASE_ADDR, 0xaf, 1, 0, 0x0 },
	{ TEST_OAM_TX_CSF_RF_71_INT_MASK, "csf_rf_71_int_mask", OAM_TX_BASE_ADDR, 0xaf, 3, 2, 0x0 },
	{ TEST_OAM_TX_CSF_RF_72_INT_MASK, "csf_rf_72_int_mask", OAM_TX_BASE_ADDR, 0xaf, 5, 4, 0x0 },
	{ TEST_OAM_TX_CSF_RF_73_INT_MASK, "csf_rf_73_int_mask", OAM_TX_BASE_ADDR, 0xaf, 7, 6, 0x0 },
	{ TEST_OAM_TX_CSF_RF_74_INT_MASK, "csf_rf_74_int_mask", OAM_TX_BASE_ADDR, 0xaf, 9, 8, 0x0 },
	{ TEST_OAM_TX_CSF_RF_75_INT_MASK, "csf_rf_75_int_mask", OAM_TX_BASE_ADDR, 0xaf, 11, 10, 0x0 },
	{ TEST_OAM_TX_CSF_RF_76_INT_MASK, "csf_rf_76_int_mask", OAM_TX_BASE_ADDR, 0xaf, 13, 12, 0x0 },
	{ TEST_OAM_TX_CSF_RF_77_INT_MASK, "csf_rf_77_int_mask", OAM_TX_BASE_ADDR, 0xaf, 15, 14, 0x0 },
	{ TEST_OAM_TX_CSF_RF_78_INT_MASK, "csf_rf_78_int_mask", OAM_TX_BASE_ADDR, 0xaf, 17, 16, 0x0 },
	{ TEST_OAM_TX_CSF_RF_79_INT_MASK, "csf_rf_79_int_mask", OAM_TX_BASE_ADDR, 0xaf, 19, 18, 0x0 },
};


NEW_CHIP_REG test_mactx_work_mode_reg[] =
{
	{ TEST_MCMACTX_MAC_SAR_MODE_0, "mac_sar_mode_0", MCMACTX_BASE_ADDR, 0x0, 31, 0, 0x0 },
	{ TEST_MCMACTX_MAC_SAR_MODE_1, "mac_sar_mode_1", MCMACTX_BASE_ADDR, 0x1, 31, 0, 0x0 },
	{ TEST_MCMACTX_MAC_SAR_MODE_2, "mac_sar_mode_2", MCMACTX_BASE_ADDR, 0x2, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_statistic_clr_chan_reg[] =
{
	{ TEST_MCMACTX_STA_CLR_CHAN, "sta_clr_chan", MCMACTX_BASE_ADDR, 0x6, 6, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_encode_config_reg[] =
{
	{ TEST_MCMACTX_MANUAL_RF_INSERT, "manual_rf_insert", MCMACTX_BASE_ADDR, 0x7, 2, 2, 0x0 },
	{ TEST_MCMACTX_ENABLE_TX_FAULT, "enable_tx_fault", MCMACTX_BASE_ADDR, 0x7, 4, 4, 0x0 },
	{ TEST_MCMACTX_MANUAL_IDLE_INSERT, "manual_idle_insert", MCMACTX_BASE_ADDR, 0x7, 3, 3, 0x0 },
	{ TEST_MCMACTX_MANUAL_LF_INSERT, "manual_lf_insert", MCMACTX_BASE_ADDR, 0x7, 1, 1, 0x0 },
	{ TEST_MCMACTX_TEST_EN, "tx_test_en", MCMACTX_BASE_ADDR, 0x7, 0, 0, 0x0 },
	{ TEST_MCMACTX_REMOTE_FAULT_CONFIG, "remote_fault_config", MCMACTX_BASE_ADDR, 0x7, 8, 7, 0x0 },
	{ TEST_MCMACTX_LOCAL_FAULT_CONFIG, "local_fault_config", MCMACTX_BASE_ADDR, 0x7, 6, 5, 0x0 },
};
NEW_CHIP_REG test_mactx_stat_enable_reg[] =
{
	{ TEST_MCMACTX_STAT_EN_0, "stat_en_0", MCMACTX_BASE_ADDR, 0x60, 31, 0, 0x0 },
	{ TEST_MCMACTX_STAT_EN_1, "stat_en_1", MCMACTX_BASE_ADDR, 0x61, 31, 0, 0x0 },
	{ TEST_MCMACTX_STAT_EN_2, "stat_en_2", MCMACTX_BASE_ADDR, 0x62, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_avg_ipg_reg[] =
{
	{ TEST_MCMACTX_AVG_IPG, "avg_ipg", MCMACTX_BASE_ADDR, 0x64, 2, 0, 0x2 },
	{ TEST_MCMACTX_MINIMUM_MODE, "minimum_mode", MCMACTX_BASE_ADDR, 0x64, 3, 3, 0x0 },
};
NEW_CHIP_REG test_mactx_crc_inc_en_reg[] =
{
	{ TEST_MCMACTX_CRC_INC_EN_0, "crc_inc_en_0", MCMACTX_BASE_ADDR, 0x65, 31, 0, 0x0 },
	{ TEST_MCMACTX_CRC_INC_EN_1, "crc_inc_en_1", MCMACTX_BASE_ADDR, 0x66, 31, 0, 0x0 },
	{ TEST_MCMACTX_CRC_INC_EN_2, "crc_inc_en_2", MCMACTX_BASE_ADDR, 0x67, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_crc_recal_en_reg[] =
{
	{ TEST_MCMACTX_CRC_RECAL_EN_0, "crc_recal_en_0", MCMACTX_BASE_ADDR, 0x69, 31, 0, 0x0 },
	{ TEST_MCMACTX_CRC_RECAL_EN_1, "crc_recal_en_1", MCMACTX_BASE_ADDR, 0x6a, 31, 0, 0x0 },
	{ TEST_MCMACTX_CRC_RECAL_EN_2, "crc_recal_en_2", MCMACTX_BASE_ADDR, 0x6b, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_decode_sel_reg[] =
{
	{ TEST_MCMACTX_DECODE_SEL, "decode_sel", MCMACTX_BASE_ADDR, 0x6d, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_statistic_all_clr_reg[] =
{
	{ TEST_MCMACTX_STA_ALL_CLR, "sta_all_clr", MCMACTX_BASE_ADDR, 0x70, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_statistic_clr_reg[] =
{
	{ TEST_MCMACTX_STA_CLR, "sta_clr", MCMACTX_BASE_ADDR, 0x71, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_ts_ram_init_reg[] =
{
	{ TEST_MCMACTX_TS_RAM_INIT, "ts_ram_init", MCMACTX_BASE_ADDR, 0x73, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_env_ram_init_reg[] =
{
	{ TEST_MCMACTX_ENV_RAM_INIT, "env_ram_init", MCMACTX_BASE_ADDR, 0x74, 0, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_ram_init_done_reg[] =
{
	{ TEST_MCMACTX_ENV_RAM_INIT_DONE, "env_ram_init_done", MCMACTX_BASE_ADDR, 0x7f, 0, 0, 0x0 },
	{ TEST_MCMACTX_TS_RAM_INIT_DONE, "ts_ram_init_done", MCMACTX_BASE_ADDR, 0x7f, 1, 1, 0x0 },
	{ TEST_MCMACTX_STA_RAM_INIT_DONE, "sta_ram_init_done", MCMACTX_BASE_ADDR, 0x7f, 2, 2, 0x0 },
};
NEW_CHIP_REG test_mactx_bussw_underflow_reg[] =
{
	{ TEST_MCMACTX_UNDERFLOW_0, "underflow_0", MCMACTX_BASE_ADDR, 0x80, 31, 0, 0x0 },
	{ TEST_MCMACTX_UNDERFLOW_1, "underflow_1", MCMACTX_BASE_ADDR, 0x81, 31, 0, 0x0 },
	{ TEST_MCMACTX_UNDERFLOW_2, "underflow_2", MCMACTX_BASE_ADDR, 0x82, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_sar_lf_alm_reg[] =
{
	{ TEST_MCMACTX_SAR_LF_ALM_0, "sar_lf_alm_0", MCMACTX_BASE_ADDR, 0x88, 31, 0, 0x0 },
	{ TEST_MCMACTX_SAR_LF_ALM_1, "sar_lf_alm_1", MCMACTX_BASE_ADDR, 0x89, 31, 0, 0x0 },
	{ TEST_MCMACTX_SAR_LF_ALM_2, "sar_lf_alm_2", MCMACTX_BASE_ADDR, 0x8a, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_sar_rf_alm_reg[] =
{
	{ TEST_MCMACTX_SAR_RF_ALM_0, "sar_rf_alm_0", MCMACTX_BASE_ADDR, 0x8c, 31, 0, 0x0 },
	{ TEST_MCMACTX_SAR_RF_ALM_1, "sar_rf_alm_1", MCMACTX_BASE_ADDR, 0x8d, 31, 0, 0x0 },
	{ TEST_MCMACTX_SAR_RF_ALM_2, "sar_rf_alm_2", MCMACTX_BASE_ADDR, 0x8e, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_encode_err_alm_reg[] =
{
	{ TEST_MCMACTX_ENCODE_ERR_ALM_0, "encode_err_alm_0", MCMACTX_BASE_ADDR, 0x90, 31, 0, 0x0 },
	{ TEST_MCMACTX_ENCODE_ERR_ALM_1, "encode_err_alm_1", MCMACTX_BASE_ADDR, 0x91, 31, 0, 0x0 },
	{ TEST_MCMACTX_ENCODE_ERR_ALM_2, "encode_err_alm_2", MCMACTX_BASE_ADDR, 0x92, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_decode_err_alm_reg[] =
{
	{ TEST_MCMACTX_DECODE_ERR_ALM_0, "decode_err_alm_0", MCMACTX_BASE_ADDR, 0x94, 31, 0, 0x0 },
	{ TEST_MCMACTX_DECODE_ERR_ALM_1, "decode_err_alm_1", MCMACTX_BASE_ADDR, 0x95, 31, 0, 0x0 },
	{ TEST_MCMACTX_DECODE_ERR_ALM_2, "decode_err_alm_2", MCMACTX_BASE_ADDR, 0x96, 15, 0, 0x0 },
};
NEW_CHIP_REG test_mactx_sta_ram_ecc_correct_alm_reg[] =
{
	{ TEST_MCMACTX_ENCODE_ERR_CODE_ECC_ERR_CORRECT, "encode_err_code_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 0, 0, 0x0 },
	{ TEST_MCMACTX_DECODE_ERR_CODE_ECC_ERR_CORRECT, "decode_err_code_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 1, 1, 0x0 },
	{ TEST_MCMACTX_TOTAL_FRAME_ECC_ERR_CORRECT, "total_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 2, 2, 0x0 },
	{ TEST_MCMACTX_GOOD_FRAME_ECC_ERR_CORRECT, "good_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 3, 3, 0x0 },
	{ TEST_MCMACTX_BAD_FRAME_ECC_ERR_CORRECT, "bad_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 4, 4, 0x0 },
	{ TEST_MCMACTX_SAR_FRAGMENT_FRAME_ECC_ERR_CORRECT, "sar_fragment_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 5, 5, 0x0 },
	{ TEST_MCMACTX_SAR_JABBER_FRAME_ECC_ERR_CORRECT, "sar_jabber_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 6, 6, 0x0 },
	{ TEST_MCMACTX_SAR_OVERSIZE_FRAME_ECC_ERR_CORRECT, "sar_oversize_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 7, 7, 0x0 },
	{ TEST_MCMACTX_UNICAST_FRAME_ECC_ERR_CORRECT, "unicast_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 8, 8, 0x0 },
	{ TEST_MCMACTX_MULTICAST_FRAME_ECC_ERR_CORRECT, "multicast_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 9, 9, 0x0 },
	{ TEST_MCMACTX_BROADCAST_FRAME_ECC_ERR_CORRECT, "broadcast_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 10, 10, 0x0 },
	{ TEST_MCMACTX_B64_FRAME_ECC_ERR_CORRECT, "b64_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 11, 11, 0x0 },
	{ TEST_MCMACTX_B65_MPL_FRAME_ECC_ERR_CORRECT, "b65_mpl_frame_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 12, 12, 0x0 },
	{ TEST_MCMACTX_TOTAL_BYTES_ECC_ERR_CORRECT, "total_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 13, 13, 0x0 },
	{ TEST_MCMACTX_GOOD_BYTES_ECC_ERR_CORRECT, "good_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 14, 14, 0x0 },
	{ TEST_MCMACTX_BAD_BYTES_ECC_ERR_CORRECT, "bad_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 15, 15, 0x0 },
	{ TEST_MCMACTX_SAR_FRAGMENT_BYTES_ECC_ERR_CORRECT, "sar_fragment_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 16, 16, 0x0 },
	{ TEST_MCMACTX_SAR_JABBER_BYTES_ECC_ERR_CORRECT, "sar_jabber_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 17, 17, 0x0 },
	{ TEST_MCMACTX_SAR_OVERSIZE_BYTES_ECC_ERR_CORRECT, "sar_oversize_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 18, 18, 0x0 },
	{ TEST_MCMACTX_UNICAST_BYTES_ECC_ERR_CORRECT, "unicast_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 19, 19, 0x0 },
	{ TEST_MCMACTX_MULTICAST_BYTES_ECC_ERR_CORRECT, "multicast_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 20, 20, 0x0 },
	{ TEST_MCMACTX_BROADCAST_BYTES_ECC_ERR_CORRECT, "broadcast_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 21, 21, 0x0 },
	{ TEST_MCMACTX_B64_BYTES_ECC_ERR_CORRECT, "b64_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 22, 22, 0x0 },
	{ TEST_MCMACTX_B65_MPL_BYTES_ECC_ERR_CORRECT, "b65_mpl_bytes_ecc_err_correct", MCMACTX_BASE_ADDR, 0x98, 23, 23, 0x0 },
};
NEW_CHIP_REG test_mactx_sta_ram_ecc_uncorrect_alm_reg[] =
{
	{ TEST_MCMACTX_ENCODE_ERR_CODE_ECC_ERR_UNCORRECT, "encode_err_code_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 0, 0, 0x0 },
	{ TEST_MCMACTX_DECODE_ERR_CODE_ECC_ERR_UNCORRECT, "decode_err_code_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 1, 1, 0x0 },
	{ TEST_MCMACTX_TOTAL_FRAME_ECC_ERR_UNCORRECT, "total_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 2, 2, 0x0 },
	{ TEST_MCMACTX_GOOD_FRAME_ECC_ERR_UNCORRECT, "good_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 3, 3, 0x0 },
	{ TEST_MCMACTX_BAD_FRAME_ECC_ERR_UNCORRECT, "bad_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 4, 4, 0x0 },
	{ TEST_MCMACTX_SAR_FRAGMENT_FRAME_ECC_ERR_UNCORRECT, "sar_fragment_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 5, 5, 0x0 },
	{ TEST_MCMACTX_SAR_JABBER_FRAME_ECC_ERR_UNCORRECT, "sar_jabber_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 6, 6, 0x0 },
	{ TEST_MCMACTX_SAR_OVERSIZE_FRAME_ECC_ERR_UNCORRECT, "sar_oversize_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 7, 7, 0x0 },
	{ TEST_MCMACTX_UNICAST_FRAME_ECC_ERR_UNCORRECT, "unicast_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 8, 8, 0x0 },
	{ TEST_MCMACTX_MULTICAST_FRAME_ECC_ERR_UNCORRECT, "multicast_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 9, 9, 0x0 },
	{ TEST_MCMACTX_BROADCAST_FRAME_ECC_ERR_UNCORRECT, "broadcast_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 10, 10, 0x0 },
	{ TEST_MCMACTX_B64_FRAME_ECC_ERR_UNCORRECT, "b64_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 11, 11, 0x0 },
	{ TEST_MCMACTX_B65_MPL_FRAME_ECC_ERR_UNCORRECT, "b65_mpl_frame_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 12, 12, 0x0 },
	{ TEST_MCMACTX_TOTAL_BYTES_ECC_ERR_UNCORRECT, "total_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 13, 13, 0x0 },
	{ TEST_MCMACTX_GOOD_BYTES_ECC_ERR_UNCORRECT, "good_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 14, 14, 0x0 },
	{ TEST_MCMACTX_BAD_BYTES_ECC_ERR_UNCORRECT, "bad_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 15, 15, 0x0 },
	{ TEST_MCMACTX_SAR_FRAGMENT_BYTES_ECC_ERR_UNCORRECT, "sar_fragment_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 16, 16, 0x0 },
	{ TEST_MCMACTX_SAR_JABBER_BYTES_ECC_ERR_UNCORRECT, "sar_jabber_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 17, 17, 0x0 },
	{ TEST_MCMACTX_SAR_OVERSIZE_BYTES_ECC_ERR_UNCORRECT, "sar_oversize_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 18, 18, 0x0 },
	{ TEST_MCMACTX_UNICAST_BYTES_ECC_ERR_UNCORRECT, "unicast_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 19, 19, 0x0 },
	{ TEST_MCMACTX_MULTICAST_BYTES_ECC_ERR_UNCORRECT, "multicast_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 20, 20, 0x0 },
	{ TEST_MCMACTX_BROADCAST_BYTES_ECC_ERR_UNCORRECT, "broadcast_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 21, 21, 0x0 },
	{ TEST_MCMACTX_B64_BYTES_ECC_ERR_UNCORRECT, "b64_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 22, 22, 0x0 },
	{ TEST_MCMACTX_B65_MPL_BYTES_ECC_ERR_UNCORRECT, "b65_mpl_bytes_ecc_err_uncorrect", MCMACTX_BASE_ADDR, 0x99, 23, 23, 0x0 },
};
NEW_CHIP_REG test_mactx_eop_abnor_alm_reg[] =
{
	{ TEST_MCMACTX_EOP_ABNOR_ALM_0, "eop_abnor_alm_0", MCMACTX_BASE_ADDR, 0x9a, 31, 0, 0x0 },
	{ TEST_MCMACTX_EOP_ABNOR_ALM_1, "eop_abnor_alm_1", MCMACTX_BASE_ADDR, 0x9b, 31, 0, 0x0 },
	{ TEST_MCMACTX_EOP_ABNOR_ALM_2, "eop_abnor_alm_2", MCMACTX_BASE_ADDR, 0x9c, 15, 0, 0x0 },
};


NEW_CHIP_REG test_ccu_tx_ssm_req_reg[] =
{
	{ TEST_CCU_TX_SSM_REQ, "ccu_tx_ssm_req", CCU_TX_BASE_ADDR, 0x9, 0, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_frame_cnt_reg[] =
{
	{ TEST_CCU_TX_FRAME_CNT, "ccu_tx_frame_cnt", CCU_TX_BASE_ADDR, 0x0, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_drop_cnt_reg[] =
{
	{ TEST_CCU_TX_DROP_CNT, "ccu_tx_drop_cnt", CCU_TX_BASE_ADDR, 0x1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_filter_cnt_reg[] =
{
	{ TEST_CCU_TX_FILTER_CNT, "ccu_tx_filter_cnt", CCU_TX_BASE_ADDR, 0x2, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_err_cnt_reg[] =
{
	{ TEST_CCU_TX_ERR_CNT, "ccu_tx_err_cnt", CCU_TX_BASE_ADDR, 0x3, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_len_err_cnt_reg[] =
{
	{ TEST_CCU_TX_LEN_ERR_CNT, "ccu_tx_len_err_cnt", CCU_TX_BASE_ADDR, 0x4, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_ptp_cnt_reg[] =
{
	{ TEST_CCU_TX_PTP_CNT, "ccu_tx_ptp_cnt", CCU_TX_BASE_ADDR, 0x5, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_ssm_cnt_reg[] =
{
	{ TEST_CCU_TX_SSM_CNT, "ccu_tx_ssm_cnt", CCU_TX_BASE_ADDR, 0x6, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_sync_port_cnt_reg[] =
{
	{ TEST_CCU_TX_SYNC_PORT_CNT, "ccu_tx_sync_port_cnt", CCU_TX_BASE_ADDR, 0xa, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_delay_req_port_cnt_reg[] =
{
	{ TEST_CCU_TX_DELAY_REQ_PORT_CNT, "ccu_tx_delay_req_port_cnt", CCU_TX_BASE_ADDR, 0x12, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_pdelay_req_port_cnt_reg[] =
{
	{ TEST_CCU_TX_PDELAY_REQ_PORT_CNT, "ccu_tx_pdelay_req_port_cnt", CCU_TX_BASE_ADDR, 0x1a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_pdelay_resp_port_cnt_reg[] =
{
	{ TEST_CCU_TX_PDELAY_RESP_PORT_CNT, "ccu_tx_pdelay_resp_port_cnt", CCU_TX_BASE_ADDR, 0x22, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_follow_up_port_cnt_reg[] =
{
	{ TEST_CCU_TX_FOLLOW_UP_PORT_CNT, "ccu_tx_follow_up_port_cnt", CCU_TX_BASE_ADDR, 0x2a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_delay_resp_port_cnt_reg[] =
{
	{ TEST_CCU_TX_DELAY_RESP_PORT_CNT, "ccu_tx_delay_resp_port_cnt", CCU_TX_BASE_ADDR, 0x32, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_pdelay_follow_up_port_cnt_reg[] =
{
	{ TEST_CCU_TX_PDELAY_FOLLOW_UP_PORT_CNT, "ccu_tx_pdelay_follow_up_port_cnt", CCU_TX_BASE_ADDR, 0x3a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_announce_port_cnt_reg[] =
{
	{ TEST_CCU_TX_ANNOUNCE_PORT_CNT, "ccu_tx_announce_port_cnt", CCU_TX_BASE_ADDR, 0x42, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_signaling_port_cnt_reg[] =
{
	{ TEST_CCU_TX_SIGNALING_PORT_CNT, "ccu_tx_signaling_port_cnt", CCU_TX_BASE_ADDR, 0x4a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_management_port_cnt_reg[] =
{
	{ TEST_CCU_TX_MANAGEMENT_PORT_CNT, "ccu_tx_management_port_cnt", CCU_TX_BASE_ADDR, 0x52, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_resv_port_cnt_reg[] =
{
	{ TEST_CCU_TX_RESV_PORT_CNT, "ccu_tx_resv_port_cnt", CCU_TX_BASE_ADDR, 0x5a, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_ssm_port_cnt_reg[] =
{
	{ TEST_CCU_TX_SSM_PORT_CNT, "ccu_tx_ssm_port_cnt", CCU_TX_BASE_ADDR, 0x62, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_encode_err_cnt_reg[] =
{
	{ TEST_CCU_TX_ENCODE_ERR_CNT, "ccu_tx_encode_err_cnt", CCU_TX_BASE_ADDR, 0x70, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_ssm_message0_reg[] =
{
	{ TEST_CCU_TX_SSM_MESSAGE0, "ccu_tx_ssm_message0", CCU_TX_BASE_ADDR, 0x7, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_ssm_message1_reg[] =
{
	{ TEST_CCU_TX_SSM_MESSAGE1, "ccu_tx_ssm_message1", CCU_TX_BASE_ADDR, 0x8, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_encode_err_alm_reg[] =
{
	{ TEST_CCU_TX_ENCODE_ERR_ALM, "ccu_tx_encode_err_alm", CCU_TX_BASE_ADDR, 0x71, 0, 0, 0x0 },
	{ TEST_CCU_TX_64_TO_640_FIFO_FULL, "ccu_tx_64_to_640_fifo_full", CCU_TX_BASE_ADDR, 0x71, 1, 1, 0x0 },
	{ TEST_CCU_TX_64_TO_640_ERR_ALM, "ccu_tx_64_to_640_err_alm", CCU_TX_BASE_ADDR, 0x71, 2, 2, 0x0 },
	{ TEST_CCU_TX_OH_BUFF_ERR_ALM, "ccu_tx_oh_buff_err_alm", CCU_TX_BASE_ADDR, 0x71, 3, 3, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_int_reg[] =
{
	{ TEST_CCU_TX_ENCODE_ERR_INT, "ccu_tx_encode_err_int", CCU_TX_BASE_ADDR, 0x72, 1, 0, 0x0 },
	{ TEST_CCU_TX_64_TO_640_FIFO_FULL_INT, "ccu_tx_64_to_640_fifo_full_int", CCU_TX_BASE_ADDR, 0x72, 3, 2, 0x0 },
	{ TEST_CCU_TX_64_TO_640_ERR_INT, "ccu_tx_64_to_640_err_int", CCU_TX_BASE_ADDR, 0x72, 5, 4, 0x0 },
	{ TEST_CCU_TX_OH_BUFF_ERR_INT, "ccu_tx_oh_buff_err_int", CCU_TX_BASE_ADDR, 0x72, 7, 6, 0x0 },
};
NEW_CHIP_REG test_ccu_tx_int_mask_reg[] =
{
	{ TEST_CCU_TX_ENCODE_ERR_INT_MASK, "ccu_tx_encode_err_int_mask", CCU_TX_BASE_ADDR, 0x73, 1, 0, 0x0 },
	{ TEST_CCU_TX_64_TO_640_FIFO_FULL_INT_MASK, "ccu_tx_64_to_640_fifo_full_int_mask", CCU_TX_BASE_ADDR, 0x73, 3, 2, 0x0 },
	{ TEST_CCU_TX_64_TO_640_ERR_INT_MASK, "ccu_tx_64_to_640_err_int_mask", CCU_TX_BASE_ADDR, 0x73, 5, 4, 0x0 },
	{ TEST_CCU_TX_OH_BUFF_ERR_INT_MASK, "ccu_tx_oh_buff_err_int_mask", CCU_TX_BASE_ADDR, 0x73, 7, 6, 0x0 },
};

NEW_CHIP_REG test_ptp_tx_pkts_en_reg[] =
{
	{ TEST_PTP_TX_RECALC_CRC_EN, "recalc_crc_en", PTP_TX_OH_BASE_ADDR, 0x0, 0, 0, 0x0 },
	{ TEST_PTP_TX_RECALC_CKSUM_EN, "recalc_cksum_en", PTP_TX_OH_BASE_ADDR, 0x0, 1, 1, 0x0 },
	{ TEST_PTP_TX_LEN_CTRL_EN, "tx_len_ctrl_en", PTP_TX_OH_BASE_ADDR, 0x0, 3, 3, 0x0 },
	{ TEST_PTP_TX_SAMPLE_TX_TS_EN, "sample_tx_ts_en", PTP_TX_OH_BASE_ADDR, 0x0, 4, 4, 0x0 },
	{ TEST_PTP_TX2RX_LOOP_EN, "tx2rx_loop_en", PTP_TX_OH_BASE_ADDR, 0x0, 5, 5, 0x0 },
	{ TEST_PTP_TX_CF_FILED_SIGN, "cf_filed_sign", PTP_TX_OH_BASE_ADDR, 0x0, 6, 6, 0x0 },
	{ TEST_PTP_TX_ELASTIC_EN, "tx_elastic_en", PTP_TX_OH_BASE_ADDR, 0x0, 7, 7, 0x1 },
};
NEW_CHIP_REG test_tx_port_asym_comp_reg[] =
{
	{ TEST_PTP_TX_ASYM_COMP_DATA, "Tx_asym_comp_data", PTP_TX_OH_BASE_ADDR, 0x1, 15, 0, 0x0 },
	{ TEST_PTP_TX_ASYM_COMP_SIGN, "Tx_asym_comp_sign", PTP_TX_OH_BASE_ADDR, 0x1, 16, 16, 0x0 },
	{ TEST_PTP_TX_ASYM_COMP_FRAC, "Tx_asym_comp_frac", PTP_TX_OH_BASE_ADDR, 0x1, 20, 17, 0x0 },
};
NEW_CHIP_REG test_ptptx_cf_calc_ctrl_reg[] =
{
	{ TEST_PTP_TX_CF_SET_THRESHOLD, "cf_set_threshold", PTP_TX_OH_BASE_ADDR, 0x6, 15, 0, 0x1 },
};
NEW_CHIP_REG test_port_tx_frm_cnt_reg[] =
{
	{ TEST_PTP_TX_PORT_TX_FRM_CNT, "port_tx_frm_cnt", PTP_TX_OH_BASE_ADDR, 0x7, 31, 0, 0x0 },
};
NEW_CHIP_REG test_port_tx_ptp_cnt_reg[] =
{
	{ TEST_PTP_TX_PORT_TX_PTP_CNT, "port_tx_ptp_cnt", PTP_TX_OH_BASE_ADDR, 0x8, 31, 0, 0x0 },
};
NEW_CHIP_REG test_port_tx_ssm_cnt_reg[] =
{
	{ TEST_PTP_TX_PORT_TX_SSM_CNT, "port_tx_ssm_cnt", PTP_TX_OH_BASE_ADDR, 0x9, 31, 0, 0x0 },
};
NEW_CHIP_REG test_port_tx_drop_cnt_reg[] =
{
	{ TEST_PTP_TX_PBUFF_DROP_CNT, "pbuff_drop_cnt", PTP_TX_OH_BASE_ADDR, 0xc, 31, 0, 0x0 },
};
NEW_CHIP_REG test_ptptx_2step_ts_cap_reg[] =
{
	{ TEST_PTP_TX_PORT_2STEP_TIMESTAMP_0, "port_2step_timestamp_0", PTP_TX_OH_BASE_ADDR, 0xa, 31, 0, 0x0 },
	{ TEST_PTP_TX_PORT_2STEP_TIMESTAMP_1, "port_2step_timestamp_1", PTP_TX_OH_BASE_ADDR, 0xb, 19, 0, 0x0 },
};
NEW_CHIP_REG test_tx_port_buf_ts_state_reg[] =
{
	{ TEST_PTP_TX_PORT_BUFF_FULL, "port_buff_full", PTP_TX_OH_BASE_ADDR, 0xf, 0, 0, 0x0 },
	{ TEST_PTP_TX_PORT_BUFF_EMPTY, "port_buff_empty", PTP_TX_OH_BASE_ADDR, 0xf, 1, 1, 0x1 },
	{ TEST_PTP_TX_BBUFF_BANK_ST, "tx_bbuff_bank_st", PTP_TX_OH_BASE_ADDR, 0xf, 6, 2, 0x0 },
};
NEW_CHIP_REG test_ptp_txoh_alm_reg[] =
{
	{ TEST_PTP_TX_2STEP_CAP_READY, "tx_2step_cap_ready", PTP_TX_OH_BASE_ADDR, 0xe, 0, 0, 0x0 },
	{ TEST_PTP_TX_CF_CORRECT_ALM, "cf_correct_alm", PTP_TX_OH_BASE_ADDR, 0xe, 1, 1, 0x0 },
	{ TEST_PTP_TX_PTP_TX_OH_ERR, "ptp_tx_oh_err", PTP_TX_OH_BASE_ADDR, 0xe, 2, 2, 0x0 },
	{ TEST_PTP_TX_66B_CODE_ALM, "tx_66b_code_alm", PTP_TX_OH_BASE_ADDR, 0xe, 3, 3, 0x0 },
	{ TEST_PTP_TX_PBUFF_DROP_ALM, "pbuff_drop_alm", PTP_TX_OH_BASE_ADDR, 0xe, 4, 4, 0x0 },
	{ TEST_PTP_TX_RD_LENGTH_ALM, "rd_length_alm", PTP_TX_OH_BASE_ADDR, 0xe, 5, 5, 0x0 },
};
NEW_CHIP_REG test_ptp_txoh_int_reg[] =
{
	{ TEST_PTP_TX_2STEP_CAP_READY_INT, "tx_2step_cap_ready_int", PTP_TX_OH_BASE_ADDR, 0x2, 1, 0, 0x0 },
	{ TEST_PTP_TX_CF_CORRECT_ALM_INT, "cf_correct_alm_int", PTP_TX_OH_BASE_ADDR, 0x2, 3, 2, 0x0 },
	{ TEST_PTP_TX_PTP_TX_OH_ERR_INT, "ptp_tx_oh_err_int", PTP_TX_OH_BASE_ADDR, 0x2, 5, 4, 0x0 },
	{ TEST_PTP_TX_66B_CODE_ALM_INT, "tx_66b_code_alm_int", PTP_TX_OH_BASE_ADDR, 0x2, 7, 6, 0x0 },
	{ TEST_PTP_TX_PBUFF_DROP_ALM_INT, "pbuff_drop_alm_int", PTP_TX_OH_BASE_ADDR, 0x2, 9, 8, 0x0 },
	{ TEST_PTP_TX_RD_LENGTH_ALM_INT, "rd_length_alm_int", PTP_TX_OH_BASE_ADDR, 0x2, 11, 10, 0x0 },
};
NEW_CHIP_REG test_ptp_txoh_int_mask_reg[] =
{
	{ TEST_PTP_TX_2STEP_CAP_READY_INT_MASK, "tx_2step_cap_ready_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 1, 0, 0x0 },
	{ TEST_PTP_TX_CF_CORRECT_ALM_INT_MASK, "cf_correct_alm_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 3, 2, 0x0 },
	{ TEST_PTP_TX_PTP_TX_OH_ERR_INT_MASK, "ptp_tx_oh_err_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 5, 4, 0x0 },
	{ TEST_PTP_TX_66B_CODE_ALM_INT_MASK, "tx_66b_code_alm_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 7, 6, 0x0 },
	{ TEST_PTP_TX_PBUFF_DROP_ALM_INT_MASK, "pbuff_drop_alm_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 9, 8, 0x0 },
	{ TEST_PTP_TX_RD_LENGTH_ALM_INT_MASK, "rd_length_alm_int_mask", PTP_TX_OH_BASE_ADDR, 0x3, 11, 10, 0x0 },
};


NEW_CHIP_REG test_sar_rx_glb_cfg_reg[] =
{
	{ TEST_RX_LOOPBACK, "rx_loopback", B66SAR_RX_BASE_ADDR, 0x0, 0, 0, 0x0 },
	{ TEST_B66SIZE_29B, "b66size_29b", B66SAR_RX_BASE_ADDR, 0x0, 1, 1, 0x0 },
	{ TEST_RX_PKT_CNT_PROB, "rx_pkt_cnt_prob", B66SAR_RX_BASE_ADDR, 0x0, 14, 8, 0x0 },
	{ TEST_RX_PKT_CNT_256_PROB, "rx_pkt_cnt_256_prob", B66SAR_RX_BASE_ADDR, 0x0, 23, 15, 0x0 },
	{ TEST_BDCOME_FC_EN, "bdcome_fc_en", B66SAR_RX_BASE_ADDR, 0x0, 24, 24, 0x0 },
};
NEW_CHIP_REG test_sar_rx_ctrl_cfg_reg[] =
{
	{ TEST_MON_EN, "mon_en", B66SAR_RX_BASE_ADDR, 0x2, 0, 0, 0x0 },
	{ TEST_CPB2SAR_CH_EN, "cpb2sar_ch_en", B66SAR_RX_BASE_ADDR, 0x2, 1, 1, 0x0 },
	{ TEST_BRCM_FC_CH_EN, "brcm_fc_ch_en", B66SAR_RX_BASE_ADDR, 0x2, 2, 2, 0x0 },
	{ TEST_RX_CHAN_MAP, "rx_chan_map", B66SAR_RX_BASE_ADDR, 0x2, 17, 8, 0x200 },
	{ TEST_RX_FIFO_HIGH_CFG, "rx_fifo_high_cfg", B66SAR_RX_BASE_ADDR, 0x2, 23, 20, 0xd },
	{ TEST_RX_FIFO_LOW_CFG, "rx_fifo_low_cfg", B66SAR_RX_BASE_ADDR, 0x2, 27, 24, 0x3 },
	{ TEST_RX_FIFO_MID_CFG, "rx_fifo_mid_cfg", B66SAR_RX_BASE_ADDR, 0x2, 31, 28, 0x7 },
};
NEW_CHIP_REG test_cpb2sar_cfg4_reg[] =
{
	{ TEST_CPB2SAR_FIFO_ADJ_PERIOD, "cpb2sar_fifo_adj_period", B66SAR_RX_BASE_ADDR, 0x52, 14, 0, 0x7fff },
	{ TEST_SAR_FIFO_ADJ_PERIOD, "sar_fifo_adj_period", B66SAR_RX_BASE_ADDR, 0x52, 30, 16, 0x7fff },
};
NEW_CHIP_REG test_cpb2sar_cfg1_reg[] =
{
	{ TEST_CPB2SAR_CFG_PERIOD, "cpb2sar_cfg_period", B66SAR_RX_BASE_ADDR, 0x53, 12, 0, 0x9cb },
	{ TEST_CPB2SAR_NOM_CNT, "cpb2sar_nom_cnt", B66SAR_RX_BASE_ADDR, 0x53, 25, 13, 0x75f },
	{ TEST_CPB2SAR_FIFO_ADJ_EN, "cpb2sar_fifo_adj_en", B66SAR_RX_BASE_ADDR, 0x53, 26, 26, 0x1 },
	{ TEST_SAR_FIFO_ADJ_EN, "sar_fifo_adj_en", B66SAR_RX_BASE_ADDR, 0x53, 27, 27, 0x1 },
};
NEW_CHIP_REG test_cpb2sar_cfg2_reg[] =
{
	{ TEST_CPB2SAR_Q, "cpb2sar_q", B66SAR_RX_BASE_ADDR, 0x55, 12, 0, 0x20 },
	{ TEST_CPB2SAR_ADJ_01EN, "cpb2sar_adj_01en", B66SAR_RX_BASE_ADDR, 0x55, 13, 13, 0x0 },
	{ TEST_CPB2SAR_CALENDAR_EN, "cpb2sar_calendar_en", B66SAR_RX_BASE_ADDR, 0x55, 14, 14, 0x0 },
	{ TEST_ADJ_IN_CHECK_VALUE, "adj_in_check_value", B66SAR_RX_BASE_ADDR, 0x55, 24, 15, 0x64 },
	{ TEST_ADJ_IN_CORRECT_EN, "adj_in_correct_en", B66SAR_RX_BASE_ADDR, 0x55, 25, 25, 0x1 },
};
NEW_CHIP_REG test_cpb2sar_cfg3_reg[] =
{
	{ TEST_LOCAL_EN, "local_en", B66SAR_RX_BASE_ADDR, 0x59, 0, 0, 0x1 },
	{ TEST_LOCAL_M, "local_m", B66SAR_RX_BASE_ADDR, 0x59, 10, 1, 0x1aa },
	{ TEST_DELAY_CYCLES, "delay_cycles", B66SAR_RX_BASE_ADDR, 0x59, 16, 11, 0x14 },
};
NEW_CHIP_REG test_cpb2sar_table_switch_reg[] =
{
	{ TEST_CPB2SAR_TABLE_SWITCH, "cpb2sar_table_switch", B66SAR_RX_BASE_ADDR, 0x57, 0, 0, 0x0 },
	{ TEST_RX_JOINT_INFO_INIT, "rx_joint_info_init", B66SAR_RX_BASE_ADDR, 0x57, 1, 1, 0x0 },
	{ TEST_CPB2SAR_FIFO_ADJ_INIT, "cpb2sar_fifo_adj_init", B66SAR_RX_BASE_ADDR, 0x57, 2, 2, 0x0 },
	{ TEST_SAR_FIFO_ADJ_INIT, "sar_fifo_adj_init", B66SAR_RX_BASE_ADDR, 0x57, 3, 3, 0x0 },
	{ TEST_CPB2SAR_DECIMATE_INIT, "cpb2sar_decimate_init", B66SAR_RX_BASE_ADDR, 0x57, 4, 4, 0x0 },
};
NEW_CHIP_REG test_sar_rx_pkt_cnt_reg[] =
{
	{ TEST_RX_PKT_CNT, "rx_pkt_cnt", B66SAR_RX_BASE_ADDR, 0x54, 31, 0, 0x0 },
};
NEW_CHIP_REG test_sar_rx_pkt_cnt_256_reg[] =
{
	{ TEST_RX_PKT_CNT_256, "rx_pkt_cnt_256", B66SAR_RX_BASE_ADDR, 0xb1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_sar_rx_state_reg[] =
{
	{ TEST_RX_PATH_DELAY, "rx_path_delay", B66SAR_RX_BASE_ADDR, 0x56, 15, 0, 0x0 },
	{ TEST_CSI, "csi", B66SAR_RX_BASE_ADDR, 0x56, 17, 16, 0x0 },
	{ TEST_CPB2SAR_CURRENT_TABLE, "cpb2sar_current_table", B66SAR_RX_BASE_ADDR, 0x56, 18, 18, 0x0 },
	{ TEST_CPB2SAR_BUSY, "cpb2sar_busy", B66SAR_RX_BASE_ADDR, 0x56, 19, 19, 0x0 },
	{ TEST_RX_JOINT_INIT_DONE, "rx_joint_init_done", B66SAR_RX_BASE_ADDR, 0x56, 20, 20, 0x0 },
	{ TEST_CPB2SAR_FIFO_ADJ_INIT_DONE, "cpb2sar_fifo_adj_init_done", B66SAR_RX_BASE_ADDR, 0x56, 21, 21, 0x0 },
	{ TEST_SAR_FIFO_ADJ_INIT_DONE, "sar_fifo_adj_init_done", B66SAR_RX_BASE_ADDR, 0x56, 22, 22, 0x0 },
	{ TEST_CPB2SAR_DECIMATE_INIT_DONE, "cpb2sar_decimate_init_done", B66SAR_RX_BASE_ADDR, 0x56, 23, 23, 0x0 },
};
NEW_CHIP_REG test_sar_rx_glb_alm_reg[] =
{
	{ TEST_B66SAR_RX_BSIZE_ERR, "bsize_err", B66SAR_RX_BASE_ADDR, 0x1, 4, 2, 0x0 },
	{ TEST_B66SAR_RX_ADJ_IN_ALM, "adj_in_alm", B66SAR_RX_BASE_ADDR, 0x1, 5, 5, 0x0 },
	{ TEST_B66SAR_RX_I1_OVERFLOW, "i1_overflow", B66SAR_RX_BASE_ADDR, 0x1, 6, 6, 0x0 },
	{ TEST_B66SAR_RX_I1_UNDERFLOW, "i1_underflow", B66SAR_RX_BASE_ADDR, 0x1, 7, 7, 0x0 },
	{ TEST_B66SAR_RX_I2_OVERFLOW, "i2_overflow", B66SAR_RX_BASE_ADDR, 0x1, 8, 8, 0x0 },
	{ TEST_B66SAR_RX_I2_UNDERFLOW, "i2_underflow", B66SAR_RX_BASE_ADDR, 0x1, 9, 9, 0x0 },
	{ TEST_B66SAR_RX_BT_SOP_ERR, "bt_sop_err", B66SAR_RX_BASE_ADDR, 0x1, 16, 16, 0x0 },
	{ TEST_B66SAR_RX_BT_CHAN_ERR, "bt_chan_err", B66SAR_RX_BASE_ADDR, 0x1, 17, 17, 0x0 },
};
NEW_CHIP_REG test_sar_rx_ch_alm_reg[] =
{
	{ TEST_RX_PAR_ERR, "rx_par_err", B66SAR_RX_BASE_ADDR, 0x60, 0, 0, 0x0 },
	{ TEST_RX_DROP_ONE_ERR, "rx_drop_one_err", B66SAR_RX_BASE_ADDR, 0x60, 1, 1, 0x0 },
	{ TEST_RX_DROP_TWO_ERR, "rx_drop_two_err", B66SAR_RX_BASE_ADDR, 0x60, 2, 2, 0x0 },
	{ TEST_RX_FIFO_HIGH_IND, "rx_fifo_high_ind", B66SAR_RX_BASE_ADDR, 0x60, 3, 3, 0x0 },
	{ TEST_RX_FIFO_LOW_IND, "rx_fifo_low_ind", B66SAR_RX_BASE_ADDR, 0x60, 4, 4, 0x0 },
	{ TEST_RX_FIFO_FULL, "rx_fifo_full", B66SAR_RX_BASE_ADDR, 0x60, 6, 6, 0x0 },
	{ TEST_RX_FIFO_EMPTY, "rx_fifo_empty", B66SAR_RX_BASE_ADDR, 0x60, 7, 7, 0x0 },
};
NEW_CHIP_REG test_b66sar_rx_int_reg[] =
{
	{ TEST_BT_SOP_ERR_INT, "bt_sop_err_int", B66SAR_RX_BASE_ADDR, 0xb2, 3, 2, 0x0 },
	{ TEST_BT_CHAN_ERR_INT, "bt_chan_err_int", B66SAR_RX_BASE_ADDR, 0xb2, 5, 4, 0x0 },
};
NEW_CHIP_REG test_b66sar_rx_int_mask_reg[] =
{
	{ TEST_BT_SOP_ERR_INT_MASK, "bt_sop_err_int_mask", B66SAR_RX_BASE_ADDR, 0xb3, 3, 2, 0x0 },
	{ TEST_BT_CHAN_ERR_INT_MASK, "bt_chan_err_int_mask", B66SAR_RX_BASE_ADDR, 0xb3, 5, 4, 0x0 },
};
NEW_CHIP_REG test_rx_fifo_err_int_reg[] =
{
	{ TEST_RX_FIFO_ERR_0_INT, "rx_fifo_err_0_int", B66SAR_RX_BASE_ADDR, 0xc0, 1, 0, 0x0 },
	{ TEST_RX_FIFO_ERR_1_INT, "rx_fifo_err_1_int", B66SAR_RX_BASE_ADDR, 0xc0, 3, 2, 0x0 },
	{ TEST_RX_FIFO_ERR_2_INT, "rx_fifo_err_2_int", B66SAR_RX_BASE_ADDR, 0xc0, 5, 4, 0x0 },
	{ TEST_RX_FIFO_ERR_3_INT, "rx_fifo_err_3_int", B66SAR_RX_BASE_ADDR, 0xc0, 7, 6, 0x0 },
	{ TEST_RX_FIFO_ERR_4_INT, "rx_fifo_err_4_int", B66SAR_RX_BASE_ADDR, 0xc0, 9, 8, 0x0 },
	{ TEST_RX_FIFO_ERR_5_INT, "rx_fifo_err_5_int", B66SAR_RX_BASE_ADDR, 0xc0, 11, 10, 0x0 },
	{ TEST_RX_FIFO_ERR_6_INT, "rx_fifo_err_6_int", B66SAR_RX_BASE_ADDR, 0xc0, 13, 12, 0x0 },
	{ TEST_RX_FIFO_ERR_7_INT, "rx_fifo_err_7_int", B66SAR_RX_BASE_ADDR, 0xc0, 15, 14, 0x0 },
	{ TEST_RX_FIFO_ERR_8_INT, "rx_fifo_err_8_int", B66SAR_RX_BASE_ADDR, 0xc0, 17, 16, 0x0 },
	{ TEST_RX_FIFO_ERR_9_INT, "rx_fifo_err_9_int", B66SAR_RX_BASE_ADDR, 0xc0, 19, 18, 0x0 },
	{ TEST_RX_FIFO_ERR_10_INT, "rx_fifo_err_10_int", B66SAR_RX_BASE_ADDR, 0xc0, 21, 20, 0x0 },
	{ TEST_RX_FIFO_ERR_11_INT, "rx_fifo_err_11_int", B66SAR_RX_BASE_ADDR, 0xc0, 23, 22, 0x0 },
	{ TEST_RX_FIFO_ERR_12_INT, "rx_fifo_err_12_int", B66SAR_RX_BASE_ADDR, 0xc0, 25, 24, 0x0 },
	{ TEST_RX_FIFO_ERR_13_INT, "rx_fifo_err_13_int", B66SAR_RX_BASE_ADDR, 0xc0, 27, 26, 0x0 },
	{ TEST_RX_FIFO_ERR_14_INT, "rx_fifo_err_14_int", B66SAR_RX_BASE_ADDR, 0xc0, 29, 28, 0x0 },
	{ TEST_RX_FIFO_ERR_15_INT, "rx_fifo_err_15_int", B66SAR_RX_BASE_ADDR, 0xc0, 31, 30, 0x0 },
};
NEW_CHIP_REG test_rx_fifo_err_int_mask_reg[] =
{
	{ TEST_RX_FIFO_ERR_0_INT_MASK, "rx_fifo_err_0_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 1, 0, 0x0 },
	{ TEST_RX_FIFO_ERR_1_INT_MASK, "rx_fifo_err_1_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 3, 2, 0x0 },
	{ TEST_RX_FIFO_ERR_2_INT_MASK, "rx_fifo_err_2_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 5, 4, 0x0 },
	{ TEST_RX_FIFO_ERR_3_INT_MASK, "rx_fifo_err_3_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 7, 6, 0x0 },
	{ TEST_RX_FIFO_ERR_4_INT_MASK, "rx_fifo_err_4_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 9, 8, 0x0 },
	{ TEST_RX_FIFO_ERR_5_INT_MASK, "rx_fifo_err_5_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 11, 10, 0x0 },
	{ TEST_RX_FIFO_ERR_6_INT_MASK, "rx_fifo_err_6_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 13, 12, 0x0 },
	{ TEST_RX_FIFO_ERR_7_INT_MASK, "rx_fifo_err_7_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 15, 14, 0x0 },
	{ TEST_RX_FIFO_ERR_8_INT_MASK, "rx_fifo_err_8_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 17, 16, 0x0 },
	{ TEST_RX_FIFO_ERR_9_INT_MASK, "rx_fifo_err_9_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 19, 18, 0x0 },
	{ TEST_RX_FIFO_ERR_10_INT_MASK, "rx_fifo_err_10_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 21, 20, 0x0 },
	{ TEST_RX_FIFO_ERR_11_INT_MASK, "rx_fifo_err_11_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 23, 22, 0x0 },
	{ TEST_RX_FIFO_ERR_12_INT_MASK, "rx_fifo_err_12_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 25, 24, 0x0 },
	{ TEST_RX_FIFO_ERR_13_INT_MASK, "rx_fifo_err_13_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 27, 26, 0x0 },
	{ TEST_RX_FIFO_ERR_14_INT_MASK, "rx_fifo_err_14_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 29, 28, 0x0 },
	{ TEST_RX_FIFO_ERR_15_INT_MASK, "rx_fifo_err_15_int_mask", B66SAR_RX_BASE_ADDR, 0xc5, 31, 30, 0x0 },
};
NEW_CHIP_REG test_req_gen_m_reg[] =
{
	{ TEST_REQ_GEN_M, "req_gen_m", REQ_GEN_BASE_ADDR, 0x0, 31, 0, 0xc3298f74 },
};
NEW_CHIP_REG test_base_m_reg[] =
{
	{ TEST_BASE_M, "base_m", REQ_GEN_BASE_ADDR, 0x1, 31, 0, 0xc329901f },
};
NEW_CHIP_REG test_req_gen_cfg_reg[] =
{
	{ TEST_CALENDAR_EN, "calendar_en", REQ_GEN_BASE_ADDR, 0x2, 0, 0, 0x0 },
	{ TEST_OHIF_1588_RATE_LIMIT_EN, "ohif_1588_rate_limit_en", REQ_GEN_BASE_ADDR, 0x2, 1, 1, 0x0 },
};
NEW_CHIP_REG test_ohif_1588_src_dst_reg[] =
{
	{ TEST_EXTRA_SRC, "extra_src", REQ_GEN_BASE_ADDR, 0x6, 6, 0, 0x50 },
	{ TEST_EXTRA_DST0, "extra_dst0", REQ_GEN_BASE_ADDR, 0x6, 14, 8, 0x50 },
	{ TEST_EXTRA_DST1, "extra_dst1", REQ_GEN_BASE_ADDR, 0x6, 22, 16, 0x51 },
};
NEW_CHIP_REG test_ohif_1588_ratio_reg[] =
{
	{ TEST_OHIF_1588_RATIO, "ohif_1588_ratio", REQ_GEN_BASE_ADDR, 0x7, 9, 0, 0x355 },
};
NEW_CHIP_REG test_ohif_1588_rate_limit_m_reg[] =
{
	{ TEST_OHIF_1588_RATE_LIMIT_M, "ohif_1588_rate_limit_m", REQ_GEN_BASE_ADDR, 0x8, 31, 0, 0xe74db38 },
};
NEW_CHIP_REG test_ohif_1588_rate_limit_base_m_reg[] =
{
	{ TEST_OHIF_1588_RATE_LIMIT_BASE_M, "ohif_1588_rate_limit_base_m", REQ_GEN_BASE_ADDR, 0x9, 31, 0, 0xe74dbe3 },
};
NEW_CHIP_REG test_ohif_1588_rate_limit_ratio_reg[] =
{
	{ TEST_OHIF_1588_RATE_LIMIT_RATIO, "ohif_1588_rate_limit_ratio", REQ_GEN_BASE_ADDR, 0xa, 9, 0, 0x355 },
};
NEW_CHIP_REG test_extra_m_n_reg[] =
{
	{ TEST_EXTRA_M, "extra_m", REQ_GEN_BASE_ADDR, 0xb, 15, 0, 0x9999 },
	{ TEST_EXTRA_BASE_M, "extra_base_m", REQ_GEN_BASE_ADDR, 0xb, 31, 16, 0x999a },
};
NEW_CHIP_REG test_req_gen_pls_reg[] =
{
	{ TEST_MAC_ENV_INIT, "mac_env_init", REQ_GEN_BASE_ADDR, 0x3, 0, 0, 0x0 },
	{ TEST_TABLE_SWITCH, "table_switch", REQ_GEN_BASE_ADDR, 0x3, 1, 1, 0x0 },
};
NEW_CHIP_REG test_req_gen_state_reg[] =
{
	{ TEST_MAC_ENV_INIT_DONE, "mac_env_init_done", REQ_GEN_BASE_ADDR, 0x4, 0, 0, 0x0 },
	{ TEST_CURRENT_TABLE, "current_table", REQ_GEN_BASE_ADDR, 0x4, 1, 1, 0x0 },
	{ TEST_BUSY, "busy", REQ_GEN_BASE_ADDR, 0x4, 2, 2, 0x0 },
};
NEW_CHIP_REG test_rx_map_table_reg[] =
{
	{ TEST_MAP_TABLE, "map_table", INF_CH_ADP_RX_BASE_ADDR, 0x0, 31, 0, 0xffffffff },
};
NEW_CHIP_REG test_ts_delta_reg[] =
{
	{ TEST_TS_DELTA, "ts_delta", INF_CH_ADP_RX_BASE_ADDR, 0x1, 31, 0, 0x0 },
};
NEW_CHIP_REG test_mode_cfg_reg[] =
{
	{ TEST_IS_400G, "is_400g", INF_CH_ADP_RX_BASE_ADDR, 0x9, 0, 0, 0x0 },
	{ TEST_IS_200G, "is_200g", INF_CH_ADP_RX_BASE_ADDR, 0x9, 4, 1, 0x0 },
	{ TEST_IS_PORT6, "is_port6", INF_CH_ADP_RX_BASE_ADDR, 0x9, 5, 5, 0x1 },
	{ TEST_IS_ASYM, "is_asym", INF_CH_ADP_RX_BASE_ADDR, 0x9, 6, 6, 0x0 },
	{ TEST_ASYM_INST_SEL, "asym_inst_sel", INF_CH_ADP_RX_BASE_ADDR, 0x9, 7, 7, 0x0 },
};
NEW_CHIP_REG test_lf_sel_reg[] =
{
	{ TEST_LF_SEL, "lf_sel", INF_CH_ADP_RX_BASE_ADDR, 0xa, 23, 0, 0xfac688 },
};
NEW_CHIP_REG test_rx_port_restart_reg[] =
{
	{ TEST_PORT_RESTART, "port_restart", INF_CH_ADP_RX_BASE_ADDR, 0xc, 7, 0, 0x0 },
};
NEW_CHIP_REG test_rx_gearbox_alm_reg[] =
{
	{ TEST_FULL, "full", INF_CH_ADP_RX_BASE_ADDR, 0xb, 7, 0, 0x0 },
	{ TEST_EMPTY, "empty", INF_CH_ADP_RX_BASE_ADDR, 0xb, 15, 8, 0x0 },
};


/*******************************************define all_reg*********************************************/
const TEST_CHIP_REG all_reg[] =
{
	{ TEST_LEVELCLR_SCH_REG, test_levelclr_sch_reg, "subsys_66bsw.b66switch.b66switch_portsch.levelclr_sch", 1, "RW", 1,0 },
	{ TEST_MAXLEVEL_SCH_REG, test_maxlevel_sch_reg, "subsys_66bsw.b66switch.b66switch_portsch.maxlevel_sch", 5, "R", 1,0 },
	{ TEST_FULL_SCH_REG, test_full_sch_reg, "subsys_66bsw.b66switch.b66switch_portsch.full_sch", 1, "R", 1,0 },
	{ TEST_FLEXE_OAM_RX_CFG_REG, test_flexe_oam_rx_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_rx_cfg", 13, "RW", 1,0 },
	{ TEST_FLEXE_RX_IDLE_RPL_EN_REG, test_flexe_rx_idle_rpl_en_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_BYPASS_CHNL_REG, test_flexe_bypass_chnl_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bypass_chnl", 3, "RW", 1,0 },
	{ TEST_FLEXE_PERIOD_CFG_REG, test_flexe_period_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_period_cfg", 5, "RW", 1,0 },
	{ TEST_FLEXE_PERIOD_SEL_REG, test_flexe_period_sel_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_period_sel", 5, "RW", 1,0 },
	{ TEST_FLEXE_OAM_RX_ALM_EN_REG, test_flexe_oam_rx_alm_en_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_rx_alm_en", 24, "RW", 1,0 },
	{ TEST_FLEXE_BYPASS_XGMII_REG, test_flexe_bypass_xgmii_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bypass_xgmii", 3, "RW", 1,0 },
	{ TEST_FLEXE_RX_LPI_RPL_EN_REG, test_flexe_rx_lpi_rpl_en_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_lpi_rpl_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_A_REG, test_flexe_bas_period_a_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_a", 2, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_B_REG, test_flexe_bas_period_b_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_b", 2, "RW", 1,0 },
	{ TEST_FLEXE_BYPASS_OAM_ALM_CH_REG, test_flexe_bypass_oam_alm_ch_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bypass_oam_alm_ch", 3, "RW", 1,0 },
	{ TEST_FLEXE_OAM_RX_CONFIG_REG, test_flexe_oam_rx_config_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_rx_config", 7, "RW", 1,0 },
	{ TEST_FLEXE_OAM_TYPE_BIP_CAL_EN_REG, test_flexe_oam_type_bip_cal_en_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_type_bip_cal_en", 1, "RW", 1,0 },
	{ TEST_FLEXE_LF_MANUAL_INSERT_REG, test_flexe_lf_manual_insert_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lf_manual_insert", 4, "RW", 1,0 },
	{ TEST_FLEXE_RF_MANUAL_INSERT_REG, test_flexe_rf_manual_insert_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_manual_insert", 4, "RW", 1,0 },
	{ TEST_FLEXE_LPI_MANUAL_INSERT_REG, test_flexe_lpi_manual_insert_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_manual_insert", 3, "RW", 1,0 },
	{ TEST_FLEXE_RX_BIPERR_CNT_CLR_REG, test_flexe_rx_biperr_cnt_clr_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_biperr_cnt_clr", 3, "W", 1,0 },
	{ TEST_FLEXE_RX_BEIERR_CNT_CLR_REG, test_flexe_rx_beierr_cnt_clr_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_beierr_cnt_clr", 3, "W", 1,0 },
	{ TEST_FLEXE_OAM_CLR_RAM_INIT_REG, test_flexe_oam_clr_ram_init_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_clr_ram_init", 7, "W", 1,0 },
	{ TEST_FLEXE_OAM_CNT_CLR_DONE_REG, test_flexe_oam_cnt_clr_done_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_cnt_clr_done", 4, "R", 1,0 },
	{ TEST_FLEXE_BASE_PERIOD_REG, test_flexe_base_period_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_base_period", 5, "R", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_REG, test_flexe_rx_sdbip_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip", 3, "R", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_REG, test_flexe_rx_sfbip_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip", 3, "R", 1,0 },
	{ TEST_FLEXE_OAM_RX_RDI_RAM_ALM_REG, test_flexe_oam_rx_rdi_ram_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_rx_rdi_ram_alm", 4, "R", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_REG, test_flexe_rx_sfbei_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei", 3, "R", 1,0 },
	{ TEST_FLEXE_DEMUX_CLIENT_ALM_REG, test_flexe_demux_client_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_demux_client_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_CRC_ALM_OUT_REG, test_flexe_crc_alm_out_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_crc_alm_out", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_RDI_REG, test_flexe_bas_rdi_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_REG, test_flexe_bas_csf_lpi_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_REG, test_flexe_bas_cs_lf_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_REG, test_flexe_bas_cs_rf_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_REG, test_flexe_bas_crc_err_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_REG, test_flexe_bas_no_receive_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_RDI_LF_REG, test_flexe_rdi_lf_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf", 3, "R", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_REG, test_flexe_rx_sdbei_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei", 3, "R", 1,0 },
	{ TEST_FLEXE_RF_ALM_REG, test_flexe_rf_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_LPI_ALM_REG, test_flexe_lpi_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_REG, test_flexe_bas_period_alm_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I0_INT_REG, test_flexe_rx_sfbei_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I0_INT_MASK_REG, test_flexe_rx_sfbei_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I0_INT_REG, test_flexe_rx_sfbip_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I0_INT_MASK_REG, test_flexe_rx_sfbip_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I1_INT_REG, test_flexe_rx_sfbip_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I1_INT_MASK_REG, test_flexe_rx_sfbip_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I2_INT_REG, test_flexe_rx_sfbip_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I2_INT_MASK_REG, test_flexe_rx_sfbip_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I3_INT_REG, test_flexe_rx_sfbip_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I3_INT_MASK_REG, test_flexe_rx_sfbip_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I4_INT_REG, test_flexe_rx_sfbip_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBIP_I4_INT_MASK_REG, test_flexe_rx_sfbip_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbip_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I1_INT_REG, test_flexe_rx_sfbei_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I1_INT_MASK_REG, test_flexe_rx_sfbei_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I2_INT_REG, test_flexe_rx_sfbei_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I2_INT_MASK_REG, test_flexe_rx_sfbei_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I3_INT_REG, test_flexe_rx_sfbei_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I3_INT_MASK_REG, test_flexe_rx_sfbei_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I4_INT_REG, test_flexe_rx_sfbei_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEI_I4_INT_MASK_REG, test_flexe_rx_sfbei_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbei_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I3_INT_REG, test_flexe_bas_period_alm_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I3_INT_MASK_REG, test_flexe_bas_period_alm_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I4_INT_REG, test_flexe_bas_period_alm_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I4_INT_MASK_REG, test_flexe_bas_period_alm_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I0_INT_REG, test_flexe_rx_sdbip_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I0_INT_MASK_REG, test_flexe_rx_sdbip_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I1_INT_REG, test_flexe_rx_sdbip_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I1_INT_MASK_REG, test_flexe_rx_sdbip_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I2_INT_REG, test_flexe_rx_sdbip_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I2_INT_MASK_REG, test_flexe_rx_sdbip_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I3_INT_REG, test_flexe_rx_sdbip_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I3_INT_MASK_REG, test_flexe_rx_sdbip_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I4_INT_REG, test_flexe_rx_sdbip_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBIP_I4_INT_MASK_REG, test_flexe_rx_sdbip_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbip_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I0_INT_REG, test_flexe_bas_rdi_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I0_INT_MASK_REG, test_flexe_bas_rdi_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I1_INT_REG, test_flexe_bas_rdi_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I1_INT_MASK_REG, test_flexe_bas_rdi_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I2_INT_REG, test_flexe_bas_rdi_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I2_INT_MASK_REG, test_flexe_bas_rdi_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I3_INT_REG, test_flexe_bas_rdi_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I3_INT_MASK_REG, test_flexe_bas_rdi_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I4_INT_REG, test_flexe_bas_rdi_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_RDI_I4_INT_MASK_REG, test_flexe_bas_rdi_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_rdi_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I0_INT_REG, test_flexe_bas_csf_lpi_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I0_INT_MASK_REG, test_flexe_bas_csf_lpi_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I1_INT_REG, test_flexe_bas_csf_lpi_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I1_INT_MASK_REG, test_flexe_bas_csf_lpi_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I2_INT_REG, test_flexe_bas_csf_lpi_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I2_INT_MASK_REG, test_flexe_bas_csf_lpi_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I3_INT_REG, test_flexe_bas_csf_lpi_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I3_INT_MASK_REG, test_flexe_bas_csf_lpi_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I4_INT_REG, test_flexe_bas_csf_lpi_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CSF_LPI_I4_INT_MASK_REG, test_flexe_bas_csf_lpi_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_csf_lpi_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I0_INT_REG, test_flexe_bas_cs_lf_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I0_INT_MASK_REG, test_flexe_bas_cs_lf_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I1_INT_REG, test_flexe_bas_cs_lf_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I1_INT_MASK_REG, test_flexe_bas_cs_lf_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I2_INT_REG, test_flexe_bas_cs_lf_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I2_INT_MASK_REG, test_flexe_bas_cs_lf_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I3_INT_REG, test_flexe_bas_cs_lf_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I3_INT_MASK_REG, test_flexe_bas_cs_lf_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I4_INT_REG, test_flexe_bas_cs_lf_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_LF_I4_INT_MASK_REG, test_flexe_bas_cs_lf_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_lf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I0_INT_REG, test_flexe_bas_cs_rf_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I0_INT_MASK_REG, test_flexe_bas_cs_rf_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I1_INT_REG, test_flexe_bas_cs_rf_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I1_INT_MASK_REG, test_flexe_bas_cs_rf_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I2_INT_REG, test_flexe_bas_cs_rf_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I2_INT_MASK_REG, test_flexe_bas_cs_rf_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I3_INT_REG, test_flexe_bas_cs_rf_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I3_INT_MASK_REG, test_flexe_bas_cs_rf_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I4_INT_REG, test_flexe_bas_cs_rf_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CS_RF_I4_INT_MASK_REG, test_flexe_bas_cs_rf_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_cs_rf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I0_INT_REG, test_flexe_bas_crc_err_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I0_INT_MASK_REG, test_flexe_bas_crc_err_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I1_INT_REG, test_flexe_bas_crc_err_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I1_INT_MASK_REG, test_flexe_bas_crc_err_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I2_INT_REG, test_flexe_bas_crc_err_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I2_INT_MASK_REG, test_flexe_bas_crc_err_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I3_INT_REG, test_flexe_bas_crc_err_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I3_INT_MASK_REG, test_flexe_bas_crc_err_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I4_INT_REG, test_flexe_bas_crc_err_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_I4_INT_MASK_REG, test_flexe_bas_crc_err_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_crc_err_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I0_INT_REG, test_flexe_bas_no_receive_alm_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I0_INT_MASK_REG, test_flexe_bas_no_receive_alm_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I1_INT_REG, test_flexe_bas_no_receive_alm_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I1_INT_MASK_REG, test_flexe_bas_no_receive_alm_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I2_INT_REG, test_flexe_bas_no_receive_alm_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I2_INT_MASK_REG, test_flexe_bas_no_receive_alm_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I3_INT_REG, test_flexe_bas_no_receive_alm_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I3_INT_MASK_REG, test_flexe_bas_no_receive_alm_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I4_INT_REG, test_flexe_bas_no_receive_alm_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_NO_RECEIVE_ALM_I4_INT_MASK_REG, test_flexe_bas_no_receive_alm_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_no_receive_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I0_INT_REG, test_flexe_rdi_lf_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I0_INT_MASK_REG, test_flexe_rdi_lf_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I1_INT_REG, test_flexe_rdi_lf_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I1_INT_MASK_REG, test_flexe_rdi_lf_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I2_INT_REG, test_flexe_rdi_lf_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I2_INT_MASK_REG, test_flexe_rdi_lf_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I3_INT_REG, test_flexe_rdi_lf_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I3_INT_MASK_REG, test_flexe_rdi_lf_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I4_INT_REG, test_flexe_rdi_lf_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RDI_LF_I4_INT_MASK_REG, test_flexe_rdi_lf_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rdi_lf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I0_INT_REG, test_flexe_rx_sdbei_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I0_INT_MASK_REG, test_flexe_rx_sdbei_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I1_INT_REG, test_flexe_rx_sdbei_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I1_INT_MASK_REG, test_flexe_rx_sdbei_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I2_INT_REG, test_flexe_rx_sdbei_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I2_INT_MASK_REG, test_flexe_rx_sdbei_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I3_INT_REG, test_flexe_rx_sdbei_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I3_INT_MASK_REG, test_flexe_rx_sdbei_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I4_INT_REG, test_flexe_rx_sdbei_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RX_SDBEI_I4_INT_MASK_REG, test_flexe_rx_sdbei_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbei_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I0_INT_REG, test_flexe_rf_alm_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I0_INT_MASK_REG, test_flexe_rf_alm_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I1_INT_REG, test_flexe_rf_alm_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I1_INT_MASK_REG, test_flexe_rf_alm_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I2_INT_REG, test_flexe_rf_alm_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I2_INT_MASK_REG, test_flexe_rf_alm_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I3_INT_REG, test_flexe_rf_alm_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I3_INT_MASK_REG, test_flexe_rf_alm_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I4_INT_REG, test_flexe_rf_alm_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_RF_ALM_I4_INT_MASK_REG, test_flexe_rf_alm_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rf_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I0_INT_REG, test_flexe_lpi_alm_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I0_INT_MASK_REG, test_flexe_lpi_alm_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I1_INT_REG, test_flexe_lpi_alm_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I1_INT_MASK_REG, test_flexe_lpi_alm_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I2_INT_REG, test_flexe_lpi_alm_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I2_INT_MASK_REG, test_flexe_lpi_alm_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I3_INT_REG, test_flexe_lpi_alm_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I3_INT_MASK_REG, test_flexe_lpi_alm_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I4_INT_REG, test_flexe_lpi_alm_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_LPI_ALM_I4_INT_MASK_REG, test_flexe_lpi_alm_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_lpi_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I0_INT_REG, test_flexe_bas_period_alm_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I0_INT_MASK_REG, test_flexe_bas_period_alm_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I1_INT_REG, test_flexe_bas_period_alm_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I1_INT_MASK_REG, test_flexe_bas_period_alm_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I2_INT_REG, test_flexe_bas_period_alm_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_ALM_I2_INT_MASK_REG, test_flexe_bas_period_alm_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_bas_period_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_FLEXE_ENV_CFG1_REG, test_flexe_env_cfg1_reg, "subsys_inf_adp.bus_a.flexe_env.flexe_env_cfg1", 3, "RW", 8, 0x1 },
	{ TEST_FLEXE_ENV_CFG2_REG, test_flexe_env_cfg2_reg, "subsys_inf_adp.bus_a.flexe_env.flexe_env_cfg2", 7, "RW", 8, 0x1 },
	{ TEST_FLEXE_ENV_CFG3_REG, test_flexe_env_cfg3_reg, "subsys_inf_adp.bus_a.flexe_env.flexe_env_cfg3", 4, "RW", 8, 0x1 },
	{ TEST_M_CFG_REG, test_m_cfg_reg, "subsys_inf_adp.bus_a.flexe_env.m_cfg", 1, "RW", 8, 0x1 },
	{ TEST_BASE_M_CFG_REG, test_base_m_cfg_reg, "subsys_inf_adp.bus_a.flexe_env.base_m_cfg", 1, "RW", 8, 0x1 },
	{ TEST_ADJ_IN_ALM_REG, test_adj_in_alm_reg, "subsys_inf_adp.bus_a.flexe_env.adj_in_alm", 1, "R", 1,0 },
	{ TEST_INTEGRAL_ALM_REG, test_integral_alm_reg, "subsys_inf_adp.bus_a.flexe_env.integral_alm", 4, "R", 1,0 },
	{ TEST_EXT_GBFIFO_LVL_REG, test_ext_gbfifo_lvl_reg, "subsys_ohif.ohoam_ef.ohif_asic.ext_gbfifo_lvl", 9, "RW", 1,0 },
	{ TEST_B66_ENCODE_DECODE_CNT_REG, test_b66_encode_decode_cnt_reg, "subsys_ohif.ohoam_ef.ohif_asic.b66_encode_decode_cnt", 3, "R", 1,0 },
	{ TEST_PKT_CNT_REG, test_pkt_cnt_reg, "subsys_ohif.ohoam_ef.ohif_asic.pkt_cnt", 2, "R", 1,0 },
	{ TEST_INS_CRC_ERR_CNT_REG, test_ins_crc_err_cnt_reg, "subsys_ohif.ohoam_ef.ohif_asic.ins_crc_err_cnt", 2, "R", 1,0 },
	{ TEST_EXT_PKT_CNT_REG, test_ext_pkt_cnt_reg, "subsys_ohif.ohoam_ef.ohif_asic.ext_pkt_cnt", 2, "R", 1,0 },
	{ TEST_OHIF_ASIC_ALM_REG, test_ohif_asic_alm_reg, "subsys_ohif.ohoam_ef.ohif_asic.ohif_asic_alm", 11, "R", 1,0 },
	{ TEST_FLEXE_MODE_REG, test_flexe_mode_reg, "subsys_flexe.mux.flexe_mux.flexe_mode", 2, "RW", 1,0 },
	{ TEST_FLEXE_GROUP_CFG_REG, test_flexe_group_cfg_reg, "subsys_flexe.mux.flexe_mux.flexe_group_cfg", 1, "RW", 1,0 },
	{ TEST_FLEXE_SCH_CFG_REG, test_flexe_sch_cfg_reg, "subsys_flexe.mux.flexe_mux.flexe_sch_cfg", 1, "RW", 1,0 },
	{ TEST_FLEXE_MSI_CFG_REG, test_flexe_msi_cfg_reg, "subsys_flexe.mux.flexe_mux.flexe_msi_cfg", 4, "RW", 20,0x1 },
	{ TEST_TSNUM_CFG_REG, test_tsnum_cfg_reg, "subsys_flexe.mux.flexe_mux.tsnum_cfg", 4, "RW", 20,0x1 },
	{ TEST_CYCLE_CFG_REG, test_cycle_cfg_reg, "subsys_flexe.mux.flexe_mux.cycle_cfg", 4, "RW", 20,0x1 },
	{ TEST_BLOCK_CFG_REG, test_block_cfg_reg, "subsys_flexe.mux.flexe_mux.block_cfg", 10, "RW", 1,0 },
	{ TEST_CH_BELONG_FLEXE_REG, test_ch_belong_flexe_reg, "subsys_flexe.mux.flexe_mux.ch_belong_flexe", 10, "RW", 1,0 },
	{ TEST_FLEXE_PCS_ENABLE_REG, test_flexe_pcs_enable_reg, "subsys_flexe.mux.flexe_mux.flexe_pcs_enable", 3, "RW", 1,0 },
	{ TEST_TS_ENABLE_REG, test_ts_enable_reg, "subsys_flexe.mux.flexe_mux.ts_enable", 3, "RW", 1,0 },
	{ TEST_PCS_SCH_CFG_REG, test_pcs_sch_cfg_reg, "subsys_flexe.mux.flexe_mux.pcs_sch_cfg", 1, "RW", 1,0 },
	{ TEST_PCS_CHID_CFG_REG, test_pcs_chid_cfg_reg, "subsys_flexe.mux.flexe_mux.pcs_chid_cfg", 4, "RW", 2,0x1 },
	{ TEST_REQCNT_SLVL_CFG_REG, test_reqcnt_slvl_cfg_reg, "subsys_flexe.mux.flexe_mux.reqcnt_slvl_cfg", 2, "RW", 1,0 },
	{ TEST_C_CFG_REG, test_c_cfg_reg, "subsys_flexe.mux.flexe_mux.c_cfg", 1, "RW", 1,0 },
	{ TEST_FLEXE_MSI_CFG_B_REG, test_flexe_msi_cfg_b_reg, "subsys_flexe.mux.flexe_mux.flexe_msi_cfg_b", 4, "RW", 20,0x1 },
	{ TEST_TSNUM_CFG_B_REG, test_tsnum_cfg_b_reg, "subsys_flexe.mux.flexe_mux.tsnum_cfg_b", 4, "RW", 20, 0x1 },
	{ TEST_CYCLE_CFG_B_REG, test_cycle_cfg_b_reg, "subsys_flexe.mux.flexe_mux.cycle_cfg_b", 4, "RW", 20, 0x1 },
	{ TEST_BLOCK_CFG_B_REG, test_block_cfg_b_reg, "subsys_flexe.mux.flexe_mux.block_cfg_b", 10, "RW", 1,0 },
	{ TEST_TS_ENABLE_B_REG, test_ts_enable_b_reg, "subsys_flexe.mux.flexe_mux.ts_enable_b", 3, "RW", 1,0 },
	{ TEST_CPHY2_CFG_REG, test_cphy2_cfg_reg, "subsys_flexe.mux.flexe_mux.cphy2_cfg", 8, "RW", 1,0 },
	{ TEST_CNT8_SCH_CFG_REG, test_cnt8_sch_cfg_reg, "subsys_flexe.mux.flexe_mux.cnt8_sch_cfg", 8, "RW", 1,0 },
	{ TEST_M_CFG_MUX_REG, test_m_cfg_mux_reg, "subsys_flexe.mux.flexe_mux.m_cfg_mux", 1, "RW", 1,0 },
	{ TEST_BASE_M_CFG_MUX_REG, test_base_m_cfg_mux_reg, "subsys_flexe.mux.flexe_mux.base_m_cfg_mux", 1, "RW", 1,0 },
	{ TEST_EN_SEL_CFG_REG, test_en_sel_cfg_reg, "subsys_flexe.mux.flexe_mux.en_sel_cfg", 8, "RW", 1,0 },
	{ TEST_INST_SEL_CFG_REG, test_inst_sel_cfg_reg, "subsys_flexe.mux.flexe_mux.inst_sel_cfg", 8, "RW", 1,0 },
	{ TEST_CFG_PLS_REG, test_cfg_pls_reg, "subsys_flexe.mux.flexe_mux.cfg_pls", 1, "W", 1,0 },
	{ TEST_RAM_CONFLICT_ALM_REG, test_ram_conflict_alm_reg, "subsys_flexe.mux.flexe_mux.ram_conflict_alm", 4, "R", 1,0 },
	{ TEST_SYS_SIGNAL_FIFO_ALM_REG, test_sys_signal_fifo_alm_reg, "subsys_flexe.mux.flexe_mux.sys_signal_fifo_alm", 2, "R", 1,0 },
	{ TEST_PTP_RX_PKTS_EN_REG, test_ptp_rx_pkts_en_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.ptp_rx_pkts_en", 1, "RW", 8, 0x10 },
	{ TEST_RX_PORT_COMP_REG, test_rx_port_comp_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.rx_port_comp", 3, "RW", 8, 0x10 },
	{ TEST_RX_FRM_CNT_REG, test_rx_frm_cnt_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.rx_frm_cnt", 1, "R", 8, 0x10 },
	{ TEST_BANK_FRM_ALL_CNT_REG, test_bank_frm_all_cnt_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.bank_frm_all_cnt", 1, "R", 8, 0x10 },
	{ TEST_BANK_FRM_ERR_CNT_REG, test_bank_frm_err_cnt_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.bank_frm_err_cnt", 1, "R", 8, 0x10 },
	{ TEST_BANK_DROP_FRM_CNT_REG, test_bank_drop_frm_cnt_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.bank_drop_frm_cnt", 1, "R", 8, 0x10 },
	{ TEST_RX_PTP_PORT_BUF_REG, test_rx_ptp_port_buf_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.rx_ptp_port_buf", 3, "R", 8, 0x10 },
	{ TEST_PORTRX_CAP_TS_REG, test_portrx_cap_ts_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.portrx_cap_ts", 2, "R", 8, 0x10 },
	{ TEST_PTP_RXOH_ALM_REG, test_ptp_rxoh_alm_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.ptp_rxoh_alm", 5, "R", 8, 0x10 },
	{ TEST_PTP_RXOH_INT_REG, test_ptp_rxoh_int_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.ptp_rxoh_int", 5, "RW", 8, 0x10 },
	{ TEST_PTP_RXOH_INT_MASK_REG, test_ptp_rxoh_int_mask_reg, "subsys_1588.ptp_over_oh.ptp_rx_oh.ptp_rxoh_int_mask", 5, "RW", 8, 0x10 },
	{ TEST_FLEXE_INSTANCE_GRP_CFG_0_REG, test_flexe_instance_grp_cfg_0_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_instance_grp_cfg_0", 4, "RW", 1,0 },
	{ TEST_FLEXE_INSTANCE_GRP_CFG_1_REG, test_flexe_instance_grp_cfg_1_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_instance_grp_cfg_1", 4, "RW", 1,0 },
	{ TEST_FLEXE_DSW_MARGIN_CFG_0_REG, test_flexe_dsw_margin_cfg_0_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_margin_cfg_0", 2, "RW", 1,0 },
	{ TEST_FLEXE_DSW_MARGIN_CFG_1_REG, test_flexe_dsw_margin_cfg_1_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_margin_cfg_1", 2, "RW", 1,0 },
	{ TEST_FLEXE_DSW_MARGIN_CFG_2_REG, test_flexe_dsw_margin_cfg_2_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_margin_cfg_2", 2, "RW", 1,0 },
	{ TEST_FLEXE_DSW_MARGIN_CFG_3_REG, test_flexe_dsw_margin_cfg_3_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_margin_cfg_3", 2, "RW", 1,0 },
	{ TEST_FLEXE_GRP_SSF_CFG_REG, test_flexe_grp_ssf_cfg_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_grp_ssf_cfg", 2, "RW", 1,0 },
	{ TEST_FLEXE_GRP_INI_CTL_REG, test_flexe_grp_ini_ctl_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_grp_ini_ctl", 3, "RW", 1,0 },
	{ TEST_FLEXE_GRP_MODE_REG, test_flexe_grp_mode_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_grp_mode", 3, "RW", 1,0 },
	{ TEST_DESKEW_RATE_M_50G_REG, test_deskew_rate_m_50g_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.deskew_rate_m_50g", 1, "RW", 1,0 },
	{ TEST_DESKEW_RATE_BASE_M_50G_REG, test_deskew_rate_base_m_50g_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.deskew_rate_base_m_50g", 1, "RW", 1,0 },
	{ TEST_DESKEW_RATE_M_100G_REG, test_deskew_rate_m_100g_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.deskew_rate_m_100g", 1, "RW", 1,0 },
	{ TEST_DESKEW_RATE_BASE_M_100G_REG, test_deskew_rate_base_m_100g_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.deskew_rate_base_m_100g", 1, "RW", 1,0 },
	{ TEST_FLEXE_GRP_DSW_EN_REG, test_flexe_grp_dsw_en_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_grp_dsw_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_DSW_MEASURE_0_REG, test_flexe_dsw_measure_0_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_measure_0", 2, "R", 1,0 },
	{ TEST_FLEXE_DSW_MEASURE_1_REG, test_flexe_dsw_measure_1_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_measure_1", 2, "R", 1,0 },
	{ TEST_FLEXE_DSW_MEASURE_2_REG, test_flexe_dsw_measure_2_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_measure_2", 2, "R", 1,0 },
	{ TEST_FLEXE_DSW_MEASURE_3_REG, test_flexe_dsw_measure_3_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_measure_3", 2, "R", 1,0 },
	{ TEST_FLEXE_DSW_ALM_REG, test_flexe_dsw_alm_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_dsw_alm", 4, "R", 1,0 },
	{ TEST_FLEXE_GRP_SSF_ALM_REG, test_flexe_grp_ssf_alm_reg, "subsys_flexe_oh.flexe_oh.multi_deskew.flexe_grp_ssf_alm", 3, "R", 1,0 },
	{ TEST_PROTECT_EN_REG, test_protect_en_reg, "subsys_66bsw.b66switch.b66switch_table.protect_en", 1, "RW", 1,0 },
	{ TEST_CHID_CFG_REG, test_chid_cfg_reg, "subsys_66bsw.b66switch.b66switch_table.chid_cfg", 1, "RW", 1,0 },
	{ TEST_PROTECT_INFO_REG, test_protect_info_reg, "subsys_66bsw.b66switch.b66switch_table.protect_info", 16, "R", 1,0 },
	{ TEST_SOH_INS_GETPKT1_REG, test_soh_ins_getpkt1_reg, "subsys_ohif.ohoam_ef.soh_dci.soh_ins_getpkt1", 7, "RW", 1,0 },
	{ TEST_SOAM_LOOPBACK_REG, test_soam_loopback_reg, "subsys_ohif.ohoam_ef.soh_dci.soam_loopback", 13, "RW", 1,0 },
	{ TEST_SOAM_ALM_COLECTION_REG, test_soam_alm_colection_reg, "subsys_ohif.ohoam_ef.soh_dci.soam_alm_colection", 3, "RW", 1,0 },
	{ TEST_ASIC_OHIF_DASA_REG, test_asic_ohif_dasa_reg, "subsys_ohif.ohoam_ef.soh_dci.asic_ohif_dasa", 4, "RW", 1,0 },
	{ TEST_SOAM_EXT_DSCF_LVL_STAT_REG, test_soam_ext_dscf_lvl_stat_reg, "subsys_ohif.ohoam_ef.soh_dci.soam_ext_dscf_lvl_stat", 3, "R", 1,0 },
	{ TEST_SOH_INS_PKT_PORT_ID_ERR_REG, test_soh_ins_pkt_port_id_err_reg, "subsys_ohif.ohoam_ef.soh_dci.soh_ins_pkt_port_id_err", 7, "R", 1,0 },
	{ TEST_SOH_EXT_CFFULL_ALARM_REG, test_soh_ext_cffull_alarm_reg, "subsys_ohif.ohoam_ef.soh_dci.soh_ext_cffull_alarm", 3, "R", 1,0 },
	{ TEST_SOAM_EXT_FLEXE_ALAM_REG, test_soam_ext_flexe_alam_reg, "subsys_ohif.ohoam_ef.soh_dci.soam_ext_flexe_alam", 6, "R", 1,0 },
	{ TEST_SOAM_EXT_MAC_ALAM_REG, test_soam_ext_mac_alam_reg, "subsys_ohif.ohoam_ef.soh_dci.soam_ext_mac_alam", 6, "R", 1,0 },
	{ TEST_FLEXE_TX_MODE_CFG_REG, test_flexe_tx_mode_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_tx.flexe_tx_mode_cfg", 7, "RW", 8, 0x40 },
	{ TEST_OH_INS_SRC_CFG_REG, test_oh_ins_src_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_tx.oh_ins_src_cfg", 16, "RW", 8, 0x40 },
	{ TEST_RESERVED_INS_SRC_CFG_REG, test_reserved_ins_src_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_tx.reserved_ins_src_cfg", 2, "RW", 8, 0x40 },
	{ TEST_OH_INS_CFG0_REG, test_oh_ins_cfg0_reg, "subsys_flexe_oh.flexe_oh.oh_tx.oh_ins_cfg0", 6, "RW", 8, 0x40 },
	{ TEST_OH_INS_CFG1_REG, test_oh_ins_cfg1_reg, "subsys_flexe_oh.flexe_oh.oh_tx.oh_ins_cfg1", 4, "RW", 8, 0x40 },
	{ TEST_OH_INS_CFG2_REG, test_oh_ins_cfg2_reg, "subsys_flexe_oh.flexe_oh.oh_tx.oh_ins_cfg2", 6, "RW", 8, 0x40 },
	{ TEST_OH_SH_CFG_REG, test_oh_sh_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_tx.oh_sh_cfg", 1, "RW", 8, 0x40 },
	{ TEST_RESERVED_INS_CFG_REG, test_reserved_ins_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_tx.reserved_ins_cfg", 4, "RW", 8, 0x40 },
	{ TEST_B66CODE_ERR_REG, test_b66code_err_reg, "subsys_flexe_oh.flexe_oh.oh_tx.b66code_err", 1, "R", 8, 0x40 },
	{ TEST_FLEXE_OH_LOOPBACK_CFG_REG, test_flexe_oh_loopback_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.flexe_oh_loopback_cfg", 3, "RW", 8,0x40 },
	{ TEST_FLEXE_RX_MODE_CFG_REG, test_flexe_rx_mode_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.flexe_rx_mode_cfg", 4, "RW", 8,0x40 },
	{ TEST_ALM_EN_CFG_REG, test_alm_en_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.alm_en_cfg", 2, "RW", 8,0x40 },
	{ TEST_EXCC_OH_CFG_REG, test_excc_oh_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.excc_oh_cfg", 2, "RW", 8,0x40 },
	{ TEST_EXGID_OH_CFG_REG, test_exgid_oh_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.exgid_oh_cfg", 2, "RW", 8,0x40 },
	{ TEST_FAS_CHK_CFG_REG, test_fas_chk_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.fas_chk_cfg", 5, "RW", 8,0x40 },
	{ TEST_OMF_CHK_CFG_REG, test_omf_chk_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.omf_chk_cfg", 4, "RW", 8,0x40 },
	{ TEST_PAD_CHK_CFG_REG, test_pad_chk_cfg_reg, "subsys_flexe_oh.flexe_oh.oh_rx.pad_chk_cfg", 4, "RW", 8,0x40 },
	{ TEST_PAD_ALM_EN_REG, test_pad_alm_en_reg, "subsys_flexe_oh.flexe_oh.oh_rx.pad_alm_en", 3, "RW", 8,0x40 },
	{ TEST_CC_RX_VALUE_REG, test_cc_rx_value_reg, "subsys_flexe_oh.flexe_oh.oh_rx.cc_rx_value", 4, "R", 8,0x40 },
	{ TEST_ID_RX_VALUE_REG, test_id_rx_value_reg, "subsys_flexe_oh.flexe_oh.oh_rx.id_rx_value", 2, "R", 8,0x40 },
	{ TEST_MANAGEMENT_CHANNEL_SECTION_REG, test_management_channel_section_reg, "subsys_flexe_oh.flexe_oh.oh_rx.management_channel_section", 4, "R", 8,0x40 },
	{ TEST_MANAGEMENT_CHANNEL_S2S_REG, test_management_channel_s2s_reg, "subsys_flexe_oh.flexe_oh.oh_rx.management_channel_s2s", 6, "R", 8,0x40 },
	{ TEST_RESERVED_RX_VALUE_REG, test_reserved_rx_value_reg, "subsys_flexe_oh.flexe_oh.oh_rx.reserved_rx_value", 3, "R", 8,0x40 },
	{ TEST_OH_RX_ALM_REG, test_oh_rx_alm_reg, "subsys_flexe_oh.flexe_oh.oh_rx.oh_rx_alm", 15, "R", 8,0x40 },
	{ TEST_CCM_RX_ALM_REG, test_ccm_rx_alm_reg, "subsys_flexe_oh.flexe_oh.oh_rx.ccm_rx_alm", 1, "R", 8,0x40 },
	{ TEST_OH_ALM_INT_REG, test_oh_alm_int_reg, "subsys_flexe_oh.flexe_oh.oh_rx.oh_alm_int", 29, "RW", 8,0x40 },
	{ TEST_OH_ALM_INT_MASK_REG, test_oh_alm_int_mask_reg, "subsys_flexe_oh.flexe_oh.oh_rx.oh_alm_int_mask", 29, "RW", 8,0x40 },
	{ TEST_MAC_ADJ_CFG_REG, test_mac_adj_cfg_reg, "subsys_mac.mac_adapt.mac_adj.mac_adj_cfg", 10, "RW", 80,0x2 },
	{ TEST_MAC_DEL_CNT_CFG_REG, test_mac_del_cnt_cfg_reg, "subsys_mac.mac_adapt.mac_adj.mac_del_cnt_cfg", 2, "RW", 1,0 },
	{ TEST_MAC_ADJ_N_REG, test_mac_adj_n_reg, "subsys_mac.mac_adapt.mac_adj.mac_adj_n", 1, "RW", 1,0 },
	{ TEST_MAC_DEL_CNT_MAX_REG, test_mac_del_cnt_max_reg, "subsys_mac.mac_adapt.mac_adj.mac_del_cnt_max", 1, "R", 1,0 },
	{ TEST_MAC_CNT_ALM_REG, test_mac_cnt_alm_reg, "subsys_mac.mac_adapt.mac_adj.mac_cnt_alm", 3, "R", 1,0 },
	{ TEST_MAC_CORE_ALM_REG, test_mac_core_alm_reg, "subsys_mac.mac_adapt.mac_adj.mac_core_alm", 3, "R", 1,0 },
	{ TEST_FLEXE_MACRX_STAT_ENABLE_REG, test_flexe_macrx_stat_enable_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_stat_enable", 3, "RW", 1,0 },
	{ TEST_FLEXE_MACRX_STATISTIC_CLEAR_CHAN_REG, test_flexe_macrx_statistic_clear_chan_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_statistic_clear_chan", 1, "RW", 1,0 },
	{ TEST_FLEXE_MACRX_DECODE_SEL_REG, test_flexe_macrx_decode_sel_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_decode_sel", 1, "RW", 1,0 },
	{ TEST_FLEXE_MACRX_STATISTIC_CLEAR_REG, test_flexe_macrx_statistic_clear_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_statistic_clear", 1, "W", 1,0 },
	{ TEST_FLEXE_MACRX_STATISTIC_ALL_CLR_REG, test_flexe_macrx_statistic_all_clr_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_statistic_all_clr", 1, "W", 1,0 },
	{ TEST_FLEXE_MACRX_STA_RAM_INIT_DONE_REG, test_flexe_macrx_sta_ram_init_done_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_sta_ram_init_done", 1, "R", 1,0 },
	{ TEST_FLEXE_MACRX_ERROR_REG, test_flexe_macrx_error_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_error", 2, "R", 1,0 },
	{ TEST_FLEXE_MACRX_FAULT_ALM_REG, test_flexe_macrx_fault_alm_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_fault_alm", 9, "R", 1,0 },
	{ TEST_FLEXE_MACRX_STA_RAM_ECC_CORRECT_ALM_REG, test_flexe_macrx_sta_ram_ecc_correct_alm_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_sta_ram_ecc_correct_alm", 24, "R", 1,0 },
	{ TEST_FLEXE_MACRX_STA_RAM_ECC_UNCORRECT_ALM_REG, test_flexe_macrx_sta_ram_ecc_uncorrect_alm_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_sta_ram_ecc_uncorrect_alm", 24, "R", 1,0 },
	{ TEST_FLEXE_MACRX_EOP_ABNOR_ALM_REG, test_flexe_macrx_eop_abnor_alm_reg, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_eop_abnor_alm", 3, "R", 1,0 },
	{ TEST_CPB2SAR_M_1ST_REG, test_cpb2sar_m_1st_reg, "subsys_mac.b66sar.b66sar_rx_311m.cpb2sar_m_1st", 1, "RW", 1,0 },
	{ TEST_CPB2SAR_BASE_M_1ST_REG, test_cpb2sar_base_m_1st_reg, "subsys_mac.b66sar.b66sar_rx_311m.cpb2sar_base_m_1st", 1, "RW", 1,0 },
	{ TEST_CPB2SAR_CFG_311M_REG, test_cpb2sar_cfg_311m_reg, "subsys_mac.b66sar.b66sar_rx_311m.cpb2sar_cfg_311m", 2, "RW", 1,0 },
	{ TEST_CPB2SAR_M_2ND_REG, test_cpb2sar_m_2nd_reg, "subsys_mac.b66sar.b66sar_rx_311m.cpb2sar_m_2nd", 1, "RW", 1,0 },
	{ TEST_CPB2SAR_BASE_M_2ND_REG, test_cpb2sar_base_m_2nd_reg, "subsys_mac.b66sar.b66sar_rx_311m.cpb2sar_base_m_2nd", 1, "RW", 1,0 },
	{ TEST_FLEXE_OAM_JOIT_BIP_CFG_REG, test_flexe_oam_joit_bip_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_joit_bip_cfg", 10, "RW", 1,0 },
	{ TEST_FLEXE_BAS_IDTY_CFG_REG, test_flexe_bas_idty_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_idty_cfg", 1, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_CFG_REG, test_flexe_bas_period_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_period_cfg", 5, "RW", 1,0 },
	{ TEST_FLEXE_SEQ_TYPE_CFG_REG, test_flexe_seq_type_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_seq_type_cfg", 3, "RW", 1,0 },
	{ TEST_FLEXE_SEQ_NUM_CFG_REG, test_flexe_seq_num_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_seq_num_cfg", 10, "RW", 1,0 },
	{ TEST_FLEXE_CRC_REV_CFG_REG, test_flexe_crc_rev_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_crc_rev_cfg", 2, "RW", 1,0 },
	{ TEST_FLEXE_TX_IDLE_RPL_EN_REG, test_flexe_tx_idle_rpl_en_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_OAM_TX_BYPASS_REG, test_flexe_oam_tx_bypass_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_tx_bypass", 1, "RW", 1,0 },
	{ TEST_FLEXE_BIP_ERR_MASK_REG, test_flexe_bip_err_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bip_err_mask", 1, "RW", 1,0 },
	{ TEST_FLEXE_MANUAL_INSERT_CSF_LPI_REG, test_flexe_manual_insert_csf_lpi_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_manual_insert_csf_lpi", 3, "RW", 1,0 },
	{ TEST_FLEXE_MANUAL_INSERT_CSF_LF_REG, test_flexe_manual_insert_csf_lf_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_manual_insert_csf_lf", 3, "RW", 1,0 },
	{ TEST_FLEXE_MANUAL_INSERT_CSF_RF_REG, test_flexe_manual_insert_csf_rf_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_manual_insert_csf_rf", 3, "RW", 1,0 },
	{ TEST_FLEXE_BIP_ERR_LEVEL_REG, test_flexe_bip_err_level_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bip_err_level", 3, "RW", 1,0 },
	{ TEST_FLEXE_OAM_TX_BYPASS_CLIENT_REG, test_flexe_oam_tx_bypass_client_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_tx_bypass_client", 3, "RW", 1,0 },
	{ TEST_FLEXE_MANUAL_INSERT_RDI_REG, test_flexe_manual_insert_rdi_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_manual_insert_rdi", 3, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_CFG01_REG, test_flexe_bas_period_cfg01_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_period_cfg01", 2, "RW", 1,0 },
	{ TEST_FLEXE_BAS_PERIOD_CFG23_REG, test_flexe_bas_period_cfg23_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_period_cfg23", 2, "RW", 1,0 },
	{ TEST_FLEXE_BAS_EN_CFG_ASIC_REG, test_flexe_bas_en_cfg_asic_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_en_cfg_asic", 3, "RW", 1,0 },
	{ TEST_FLEXE_OAM_PRI_ENCODE_REG, test_flexe_oam_pri_encode_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_pri_encode", 2, "RW", 1,0 },
	{ TEST_FLEXE_TX_OHIF_FIFO_SEL_REG, test_flexe_tx_ohif_fifo_sel_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_ohif_fifo_sel", 4, "RW", 1,0 },
	{ TEST_FLEXE_OAM_CNT_CFG_REG, test_flexe_oam_cnt_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_cnt_cfg", 2, "RW", 1,0 },
	{ TEST_FLEXE_TX_LPI_IDLE_RPL_EN_REG, test_flexe_tx_lpi_idle_rpl_en_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_lpi_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_TX_INSERT_66BCODE_EN_REG, test_flexe_tx_insert_66bcode_en_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_insert_66bcode_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_NEW_PERIOD_CFG_REG, test_flexe_new_period_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_new_period_cfg", 2, "RW", 1,0 },
	{ TEST_FLEXE_TX_BAS_FIFO_NUM_REG, test_flexe_tx_bas_fifo_num_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_bas_fifo_num", 1, "RW", 1,0 },
	{ TEST_FLEXE_TX_LPI_SETCLR_CFG_REG, test_flexe_tx_lpi_setclr_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_lpi_setclr_cfg", 2, "RW", 1,0 },
	{ TEST_FLEXE_INSERT_66BCODE_CFG_REG, test_flexe_insert_66bcode_cfg_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_insert_66bcode_cfg", 3, "RW", 1,0 },
	{ TEST_FLEXE_OAM_JOIT_BIP_CFG2_REG, test_flexe_oam_joit_bip_cfg2_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oam_joit_bip_cfg2", 2, "RW", 1,0 },
	{ TEST_FLEXE_TX_LPI_BAS_INS_EN_REG, test_flexe_tx_lpi_bas_ins_en_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_lpi_bas_ins_en", 3, "RW", 1,0 },
	{ TEST_FLEXE_BAS_CRC_ERR_EN_REG, test_flexe_bas_crc_err_en_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_crc_err_en", 4, "RW", 1,0 },
	{ TEST_FLEXE_BIP_ERR_PULSE_REG, test_flexe_bip_err_pulse_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bip_err_pulse", 3, "W", 1,0 },
	{ TEST_FLEXE_DATA_ERR_PULSE_REG, test_flexe_data_err_pulse_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_data_err_pulse", 3, "W", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_0T3_REG, test_flexe_bas_insert_cnt_0t3_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_0t3", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_4T7_REG, test_flexe_bas_insert_cnt_4t7_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_4t7", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_8T11_REG, test_flexe_bas_insert_cnt_8t11_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_8t11", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_12T15_REG, test_flexe_bas_insert_cnt_12t15_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_12t15", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_16T19_REG, test_flexe_bas_insert_cnt_16t19_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_16t19", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_20T23_REG, test_flexe_bas_insert_cnt_20t23_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_20t23", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_24T27_REG, test_flexe_bas_insert_cnt_24t27_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_24t27", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_28T31_REG, test_flexe_bas_insert_cnt_28t31_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_28t31", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_32T35_REG, test_flexe_bas_insert_cnt_32t35_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_32t35", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_36T39_REG, test_flexe_bas_insert_cnt_36t39_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_36t39", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_40T43_REG, test_flexe_bas_insert_cnt_40t43_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_40t43", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_44T47_REG, test_flexe_bas_insert_cnt_44t47_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_44t47", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_48T51_REG, test_flexe_bas_insert_cnt_48t51_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_48t51", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_52T55_REG, test_flexe_bas_insert_cnt_52t55_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_52t55", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_56T59_REG, test_flexe_bas_insert_cnt_56t59_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_56t59", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_60T63_REG, test_flexe_bas_insert_cnt_60t63_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_60t63", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_64T67_REG, test_flexe_bas_insert_cnt_64t67_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_64t67", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_68T71_REG, test_flexe_bas_insert_cnt_68t71_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_68t71", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_72T75_REG, test_flexe_bas_insert_cnt_72t75_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_72t75", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_INSERT_CNT_76T79_REG, test_flexe_bas_insert_cnt_76t79_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_insert_cnt_76t79", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_0T3_REG, test_flexe_oth_insert_cnt_0t3_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_0t3", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_4T7_REG, test_flexe_oth_insert_cnt_4t7_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_4t7", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_8T11_REG, test_flexe_oth_insert_cnt_8t11_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_8t11", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_12T15_REG, test_flexe_oth_insert_cnt_12t15_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_12t15", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_16T19_REG, test_flexe_oth_insert_cnt_16t19_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_16t19", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_20T23_REG, test_flexe_oth_insert_cnt_20t23_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_20t23", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_24T27_REG, test_flexe_oth_insert_cnt_24t27_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_24t27", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_28T31_REG, test_flexe_oth_insert_cnt_28t31_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_28t31", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_32T35_REG, test_flexe_oth_insert_cnt_32t35_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_32t35", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_36T39_REG, test_flexe_oth_insert_cnt_36t39_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_36t39", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_40T43_REG, test_flexe_oth_insert_cnt_40t43_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_40t43", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_44T47_REG, test_flexe_oth_insert_cnt_44t47_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_44t47", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_48T51_REG, test_flexe_oth_insert_cnt_48t51_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_48t51", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_52T55_REG, test_flexe_oth_insert_cnt_52t55_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_52t55", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_56T59_REG, test_flexe_oth_insert_cnt_56t59_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_56t59", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_60T63_REG, test_flexe_oth_insert_cnt_60t63_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_60t63", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_64T67_REG, test_flexe_oth_insert_cnt_64t67_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_64t67", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_68T71_REG, test_flexe_oth_insert_cnt_68t71_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_68t71", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_72T75_REG, test_flexe_oth_insert_cnt_72t75_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_72t75", 4, "R", 1,0 },
	{ TEST_FLEXE_OTH_INSERT_CNT_76T79_REG, test_flexe_oth_insert_cnt_76t79_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_oth_insert_cnt_76t79", 4, "R", 1,0 },
	{ TEST_FLEXE_BAS_BRK_CNT_REG, test_flexe_bas_brk_cnt_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_brk_cnt", 1, "R", 1,0 },
	{ TEST_FLEXE_BAS_CNT_REG, test_flexe_bas_cnt_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_bas_cnt", 1, "R", 1,0 },
	{ TEST_FLEXE_APS_CNT_REG, test_flexe_aps_cnt_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_aps_cnt", 1, "R", 1,0 },
	{ TEST_FLEXE_LOW_CNT_REG, test_flexe_low_cnt_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_low_cnt", 1, "R", 1,0 },
	{ TEST_FLEXE_NEW_CNT_REG, test_flexe_new_cnt_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_new_cnt", 1, "R", 1,0 },
	{ TEST_FLEXE_TIMESTAMP_LOCK_REG, test_flexe_timestamp_lock_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_timestamp_lock", 2, "R", 1,0 },
	{ TEST_FLEXE_CSF_LPI_REG, test_flexe_csf_lpi_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi", 3, "R", 1,0 },
	{ TEST_FLEXE_CSF_LF_REG, test_flexe_csf_lf_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf", 3, "R", 1,0 },
	{ TEST_FLEXE_CSF_RF_REG, test_flexe_csf_rf_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_FULL_REI_REG, test_flexe_fifo_full_rei_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_full_rei", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_FULL_APS_REG, test_flexe_fifo_full_aps_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_full_aps", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_FULL_LOW_REG, test_flexe_fifo_full_low_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_full_low", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_FULL_BAS_REG, test_flexe_fifo_full_bas_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_full_bas", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_FULL_NEW_REG, test_flexe_fifo_full_new_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_full_new", 3, "R", 1,0 },
	{ TEST_FLEXE_FIFO_EMPTY_BAS_REG, test_flexe_fifo_empty_bas_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_fifo_empty_bas", 3, "R", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I0_INT_REG, test_flexe_csf_lpi_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i0_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I0_INT_MASK_REG, test_flexe_csf_lpi_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I1_INT_REG, test_flexe_csf_lpi_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i1_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I1_INT_MASK_REG, test_flexe_csf_lpi_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I2_INT_REG, test_flexe_csf_lpi_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i2_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I2_INT_MASK_REG, test_flexe_csf_lpi_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I3_INT_REG, test_flexe_csf_lpi_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i3_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I3_INT_MASK_REG, test_flexe_csf_lpi_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I4_INT_REG, test_flexe_csf_lpi_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i4_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I4_INT_MASK_REG, test_flexe_csf_lpi_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I5_INT_REG, test_flexe_csf_lpi_i5_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i5_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I5_INT_MASK_REG, test_flexe_csf_lpi_i5_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I6_INT_REG, test_flexe_csf_lpi_i6_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i6_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I6_INT_MASK_REG, test_flexe_csf_lpi_i6_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I7_INT_REG, test_flexe_csf_lpi_i7_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i7_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LPI_I7_INT_MASK_REG, test_flexe_csf_lpi_i7_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lpi_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I0_INT_REG, test_flexe_csf_lf_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i0_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I0_INT_MASK_REG, test_flexe_csf_lf_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I1_INT_REG, test_flexe_csf_lf_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i1_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I1_INT_MASK_REG, test_flexe_csf_lf_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I2_INT_REG, test_flexe_csf_lf_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i2_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I2_INT_MASK_REG, test_flexe_csf_lf_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I3_INT_REG, test_flexe_csf_lf_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i3_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I3_INT_MASK_REG, test_flexe_csf_lf_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I4_INT_REG, test_flexe_csf_lf_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i4_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I4_INT_MASK_REG, test_flexe_csf_lf_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I5_INT_REG, test_flexe_csf_lf_i5_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i5_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I5_INT_MASK_REG, test_flexe_csf_lf_i5_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I6_INT_REG, test_flexe_csf_lf_i6_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i6_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I6_INT_MASK_REG, test_flexe_csf_lf_i6_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I7_INT_REG, test_flexe_csf_lf_i7_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i7_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_LF_I7_INT_MASK_REG, test_flexe_csf_lf_i7_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_lf_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I0_INT_REG, test_flexe_csf_rf_i0_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i0_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I0_INT_MASK_REG, test_flexe_csf_rf_i0_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I1_INT_REG, test_flexe_csf_rf_i1_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i1_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I1_INT_MASK_REG, test_flexe_csf_rf_i1_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I2_INT_REG, test_flexe_csf_rf_i2_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i2_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I2_INT_MASK_REG, test_flexe_csf_rf_i2_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I3_INT_REG, test_flexe_csf_rf_i3_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i3_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I3_INT_MASK_REG, test_flexe_csf_rf_i3_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I4_INT_REG, test_flexe_csf_rf_i4_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i4_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I4_INT_MASK_REG, test_flexe_csf_rf_i4_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I5_INT_REG, test_flexe_csf_rf_i5_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i5_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I5_INT_MASK_REG, test_flexe_csf_rf_i5_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I6_INT_REG, test_flexe_csf_rf_i6_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i6_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I6_INT_MASK_REG, test_flexe_csf_rf_i6_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I7_INT_REG, test_flexe_csf_rf_i7_int_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i7_int", 10, "RW", 1,0 },
	{ TEST_FLEXE_CSF_RF_I7_INT_MASK_REG, test_flexe_csf_rf_i7_int_mask_reg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_csf_rf_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_CCU_RX_PTP_EN_REG, test_ccu_rx_ptp_en_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ptp_en", 8, "RW", 1,0 },
	{ TEST_CCU_RX_FILT_FW_REG, test_ccu_rx_filt_fw_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_filt_fw", 5, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG0_REG, test_ccu_rx_eth_vlan_tag0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag0", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L2_ETH_TYPE_REG, test_ccu_rx_l2_eth_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l2_eth_type", 4, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE0_REG, test_ccu_rx_l3_ip_type0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type0", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_MUL_NORM_REG, test_ccu_rx_eth_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_mul_norm", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_MUL_PEER_REG, test_ccu_rx_eth_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_mul_peer", 2, "RW", 1,0 },
	{ TEST_CCU_RX_IPV4_MUL_NORM_REG, test_ccu_rx_ipv4_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv4_mul_norm", 1, "RW", 1,0 },
	{ TEST_CCU_RX_IPV4_MUL_PEER_REG, test_ccu_rx_ipv4_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv4_mul_peer", 1, "RW", 1,0 },
	{ TEST_CCU_RX_IPV6_MUL_NORM_REG, test_ccu_rx_ipv6_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv6_mul_norm", 4, "RW", 1,0 },
	{ TEST_CCU_RX_IPV6_MUL_PEER_REG, test_ccu_rx_ipv6_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv6_mul_peer", 4, "RW", 1,0 },
	{ TEST_CCU_RX_L2_SSM_TYPE_REG, test_ccu_rx_l2_ssm_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l2_ssm_type", 2, "RW", 1,0 },
	{ TEST_CCU_RX_SSM_DA_REG, test_ccu_rx_ssm_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ssm_da", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE1_REG, test_ccu_l2_eth_type1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type1", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE2_REG, test_ccu_l2_eth_type2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type2", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE3_REG, test_ccu_l2_eth_type3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type3", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_UNI_DA_REG, test_ccu_rx_eth_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_uni_da", 2, "RW", 1,0 },
	{ TEST_CCU_RX_IPV4_UNI_DA_REG, test_ccu_rx_ipv4_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv4_uni_da", 1, "RW", 1,0 },
	{ TEST_CCU_RX_IPV6_UNI_DA_REG, test_ccu_rx_ipv6_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_ipv6_uni_da", 4, "RW", 1,0 },
	{ TEST_CCU_RX_UDP_PORT_NORM_REG, test_ccu_rx_udp_port_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_udp_port_norm", 2, "RW", 1,0 },
	{ TEST_CCU_RX_UDP_PORT_PTP_REG, test_ccu_rx_udp_port_ptp_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_udp_port_ptp", 2, "RW", 1,0 },
	{ TEST_CCU_RX_DA_REG, test_ccu_rx_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_da", 2, "RW", 1,0 },
	{ TEST_CCU_RX_SA_REG, test_ccu_rx_sa_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_sa", 2, "RW", 1,0 },
	{ TEST_CCU_RX_VLAN_TAG_REG, test_ccu_rx_vlan_tag_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_vlan_tag", 1, "RW", 1,0 },
	{ TEST_CCU_RX_LETH_TYPE_REG, test_ccu_rx_leth_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_leth_type", 2, "RW", 1,0 },
	{ TEST_CCU_RX_VLAN_ID0_REG, test_ccu_rx_vlan_id0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_vlan_id0", 2, "RW", 1,0 },
	{ TEST_CCU_RX_VLAN_ID1_REG, test_ccu_rx_vlan_id1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_vlan_id1", 2, "RW", 1,0 },
	{ TEST_CCU_RX_VLAN_ID2_REG, test_ccu_rx_vlan_id2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_vlan_id2", 2, "RW", 1,0 },
	{ TEST_CCU_RX_VLAN_ID3_REG, test_ccu_rx_vlan_id3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_vlan_id3", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE4_REG, test_ccu_l2_eth_type4_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type4", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE5_REG, test_ccu_l2_eth_type5_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type5", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE6_REG, test_ccu_l2_eth_type6_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type6", 2, "RW", 1,0 },
	{ TEST_CCU_TX_DA_REG, test_ccu_tx_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_da", 2, "RW", 1,0 },
	{ TEST_CCU_TX_SA_REG, test_ccu_tx_sa_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_sa", 2, "RW", 1,0 },
	{ TEST_CCU_TX_TYPE_REG, test_ccu_tx_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_type", 2, "RW", 1,0 },
	{ TEST_CCU_TX_CFG_REG, test_ccu_tx_cfg_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_cfg", 3, "RW", 1,0 },
	{ TEST_CCU_TX_VLAN_ID0_REG, test_ccu_tx_vlan_id0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_vlan_id0", 2, "RW", 1,0 },
	{ TEST_CCU_TX_VLAN_ID1_REG, test_ccu_tx_vlan_id1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_vlan_id1", 2, "RW", 1,0 },
	{ TEST_CCU_TX_VLAN_ID2_REG, test_ccu_tx_vlan_id2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_vlan_id2", 2, "RW", 1,0 },
	{ TEST_CCU_TX_VLAN_ID3_REG, test_ccu_tx_vlan_id3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_vlan_id3", 2, "RW", 1,0 },
	{ TEST_CCU_TX_EN_REG, test_ccu_tx_en_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_en", 7, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG0_REG, test_ccu_tx_eth_vlan_tag0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag0", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L2_ETH_TYPE_REG, test_ccu_tx_l2_eth_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l2_eth_type", 4, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE0_REG, test_ccu_tx_l3_ip_type0_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type0", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_MUL_NORM_REG, test_ccu_tx_eth_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_mul_norm", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_MUL_PEER_REG, test_ccu_tx_eth_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_mul_peer", 2, "RW", 1,0 },
	{ TEST_CCU_TX_IPV4_MUL_NORM_REG, test_ccu_tx_ipv4_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv4_mul_norm", 1, "RW", 1,0 },
	{ TEST_CCU_TX_IPV4_MUL_PEER_REG, test_ccu_tx_ipv4_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv4_mul_peer", 1, "RW", 1,0 },
	{ TEST_CCU_TX_IPV6_MUL_NORM_REG, test_ccu_tx_ipv6_mul_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv6_mul_norm", 4, "RW", 1,0 },
	{ TEST_CCU_TX_IPV6_MUL_PEER_REG, test_ccu_tx_ipv6_mul_peer_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv6_mul_peer", 4, "RW", 1,0 },
	{ TEST_CCU_TX_L2_SSM_TYPE_REG, test_ccu_tx_l2_ssm_type_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l2_ssm_type", 2, "RW", 1,0 },
	{ TEST_CCU_TX_SSM_DA_REG, test_ccu_tx_ssm_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ssm_da", 2, "RW", 1,0 },
	{ TEST_CCU_TX_FILT_FW_REG, test_ccu_tx_filt_fw_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_filt_fw", 5, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_UNI_DA_REG, test_ccu_tx_eth_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_uni_da", 2, "RW", 1,0 },
	{ TEST_CCU_TX_IPV4_UNI_DA_REG, test_ccu_tx_ipv4_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv4_uni_da", 1, "RW", 1,0 },
	{ TEST_CCU_TX_IPV6_UNI_DA_REG, test_ccu_tx_ipv6_uni_da_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_ipv6_uni_da", 4, "RW", 1,0 },
	{ TEST_CCU_TX_UDP_PORT_NORM_REG, test_ccu_tx_udp_port_norm_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_udp_port_norm", 2, "RW", 1,0 },
	{ TEST_CCU_TX_UDP_PORT_PTP_REG, test_ccu_tx_udp_port_ptp_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_udp_port_ptp", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG1_REG, test_ccu_rx_eth_vlan_tag1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag1", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG2_REG, test_ccu_rx_eth_vlan_tag2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag2", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG3_REG, test_ccu_rx_eth_vlan_tag3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag3", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG4_REG, test_ccu_rx_eth_vlan_tag4_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag4", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG5_REG, test_ccu_rx_eth_vlan_tag5_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag5", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG6_REG, test_ccu_rx_eth_vlan_tag6_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag6", 2, "RW", 1,0 },
	{ TEST_CCU_RX_ETH_VLAN_TAG7_REG, test_ccu_rx_eth_vlan_tag7_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_eth_vlan_tag7", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG1_REG, test_ccu_tx_eth_vlan_tag1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag1", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG2_REG, test_ccu_tx_eth_vlan_tag2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag2", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG3_REG, test_ccu_tx_eth_vlan_tag3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag3", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG4_REG, test_ccu_tx_eth_vlan_tag4_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag4", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG5_REG, test_ccu_tx_eth_vlan_tag5_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag5", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG6_REG, test_ccu_tx_eth_vlan_tag6_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag6", 2, "RW", 1,0 },
	{ TEST_CCU_TX_ETH_VLAN_TAG7_REG, test_ccu_tx_eth_vlan_tag7_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_eth_vlan_tag7", 2, "RW", 1,0 },
	{ TEST_CCU_L2_ETH_TYPE7_REG, test_ccu_l2_eth_type7_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_l2_eth_type7", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE1_REG, test_ccu_rx_l3_ip_type1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type1", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE2_REG, test_ccu_rx_l3_ip_type2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type2", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE3_REG, test_ccu_rx_l3_ip_type3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type3", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE4_REG, test_ccu_rx_l3_ip_type4_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type4", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE5_REG, test_ccu_rx_l3_ip_type5_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type5", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE6_REG, test_ccu_rx_l3_ip_type6_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type6", 2, "RW", 1,0 },
	{ TEST_CCU_RX_L3_IP_TYPE7_REG, test_ccu_rx_l3_ip_type7_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_rx_l3_ip_type7", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE1_REG, test_ccu_tx_l3_ip_type1_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type1", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE2_REG, test_ccu_tx_l3_ip_type2_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type2", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE3_REG, test_ccu_tx_l3_ip_type3_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type3", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE4_REG, test_ccu_tx_l3_ip_type4_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type4", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE5_REG, test_ccu_tx_l3_ip_type5_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type5", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE6_REG, test_ccu_tx_l3_ip_type6_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type6", 2, "RW", 1,0 },
	{ TEST_CCU_TX_L3_IP_TYPE7_REG, test_ccu_tx_l3_ip_type7_reg, "subsys_1588.centre_1588_pro.ccu_cfg.ccu_tx_l3_ip_type7", 2, "RW", 1,0 },
	{ TEST_PORT_FIFO_CFG1_REG, test_port_fifo_cfg1_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_fifo_cfg1", 3, "RW", 8, 0x1 },
	{ TEST_MAX_MIN_CLR_REG, test_max_min_clr_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.max_min_clr", 1, "RW", 1,0 },
	{ TEST_PORT_PROTECT_EN_REG, test_port_protect_en_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_protect_en", 2, "RW", 1,0 },
	{ TEST_PORT_RESTART_REG, test_port_restart_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_restart", 1, "RW", 1,0 },
	{ TEST_TX_MAP_TABLE_REG, test_tx_map_table_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.tx_map_table", 1, "RW", 1,0 },
	{ TEST_MAP_EN_REG, test_map_en_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.map_en", 1, "RW", 1,0 },
	{ TEST_EXTERNAL_CFG_REG, test_external_cfg_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.external_cfg", 2, "RW", 1,0 },
	{ TEST_TX_MODE_CFG_REG, test_tx_mode_cfg_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.tx_mode_cfg", 6, "RW", 1,0 },
	{ TEST_PORT_FIFO_CFG2_REG, test_port_fifo_cfg2_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_fifo_cfg2", 2, "RW", 8, 0x1 },
	{ TEST_PORT_FIFO_STATE_REG, test_port_fifo_state_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_fifo_state", 2, "R", 8, 0x1 },
	{ TEST_TX_GEARBOX_ALM_REG, test_tx_gearbox_alm_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.tx_gearbox_alm", 6, "R", 1,0 },
	{ TEST_PORT_FIFO_ALM_REG, test_port_fifo_alm_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_fifo_alm", 6, "R", 1,0 },
	{ TEST_PORT_BUFFER0_INT_REG, test_port_buffer0_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer0_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER0_INT_MASK_REG, test_port_buffer0_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer0_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER1_INT_REG, test_port_buffer1_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer1_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER1_INT_MASK_REG, test_port_buffer1_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer1_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER2_INT_REG, test_port_buffer2_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer2_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER2_INT_MASK_REG, test_port_buffer2_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer2_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER3_INT_REG, test_port_buffer3_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer3_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER3_INT_MASK_REG, test_port_buffer3_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer3_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER4_INT_REG, test_port_buffer4_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer4_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER4_INT_MASK_REG, test_port_buffer4_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer4_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER5_INT_REG, test_port_buffer5_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer5_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER5_INT_MASK_REG, test_port_buffer5_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer5_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER6_INT_REG, test_port_buffer6_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer6_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER6_INT_MASK_REG, test_port_buffer6_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer6_int_mask", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER7_INT_REG, test_port_buffer7_int_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer7_int", 4, "RW", 1,0 },
	{ TEST_PORT_BUFFER7_INT_MASK_REG, test_port_buffer7_int_mask_reg, "subsys_inf_adp.bus_a.inf_ch_adp_tx.port_buffer7_int_mask", 4, "RW", 1,0 },
	{ TEST_ADJ_CFG_REG, test_adj_cfg_reg, "subsys_flexe.adapt.adj.adj_cfg", 10, "RW", 80,0x2 },
	{ TEST_DEL_CNT_CFG_REG, test_del_cnt_cfg_reg, "subsys_flexe.adapt.adj.del_cnt_cfg", 2, "RW", 1,0 },
	{ TEST_ADJ_N_REG, test_adj_n_reg, "subsys_flexe.adapt.adj.adj_n", 1, "RW", 1,0 },
	{ TEST_DEL_CNT_MAX_REG, test_del_cnt_max_reg, "subsys_flexe.adapt.adj.del_cnt_max", 1, "R", 1,0 },
	{ TEST_CNT_ALM_REG, test_cnt_alm_reg, "subsys_flexe.adapt.adj.cnt_alm", 3, "R", 1,0 },
	{ TEST_CORE_ALM_REG, test_core_alm_reg, "subsys_flexe.adapt.adj.core_alm", 3, "R", 1,0 },
	{ TEST_READY_TS_REG, test_ready_ts_reg, "subsys_flexe.demux.flexe_demux.ready_ts", 3, "RW", 1,0 },
	{ TEST_FLEXEGROUP_INFO_REG, test_flexegroup_info_reg, "subsys_flexe.demux.flexe_demux.flexegroup_info", 1, "RW", 1,0 },
	{ TEST_GROUP_CFG_REG, test_group_cfg_reg, "subsys_flexe.demux.flexe_demux.group_cfg", 2, "RW", 1,0 },
	{ TEST_REORDER_ASIC_REG, test_reorder_asic_reg, "subsys_flexe.demux.flexe_demux.reorder_asic", 2, "RW", 1,0 },
	{ TEST_AUTOSET_EN_REG, test_autoset_en_reg, "subsys_flexe.demux.flexe_demux.autoset_en", 1, "RW", 1,0 },
	{ TEST_MODE_INFO_REG, test_mode_info_reg, "subsys_flexe.demux.flexe_demux.mode_info", 1, "RW", 1,0 },
	{ TEST_REORDER_INFO_REG, test_reorder_info_reg, "subsys_flexe.demux.flexe_demux.reorder_info", 1, "RW", 1,0 },
	{ TEST_CALENDAR_CFG_REG, test_calendar_cfg_reg, "subsys_flexe.demux.flexe_demux.calendar_cfg", 20, "RW", 1,0 },
	{ TEST_CHANNEL_OWN_TSGROUP_REG, test_channel_own_tsgroup_reg, "subsys_flexe.demux.flexe_demux.channel_own_tsgroup", 20, "RW", 1,0 },
	{ TEST_INTERLEAVE_RST_REG, test_interleave_rst_reg, "subsys_flexe.demux.flexe_demux.interleave_rst", 1, "RW", 1,0 },
	{ TEST_MAXLEVEL_CLR_REG, test_maxlevel_clr_reg, "subsys_flexe.demux.flexe_demux.maxlevel_clr", 1, "RW", 1,0 },
	{ TEST_READY_TS_B_REG, test_ready_ts_b_reg, "subsys_flexe.demux.flexe_demux.ready_ts_b", 3, "RW", 1,0 },
	{ TEST_CALENDAR_CFG_B_REG, test_calendar_cfg_b_reg, "subsys_flexe.demux.flexe_demux.calendar_cfg_b", 20, "RW", 1,0 },
	{ TEST_CHANNEL_OWN_TSGROUP_B_REG, test_channel_own_tsgroup_b_reg, "subsys_flexe.demux.flexe_demux.channel_own_tsgroup_b", 20, "RW", 1,0 },
	{ TEST_ENABLE_AB_REG, test_enable_ab_reg, "subsys_flexe.demux.flexe_demux.enable_ab", 1, "RW", 1,0 },
	{ TEST_VERIFY_CFG_REG, test_verify_cfg_reg, "subsys_flexe.demux.flexe_demux.verify_cfg", 1, "RW", 1,0 },
	{ TEST_THRESHOLD_REG, test_threshold_reg, "subsys_flexe.demux.flexe_demux.threshold", 1, "RW", 1,0 },
	{ TEST_THRESHOLD_FULL_REG, test_threshold_full_reg, "subsys_flexe.demux.flexe_demux.threshold_full", 2, "RW", 1,0 },
	{ TEST_THRESHOLD_EMPTY_REG, test_threshold_empty_reg, "subsys_flexe.demux.flexe_demux.threshold_empty", 2, "RW", 1,0 },
	{ TEST_MAXLEVEL_INTERLEAVE_REG, test_maxlevel_interleave_reg, "subsys_flexe.demux.flexe_demux.maxlevel_interleave", 2, "R", 1,0 },
	{ TEST_FLEXEDEMUX_RAM_FULL_REG, test_flexedemux_ram_full_reg, "subsys_flexe.demux.flexe_demux.flexedemux_ram_full", 4, "R", 1,0 },
	{ TEST_FLEXEDEMUX_FIFO_FULL_REG, test_flexedemux_fifo_full_reg, "subsys_flexe.demux.flexe_demux.flexedemux_fifo_full", 1, "R", 1,0 },
	{ TEST_FLEXEDEMUX_FIFO_EMPTY_REG, test_flexedemux_fifo_empty_reg, "subsys_flexe.demux.flexe_demux.flexedemux_fifo_empty", 1, "R", 1,0 },
	{ TEST_FP_CHECK_ALM_REG, test_fp_check_alm_reg, "subsys_flexe.demux.flexe_demux.fp_check_alm", 1, "R", 1,0 },
	{ TEST_HEAD_CHECK_PHY_ALM_REG, test_head_check_phy_alm_reg, "subsys_flexe.demux.flexe_demux.head_check_phy_alm", 1, "R", 1,0 },
	{ TEST_HEAD_CHECK_CHANNEL_ALM_REG, test_head_check_channel_alm_reg, "subsys_flexe.demux.flexe_demux.head_check_channel_alm", 3, "R", 1,0 },
	{ TEST_OAM_RX_CFG_REG, test_oam_rx_cfg_reg, "subsys_mac.oam.oam_rx.oam_rx_cfg", 13, "RW", 1,0 },
	{ TEST_RX_IDLE_RPL_EN_REG, test_rx_idle_rpl_en_reg, "subsys_mac.oam.oam_rx.rx_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_BYPASS_CHNL_REG, test_bypass_chnl_reg, "subsys_mac.oam.oam_rx.bypass_chnl", 3, "RW", 1,0 },
	{ TEST_PERIOD_CFG_REG, test_period_cfg_reg, "subsys_mac.oam.oam_rx.period_cfg", 5, "RW", 1,0 },
	{ TEST_PERIOD_SEL_REG, test_period_sel_reg, "subsys_mac.oam.oam_rx.period_sel", 5, "RW", 1,0 },
	{ TEST_OAM_RX_ALM_EN_REG, test_oam_rx_alm_en_reg, "subsys_mac.oam.oam_rx.oam_rx_alm_en", 24, "RW", 1,0 },
	{ TEST_BYPASS_XGMII_REG, test_bypass_xgmii_reg, "subsys_mac.oam.oam_rx.bypass_xgmii", 3, "RW", 1,0 },
	{ TEST_RX_LPI_RPL_EN_REG, test_rx_lpi_rpl_en_reg, "subsys_mac.oam.oam_rx.rx_lpi_rpl_en", 3, "RW", 1,0 },
	{ TEST_BAS_PERIOD_A_REG, test_bas_period_a_reg, "subsys_mac.oam.oam_rx.bas_period_a", 2, "RW", 1,0 },
	{ TEST_BAS_PERIOD_B_REG, test_bas_period_b_reg, "subsys_mac.oam.oam_rx.bas_period_b", 2, "RW", 1,0 },
	{ TEST_BYPASS_OAM_ALM_CH_REG, test_bypass_oam_alm_ch_reg, "subsys_mac.oam.oam_rx.bypass_oam_alm_ch", 3, "RW", 1,0 },
	{ TEST_OAM_RX_CONFIG_REG, test_oam_rx_config_reg, "subsys_mac.oam.oam_rx.oam_rx_config", 7, "RW", 1,0 },
	{ TEST_OAM_TYPE_BIP_CAL_EN_REG, test_oam_type_bip_cal_en_reg, "subsys_mac.oam.oam_rx.oam_type_bip_cal_en", 1, "RW", 1,0 },
	{ TEST_LF_MANUAL_INSERT_REG, test_lf_manual_insert_reg, "subsys_mac.oam.oam_rx.lf_manual_insert", 4, "RW", 1,0 },
	{ TEST_RF_MANUAL_INSERT_REG, test_rf_manual_insert_reg, "subsys_mac.oam.oam_rx.rf_manual_insert", 4, "RW", 1,0 },
	{ TEST_LPI_MANUAL_INSERT_REG, test_lpi_manual_insert_reg, "subsys_mac.oam.oam_rx.lpi_manual_insert", 3, "RW", 1,0 },
	{ TEST_RX_BIPERR_CNT_CLR_REG, test_rx_biperr_cnt_clr_reg, "subsys_mac.oam.oam_rx.rx_biperr_cnt_clr", 3, "W", 1,0 },
	{ TEST_RX_BEIERR_CNT_CLR_REG, test_rx_beierr_cnt_clr_reg, "subsys_mac.oam.oam_rx.rx_beierr_cnt_clr", 3, "W", 1,0 },
	{ TEST_OAM_CLR_RAM_INIT_REG, test_oam_clr_ram_init_reg, "subsys_mac.oam.oam_rx.oam_clr_ram_init", 7, "W", 1,0 },
	{ TEST_OAM_CNT_CLR_DONE_REG, test_oam_cnt_clr_done_reg, "subsys_mac.oam.oam_rx.oam_cnt_clr_done", 4, "R", 1,0 },
	{ TEST_BASE_PERIOD_REG, test_base_period_reg, "subsys_mac.oam.oam_rx.base_period", 5, "R", 1,0 },
	{ TEST_RX_SDBIP_REG, test_rx_sdbip_reg, "subsys_mac.oam.oam_rx.rx_sdbip", 3, "R", 1,0 },
	{ TEST_RX_SFBIP_REG, test_rx_sfbip_reg, "subsys_mac.oam.oam_rx.rx_sfbip", 3, "R", 1,0 },
	{ TEST_OAM_RX_RDI_RAM_ALM_REG, test_oam_rx_rdi_ram_alm_reg, "subsys_mac.oam.oam_rx.oam_rx_rdi_ram_alm", 4, "R", 1,0 },
	{ TEST_RX_SFBEI_REG, test_rx_sfbei_reg, "subsys_mac.oam.oam_rx.rx_sfbei", 3, "R", 1,0 },
	{ TEST_DEMUX_CLIENT_ALM_REG, test_demux_client_alm_reg, "subsys_mac.oam.oam_rx.demux_client_alm", 3, "R", 1,0 },
	{ TEST_CRC_ALM_OUT_REG, test_crc_alm_out_reg, "subsys_mac.oam.oam_rx.crc_alm_out", 3, "R", 1,0 },
	{ TEST_BAS_RDI_REG, test_bas_rdi_reg, "subsys_mac.oam.oam_rx.bas_rdi", 3, "R", 1,0 },
	{ TEST_BAS_CSF_LPI_REG, test_bas_csf_lpi_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi", 3, "R", 1,0 },
	{ TEST_BAS_CS_LF_REG, test_bas_cs_lf_reg, "subsys_mac.oam.oam_rx.bas_cs_lf", 3, "R", 1,0 },
	{ TEST_BAS_CS_RF_REG, test_bas_cs_rf_reg, "subsys_mac.oam.oam_rx.bas_cs_rf", 3, "R", 1,0 },
	{ TEST_BAS_CRC_ERR_REG, test_bas_crc_err_reg, "subsys_mac.oam.oam_rx.bas_crc_err", 3, "R", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_REG, test_bas_no_receive_alm_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm", 3, "R", 1,0 },
	{ TEST_RDI_LF_REG, test_rdi_lf_reg, "subsys_mac.oam.oam_rx.rdi_lf", 3, "R", 1,0 },
	{ TEST_RX_SDBEI_REG, test_rx_sdbei_reg, "subsys_mac.oam.oam_rx.rx_sdbei", 3, "R", 1,0 },
	{ TEST_RF_ALM_REG, test_rf_alm_reg, "subsys_mac.oam.oam_rx.rf_alm", 3, "R", 1,0 },
	{ TEST_LPI_ALM_REG, test_lpi_alm_reg, "subsys_mac.oam.oam_rx.lpi_alm", 3, "R", 1,0 },
	{ TEST_BAS_PERIOD_ALM_REG, test_bas_period_alm_reg, "subsys_mac.oam.oam_rx.bas_period_alm", 3, "R", 1,0 },
	{ TEST_RX_SFBEI_I0_INT_REG, test_rx_sfbei_i0_int_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i0_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I0_INT_MASK_REG, test_rx_sfbei_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I0_INT_REG, test_rx_sfbip_i0_int_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i0_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I0_INT_MASK_REG, test_rx_sfbip_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I1_INT_REG, test_rx_sfbip_i1_int_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i1_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I1_INT_MASK_REG, test_rx_sfbip_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I2_INT_REG, test_rx_sfbip_i2_int_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i2_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I2_INT_MASK_REG, test_rx_sfbip_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I3_INT_REG, test_rx_sfbip_i3_int_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i3_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I3_INT_MASK_REG, test_rx_sfbip_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I4_INT_REG, test_rx_sfbip_i4_int_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i4_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBIP_I4_INT_MASK_REG, test_rx_sfbip_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbip_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I1_INT_REG, test_rx_sfbei_i1_int_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i1_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I1_INT_MASK_REG, test_rx_sfbei_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I2_INT_REG, test_rx_sfbei_i2_int_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i2_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I2_INT_MASK_REG, test_rx_sfbei_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I3_INT_REG, test_rx_sfbei_i3_int_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i3_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I3_INT_MASK_REG, test_rx_sfbei_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I4_INT_REG, test_rx_sfbei_i4_int_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i4_int", 16, "RW", 1,0 },
	{ TEST_RX_SFBEI_I4_INT_MASK_REG, test_rx_sfbei_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sfbei_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I3_INT_REG, test_bas_period_alm_i3_int_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I3_INT_MASK_REG, test_bas_period_alm_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I4_INT_REG, test_bas_period_alm_i4_int_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I4_INT_MASK_REG, test_bas_period_alm_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I0_INT_REG, test_rx_sdbip_i0_int_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i0_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I0_INT_MASK_REG, test_rx_sdbip_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I1_INT_REG, test_rx_sdbip_i1_int_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i1_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I1_INT_MASK_REG, test_rx_sdbip_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I2_INT_REG, test_rx_sdbip_i2_int_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i2_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I2_INT_MASK_REG, test_rx_sdbip_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I3_INT_REG, test_rx_sdbip_i3_int_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i3_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I3_INT_MASK_REG, test_rx_sdbip_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I4_INT_REG, test_rx_sdbip_i4_int_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i4_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBIP_I4_INT_MASK_REG, test_rx_sdbip_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbip_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I0_INT_REG, test_bas_rdi_i0_int_reg, "subsys_mac.oam.oam_rx.bas_rdi_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I0_INT_MASK_REG, test_bas_rdi_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_rdi_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I1_INT_REG, test_bas_rdi_i1_int_reg, "subsys_mac.oam.oam_rx.bas_rdi_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I1_INT_MASK_REG, test_bas_rdi_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_rdi_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I2_INT_REG, test_bas_rdi_i2_int_reg, "subsys_mac.oam.oam_rx.bas_rdi_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I2_INT_MASK_REG, test_bas_rdi_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_rdi_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I3_INT_REG, test_bas_rdi_i3_int_reg, "subsys_mac.oam.oam_rx.bas_rdi_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I3_INT_MASK_REG, test_bas_rdi_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_rdi_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I4_INT_REG, test_bas_rdi_i4_int_reg, "subsys_mac.oam.oam_rx.bas_rdi_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_RDI_I4_INT_MASK_REG, test_bas_rdi_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_rdi_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I0_INT_REG, test_bas_csf_lpi_i0_int_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I0_INT_MASK_REG, test_bas_csf_lpi_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I1_INT_REG, test_bas_csf_lpi_i1_int_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I1_INT_MASK_REG, test_bas_csf_lpi_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I2_INT_REG, test_bas_csf_lpi_i2_int_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I2_INT_MASK_REG, test_bas_csf_lpi_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I3_INT_REG, test_bas_csf_lpi_i3_int_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I3_INT_MASK_REG, test_bas_csf_lpi_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I4_INT_REG, test_bas_csf_lpi_i4_int_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_CSF_LPI_I4_INT_MASK_REG, test_bas_csf_lpi_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_csf_lpi_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I0_INT_REG, test_bas_cs_lf_i0_int_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I0_INT_MASK_REG, test_bas_cs_lf_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I1_INT_REG, test_bas_cs_lf_i1_int_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I1_INT_MASK_REG, test_bas_cs_lf_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I2_INT_REG, test_bas_cs_lf_i2_int_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I2_INT_MASK_REG, test_bas_cs_lf_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I3_INT_REG, test_bas_cs_lf_i3_int_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I3_INT_MASK_REG, test_bas_cs_lf_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I4_INT_REG, test_bas_cs_lf_i4_int_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_LF_I4_INT_MASK_REG, test_bas_cs_lf_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_lf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I0_INT_REG, test_bas_cs_rf_i0_int_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I0_INT_MASK_REG, test_bas_cs_rf_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I1_INT_REG, test_bas_cs_rf_i1_int_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I1_INT_MASK_REG, test_bas_cs_rf_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I2_INT_REG, test_bas_cs_rf_i2_int_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I2_INT_MASK_REG, test_bas_cs_rf_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I3_INT_REG, test_bas_cs_rf_i3_int_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I3_INT_MASK_REG, test_bas_cs_rf_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I4_INT_REG, test_bas_cs_rf_i4_int_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_CS_RF_I4_INT_MASK_REG, test_bas_cs_rf_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_cs_rf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I0_INT_REG, test_bas_crc_err_i0_int_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I0_INT_MASK_REG, test_bas_crc_err_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I1_INT_REG, test_bas_crc_err_i1_int_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I1_INT_MASK_REG, test_bas_crc_err_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I2_INT_REG, test_bas_crc_err_i2_int_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I2_INT_MASK_REG, test_bas_crc_err_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I3_INT_REG, test_bas_crc_err_i3_int_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I3_INT_MASK_REG, test_bas_crc_err_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I4_INT_REG, test_bas_crc_err_i4_int_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_I4_INT_MASK_REG, test_bas_crc_err_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_crc_err_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I0_INT_REG, test_bas_no_receive_alm_i0_int_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I0_INT_MASK_REG, test_bas_no_receive_alm_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I1_INT_REG, test_bas_no_receive_alm_i1_int_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I1_INT_MASK_REG, test_bas_no_receive_alm_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I2_INT_REG, test_bas_no_receive_alm_i2_int_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I2_INT_MASK_REG, test_bas_no_receive_alm_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I3_INT_REG, test_bas_no_receive_alm_i3_int_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I3_INT_MASK_REG, test_bas_no_receive_alm_i3_int_mask_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I4_INT_REG, test_bas_no_receive_alm_i4_int_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_BAS_NO_RECEIVE_ALM_I4_INT_MASK_REG, test_bas_no_receive_alm_i4_int_mask_reg, "subsys_mac.oam.oam_rx.bas_no_receive_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I0_INT_REG, test_rdi_lf_i0_int_reg, "subsys_mac.oam.oam_rx.rdi_lf_i0_int", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I0_INT_MASK_REG, test_rdi_lf_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rdi_lf_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I1_INT_REG, test_rdi_lf_i1_int_reg, "subsys_mac.oam.oam_rx.rdi_lf_i1_int", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I1_INT_MASK_REG, test_rdi_lf_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rdi_lf_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I2_INT_REG, test_rdi_lf_i2_int_reg, "subsys_mac.oam.oam_rx.rdi_lf_i2_int", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I2_INT_MASK_REG, test_rdi_lf_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rdi_lf_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I3_INT_REG, test_rdi_lf_i3_int_reg, "subsys_mac.oam.oam_rx.rdi_lf_i3_int", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I3_INT_MASK_REG, test_rdi_lf_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rdi_lf_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I4_INT_REG, test_rdi_lf_i4_int_reg, "subsys_mac.oam.oam_rx.rdi_lf_i4_int", 16, "RW", 1,0 },
	{ TEST_RDI_LF_I4_INT_MASK_REG, test_rdi_lf_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rdi_lf_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I0_INT_REG, test_rx_sdbei_i0_int_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i0_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I0_INT_MASK_REG, test_rx_sdbei_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I1_INT_REG, test_rx_sdbei_i1_int_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i1_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I1_INT_MASK_REG, test_rx_sdbei_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I2_INT_REG, test_rx_sdbei_i2_int_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i2_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I2_INT_MASK_REG, test_rx_sdbei_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I3_INT_REG, test_rx_sdbei_i3_int_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i3_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I3_INT_MASK_REG, test_rx_sdbei_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I4_INT_REG, test_rx_sdbei_i4_int_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i4_int", 16, "RW", 1,0 },
	{ TEST_RX_SDBEI_I4_INT_MASK_REG, test_rx_sdbei_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rx_sdbei_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I0_INT_REG, test_rf_alm_i0_int_reg, "subsys_mac.oam.oam_rx.rf_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I0_INT_MASK_REG, test_rf_alm_i0_int_mask_reg, "subsys_mac.oam.oam_rx.rf_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I1_INT_REG, test_rf_alm_i1_int_reg, "subsys_mac.oam.oam_rx.rf_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I1_INT_MASK_REG, test_rf_alm_i1_int_mask_reg, "subsys_mac.oam.oam_rx.rf_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I2_INT_REG, test_rf_alm_i2_int_reg, "subsys_mac.oam.oam_rx.rf_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I2_INT_MASK_REG, test_rf_alm_i2_int_mask_reg, "subsys_mac.oam.oam_rx.rf_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I3_INT_REG, test_rf_alm_i3_int_reg, "subsys_mac.oam.oam_rx.rf_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I3_INT_MASK_REG, test_rf_alm_i3_int_mask_reg, "subsys_mac.oam.oam_rx.rf_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I4_INT_REG, test_rf_alm_i4_int_reg, "subsys_mac.oam.oam_rx.rf_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_RF_ALM_I4_INT_MASK_REG, test_rf_alm_i4_int_mask_reg, "subsys_mac.oam.oam_rx.rf_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I0_INT_REG, test_lpi_alm_i0_int_reg, "subsys_mac.oam.oam_rx.lpi_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I0_INT_MASK_REG, test_lpi_alm_i0_int_mask_reg, "subsys_mac.oam.oam_rx.lpi_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I1_INT_REG, test_lpi_alm_i1_int_reg, "subsys_mac.oam.oam_rx.lpi_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I1_INT_MASK_REG, test_lpi_alm_i1_int_mask_reg, "subsys_mac.oam.oam_rx.lpi_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I2_INT_REG, test_lpi_alm_i2_int_reg, "subsys_mac.oam.oam_rx.lpi_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I2_INT_MASK_REG, test_lpi_alm_i2_int_mask_reg, "subsys_mac.oam.oam_rx.lpi_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I3_INT_REG, test_lpi_alm_i3_int_reg, "subsys_mac.oam.oam_rx.lpi_alm_i3_int", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I3_INT_MASK_REG, test_lpi_alm_i3_int_mask_reg, "subsys_mac.oam.oam_rx.lpi_alm_i3_int_mask", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I4_INT_REG, test_lpi_alm_i4_int_reg, "subsys_mac.oam.oam_rx.lpi_alm_i4_int", 16, "RW", 1,0 },
	{ TEST_LPI_ALM_I4_INT_MASK_REG, test_lpi_alm_i4_int_mask_reg, "subsys_mac.oam.oam_rx.lpi_alm_i4_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I0_INT_REG, test_bas_period_alm_i0_int_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i0_int", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I0_INT_MASK_REG, test_bas_period_alm_i0_int_mask_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i0_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I1_INT_REG, test_bas_period_alm_i1_int_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i1_int", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I1_INT_MASK_REG, test_bas_period_alm_i1_int_mask_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i1_int_mask", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I2_INT_REG, test_bas_period_alm_i2_int_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i2_int", 16, "RW", 1,0 },
	{ TEST_BAS_PERIOD_ALM_I2_INT_MASK_REG, test_bas_period_alm_i2_int_mask_reg, "subsys_mac.oam.oam_rx.bas_period_alm_i2_int_mask", 16, "RW", 1,0 },
	{ TEST_CPU2PTP_WDATA_REG, test_cpu2ptp_wdata_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_wdata", 1, "WOP", 1,0 },
	{ TEST_CPU2PTP_FINISH_REG, test_cpu2ptp_finish_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_finish", 1, "W", 1,0 },
	{ TEST_PTP2CPU_FINISH_REG, test_ptp2cpu_finish_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_finish", 1, "W", 1,0 },
	{ TEST_CPU2PTP_FRM_CNT_REG, test_cpu2ptp_frm_cnt_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_frm_cnt", 1, "R", 1,0 },
	{ TEST_PTP2CPU_FRM_CNT_REG, test_ptp2cpu_frm_cnt_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_frm_cnt", 1, "R", 1,0 },
	{ TEST_CPU2PTP_CSTATE_REG, test_cpu2ptp_cstate_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_cstate", 1, "R", 1,0 },
	{ TEST_CPU2PTP_BANK_FULL_REG, test_cpu2ptp_bank_full_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_bank_full", 1, "R", 1,0 },
	{ TEST_PTP2CPU_RDATA_REG, test_ptp2cpu_rdata_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_rdata", 1, "ROP", 1,0 },
	{ TEST_PTP2CPU_CSTATE_REG, test_ptp2cpu_cstate_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_cstate", 1, "R", 1,0 },
	{ TEST_PTP2CPU_BANK_EMPTY_REG, test_ptp2cpu_bank_empty_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_bank_empty", 1, "R", 1,0 },
	{ TEST_CPU2PTP_LEN_ERR_REG, test_cpu2ptp_len_err_reg, "subsys_1588.bc_1588.cpu.cpu2ptp_len_err", 3, "R", 1,0 },
	{ TEST_PTP2CPU_LEN_ERR_REG, test_ptp2cpu_len_err_reg, "subsys_1588.bc_1588.cpu.ptp2cpu_len_err", 2, "R", 1,0 },
	{ TEST_IEEE1588_GLOBAL_CFG_REG, test_ieee1588_global_cfg_reg, "subsys_1588.ptp_over_oh.global_ieee1588.ieee1588_global_cfg", 15, "RW", 1,0 },
	{ TEST_PTP_TS_CFG_REG, test_ptp_ts_cfg_reg, "subsys_1588.ptp_over_oh.global_ieee1588.ptp_ts_cfg", 3, "RW", 1,0 },
	{ TEST_PTP_GLB_INT1_INT_REG, test_ptp_glb_int1_int_reg, "subsys_1588.ptp_over_oh.global_ieee1588.ptp_glb_int1_int", 26, "RW", 1,0 },
	{ TEST_PTP_GLB_INT1_INT_MASK_REG, test_ptp_glb_int1_int_mask_reg, "subsys_1588.ptp_over_oh.global_ieee1588.ptp_glb_int1_int_mask", 26, "RW", 1,0 },
	{ TEST_CCU_RX_SSM_REQ_REG, test_ccu_rx_ssm_req_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_ssm_req", 1, "W", 1,0 },
	{ TEST_CCU_RX_FRAME_CNT_REG, test_ccu_rx_frame_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_frame_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DROP_CNT_REG, test_ccu_rx_drop_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_drop_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_FILTER_CNT_REG, test_ccu_rx_filter_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_filter_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_FRM_ERR_CNT_REG, test_ccu_rx_frm_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_frm_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_LEN_ERR_CNT_REG, test_ccu_rx_len_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_len_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_PKT_IN_NUM_REG, test_ccu_rx_pkt_in_num_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_pkt_in_num", 1, "R", 1,0 },
	{ TEST_CCU_RX_SYNC_CNT_REG, test_ccu_rx_sync_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_sync_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DELAY_REQ_CNT_REG, test_ccu_rx_delay_req_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_delay_req_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_PDELAY_REQ_CNT_REG, test_ccu_rx_pdelay_req_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_pdelay_req_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_PDELAY_RESP_CNT_REG, test_ccu_rx_pdelay_resp_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_pdelay_resp_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_FOLLOW_UP_CNT_REG, test_ccu_rx_follow_up_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_follow_up_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DELAY_RESP_CNT_REG, test_ccu_rx_delay_resp_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_delay_resp_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_PDELAY_FOLLOW_CNT_REG, test_ccu_rx_pdelay_follow_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_pdelay_follow_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_ANNOUNCE_CNT_REG, test_ccu_rx_announce_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_announce_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_SIGNALING_CNT_REG, test_ccu_rx_signaling_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_signaling_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_MANAGEMENT_CNT_REG, test_ccu_rx_management_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_management_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_SSM_CNT_REG, test_ccu_rx_ssm_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_ssm_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_RESV_CNT_REG, test_ccu_rx_resv_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_resv_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DECODE_ERR_CNT_REG, test_ccu_rx_decode_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_decode_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DECODE_SPKT_BYTE_CNT_REG, test_ccu_rx_decode_spkt_byte_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_decode_spkt_byte_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_DECODE_SPKT_NUM_CNT_REG, test_ccu_rx_decode_spkt_num_cnt_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_decode_spkt_num_cnt", 1, "R", 1,0 },
	{ TEST_CCU_RX_SSM_MESSAGE0_REG, test_ccu_rx_ssm_message0_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_ssm_message0", 1, "R", 1,0 },
	{ TEST_CCU_RX_SSM_MESSAGE1_REG, test_ccu_rx_ssm_message1_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_ssm_message1", 1, "R", 1,0 },
	{ TEST_CCU_RX_ALARM_REG, test_ccu_rx_alarm_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_alarm", 9, "R", 1,0 },
	{ TEST_CCU_RX_INT_REG, test_ccu_rx_int_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_int", 6, "RW", 1,0 },
	{ TEST_CCU_RX_INT_MASK_REG, test_ccu_rx_int_mask_reg, "subsys_1588.centre_1588_pro.ccu_rx.ccu_rx_int_mask", 6, "RW", 1,0 },
	{ TEST_FIFO_LEVEL_CFG_REG, test_fifo_level_cfg_reg, "subsys_flexe.adapt.rateadp.fifo_level_cfg", 4, "RW", 80,0x1 },
	{ TEST_BLOCK_TYPE_REG, test_block_type_reg, "subsys_flexe.adapt.rateadp.block_type", 1, "RW", 1,0 },
	{ TEST_CLR_HIST_REG, test_clr_hist_reg, "subsys_flexe.adapt.rateadp.clr_hist", 2, "RW", 1,0 },
	{ TEST_IND_SEL_REG, test_ind_sel_reg, "subsys_flexe.adapt.rateadp.ind_sel", 1, "RW", 1,0 },
	{ TEST_INS_DEL_GAP_REG, test_ins_del_gap_reg, "subsys_flexe.adapt.rateadp.ins_del_gap", 2, "RW", 1,0 },
	{ TEST_BLK_NUM_CFG_REG, test_blk_num_cfg_reg, "subsys_flexe.adapt.rateadp.blk_num_cfg", 2, "RW", 80,0x1 },
	{ TEST_MAP_REG_REG, test_map_reg_reg, "subsys_flexe.adapt.rateadp.map_reg", 3, "RW", 80,0x1 },
	{ TEST_DRAG_PARA_CFG_REG, test_drag_para_cfg_reg, "subsys_flexe.adapt.rateadp.drag_para_cfg", 3, "RW", 1,0 },
	{ TEST_LVL_HIST_REG, test_lvl_hist_reg, "subsys_flexe.adapt.rateadp.lvl_hist", 2, "R", 1,0 },
	{ TEST_RATEADP_FULL_REG, test_rateadp_full_reg, "subsys_flexe.adapt.rateadp.rateadp_full", 3, "R", 1,0 },
	{ TEST_RATEADP_EMPTY_REG, test_rateadp_empty_reg, "subsys_flexe.adapt.rateadp.rateadp_empty", 3, "R", 1,0 },
	{ TEST_RAM_OVERFLOW_REG, test_ram_overflow_reg, "subsys_flexe.adapt.rateadp.ram_overflow", 3, "R", 1,0 },
	{ TEST_SEL_TB_EN_REG, test_sel_tb_en_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sel_tb_en", 1, "RW", 1,0 },
	{ TEST_MON_EN_EG_REG, test_mon_en_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.mon_en_eg", 3, "RW", 1,0 },
	{ TEST_STA_CLR_CH_EG_REG, test_sta_clr_ch_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sta_clr_ch_eg", 1, "RW", 1,0 },
	{ TEST_SAR_PATHDELAY_CHAN_REG, test_sar_pathdelay_chan_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sar_pathdelay_chan", 1, "RW", 1,0 },
	{ TEST_CLR_EG_REG, test_clr_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.clr_eg", 1, "W", 1,0 },
	{ TEST_STA_CLR_EG_REG, test_sta_clr_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sta_clr_eg", 2, "W", 1,0 },
	{ TEST_CNT_MAX_EG_REG, test_cnt_max_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cnt_max_eg", 1, "R", 80,0x1 },
	{ TEST_CNT_DEPTH_EG_REG, test_cnt_depth_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cnt_depth_eg", 2, "R", 1,0 },
	{ TEST_SAR_PATHDELAY_STAT_REG, test_sar_pathdelay_stat_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sar_pathdelay_stat", 2, "R", 1,0 },
	{ TEST_SAR_PATHDELAY_REAL_REG, test_sar_pathdelay_real_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sar_pathdelay_real", 2, "R", 1,0 },
	{ TEST_SQ_ERR_EG_REG, test_sq_err_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.sq_err_eg", 3, "R", 1,0 },
	{ TEST_CPB_ILK_BP_REG, test_cpb_ilk_bp_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_ilk_bp", 3, "R", 1,0 },
	{ TEST_DLY_FIFO_STATE_REG, test_dly_fifo_state_reg, "subsys_mac.cpb_egress_mac.cpb_egress.dly_fifo_state", 2, "R", 1,0 },
	{ TEST_LINK_FULL_EG_REG, test_link_full_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.link_full_eg", 3, "R", 1,0 },
	{ TEST_LINK_EMPTY_EG_REG, test_link_empty_eg_reg, "subsys_mac.cpb_egress_mac.cpb_egress.link_empty_eg", 3, "R", 1,0 },
	{ TEST_CPB_EG0_INT_REG, test_cpb_eg0_int_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg0_int", 16, "RW", 1,0 },
	{ TEST_CPB_EG0_INT_MASK_REG, test_cpb_eg0_int_mask_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg0_int_mask", 16, "RW", 1,0 },
	{ TEST_CPB_EG1_INT_REG, test_cpb_eg1_int_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg1_int", 16, "RW", 1,0 },
	{ TEST_CPB_EG1_INT_MASK_REG, test_cpb_eg1_int_mask_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg1_int_mask", 16, "RW", 1,0 },
	{ TEST_CPB_EG2_INT_REG, test_cpb_eg2_int_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg2_int", 16, "RW", 1,0 },
	{ TEST_CPB_EG2_INT_MASK_REG, test_cpb_eg2_int_mask_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg2_int_mask", 16, "RW", 1,0 },
	{ TEST_CPB_EG3_INT_REG, test_cpb_eg3_int_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg3_int", 16, "RW", 1,0 },
	{ TEST_CPB_EG3_INT_MASK_REG, test_cpb_eg3_int_mask_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg3_int_mask", 16, "RW", 1,0 },
	{ TEST_CPB_EG4_INT_REG, test_cpb_eg4_int_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg4_int", 16, "RW", 1,0 },
	{ TEST_CPB_EG4_INT_MASK_REG, test_cpb_eg4_int_mask_reg, "subsys_mac.cpb_egress_mac.cpb_egress.cpb_eg4_int_mask", 16, "RW", 1,0 },
	{ TEST_MAC_FIFO_LEVEL_CFG_REG, test_mac_fifo_level_cfg_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_fifo_level_cfg", 4, "RW", 80,0x1 },
	{ TEST_MAC_BLOCK_TYPE_REG, test_mac_block_type_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_block_type", 1, "RW", 1,0 },
	{ TEST_MAC_CLR_HIST_REG, test_mac_clr_hist_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_clr_hist", 2, "RW", 1,0 },
	{ TEST_MAC_IND_SEL_REG, test_mac_ind_sel_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_ind_sel", 1, "RW", 1,0 },
	{ TEST_MAC_INS_DEL_GAP_REG, test_mac_ins_del_gap_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_ins_del_gap", 2, "RW", 1,0 },
	{ TEST_MAC_BLK_NUM_CFG_REG, test_mac_blk_num_cfg_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_blk_num_cfg", 2, "RW", 80,0x1 },
	{ TEST_MAC_MAP_REG_REG, test_mac_map_reg_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_map_reg", 3, "RW", 80,0x1 },
	{ TEST_MAC_DRAG_PARA_CFG_REG, test_mac_drag_para_cfg_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_drag_para_cfg", 3, "RW", 1,0 },
	{ TEST_MAC_LVL_HIST_REG, test_mac_lvl_hist_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_lvl_hist", 2, "R", 1,0 },
	{ TEST_MAC_RATEADP_FULL_REG, test_mac_rateadp_full_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_rateadp_full", 3, "R", 1,0 },
	{ TEST_MAC_RATEADP_EMPTY_REG, test_mac_rateadp_empty_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_rateadp_empty", 3, "R", 1,0 },
	{ TEST_MAC_RAM_OVERFLOW_REG, test_mac_ram_overflow_reg, "subsys_mac.mac_adapt.mac_rateadpt.mac_ram_overflow", 3, "R", 1,0 },
	{ TEST_PPS_TIME_CFG_REG, test_pps_time_cfg_reg, "top.pps_time_cfg", 1, "RW", 1,0 },
	{ TEST_PHY_SEL_CFG_REG, test_phy_sel_cfg_reg, "top.phy_sel_cfg", 1, "RW", 1,0 },
	{ TEST_CLK_MEASURE_CFG_REG, test_clk_measure_cfg_reg, "top.clk_measure_cfg", 2, "RW", 1,0 },
	{ TEST_CDR_SEL_REG, test_cdr_sel_reg, "top.cdr_sel", 1, "RW", 1,0 },
	{ TEST_RST_GLB_FUCI_SOFT_N_REG, test_rst_glb_fuci_soft_n_reg, "top.rst_glb_fuci_soft_n", 1, "W", 1,0 },
	{ TEST_RST_GLB_LOGIC_N_REG, test_rst_glb_logic_n_reg, "top.rst_glb_logic_n", 1, "W", 1,0 },
	{ TEST_RST_LOGIC_SYS1_N_REG, test_rst_logic_sys1_n_reg, "top.rst_logic_sys1_n", 29, "W", 1,0 },
	{ TEST_RST_FPGA_SERDES_N_REG, test_rst_fpga_serdes_n_reg, "top.rst_fpga_serdes_n", 11, "W", 1,0 },
	{ TEST_RST_LOGIC_SYS3_N_REG, test_rst_logic_sys3_n_reg, "top.rst_logic_sys3_n", 31, "W", 1,0 },
	{ TEST_RST_125M_PPS_N_REG, test_rst_125m_pps_n_reg, "top.rst_125m_pps_n", 1, "W", 1,0 },
	{ TEST_RST_FUCI_MODULE1_N_REG, test_rst_fuci_module1_n_reg, "top.rst_fuci_module1_n", 30, "W", 1,0 },
	{ TEST_RST_FUCI_MODULE2_N_REG, test_rst_fuci_module2_n_reg, "top.rst_fuci_module2_n", 29, "W", 1,0 },
	{ TEST_RST_SOH_EXT_125M_N_REG, test_rst_soh_ext_125m_n_reg, "top.rst_soh_ext_125m_n", 1, "W", 1,0 },
	{ TEST_RST_SOH_INS_125M_N_REG, test_rst_soh_ins_125m_n_reg, "top.rst_soh_ins_125m_n", 1, "W", 1,0 },
	{ TEST_RST_SOAM_EXT_125M_N_REG, test_rst_soam_ext_125m_n_reg, "top.rst_soam_ext_125m_n", 1, "W", 1,0 },
	{ TEST_RST_SOAM_INS_125M_N_REG, test_rst_soam_ins_125m_n_reg, "top.rst_soam_ins_125m_n", 1, "W", 1,0 },
	{ TEST_RST_GEARBOX_N_REG, test_rst_gearbox_n_reg, "top.rst_gearbox_n", 5, "W", 1,0 },
	{ TEST_RST_311M_N_REG, test_rst_311m_n_reg, "top.rst_311m_n", 3, "W", 1,0 },
	{ TEST_RST_311M_UPI_N_REG, test_rst_311m_upi_n_reg, "top.rst_311m_upi_n", 2, "W", 1,0 },
	{ TEST_RST_SOH_UPI_125EXT_N_REG, test_rst_soh_upi_125ext_n_reg, "top.rst_soh_upi_125ext_n", 1, "W", 1,0 },
	{ TEST_RST_SOH_UPI_125INS_N_REG, test_rst_soh_upi_125ins_n_reg, "top.rst_soh_upi_125ins_n", 1, "W", 1,0 },
	{ TEST_RST_SOAM_UPI_125EXT_N_REG, test_rst_soam_upi_125ext_n_reg, "top.rst_soam_upi_125ext_n", 1, "W", 1,0 },
	{ TEST_RST_SOAM_UPI_125INS_N_REG, test_rst_soam_upi_125ins_n_reg, "top.rst_soam_upi_125ins_n", 1, "W", 1,0 },
	{ TEST_RST_SOH_UPI_FUCI_N_REG, test_rst_soh_upi_fuci_n_reg, "top.rst_soh_upi_fuci_n", 2, "W", 1,0 },
	{ TEST_RST_SYS_LOGIC4_N_REG, test_rst_sys_logic4_n_reg, "top.rst_sys_logic4_n", 19, "W", 1,0 },
	{ TEST_RST_IEEE1588_1_REG, test_rst_ieee1588_1_reg, "top.rst_ieee1588_1", 28, "W", 1,0 },
	{ TEST_RST_IEEE1588_2_REG, test_rst_ieee1588_2_reg, "top.rst_ieee1588_2", 29, "W", 1,0 },
	{ TEST_GLB_CLR_REG, test_glb_clr_reg, "top.glb_clr", 3, "W", 1,0 },
	{ TEST_PPS_TOD_RX_NUM_REG, test_pps_tod_rx_num_reg, "top.pps_tod_rx_num", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_TYPE_REG, test_pps_tod_rx_type_reg, "top.pps_tod_rx_type", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_LEN_REG, test_pps_tod_rx_len_reg, "top.pps_tod_rx_len", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_TOD_BYTE0_REG, test_pps_tod_rx_tod_byte0_reg, "top.pps_tod_rx_tod_byte0", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_TOD_SEC_REG, test_pps_tod_rx_tod_sec_reg, "top.pps_tod_rx_tod_sec", 2, "R", 1,0 },
	{ TEST_PPS_TOD_RX_TOD_NSEC_REG, test_pps_tod_rx_tod_nsec_reg, "top.pps_tod_rx_tod_nsec", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_TOD_RES_REG, test_pps_tod_rx_tod_res_reg, "top.pps_tod_rx_tod_res", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_CRC_REG, test_pps_tod_rx_crc_reg, "top.pps_tod_rx_crc", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_REAL_TIME_REG, test_pps_tod_rx_real_time_reg, "top.pps_tod_rx_real_time", 3, "R", 1,0 },
	{ TEST_PPS_TOD_RX_CNT_TOD_LOST_REG, test_pps_tod_rx_cnt_tod_lost_reg, "top.pps_tod_rx_cnt_tod_lost", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_CNT_PPS_ADJUST_REG, test_pps_tod_rx_cnt_pps_adjust_reg, "top.pps_tod_rx_cnt_pps_adjust", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_CNT_CRC_EOR_REG, test_pps_tod_rx_cnt_crc_eor_reg, "top.pps_tod_rx_cnt_crc_eor", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_CNT_WAVE_BROKEN_REG, test_pps_tod_rx_cnt_wave_broken_reg, "top.pps_tod_rx_cnt_wave_broken", 1, "R", 1,0 },
	{ TEST_PPS_TOD_RX_REG_CNT_25M_REG, test_pps_tod_rx_reg_cnt_25m_reg, "top.pps_tod_rx_reg_cnt_25m", 1, "R", 1,0 },
	{ TEST_MEASURE_CNT_MAX_REG, test_measure_cnt_max_reg, "top.measure_cnt_max", 1, "R", 13,0x1 },
	{ TEST_MEASURE_CNT_MIN_REG, test_measure_cnt_min_reg, "top.measure_cnt_min", 1, "R", 13,0x1 },
	{ TEST_TOP_INT1_INT_REG, test_top_int1_int_reg, "top.top_int1_int", 30, "RW", 1,0 },
	{ TEST_TOP_INT1_INT_MASK_REG, test_top_int1_int_mask_reg, "top.top_int1_int_mask", 30, "RW", 1,0 },
	{ TEST_TOP_INT2_INT_REG, test_top_int2_int_reg, "top.top_int2_int", 23, "RW", 1,0 },
	{ TEST_TOP_INT2_INT_MASK_REG, test_top_int2_int_mask_reg, "top.top_int2_int_mask", 23, "RW", 1,0 },
	{ TEST_SAR_TX_GLB_CFG_REG, test_sar_tx_glb_cfg_reg, "subsys_mac.b66sar.b66sar_tx.sar_tx_glb_cfg", 5, "RW", 1,0 },
	{ TEST_RA2SAR_CFG1_REG, test_ra2sar_cfg1_reg, "subsys_mac.b66sar.b66sar_tx.ra2sar_cfg1", 2, "RW", 1,0 },
	{ TEST_SAR_TX_CTRL_CFG_REG, test_sar_tx_ctrl_cfg_reg, "subsys_mac.b66sar.b66sar_tx.sar_tx_ctrl_cfg", 3, "RW", 80,0x1 },
	{ TEST_RA2SAR_CFG2_REG, test_ra2sar_cfg2_reg, "subsys_mac.b66sar.b66sar_tx.ra2sar_cfg2", 5, "RW", 1,0 },
	{ TEST_RA2SAR_CFG3_REG, test_ra2sar_cfg3_reg, "subsys_mac.b66sar.b66sar_tx.ra2sar_cfg3", 2, "RW", 1,0 },
	{ TEST_RA2SAR_TABLE_SWITCH_REG, test_ra2sar_table_switch_reg, "subsys_mac.b66sar.b66sar_tx.ra2sar_table_switch", 1, "W", 1,0 },
	{ TEST_SAR_TX_PKT_CNT_REG, test_sar_tx_pkt_cnt_reg, "subsys_mac.b66sar.b66sar_tx.sar_tx_pkt_cnt", 1, "R", 1,0 },
	{ TEST_SAR_TX_PKT_CNT_256_REG, test_sar_tx_pkt_cnt_256_reg, "subsys_mac.b66sar.b66sar_tx.sar_tx_pkt_cnt_256", 1, "R", 1,0 },
	{ TEST_SAR_TX_STATE_REG, test_sar_tx_state_reg, "subsys_mac.b66sar.b66sar_tx.sar_tx_state", 3, "R", 1,0 },
	{ TEST_RA2SAR_ENV_ALM_REG, test_ra2sar_env_alm_reg, "subsys_mac.b66sar.b66sar_tx.ra2sar_env_alm", 6, "R", 1,0 },
	{ TEST_B66SAR_TX_INT_REG, test_b66sar_tx_int_reg, "subsys_mac.b66sar.b66sar_tx.b66sar_tx_int", 1, "RW", 1,0 },
	{ TEST_B66SAR_TX_INT_MASK_REG, test_b66sar_tx_int_mask_reg, "subsys_mac.b66sar.b66sar_tx.b66sar_tx_int_mask", 1, "RW", 1,0 },
	{ TEST_MACRX_CFG_REG, test_macrx_cfg_reg, "subsys_mac.mac.mcmacrx.macrx_cfg", 2, "RW", 1,0 },
	{ TEST_MACRX_ENABLE_REG, test_macrx_enable_reg, "subsys_mac.mac.mcmacrx.macrx_enable", 3, "RW", 1,0 },
	{ TEST_MACRX_STAT_ENABLE_REG, test_macrx_stat_enable_reg, "subsys_mac.mac.mcmacrx.macrx_stat_enable", 3, "RW", 1,0 },
	{ TEST_MACRX_CRC_CUTOFF_EN_REG, test_macrx_crc_cutoff_en_reg, "subsys_mac.mac.mcmacrx.macrx_crc_cutoff_en", 3, "RW", 1,0 },
	{ TEST_MACRX_STATISTIC_CLEAR_CHAN_REG, test_macrx_statistic_clear_chan_reg, "subsys_mac.mac.mcmacrx.macrx_statistic_clear_chan", 1, "RW", 1,0 },
	{ TEST_MACRX_CRC_ERRDROP_EN_REG, test_macrx_crc_errdrop_en_reg, "subsys_mac.mac.mcmacrx.macrx_crc_errdrop_en", 3, "RW", 1,0 },
	{ TEST_MACRX_DECODE_SEL_REG, test_macrx_decode_sel_reg, "subsys_mac.mac.mcmacrx.macrx_decode_sel", 1, "RW", 1,0 },
	{ TEST_MACRX_STATISTIC_CLEAR_REG, test_macrx_statistic_clear_reg, "subsys_mac.mac.mcmacrx.macrx_statistic_clear", 1, "W", 1,0 },
	{ TEST_MACRX_STATISTIC_ALL_CLR_REG, test_macrx_statistic_all_clr_reg, "subsys_mac.mac.mcmacrx.macrx_statistic_all_clr", 1, "W", 1,0 },
	{ TEST_MACRX_OUT_SOP_REG, test_macrx_out_sop_reg, "subsys_mac.mac.mcmacrx.macrx_out_sop", 1, "R", 1,0 },
	{ TEST_MACRX_OUT_EOP_REG, test_macrx_out_eop_reg, "subsys_mac.mac.mcmacrx.macrx_out_eop", 1, "R", 1,0 },
	{ TEST_MACRX_STA_RAM_INIT_DONE_REG, test_macrx_sta_ram_init_done_reg, "subsys_mac.mac.mcmacrx.macrx_sta_ram_init_done", 1, "R", 1,0 },
	{ TEST_MACRX_ERROR_REG, test_macrx_error_reg, "subsys_mac.mac.mcmacrx.macrx_error", 3, "R", 1,0 },
	{ TEST_MACRX_FAULT_ALM_REG, test_macrx_fault_alm_reg, "subsys_mac.mac.mcmacrx.macrx_fault_alm", 9, "R", 1,0 },
	{ TEST_MACRX_STA_RAM_ECC_CORRECT_ALM_REG, test_macrx_sta_ram_ecc_correct_alm_reg, "subsys_mac.mac.mcmacrx.macrx_sta_ram_ecc_correct_alm", 24, "R", 1,0 },
	{ TEST_MACRX_STA_RAM_ECC_UNCORRECT_ALM_REG, test_macrx_sta_ram_ecc_uncorrect_alm_reg, "subsys_mac.mac.mcmacrx.macrx_sta_ram_ecc_uncorrect_alm", 24, "R", 1,0 },
	{ TEST_MACRX_EOP_ABNOR_ALM_REG, test_macrx_eop_abnor_alm_reg, "subsys_mac.mac.mcmacrx.macrx_eop_abnor_alm", 3, "R", 1,0 },
	{ TEST_RA2SAR_M_1ST_REG, test_ra2sar_m_1st_reg, "subsys_mac.b66sar.b66sar_tx_311m.ra2sar_m_1st", 1, "RW", 1,0 },
	{ TEST_RA2SAR_BASE_M_1ST_REG, test_ra2sar_base_m_1st_reg, "subsys_mac.b66sar.b66sar_tx_311m.ra2sar_base_m_1st", 1, "RW", 1,0 },
	{ TEST_RA2SAR_CFG_311M_REG, test_ra2sar_cfg_311m_reg, "subsys_mac.b66sar.b66sar_tx_311m.ra2sar_cfg_311m", 2, "RW", 1,0 },
	{ TEST_RA2SAR_M_2ND_REG, test_ra2sar_m_2nd_reg, "subsys_mac.b66sar.b66sar_tx_311m.ra2sar_m_2nd", 1, "RW", 1,0 },
	{ TEST_RA2SAR_BASE_M_2ND_REG, test_ra2sar_base_m_2nd_reg, "subsys_mac.b66sar.b66sar_tx_311m.ra2sar_base_m_2nd", 1, "RW", 1,0 },
	{ TEST_LEVELCLR_CHANNELIZE_REG, test_levelclr_channelize_reg, "subsys_flexe.channelize.channelize_portsch.levelclr_channelize", 1, "RW", 1,0 },
	{ TEST_BYPASS_EN_REG, test_bypass_en_reg, "subsys_flexe.channelize.channelize_portsch.bypass_en", 3, "RW", 1,0 },
	{ TEST_PCSCHID_CFG_REG, test_pcschid_cfg_reg, "subsys_flexe.channelize.channelize_portsch.pcschid_cfg", 2, "RW", 1,0 },
	{ TEST_MAXLEVEL_CHANNELIZE_REG, test_maxlevel_channelize_reg, "subsys_flexe.channelize.channelize_portsch.maxlevel_channelize", 2, "R", 1,0 },
	{ TEST_FULL_CHANNELIZE_REG, test_full_channelize_reg, "subsys_flexe.channelize.channelize_portsch.full_channelize", 1, "R", 1,0 },
	{ TEST_OAM_JOIT_BIP_CFG_REG, test_oam_joit_bip_cfg_reg, "subsys_mac.oam.oam_tx.oam_joit_bip_cfg", 10, "RW", 1,0 },
	{ TEST_BAS_IDTY_CFG_REG, test_bas_idty_cfg_reg, "subsys_mac.oam.oam_tx.bas_idty_cfg", 1, "RW", 1,0 },
	{ TEST_BAS_PERIOD_CFG_REG, test_bas_period_cfg_reg, "subsys_mac.oam.oam_tx.bas_period_cfg", 5, "RW", 1,0 },
	{ TEST_SEQ_TYPE_CFG_REG, test_seq_type_cfg_reg, "subsys_mac.oam.oam_tx.seq_type_cfg", 3, "RW", 1,0 },
	{ TEST_SEQ_NUM_CFG_REG, test_seq_num_cfg_reg, "subsys_mac.oam.oam_tx.seq_num_cfg", 10, "RW", 1,0 },
	{ TEST_CRC_REV_CFG_REG, test_crc_rev_cfg_reg, "subsys_mac.oam.oam_tx.crc_rev_cfg", 2, "RW", 1,0 },
	{ TEST_TX_IDLE_RPL_EN_REG, test_tx_idle_rpl_en_reg, "subsys_mac.oam.oam_tx.tx_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_OAM_TX_BYPASS_REG, test_oam_tx_bypass_reg, "subsys_mac.oam.oam_tx.oam_tx_bypass", 1, "RW", 1,0 },
	{ TEST_BIP_ERR_MASK_REG, test_bip_err_mask_reg, "subsys_mac.oam.oam_tx.bip_err_mask", 1, "RW", 1,0 },
	{ TEST_MANUAL_INSERT_CSF_LPI_REG, test_manual_insert_csf_lpi_reg, "subsys_mac.oam.oam_tx.manual_insert_csf_lpi", 3, "RW", 1,0 },
	{ TEST_MANUAL_INSERT_CSF_LF_REG, test_manual_insert_csf_lf_reg, "subsys_mac.oam.oam_tx.manual_insert_csf_lf", 3, "RW", 1,0 },
	{ TEST_MANUAL_INSERT_CSF_RF_REG, test_manual_insert_csf_rf_reg, "subsys_mac.oam.oam_tx.manual_insert_csf_rf", 3, "RW", 1,0 },
	{ TEST_BIP_ERR_LEVEL_REG, test_bip_err_level_reg, "subsys_mac.oam.oam_tx.bip_err_level", 3, "RW", 1,0 },
	{ TEST_OAM_TX_BYPASS_CLIENT_REG, test_oam_tx_bypass_client_reg, "subsys_mac.oam.oam_tx.oam_tx_bypass_client", 3, "RW", 1,0 },
	{ TEST_MANUAL_INSERT_RDI_REG, test_manual_insert_rdi_reg, "subsys_mac.oam.oam_tx.manual_insert_rdi", 3, "RW", 1,0 },
	{ TEST_BAS_PERIOD_CFG01_REG, test_bas_period_cfg01_reg, "subsys_mac.oam.oam_tx.bas_period_cfg01", 2, "RW", 1,0 },
	{ TEST_BAS_PERIOD_CFG23_REG, test_bas_period_cfg23_reg, "subsys_mac.oam.oam_tx.bas_period_cfg23", 2, "RW", 1,0 },
	{ TEST_BAS_EN_CFG_ASIC_REG, test_bas_en_cfg_asic_reg, "subsys_mac.oam.oam_tx.bas_en_cfg_asic", 3, "RW", 1,0 },
	{ TEST_OAM_PRI_ENCODE_REG, test_oam_pri_encode_reg, "subsys_mac.oam.oam_tx.oam_pri_encode", 2, "RW", 1,0 },
	{ TEST_TX_OHIF_FIFO_SEL_REG, test_tx_ohif_fifo_sel_reg, "subsys_mac.oam.oam_tx.tx_ohif_fifo_sel", 4, "RW", 1,0 },
	{ TEST_OAM_CNT_CFG_REG, test_oam_cnt_cfg_reg, "subsys_mac.oam.oam_tx.oam_cnt_cfg", 2, "RW", 1,0 },
	{ TEST_TX_LPI_IDLE_RPL_EN_REG, test_tx_lpi_idle_rpl_en_reg, "subsys_mac.oam.oam_tx.tx_lpi_idle_rpl_en", 3, "RW", 1,0 },
	{ TEST_TX_INSERT_66BCODE_EN_REG, test_tx_insert_66bcode_en_reg, "subsys_mac.oam.oam_tx.tx_insert_66bcode_en", 3, "RW", 1,0 },
	{ TEST_NEW_PERIOD_CFG_REG, test_new_period_cfg_reg, "subsys_mac.oam.oam_tx.new_period_cfg", 2, "RW", 1,0 },
	{ TEST_TX_BAS_FIFO_NUM_REG, test_tx_bas_fifo_num_reg, "subsys_mac.oam.oam_tx.tx_bas_fifo_num", 1, "RW", 1,0 },
	{ TEST_TX_LPI_SETCLR_CFG_REG, test_tx_lpi_setclr_cfg_reg, "subsys_mac.oam.oam_tx.tx_lpi_setclr_cfg", 2, "RW", 1,0 },
	{ TEST_TX_INSERT_66BCODE_CFG_REG, test_tx_insert_66bcode_cfg_reg, "subsys_mac.oam.oam_tx.tx_insert_66bcode_cfg", 3, "RW", 1,0 },
	{ TEST_OAM_JOIT_BIP_CFG2_REG, test_oam_joit_bip_cfg2_reg, "subsys_mac.oam.oam_tx.oam_joit_bip_cfg2", 2, "RW", 1,0 },
	{ TEST_TX_LPI_BAS_INS_EN_REG, test_tx_lpi_bas_ins_en_reg, "subsys_mac.oam.oam_tx.tx_lpi_bas_ins_en", 3, "RW", 1,0 },
	{ TEST_BAS_CRC_ERR_EN_REG, test_bas_crc_err_en_reg, "subsys_mac.oam.oam_tx.bas_crc_err_en", 4, "RW", 1,0 },
	{ TEST_BIP_ERR_PULSE_REG, test_bip_err_pulse_reg, "subsys_mac.oam.oam_tx.bip_err_pulse", 3, "W", 1,0 },
	{ TEST_DATA_ERR_PULSE_REG, test_data_err_pulse_reg, "subsys_mac.oam.oam_tx.data_err_pulse", 3, "W", 1,0 },
	{ TEST_BAS_INSERT_CNT_0T3_REG, test_bas_insert_cnt_0t3_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_0t3", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_4T7_REG, test_bas_insert_cnt_4t7_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_4t7", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_8T11_REG, test_bas_insert_cnt_8t11_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_8t11", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_12T15_REG, test_bas_insert_cnt_12t15_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_12t15", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_16T19_REG, test_bas_insert_cnt_16t19_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_16t19", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_20T23_REG, test_bas_insert_cnt_20t23_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_20t23", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_24T27_REG, test_bas_insert_cnt_24t27_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_24t27", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_28T31_REG, test_bas_insert_cnt_28t31_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_28t31", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_32T35_REG, test_bas_insert_cnt_32t35_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_32t35", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_36T39_REG, test_bas_insert_cnt_36t39_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_36t39", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_40T43_REG, test_bas_insert_cnt_40t43_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_40t43", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_44T47_REG, test_bas_insert_cnt_44t47_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_44t47", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_48T51_REG, test_bas_insert_cnt_48t51_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_48t51", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_52T55_REG, test_bas_insert_cnt_52t55_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_52t55", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_56T59_REG, test_bas_insert_cnt_56t59_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_56t59", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_60T63_REG, test_bas_insert_cnt_60t63_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_60t63", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_64T67_REG, test_bas_insert_cnt_64t67_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_64t67", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_68T71_REG, test_bas_insert_cnt_68t71_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_68t71", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_72T75_REG, test_bas_insert_cnt_72t75_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_72t75", 4, "R", 1,0 },
	{ TEST_BAS_INSERT_CNT_76T79_REG, test_bas_insert_cnt_76t79_reg, "subsys_mac.oam.oam_tx.bas_insert_cnt_76t79", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_0T3_REG, test_oth_insert_cnt_0t3_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_0t3", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_4T7_REG, test_oth_insert_cnt_4t7_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_4t7", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_8T11_REG, test_oth_insert_cnt_8t11_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_8t11", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_12T15_REG, test_oth_insert_cnt_12t15_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_12t15", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_16T19_REG, test_oth_insert_cnt_16t19_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_16t19", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_20T23_REG, test_oth_insert_cnt_20t23_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_20t23", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_24T27_REG, test_oth_insert_cnt_24t27_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_24t27", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_28T31_REG, test_oth_insert_cnt_28t31_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_28t31", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_32T35_REG, test_oth_insert_cnt_32t35_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_32t35", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_36T39_REG, test_oth_insert_cnt_36t39_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_36t39", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_40T43_REG, test_oth_insert_cnt_40t43_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_40t43", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_44T47_REG, test_oth_insert_cnt_44t47_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_44t47", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_48T51_REG, test_oth_insert_cnt_48t51_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_48t51", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_52T55_REG, test_oth_insert_cnt_52t55_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_52t55", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_56T59_REG, test_oth_insert_cnt_56t59_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_56t59", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_60T63_REG, test_oth_insert_cnt_60t63_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_60t63", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_64T67_REG, test_oth_insert_cnt_64t67_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_64t67", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_68T71_REG, test_oth_insert_cnt_68t71_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_68t71", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_72T75_REG, test_oth_insert_cnt_72t75_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_72t75", 4, "R", 1,0 },
	{ TEST_OTH_INSERT_CNT_76T79_REG, test_oth_insert_cnt_76t79_reg, "subsys_mac.oam.oam_tx.oth_insert_cnt_76t79", 4, "R", 1,0 },
	{ TEST_BAS_BRK_CNT_REG, test_bas_brk_cnt_reg, "subsys_mac.oam.oam_tx.bas_brk_cnt", 1, "R", 1,0 },
	{ TEST_BAS_CNT_REG, test_bas_cnt_reg, "subsys_mac.oam.oam_tx.bas_cnt", 1, "R", 1,0 },
	{ TEST_APS_CNT_REG, test_aps_cnt_reg, "subsys_mac.oam.oam_tx.aps_cnt", 1, "R", 1,0 },
	{ TEST_LOW_CNT_REG, test_low_cnt_reg, "subsys_mac.oam.oam_tx.low_cnt", 1, "R", 1,0 },
	{ TEST_NEW_CNT_REG, test_new_cnt_reg, "subsys_mac.oam.oam_tx.new_cnt", 1, "R", 1,0 },
	{ TEST_TIMESTAMP_LOCK_REG, test_timestamp_lock_reg, "subsys_mac.oam.oam_tx.timestamp_lock", 2, "R", 1,0 },
	{ TEST_CSF_LPI_REG, test_csf_lpi_reg, "subsys_mac.oam.oam_tx.csf_lpi", 3, "R", 1,0 },
	{ TEST_CSF_LF_REG, test_csf_lf_reg, "subsys_mac.oam.oam_tx.csf_lf", 3, "R", 1,0 },
	{ TEST_CSF_RF_REG, test_csf_rf_reg, "subsys_mac.oam.oam_tx.csf_rf", 3, "R", 1,0 },
	{ TEST_FIFO_FULL_REI_REG, test_fifo_full_rei_reg, "subsys_mac.oam.oam_tx.fifo_full_rei", 3, "R", 1,0 },
	{ TEST_FIFO_FULL_APS_REG, test_fifo_full_aps_reg, "subsys_mac.oam.oam_tx.fifo_full_aps", 3, "R", 1,0 },
	{ TEST_FIFO_FULL_LOW_REG, test_fifo_full_low_reg, "subsys_mac.oam.oam_tx.fifo_full_low", 3, "R", 1,0 },
	{ TEST_FIFO_FULL_BAS_REG, test_fifo_full_bas_reg, "subsys_mac.oam.oam_tx.fifo_full_bas", 3, "R", 1,0 },
	{ TEST_FIFO_FULL_NEW_REG, test_fifo_full_new_reg, "subsys_mac.oam.oam_tx.fifo_full_new", 3, "R", 1,0 },
	{ TEST_FIFO_EMPTY_BAS_REG, test_fifo_empty_bas_reg, "subsys_mac.oam.oam_tx.fifo_empty_bas", 3, "R", 1,0 },
	{ TEST_CSF_LPI_I0_INT_REG, test_csf_lpi_i0_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i0_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I0_INT_MASK_REG, test_csf_lpi_i0_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I1_INT_REG, test_csf_lpi_i1_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i1_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I1_INT_MASK_REG, test_csf_lpi_i1_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I2_INT_REG, test_csf_lpi_i2_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i2_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I2_INT_MASK_REG, test_csf_lpi_i2_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I3_INT_REG, test_csf_lpi_i3_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i3_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I3_INT_MASK_REG, test_csf_lpi_i3_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I4_INT_REG, test_csf_lpi_i4_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i4_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I4_INT_MASK_REG, test_csf_lpi_i4_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I5_INT_REG, test_csf_lpi_i5_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i5_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I5_INT_MASK_REG, test_csf_lpi_i5_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I6_INT_REG, test_csf_lpi_i6_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i6_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I6_INT_MASK_REG, test_csf_lpi_i6_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I7_INT_REG, test_csf_lpi_i7_int_reg, "subsys_mac.oam.oam_tx.csf_lpi_i7_int", 10, "RW", 1,0 },
	{ TEST_CSF_LPI_I7_INT_MASK_REG, test_csf_lpi_i7_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lpi_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I0_INT_REG, test_csf_lf_i0_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i0_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I0_INT_MASK_REG, test_csf_lf_i0_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I1_INT_REG, test_csf_lf_i1_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i1_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I1_INT_MASK_REG, test_csf_lf_i1_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I2_INT_REG, test_csf_lf_i2_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i2_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I2_INT_MASK_REG, test_csf_lf_i2_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I3_INT_REG, test_csf_lf_i3_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i3_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I3_INT_MASK_REG, test_csf_lf_i3_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I4_INT_REG, test_csf_lf_i4_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i4_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I4_INT_MASK_REG, test_csf_lf_i4_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I5_INT_REG, test_csf_lf_i5_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i5_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I5_INT_MASK_REG, test_csf_lf_i5_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I6_INT_REG, test_csf_lf_i6_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i6_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I6_INT_MASK_REG, test_csf_lf_i6_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I7_INT_REG, test_csf_lf_i7_int_reg, "subsys_mac.oam.oam_tx.csf_lf_i7_int", 10, "RW", 1,0 },
	{ TEST_CSF_LF_I7_INT_MASK_REG, test_csf_lf_i7_int_mask_reg, "subsys_mac.oam.oam_tx.csf_lf_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I0_INT_REG, test_csf_rf_i0_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i0_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I0_INT_MASK_REG, test_csf_rf_i0_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i0_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I1_INT_REG, test_csf_rf_i1_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i1_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I1_INT_MASK_REG, test_csf_rf_i1_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i1_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I2_INT_REG, test_csf_rf_i2_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i2_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I2_INT_MASK_REG, test_csf_rf_i2_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i2_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I3_INT_REG, test_csf_rf_i3_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i3_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I3_INT_MASK_REG, test_csf_rf_i3_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i3_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I4_INT_REG, test_csf_rf_i4_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i4_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I4_INT_MASK_REG, test_csf_rf_i4_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i4_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I5_INT_REG, test_csf_rf_i5_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i5_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I5_INT_MASK_REG, test_csf_rf_i5_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i5_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I6_INT_REG, test_csf_rf_i6_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i6_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I6_INT_MASK_REG, test_csf_rf_i6_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i6_int_mask", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I7_INT_REG, test_csf_rf_i7_int_reg, "subsys_mac.oam.oam_tx.csf_rf_i7_int", 10, "RW", 1,0 },
	{ TEST_CSF_RF_I7_INT_MASK_REG, test_csf_rf_i7_int_mask_reg, "subsys_mac.oam.oam_tx.csf_rf_i7_int_mask", 10, "RW", 1,0 },
	{ TEST_MACTX_WORK_MODE_REG, test_mactx_work_mode_reg, "subsys_mac.mac.mcmactx.mactx_work_mode", 3, "RW", 1,0 },
	{ TEST_MACTX_STATISTIC_CLR_CHAN_REG, test_mactx_statistic_clr_chan_reg, "subsys_mac.mac.mcmactx.mactx_statistic_clr_chan", 1, "RW", 1,0 },
	{ TEST_MACTX_ENCODE_CONFIG_REG, test_mactx_encode_config_reg, "subsys_mac.mac.mcmactx.mactx_encode_config", 7, "RW", 80,0x1 },
	{ TEST_MACTX_STAT_ENABLE_REG, test_mactx_stat_enable_reg, "subsys_mac.mac.mcmactx.mactx_stat_enable", 3, "RW", 1,0 },
	{ TEST_MACTX_AVG_IPG_REG, test_mactx_avg_ipg_reg, "subsys_mac.mac.mcmactx.mactx_avg_ipg", 2, "RW", 1,0 },
	{ TEST_MACTX_CRC_INC_EN_REG, test_mactx_crc_inc_en_reg, "subsys_mac.mac.mcmactx.mactx_crc_inc_en", 3, "RW", 1,0 },
	{ TEST_MACTX_CRC_RECAL_EN_REG, test_mactx_crc_recal_en_reg, "subsys_mac.mac.mcmactx.mactx_crc_recal_en", 3, "RW", 1,0 },
	{ TEST_MACTX_DECODE_SEL_REG, test_mactx_decode_sel_reg, "subsys_mac.mac.mcmactx.mactx_decode_sel", 1, "RW", 1,0 },
	{ TEST_MACTX_STATISTIC_ALL_CLR_REG, test_mactx_statistic_all_clr_reg, "subsys_mac.mac.mcmactx.mactx_statistic_all_clr", 1, "W", 1,0 },
	{ TEST_MACTX_STATISTIC_CLR_REG, test_mactx_statistic_clr_reg, "subsys_mac.mac.mcmactx.mactx_statistic_clr", 1, "W", 1,0 },
	{ TEST_MACTX_TS_RAM_INIT_REG, test_mactx_ts_ram_init_reg, "subsys_mac.mac.mcmactx.mactx_ts_ram_init", 1, "W", 1,0 },
	{ TEST_MACTX_ENV_RAM_INIT_REG, test_mactx_env_ram_init_reg, "subsys_mac.mac.mcmactx.mactx_env_ram_init", 1, "W", 1,0 },
	{ TEST_MACTX_RAM_INIT_DONE_REG, test_mactx_ram_init_done_reg, "subsys_mac.mac.mcmactx.mactx_ram_init_done", 3, "R", 1,0 },
	{ TEST_MACTX_BUSSW_UNDERFLOW_REG, test_mactx_bussw_underflow_reg, "subsys_mac.mac.mcmactx.mactx_bussw_underflow", 3, "R", 1,0 },
	{ TEST_MACTX_SAR_LF_ALM_REG, test_mactx_sar_lf_alm_reg, "subsys_mac.mac.mcmactx.mactx_sar_lf_alm", 3, "R", 1,0 },
	{ TEST_MACTX_SAR_RF_ALM_REG, test_mactx_sar_rf_alm_reg, "subsys_mac.mac.mcmactx.mactx_sar_rf_alm", 3, "R", 1,0 },
	{ TEST_MACTX_ENCODE_ERR_ALM_REG, test_mactx_encode_err_alm_reg, "subsys_mac.mac.mcmactx.mactx_encode_err_alm", 3, "R", 1,0 },
	{ TEST_MACTX_DECODE_ERR_ALM_REG, test_mactx_decode_err_alm_reg, "subsys_mac.mac.mcmactx.mactx_decode_err_alm", 3, "R", 1,0 },
	{ TEST_MACTX_STA_RAM_ECC_CORRECT_ALM_REG, test_mactx_sta_ram_ecc_correct_alm_reg, "subsys_mac.mac.mcmactx.mactx_sta_ram_ecc_correct_alm", 24, "R", 1,0 },
	{ TEST_MACTX_STA_RAM_ECC_UNCORRECT_ALM_REG, test_mactx_sta_ram_ecc_uncorrect_alm_reg, "subsys_mac.mac.mcmactx.mactx_sta_ram_ecc_uncorrect_alm", 24, "R", 1,0 },
	{ TEST_MACTX_EOP_ABNOR_ALM_REG, test_mactx_eop_abnor_alm_reg, "subsys_mac.mac.mcmactx.mactx_eop_abnor_alm", 3, "R", 1,0 },
	{ TEST_CCU_TX_SSM_REQ_REG, test_ccu_tx_ssm_req_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ssm_req", 1, "W", 1,0 },
	{ TEST_CCU_TX_FRAME_CNT_REG, test_ccu_tx_frame_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_frame_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_DROP_CNT_REG, test_ccu_tx_drop_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_drop_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_FILTER_CNT_REG, test_ccu_tx_filter_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_filter_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_ERR_CNT_REG, test_ccu_tx_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_LEN_ERR_CNT_REG, test_ccu_tx_len_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_len_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_PTP_CNT_REG, test_ccu_tx_ptp_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ptp_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_SSM_CNT_REG, test_ccu_tx_ssm_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ssm_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_SYNC_PORT_CNT_REG, test_ccu_tx_sync_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_sync_port_cnt", 1, "R", 8,0x1 },
	{ TEST_CCU_TX_DELAY_REQ_PORT_CNT_REG, test_ccu_tx_delay_req_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_delay_req_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_PDELAY_REQ_PORT_CNT_REG, test_ccu_tx_pdelay_req_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_pdelay_req_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_PDELAY_RESP_PORT_CNT_REG, test_ccu_tx_pdelay_resp_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_pdelay_resp_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_FOLLOW_UP_PORT_CNT_REG, test_ccu_tx_follow_up_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_follow_up_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_DELAY_RESP_PORT_CNT_REG, test_ccu_tx_delay_resp_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_delay_resp_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_PDELAY_FOLLOW_UP_PORT_CNT_REG, test_ccu_tx_pdelay_follow_up_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_pdelay_follow_up_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_ANNOUNCE_PORT_CNT_REG, test_ccu_tx_announce_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_announce_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_SIGNALING_PORT_CNT_REG, test_ccu_tx_signaling_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_signaling_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_MANAGEMENT_PORT_CNT_REG, test_ccu_tx_management_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_management_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_RESV_PORT_CNT_REG, test_ccu_tx_resv_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_resv_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_SSM_PORT_CNT_REG, test_ccu_tx_ssm_port_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ssm_port_cnt", 1, "R", 8, 0x1 },
	{ TEST_CCU_TX_ENCODE_ERR_CNT_REG, test_ccu_tx_encode_err_cnt_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_encode_err_cnt", 1, "R", 1,0 },
	{ TEST_CCU_TX_SSM_MESSAGE0_REG, test_ccu_tx_ssm_message0_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ssm_message0", 1, "R", 1,0 },
	{ TEST_CCU_TX_SSM_MESSAGE1_REG, test_ccu_tx_ssm_message1_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_ssm_message1", 1, "R", 1,0 },
	{ TEST_CCU_TX_ENCODE_ERR_ALM_REG, test_ccu_tx_encode_err_alm_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_encode_err_alm", 4, "R", 1,0 },
	{ TEST_CCU_TX_INT_REG, test_ccu_tx_int_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_int", 4, "RW", 1,0 },
	{ TEST_CCU_TX_INT_MASK_REG, test_ccu_tx_int_mask_reg, "subsys_1588.centre_1588_pro.ccu_tx.ccu_tx_int_mask", 4, "RW", 1,0 },
	{ TEST_PTP_TX_PKTS_EN_REG, test_ptp_tx_pkts_en_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptp_tx_pkts_en", 7, "RW", 8,0x10 },
	{ TEST_TX_PORT_ASYM_COMP_REG, test_tx_port_asym_comp_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.tx_port_asym_comp", 3, "RW", 8,0x10 },
	{ TEST_PTPTX_CF_CALC_CTRL_REG, test_ptptx_cf_calc_ctrl_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptptx_cf_calc_ctrl", 1, "RW", 8,0x10 },
	{ TEST_PORT_TX_FRM_CNT_REG, test_port_tx_frm_cnt_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.port_tx_frm_cnt", 1, "R", 8,0x10 },
	{ TEST_PORT_TX_PTP_CNT_REG, test_port_tx_ptp_cnt_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.port_tx_ptp_cnt", 1, "R", 8,0x10 },
	{ TEST_PORT_TX_SSM_CNT_REG, test_port_tx_ssm_cnt_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.port_tx_ssm_cnt", 1, "R", 8,0x10 },
	{ TEST_PORT_TX_DROP_CNT_REG, test_port_tx_drop_cnt_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.port_tx_drop_cnt", 1, "R", 8,0x10 },
	{ TEST_PTPTX_2STEP_TS_CAP_REG, test_ptptx_2step_ts_cap_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptptx_2step_ts_cap", 2, "R", 8,0x10 },
	{ TEST_TX_PORT_BUF_TS_STATE_REG, test_tx_port_buf_ts_state_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.tx_port_buf_ts_state", 3, "R", 8,0x10 },
	{ TEST_PTP_TXOH_ALM_REG, test_ptp_txoh_alm_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptp_txoh_alm", 6, "R", 8,0x10 },
	{ TEST_PTP_TXOH_INT_REG, test_ptp_txoh_int_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptp_txoh_int", 6, "RW", 8,0x10 },
	{ TEST_PTP_TXOH_INT_MASK_REG, test_ptp_txoh_int_mask_reg, "subsys_1588.ptp_over_oh.ptp_tx_oh.ptp_txoh_int_mask", 6, "RW", 8,0x10 },
	{ TEST_SAR_RX_GLB_CFG_REG, test_sar_rx_glb_cfg_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_glb_cfg", 5, "RW", 1,0 },
	{ TEST_SAR_RX_CTRL_CFG_REG, test_sar_rx_ctrl_cfg_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_ctrl_cfg", 7, "RW", 80,0x1 },
	{ TEST_CPB2SAR_CFG4_REG, test_cpb2sar_cfg4_reg, "subsys_mac.b66sar.b66sar_rx.cpb2sar_cfg4", 2, "RW", 1,0 },
	{ TEST_CPB2SAR_CFG1_REG, test_cpb2sar_cfg1_reg, "subsys_mac.b66sar.b66sar_rx.cpb2sar_cfg1", 4, "RW", 1,0 },
	{ TEST_CPB2SAR_CFG2_REG, test_cpb2sar_cfg2_reg, "subsys_mac.b66sar.b66sar_rx.cpb2sar_cfg2", 5, "RW", 1,0 },
	{ TEST_CPB2SAR_CFG3_REG, test_cpb2sar_cfg3_reg, "subsys_mac.b66sar.b66sar_rx.cpb2sar_cfg3", 3, "RW", 1,0 },
	{ TEST_CPB2SAR_TABLE_SWITCH_REG, test_cpb2sar_table_switch_reg, "subsys_mac.b66sar.b66sar_rx.cpb2sar_table_switch", 5, "W", 1,0 },
	{ TEST_SAR_RX_PKT_CNT_REG, test_sar_rx_pkt_cnt_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_pkt_cnt", 1, "R", 1,0 },
	{ TEST_SAR_RX_PKT_CNT_256_REG, test_sar_rx_pkt_cnt_256_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_pkt_cnt_256", 1, "R", 1,0 },
	{ TEST_SAR_RX_STATE_REG, test_sar_rx_state_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_state", 8, "R", 1,0 },
	{ TEST_SAR_RX_GLB_ALM_REG, test_sar_rx_glb_alm_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_glb_alm", 8, "R", 1,0 },
	{ TEST_SAR_RX_CH_ALM_REG, test_sar_rx_ch_alm_reg, "subsys_mac.b66sar.b66sar_rx.sar_rx_ch_alm", 7, "R", 80,0x1 },
	{ TEST_B66SAR_RX_INT_REG, test_b66sar_rx_int_reg, "subsys_mac.b66sar.b66sar_rx.b66sar_rx_int", 2, "RW", 1,0 },
	{ TEST_B66SAR_RX_INT_MASK_REG, test_b66sar_rx_int_mask_reg, "subsys_mac.b66sar.b66sar_rx.b66sar_rx_int_mask", 2, "RW", 1,0 },
	{ TEST_RX_FIFO_ERR_INT_REG, test_rx_fifo_err_int_reg, "subsys_mac.b66sar.b66sar_rx.rx_fifo_err_int", 16, "RW", 5,0x1 },
	{ TEST_RX_FIFO_ERR_INT_MASK_REG, test_rx_fifo_err_int_mask_reg, "subsys_mac.b66sar.b66sar_rx.rx_fifo_err_int_mask", 16, "RW", 5,0x1 },
	{ TEST_REQ_GEN_M_REG, test_req_gen_m_reg, "subsys_inf_adp.bus_b.req_gen.req_gen_m", 1, "RW", 1,0 },
	{ TEST_BASE_M_REG, test_base_m_reg, "subsys_inf_adp.bus_b.req_gen.base_m", 1, "RW", 1,0 },
	{ TEST_REQ_GEN_CFG_REG, test_req_gen_cfg_reg, "subsys_inf_adp.bus_b.req_gen.req_gen_cfg", 2, "RW", 1,0 },
	{ TEST_OHIF_1588_SRC_DST_REG, test_ohif_1588_src_dst_reg, "subsys_inf_adp.bus_b.req_gen.ohif_1588_src_dst", 3, "RW", 1,0 },
	{ TEST_OHIF_1588_RATIO_REG, test_ohif_1588_ratio_reg, "subsys_inf_adp.bus_b.req_gen.ohif_1588_ratio", 1, "RW", 1,0 },
	{ TEST_OHIF_1588_RATE_LIMIT_M_REG, test_ohif_1588_rate_limit_m_reg, "subsys_inf_adp.bus_b.req_gen.ohif_1588_rate_limit_m", 1, "RW", 1,0 },
	{ TEST_OHIF_1588_RATE_LIMIT_BASE_M_REG, test_ohif_1588_rate_limit_base_m_reg, "subsys_inf_adp.bus_b.req_gen.ohif_1588_rate_limit_base_m", 1, "RW", 1,0 },
	{ TEST_OHIF_1588_RATE_LIMIT_RATIO_REG, test_ohif_1588_rate_limit_ratio_reg, "subsys_inf_adp.bus_b.req_gen.ohif_1588_rate_limit_ratio", 1, "RW", 1,0 },
	{ TEST_EXTRA_M_N_REG, test_extra_m_n_reg, "subsys_inf_adp.bus_b.req_gen.extra_m_n", 2, "RW", 1,0 },
	{ TEST_REQ_GEN_PLS_REG, test_req_gen_pls_reg, "subsys_inf_adp.bus_b.req_gen.req_gen_pls", 2, "W", 1,0 },
	{ TEST_REQ_GEN_STATE_REG, test_req_gen_state_reg, "subsys_inf_adp.bus_b.req_gen.req_gen_state", 3, "R", 1,0 },
	{ TEST_RX_MAP_TABLE_REG, test_rx_map_table_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.rx_map_table", 1, "RW", 1,0 },
	{ TEST_TS_DELTA_REG, test_ts_delta_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.ts_delta", 1, "RW", 8, 0x1 },
	{ TEST_MODE_CFG_REG, test_mode_cfg_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.mode_cfg", 5, "RW", 1,0 },
	{ TEST_LF_SEL_REG, test_lf_sel_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.lf_sel", 1, "RW", 1,0 },
	{ TEST_RX_PORT_RESTART_REG, test_rx_port_restart_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.rx_port_restart", 1, "RW", 1,0 },
	{ TEST_RX_GEARBOX_ALM_REG, test_rx_gearbox_alm_reg, "subsys_inf_adp.bus_a.inf_ch_adp_rx.rx_gearbox_alm", 2, "R", 1,0 },
};

/*******************************************define chip_ram*********************************************/
CHIP_RAM test_flexe_rx_biperr_ram =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0xa, 24,
};
CHIP_RAM test_flexe_rx_beierr_ram =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0xb, 24,
};
CHIP_RAM test_flexe_rx_sdcfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0xc, 60,
};
CHIP_RAM test_flexe_chid_ram =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0xd, 7,
};
CHIP_RAM test_flexe_rx_sfcfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0xe, 60,
};
CHIP_RAM test_flexe_oam_cnt =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x23, 64,
};
CHIP_RAM test_flexe_rx_sdbeicfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x5a, 60,
};
CHIP_RAM test_flexe_rx_sfbeicfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x64, 60,
};
CHIP_RAM test_flexe_reixc_cfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x65, 7,
};
CHIP_RAM test_flexe_base_oam =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x71, 64,
};
CHIP_RAM test_flexe_base_oam_cnt =
{
	TABLE_BASE_ADDR, FLEXE_OAM_RX_BASE_ADDR + 0x76, 64,
};
CHIP_RAM test_snap_ext =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x8, 64,
};
CHIP_RAM test_snap_ins =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x9, 64,
};
CHIP_RAM test_wr_cfg =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5a, 80,
};
CHIP_RAM test_rd_cfg_0 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5b, 4,
};
CHIP_RAM test_rd_cfg_1 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5c, 4,
};
CHIP_RAM test_rd_cfg_2 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5d, 4,
};
CHIP_RAM test_rd_cfg_3 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5e, 4,
};
CHIP_RAM test_rd_cfg_4 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x5f, 4,
};
CHIP_RAM test_rd_cfg_5 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x60, 4,
};
CHIP_RAM test_rd_cfg_6 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x61, 4,
};
CHIP_RAM test_rd_cfg_7 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x62, 4,
};
CHIP_RAM test_rd_cfg_8 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x63, 4,
};
CHIP_RAM test_rd_cfg_9 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0x64, 4,
};
CHIP_RAM test_wr_cfg_b =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xb6, 80,
};
CHIP_RAM test_rd_cfg_b_0 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xb7, 4,
};
CHIP_RAM test_rd_cfg_b_1 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xb8, 4,
};
CHIP_RAM test_rd_cfg_b_2 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xb9, 4,
};
CHIP_RAM test_rd_cfg_b_3 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xba, 4,
};
CHIP_RAM test_rd_cfg_b_4 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xbb, 4,
};
CHIP_RAM test_rd_cfg_b_5 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xbc, 4,
};
CHIP_RAM test_rd_cfg_b_6 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xbd, 4,
};
CHIP_RAM test_rd_cfg_b_7 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xbe, 4,
};
CHIP_RAM test_rd_cfg_b_8 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xbf, 4,
};
CHIP_RAM test_rd_cfg_b_9 =
{
	TABLE_BASE_ADDR, FLEXE_MUX_BASE_ADDR + 0xc0, 4,
};
CHIP_RAM test_swram_0 =
{
	TABLE_BASE_ADDR, B66SWITCH_BASE_ADDR + 0x0, 24,
};
CHIP_RAM test_swram_1 =
{
	TABLE_BASE_ADDR, B66SWITCH_BASE_ADDR + 0x1, 24,
};
CHIP_RAM test_swram_2 =
{
	TABLE_BASE_ADDR, B66SWITCH_BASE_ADDR + 0x2, 24,
};
CHIP_RAM test_soam_flexe_type_table =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x7 + SOH_DCI, 8,
};
CHIP_RAM test_soam_mac_type_table =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x8 + SOH_DCI, 8,
};
CHIP_RAM test_phymap_ins_cfg =
{
	TABLE_BASE_ADDR, FLEXE_OH_TX_BASE_ADDR + 0x20, 8,
};
CHIP_RAM test_cca_ins_cfg =
{
	TABLE_BASE_ADDR, FLEXE_OH_TX_BASE_ADDR + 0x21, 16,
};
CHIP_RAM test_ccb_ins_cfg =
{
	TABLE_BASE_ADDR, FLEXE_OH_TX_BASE_ADDR + 0x22, 16,
};

/*CPB_INGRESS*/
/*
CHIP_RAM test_cpb_in_sch_calendar =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x4, 6,
};
CHIP_RAM test_cpb_in_rx_pkt_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x3f, 64,
};
CHIP_RAM test_cpb_in_rx_sop_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x41, 64,
};
CHIP_RAM test_cpb_in_tx_pkt_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x53, 64,
};
CHIP_RAM test_cpb_in_tx_sop_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x54, 64,
};
CHIP_RAM test_adp_in_tx_sop_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x55, 64,
};
CHIP_RAM test_adp_in_tx_eop_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x56, 64,
};
CHIP_RAM test_cpb_in_rx_err_num =
{
	TABLE_BASE_ADDR, CPB_INGRESS_BASE_ADDR + 0x67, 64,
};
*/

CHIP_RAM test_test_flexe_oam_ins =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x0 + OHIF_ASIC1, 64,
};
CHIP_RAM test_test_mac_oam_ins =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x1 + OHIF_ASIC1, 64,
};
CHIP_RAM test_test_oh_ins =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x3 + OHIF_ASIC1, 66,
};
CHIP_RAM test_test_oh_exp =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x4 + OHIF_ASIC1, 66,
};
CHIP_RAM test_test_oh_ext =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x5 + OHIF_ASIC1, 66,
};
CHIP_RAM test_test_flexe_oam_exp =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x8 + OHIF_ASIC1, 64,
};
CHIP_RAM test_test_flexe_oam_ext =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0x9 + OHIF_ASIC1, 64,
};
CHIP_RAM test_test_mac_oam_exp =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0xa + OHIF_ASIC1, 64,
};
CHIP_RAM test_test_mac_oam_ext =
{
	TABLE_BASE_ADDR, OHOAM_EF_BASE_ADDR + 0xb + OHIF_ASIC1, 64,
};
CHIP_RAM test_phymap_rx =
{
	TABLE_BASE_ADDR, FLEXE_OH_RX_BASE_ADDR + 0x25, 8,
};
CHIP_RAM test_phymap_rx_exp =
{
	TABLE_BASE_ADDR, FLEXE_OH_RX_BASE_ADDR + 0x26, 8,
};
CHIP_RAM test_ccab_rx =
{
	TABLE_BASE_ADDR, FLEXE_OH_RX_BASE_ADDR + 0x27, 32,
};
CHIP_RAM test_cca_rx_exp =
{
	TABLE_BASE_ADDR, FLEXE_OH_RX_BASE_ADDR + 0x28, 16,
};
CHIP_RAM test_ccb_rx_exp =
{
	TABLE_BASE_ADDR, FLEXE_OH_RX_BASE_ADDR + 0x29, 16,
};
CHIP_RAM test_flexe_macrx_max_pkt =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xa0, 14,
};
CHIP_RAM test_flexe_macrx_decode_err_code =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xb0, 64,
};
CHIP_RAM test_flexe_macrx_total_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc0, 64,
};
CHIP_RAM test_flexe_macrx_good_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc1, 64,
};
CHIP_RAM test_flexe_macrx_bad_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc2, 64,
};
CHIP_RAM test_flexe_macrx_fragment_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc3, 64,
};
CHIP_RAM test_flexe_macrx_jabber_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc4, 64,
};
CHIP_RAM test_flexe_macrx_oversize_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc5, 64,
};
CHIP_RAM test_flexe_macrx_unicast_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc6, 64,
};
CHIP_RAM test_flexe_macrx_multicast_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc7, 64,
};
CHIP_RAM test_flexe_macrx_broadcast_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc8, 64,
};
CHIP_RAM test_flexe_macrx_b64_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xc9, 64,
};
CHIP_RAM test_flexe_macrx_b65_mpl_bytes =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xca, 64,
};
CHIP_RAM test_flexe_macrx_total_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd0, 64,
};
CHIP_RAM test_flexe_macrx_good_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd1, 64,
};
CHIP_RAM test_flexe_macrx_bad_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd2, 64,
};
CHIP_RAM test_flexe_macrx_fragment_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd3, 64,
};
CHIP_RAM test_flexe_macrx_jabber_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd4, 64,
};
CHIP_RAM test_flexe_macrx_oversize_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd5, 64,
};
CHIP_RAM test_flexe_macrx_unicast_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd6, 64,
};
CHIP_RAM test_flexe_macrx_multicast_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd7, 64,
};
CHIP_RAM test_flexe_macrx_broadcast_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd8, 64,
};
CHIP_RAM test_flexe_macrx_b64_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xd9, 64,
};
CHIP_RAM test_flexe_macrx_b65_mpl_frame =
{
	TABLE_BASE_ADDR, FLEXE_MACRX_BASE_ADDR + 0xda, 64,
};
CHIP_RAM test_flexe_tx_rescfg =
{
	TABLE_BASE_ADDR, FLEXE_OAM_TX_BASE_ADDR + 0x6f, 20,
};
CHIP_RAM test_map_ram =
{
	TABLE_BASE_ADDR, INF_CH_ADP_TX_BASE_ADDR + 0x10, 4,
};
CHIP_RAM test_wcfgram_0 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2a, 4,
};
CHIP_RAM test_wcfgram_1 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2b, 4,
};
CHIP_RAM test_wcfgram_2 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2c, 4,
};
CHIP_RAM test_wcfgram_3 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2d, 4,
};
CHIP_RAM test_wcfgram_4 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2e, 4,
};
CHIP_RAM test_wcfgram_5 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x2f, 4,
};
CHIP_RAM test_wcfgram_6 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x30, 4,
};
CHIP_RAM test_wcfgram_7 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x31, 4,
};
CHIP_RAM test_wcfgram_8 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x32, 4,
};
CHIP_RAM test_wcfgram_9 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x33, 4,
};
CHIP_RAM test_rdrule =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x36, 80,
};
CHIP_RAM test_chproperty =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0x37, 20,
};
CHIP_RAM test_wcfgram_b_0 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xaa, 4,
};
CHIP_RAM test_wcfgram_b_1 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xab, 4,
};
CHIP_RAM test_wcfgram_b_2 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xac, 4,
};
CHIP_RAM test_wcfgram_b_3 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xad, 4,
};
CHIP_RAM test_wcfgram_b_4 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xae, 4,
};
CHIP_RAM test_wcfgram_b_5 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xaf, 4,
};
CHIP_RAM test_wcfgram_b_6 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb0, 4,
};
CHIP_RAM test_wcfgram_b_7 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb1, 4,
};
CHIP_RAM test_wcfgram_b_8 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb2, 4,
};
CHIP_RAM test_wcfgram_b_9 =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb3, 4,
};
CHIP_RAM test_rdrule_b =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb6, 80,
};
CHIP_RAM test_chproperty_b =
{
	TABLE_BASE_ADDR, FLEXE_DEMUX_BASE_ADDR + 0xb7, 20,
};
CHIP_RAM test_flexe_1dm_test =
{
	TABLE_BASE_ADDR, OHOAM_EF_ASIC_BASE_ADDR + 0x7, 64,
};
CHIP_RAM test_mac_1dm_test =
{
	TABLE_BASE_ADDR, OHOAM_EF_ASIC_BASE_ADDR + 0x8, 64,
};
CHIP_RAM test_alm_pkt_rpt =
{
	TABLE_BASE_ADDR, OHOAM_EF_ASIC_BASE_ADDR + 0xb, 64,
};
CHIP_RAM test_bas_66sw_cfg =
{
	TABLE_BASE_ADDR, OHOAM_EF_ASIC_BASE_ADDR + 0xc, 64,
};
CHIP_RAM test_rx_biperr_ram =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0xa, 24,
};
CHIP_RAM test_rx_beierr_ram =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0xb, 24,
};
CHIP_RAM test_rx_sdcfg =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0xc, 60,
};
CHIP_RAM test_chid_ram =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0xd, 7,
};
CHIP_RAM test_rx_sfcfg =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0xe, 60,
};
CHIP_RAM test_oam_cnt =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x23, 64,
};
CHIP_RAM test_rx_sdbeicfg =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x5a, 60,
};
CHIP_RAM test_rx_sfbeicfg =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x64, 60,
};
CHIP_RAM test_reixc_cfg =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x65, 7,
};
CHIP_RAM test_base_oam =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x71, 64,
};
CHIP_RAM test_base_oam_cnt =
{
	TABLE_BASE_ADDR, OAM_RX_BASE_ADDR + 0x76, 64,
};
CHIP_RAM test_err_cnt_eg_tb =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x1, 64,
};
CHIP_RAM test_sop_in_cnt_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x2, 64,
};
CHIP_RAM test_sop_out_cnt_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x3, 64,
};
CHIP_RAM test_bp_low_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x4, 16,
};
CHIP_RAM test_start_blk_tb =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x5, 7,
};
CHIP_RAM test_next_blk_tb =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x6, 15,
};
CHIP_RAM test_full_depth_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x7, 16,
};
CHIP_RAM test_bp_level_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x8, 16,
};
CHIP_RAM test_rd_level_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0x9, 16,
};
CHIP_RAM test_cell_in_cnt_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0xa, 64,
};
CHIP_RAM test_cell_out_cnt_egress =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0xb, 64,
};
CHIP_RAM test_high_depth_eg =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0xc, 16,
};
CHIP_RAM test_low_depth_eg =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0xd, 16,
};
CHIP_RAM test_aempty_depth =
{
	TABLE_BASE_ADDR, CPB_EGRESS_BASE_ADDR + 0xe, 16,
};
CHIP_RAM test_ra2sar_ram =
{
	TABLE_BASE_ADDR, B66SAR_TX_BASE_ADDR + 0x52, 7,
};
CHIP_RAM test_macrx_max_pkt =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xa0, 14,
};
CHIP_RAM test_macrx_decode_err_code =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xb0, 64,
};
CHIP_RAM test_macrx_total_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc0, 64,
};
CHIP_RAM test_macrx_good_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc1, 64,
};
CHIP_RAM test_macrx_bad_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc2, 64,
};
CHIP_RAM test_macrx_fragment_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc3, 64,
};
CHIP_RAM test_macrx_jabber_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc4, 64,
};
CHIP_RAM test_macrx_oversize_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc5, 64,
};
CHIP_RAM test_macrx_unicast_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc6, 64,
};
CHIP_RAM test_macrx_multicast_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc7, 64,
};
CHIP_RAM test_macrx_broadcast_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc8, 64,
};
CHIP_RAM test_macrx_b64_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xc9, 64,
};
CHIP_RAM test_macrx_b65_mpl_bytes =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xca, 64,
};
CHIP_RAM test_macrx_total_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd0, 64,
};
CHIP_RAM test_macrx_good_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd1, 64,
};
CHIP_RAM test_macrx_bad_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd2, 64,
};
CHIP_RAM test_macrx_fragment_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd3, 64,
};
CHIP_RAM test_macrx_jabber_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd4, 64,
};
CHIP_RAM test_macrx_oversize_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd5, 64,
};
CHIP_RAM test_macrx_unicast_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd6, 64,
};
CHIP_RAM test_macrx_multicast_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd7, 64,
};
CHIP_RAM test_macrx_broadcast_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd8, 64,
};
CHIP_RAM test_macrx_b64_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xd9, 64,
};
CHIP_RAM test_macrx_b65_mpl_frame =
{
	TABLE_BASE_ADDR, MCMACRX_BASE_ADDR + 0xda, 64,
};
CHIP_RAM test_tx_rescfg =
{
	TABLE_BASE_ADDR, OAM_TX_BASE_ADDR + 0x6f, 20,
};
CHIP_RAM test_mactx_ts_config =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xa0, 7,
};
CHIP_RAM test_mactx_max_pkt =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xa1, 14,
};
CHIP_RAM test_mactx_decode_err_code =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xb0, 64,
};
CHIP_RAM test_mactx_encode_err_code =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xb1, 64,
};
CHIP_RAM test_mactx_total_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc0, 64,
};
CHIP_RAM test_mactx_good_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc1, 64,
};
CHIP_RAM test_mactx_bad_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc2, 64,
};
CHIP_RAM test_mactx_sar_fragment_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc4, 64,
};
CHIP_RAM test_mactx_sar_jabber_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc6, 64,
};
CHIP_RAM test_mactx_sar_oversize_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc7, 64,
};
CHIP_RAM test_mactx_unicast_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc8, 64,
};
CHIP_RAM test_mactx_multicast_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xc9, 64,
};
CHIP_RAM test_mactx_broadcast_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xca, 64,
};
CHIP_RAM test_mactx_b64_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xcb, 64,
};
CHIP_RAM test_mactx_b65_mpl_bytes =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xcc, 64,
};
CHIP_RAM test_mactx_total_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd0, 64,
};
CHIP_RAM test_mactx_good_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd1, 64,
};
CHIP_RAM test_mactx_bad_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd2, 64,
};
CHIP_RAM test_mactx_sar_fragment_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd4, 64,
};
CHIP_RAM test_mactx_sar_jabber_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd6, 64,
};
CHIP_RAM test_mactx_sar_oversize_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd7, 64,
};
CHIP_RAM test_mactx_unicast_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd8, 64,
};
CHIP_RAM test_mactx_multicast_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xd9, 64,
};
CHIP_RAM test_mactx_broadcast_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xda, 64,
};
CHIP_RAM test_mactx_b64_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xdb, 64,
};
CHIP_RAM test_mactx_b65_mpl_frame =
{
	TABLE_BASE_ADDR, MCMACTX_BASE_ADDR + 0xdc, 64,
};
CHIP_RAM test_cpb2sar_ram =
{
	TABLE_BASE_ADDR, B66SAR_RX_BASE_ADDR + 0x58, 7,
};
CHIP_RAM test_req_gen_ram =
{
	TABLE_BASE_ADDR, REQ_GEN_BASE_ADDR + 0x5, 7,
};

/*******************************************define all_ram*********************************************/
const TEST_CHIP_RAM all_ram[] =
{
	{ TEST_FLEXE_RX_BIPERR_RAM, &test_flexe_rx_biperr_ram, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_biperr_ram", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_RX_BEIERR_RAM, &test_flexe_rx_beierr_ram, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_beierr_ram", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_RX_SDCFG, &test_flexe_rx_sdcfg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdcfg", 80, "0x4e20000a0002", "RW", 1,0 },
	{ TEST_FLEXE_CHID_RAM, &test_flexe_chid_ram, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_chid_ram", 80, "0x0", "RW", 1,0 },
	{ TEST_FLEXE_RX_SFCFG, &test_flexe_rx_sfcfg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfcfg", 80, "0xc8000a0002", "RW", 1,0 },
	{ TEST_FLEXE_OAM_CNT, &test_flexe_oam_cnt, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_oam_cnt", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_RX_SDBEICFG, &test_flexe_rx_sdbeicfg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sdbeicfg", 80, "0x4e20000a0002", "RW", 1,0 },
	{ TEST_FLEXE_RX_SFBEICFG, &test_flexe_rx_sfbeicfg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_rx_sfbeicfg", 80, "0xc8000a0002", "RW", 1,0 },
	{ TEST_FLEXE_REIXC_CFG, &test_flexe_reixc_cfg, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_reixc_cfg", 80, "0x0", "RW", 1,0 },
	{ TEST_FLEXE_BASE_OAM, &test_flexe_base_oam, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_base_oam", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_BASE_OAM_CNT, &test_flexe_base_oam_cnt, "subsys_flexe.flexe_oam.flexe_oam_rx.flexe_base_oam_cnt", 80, "0x0", "R", 1,0 },
	{ TEST_SNAP_EXT, &test_snap_ext, "subsys_ohif.ohoam_ef.ohif_asic.snap_ext", 64, "0x0", "R", 1,0 },
	{ TEST_SNAP_INS, &test_snap_ins, "subsys_ohif.ohoam_ef.ohif_asic.snap_ins", 64, "0x0", "R", 1,0 },
	{ TEST_WR_CFG, &test_wr_cfg, "subsys_flexe.mux.flexe_mux.wr_cfg", 6400, "0xffffffffffffffffffff", "RW", 1,0 },
	{ TEST_RD_CFG_0, &test_rd_cfg_0, "subsys_flexe.mux.flexe_mux.rd_cfg_0", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_1, &test_rd_cfg_1, "subsys_flexe.mux.flexe_mux.rd_cfg_1", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_2, &test_rd_cfg_2, "subsys_flexe.mux.flexe_mux.rd_cfg_2", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_3, &test_rd_cfg_3, "subsys_flexe.mux.flexe_mux.rd_cfg_3", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_4, &test_rd_cfg_4, "subsys_flexe.mux.flexe_mux.rd_cfg_4", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_5, &test_rd_cfg_5, "subsys_flexe.mux.flexe_mux.rd_cfg_5", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_6, &test_rd_cfg_6, "subsys_flexe.mux.flexe_mux.rd_cfg_6", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_7, &test_rd_cfg_7, "subsys_flexe.mux.flexe_mux.rd_cfg_7", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_8, &test_rd_cfg_8, "subsys_flexe.mux.flexe_mux.rd_cfg_8", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_9, &test_rd_cfg_9, "subsys_flexe.mux.flexe_mux.rd_cfg_9", 80, "0xf", "RW", 1,0 },
	{ TEST_WR_CFG_B, &test_wr_cfg_b, "subsys_flexe.mux.flexe_mux.wr_cfg_b", 6400, "0xffffffffffffffffffff", "RW", 1,0 },
	{ TEST_RD_CFG_B_0, &test_rd_cfg_b_0, "subsys_flexe.mux.flexe_mux.rd_cfg_b_0", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_1, &test_rd_cfg_b_1, "subsys_flexe.mux.flexe_mux.rd_cfg_b_1", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_2, &test_rd_cfg_b_2, "subsys_flexe.mux.flexe_mux.rd_cfg_b_2", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_3, &test_rd_cfg_b_3, "subsys_flexe.mux.flexe_mux.rd_cfg_b_3", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_4, &test_rd_cfg_b_4, "subsys_flexe.mux.flexe_mux.rd_cfg_b_4", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_5, &test_rd_cfg_b_5, "subsys_flexe.mux.flexe_mux.rd_cfg_b_5", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_6, &test_rd_cfg_b_6, "subsys_flexe.mux.flexe_mux.rd_cfg_b_6", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_7, &test_rd_cfg_b_7, "subsys_flexe.mux.flexe_mux.rd_cfg_b_7", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_8, &test_rd_cfg_b_8, "subsys_flexe.mux.flexe_mux.rd_cfg_b_8", 80, "0xf", "RW", 1,0 },
	{ TEST_RD_CFG_B_9, &test_rd_cfg_b_9, "subsys_flexe.mux.flexe_mux.rd_cfg_b_9", 80, "0xf", "RW", 1,0 },
	{ TEST_SWRAM_0, &test_swram_0, "subsys_66bsw.b66switch.b66switch_table.swram_0", 82, "0x0", "RW", 1,0 },
	{ TEST_SWRAM_1, &test_swram_1, "subsys_66bsw.b66switch.b66switch_table.swram_1", 82, "0x0", "RW", 1,0 },
	{ TEST_SWRAM_2, &test_swram_2, "subsys_66bsw.b66switch.b66switch_table.swram_2", 82, "0x0", "RW", 1,0 },
	{ TEST_SOAM_FLEXE_TYPE_TABLE, &test_soam_flexe_type_table, "subsys_ohif.ohoam_ef.soh_dci.soam_flexe_type_table", 64, "0x0", "RW", 1,0 },
	{ TEST_SOAM_MAC_TYPE_TABLE, &test_soam_mac_type_table, "subsys_ohif.ohoam_ef.soh_dci.soam_mac_type_table", 64, "0x0", "RW", 1,0 },
	{ TEST_PHYMAP_INS_CFG, &test_phymap_ins_cfg, "subsys_flexe_oh.flexe_oh.oh_tx.phymap_ins_cfg", 32, "0x0", "RW", 8, 0x40 },
	{ TEST_CCA_INS_CFG, &test_cca_ins_cfg, "subsys_flexe_oh.flexe_oh.oh_tx.cca_ins_cfg", 32, "0x0", "RW", 8, 0x40 },
	{ TEST_CCB_INS_CFG, &test_ccb_ins_cfg, "subsys_flexe_oh.flexe_oh.oh_tx.ccb_ins_cfg", 32, "0x0", "RW", 8, 0x40 },
	{ TEST_PHYMAP_RX, &test_phymap_rx, "subsys_flexe_oh.flexe_oh.oh_rx.phymap_rx", 32, "0x0", "R", 8,0x40 },
	{ TEST_PHYMAP_RX_EXP, &test_phymap_rx_exp, "subsys_flexe_oh.flexe_oh.oh_rx.phymap_rx_exp", 32, "0x0", "RW", 8, 0x40 },
	{ TEST_CCAB_RX, &test_ccab_rx, "subsys_flexe_oh.flexe_oh.oh_rx.ccab_rx", 20, "0x0", "R", 8, 0x40 },
	{ TEST_CCA_RX_EXP, &test_cca_rx_exp, "subsys_flexe_oh.flexe_oh.oh_rx.cca_rx_exp", 20, "0x0", "RW", 8, 0x40 },
	{ TEST_CCB_RX_EXP, &test_ccb_rx_exp, "subsys_flexe_oh.flexe_oh.oh_rx.ccb_rx_exp", 20, "0x0", "RW", 8, 0x40 },
	{ TEST_FLEXE_MACRX_MAX_PKT, &test_flexe_macrx_max_pkt, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_max_pkt", 80, "0x0", "RW", 1,0 },
	{ TEST_FLEXE_MACRX_DECODE_ERR_CODE, &test_flexe_macrx_decode_err_code, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_decode_err_code", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_TOTAL_BYTES, &test_flexe_macrx_total_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_total_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_GOOD_BYTES, &test_flexe_macrx_good_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_good_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_BAD_BYTES, &test_flexe_macrx_bad_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_bad_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_BYTES, &test_flexe_macrx_fragment_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_fragment_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_JABBER_BYTES, &test_flexe_macrx_jabber_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_jabber_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_BYTES, &test_flexe_macrx_oversize_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_oversize_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_UNICAST_BYTES, &test_flexe_macrx_unicast_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_unicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_MULTICAST_BYTES, &test_flexe_macrx_multicast_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_multicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_BROADCAST_BYTES, &test_flexe_macrx_broadcast_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_broadcast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_B64_BYTES, &test_flexe_macrx_b64_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_b64_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_B65_MPL_BYTES, &test_flexe_macrx_b65_mpl_bytes, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_b65_mpl_bytes", 720, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_TOTAL_FRAME, &test_flexe_macrx_total_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_total_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_GOOD_FRAME, &test_flexe_macrx_good_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_good_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_BAD_FRAME, &test_flexe_macrx_bad_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_bad_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_FRAGMENT_FRAME, &test_flexe_macrx_fragment_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_fragment_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_JABBER_FRAME, &test_flexe_macrx_jabber_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_jabber_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_OVERSIZE_FRAME, &test_flexe_macrx_oversize_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_oversize_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_UNICAST_FRAME, &test_flexe_macrx_unicast_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_unicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_MULTICAST_FRAME, &test_flexe_macrx_multicast_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_multicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_BROADCAST_FRAME, &test_flexe_macrx_broadcast_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_broadcast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_B64_FRAME, &test_flexe_macrx_b64_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_b64_frame", 80, "0x0", "R", 1,0 },
	{ TEST_FLEXE_MACRX_B65_MPL_FRAME, &test_flexe_macrx_b65_mpl_frame, "subsys_flexe.flexe_mac.flexe_macrx.flexe_macrx_b65_mpl_frame", 720, "0x0", "R", 1,0 },
	{ TEST_FLEXE_TX_RESCFG, &test_flexe_tx_rescfg, "subsys_flexe.flexe_oam.flexe_oam_tx.flexe_tx_rescfg", 80, "0x0", "RW", 1,0 },
	{ TEST_MAP_RAM, &test_map_ram, "subsys_inf_adp.bus_a.inf_ch_adp_tx.map_ram", 80, "0xf", "RW", 1,0 },
	{ TEST_WCFGRAM_0, &test_wcfgram_0, "subsys_flexe.demux.flexe_demux.wcfgram_0", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_1, &test_wcfgram_1, "subsys_flexe.demux.flexe_demux.wcfgram_1", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_2, &test_wcfgram_2, "subsys_flexe.demux.flexe_demux.wcfgram_2", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_3, &test_wcfgram_3, "subsys_flexe.demux.flexe_demux.wcfgram_3", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_4, &test_wcfgram_4, "subsys_flexe.demux.flexe_demux.wcfgram_4", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_5, &test_wcfgram_5, "subsys_flexe.demux.flexe_demux.wcfgram_5", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_6, &test_wcfgram_6, "subsys_flexe.demux.flexe_demux.wcfgram_6", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_7, &test_wcfgram_7, "subsys_flexe.demux.flexe_demux.wcfgram_7", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_8, &test_wcfgram_8, "subsys_flexe.demux.flexe_demux.wcfgram_8", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_9, &test_wcfgram_9, "subsys_flexe.demux.flexe_demux.wcfgram_9", 80, "0x0", "RW", 1,0 },
	{ TEST_RDRULE, &test_rdrule, "subsys_flexe.demux.flexe_demux.rdrule", 6400, "0x0", "RW", 1,0 },
	{ TEST_CHPROPERTY, &test_chproperty, "subsys_flexe.demux.flexe_demux.chproperty", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_0, &test_wcfgram_b_0, "subsys_flexe.demux.flexe_demux.wcfgram_b_0", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_1, &test_wcfgram_b_1, "subsys_flexe.demux.flexe_demux.wcfgram_b_1", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_2, &test_wcfgram_b_2, "subsys_flexe.demux.flexe_demux.wcfgram_b_2", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_3, &test_wcfgram_b_3, "subsys_flexe.demux.flexe_demux.wcfgram_b_3", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_4, &test_wcfgram_b_4, "subsys_flexe.demux.flexe_demux.wcfgram_b_4", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_5, &test_wcfgram_b_5, "subsys_flexe.demux.flexe_demux.wcfgram_b_5", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_6, &test_wcfgram_b_6, "subsys_flexe.demux.flexe_demux.wcfgram_b_6", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_7, &test_wcfgram_b_7, "subsys_flexe.demux.flexe_demux.wcfgram_b_7", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_8, &test_wcfgram_b_8, "subsys_flexe.demux.flexe_demux.wcfgram_b_8", 80, "0x0", "RW", 1,0 },
	{ TEST_WCFGRAM_B_9, &test_wcfgram_b_9, "subsys_flexe.demux.flexe_demux.wcfgram_b_9", 80, "0x0", "RW", 1,0 },
	{ TEST_RDRULE_B, &test_rdrule_b, "subsys_flexe.demux.flexe_demux.rdrule_b", 6400, "0x0", "RW", 1,0 },
	{ TEST_CHPROPERTY_B, &test_chproperty_b, "subsys_flexe.demux.flexe_demux.chproperty_b", 80, "0x0", "RW", 1,0 },
	{ TEST_RX_BIPERR_RAM, &test_rx_biperr_ram, "subsys_mac.oam.oam_rx.rx_biperr_ram", 80, "0x0", "R", 1,0 },
	{ TEST_RX_BEIERR_RAM, &test_rx_beierr_ram, "subsys_mac.oam.oam_rx.rx_beierr_ram", 80, "0x0", "R", 1,0 },
	{ TEST_RX_SDCFG, &test_rx_sdcfg, "subsys_mac.oam.oam_rx.rx_sdcfg", 80, "0x4e20000a0002", "RW", 1,0 },
	{ TEST_CHID_RAM, &test_chid_ram, "subsys_mac.oam.oam_rx.chid_ram", 80, "0x0", "RW", 1,0 },
	{ TEST_RX_SFCFG, &test_rx_sfcfg, "subsys_mac.oam.oam_rx.rx_sfcfg", 80, "0xc8000a0002", "RW", 1,0 },
	{ TEST_OAM_CNT, &test_oam_cnt, "subsys_mac.oam.oam_rx.oam_cnt", 80, "0x0", "R", 1,0 },
	{ TEST_RX_SDBEICFG, &test_rx_sdbeicfg, "subsys_mac.oam.oam_rx.rx_sdbeicfg", 80, "0x4e20000a0002", "RW", 1,0 },
	{ TEST_RX_SFBEICFG, &test_rx_sfbeicfg, "subsys_mac.oam.oam_rx.rx_sfbeicfg", 80, "0xc8000a0002", "RW", 1,0 },
	{ TEST_REIXC_CFG, &test_reixc_cfg, "subsys_mac.oam.oam_rx.reixc_cfg", 80, "0x0", "RW", 1,0 },
	{ TEST_BASE_OAM, &test_base_oam, "subsys_mac.oam.oam_rx.base_oam", 80, "0x0", "R", 1,0 },
	{ TEST_BASE_OAM_CNT, &test_base_oam_cnt, "subsys_mac.oam.oam_rx.base_oam_cnt", 80, "0x0", "R", 1,0 },
	{ TEST_ERR_CNT_EG_TB, &test_err_cnt_eg_tb, "subsys_mac.cpb_egress_mac.cpb_egress.err_cnt_eg_tb", 80, "0x0", "R", 1,0 },
	{ TEST_SOP_IN_CNT_EGRESS, &test_sop_in_cnt_egress, "subsys_mac.cpb_egress_mac.cpb_egress.sop_in_cnt_egress", 80, "0x0", "R", 1,0 },
	{ TEST_SOP_OUT_CNT_EGRESS, &test_sop_out_cnt_egress, "subsys_mac.cpb_egress_mac.cpb_egress.sop_out_cnt_egress", 80, "0x0", "R", 1,0 },
	{ TEST_BP_LOW_EGRESS, &test_bp_low_egress, "subsys_mac.cpb_egress_mac.cpb_egress.bp_low_egress", 80, "0x4c", "RW", 1,0 },
	{ TEST_START_BLK_TB, &test_start_blk_tb, "subsys_mac.cpb_egress_mac.cpb_egress.start_blk_tb", 80, "0x7f", "RW", 1,0 },
	{ TEST_NEXT_BLK_TB, &test_next_blk_tb, "subsys_mac.cpb_egress_mac.cpb_egress.next_blk_tb", 80, "0x7f", "RW", 1,0 },
	{ TEST_FULL_DEPTH_EGRESS, &test_full_depth_egress, "subsys_mac.cpb_egress_mac.cpb_egress.full_depth_egress", 80, "0x80", "RW", 1,0 },
	{ TEST_BP_LEVEL_EGRESS, &test_bp_level_egress, "subsys_mac.cpb_egress_mac.cpb_egress.bp_level_egress", 80, "0x50", "RW", 1,0 },
	{ TEST_RD_LEVEL_EGRESS, &test_rd_level_egress, "subsys_mac.cpb_egress_mac.cpb_egress.rd_level_egress", 80, "0x38", "RW", 1,0 },
	{ TEST_CELL_IN_CNT_EGRESS, &test_cell_in_cnt_egress, "subsys_mac.cpb_egress_mac.cpb_egress.cell_in_cnt_egress", 80, "0x0", "R", 1,0 },
	{ TEST_CELL_OUT_CNT_EGRESS, &test_cell_out_cnt_egress, "subsys_mac.cpb_egress_mac.cpb_egress.cell_out_cnt_egress", 80, "0x0", "R", 1,0 },
	{ TEST_HIGH_DEPTH_EG, &test_high_depth_eg, "subsys_mac.cpb_egress_mac.cpb_egress.high_depth_eg", 80, "0x40", "RW", 1,0 },
	{ TEST_LOW_DEPTH_EG, &test_low_depth_eg, "subsys_mac.cpb_egress_mac.cpb_egress.low_depth_eg", 80, "0x30", "RW", 1,0 },
	{ TEST_AEMPTY_DEPTH, &test_aempty_depth, "subsys_mac.cpb_egress_mac.cpb_egress.aempty_depth", 80, "0x8", "RW", 1,0 },
	{ TEST_RA2SAR_RAM, &test_ra2sar_ram, "subsys_mac.b66sar.b66sar_tx.ra2sar_ram", 160, "0x7f", "RW", 1,0 },
	{ TEST_MACRX_MAX_PKT, &test_macrx_max_pkt, "subsys_mac.mac.mcmacrx.macrx_max_pkt", 80, "0x0", "RW", 1,0 },
	{ TEST_MACRX_DECODE_ERR_CODE, &test_macrx_decode_err_code, "subsys_mac.mac.mcmacrx.macrx_decode_err_code", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_TOTAL_BYTES, &test_macrx_total_bytes, "subsys_mac.mac.mcmacrx.macrx_total_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_GOOD_BYTES, &test_macrx_good_bytes, "subsys_mac.mac.mcmacrx.macrx_good_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_BAD_BYTES, &test_macrx_bad_bytes, "subsys_mac.mac.mcmacrx.macrx_bad_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_FRAGMENT_BYTES, &test_macrx_fragment_bytes, "subsys_mac.mac.mcmacrx.macrx_fragment_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_JABBER_BYTES, &test_macrx_jabber_bytes, "subsys_mac.mac.mcmacrx.macrx_jabber_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_OVERSIZE_BYTES, &test_macrx_oversize_bytes, "subsys_mac.mac.mcmacrx.macrx_oversize_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_UNICAST_BYTES, &test_macrx_unicast_bytes, "subsys_mac.mac.mcmacrx.macrx_unicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_MULTICAST_BYTES, &test_macrx_multicast_bytes, "subsys_mac.mac.mcmacrx.macrx_multicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_BROADCAST_BYTES, &test_macrx_broadcast_bytes, "subsys_mac.mac.mcmacrx.macrx_broadcast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_B64_BYTES, &test_macrx_b64_bytes, "subsys_mac.mac.mcmacrx.macrx_b64_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_B65_MPL_BYTES, &test_macrx_b65_mpl_bytes, "subsys_mac.mac.mcmacrx.macrx_b65_mpl_bytes", 720, "0x0", "R", 1,0 },
	{ TEST_MACRX_TOTAL_FRAME, &test_macrx_total_frame, "subsys_mac.mac.mcmacrx.macrx_total_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_GOOD_FRAME, &test_macrx_good_frame, "subsys_mac.mac.mcmacrx.macrx_good_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_BAD_FRAME, &test_macrx_bad_frame, "subsys_mac.mac.mcmacrx.macrx_bad_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_FRAGMENT_FRAME, &test_macrx_fragment_frame, "subsys_mac.mac.mcmacrx.macrx_fragment_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_JABBER_FRAME, &test_macrx_jabber_frame, "subsys_mac.mac.mcmacrx.macrx_jabber_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_OVERSIZE_FRAME, &test_macrx_oversize_frame, "subsys_mac.mac.mcmacrx.macrx_oversize_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_UNICAST_FRAME, &test_macrx_unicast_frame, "subsys_mac.mac.mcmacrx.macrx_unicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_MULTICAST_FRAME, &test_macrx_multicast_frame, "subsys_mac.mac.mcmacrx.macrx_multicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_BROADCAST_FRAME, &test_macrx_broadcast_frame, "subsys_mac.mac.mcmacrx.macrx_broadcast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_B64_FRAME, &test_macrx_b64_frame, "subsys_mac.mac.mcmacrx.macrx_b64_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACRX_B65_MPL_FRAME, &test_macrx_b65_mpl_frame, "subsys_mac.mac.mcmacrx.macrx_b65_mpl_frame", 720, "0x0", "R", 1,0 },
	{ TEST_TX_RESCFG, &test_tx_rescfg, "subsys_mac.oam.oam_tx.tx_rescfg", 80, "0x0", "RW", 1,0 },
	{ TEST_MACTX_TS_CONFIG, &test_mactx_ts_config, "subsys_mac.mac.mcmactx.mactx_ts_config", 80, "0x0", "RW", 1,0 },
	{ TEST_MACTX_MAX_PKT, &test_mactx_max_pkt, "subsys_mac.mac.mcmactx.mactx_max_pkt", 80, "0x0", "RW", 1,0 },
	{ TEST_MACTX_DECODE_ERR_CODE, &test_mactx_decode_err_code, "subsys_mac.mac.mcmactx.mactx_decode_err_code", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_ENCODE_ERR_CODE, &test_mactx_encode_err_code, "subsys_mac.mac.mcmactx.mactx_encode_err_code", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_TOTAL_BYTES, &test_mactx_total_bytes, "subsys_mac.mac.mcmactx.mactx_total_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_GOOD_BYTES, &test_mactx_good_bytes, "subsys_mac.mac.mcmactx.mactx_good_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_BAD_BYTES, &test_mactx_bad_bytes, "subsys_mac.mac.mcmactx.mactx_bad_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_FRAGMENT_BYTES, &test_mactx_sar_fragment_bytes, "subsys_mac.mac.mcmactx.mactx_sar_fragment_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_JABBER_BYTES, &test_mactx_sar_jabber_bytes, "subsys_mac.mac.mcmactx.mactx_sar_jabber_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_OVERSIZE_BYTES, &test_mactx_sar_oversize_bytes, "subsys_mac.mac.mcmactx.mactx_sar_oversize_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_UNICAST_BYTES, &test_mactx_unicast_bytes, "subsys_mac.mac.mcmactx.mactx_unicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_MULTICAST_BYTES, &test_mactx_multicast_bytes, "subsys_mac.mac.mcmactx.mactx_multicast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_BROADCAST_BYTES, &test_mactx_broadcast_bytes, "subsys_mac.mac.mcmactx.mactx_broadcast_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_B64_BYTES, &test_mactx_b64_bytes, "subsys_mac.mac.mcmactx.mactx_b64_bytes", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_B65_MPL_BYTES, &test_mactx_b65_mpl_bytes, "subsys_mac.mac.mcmactx.mactx_b65_mpl_bytes", 720, "0x0", "R", 1,0 },
	{ TEST_MACTX_TOTAL_FRAME, &test_mactx_total_frame, "subsys_mac.mac.mcmactx.mactx_total_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_GOOD_FRAME, &test_mactx_good_frame, "subsys_mac.mac.mcmactx.mactx_good_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_BAD_FRAME, &test_mactx_bad_frame, "subsys_mac.mac.mcmactx.mactx_bad_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_FRAGMENT_FRAME, &test_mactx_sar_fragment_frame, "subsys_mac.mac.mcmactx.mactx_sar_fragment_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_JABBER_FRAME, &test_mactx_sar_jabber_frame, "subsys_mac.mac.mcmactx.mactx_sar_jabber_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_SAR_OVERSIZE_FRAME, &test_mactx_sar_oversize_frame, "subsys_mac.mac.mcmactx.mactx_sar_oversize_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_UNICAST_FRAME, &test_mactx_unicast_frame, "subsys_mac.mac.mcmactx.mactx_unicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_MULTICAST_FRAME, &test_mactx_multicast_frame, "subsys_mac.mac.mcmactx.mactx_multicast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_BROADCAST_FRAME, &test_mactx_broadcast_frame, "subsys_mac.mac.mcmactx.mactx_broadcast_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_B64_FRAME, &test_mactx_b64_frame, "subsys_mac.mac.mcmactx.mactx_b64_frame", 80, "0x0", "R", 1,0 },
	{ TEST_MACTX_B65_MPL_FRAME, &test_mactx_b65_mpl_frame, "subsys_mac.mac.mcmactx.mactx_b65_mpl_frame", 720, "0x0", "R", 1,0 },
	{ TEST_CPB2SAR_RAM, &test_cpb2sar_ram, "subsys_mac.b66sar.b66sar_rx.cpb2sar_ram", 160, "0x7f", "RW", 1,0 },
	{ TEST_REQ_GEN_RAM, &test_req_gen_ram, "subsys_inf_adp.bus_b.req_gen.req_gen_ram", 162, "0x7f", "RW", 1,0 },
};
#ifdef __cplusplus
extern "C"
{
#endif

extern int test_reg_field_write(UINT_8 chip_id, UINT_32 reg_no, UINT_32 field_no, UINT_32 parameter);
extern UINT_32 test_reg_field_read(UINT_8 chip_id, UINT_32 reg_no, UINT_32 field_no);
extern int test_reg_write(UINT_8 chip_id, UINT_32 reg_no, UINT_32 field_no, UINT_32 parameter);
extern int test_reg_read(UINT_8 chip_id, UINT_32 reg_no, UINT_32 field_no, UINT_32* parameter);
extern int StringToHex(const char *str, unsigned char *out, unsigned int *outlen);
extern int U8toU32(UINT_8* input, UINT_32* output, UINT_32 cnt);
extern int test_ram_write(UINT_8 chip_id, UINT_32 ram_no, UINT_32 offset_addr, UINT_32 parameter1, UINT_32 parameter2, UINT_32 parameter3);
extern UINT_32* test_ram_read(UINT_8 chip_id, UINT_32 ram_no, UINT_32 offset_addr);
extern int test_all_reg_read(UINT_8 chip_id);
extern int test_all_reg_write(UINT_8 chip_id);
extern int test_all_reg_rw(UINT_8 chip_id);
extern int test_all_reg(UINT_8 chip_id);
extern int test_dump_reg(UINT_8 chip_id);
extern int test_dump_part_reg(UINT_8 chip_id, UINT_32 reg_num);
extern int test_all_ram_read(UINT_8 chip_id, UINT_32 offset);
extern int test_all_ram_write(UINT_8 chip_id, UINT_32 offset);
extern int test_all_ram_rw(UINT_8 chip_id, UINT_32 offset, UINT_32 parameter);
extern int test_dump_ram(UINT_8 chip_id, UINT_32 offset);
extern int test_dump_part_ram(UINT_8 chip_id, UINT_32 ram_num, UINT_32 offset);
extern int set_ram_wr_data(UINT_32 parameter1, UINT_32 parameter2, UINT_32 parameter3);

extern int test_reg_all_field_read(UINT_8 chip_id, UINT_32 reg_no);

#ifdef __cplusplus
}
#endif


#endif

