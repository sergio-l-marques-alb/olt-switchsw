<?xml version="1.0"?>
<device_data lib="dnx_data" device="jr2_a0"  module="field">
    <includes>
        <include>bcm_int/dnx/field/field_context.h</include>
        <include>bcm_int/dnx/field/field_map.h</include>
        <include>shared/utilex/utilex_integer_arithmetic.h</include>
    </includes>
    
    <!--
        The following submodule only exists because we cannot use DNX DATA pointers (DATA()) from a table's entry for define (but we can for numerical).
    -->
    <sub_module name="base_ipmf1">
        <defines>
            <!--
                Definitions related to FFC Groups. Begin
            -->
            <define name="nof_ffc" value="64"></define>
            <define name="nof_ffc_groups" value="4"></define>
            <define name="ffc_group_one_lower" value="0"></define>
            <define name="ffc_group_one_upper" value="15"></define>
            <define name="ffc_group_two_lower" value="16"></define>
            <define name="ffc_group_two_upper" value="31"></define>
            <define name="ffc_group_three_lower" value="32"></define>
            <define name="ffc_group_three_upper" value="47"></define>
            <define name="ffc_group_four_lower" value="48"></define>
            <define name="ffc_group_four_upper" value="63"></define>
            <!--
                Definitions related to FFC Groups. End
            -->
            <define name="nof_keys" value="10"></define>
            <define name="nof_keys_alloc" value="5"></define>
            <define name="nof_keys_alloc_for_tcam" value="4"></define>
            <define name="nof_keys_alloc_for_exem" value="1"></define>
            <define name="nof_keys_alloc_for_mdb_dt" value="1"></define>
            <define name="nof_masks_per_fes" value="4"></define>
            <define name="nof_fes_id_per_array" value="16"></define>
            <define name="nof_fes_array" value="2"></define>
            <define name="nof_fes_instruction_per_context" value="(DATA(field, base_ipmf1, nof_fes_id_per_array)*DATA(field, base_ipmf1, nof_fes_array))"></define>
            <define name="nof_fes_programs" value="32"></define>
            <define name="nof_prog_per_fes" value="4"></define>
            <define name="program_selection_cam_mask_nof_bits" value="95"></define>
            <define name="cs_container_5_selected_bits_size" value="9"></define>
            <define name="nof_cs_lines" value="128"></define>
            <define name="nof_contexts" value="64"></define>
            <define name="nof_link_profiles" value="32"></define>
            <define name="nof_actions" value="128"></define>
            <define name="nof_qualifiers" value="128"></define>
            <define name="nof_80B_zones" value="2"></define>
            <define name="nof_key_zones" value="4"></define>
            <define name="nof_key_zone_bits" value="80"></define>
            <define name="nof_bits_in_fes_action" value="32"></define>
            <define name="nof_bits_in_fes_key_select" value="64"></define>
            <define name="nof_fes_key_selects_on_one_actions_line" value="3"></define>
            <!--
                Definitions related to FEM. Begin
            -->
            <define name="fem_condition_ms_bit_min_value" value="3"></define>
            <define name="fem_condition_ms_bit_max_value" value="31"></define>
            <define name="nof_bits_in_fem_programs" value="2"></define>
            <!--
                This 4 letters combination '& l t ;' stand for the 'less than' sign which may not be used as is
                because it is a basic XML character. When two consequent such combinations are used, it
                results in 'shift left' sign.
            -->
            <define name="nof_fem_programs" value="1 &lt;&lt; DATA(field, base_ipmf1, nof_bits_in_fem_programs)"></define>
            <define name="log_nof_bits_in_fem_key_select" value="5"></define>
            <define name="nof_bits_in_fem_key_select" value="1 &lt;&lt; DATA(field, base_ipmf1, log_nof_bits_in_fem_key_select)"></define>
            <define name="fem_key_select_resolution_in_bits" value="16"></define>
            <define name="log_nof_bits_in_fem_map_data_field" value="2"></define>
            <define name="nof_bits_in_fem_map_data_field" value="1 &lt;&lt; DATA(field, base_ipmf1, log_nof_bits_in_fem_map_data_field)"></define>
            <define name="nof_bits_in_fem_action_fems_2_15" value="24"></define>
            <define name="nof_bits_in_fem_action_fems_0_1" value="4"></define>
            <define name="nof_bits_in_fem_action" value="UTILEX_MAX(DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_2_15), DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_0_1))"></define>
            <define name="nof_bits_in_fem_condition" value="4"></define>
            <define name="nof_fem_condition" value="1 &lt;&lt; DATA(field, base_ipmf1, nof_bits_in_fem_condition)"></define>
            <define name="nof_bits_in_fem_map_index" value="2"></define>
            <define name="nof_fem_map_index" value="1 &lt;&lt; DATA(field, base_ipmf1, nof_bits_in_fem_map_index)"></define>
            <define name="nof_bits_in_fem_id" value="4"></define>
            <define name="nof_fem_id" value="1 &lt;&lt; DATA(field, base_ipmf1, nof_bits_in_fem_id)"></define>
            <define name="num_fems_with_short_action" value="2"></define>
            <define name="num_bits_in_fem_field_select" value="6"></define>
            <define name="nof_fem_id_per_array" value="8"></define>
            <define name="nof_fem_array" value="2"></define>
            <define name="nof_fems_per_context" value="DATA(field, base_ipmf1, nof_fem_id_per_array) * DATA(field, base_ipmf1, nof_fem_array)"></define>
            <!--
                Definitions related to FEM. End
            -->
            <define name="default_strength" value="5"></define>
            <define name="nof_compare_pairs_in_compare_mode" value="2"></define>
            <define name="nof_compare_keys_in_compare_mode" value="2"></define>
            <define name="compare_key_size" value="32"></define>
            <define name="nof_l4_ops_ranges_legacy" value="24"></define>
            <define name="nof_ext_l4_ops_ranges" value="0"></define>
            <define name="nof_pkt_hdr_ranges" value="3"></define>
            <define name="nof_out_lif_ranges" value="3"></define>
            <define name="fes_key_select_for_zero_bit" value="16"></define>
            <define name="fes_shift_for_zero_bit" value="0"></define>
            <define name="cmp_selection" value="0xF"></define>
            <define name="fes_instruction_size" value="11"></define>
            <define name="fes_pgm_id_offset" value="6"></define>
        </defines>
    </sub_module>

    <!--
        The following submodule only exists because we cannot use DNX DATA pointers (DATA()) from a table's entry for define (but we can for numerical).
    -->
    <sub_module name="base_ipmf2">
        <defines>
            <!--
                Definitions related to FFC Groups. Begin
            -->
            <define name="nof_ffc" value="32"></define>
            <define name="nof_ffc_groups" value="1"></define>
            <define name="ffc_group_one_lower" value="0"></define>
            <define name="ffc_group_one_upper" value="31"></define>
            <!--
                Definitions related to FFC Groups. End
            -->
            <define name="nof_keys" value="5"></define>
            <define name="nof_keys_alloc" value="5"></define>
            <define name="nof_keys_alloc_for_tcam" value="4"></define>
            <define name="nof_keys_alloc_for_exem" value="1"></define>
            <define name="nof_keys_alloc_for_dir_ext" value="2"></define>
            <define name="nof_keys_alloc_for_mdb_dt" value="1"></define>
            <define name="nof_masks_per_fes" value="4"></define>
            <define name="nof_fes_id_per_array" value="16"></define>
            <define name="nof_fes_array" value="2"></define>
            <define name="nof_fes_instruction_per_context" value="(DATA(field, base_ipmf2, nof_fes_id_per_array)*DATA(field, base_ipmf2, nof_fes_array))"></define>
            <define name="nof_cs_lines" value="128"></define>
            <define name="nof_contexts" value="64"></define>
            <define name="program_selection_cam_mask_nof_bits" value="95"></define>
            <define name="nof_qualifiers" value="128"></define>
            <define name="nof_80B_zones" value="2"></define>
            <define name="nof_key_zones" value="4"></define>
            <define name="nof_key_zone_bits" value="80"></define>
            <define name="fes_key_select_for_zero_bit" value="16"></define>
            <define name="fes_shift_for_zero_bit" value="0"></define>
        </defines>
    </sub_module>

    <!--
        The following submodule only exists because we cannot use DNX DATA pointers (DATA()) from a table's entry for define (but we can for numerical).
    -->
    <sub_module name="base_ipmf3">
        <defines>
            
            <!--
                Definitions related to FFC Groups. Begin
            -->
            <define name="nof_ffc"  value="32"></define>
            <define name="nof_ffc_groups" value="1"></define>
            <define name="ffc_group_one_lower" value="0"></define>
            <define name="ffc_group_one_upper" value="31"></define>
            <!--
                Definitions related to FFC Groups. End
            -->
            <define name="nof_keys"  value="3"></define>
            <define name="nof_keys_alloc" value="3"></define>
            <define name="nof_keys_alloc_for_tcam" value="2"></define>
            <define name="nof_keys_alloc_for_exem" value="1"></define>
            <define name="nof_keys_alloc_for_dir_ext" value="2"></define>
            <define name="nof_keys_alloc_for_mdb_dt" value="1"></define>
            <define name="nof_masks_per_fes"  value="4"></define>
            <define name="nof_fes_id_per_array" value="16"></define>
            <define name="nof_fes_array" value="1"></define>
            <define name="nof_fes_instruction_per_context" value="(DATA(field, base_ipmf3, nof_fes_id_per_array)*DATA(field, base_ipmf3, nof_fes_array))"></define>
            <define name="nof_fes_programs"  value="32"></define>
            <define name="nof_prog_per_fes" value="4"></define>
            <define name="program_selection_cam_mask_nof_bits" value="95"></define>
            <define name="cs_scratch_pad_size" value="33"></define>
            <define name="nof_cs_lines" value="128"></define>
            <define name="nof_contexts" value="64"></define>
            <define name="nof_actions" value="64"></define>
            <define name="nof_qualifiers" value="64"></define>
            <define name="nof_80B_zones" value="2"></define>
            <define name="nof_key_zones" value="4"></define>
            <define name="nof_key_zone_bits" value="80"></define>
            <define name="nof_bits_in_fes_action" value="32"></define>
            <define name="nof_bits_in_fes_key_select" value="64"></define>
            <define name="nof_fes_key_selects_on_one_actions_line" value="3"></define>
            <define name="default_strength" value="6"></define>
            <define name="nof_out_lif_ranges" value="7"></define>
            <define name="fes_key_select_for_zero_bit" value="4"></define>
            <define name="fes_shift_for_zero_bit" value="0"></define>
            <define name="fes_instruction_size" value="10"></define>
            <define name="fes_pgm_id_offset" value="5"></define>
        </defines>
        <numerics>
        
        <numeric name="nof_fes_used_by_sdk" value="0">
                <property name="system_headers_mode" method="direct_map">
                    <map name="0" value="1"></map>
                    <map name="1" value="0"></map>
                    <doc>
                        In J1 mode 1 FES is used to send UDHBase action
                    </doc>
                </property>
            </numeric>
           
        </numerics>
    </sub_module>

    <!--
        The following submodule only exists because we cannot use DNX DATA pointers (DATA()) from a table's entry for define (but we can for numerical).
    -->
    <sub_module name="base_epmf">
        <defines>
            <!--
                Definitions related to FFC Groups. Begin
            -->
            <define name="nof_ffc"  value="20"></define>
            <define name="nof_ffc_groups" value="1"></define>
            <define name="ffc_group_one_lower" value="0"></define>
            <define name="ffc_group_one_upper" value="19"></define>
            <!--
                Definitions related to FFC Groups. End
            -->
            <define name="nof_keys"  value="3"></define>
            <define name="nof_keys_alloc" value="3"></define>
            <define name="nof_keys_alloc_for_tcam" value="2"></define>
            <define name="nof_keys_alloc_for_exem" value="1"></define>
            <define name="nof_masks_per_fes"  value="4"></define>
            <define name="nof_fes_id_per_array" value="12"></define>
            <define name="nof_fes_array" value="1"></define>
            <define name="nof_fes_instruction_per_context" value="(DATA(field, base_epmf, nof_fes_id_per_array)*DATA(field, base_epmf, nof_fes_array))"></define>
            <define name="nof_fes_programs"  value="32"></define>
            <define name="nof_prog_per_fes" value="4"></define>
            <define name="program_selection_cam_mask_nof_bits" value="37"></define>
            <define name="nof_cs_lines" value="128"></define>
            <define name="nof_contexts" value="64"></define>
            <define name="nof_actions" value="64"></define>
            <define name="nof_qualifiers" value="64"></define>
            <define name="nof_80B_zones" value="2"></define>
            <define name="nof_key_zones" value="4"></define>
            <define name="nof_key_zone_bits" value="80"></define>
            <define name="nof_bits_in_fes_action" value="32"></define>
            <define name="nof_bits_in_fes_key_select" value="64"></define>
            <define name="nof_fes_key_selects_on_one_actions_line" value="1"></define>
            <define name="nof_l4_ops_ranges_legacy" value="24"></define>
            <define name="fes_key_select_for_zero_bit" value="0"></define>
            <define name="fes_shift_for_zero_bit" value="60"></define>
            <define name="fes_instruction_size" value="9"></define>
            <define name="fes_pgm_id_offset" value="4"></define>
        </defines>
    </sub_module>

    <!--
        The following submodule only exists because we cannot use DNX DATA pointers (DATA()) from a table's entry for define (but we can for numerical).
    -->
    <sub_module name="base_ifwd2">
        <defines>
            <!--
                Definitions related to FFC Groups. Begin
            -->
            <define name="nof_ffc"  value="38"></define>
            <define name="nof_ffc_groups" value="1"></define>
            <define name="ffc_group_one_lower" value="0"></define>
            <define name="ffc_group_one_upper" value="37"></define>
            <!--
                Definitions related to FFC Groups. End
            -->
            <define name="nof_keys"  value="2"></define>
            <define name="nof_contexts" value="64"></define>
            <define name="nof_cs_lines" value="128"></define>
        </defines>
    </sub_module>
    
    <sub_module name="stage">
        <defines>
        </defines>
        <tables>
            <table name="stage_info">
                <key name="stage" size="DNX_FIELD_STAGE_NOF"></key>
                <value name="valid" default="FALSE"/>
                <!--
                    Values related to FFC Groups. Begin
                -->
                <value name="nof_ffc" default="0"/>
                <value name="nof_ffc_groups" default="0"/>
                <value name="ffc_group_one_lower" default="0"/>
                <value name="ffc_group_one_upper" default="0"/>
                <value name="ffc_group_two_lower" default="0"/>
                <value name="ffc_group_two_upper" default="0"/>
                <value name="ffc_group_three_lower" default="0"/>
                <value name="ffc_group_three_upper" default="0"/>
                <value name="ffc_group_four_lower" default="0"/>
                <value name="ffc_group_four_upper" default="0"/>
                <!--
                    Values related to FFC Groups. End
                -->
                <value name="nof_keys" default="0"/>
                <value name="nof_keys_alloc" default="0"/>
                <value name="nof_keys_alloc_for_tcam" default="0"/>
                <value name="nof_keys_alloc_for_exem" default="0"/>
                <value name="nof_keys_alloc_for_dir_ext" default="0"/>
                <value name="nof_keys_alloc_for_mdb_dt" default="0"/>
                <value name="nof_masks_per_fes" default="0"/>
                <value name="nof_fes_id_per_array" default="0"/>
                <value name="nof_fes_array" default="0"/>
                <value name="nof_fes_instruction_per_context" default="0"/>
                <value name="nof_fes_programs" default="0"/>
                <value name="nof_prog_per_fes" default="0"/>
                <value name="program_selection_cam_mask_nof_bits" default="0"/>
                <value name="cs_scratch_pad_size" default="0"/>
                <value name="cs_container_5_selected_bits_size" default="0"/>
                <value name="nof_contexts" type="int" default="0"/>
                <value name="nof_link_profiles" type="int" default="0"/>
                <value name="nof_cs_lines" default="0"/>
                <value name="nof_actions" default="0"/>
                <value name="nof_qualifiers" default="0"/>
                <value name="nof_80B_zones" default="0"/>
                <value name="nof_key_zones" default="0"/>
                <value name="nof_key_zone_bits" default="0"/>
                <value name="nof_bits_in_fes_action" default="0"/>
                <value name="nof_bits_in_fes_key_select" default="0"/>
                <value name="nof_fes_key_selects_on_one_actions_line" default="0"/>
                <!--
                    Values related to FEM. Begin
                -->
                <value name="fem_condition_ms_bit_min_value" default="0"/>
                <value name="fem_condition_ms_bit_max_value" default="0"/>
                <value name="nof_bits_in_fem_programs" default="0"/>
                <value name="nof_fem_programs" default="0"/>
                <value name="log_nof_bits_in_fem_key_select" default="0"/>
                <value name="nof_bits_in_fem_key_select" default="0"/>
                <value name="fem_key_select_resolution_in_bits" default="0"/>
                <value name="log_nof_bits_in_fem_map_data_field" default="0"/>
                <value name="nof_bits_in_fem_map_data_field" default="0"/>
                <value name="nof_bits_in_fem_action_fems_2_15" default="0"/>
                <value name="nof_bits_in_fem_action_fems_0_1" default="0"/>
                <value name="nof_bits_in_fem_action" type="int" default="0"/>
                <value name="nof_bits_in_fem_condition" type="int" default="0"/>
                <value name="nof_fem_condition" default="0"/>
                <value name="nof_bits_in_fem_map_index" default="0"/>
                <value name="nof_fem_map_index" default="0"/>
                <value name="nof_bits_in_fem_id" default="0"/>
                <value name="nof_fem_id" default="0"/>
                <value name="num_fems_with_short_action" default="0"/>
                <value name="num_bits_in_fem_field_select" default="0"/>
                <value name="nof_fem_id_per_array" default="0"/>
                <value name="nof_fem_array" default="0"/>
                <value name="nof_fems_per_context" default="0"/>
                <!--
                    Values related to FEM. End
                -->
                <value name="default_strength" default="0"/>
                <value name="pbus_header_length" default="0"/>
                <value name="nof_layer_records" default="0"/>
                <value name="layer_record_size" default="0"/>
                <value name="nof_compare_pairs_in_compare_mode" default="0"/>
                <value name="nof_compare_keys_in_compare_mode" default="0"/>
                <value name="compare_key_size" default="0"/>
                <value name="nof_l4_ops_ranges_legacy" default="0"/>
                <value name="nof_ext_l4_ops_ranges" default="0"/>
                <value name="nof_pkt_hdr_ranges" default="0"/>
                <value name="nof_out_lif_ranges" default="0"/>
                <value name="fes_key_select_for_zero_bit" default="0"/>
                <value name="fes_shift_for_zero_bit" default="-1"/>
                <value name="uses_small_exem" default="FALSE"/>
                <value name="uses_large_exem" default="FALSE"/>
                <value name="cmp_selection" default="0"/>
                <value name="nof_bits_main_pbus" default="0"/>
                <value name="nof_bits_native_pbus" default="0"/>
                <entries>
                <!--
                    iPMF1
                -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1"
                        valid="TRUE"
                        nof_ffc="DATA(field, base_ipmf1, nof_ffc)"
                        nof_ffc_groups="DATA(field, base_ipmf1, nof_ffc_groups)"
                        ffc_group_one_lower="DATA(field, base_ipmf1, ffc_group_one_lower)"
                        ffc_group_one_upper="DATA(field, base_ipmf1, ffc_group_one_upper)"
                        ffc_group_two_lower="DATA(field, base_ipmf1, ffc_group_two_lower)"
                        ffc_group_two_upper="DATA(field, base_ipmf1, ffc_group_two_upper)"
                        ffc_group_three_lower="DATA(field, base_ipmf1, ffc_group_three_lower)"
                        ffc_group_three_upper="DATA(field, base_ipmf1, ffc_group_three_upper)"
                        ffc_group_four_lower="DATA(field, base_ipmf1, ffc_group_four_lower)"
                        ffc_group_four_upper="DATA(field, base_ipmf1, ffc_group_four_upper)"
                        nof_keys="DATA(field, base_ipmf1, nof_keys)"
                        nof_keys_alloc="DATA(field, base_ipmf1, nof_keys_alloc)"
                        nof_keys_alloc_for_tcam="DATA(field, base_ipmf1, nof_keys_alloc_for_tcam)"
                        nof_keys_alloc_for_exem="DATA(field, base_ipmf1, nof_keys_alloc_for_exem)"
                        nof_keys_alloc_for_mdb_dt="DATA(field, base_ipmf1, nof_keys_alloc_for_mdb_dt)"
                        nof_masks_per_fes="DATA(field, base_ipmf1, nof_masks_per_fes)"
                        nof_fes_id_per_array="DATA(field, base_ipmf1, nof_fes_id_per_array)"
                        nof_fes_array="DATA(field, base_ipmf1, nof_fes_array)"
                        nof_fes_instruction_per_context="DATA(field, base_ipmf1, nof_fes_instruction_per_context)"
                        nof_fes_programs="DATA(field, base_ipmf1, nof_fes_programs)"
                        nof_prog_per_fes="DATA(field, base_ipmf1, nof_prog_per_fes)"
                        program_selection_cam_mask_nof_bits="DATA(field, base_ipmf1, program_selection_cam_mask_nof_bits)"
                        cs_container_5_selected_bits_size="DATA(field, base_ipmf1, cs_container_5_selected_bits_size)"
                        nof_cs_lines="DATA(field, base_ipmf1, nof_cs_lines)"
                        nof_contexts="DATA(field, base_ipmf1, nof_contexts)"
                        nof_link_profiles="DATA(field, base_ipmf1, nof_link_profiles)"
                        nof_actions="DATA(field, base_ipmf1, nof_actions)"
                        nof_qualifiers="DATA(field, base_ipmf1, nof_qualifiers)"
                        nof_80B_zones="DATA(field, base_ipmf1, nof_80B_zones)"
                        nof_key_zones="DATA(field, base_ipmf1, nof_key_zones)"
                        nof_key_zone_bits="DATA(field, base_ipmf1, nof_key_zone_bits)"
                        nof_bits_in_fes_action="DATA(field, base_ipmf1, nof_bits_in_fes_action)"
                        nof_bits_in_fes_key_select="DATA(field, base_ipmf1, nof_bits_in_fes_key_select)"
                        nof_fes_key_selects_on_one_actions_line="DATA(field, base_ipmf1, nof_fes_key_selects_on_one_actions_line)"

                        fem_condition_ms_bit_min_value="DATA(field, base_ipmf1, fem_condition_ms_bit_min_value)"
                        fem_condition_ms_bit_max_value="DATA(field, base_ipmf1, fem_condition_ms_bit_max_value)"
                        nof_bits_in_fem_programs="DATA(field, base_ipmf1, nof_bits_in_fem_programs)"
                        nof_fem_programs="DATA(field, base_ipmf1, nof_fem_programs)"
                        log_nof_bits_in_fem_key_select="DATA(field, base_ipmf1, log_nof_bits_in_fem_key_select)"
                        nof_bits_in_fem_key_select="DATA(field, base_ipmf1, nof_bits_in_fem_key_select)"
                        fem_key_select_resolution_in_bits="DATA(field, base_ipmf1, fem_key_select_resolution_in_bits)"
                        log_nof_bits_in_fem_map_data_field="DATA(field, base_ipmf1, log_nof_bits_in_fem_map_data_field)"
                        nof_bits_in_fem_map_data_field="DATA(field, base_ipmf1, nof_bits_in_fem_map_data_field)"
                        nof_bits_in_fem_action_fems_2_15="DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_2_15)"
                        nof_bits_in_fem_action_fems_0_1="DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_0_1)"
                        nof_bits_in_fem_action="DATA(field, base_ipmf1, nof_bits_in_fem_action)"
                        nof_bits_in_fem_condition="DATA(field, base_ipmf1, nof_bits_in_fem_condition)"
                        nof_fem_condition="DATA(field, base_ipmf1, nof_fem_condition)"
                        nof_bits_in_fem_map_index="DATA(field, base_ipmf1, nof_bits_in_fem_map_index)"
                        nof_fem_map_index="DATA(field, base_ipmf1, nof_fem_map_index)"
                        nof_bits_in_fem_id="DATA(field, base_ipmf1, nof_bits_in_fem_id)"
                        nof_fem_id="DATA(field, base_ipmf1, nof_fem_id)"
                        num_fems_with_short_action="DATA(field, base_ipmf1, num_fems_with_short_action)"
                        num_bits_in_fem_field_select="DATA(field, base_ipmf1, num_bits_in_fem_field_select)"
                        nof_fem_id_per_array="DATA(field, base_ipmf1, nof_fem_id_per_array)"
                        nof_fem_array="DATA(field, base_ipmf1, nof_fem_array)"
                        nof_fems_per_context="DATA(field, base_ipmf1, nof_fems_per_context)"

                        default_strength="DATA(field, base_ipmf1, default_strength)"
                        pbus_header_length="DATA(field, qual, ingress_pbus_header_length)"
                        nof_layer_records="DATA(field, qual, ingress_nof_layer_records)"
                        layer_record_size="DATA(field, qual, ingress_layer_record_size)"
                        nof_compare_pairs_in_compare_mode="DATA(field, base_ipmf1, nof_compare_pairs_in_compare_mode)"
                        nof_compare_keys_in_compare_mode="DATA(field, base_ipmf1, nof_compare_keys_in_compare_mode)"
                        compare_key_size="DATA(field, base_ipmf1, compare_key_size)"
                        nof_l4_ops_ranges_legacy="DATA(field, base_ipmf1, nof_l4_ops_ranges_legacy)"
                        nof_ext_l4_ops_ranges="DATA(field, base_ipmf1, nof_ext_l4_ops_ranges)"
                        nof_pkt_hdr_ranges="DATA(field, base_ipmf1, nof_pkt_hdr_ranges)"
                        nof_out_lif_ranges="DATA(field, base_ipmf1, nof_out_lif_ranges)"
                        fes_key_select_for_zero_bit="DATA(field, base_ipmf1, fes_key_select_for_zero_bit)"
                        fes_shift_for_zero_bit="DATA(field, base_ipmf1, fes_shift_for_zero_bit)"
                        uses_small_exem="FALSE"
                        uses_large_exem="TRUE"
                        cmp_selection="DATA(field, base_ipmf1, cmp_selection)"
                        nof_bits_main_pbus="DATA(field, qual, ipmf1_pbus_size)"
                    ></entry>
                <!--
                    iPMF2
                -->
                    <entry stage="DNX_FIELD_STAGE_IPMF2"
                        valid="TRUE"
                        nof_ffc="DATA(field, base_ipmf2, nof_ffc)"
                        nof_ffc_groups="DATA(field, base_ipmf2, nof_ffc_groups)"
                        ffc_group_one_lower="DATA(field, base_ipmf2, ffc_group_one_lower)"
                        ffc_group_one_upper="DATA(field, base_ipmf2, ffc_group_one_upper)"
                        nof_keys="DATA(field, base_ipmf2, nof_keys)"
                        nof_keys_alloc="DATA(field, base_ipmf2, nof_keys_alloc)"
                        nof_keys_alloc_for_tcam="DATA(field, base_ipmf2, nof_keys_alloc_for_tcam)"
                        nof_keys_alloc_for_exem="DATA(field, base_ipmf2, nof_keys_alloc_for_exem)"
                        nof_keys_alloc_for_dir_ext="DATA(field, base_ipmf2, nof_keys_alloc_for_dir_ext)"
                        nof_keys_alloc_for_mdb_dt="DATA(field, base_ipmf2, nof_keys_alloc_for_mdb_dt)"
                        nof_masks_per_fes="DATA(field, base_ipmf2, nof_masks_per_fes)"
                        nof_fes_id_per_array="DATA(field, base_ipmf2, nof_fes_id_per_array)"
                        nof_fes_array="DATA(field, base_ipmf2, nof_fes_array)"
                        nof_fes_instruction_per_context="DATA(field, base_ipmf2, nof_fes_instruction_per_context)"
                        nof_fes_programs="DATA(field, base_ipmf1, nof_fes_programs)"
                        nof_prog_per_fes="DATA(field, base_ipmf1, nof_prog_per_fes)"
                        nof_cs_lines="DATA(field, base_ipmf2, nof_cs_lines)"
                        nof_contexts="DATA(field, base_ipmf2, nof_contexts)"
                        program_selection_cam_mask_nof_bits="DATA(field, base_ipmf2, program_selection_cam_mask_nof_bits)"
                        nof_qualifiers="DATA(field, base_ipmf2, nof_qualifiers)"
                        nof_80B_zones="DATA(field, base_ipmf2, nof_80B_zones)"
                        nof_key_zones="DATA(field, base_ipmf2, nof_key_zones)"
                        nof_key_zone_bits="DATA(field, base_ipmf2, nof_key_zone_bits)"
                        nof_bits_in_fes_action="DATA(field, base_ipmf1, nof_bits_in_fes_action)"
                        nof_bits_in_fes_key_select="DATA(field, base_ipmf1, nof_bits_in_fes_key_select)"
                        fes_key_select_for_zero_bit="DATA(field, base_ipmf2, fes_key_select_for_zero_bit)"
                        fes_shift_for_zero_bit="DATA(field, base_ipmf2, fes_shift_for_zero_bit)"
                        uses_small_exem="TRUE"
                        uses_large_exem="FALSE"

                        fem_condition_ms_bit_min_value="DATA(field, base_ipmf1, fem_condition_ms_bit_min_value)"
                        fem_condition_ms_bit_max_value="DATA(field, base_ipmf1, fem_condition_ms_bit_max_value)"
                        nof_bits_in_fem_programs="DATA(field, base_ipmf1, nof_bits_in_fem_programs)"
                        nof_fem_programs="DATA(field, base_ipmf1, nof_fem_programs)"
                        log_nof_bits_in_fem_key_select="DATA(field, base_ipmf1, log_nof_bits_in_fem_key_select)"
                        nof_bits_in_fem_key_select="DATA(field, base_ipmf1, nof_bits_in_fem_key_select)"
                        fem_key_select_resolution_in_bits="DATA(field, base_ipmf1, fem_key_select_resolution_in_bits)"
                        log_nof_bits_in_fem_map_data_field="DATA(field, base_ipmf1, log_nof_bits_in_fem_map_data_field)"
                        nof_bits_in_fem_map_data_field="DATA(field, base_ipmf1, nof_bits_in_fem_map_data_field)"
                        nof_bits_in_fem_action_fems_2_15="DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_2_15)"
                        nof_bits_in_fem_action_fems_0_1="DATA(field, base_ipmf1, nof_bits_in_fem_action_fems_0_1)"
                        nof_bits_in_fem_action="DATA(field, base_ipmf1, nof_bits_in_fem_action)"
                        nof_bits_in_fem_condition="DATA(field, base_ipmf1, nof_bits_in_fem_condition)"
                        nof_fem_condition="DATA(field, base_ipmf1, nof_fem_condition)"
                        nof_bits_in_fem_map_index="DATA(field, base_ipmf1, nof_bits_in_fem_map_index)"
                        nof_fem_map_index="DATA(field, base_ipmf1, nof_fem_map_index)"
                        nof_bits_in_fem_id="DATA(field, base_ipmf1, nof_bits_in_fem_id)"
                        nof_fem_id="DATA(field, base_ipmf1, nof_fem_id)"
                        num_fems_with_short_action="DATA(field, base_ipmf1, num_fems_with_short_action)"
                        num_bits_in_fem_field_select="DATA(field, base_ipmf1, num_bits_in_fem_field_select)"
                        nof_fem_id_per_array="DATA(field, base_ipmf1, nof_fem_id_per_array)"
                        nof_fem_array="DATA(field, base_ipmf1, nof_fem_array)"
                        nof_fems_per_context="DATA(field, base_ipmf1, nof_fems_per_context)"

                        pbus_header_length="DATA(field, qual, ingress_pbus_header_length)"
                        nof_layer_records="DATA(field, qual, ingress_nof_layer_records)"
                        layer_record_size="DATA(field, qual, ingress_layer_record_size)"
                        nof_bits_main_pbus="DATA(field, qual, ipmf1_pbus_size)"
                        nof_bits_native_pbus="DATA(field, qual, ipmf2_pbus_size)"
                    ></entry>
                <!--
                    iPMF3
                -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3"
                        valid="TRUE"
                        nof_ffc="DATA(field, base_ipmf3, nof_ffc)"
                        nof_ffc_groups="DATA(field, base_ipmf3, nof_ffc_groups)"
                        ffc_group_one_lower="DATA(field, base_ipmf3, ffc_group_one_lower)"
                        ffc_group_one_upper="DATA(field, base_ipmf3, ffc_group_one_upper)"
                        nof_keys="DATA(field, base_ipmf3, nof_keys)"
                        nof_keys_alloc="DATA(field, base_ipmf3, nof_keys_alloc)"
                        nof_keys_alloc_for_tcam="DATA(field, base_ipmf3, nof_keys_alloc_for_tcam)"
                        nof_keys_alloc_for_exem="DATA(field, base_ipmf3, nof_keys_alloc_for_exem)"
                        nof_keys_alloc_for_dir_ext="DATA(field, base_ipmf3, nof_keys_alloc_for_dir_ext)"
                        nof_keys_alloc_for_mdb_dt="DATA(field, base_ipmf2, nof_keys_alloc_for_mdb_dt)"
                        nof_masks_per_fes="DATA(field, base_ipmf3, nof_masks_per_fes)"
                        nof_fes_id_per_array="DATA(field, base_ipmf3, nof_fes_id_per_array)"
                        nof_fes_array="DATA(field, base_ipmf3, nof_fes_array)"
                        nof_fes_instruction_per_context="(DATA(field, base_ipmf3, nof_fes_instruction_per_context)-DATA(field, base_ipmf3, nof_fes_used_by_sdk))"
                        nof_fes_programs="DATA(field, base_ipmf3, nof_fes_programs)"
                        nof_prog_per_fes="DATA(field, base_ipmf3, nof_prog_per_fes)"
                        program_selection_cam_mask_nof_bits="DATA(field, base_ipmf3, program_selection_cam_mask_nof_bits)"
                        cs_scratch_pad_size="DATA(field, base_ipmf3, cs_scratch_pad_size)"
                        nof_cs_lines="DATA(field, base_ipmf3, nof_cs_lines)"
                        nof_contexts="DATA(field, base_ipmf3, nof_contexts)"
                        nof_actions="DATA(field, base_ipmf3, nof_actions)"
                        nof_qualifiers="DATA(field, base_ipmf3, nof_qualifiers)"
                        nof_80B_zones="DATA(field, base_ipmf3, nof_80B_zones)"
                        nof_key_zones="DATA(field, base_ipmf3, nof_key_zones)"
                        nof_key_zone_bits="DATA(field, base_ipmf3, nof_key_zone_bits)"
                        nof_bits_in_fes_action="DATA(field, base_ipmf3, nof_bits_in_fes_action)"
                        nof_bits_in_fes_key_select="DATA(field, base_ipmf3, nof_bits_in_fes_key_select)"
                        nof_fes_key_selects_on_one_actions_line="DATA(field, base_ipmf3, nof_fes_key_selects_on_one_actions_line)"
                        default_strength="DATA(field, base_ipmf3, default_strength)"
                        nof_out_lif_ranges="DATA(field, base_ipmf3, nof_out_lif_ranges)"
                        fes_key_select_for_zero_bit="DATA(field, base_ipmf3, fes_key_select_for_zero_bit)"
                        fes_shift_for_zero_bit="DATA(field, base_ipmf3, fes_shift_for_zero_bit)"
                        uses_small_exem="TRUE"
                        uses_large_exem="FALSE"
                        nof_layer_records="DATA(field, qual, ingress_nof_layer_records)"
                        layer_record_size="DATA(field, qual, ingress_layer_record_size)"
                        nof_bits_main_pbus="DATA(field, qual, ipmf3_pbus_size)"
                    ></entry>
                    
                <!--
                    ePMF
                -->
                    <entry stage="DNX_FIELD_STAGE_EPMF"
                        valid="TRUE"
                        nof_ffc="DATA(field, base_epmf, nof_ffc)"
                        nof_ffc_groups="DATA(field, base_epmf, nof_ffc_groups)"
                        ffc_group_one_lower="DATA(field, base_epmf, ffc_group_one_lower)"
                        ffc_group_one_upper="DATA(field, base_epmf, ffc_group_one_upper)"
                        nof_keys="DATA(field, base_epmf, nof_keys)"
                        nof_keys_alloc="DATA(field, base_epmf, nof_keys_alloc)"
                        nof_keys_alloc_for_tcam="DATA(field, base_epmf, nof_keys_alloc_for_tcam)"
                        nof_keys_alloc_for_exem="DATA(field, base_epmf, nof_keys_alloc_for_exem)"
                        nof_masks_per_fes="DATA(field, base_epmf, nof_masks_per_fes)"
                        nof_fes_id_per_array="DATA(field, base_epmf, nof_fes_id_per_array)"
                        nof_fes_array="DATA(field, base_epmf, nof_fes_array)"
                        nof_fes_instruction_per_context="DATA(field, base_epmf, nof_fes_instruction_per_context)"
                        nof_fes_programs="DATA(field, base_epmf, nof_fes_programs)"
                        nof_prog_per_fes="DATA(field, base_epmf, nof_prog_per_fes)"
                        program_selection_cam_mask_nof_bits="DATA(field, base_epmf, program_selection_cam_mask_nof_bits)"
                        nof_cs_lines="DATA(field, base_epmf, nof_cs_lines)"
                        nof_contexts="DATA(field, base_epmf, nof_contexts)"
                        nof_actions="DATA(field, base_epmf, nof_actions)"
                        nof_qualifiers="DATA(field, base_epmf, nof_qualifiers)"
                        nof_80B_zones="DATA(field, base_epmf, nof_80B_zones)"
                        nof_key_zones="DATA(field, base_epmf, nof_key_zones)"
                        nof_key_zone_bits="DATA(field, base_epmf, nof_key_zone_bits)"
                        nof_bits_in_fes_action="DATA(field, base_epmf, nof_bits_in_fes_action)"
                        nof_bits_in_fes_key_select="DATA(field, base_epmf, nof_bits_in_fes_key_select)"
                        nof_fes_key_selects_on_one_actions_line="DATA(field, base_epmf, nof_fes_key_selects_on_one_actions_line)"
                        pbus_header_length="DATA(field, qual, egress_pbus_header_length)"
                        nof_layer_records="DATA(field, qual, egress_nof_layer_records)"
                        layer_record_size="DATA(field, qual, egress_layer_record_size)"
                        nof_l4_ops_ranges_legacy="DATA(field, base_epmf, nof_l4_ops_ranges_legacy)"
                        fes_key_select_for_zero_bit="DATA(field, base_epmf, fes_key_select_for_zero_bit)"
                        fes_shift_for_zero_bit="DATA(field, base_epmf, fes_shift_for_zero_bit)"
                        uses_small_exem="FALSE"
                        uses_large_exem="TRUE"
                        nof_bits_main_pbus="DATA(field, qual, epmf_pbus_size)"
                    ></entry>
                    
                <!--
                    iFWD2
                -->
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL"
                        valid="TRUE"
                        nof_ffc="DATA(field, base_ifwd2, nof_ffc)"
                        nof_ffc_groups="DATA(field, base_ifwd2, nof_ffc_groups)"
                        ffc_group_one_lower="DATA(field, base_ifwd2, ffc_group_one_lower)"
                        ffc_group_one_upper="DATA(field, base_ifwd2, ffc_group_one_upper)"
                        nof_keys="DATA(field, base_ifwd2, nof_keys)"
                        nof_contexts="DATA(field, base_ifwd2, nof_contexts)"
                        nof_cs_lines="DATA(field, base_ifwd2, nof_cs_lines)"
                        pbus_header_length="DATA(field, qual, ingress_pbus_header_length)"
                        nof_layer_records="DATA(field, qual, ingress_nof_layer_records)"
                        layer_record_size="DATA(field, qual, ingress_layer_record_size)"
                        nof_bits_main_pbus="DATA(field, qual, ifwd2_pbus_size)"
                    ></entry>
                    
                <!--
                    ACE
                -->
                    <entry stage="DNX_FIELD_STAGE_ACE"
                        valid="TRUE"
                        nof_masks_per_fes="DATA(field, ace, nof_masks_per_fes)"
                        nof_fes_id_per_array="DATA(field, ace, nof_fes_id_per_array)"
                        nof_fes_array="DATA(field, ace, nof_fes_array)"
                        nof_fes_instruction_per_context="DATA(field, ace, nof_fes_instruction_per_context)"
                        nof_fes_programs="DATA(field, ace, nof_fes_programs)"
                        nof_prog_per_fes="DATA(field, ace, nof_prog_per_fes)"
                        nof_bits_in_fes_action="DATA(field, ace, nof_bits_in_fes_action)"
                        fes_shift_for_zero_bit="DATA(field, ace, fes_shift_for_zero_bit)"
                    ></entry>
                    
                </entries>

            </table>
        </tables>
    </sub_module>


    <sub_module name="kbp">
        <defines>
            <define name="nof_fgs" doc="Number of External TCAM Field Groups" value="32"></define>
            <define name="max_single_key_size" value="160"></define>
            <define name="nof_acl_keys_master_max" value="3"></define>
            <define name="nof_acl_keys_fg_max" value="3"></define>
            <define name="min_acl_nof_ffc" value="8"></define>
            <define name="max_fwd_context_num_for_one_apptype" value="5"></define>
            <define name="max_acl_context_num" value="DATA(field, base_ifwd2, nof_contexts)"></define>
            <define name="size_apptype_profile_id" value="6"></define>
            <define name="key_bmp" value="0x30030"></define>
        <!-- FIXME SDK-127070: Change to 8192 after increasing dnx_field_context_t to be more than uint8 -->
            <define name="apptype_user_1st" value="128"></define>
            <define name="apptype_user_nof" value="16"></define>
            <define name="max_payload_size_per_opcode" value="248"></define>
        
        </defines>
        <tables>
            <table name="ffc_to_quad_and_group_map" doc="Mapping of the ffc id to its quad and group">
                <key name="ffc_id"  size="DATA(field, base_ifwd2, nof_ffc)"></key>
                <value name="quad_id"  default="SAL_UINT32_MAX" ></value>
                <value name="group_id"  default="SAL_UINT32_MAX" ></value>
                <entries>
                    <entry ffc_id="0" quad_id="0" group_id="0"></entry>
                    <entry ffc_id="1" quad_id="0" group_id="0"></entry>
                    <entry ffc_id="2" quad_id="1" group_id="1"></entry>
                    <entry ffc_id="3" quad_id="1" group_id="1"></entry>
                    <entry ffc_id="4" quad_id="1" group_id="1"></entry>
                    <entry ffc_id="5" quad_id="1" group_id="1"></entry>
                    <entry ffc_id="6" quad_id="2" group_id="2"></entry>
                    <entry ffc_id="7" quad_id="2" group_id="2"></entry>
                    <entry ffc_id="8" quad_id="2" group_id="2"></entry>
                    <entry ffc_id="9" quad_id="2" group_id="2"></entry>
                    <entry ffc_id="10" quad_id="3" group_id="2"></entry>
                    <entry ffc_id="11" quad_id="3" group_id="2"></entry>
                    <entry ffc_id="12" quad_id="3" group_id="2"></entry>
                    <entry ffc_id="13" quad_id="3" group_id="2"></entry>
                    <entry ffc_id="14" quad_id="4" group_id="3"></entry>
                    <entry ffc_id="15" quad_id="4" group_id="3"></entry>
                    <entry ffc_id="16" quad_id="4" group_id="3"></entry>
                    <entry ffc_id="17" quad_id="4" group_id="3"></entry>
                    <entry ffc_id="18" quad_id="5" group_id="3"></entry>
                    <entry ffc_id="19" quad_id="5" group_id="3"></entry>
                    <entry ffc_id="20" quad_id="5" group_id="3"></entry>
                    <entry ffc_id="21" quad_id="5" group_id="3"></entry>
                    <entry ffc_id="22" quad_id="6" group_id="3"></entry>
                    <entry ffc_id="23" quad_id="6" group_id="3"></entry>
                    <entry ffc_id="24" quad_id="6" group_id="3"></entry>
                    <entry ffc_id="25" quad_id="6" group_id="3"></entry>
                    <entry ffc_id="26" quad_id="7" group_id="3"></entry>
                    <entry ffc_id="27" quad_id="7" group_id="3"></entry>
                    <entry ffc_id="28" quad_id="7" group_id="3"></entry>
                    <entry ffc_id="29" quad_id="7" group_id="3"></entry>
                    <entry ffc_id="30" quad_id="8" group_id="4"></entry>
                    <entry ffc_id="31" quad_id="8" group_id="4"></entry>
                    <entry ffc_id="32" quad_id="8" group_id="4"></entry>
                    <entry ffc_id="33" quad_id="8" group_id="4"></entry>
                    <entry ffc_id="34" quad_id="9" group_id="4"></entry>
                    <entry ffc_id="35" quad_id="9" group_id="4"></entry>
                    <entry ffc_id="36" quad_id="9" group_id="4"></entry>
                    <entry ffc_id="37" quad_id="9" group_id="4"></entry>
                </entries>
            </table>
        </tables>
    </sub_module>

    <sub_module name="tcam">
        <defines>
            <define name="key_size_half" value="80"></define>
            <define name="key_size_single" value="160"></define>
            <define name="key_size_double" value="320"></define>
            <define name="dt_max_key_size" value="11"></define>
            <define name="action_size_half" value="32"></define>
            <define name="action_size_single" value="64"></define>
            <define name="action_size_double" value="128"></define>
            <define name="key_mode_size" value="2"></define>
            <define name="entry_size_single_key_hw" value="(2*((DATA(field, tcam, key_size_half))+(DATA(field, tcam, key_mode_size))))"></define>
            <define name="entry_size_single_valid_bits_hw" value="2"></define>
            <define name="entry_size_half_payload_hw" value="DATA(field, tcam, action_size_half)"></define>
            <define name="hw_bank_size" value="4096"></define>
            <define name="small_bank_size" value="256"></define>
            <define name="nof_big_bank_lines" value="4096"></define>
            <define name="nof_small_bank_lines" value="512"></define>
            <define name="nof_big_banks" value="12"></define>
            <define name="nof_small_banks" value="4"></define>
            <define name="nof_banks" value="16"></define>
            <define name="nof_payload_tables" value="32"></define>
            <define name="nof_access_profiles" value="64"></define>
            <define name="action_width_selector_size" value="2"></define>
            <define name="cascaded_data_nof_bits" value="20"></define>
            <define name="big_bank_key_nof_bits" value="11"></define>
            <define name="nof_entries_160_bits" value="25600"></define>
            <define name="nof_entries_80_bits" value="51200"></define>
            <define name="tcam_banks_size" value="65536"></define>
            <define name="tcam_banks_last_index" value="61952"></define>
            <define name="nof_tcam_handlers" value="64"></define>
            <define name="max_prefix_size" value="5"></define>
            <define name="max_prefix_value" value="32"></define>
            <define name="nof_keys_in_double_key" value="2"></define>
            <define name="nof_keys_max" value="DATA(field, tcam, nof_keys_in_double_key)"></define>
            <define name="access_profile_half_key_mode" value="0"></define>
            <define name="access_profile_single_key_mode" value="1"></define>
            <define name="access_profile_double_key_mode" value="3"></define>
            <define name="hit_indication_entries_per_byte" value="8"></define>
            <define name="max_tcam_priority" value="0x7fffffff"></define>
        </defines>
    </sub_module>

    <sub_module name="group">
        <defines>
            <define name="nof_fgs" value="128"></define>
            <define name="nof_action_per_fg" value="32"></define>
            <define name="nof_quals_per_fg" value="32"></define>
            <define name="nof_keys_per_fg_max" value="UTILEX_MAX3(DATA(field, tcam, nof_keys_max), DATA(field, kbp, nof_acl_keys_master_max), DATA(field, common_max_val, nof_compare_pairs))"></define>
            <define name="id_fec_wa" value="DATA(field,group,nof_fgs)-1"></define>
        </defines>
    </sub_module>

    <sub_module name="efes" doc="EFES data">
        <defines>
            <!--
                This value represents the maximum number of key_selects that can access a single field IO.
                Determined by the biggest field_io, a double key direct extraction (that is 320 bits).                
            -->
            <define name="max_nof_key_selects_per_field_io" value="11"></define>
        </defines>
        <tables>
            <table name="key_select_properties">
                <key name="stage" size="DNX_FIELD_STAGE_NOF"></key>
                <key name="field_io" size="DBAL_NOF_ENUM_FIELD_IO_VALUES"></key>
                <value name="key_select" default="-1"/>
                <value name="num_bits" default="0"></value>
                <value name="lsb" default="0"></value>
                <value name="num_bits_not_on_key" default="0"></value>
                <entries>
                    <!--
                        Each entry in this table represents a field IO (for example, the result of the second TCAM lookup in the stage,
                        or of th first key that can be used be direct extraction.
                        For each field IO, we have arrays, with each index relevant for a single key select that can access the field IO.
                        For each key select, we provide 3 parameters: 
                            num_bits: The number of bits of the field IO that the key select can read.
                            lsb: The first bit on the field IO read by the key_select.
                            num_bits_not_on_key: The number of bits on the LSB of the key select before the first bit on the field_io.
                                                 Note that bits on the MSB of the key select not on the field io are not counted here.
                        For example, let's take DBAL_ENUM_FVAL_FIELD_IO_LEXEM. It is composed of 60 bits (we do not count zero padding)
                        and can be Accessed by 3 key selects:
                        
                             <______________________IELD_IO_LEXEM______________________________> 
           <________KEY_SELECT_LEXEM_27_0_4_B0_TCAM_7_63_32________> 
                        <_______KEY_SELECT_LEXEM_59_0_4_B0_____________________________________>
                                                                    <__________KEY_SELECT_SEXEM_27_0_4_B0_LEXEM_59_28________>                             
                        KEY_SELECT_LEXEM_27_0_4_B0_TCAM_7_63_32 includes 32 bits from an earlier field_io, 4 bits of zero padding and then 
                        28 bits from the beginning of the field_io. So num_bits=28, lsb=0 and num_bits_not_on_key=32+4=36.
                        KEY_SELECT_LEXEM_59_0_4_B0 includes 4 bytes of zero padding,and then the entire field io, so
                        num_bits=60 lsb=0 num_bits_not_on_key=4.
                        KEY_SELECT_SEXEM_27_0_4_B0_LEXEM_59_28 includes 32 bits from the field_io starting from bit 28, plus 4 bits zero padding,
                        plus 28 bits from the next field_io. So num_bits=32 lsb=28 and num_bits_not_on_key=0
                        Note that the names of the key selects indicate what they contain, from MSB to LSB.
                        Also note that each key select contains 64 bits, and is another 32 bits displacement from the last key select.
                    -->
                    <!-- Entries for iPMF1/2  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_0_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32"
                        num_bits="64, 32" lsb= "0, 32" num_bits_not_on_key="0, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_31_0_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_2" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_31_0_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_31_0_TCAM_1_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_3" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_31_0_TCAM_3_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_31_0_TCAM_2_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_4" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_31_0_TCAM_4_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_31_0_TCAM_3_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_5" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_31_0_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_31_0_TCAM_4_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_6" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_31_0_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_31_0_TCAM_5_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_7" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_LEXEM_27_0_4_B0_TCAM_7_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_31_0_TCAM_6_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_0_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_31_0_TCAM_1_63_32"
                        num_bits="64, 64, 64, 32" lsb= "0, 32, 64, 96" num_bits_not_on_key="0, 0, 0, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1_2" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_31_0_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_31_0_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32"
                        num_bits="64, 64, 64, 32, 32" lsb= "0, 32, 64, 96, 0" num_bits_not_on_key="0, 0, 0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_2_3" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_31_0_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_3_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_31_0_TCAM_3_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_2_31_0_TCAM_1_63_32"
                        num_bits="64, 64, 64, 32, 32" lsb= "0, 32, 64, 96, 0" num_bits_not_on_key="0, 0, 0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_4_5" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_31_0_TCAM_4_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_31_0_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_4_31_0_TCAM_3_63_32"
                        num_bits="64, 64, 64, 32, 32" lsb= "0, 32, 64, 96, 0" num_bits_not_on_key="0, 0, 0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_5_6" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_31_0_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_31_0_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_5_31_0_TCAM_4_63_32"
                        num_bits="64, 64, 64, 32, 32" lsb= "0, 32, 64, 96, 0" num_bits_not_on_key="0, 0, 0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_6_7" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_31_0_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_7_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_LEXEM_27_0_4_B0_TCAM_7_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_TCAM_6_31_0_TCAM_5_63_32"
                        num_bits="64, 64, 64, 32, 32" lsb= "0, 32, 64, 96, 0" num_bits_not_on_key="0, 0, 0, 0, 32"></entry>
                    
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_LEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_LEXEM_27_0_4_B0_TCAM_7_63_32, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_LEXEM_59_0_4_B0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_SEXEM_27_0_4_B0_LEXEM_59_28"
                        num_bits="28, 60, 32" lsb= "0, 0, 28" num_bits_not_on_key="36, 4, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_SEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_SEXEM_27_0_4_B0_LEXEM_59_28, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_SEXEM_59_0_4_B0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_31_0_SEXEM_59_28"
                        num_bits="28, 60, 32" lsb= "0, 0, 28" num_bits_not_on_key="36, 4, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIRECT_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_23_0_8_B0_KEY_J_159_128, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_55_0_8_B0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_87_24,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_119_56,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_23_0_8_B0_DIRECT_0_119_88"
                        num_bits="24, 56, 64, 64, 32" lsb= "0, 0, 24, 56, 88" num_bits_not_on_key="40, 8, 0, 0, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIRECT_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_23_0_8_B0_DIRECT_0_119_88, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_55_0_8_B0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_87_24,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_119_56,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_1_119_88"
                        num_bits="24, 56, 64, 64, 32" lsb= "0, 0, 24, 56, 88" num_bits_not_on_key="40, 8, 0, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_31_0_SEXEM_59_28, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_31_0_KEY_I_159_128"
                        num_bits="32, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128" num_bits_not_on_key="32, 0, 0, 0, 0, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_31_0_KEY_I_159_128, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_23_0_8_B0_KEY_J_159_128"
                        num_bits="32, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128" num_bits_not_on_key="32, 0, 0, 0, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF2" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_31_0_SEXEM_59_28, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_I_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_31_0_KEY_I_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_KEY_J_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FES_KEY_SELECT_DIRECT_0_23_0_8_B0_KEY_J_159_128"
                        num_bits="32, 64, 64, 64, 64, 64, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128, 160, 192, 224, 256, 288" num_bits_not_on_key="32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"></entry>
                    
                    <!-- Entries for iPMF3  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_0_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32"
                        num_bits="64, 32" lsb= "0, 32" num_bits_not_on_key="0, 0"></entry>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_1_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_SEXEM_27_0_4_B0_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_0_63_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_1_31_0_TCAM_0_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_TCAM_1_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_SEXEM_27_0_4_B0_TCAM_1_63_32"
                        num_bits="64, 64, 64, 32" lsb= "0, 32, 64, 96" num_bits_not_on_key="0, 0, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_SEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_SEXEM_27_0_4_B0_TCAM_1_63_32, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_SEXEM_59_0_4_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_31_0_SEXEM_59_28"
                        num_bits="28, 60, 32" lsb= "0, 0, 28" num_bits_not_on_key="36, 4, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIRECT_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_31_0_KEY_B_159_128, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_55_0_8_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_87_24,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_119_56"
                        num_bits="24, 56, 64, 64" lsb= "0, 0, 24, 56" num_bits_not_on_key="40, 8, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_31_0_SEXEM_59_28, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_31_0_KEY_A_159_128"
                        num_bits="32, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128" num_bits_not_on_key="32, 0, 0, 0, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_31_0_KEY_A_159_128, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_31_0_KEY_B_159_128"
                        num_bits="32, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128" num_bits_not_on_key="32, 0, 0, 0, 0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_IPMF3" field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_31_0_SEXEM_59_28, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_A_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_31_0_KEY_A_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_63_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_95_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_127_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_KEY_B_159_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_B_FES_KEY_SELECT_DIRECT_31_0_KEY_B_159_128"
                        num_bits="32, 64, 64, 64, 64, 64, 64, 64, 64, 64, 32" lsb= "0, 0, 32, 64, 96, 128, 160, 192, 224, 256, 288" num_bits_not_on_key="32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"></entry>
                        
                    <!-- Entries for ePMF  -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" field_io="DBAL_ENUM_FVAL_FIELD_IO_LEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_LEXEM_4_B0_59_0, 
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_0_PAYLOAD_31_0_4_B0_LEXEM_59_32"
                        num_bits="60, 28" lsb= "0, 32" num_bits_not_on_key="0, 0"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_EPMF" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_0_PAYLOAD_63_0,
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_1_PAYLOAD_31_0_TCAM_0_PAYLOAD_63_32,
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_0_PAYLOAD_31_0_4_B0_LEXEM_59_32"
                        num_bits="64, 32, 32" lsb= "0, 32, 0" num_bits_not_on_key="0, 0, 32"></entry>
                    <entry stage="DNX_FIELD_STAGE_EPMF" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_1_PAYLOAD_63_0,
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_1_PAYLOAD_31_0_TCAM_0_PAYLOAD_63_32"
                        num_bits="64, 32" lsb= "0, 0" num_bits_not_on_key="0, 32"></entry>
                        
                    <entry stage="DNX_FIELD_STAGE_EPMF" field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_0_PAYLOAD_31_0_4_B0_LEXEM_59_32, 
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_0_PAYLOAD_63_0,
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_1_PAYLOAD_31_0_TCAM_0_PAYLOAD_63_32,
                                    DBAL_ENUM_FVAL_FIELD_E_PMF_FES_KEY_SELECT_TCAM_1_PAYLOAD_63_0"
                        num_bits="32, 64, 64, 64" lsb= "0, 0, 32, 64" num_bits_not_on_key="32, 0, 0, 0"></entry>
                        
                    <!-- Entries for ACE  -->
                    <entry stage="DNX_FIELD_STAGE_ACE" field_io="DBAL_ENUM_FVAL_FIELD_IO_ACE" 
                        key_select="0"
                        num_bits="104" lsb= "0" num_bits_not_on_key="0"></entry>
                </entries>
            </table>
        </tables>
    </sub_module>

    <sub_module name="fem" doc="FEM data">
        <defines>
            <!--
                This value represents the maximum number of key_selects that can access a single field IO.
                Determined by the biggest field_io, a double key direct extraction (that is 320 bits).                
            -->
            <define name="max_nof_key_selects_per_field_io" value="21"></define>
        </defines>
        <tables>
            <table name="key_select_properties">
                <key name="field_io" size="DBAL_NOF_ENUM_FIELD_IO_VALUES"></key>
                <value name="key_select" default="-1"/>
                <value name="num_bits" default="0"></value>
                <value name="lsb" default="0"></value>
                <value name="num_bits_not_on_key" default="0"></value>
                <entries>
                    <!--
                        See the comment about the entries for EFES key_select_properties.
                        The only difference is that for FEM each key select is 32 bits long and a 16 bits displacement from the last.
                    -->
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_31_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_15_0_TCAM_0_63_48"
                        num_bits="32, 32, 32, 16" lsb= "0, 16, 32, 48" num_bits_not_on_key="0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_15_0_TCAM_0_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_15_0_TCAM_1_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_2" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_15_0_TCAM_1_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_15_0_TCAM_2_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_3" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_15_0_TCAM_2_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_15_0_TCAM_3_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_4" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_15_0_TCAM_3_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_15_0_TCAM_4_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_5" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_15_0_TCAM_4_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_15_0_TCAM_5_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry> 
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_6" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_15_0_TCAM_5_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_15_0_TCAM_6_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_7" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_15_0_TCAM_6_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_11_0_4_B0_TCAM_7_63_48"
                        num_bits="16, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48" num_bits_not_on_key="16, 0, 0, 0, 0"></entry>

                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_0_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_31_0, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_0_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_15_0_TCAM_0_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_15_0_TCAM_1_63_48"
                        num_bits="32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="0, 0, 0, 0, 0, 0, 0, 0"></entry>  
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_1_2" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_15_0_TCAM_0_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_1_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_15_0_TCAM_1_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_15_0_TCAM_2_63_48"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0"></entry>  
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_2_3" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_15_0_TCAM_1_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_2_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_15_0_TCAM_2_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_3_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_15_0_TCAM_3_63_48"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0"></entry> 
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_4_5" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_15_0_TCAM_3_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_4_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_15_0_TCAM_4_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_15_0_TCAM_5_63_48"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0"></entry>
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_5_6" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_15_0_TCAM_4_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_5_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_15_0_TCAM_5_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_15_0_TCAM_6_63_48"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0"></entry> 
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_INTERNAL_TCAM_6_7" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_15_0_TCAM_5_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_6_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_15_0_TCAM_6_63_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_TCAM_7_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_11_0_4_B0_TCAM_7_63_48"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0"></entry> 

                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_LEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_11_0_4_B0_TCAM_7_63_48, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_27_0_4_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_43_12,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_LEXEM_59_28,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_SEXEM_11_0_4_B0_LEXEM_59_44"
                        num_bits="12, 28, 32, 32, 16" lsb= "0, 0, 12, 28, 44" num_bits_not_on_key="20, 40, 0, 0, 0"></entry>  
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_SEXEM" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_SEXEM_11_0_4_B0_LEXEM_59_44, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_SEXEM_27_0_4_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_SEXEM_43_12,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_SEXEM_59_28,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_16_0_SEXEM_59_44"
                        num_bits="12, 28, 32, 32, 16" lsb= "0, 0, 12, 28, 44" num_bits_not_on_key="20, 40, 0, 0, 0"></entry>

                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_DIRECT_0" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_7_0_8_B0_KEY_J_159_144, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_23_0_8_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_39_8,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_55_24,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_71_40,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_87_56,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_103_72,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_119_88,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_7_0_8_B0_DIRECT_0_119_104"
                        num_bits="8, 24, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 8, 24, 40, 56, 72, 88, 104" num_bits_not_on_key="24, 8, 0, 0, 0, 0, 0, 0, 0"></entry>   
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_DIRECT_1" 
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_7_0_8_B0_DIRECT_0_119_104, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_23_0_8_B0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_39_8,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_55_24,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_71_40,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_87_56,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_103_72,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_1_119_88"
                        num_bits="8, 24, 32, 32, 32, 32, 32, 32" lsb= "0, 0, 8, 24, 40, 56, 72, 88" num_bits_not_on_key="24, 8, 0, 0, 0, 0, 0, 0"></entry> 

                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0"
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_16_0_SEXEM_59_44, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_79_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_95_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_111_80,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_127_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_143_112,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_15_0_KEY_I_159_144"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112, 128, 144" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"></entry>   
                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_1"
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_15_0_KEY_I_159_144, 
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_79_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_95_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_111_80,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_127_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_143_112,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_7_0_8_B0_KEY_J_159_144"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 32, 32, 16" lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112, 128, 144" num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"></entry>  

                    <entry field_io="DBAL_ENUM_FVAL_FIELD_IO_DIR_EXT_KEY_0_1"
                        key_select="DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_16_0_SEXEM_59_44,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_79_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_95_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_111_80,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_127_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_143_112,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_I_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_15_0_KEY_I_159_144,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_31_0,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_47_16,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_63_32,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_79_48,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_95_64,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_111_80,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_127_96,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_143_112,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_KEY_J_159_128,
                                    DBAL_ENUM_FVAL_FIELD_PMF_A_FEM_KEY_SELECT_DIRECT_0_7_0_8_B0_KEY_J_159_144"
                        num_bits="16, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 16"
                        lsb= "0, 0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 272, 288, 304"
                        num_bits_not_on_key="16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"></entry>                          
                </entries>
            </table>
        </tables>
    </sub_module>

    <sub_module name="context">
        <defines>
            <define name="default_context" value="0"></define>
            <define name="default_itmh_context" value="(DATA(field, base_ipmf1, nof_contexts)-1)"></define>
            <define name="default_itmh_pph_context" value="(DATA(field, base_ipmf1, nof_contexts)-2)"></define>
            <define name="default_j1_itmh_context" value="(DATA(field, base_ipmf1, nof_contexts)-6)"></define>
            <define name="default_j1_itmh_pph_context" value="(DATA(field, base_ipmf1, nof_contexts)-7)"></define>
            <define name="default_stacking_context" value="(DATA(field, base_ipmf1, nof_contexts)-3)"></define>
            <define name="default_oam_context" value="(DATA(field, base_ipmf1, nof_contexts)-4)"></define>
            <define name="default_oam_reflector_context" value="(DATA(field, base_ipmf1, nof_contexts)-5)"></define>
            <define name="default_j1_learning_2ndpass_context" value="(DATA(field, base_ipmf1, nof_contexts)-8)"></define>
        </defines>
    </sub_module>

    <sub_module name="preselector">
        <defines>
            <!-- iPMF1 Application and WA Presel ids -->
            <define name="default_oam_presel_id_ipmf1" value="1"></define>
            <define name="default_itmh_presel_id_ipmf1" value="126"></define>
            <define name="default_itmh_pph_presel_id_ipmf1" value="125"></define>
            <define name="default_j1_itmh_presel_id_ipmf1" value="124"></define>
            <define name="default_j1_itmh_pph_presel_id_ipmf1" value="123"></define>
            <define name="default_j1_itmh_pph_oamp_presel_id_ipmf1" value="121"></define><!-- OAMP must have higher presel Id then ITMH_PPH -->
            <define name="default_stacking_presel_id_ipmf1" value="120"></define>
            <define name="default_j1_learn_wa_presel_id_1st_pass_ipmf1" value="119"></define>
            <define name="default_j1_learn_wa_presel_id_2nd_pass_ipmf1" value="118"></define>

            <!-- iPMF3 Application and WA Presel ids -->
            <define name="default_itmh_pph_presel_id_ipmf3" value="126"></define>
            <define name="default_oam_roo_ipv4_presel_id_ipmf3" value="125"></define>
            <define name="default_oam_roo_ipv6_presel_id_ipmf3" value="124"></define>
            <define name="default_oam_w_o_roo_no_rif_ipv4_presel_id_ipmf3" value="123"></define>
            <define name="default_oam_w_o_roo_no_rif_ipv6_presel_id_ipmf3" value="122"></define>
            <define name="default_oam_w_o_roo_with_rif_ipv4_presel_id_ipmf3" value="121"></define>
            <define name="default_oam_w_o_roo_with_rif_ipv6_presel_id_ipmf3" value="120"></define> 
            <define name="default_j1_ipv4_mc_in_lif_presel_id_ipmf3" value="119"></define>
            <define name="default_j1_ipv6_mc_in_lif_presel_id_ipmf3" value="118"></define>
            <define name="default_j1_itmh_pph_presel_id_ipmf3" value="117"></define>
            <define name="default_j1_swap_presel_id_ipmf3" value="116"></define>
            <define name="default_j1_php_presel_id_ipmf3" value="115"></define>

            <!-- ePMF Application and WA Presel ids -->
            <define name="default_j1_same_port_wa_presel_id_epmf" value="126"></define>
            <define name="default_learn_limit_wa_presel_id_epmf" value="125"></define>

            <!-- Presel Module general params -->
            <define name="num_cs_inlif_profile_entries" value="256"></define>
        </defines>
    </sub_module>

    <sub_module name="qual">
        <defines>
            <define name="user_1st" value="2048"></define>
            <define name="user_nof" value="256"></define>
            <define name="vw_1st" value="8292"></define>
            <define name="vw_nof" value="100"></define>
            <define name="max_bits_in_qual" value="160"></define>
            <define name="ingress_pbus_header_length" value="1152"></define>
            <define name="egress_pbus_header_length" value="1024"></define>
            <define name="ifwd2_pbus_size" value="3225"></define>
            <define name="ipmf1_pbus_size" value="3355"></define>
            <define name="ipmf2_pbus_size" value="1384"></define>
            <define name="ipmf3_pbus_size" value="1714"></define>
            <define name="epmf_pbus_size" value="2555"></define>
            <define name="ingress_nof_layer_records" value="8"></define>
            <define name="ingress_layer_record_size" value="32"></define>
            <define name="egress_nof_layer_records" value="5"></define>
            <define name="egress_layer_record_size" value="28"></define>
            <define name="ac_lif_wide_size" value="28"></define>
        </defines>
        <tables>
            <table name="params">
                <key name="stage" size="DNX_FIELD_STAGE_NOF"/>
                <key name="qual" size="256"/>
                <value name="offset" default="-1"/>
                <value name="signal" default="unsupported"/>
                <entries>
                <!-- Entries for IFWD2  -->
                    <!-- FIXME SDK-150529: change the offset by adding first bit used by PMF -->
                    
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PMF_ETH_RIF_PROFILE"                offset="1734"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_LAYER_INDEX"                    offset="1408"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_RPF_ROUTE_VALID"                    offset="1411"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_FWD_PROFILE"  offset="1412"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_FWD_RESULT"   offset="1419"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_RPF_PROFILE"  offset="1515"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_RPF_RESULT"   offset="1522"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_MP_PROFILE_SEL"                     offset="1618"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_RPF_DEFAULT_ROUTE_FOUND"            offset="1619"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ACL_CONTEXT"                        offset="1620"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_CONTEXT"                            offset="1626"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_NASID"                              offset="1632"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ENABLE_PP_INJECT"                   offset="1637"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_EEI"                                offset="1638"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_EGRESS_LEARN_ENABLE"                offset="1662"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_ACTION_CPU_TRAP_CODE"           offset="1663"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_ACTION_CPU_TRAP_QUAL"           offset="1672"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_ACTION_DESTINATION"             offset="1691"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_ACTION_STRENGTH"                offset="1712"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_DOMAIN"                         offset="1716"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VRF_VALUE"                         offset="1716"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_DOMAIN_PROFILE"                 offset="1734"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_LAYER_ADDITIONAL_INFO"          offset="1744"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GENERAL_DATA_0"                     offset="1748"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GENERAL_DATA_1"                     offset="1876"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GENERAL_DATA_2"                     offset="1904"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GENERAL_DATA_3"                     offset="2032"/>
                    <!-- FIXME: SDK-179446 currently assumed that virtual wires allocated only on General data which has start offset of DNX_FIELD_IFWD2_QUAL_GENERAL_DATA_0-->
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_AC_IN_LIF_WIDE_DATA"                offset="1748"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IEEE1588_COMMAND"                   offset="2258"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IEEE1588_COMPENSATE_TIME_STAMP"     offset="2260"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IEEE1588_ENCAPSULATION"             offset="2261"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IEEE1588_HEADER_OFFSET"             offset="2262"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IN_LIF_PROFILE_0"                   offset="2270"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IN_LIF_PROFILE_1"                   offset="2278"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GLOB_IN_LIF_0"                      offset="2286"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GLOB_IN_LIF_1"                      offset="2308"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PP_PORT"                            offset="2330"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_INCOMING_TAG_STRUCTURE"             offset="2338"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_INGRESS_LEARN_ENABLE"               offset="2343"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_LEARN_INFO"                         offset="2344"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_MEM_SOFT_ERR"                       offset="2504"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_NWK_QOS"                            offset="2505"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_OAM_OFFSET"                         offset="2513"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_OAM_STAMP_OFFSET"                   offset="2521"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_OAM_OPCODE"                         offset="2529"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_OAM_YOUR_DISCR"                     offset="2533"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_MY_CFM_MAC"                         offset="2534"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_IS_OAM"                      offset="2535"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_IS_BFD"                      offset="2536"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_MDL"                                offset="2537"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_0"                      offset="2540"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_0_VALID"                offset="2562"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_1"                      offset="2563"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_1_VALID"                offset="2585"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_2"                      offset="2586"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_LIF_2_VALID"                offset="2608"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_PCP_0"                      offset="2609"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_PCP_1"                      offset="2612"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VTT_OAM_PCP_2"                      offset="2615"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GLOB_OUT_LIF_0"                     offset="2618"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_GLOB_OUT_LIF_1"                     offset="2640"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PRT_QUALIFIER"                      offset="2662"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_HEADER_SIZE"                 offset="2665"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_IS_APPLET"                   offset="2673"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_IS_COMPATIBLE_MC"            offset="2674"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PACKET_IS_IEEE1588"                 offset="2675"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_DP"                                 offset="2676"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ECN"                                offset="2678"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_TC"                                 offset="2680"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_PTC"                                offset="2683"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_RPF_DST"                            offset="2691"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_RPF_DST_VALID"                      offset="2712"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_SNOOP_CODE"                         offset="2713"/>,
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_SNOOP_STRENGTH"                     offset="2722"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_MIRROR_CODE"                        offset="2725"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_STATISTICAL_SAMPLING_CODE"          offset="2734"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_SRC_SYS_PORT"                       offset="2743"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_0"                offset="2759"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_1"                offset="2779"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_2"                offset="2799"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_3"                offset="2819"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_4"                offset="2839"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ID_5"                offset="2859"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_0"               offset="2879"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_1"               offset="2884"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_2"               offset="2889"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_3"               offset="2894"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_4"               offset="2899"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FLP_STATISTICS_ATR_5"               offset="2904"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VLAN_EDIT_CMD"                      offset="2909"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_TRACE_PACKET"                       offset="2948"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IN_TTL"                             offset="2949"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_LIF_OAM_TRAP_PROFILE"               offset="2957"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VISIBILITY_CLEAR"                   offset="2959"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VISIBILITY"                         offset="2960"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_RPF_OUT_LIF"                        offset="2961"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ACTION_PROFILE_SA_DROP_INDEX"       offset="2983"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ACTION_PROFILE_SA_NOT_FOUND_INDEX"  offset="2985"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ACTION_PROFILE_DA_NOT_FOUND_INDEX"  offset="2987"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_SAVED_CONTEXT_PROFILE"              offset="2988"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_VERSION_ERROR"                 offset="2994"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_CHECKSUM_ERROR"                offset="2995"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_TOTAL_LENGTH_ERROR"            offset="2996"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_OPTIONS_ERROR"                 offset="2997"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_SIP_EQUAL_DIP_ERROR"           offset="2998"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_DIP_ZERO_ERROR"                offset="2999"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_SIP_IS_MC_ERROR"               offset="3000"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IPV4_HEADER_LENGTH_ERROR"           offset="3001"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IN_LIF_UNKNOWN_DA_PROFILE"          offset="3002"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_NOF_VALID_LM_LIFS"                  offset="3004"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_IS_IN_LIF_VALID_FOR_LM"             offset="3006"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_FWD_STRENGTH" offset="3007"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_RPF_STRENGTH" offset="3012"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_FWD_FOUND"    offset="3017"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD1_PRIORITY_DECODER_RPF_FOUND"    offset="3018"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_STATISTICS_META_DATA"               offset="3019"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_STAT_ATTRIBUTE_OBJ_CMD"         offset="3035"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_FWD_STAT_ATTRIBUTE_OBJ"             offset="3040"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_VSI_UNKNOWN_DA_DESTINATION"         offset="3060"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ECMP_LB_KEY_0"                      offset="3081"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ECMP_LB_KEY_1"                      offset="3097"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_ECMP_LB_KEY_2"                      offset="3113"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_LAG_LB_KEY"                         offset="3129"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_NWK_LB_KEY"                         offset="3145"/>
                    <entry stage="DNX_FIELD_STAGE_EXTERNAL" qual="DNX_FIELD_IFWD2_QUAL_CONTEXT_CONSTANTS"                  offset="3161"/>
                <!-- Entries for IPMF1 -->
                    <!-- FIXME SDK-150529: change the offset by adding first bit used by PMF -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PMF_ETH_RIF_PROFILE"            offset="2884"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_TM_PORT_PMF_PROFILE"            offset="1866"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PP_PORT_PMF_GENERAL_DATA"       offset="1907+DATA(field, profile_bits, nof_bits_in_port_profile)"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PP_PORT_PMF_PROFILE"            offset="1907"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ALL_ONES"                       offset="3339"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_MEM_SOFT_ERR"                   offset="3338"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ACL_CONTEXT"                    offset="3332"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_NASID"                          offset="3327"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_CONTEXT"                    offset="3321"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_RPF_OUT_LIF"                    offset="3299"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_RPF_DEFAULT_ROUTE_FOUND"        offset="3298"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_RPF_ROUTE_VALID"                offset="3297"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_APPLET"               offset="3296"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GENERAL_DATA_2"                 offset="3168"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GENERAL_DATA_1"                 offset="3040"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GENERAL_DATA_0"                 offset="2912"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_DOMAIN"                     offset="2894"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VRF_VALUE"                      offset="2894"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_DOMAIN_PROFILE"             offset="2884"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_PCP_2"                offset="2881"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_DEI_2"                offset="2880"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_PCP_DEI_2"            offset="2880"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_VID_2"                offset="2868"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_PCP_1"                offset="2865"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_DEI_1"                offset="2864"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_PCP_DEI_1"            offset="2864"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_VID_1"                offset="2852"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_CMD_INDEX"            offset="2845"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_CMD"                  offset="2845"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_SRC_SYS_PORT"                   offset="2829"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_SNOOP_CODE"                     offset="2820"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_SNOOP_STRENGTH"                 offset="2817"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_LAYER_ADDITIONAL_INFO"      offset="2813"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_RPF_DST"                        offset="2792"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_RPF_DST_VALID"                  offset="2791"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_IEEE1588"             offset="2790"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_COMPENSATE_TIME_STAMP" offset="2789"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_COMMAND"               offset="2787"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_ENCAPSULATION"         offset="2786"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_HEADER_OFFSET"         offset="2778"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_COMPATIBLE_MC"        offset="2777"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PRT_QUALIFIER"                  offset="2774"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_HEADER_SIZE"             offset="2766"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_ID"                         offset="2747"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_UP_MEP"                     offset="2746"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_SUB_TYPE"                   offset="2742"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_OFFSET"                     offset="2734"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_STAMP_OFFSET"               offset="2726"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_MIRROR_CODE"                    offset="2717"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VISIBILITY"                     offset="2716"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_EXPECTED_WON"            offset="2711"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_FOUND"                    offset="2710"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_MATCH"                    offset="2709"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_STATION_MOVE"             offset="2708"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_VLAN"                     offset="2691"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_VSI"                      offset="2673"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_SRC_MAC"                  offset="2625"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_DATA"                     offset="2559"/>                                                                                                                                                                                   
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LEARN_INFO"                     offset="2556"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_INGRESS_LEARN_ENABLE"           offset="2555"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EGRESS_LEARN_ENABLE"            offset="2554"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GLOB_IN_LIF_1"                  offset="2532"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GLOB_IN_LIF_0"                  offset="2510"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_LIF_PROFILE_1"               offset="2502"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_LIF_PROFILE_0"               offset="2494"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_STRENGTH"            offset="2490"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_DESTINATION"         offset="2469"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_CPU_TRAP_CODE"       offset="2460"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_CPU_TRAP_QUAL"       offset="2441"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EEI"                            offset="2417"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_0"                  offset="2416"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_1"                  offset="2415"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_2"                  offset="2414"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_3"                  offset="2413"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_4"                  offset="2412"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_5"                  offset="2411"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_6"                  offset="2410"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_7"                  offset="2409"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_PAYLOAD_ALL_PART_1"     offset="2321"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_PAYLOAD_ALL_PART_0"     offset="2161"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PP_PORT"                        offset="2153"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_CORE_ID"                        offset="2152"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_PORT"                        offset="2152"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PTC"                            offset="2144"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_LAG_LB_KEY"                     offset="2128"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_NWK_LB_KEY"                     offset="2112"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ECMP_LB_KEY_2"                  offset="2096"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ECMP_LB_KEY_1"                  offset="2080"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ECMP_LB_KEY_0"                  offset="2064"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GLOB_OUT_LIF_1"                 offset="2042"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_GLOB_OUT_LIF_0"                 offset="2020"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_TTL"                         offset="2012"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_BIER_STR_OFFSET"                offset="2004"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_BIER_STR_SIZE"                  offset="2002"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_BIER"                 offset="2001"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_SAVED_CONTEXT_PROFILE"          offset="1995"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_OAM_METER_DISABLE"              offset="1994"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_INCOMING_TAG_STRUCTURE"         offset="1989"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_TC"                             offset="1986"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_DP"                             offset="1984"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_ECN"                            offset="1982"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_NWK_QOS"                        offset="1974"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_TRACE_PACKET"                   offset="1973"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PACKET_HEADER_SIZE_RANGE"       offset="1971"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_PORT_KEY_GEN_VAR"            offset="1907"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_IN_PORT_MAPPED_PP_PORT"         offset="1898"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_PTC_KEY_GEN_VAR"                offset="1866"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_VID_VALID"                      offset="1865"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_L4OPS"                          offset="1841"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_OBJECT10"            offset="1838"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_CPU_TRAP_CODE_PROFILE"          offset="1837"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_TM_FLOW_ID"                     offset="1817"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ID_3"            offset="1797"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ID_2"            offset="1777"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ID_1"            offset="1757"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ID_0"            offset="1737"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_9"                offset="1717"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_8"                offset="1697"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_7"                offset="1677"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_6"                offset="1657"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_5"                offset="1637"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_4"                offset="1617"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_3"                offset="1597"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_2"                offset="1577"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_1"                offset="1557"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_0"                offset="1537"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_TM_FLOW_ATR"                    offset="1532"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ATR_3"           offset="1527"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ATR_2"           offset="1522"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ATR_1"           offset="1517"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ATR_0"           offset="1512"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_9"               offset="1507"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_8"               offset="1502"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_7"               offset="1497"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_6"               offset="1492"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_5"               offset="1487"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_4"               offset="1482"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_3"               offset="1477"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_2"               offset="1472"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_1"               offset="1467"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_0"               offset="1462"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_META_DATA"           offset="1446"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_CONTEXT_KEY_GEN_VAR"            offset="1414"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_EGRESS_PARSING_INDEX"           offset="1411"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_FWD_LAYER_INDEX"                offset="1408"/>
                     <!-- FIXME: SDK-179446 currently assumed that virtual wires allocated only on General data which has start offset of DNX_FIELD_IPMF1_QUAL_GENERAL_DATA_0-->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_AC_IN_LIF_WIDE_DATA"            offset="2912"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" qual="DNX_FIELD_IPMF1_QUAL_NATIVE_AC_IN_LIF_WIDE_DATA"     offset="2912"/>
                <!-- Entries for IPMF2 -->
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_TCAM_ACTION_0"             offset="1320"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_TCAM_ACTION_1"             offset="1256"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_TCAM_ACTION_2"             offset="1192"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_TCAM_ACTION_3"             offset="1128"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_EXEM_ACTION"               offset="1068"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_PMF1_DIRECT_ACTION"             offset="944"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_STATE_DATA"                     offset="935"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_STATE_ADDRESS"                  offset="925"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_KEY_F_INITIAL"                  offset="765"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_KEY_G_INITIAL"                  offset="605"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_KEY_H_INITIAL"                  offset="445"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_KEY_I_INITIAL"                  offset="285"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_KEY_J_INITIAL"                  offset="125"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_LAG_LB_KEY"                     offset="109"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_NWK_LB_KEY"                     offset="93"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_ECMP_LB_KEY_2"                  offset="77"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_ECMP_LB_KEY_1"                  offset="61"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_ECMP_LB_KEY_0"                  offset="45"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_TRJ_HASH"                       offset="29"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_CMP_KEY_0_DECODED"              offset="23"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_CMP_KEY_1_DECODED"              offset="17"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_CMP_KEY_TCAM_0_DECODED"         offset="11"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_CMP_KEY_TCAM_1_DECODED"         offset="5"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF2" qual="DNX_FIELD_IPMF2_QUAL_NASID"                          offset="0"/>
                <!-- Entries for IPMF3 -->
                    <!-- FIXME SDK-150529: change the offset by adding first bit used by PMF -->
                  
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PMF_ETH_RIF_PROFILE"            offset="1369"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_TM_PORT_PMF_PROFILE"            offset="436"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PP_PORT_PMF_GENERAL_DATA"       offset="372+DATA(field, profile_bits, nof_bits_in_port_profile)"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PP_PORT_PMF_PROFILE"            offset="372"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_ALL_ONES"                       offset="1698"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_EXPECTED_WON"            offset="1693"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_FOUND"                    offset="1692"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_MATCH"                    offset="1691"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_STATION_MOVE"             offset="1690"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_VLAN"                     offset="1673"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_VSI"                      offset="1655"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_SRC_MAC"                  offset="1607"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_DATA"                     offset="1541"/>                      
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LEARN_INFO"                     offset="1538"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_RPF_ECMP_MODE"                  offset="1536"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_RPF_ECMP_GROUP"                 offset="1520"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_ADMT_PROFILE"                   offset="1517"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_BIER_STR_OFFSET"                offset="1509"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_BIER_STR_SIZE"                  offset="1507"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_BYTES_TO_REMOVE"                offset="1498"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_WEAK_TM_VALID"                  offset="1497"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_WEAK_TM_PROFILE"                offset="1491"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STAT_OBJ_LM_READ_INDEX"         offset="1489"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_CONGESTION_INFO"                offset="1487"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_END_OF_PACKET_EDITING"          offset="1484"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_EEI"                            offset="1460"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_EGRESS_LEARN_ENABLE"            offset="1459"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_CPU_TRAP_QUAL"       offset="1440"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_CPU_TRAP_CODE"       offset="1431"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DP_METER_COMMAND"    offset="1427"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DP"                  offset="1425"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_TC"                  offset="1422"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DESTINATION"         offset="1401"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_STRENGTH"            offset="1397"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_PAYLOAD"                    offset="1397"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VRF_VALUE"                      offset="1379"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_DOMAIN"                     offset="1379"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_DOMAIN_PROFILE"             offset="1369"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GENERAL_DATA_PMF_CONTAINER"     offset="1337"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GENERAL_DATA"                   offset="1241"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_COMMAND"               offset="1239"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_COMPENSATE_TIME_STAMP" offset="1238"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_ENCAPSULATION"         offset="1237"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_HEADER_OFFSET"         offset="1229"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_LIF_PROFILE_1"               offset="1221"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_LIF_PROFILE_0"               offset="1213"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_IN_LIF_1"                  offset="1191"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_IN_LIF_0"                  offset="1169"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PP_PORT"                        offset="1161"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_CORE_ID"                        offset="1160"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_PORT"                        offset="1160"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_TTL"                         offset="1152"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_INGRESS_LEARN_ENABLE"           offset="1151"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_ITPP_DELTA"                     offset="1143"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LAG_LB_KEY"                     offset="1127"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LATENCY_FLOW_ID_VALID"          offset="1126"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_LATENCY_FLOW_ID"                offset="1107"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_MIRROR_CODE"                    offset="1098"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_MIRROR_QUALIFIER"               offset="1090"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_NWK_LB_KEY"                     offset="1074"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_NWK_QOS"                        offset="1066"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_OAM_ID"                         offset="1047"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_OAM_OFFSET"                     offset="1039"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_OAM_STAMP_OFFSET"               offset="1031"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_OAM_SUB_TYPE"                   offset="1027"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_OAM_UP_MEP"                     offset="1026"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_OUT_LIF_3"                 offset="1004"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_OUT_LIF_2"                 offset="982"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_OUT_LIF_1"                 offset="960"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_GLOB_OUT_LIF_0"                 offset="938"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_APPLET"               offset="937"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_NASID"                          offset="932"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_BIER"                 offset="931"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_IEEE1588"             offset="930"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_EGRESS_PARSING_INDEX"           offset="927"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PTC"                            offset="919"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_EXT_STATISTICS_VALID"           offset="918"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PPH_RESERVED"                   offset="915"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PPH_TYPE"                       offset="913"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_RPF_DST"                        offset="892"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_RPF_DST_VALID"                  offset="891"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SNOOP_CODE"                     offset="882"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SNOOP_STRENGTH"                 offset="879"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SNOOP_QUALIFIER"                offset="871"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SRC_SYS_PORT"                   offset="855"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_ST_VSQ_PTR"                     offset="847"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STATISTICAL_SAMPLING_CODE"      offset="838"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STATISTICAL_SAMPLING_QUALIFIER" offset="830"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STACKING_ROUTE_HISTORY_BITMAP"  offset="814"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STATISTICS_META_DATA"           offset="798"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_STATISTICS_OBJECT10"            offset="795"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SYSTEM_HEADER_PROFILE_INDEX"    offset="791"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_TM_PROFILE"                     offset="789"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_1"                  offset="757"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_2"                  offset="725"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_3"                  offset="693"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_4"                  offset="661"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_1_TYPE"             offset="659"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_2_TYPE"             offset="657"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_3_TYPE"             offset="655"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_4_TYPE"             offset="653"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_USER_HEADERS_TYPE"              offset="653"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VISIBILITY"                     offset="652"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_VID_2"                offset="640"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_VID_1"                offset="628"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_DEI_2"                offset="627"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_PCP_2"                offset="624"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_PCP_DEI_2"            offset="624"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_DEI_1"                offset="623"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_PCP_1"                offset="620"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_PCP_DEI_1"            offset="620"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_CMD_INDEX"            offset="613"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_CMD"                  offset="613"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_LAYER_ADDITIONAL_INFO"      offset="609"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SLB_LEARN_NEEDED"               offset="608"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SLB_KEY"                        offset="528"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_SLB_PAYLOAD"                    offset="468"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_PTC_KEY_GEN_VAR"                offset="436"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_PORT_KEY_GEN_VAR"            offset="372"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_IN_PORT_MAPPED_PP_PORT"         offset="363"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_CONTEXT_KEY_GEN_VAR"            offset="331"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FER_STATISTICS_OBJ"             offset="259"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF3" qual="DNX_FIELD_IPMF3_QUAL_FWD_LAYER_INDEX"                offset="256"/>
                <!-- Entries for EPMF -->
                    <!-- FIXME SDK-150529: change the offset by adding first bit used by PMF -->
                    
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_TM_PORT_PMF_PROFILE"                   offset="2453"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PP_PORT_PMF_PROFILE"                   offset="2501"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_RESERVED"                         offset="1167"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_VISIBILITY"                       offset="1168"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_PROFILE"                       offset="1169"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_ECN_ENABLE"                       offset="1171"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_CNI"                              offset="1172"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_BIER_BFR_EXT_PRESENT"             offset="1173"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_FLOW_ID_EXT_PRESENT"              offset="1174"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_APPLICATION_SPECIFIC_EXT_PRESENT" offset="1175"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_DESTINATION_EXT_PRESENT"       offset="1176"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_MCID_OR_OUTLIF_0_OR_MCDB_PTR"     offset="1177"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_ACTION_IS_MC"                  offset="1199"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_PPH_PRESENT"                      offset="1200"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TSH_EXT_PRESENT"                  offset="1201"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_ACTION_TYPE"                   offset="1202"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_DP"                               offset="1204"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PP_DSP"                                offset="1206"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_SRC_SYS_PORT"                     offset="1214"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_TC"                               offset="1230"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FTMH_PACKET_SIZE"                      offset="1233"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LB_KEY"                                offset="1247"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_NWK_KEY"                               offset="1255"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_STACKING_EXT"                          offset="1271"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_BIER_BFR_EXT"                          offset="1287"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_TM_DESTINATION_EXT"                    offset="1303"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_APPLICATION_SPECIFIC_EXT"              offset="1327"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_TSH_EXT"                               offset="1375"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FWD_STRENGTH"                          offset="1431"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_PARSING_START_TYPE"                offset="1435"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_PARSING_START_OFFSET"              offset="1440"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_LIF_EXT_TYPE"                      offset="1447"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_FHEI_SIZE"                         offset="1450"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_LEARN_EXT_PRESENT"                 offset="1452"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_TTL"                               offset="1453"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_NWK_QOS"                           offset="1461"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_IN_LIF"                            offset="1469"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_FWD_DOMAIN"                        offset="1491"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_VRF_VALUE"                         offset="1491"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_IN_LIF_PROFILE"                    offset="1509"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_END_OF_PACKET_EDITING"             offset="1517"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_FWD_LAYER_ADDITIONAL_INFO"         offset="1520"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_VALUE1"                            offset="1524"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PPH_VALUE2"                            offset="1532"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FHEI_EXT"                              offset="1540"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT"                             offset="1604"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT_DATA"                        offset="1607"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT_SRC_MAC"                     offset="1673"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT_VSI"                         offset="1721"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT_VLAN"                        offset="1739"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LIF_EXT"                               offset="1756"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_4"                         offset="1828"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_3"                         offset="1860"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_2"                         offset="1892"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_1"                         offset="1924"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_4_TYPE"                    offset="1956"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_3_TYPE"                    offset="1958"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_2_TYPE"                    offset="1960"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_1_TYPE"                    offset="1962"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IS_TDM"                                offset="1964"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_CUD_OUTLIF_OR_MCDB_PTR"                offset="1965"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_DISCARD"                               offset="1987"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_OUT_LIF_PROFILE"                       offset="1988"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PMF_ETH_RIF_PROFILE"                   offset="1991"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_ETH_TAG_FORMAT"                        offset="1992"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_UPDATED_TPIDS_PACKET_DATA"             offset="2002"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IVE_BYTES_TO_ADD"                      offset="2146"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IVE_BYTES_TO_REMOVE"                   offset="2151"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_ETHER_TYPE_CODE"                       offset="2156"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FABRIC_OR_EGRESS_MC"                   offset="2172"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_ESTIMATED_BTR"                         offset="2173"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FWD_CONTEXT"                           offset="2181"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_0"                        offset="2187"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_1"                        offset="2209"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_2"                        offset="2231"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_3"                        offset="2253"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_GLOB_IN_LIF_0"                         offset="2275"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IN_LIF_PROFILE_0"                      offset="2297"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IP_MC_ELIGIBLE"                        offset="2305"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_IP_MC_SHOULD_BE_BRIDGED"               offset="2306"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LEARN_VALID"                           offset="2307"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_LOCAL_OUT_LIF"                         offset="2308"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_FWD_ACTION_PROFILE_INDEX"              offset="2328"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_SNOOP_ACTION_PROFILE_INDEX"            offset="2331"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_SNOOP_STRENGTH"                        offset="2333"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_SYSTEM_HEADERS_SIZE"                   offset="2336"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_DST_SYS_PORT"                          offset="2343"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_OUT_TM_PORT"                           offset="2359"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_OUT_PP_PORT"                           offset="2367"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PACKET_IS_APPLET"                      offset="2375"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_MEM_SOFT_ERR"                          offset="2376"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_TC_MAP_PROFILE"                        offset="2377"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_L4_PORT_IN_RANGE"                      offset="2381"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PROGRAM_INDEX"                         offset="2405"/>
                    <entry stage="DNX_FIELD_STAGE_EPMF" qual="DNX_FIELD_EPMF_QUAL_PER_PORT_TABLE_DATA"                   offset="2411"/>
                 </entries>
            </table>

            <table name="layer_record_info_ingress">
                <key name="layer_record" size="DNX_FIELD_LR_QUAL_NOF"/>
                <value name="valid" default="0"/>
                <value name="size" default="0"/>
                <value name="offset" default="0"/>
                <entries>
                    <entry layer_record="DNX_FIELD_LR_QUAL_OFFSET"                            valid="TRUE"   size="8"   offset="0"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_PROTOCOL"                          valid="TRUE"   size="5"   offset="24"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_QUALIFIER"                         valid="TRUE"   size="16"  offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_IS_DA_MC"                      valid="DATA(field, dnx_data_internal, lr_eth_is_da_mac_valid)"  
                                                                                                             size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_IS_DA_BC"                      valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_1ST_TPID_EXIST"                valid="TRUE"   size="1"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_1ST_TPID_INDEX"                valid="TRUE"   size="3"   offset="11"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_2ND_TPID_EXIST"                valid="TRUE"   size="1"   offset="14"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_2ND_TPID_INDEX"                valid="TRUE"   size="3"   offset="15"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_3RD_TPID_EXIST"                valid="TRUE"   size="1"   offset="18"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_3RD_TPID_INDEX"                valid="TRUE"   size="3"   offset="19"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_MC"                        valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_HAS_OPTION"                   valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_FRAGMENTED"                valid="TRUE"   size="1"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_1ST_FRAGMENT"              valid="TRUE"   size="1"   offset="11"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_1ST_ADD_HEADER_EXIST"         valid="TRUE"   size="1"   offset="12"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_1ST_ADD_HEADER"               valid="TRUE"   size="4"   offset="13"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_2ND_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="17"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_TUNNEL_TYPE"                  valid="TRUE"   size="4"   offset="18"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_IS_MC"                        valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_1ST_ADD_HEADER_EXIST"         valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_1ST_ADD_HEADER"               valid="TRUE"   size="5"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_2ND_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="15"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_2ND_ADD_HEADER"               valid="TRUE"   size="5"   offset="16"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_3RD_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="21"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_VALUE_1"                      valid="TRUE"   size="1"   offset="22"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_SRV6_EP_SEGMENT_LEFT_MINUS_ONE"    valid="TRUE"   size="8"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_MPLS_NOF_LABELS"                   valid="TRUE"   size="4"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_BIER_BITSTRINGLENGTH"              valid="TRUE"   size="4"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_IS_FIP"                       valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_IS_ENCAP"                     valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_VFT_EXIST"                    valid="TRUE"   size="1"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ITMH_PPH_TYPE"                     valid="TRUE"   size="2"   offset="8"/>
                 </entries>
            </table>

            <table name="layer_record_info_egress">
                <key name="layer_record" size="DNX_FIELD_LR_QUAL_NOF"/>
                <value name="valid" default="0"/>
                <value name="size" default="0"/>
                <value name="offset" default="0"/>
                <entries>
                    <entry layer_record="DNX_FIELD_LR_QUAL_OFFSET"                            valid="TRUE"   size="7"   offset="0"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_PROTOCOL"                          valid="TRUE"   size="5"   offset="23"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_QUALIFIER"                         valid="TRUE"   size="16"  offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_IS_DA_MC"                      valid="DATA(field, dnx_data_internal, lr_eth_is_da_mac_valid)"
                                                                                                             size="1"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_IS_DA_BC"                      valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_1ST_TPID_EXIST"                valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_1ST_TPID_INDEX"                valid="TRUE"   size="3"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_2ND_TPID_EXIST"                valid="TRUE"   size="1"   offset="13"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_2ND_TPID_INDEX"                valid="TRUE"   size="3"   offset="14"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_3RD_TPID_EXIST"                valid="TRUE"   size="1"   offset="17"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ETH_3RD_TPID_INDEX"                valid="TRUE"   size="3"   offset="18"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_MC"                        valid="TRUE"   size="1"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_HAS_OPTION"                   valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_FRAGMENTED"                valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_IS_1ST_FRAGMENT"              valid="TRUE"   size="1"   offset="10"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_1ST_ADD_HEADER_EXIST"         valid="TRUE"   size="1"   offset="11"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_1ST_ADD_HEADER"               valid="TRUE"   size="4"   offset="12"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_2ND_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="16"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV4_TUNNEL_TYPE"                  valid="TRUE"   size="4"   offset="17"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_IS_MC"                        valid="TRUE"   size="1"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_1ST_ADD_HEADER_EXIST"         valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_1ST_ADD_HEADER"               valid="TRUE"   size="5"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_2ND_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="14"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_2ND_ADD_HEADER"               valid="TRUE"   size="5"   offset="15"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_3RD_ADD_HEADER_EXISTS"        valid="TRUE"   size="1"   offset="20"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_IPV6_VALUE_1"                      valid="TRUE"   size="1"   offset="21"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_SRV6_EP_SEGMENT_LEFT_MINUS_ONE"    valid="TRUE"   size="8"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_MPLS_NOF_LABELS"                   valid="TRUE"   size="4"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_BIER_BITSTRINGLENGTH"              valid="TRUE"   size="4"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_IS_FIP"                       valid="TRUE"   size="1"   offset="7"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_IS_ENCAP"                     valid="TRUE"   size="1"   offset="8"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_FCOE_VFT_EXIST"                    valid="TRUE"   size="1"   offset="9"/>
                    <entry layer_record="DNX_FIELD_LR_QUAL_ITMH_PPH_TYPE"                     valid="TRUE"   size="2"   offset="7"/>
                 </entries>
            </table>
        </tables>
    </sub_module>

    <sub_module name="action" >
        <defines>
            <define name="user_1st" value="2048"></define>
            <define name="user_nof" value="256"></define>
            <define name="vw_1st" value="8292"></define>
            <define name="vw_nof" value="100"></define>
        </defines>
    </sub_module>
    
    <sub_module name="virtual_wire">
        <defines>
            <define name="signals_nof" value="128"></define>
            <define name="actions_per_signal_nof" value="10"></define>
            <define name="general_data_user_general_containers_size" value="384"></define>
            <define name="ipmf1_general_data_index" value="4"></define>
        </defines>
        <tables>
            <table name="signal_mapping">
                <key name="stage" size="DNX_FIELD_STAGE_NOF"/>
                <key name="signal_id" size="DATA(field, virtual_wire, signals_nof)"/>
                <value name="signal_name" default="EMPTY"/>
                <value name="mapped_qual" default="DNX_FIELD_QUAL_ID_INVALID"/>
                <value name="offset_from_qual" default="0"/>
                <value name="mapped_action" default="0"/><!-- Assuming all Action DBAL ENUMS have EMPTY as 0  -->
                <value name="action_offset" default="0"/>
                <entries>
                <!-- Entries for IFWD2  -->
                    
                <!-- Entries for IPMF1 -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="0"   signal_name="mem_soft_err"                    mapped_qual="DNX_FIELD_IPMF1_QUAL_MEM_SOFT_ERR"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="1"   signal_name="context"                         mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_CONTEXT"   />  <!-- input context output fwd_ontext -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="2"   signal_name="acl_context"                     mapped_qual="DNX_FIELD_IPMF1_QUAL_ACL_CONTEXT"                     mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_ACL_CONTEXT"/><!-- Special action, but apparently meaningless. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="3"   signal_name="packet_is_applet"                mapped_qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_APPLET"   />
                    <!-- Note that the general data index is in ipmf1_general_data_index. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="4"   signal_name="general_data"                    mapped_qual="DNX_FIELD_IPMF1_QUAL_GENERAL_DATA_0"                  mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PEM_GENERAL_DATA0, DBAL_ENUM_FVAL_IPMF1_ACTION_PEM_GENERAL_DATA1, DBAL_ENUM_FVAL_IPMF1_ACTION_PEM_GENERAL_DATA2, DBAL_ENUM_FVAL_IPMF1_ACTION_PEM_GENERAL_DATA3"   action_offset="160, 192, 256, 296"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="5"   signal_name="fwd_domain_id"                   mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_DOMAIN"   /><!-- Dual action, domain ID and profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="6"   signal_name="fwd_domain_profile"              mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_DOMAIN_PROFILE"   /><!-- Dual action, domain ID and profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="7"   signal_name="vlan_edit_cmd"                   mapped_qual="DNX_FIELD_IPMF1_QUAL_VLAN_EDIT_CMD"                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_VLAN_EDIT_CMD_INDEX, DBAL_ENUM_FVAL_IPMF1_ACTION_VLAN_EDIT_VID_1, DBAL_ENUM_FVAL_IPMF1_ACTION_VLAN_EDIT_PCP_DEI_1, DBAL_ENUM_FVAL_IPMF1_ACTION_VLAN_EDIT_VID_2, DBAL_ENUM_FVAL_IPMF1_ACTION_VLAN_EDIT_PCP_DEI_2"   action_offset="0, 7, 19, 23, 35"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="8"   signal_name="src_system_port_id"              mapped_qual="DNX_FIELD_IPMF1_QUAL_SRC_SYS_PORT"                    mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_SRC_SYS_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="9"   signal_name="snoop_code"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_SNOOP_CODE"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="10"  signal_name="snoop_strength"                  mapped_qual="DNX_FIELD_IPMF1_QUAL_SNOOP_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="11"  signal_name="fwd_layer_additional_info"       mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_LAYER_ADDITIONAL_INFO"       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_FWD_LAYER_ADDITIONAL_INFO"   /><!-- Initial value affects statistics_object10 -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="12"  signal_name="rpf_destination"                 mapped_qual="DNX_FIELD_IPMF1_QUAL_RPF_DST"                         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_RPF_DST"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="13"  signal_name="rpf_destination_valid"           mapped_qual="DNX_FIELD_IPMF1_QUAL_RPF_DST_VALID"                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_RPF_DST_VALID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="14"  signal_name="packet_is_ieee1588"              mapped_qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_IEEE1588"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="15"  signal_name="ieee1588_compensate_time_stamp"  mapped_qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_COMPENSATE_TIME_STAMP"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="16"  signal_name="ieee1588_command"                mapped_qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_COMMAND"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="17"  signal_name="ieee1588_encapsulation"          mapped_qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_ENCAPSULATION"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="18"  signal_name="ieee1588_header_offset"          mapped_qual="DNX_FIELD_IPMF1_QUAL_IEEE1588_HEADER_OFFSET"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="19"  signal_name="packet_is_compatible_mc"         mapped_qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_COMPATIBLE_MC"         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PACKET_IS_COMPATIBLE_MC"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="20"  signal_name="prt_qualifier"                   mapped_qual="DNX_FIELD_IPMF1_QUAL_PRT_QUALIFIER"   />
                    <!-- Header is not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="21"  signal_name="packet_header"                      />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="22"  signal_name="packet_header_size"              mapped_qual="DNX_FIELD_IPMF1_QUAL_PACKET_HEADER_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="23"  signal_name="oam_id"                          mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_ID"                          mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_OAM_ID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="24"  signal_name="oam_up_mep"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_UP_MEP"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="25"  signal_name="oam_sub_type"                    mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_SUB_TYPE"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="26"  signal_name="oam_offset"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_OFFSET"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="27"  signal_name="oam_stamp_offset"                mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_STAMP_OFFSET"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="28"  signal_name="mirror_code"                     mapped_qual="DNX_FIELD_IPMF1_QUAL_MIRROR_CODE"   /><!-- Dual action, mirror_code and mirror_qualifier. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="29"  signal_name="learn_info"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_LEARN_INFO"                      mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_LEARN_INFO_0, DBAL_ENUM_FVAL_IPMF1_ACTION_LEARN_INFO_1, DBAL_ENUM_FVAL_IPMF1_ACTION_LEARN_INFO_2, DBAL_ENUM_FVAL_IPMF1_ACTION_LEARN_INFO_3, DBAL_ENUM_FVAL_IPMF1_ACTION_LEARN_OR_TRANSPLANT"   action_offset="0, 32, 64, 96, 152"   /><!-- We do not add the last action info action, because learn_or_transplant bit is not changed by it. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="30"  signal_name="ingress_learn_enable"            mapped_qual="DNX_FIELD_IPMF1_QUAL_INGRESS_LEARN_ENABLE"            mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_INGRESS_LEARN_ENABLE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="31"  signal_name="egress_learn_enable"             mapped_qual="DNX_FIELD_IPMF1_QUAL_EGRESS_LEARN_ENABLE"             mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_EGRESS_LEARN_ENABLE"/>
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="32"  signal_name="in_lifs"                         mapped_qual="DNX_FIELD_IPMF1_QUAL_GLOB_IN_LIF_0"                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_IN_LIF_0, DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_IN_LIF_1"   action_offset="0, 22"   /> <!-- Action offset would be better as the global lif size, if such DNX DATA existed. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="33"  signal_name="in_lif_profiles"                 mapped_qual="DNX_FIELD_IPMF1_QUAL_IN_LIF_PROFILE_0"                mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_IN_LIF_PROFILE_0, DBAL_ENUM_FVAL_IPMF1_ACTION_IN_LIF_PROFILE_1"   action_offset="0, 8"   /> <!-- Action offset would be better as the in lif profile, if such DNX DATA existed. -->   />
                    <!-- Layer records are not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="34"  signal_name="layer_offsets"                      />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="35"  signal_name="layer_qualifiers"                   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="36"  signal_name="layer_protocols"                    />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="37"  signal_name="fwd_action_strength"             mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="38"  signal_name="fwd_action_destination"          mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_DESTINATION"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="39"  signal_name="fwd_action_cpu_trap_code"        mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_CPU_TRAP_CODE"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="40"  signal_name="fwd_action_cpu_trap_qual"        mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_ACTION_CPU_TRAP_QUAL"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="41"  signal_name="eei"                             mapped_qual="DNX_FIELD_IPMF1_QUAL_EEI"                             mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_EEI"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="42"  signal_name="elk_lkp_payload"                 mapped_qual="DNX_FIELD_IPMF1_QUAL_ELK_LKP_HIT_0"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="43"  signal_name="in_port"                         mapped_qual="DNX_FIELD_IPMF1_QUAL_PP_PORT"                         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_IN_PP_PORT"   /><!-- Affect other things. -->
                    <!-- Note that core_id in PBUS is not present here as a VW. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="44"  signal_name="ptc"                             mapped_qual="DNX_FIELD_IPMF1_QUAL_PTC"                             mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PTC"   /><!-- Affect other things. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="45"  signal_name="statistics_objects"                 />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="46"  signal_name="statistics_objects_cmd"             />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="47"  signal_name="out_lifs"                        mapped_qual="DNX_FIELD_IPMF1_QUAL_GLOB_OUT_LIF_0"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="48"  signal_name="in_ttl"                          mapped_qual="DNX_FIELD_IPMF1_QUAL_IN_TTL"                          mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_IN_TTL"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="49"  signal_name="fwd_layer_index"                 mapped_qual="DNX_FIELD_IPMF1_QUAL_FWD_LAYER_INDEX"                 mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_FWD_LAYER_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="50"  signal_name="saved_context_profile"           mapped_qual="DNX_FIELD_IPMF1_QUAL_SAVED_CONTEXT_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="51"  signal_name="visibility"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_VISIBILITY"                      mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_VISIBILITY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="52"  signal_name="visibility_clear"                                                                                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_VISIBILITY_CLEAR"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="53"  signal_name="statistical_sampling_code"          /><!-- Dual action, statistical_sampling_code and statistical_sampling_qualifier  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="54"  signal_name="stat_obj_lm_read_index"                                                                             mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STAT_OBJ_LM_READ_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="55"  signal_name="rpf_out_lif"                     mapped_qual="DNX_FIELD_IPMF1_QUAL_RPF_OUT_LIF"   /><!-- Dual action, affect rpf_route_valid, rpf_default_route_found and rpf_out_lif. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="56"  signal_name="rpf_default_route_found"         mapped_qual="DNX_FIELD_IPMF1_QUAL_RPF_DEFAULT_ROUTE_FOUND"   /><!-- Dual action, affect rpf_route_valid, rpf_default_route_found and rpf_out_lif( -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="57"  signal_name="rpf_route_valid"                 mapped_qual="DNX_FIELD_IPMF1_QUAL_RPF_ROUTE_VALID"   /><!-- Dual action, affect rpf_route_valid, rpf_default_route_found and rpf_out_lif( -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="58"  signal_name="ecmp_lb_keys"                    mapped_qual="DNX_FIELD_IPMF1_QUAL_ECMP_LB_KEY_0"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="59"  signal_name="lag_lb_key"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_LAG_LB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="60"  signal_name="nwk_lb_key"                      mapped_qual="DNX_FIELD_IPMF1_QUAL_NWK_LB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="61"  signal_name="nasid"                           mapped_qual="DNX_FIELD_IPMF1_QUAL_NASID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="62"  signal_name="oam_statistics_obj"                 /><!-- Available for J2P ranges. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="63"  signal_name="oam_statistics_obj_cmd"             />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="64"  signal_name="statistics_meta_data"            mapped_qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_META_DATA"            mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_META_DATA"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="65"  signal_name="oam_meter_disable"               mapped_qual="DNX_FIELD_IPMF1_QUAL_OAM_METER_DISABLE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="66"  signal_name="incoming_tag_structure"          mapped_qual="DNX_FIELD_IPMF1_QUAL_INCOMING_TAG_STRUCTURE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="67"  signal_name="tc"                              mapped_qual="DNX_FIELD_IPMF1_QUAL_TC"                              mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_TC"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="68"  signal_name="dp"                              mapped_qual="DNX_FIELD_IPMF1_QUAL_DP"                              mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_DP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="69"  signal_name="ecn"                             mapped_qual="DNX_FIELD_IPMF1_QUAL_ECN"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="70"  signal_name="nwk_qos"                         mapped_qual="DNX_FIELD_IPMF1_QUAL_NWK_QOS"                         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_NWK_QOS"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="71"  signal_name="trace_packet"                    mapped_qual="DNX_FIELD_IPMF1_QUAL_TRACE_PACKET"                    mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_TRACE_PACKET_ACT"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="72"  signal_name="dp_meter_command"                                                                                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_DP_METER_COMMAND"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="73"  signal_name="mirror_qualifier"                   /><!-- Dual action, domain ID and profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="74"  signal_name="system_header_profile_index"                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_SYSTEM_HEADER_PROFILE_INDEX"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="75"  signal_name="all_out_lifs"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_OUT_LIF_0, DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_OUT_LIF_1, DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_OUT_LIF_2, DBAL_ENUM_FVAL_IPMF1_ACTION_GLOB_OUT_LIF_3"   action_offset="0, 22, 44, 66"   /><!-- Action offset would be better as the global lif size, if such DNX DATA existed. Note that the signal can also be affected by special action DBAL_ENUM_FVAL_IPMF1_ACTION_OUT_LIF_PUSH. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="76"  signal_name="st_vsq_pointer"                                                                                     mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_ST_VSQ_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="77"  signal_name="stacking_route_history_bitmap"                                                                      mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STACKING_ROUTE_HISTORY_BITMAP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="78"  signal_name="pph_type"                                                                                           mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PPH_TYPE"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="79"  signal_name="user_header1"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_1"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="80"  signal_name="user_header2"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_2"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="81"  signal_name="user_header3"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_3"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="82"  signal_name="user_header4"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_4"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="83"  signal_name="user_headers_type"                                                                                  mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_1_TYPE, DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_2_TYPE, DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_3_TYPE, DBAL_ENUM_FVAL_IPMF1_ACTION_USER_HEADER_4_TYPE"   action_offset="0, 2, 4, 6"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="84"  signal_name="itpp_delta"                                                                                         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_ITPP_DELTA"   /><!-- Becomes dual signal in J2c and above -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="85"  signal_name="latency_flow_id"                    /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="86"  signal_name="latency_flow_profile"               /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="87"  signal_name="admt_profile"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_ADMT_PROFILE"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="88"  signal_name="pph_reserved"                                                                                       mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PPH_RESERVED"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="89"  signal_name="bier_string_size"                mapped_qual="DNX_FIELD_IPMF1_QUAL_BIER_STR_SIZE"                   mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_BIER_STR_SIZE"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="90"  signal_name="bier_string_offset"              mapped_qual="DNX_FIELD_IPMF1_QUAL_BIER_STR_OFFSET"                 mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_BIER_STR_OFFSET"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="91"  signal_name="egress_parsing_index"            mapped_qual="DNX_FIELD_IPMF1_QUAL_EGRESS_PARSING_INDEX"            mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_EGRESS_PARSING_INDEX"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="92"  signal_name="congestion_info"                                                                                    mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_CONGESTION_INFO"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="93"  signal_name="statistics_objects_resolved"     mapped_qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ID_0"                 mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_0, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_1, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_2, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_3, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_4, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_5, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_6, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_7, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_8, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ID_9"   action_offset="0, 20, 40, 60, 80, 100, 120, 140, 160, 180"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="94"  signal_name="statistics_object10"             mapped_qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_OBJECT10"             mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_OBJECT_10"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="95"  signal_name="statistics_objects_atr"          mapped_qual="DNX_FIELD_IPMF1_QUAL_STATISTICS_ATR_0"                mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_0, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_1, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_2, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_3, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_4, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_5, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_6, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_7, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_8, DBAL_ENUM_FVAL_IPMF1_ACTION_STATISTICS_ATR_9"   action_offset="0, 5, 10, 15, 20, 25, 30, 35, 40, 45"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="96"  signal_name="tm_profile"                                                                                         mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_TM_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="97"  signal_name="fwd_context"                                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_FWD_CONTEXT"   /> <!-- input context output fwd_ontext -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="98"  signal_name="slb_payload"                                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_PAYLOAD0, DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_PAYLOAD1"   action_offset="0, 32"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="99"  signal_name="slb_found"                                                                                          mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_FOUND"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="100" signal_name="end_of_packet_editing"                                                                              mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_END_OF_PACKET_EDITING"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="101" signal_name="ext_statistics"                  mapped_qual="DNX_FIELD_IPMF1_QUAL_EXT_STATISTICS_ID_0"   /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="102" signal_name="ext_statistics_opcode"              /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="103" signal_name="slb_key"                                                                                            mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_KEY0, DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_KEY1, DBAL_ENUM_FVAL_IPMF1_ACTION_SLB_KEY2"   action_offset="0, 32, 64"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="104" signal_name="snoop_qualifier"                    /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="105" signal_name="statistical_sampling_qualifier"     /><!-- Dual action, statistical_sampling_code and statistical_sampling_qualifier  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="106" signal_name="latency_flow_id_valid"              /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="107" signal_name="elephant_trap_info"                                                                                 mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_ELEPHANT_PAYLOAD"   action_offset="64"   /><!-- Dual signal, but simply writes to a part of the signal. Has default value. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="108" signal_name="elephant_learn_needed"              />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="109" signal_name="packet_is_bier"                  mapped_qual="DNX_FIELD_IPMF1_QUAL_PACKET_IS_BIER"                  mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_PACKET_IS_BIER"   /><!-- Has default value -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="110" signal_name="ingress_time_stamp"                                                                                 mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_INGRESS_TIME_STAMP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="111" signal_name="ingress_time_stamp_override"                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF1_ACTION_INGRESS_TIME_STAMP_OVERRIDE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="112" signal_name="ext_statistics_valid"               /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="113" signal_name="next_nasid"                         />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="114" signal_name="next_context"                       />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="115" signal_name="csb_key"                            />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="116" signal_name="oam_time_of_day"                    />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="117" signal_name="ntp_time_of_day"                    />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="118" signal_name="csa_key"                            />
                    <entry stage="DNX_FIELD_STAGE_IPMF1" signal_id="119" signal_name="packet_size"                        />


                <!-- Entries for IPMF3 -->
                  
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="0"   signal_name="acl_context"                        />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="1"   signal_name="admt_profile"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_ADMT_PROFILE"                    mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_ADMT_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="2"   signal_name="bier_string_offset"              mapped_qual="DNX_FIELD_IPMF3_QUAL_BIER_STR_OFFSET"                 mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_BIER_STR_OFFSET"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="3"   signal_name="bier_string_size"                mapped_qual="DNX_FIELD_IPMF3_QUAL_BIER_STR_SIZE"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_BIER_STR_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="4"   signal_name="congestion_info"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_CONGESTION_INFO"                 mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_CONGESTION_INFO"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="5"   signal_name="eei"                             mapped_qual="DNX_FIELD_IPMF3_QUAL_EEI"                             mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_EEI"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="6"   signal_name="egress_learn_enable"             mapped_qual="DNX_FIELD_IPMF3_QUAL_EGRESS_LEARN_ENABLE"             mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_EGRESS_LEARN_ENABLE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="7"   signal_name="end_of_packet_editing"           mapped_qual="DNX_FIELD_IPMF3_QUAL_END_OF_PACKET_EDITING"           mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_END_OF_PACKET_EDITING"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="8"   signal_name="ext_statistics_valid"            mapped_qual="DNX_FIELD_IPMF3_QUAL_EXT_STATISTICS_VALID"   /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="9"   signal_name="ext_statistics"                     /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="10"  signal_name="ext_statistics_opcode"              /><!-- Dual signal, merges ext_statistics_valid, ext_statistics_opcode and ext_statistics. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="11"  signal_name="fwd_action_destination"          mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DESTINATION"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="12"  signal_name="dp"                              mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DP"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_DP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="13"  signal_name="tc"                              mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_TC"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_TC"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="14"  signal_name="dp_meter_command"                mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_DP_METER_COMMAND"     mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_DP_METER_COMMAND"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="15"  signal_name="fwd_action_strength"             mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="16"  signal_name="fwd_action_cpu_trap_code"        mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_CPU_TRAP_CODE"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="17"  signal_name="fwd_domain_id"                   mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_DOMAIN"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_FWD_DOMAIN"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="18"  signal_name="fwd_domain_profile"              mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_DOMAIN_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="19"  signal_name="fwd_layer_index"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_LAYER_INDEX"                 mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_FWD_LAYER_INDEX"   />
                    <!-- Only parts of the general data are availalbe on pbus for iPMF3 (what the iPMF1 actions change). -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="20"  signal_name="general_data"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_GENERAL_DATA"                    mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_GENERAL_DATA_0, DBAL_ENUM_FVAL_IPMF3_ACTION_GENERAL_DATA_1, DBAL_ENUM_FVAL_IPMF3_ACTION_GENERAL_DATA_2, DBAL_ENUM_FVAL_IPMF3_ACTION_GENERAL_DATA_3"   action_offset="160, 192, 254, 296"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="21"  signal_name="ieee1588_command"                mapped_qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_COMMAND"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="22"  signal_name="ieee1588_compensate_time_stamp"  mapped_qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_COMPENSATE_TIME_STAMP"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="23"  signal_name="ieee1588_encapsulation"          mapped_qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_ENCAPSULATION"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="24"  signal_name="ieee1588_header_offset"          mapped_qual="DNX_FIELD_IPMF3_QUAL_IEEE1588_HEADER_OFFSET"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="25"  signal_name="in_lif_profiles"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_IN_LIF_PROFILE_0"                mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_IN_LIF_PROFILE_0, DBAL_ENUM_FVAL_IPMF3_ACTION_IN_LIF_PROFILE_1"   action_offset="0, 8"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="26"  signal_name="in_lifs"                         mapped_qual="DNX_FIELD_IPMF3_QUAL_GLOB_IN_LIF_0"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_GLOB_IN_LIF_0, DBAL_ENUM_FVAL_IPMF3_ACTION_GLOB_IN_LIF_1"   action_offset="0, 22"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="27"  signal_name="in_port"                         mapped_qual="DNX_FIELD_IPMF3_QUAL_PP_PORT"                         mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_IN_PP_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="28"  signal_name="in_ttl"                          mapped_qual="DNX_FIELD_IPMF3_QUAL_IN_TTL"                          mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_IN_TTL"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="29"  signal_name="ingress_learn_enable"            mapped_qual="DNX_FIELD_IPMF3_QUAL_INGRESS_LEARN_ENABLE"            mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_INGRESS_LEARN_ENABLE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="30"  signal_name="itpp_delta"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_ITPP_DELTA"   /><!-- Dual action, writes to both itpp_delta and itpp_delta_valid. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="31"  signal_name="lag_lb_key"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_LAG_LB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="32"  signal_name="latency_flow_id"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_LATENCY_FLOW_ID"   /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="33"  signal_name="latency_flow_profile"               /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <!-- Layer records are not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="34"  signal_name="layer_offsets"                      />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="35"  signal_name="layer_protocols"                    />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="36"  signal_name="layer_qualifiers"                   />
                    
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="37"  signal_name="mem_soft_err"                       />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="38"  signal_name="mirror_code"                     mapped_qual="DNX_FIELD_IPMF3_QUAL_MIRROR_CODE"   /><!-- Dual action, writes to both mirror_code and mirror_qualifier. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="39"  signal_name="mirror_qualifier"                mapped_qual="DNX_FIELD_IPMF3_QUAL_MIRROR_QUALIFIER"   /><!-- Dual action, writes to both mirror_code and mirror_qualifier. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="40"  signal_name="nwk_lb_key"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_NWK_LB_KEY"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_NWK_LB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="41"  signal_name="nwk_qos"                         mapped_qual="DNX_FIELD_IPMF3_QUAL_NWK_QOS"                         mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_NWK_QOS"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="42"  signal_name="oam_id"                          mapped_qual="DNX_FIELD_IPMF3_QUAL_OAM_ID"                          mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_OAM_ID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="43"  signal_name="oam_offset"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_OAM_OFFSET"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="44"  signal_name="oam_stamp_offset"                mapped_qual="DNX_FIELD_IPMF3_QUAL_OAM_STAMP_OFFSET"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="45"  signal_name="oam_sub_type"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_OAM_SUB_TYPE"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="46"  signal_name="oam_up_mep"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_OAM_UP_MEP"   /><!-- Dual action, affects oam_stamp_offset, oam_offset, oam_sub_type and oam_up_mep. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="47"  signal_name="all_out_lifs"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_GLOB_OUT_LIF_0"                  mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_GLOB_OUT_LIF_0, DBAL_ENUM_FVAL_IPMF3_ACTION_GLOB_OUT_LIF_1, DBAL_ENUM_FVAL_IPMF3_ACTION_GLOB_OUT_LIF_2"   action_offset="0, 22, 44, 66"   /><!-- Action offset would be better as the global lif size, if such DNX DATA existed. Note that the signal can also be affected by special action DBAL_ENUM_FVAL_IPMF3_ACTION_OUT_LIF_PUSH. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="48"  signal_name="packet_is_applet"                mapped_qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_APPLET"                mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_PACKET_IS_APPLET"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="49"  signal_name="packet_is_bier"                  mapped_qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_BIER"                  mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_PACKET_IS_BIER"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="50"  signal_name="packet_is_compatible_mc"            />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="51"  signal_name="packet_is_ieee1588"              mapped_qual="DNX_FIELD_IPMF3_QUAL_PACKET_IS_IEEE1588"   /><!-- Dual action, affects ieee1588_header_offset, ieee1588_encapsulation, ieee1588_command, ieee1588_compensate_time_stamp and packet_is_ieee1588. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="52"  signal_name="egress_parsing_index"            mapped_qual="DNX_FIELD_IPMF3_QUAL_EGRESS_PARSING_INDEX"            mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_EGRESS_PARSING_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="53"  signal_name="pph_reserved"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_PPH_RESERVED"                    mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_PPH_RESERVED"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="54"  signal_name="pph_type"                        mapped_qual="DNX_FIELD_IPMF3_QUAL_PPH_TYPE"                        mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_PPH_TYPE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="55"  signal_name="rpf_destination"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_RPF_DST"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="56"  signal_name="rpf_destination_valid"           mapped_qual="DNX_FIELD_IPMF3_QUAL_RPF_DST_VALID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="57"  signal_name="snoop_code"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_SNOOP_CODE"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="58"  signal_name="snoop_strength"                  mapped_qual="DNX_FIELD_IPMF3_QUAL_SNOOP_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="59"  signal_name="snoop_qualifier"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_SNOOP_QUALIFIER"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="60"  signal_name="src_system_port_id"              mapped_qual="DNX_FIELD_IPMF3_QUAL_SRC_SYS_PORT"                    mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_SRC_SYS_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="61"  signal_name="st_vsq_pointer"                  mapped_qual="DNX_FIELD_IPMF3_QUAL_ST_VSQ_PTR"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_ST_VSQ_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="62"  signal_name="statistical_sampling_code"       mapped_qual="DNX_FIELD_IPMF3_QUAL_STATISTICAL_SAMPLING_CODE"   /><!-- Dual action, statistical_sampling_code and statistical_sampling_qualifier  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="63"  signal_name="statistical_sampling_qualifier"  mapped_qual="DNX_FIELD_IPMF3_QUAL_STATISTICAL_SAMPLING_QUALIFIER"   /><!-- Dual action, statistical_sampling_code and statistical_sampling_qualifier  -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="64"  signal_name="stacking_route_history_bitmap"   mapped_qual="DNX_FIELD_IPMF3_QUAL_STACKING_ROUTE_HISTORY_BITMAP"   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STACKING_ROUTE_HISTORY_BITMAP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="65"  signal_name="statistics_meta_data"            mapped_qual="DNX_FIELD_IPMF3_QUAL_STATISTICS_META_DATA"            mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_META_DATA"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="66"  signal_name="statistics_objects_resolved"                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_0, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_1, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_2, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_3, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_4, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_5, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_6, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_7, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_8, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ID_9"   action_offset="0, 20, 40, 60, 80, 100, 120, 140, 160, 180"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="67"  signal_name="statistics_object10"             mapped_qual="DNX_FIELD_IPMF3_QUAL_STATISTICS_OBJECT10"             mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_OBJECT_10"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="68"  signal_name="statistics_objects_atr"                                                                             mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_0, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_1, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_2, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_3, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_4, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_5, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_6, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_7, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_8, DBAL_ENUM_FVAL_IPMF3_ACTION_STATISTICS_ATR_9"   action_offset="0, 5, 10, 15, 20, 25, 30, 35, 40, 45"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="69"  signal_name="system_header_profile_index"     mapped_qual="DNX_FIELD_IPMF3_QUAL_SYSTEM_HEADER_PROFILE_INDEX"     mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_SYSTEM_HEADER_PROFILE_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="70"  signal_name="tm_profile"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_TM_PROFILE"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_TM_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="71"  signal_name="user_header1"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_1"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_USER_HEADER_1"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="72"  signal_name="user_header2"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_2"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_USER_HEADER_2"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="73"  signal_name="user_header3"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_3"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_USER_HEADER_3"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="74"  signal_name="user_header4"                    mapped_qual="DNX_FIELD_IPMF3_QUAL_USER_HEADER_4"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_USER_HEADER_4"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="75"  signal_name="user_headers_type"               mapped_qual="DNX_FIELD_IPMF3_QUAL_USER_HEADERS_TYPE"               mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_USER_HEADERS_TYPE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="76"  signal_name="visibility"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_VISIBILITY"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_VISIBILITY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="77"  signal_name="vlan_edit_cmd"                   mapped_qual="DNX_FIELD_IPMF3_QUAL_VLAN_EDIT_CMD"                   mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_VLAN_EDIT_CMD_INDEX, DBAL_ENUM_FVAL_IPMF3_ACTION_VLAN_EDIT_VID_1, DBAL_ENUM_FVAL_IPMF3_ACTION_VLAN_EDIT_PCP_DEI_1, DBAL_ENUM_FVAL_IPMF3_ACTION_VLAN_EDIT_VID_2, DBAL_ENUM_FVAL_IPMF3_ACTION_VLAN_EDIT_PCP_DEI_2"   action_offset="0, 7, 19, 23, 35"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="78"  signal_name="fwd_layer_additional_info"       mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_LAYER_ADDITIONAL_INFO"       mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_FWD_LAYER_ADDITIONAL_INFO"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="79"  signal_name="slb_learn_needed"                mapped_qual="DNX_FIELD_IPMF3_QUAL_SLB_LEARN_NEEDED"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="80"  signal_name="slb_key"                         mapped_qual="DNX_FIELD_IPMF3_QUAL_SLB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="81"  signal_name="slb_payload"                     mapped_qual="DNX_FIELD_IPMF3_QUAL_SLB_PAYLOAD"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="82"  signal_name="learn_info"                      mapped_qual="DNX_FIELD_IPMF3_QUAL_LEARN_INFO"                      mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_LEARN_INFO_0, DBAL_ENUM_FVAL_IPMF3_ACTION_LEARN_INFO_1, DBAL_ENUM_FVAL_IPMF3_ACTION_LEARN_INFO_2, DBAL_ENUM_FVAL_IPMF3_ACTION_LEARN_INFO_3, DBAL_ENUM_FVAL_IPMF3_ACTION_LEARN_OR_TRANSPLANT"   action_offset="0, 32, 64, 96, 152"   /><!-- We do not add the last action info action, because learn_or_transplant bit is not changed by it. -->   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="83"  signal_name="latency_flow_id_valid"           mapped_qual="DNX_FIELD_IPMF3_QUAL_LATENCY_FLOW_ID_VALID"   /><!-- Dual action, writes to latency_flow_id, latency_flow_id_valid and latency_flow_profile. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="84"  signal_name="weak_tm_profile"                 mapped_qual="DNX_FIELD_IPMF3_QUAL_WEAK_TM_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="85"  signal_name="stat_obj_lm_read_index"          mapped_qual="DNX_FIELD_IPMF3_QUAL_STAT_OBJ_LM_READ_INDEX"          mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_STAT_OBJ_LM_READ_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="86"  signal_name="mc_rpf_mode"                        />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="87"  signal_name="ingress_time_stamp"                                                                                 mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_INGRESS_TIME_STAMP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="88"  signal_name="ingress_time_stamp_override"                                                                        mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_INGRESS_TIME_STAMP_OVERRIDE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="89"  signal_name="elephant_trap_info"                 />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="90"  signal_name="elephant_learn_needed"              />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="91"  signal_name="rpf_ecmp_group"                  mapped_qual="DNX_FIELD_IPMF3_QUAL_RPF_ECMP_GROUP"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="92"  signal_name="weak_tm_valid"                   mapped_qual="DNX_FIELD_IPMF3_QUAL_WEAK_TM_VALID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="93"  signal_name="fer_statistics_obj"              mapped_qual="DNX_FIELD_IPMF3_QUAL_FER_STATISTICS_OBJ"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="94"  signal_name="fer_statistics_obj_atr"             />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="95"  signal_name="rpf_ecmp_mode"                   mapped_qual="DNX_FIELD_IPMF3_QUAL_RPF_ECMP_MODE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="96"  signal_name="ptc"                             mapped_qual="DNX_FIELD_IPMF3_QUAL_PTC"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="97"  signal_name="nasid"                           mapped_qual="DNX_FIELD_IPMF3_QUAL_NASID"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="98"  signal_name="context"                            />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="99"  signal_name="rpf_destination_is_ecmp"            />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="100" signal_name="bytes_to_remove_header"          mapped_qual="DNX_FIELD_IPMF3_QUAL_BYTES_TO_REMOVE"  offset_from_qual="0"   /><!-- Dual action, writes to both bytes_to_remove_header and bytes_to_remove_fix. Has default value. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="101" signal_name="bytes_to_remove_fix"             mapped_qual="DNX_FIELD_IPMF3_QUAL_BYTES_TO_REMOVE"  offset_from_qual="2"   /><!-- Dual action, writes to both bytes_to_remove_header and bytes_to_remove_fix. Has default value. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="102" signal_name="cpu_trap_code"                      /> <!-- input Fwd_Action_cpu_trap_code output cpu_trap_code -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="103" signal_name="fwd_strength"                       /> <!-- input Fwd_Action_Strength output fwd_strangth is output -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="104" signal_name="int_profile"                        /><!-- Dual action, writes to both int_profile and int_command. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="105" signal_name="itpp_delta_valid"                   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="106" signal_name="nwk_header_append_size_ptr"                                                                         mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_NWK_HEADER_APPEND_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="107" signal_name="int_command"                        /><!-- Dual action, writes to both int_profile and int_command. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="108" signal_name="system_header_size_adjust"                                                                          mapped_action="DBAL_ENUM_FVAL_IPMF3_ACTION_SYSTEM_HEADER_SIZE_ADJUST"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="109" signal_name="parsing_start_offset"               /><!-- Dual action, writes to both parsing_start_offset_valid and parsing_start_offset. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="110" signal_name="parsing_start_offset_valid"         /><!-- Dual action, writes to both parsing_start_offset_valid and parsing_start_offset. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="111" signal_name="parsing_start_type"                 /><!-- Dual action, writes to both parsing_start_type_valid and parsing_start_type. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="112" signal_name="parsing_start_type_valid"           /><!-- Dual action, writes to both parsing_start_type_valid and parsing_start_type. -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="113" signal_name="ntp_time_of_day"                    />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="114" signal_name="next_nasid"                         />
                    <!-- Header is not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="115" signal_name="packet_header"                      />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="116" signal_name="cs_key"                             />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="117" signal_name="next_context"                       />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="118" signal_name="fwd_action_cpu_trap_qual"        mapped_qual="DNX_FIELD_IPMF3_QUAL_FWD_ACTION_CPU_TRAP_QUAL"   />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="119" signal_name="packet_size"                        />
                    <entry stage="DNX_FIELD_STAGE_IPMF3" signal_id="120" signal_name="oam_time_of_day"                    />

                    
                <!-- Entries for EPMF -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="0"   signal_name="bit_position_idx"                    />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="1"   signal_name="etm_record"                          />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="2"   signal_name="discard"                          mapped_qual="DNX_FIELD_EPMF_QUAL_DISCARD"                          mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_DISCARD"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="3"   signal_name="is_tdm"                           mapped_qual="DNX_FIELD_EPMF_QUAL_IS_TDM"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="4"   signal_name="pp_dsp"                           mapped_qual="DNX_FIELD_EPMF_QUAL_PP_DSP"                           mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_PP_DSP"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="5"   signal_name="cud_outlif_or_mcdb_ptr"           mapped_qual="DNX_FIELD_EPMF_QUAL_CUD_OUTLIF_OR_MCDB_PTR"           mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_CUD_OUTLIF_OR_MCDB_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="6"   signal_name="ftmh_packet_size"                 mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_PACKET_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="7"   signal_name="ftmh_tc"                          mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TC"                          mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_TC"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="8"   signal_name="ftmh_source_system_port"          mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_SRC_SYS_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="9"   signal_name="ftmh_dp"                          mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_DP"                          mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_DP"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="10"  signal_name="ftmh_tm_action_type"              mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_ACTION_TYPE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="11"  signal_name="ftmh_tsh_ext_present"             mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TSH_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="12"  signal_name="ftmh_pph_present"                 mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_PPH_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="13"  signal_name="ftmh_tm_action_is_mc"             mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_ACTION_IS_MC"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="14"  signal_name="ftmh_mcid_or_outlif_0_or_mcdb_ptr"        mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_MCID_OR_OUTLIF_0_OR_MCDB_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="15"  signal_name="ftmh_tm_destination_ext_present"  mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_DESTINATION_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="16"  signal_name="ftmh_application_specific_ext_present"    mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_APPLICATION_SPECIFIC_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="17"  signal_name="ftmh_flow_id_ext_present"         mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_FLOW_ID_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="18"  signal_name="ftmh_bier_bfr_ext_present"        mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_BIER_BFR_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="19"  signal_name="bier_bfr_ext"                     mapped_qual="DNX_FIELD_EPMF_QUAL_BIER_BFR_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="20"  signal_name="pph_end_of_packet_editing"        mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_END_OF_PACKET_EDITING"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="21"  signal_name="lif_ext"                          mapped_qual="DNX_FIELD_EPMF_QUAL_LIF_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="22"  signal_name="ftmh_cni"                         mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_CNI"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="23"  signal_name="ftmh_ecn_enable"                  mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_ECN_ENABLE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="24"  signal_name="ftmh_tm_profile"                  mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_TM_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="25"  signal_name="ftmh_visibility"                  mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_VISIBILITY"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="26"  signal_name="ftmh_reserved"                    mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_RESERVED"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="27"  signal_name="lb_key_ext"                       mapped_qual="DNX_FIELD_EPMF_QUAL_LB_KEY"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="28"  signal_name="stacking_ext"                     mapped_qual="DNX_FIELD_EPMF_QUAL_STACKING_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="29"  signal_name="tm_destination_ext"               mapped_qual="DNX_FIELD_EPMF_QUAL_TM_DESTINATION_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="30"  signal_name="application_specific_ext"         mapped_qual="DNX_FIELD_EPMF_QUAL_APPLICATION_SPECIFIC_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="31"  signal_name="tsh_ext"                          mapped_qual="DNX_FIELD_EPMF_QUAL_APPLICATION_SPECIFIC_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="32"  signal_name="pph_fhei_size"                    mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_FHEI_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="33"  signal_name="pph_learn_ext_present"            mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_LEARN_EXT_PRESENT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="34"  signal_name="pph_lif_ext_type"                 mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_LIF_EXT_TYPE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="35"  signal_name="pph_parsing_start_offset"         mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_PARSING_START_OFFSET"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="36"  signal_name="pph_parsing_start_type"           mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_PARSING_START_TYPE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="37"  signal_name="pph_fwd_layer_index"                 />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="38"  signal_name="pph_forwarding_layer_additional_info"     mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_FWD_LAYER_ADDITIONAL_INFO"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="39"  signal_name="forwarding_strength"              mapped_qual="DNX_FIELD_EPMF_QUAL_FWD_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="40"  signal_name="pph_in_lif_profile"               mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_IN_LIF_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="41"  signal_name="pph_forward_domain"               mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_FWD_DOMAIN"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="42"  signal_name="pph_in_lif"                       mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_IN_LIF"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="43"  signal_name="pph_nwk_qos"                      mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_NWK_QOS"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="44"  signal_name="pph_ttl"                          mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_TTL"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="45"  signal_name="pph_value1"                       mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_VALUE1"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="46"  signal_name="pph_value2"                       mapped_qual="DNX_FIELD_EPMF_QUAL_PPH_VALUE2"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="47"  signal_name="fhei_ext"                         mapped_qual="DNX_FIELD_EPMF_QUAL_FHEI_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="48"  signal_name="learn_ext"                        mapped_qual="DNX_FIELD_EPMF_QUAL_LEARN_EXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="49"  signal_name="learn_valid"                      mapped_qual="DNX_FIELD_EPMF_QUAL_LEARN_VALID"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="50"  signal_name="udh"                              mapped_qual="DNX_FIELD_EPMF_QUAL_USER_HEADER_4"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="51"  signal_name="ip_mc_eligible"                   mapped_qual="DNX_FIELD_EPMF_QUAL_IP_MC_ELIGIBLE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="52"  signal_name="system_headers_size"              mapped_qual="DNX_FIELD_EPMF_QUAL_SYSTEM_HEADERS_SIZE"   />
                    <!-- Header is not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="53"  signal_name="packet_header"                       />
                    <!-- Layer records are not supported for VW -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="54"  signal_name="epp_layer_offsets"                   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="55"  signal_name="epp_layer_protocols"                 />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="56"  signal_name="epp_layer_qualifiers"                />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="57"  signal_name="packet_is_applet"                    />
                    
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="58"  signal_name="mem_soft_err"                     mapped_qual="DNX_FIELD_EPMF_QUAL_MEM_SOFT_ERR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="59"  signal_name="estimated_btr"                    mapped_qual="DNX_FIELD_EPMF_QUAL_ESTIMATED_BTR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="60"  signal_name="tc_map_profile"                   mapped_qual="DNX_FIELD_EPMF_QUAL_TC_MAP_PROFILE"                   mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_TC_MAP_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="61"  signal_name="dst_sys_port"                     mapped_qual="DNX_FIELD_EPMF_QUAL_DST_SYS_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="62"  signal_name="out_tm_port"                      mapped_qual="DNX_FIELD_EPMF_QUAL_OUT_TM_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="63"  signal_name="out_pp_port"                      mapped_qual="DNX_FIELD_EPMF_QUAL_OUT_PP_PORT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="64"  signal_name="outlif_profile"                   mapped_qual="DNX_FIELD_EPMF_QUAL_OUT_LIF_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="65"  signal_name="fabric_or_egress_mc"              mapped_qual="DNX_FIELD_EPMF_QUAL_FABRIC_OR_EGRESS_MC"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="66"  signal_name="fwd_context"                      mapped_qual="DNX_FIELD_EPMF_QUAL_FWD_CONTEXT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="67"  signal_name="eth_tag_format"                   mapped_qual="DNX_FIELD_EPMF_QUAL_ETH_TAG_FORMAT"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="68"  signal_name="updated_tpids_packet_data"        mapped_qual="DNX_FIELD_EPMF_QUAL_UPDATED_TPIDS_PACKET_DATA"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="69"  signal_name="ive_bytes_to_add"                 mapped_qual="DNX_FIELD_EPMF_QUAL_IVE_BYTES_TO_ADD"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="70"  signal_name="ive_bytes_to_remove"              mapped_qual="DNX_FIELD_EPMF_QUAL_IVE_BYTES_TO_REMOVE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="71"  signal_name="eth_type_code"                    mapped_qual="DNX_FIELD_EPMF_QUAL_ETHER_TYPE_CODE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="72"  signal_name="inlif0"                           mapped_qual="DNX_FIELD_EPMF_QUAL_GLOB_IN_LIF_0"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="73"  signal_name="inlif_profile0"                   mapped_qual="DNX_FIELD_EPMF_QUAL_IN_LIF_PROFILE_0"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="74"  signal_name="local_outlif"                     mapped_qual="DNX_FIELD_EPMF_QUAL_LOCAL_OUT_LIF"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="75"  signal_name="global_outlif0"                   mapped_qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_0"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="76"  signal_name="global_outlif1"                   mapped_qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_1"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="77"  signal_name="global_outlif2"                   mapped_qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_2"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="78"  signal_name="global_outlif3"                   mapped_qual="DNX_FIELD_EPMF_QUAL_GLOB_OUT_LIF_3"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="79"  signal_name="ip_mc_should_be_bridged"          mapped_qual="DNX_FIELD_EPMF_QUAL_IP_MC_SHOULD_BE_BRIDGED"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="80"  signal_name="glem_pp_trap_is_required"            />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="81"  signal_name="glem_non_pp_trap_is_required"        />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="82"  signal_name="per_port_table_data"              mapped_qual="DNX_FIELD_EPMF_QUAL_PER_PORT_TABLE_DATA"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="83"  signal_name="enable_filter_per_port_table_data"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="84"  signal_name="forwarding_action_profile_index"  mapped_qual="DNX_FIELD_EPMF_QUAL_FWD_ACTION_PROFILE_INDEX"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="85"  signal_name="snoop_action_profile_index"       mapped_qual="DNX_FIELD_EPMF_QUAL_SNOOP_ACTION_PROFILE_INDEX"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="86"  signal_name="snoop_strength"                   mapped_qual="DNX_FIELD_EPMF_QUAL_SNOOP_STRENGTH"   /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="87"  signal_name="mirror_profile"                                                                                      mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_MIRROR_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="88"  signal_name="snoop_profile"                       /><!-- Special action. -->
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="89"  signal_name="cos_profile"                                                                                         mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_COS_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="90"  signal_name="pmf_counter_0_profile"                                                                               mapped_action= "DBAL_ENUM_FVAL_EPMF_ACTION_PMF_COUNTER_0_PROFILE"  />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="91"  signal_name="pmf_counter_0_ptr"                                                                                   mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_PMF_COUNTER_0_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="92"  signal_name="pmf_counter_1_profile"                                                                               mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_PMF_COUNTER_1_PROFILE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="93"  signal_name="pmf_counter_1_ptr"                                                                                   mapped_action="DBAL_ENUM_FVAL_EPMF_ACTION_PMF_COUNTER_1_PTR"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="94"  signal_name="packet_size"                      mapped_qual="DNX_FIELD_EPMF_QUAL_FTMH_PACKET_SIZE"   />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="95"  signal_name="otm"                                 />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="96"  signal_name="egress_multicast"                    />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="97"  signal_name="sys_tc"                              />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="98"  signal_name="sys_dp"                              />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="99"  signal_name="tm_counter_ptr_valid"                />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="100" signal_name="counter_0_valid"                     />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="101" signal_name="counter_0_type"                      />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="102" signal_name="counter_0_ptr"                       />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="103" signal_name="counter_1_valid"                     />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="104" signal_name="counter_1_type"                      />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="105" signal_name="counter_1_ptr"                       />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="106" signal_name="counter_metadata"                    />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="107" signal_name="counter_packet_size"                 />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="108" signal_name="bier_bit_mask"                       />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="109" signal_name="erpp_cud"                            />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="110" signal_name="mact_learn_command_data"             />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="111" signal_name="mact_learn_command_valid"            />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="112" signal_name="ingress_packet_header"               />
                    <entry stage="DNX_FIELD_STAGE_EPMF" signal_id="113" signal_name="ftmh"                                />
                 </entries>
            </table>


        </tables>
    </sub_module>

    <sub_module name="profile_bits">
        <defines>
            <define name="nof_eg_in_lif" value="2"></define>
            <define name="nof_eg_eth_rif" value="2"></define>
            <define name="ingress_pp_port_key_gen_var_size" value="64"></define>
            <define name="max_port_profile_size" value="UTILEX_MAX(DATA(field, profile_bits, ingress_pp_port_key_gen_var_size), 64)"></define>
            <define name="nof_bits_in_port_profile" value="24"></define>
            <define name="nof_bits_in_ingress_pp_port_general_data" value="((DATA(field, profile_bits, ingress_pp_port_key_gen_var_size))-(DATA(field, profile_bits, nof_bits_in_port_profile)))"></define>
        </defines>
        <numerics>
           <numeric name="nof_ing_in_lif" value="2">
                   <property name="pmf_in_lif_profile_nof_bits" method="range" range_min="1" range_max="7">
                    <doc>
                        Configure number of in lif profile bits which will be used by PMF:
                        pmf_in_lif_profile_nof_bits= 1-7
                           Default: 2
                        </doc>
                </property>
            </numeric>
            <numeric name="nof_ing_eth_rif" value="2">
                   <property name="pmf_in_rif_profile_nof_bits" method="range" range_min="1" range_max="7">
                    <doc>
                        Configure number of in-rif profile bits which will be used by PMF:
                        pmf_in_lif_profile_nof_bits= 1-7
                           Default: 2
                        </doc>
                </property>
            </numeric>
            <numeric name="pmf_sexem3_stage" value="DNX_FIELD_STAGE_IPMF3">
                <property name="pmf_sexem3_stage" method="direct_map">
                    <map name="IPMF2" value="DNX_FIELD_STAGE_IPMF2"></map>
                    <map name="IPMF3" value="DNX_FIELD_STAGE_IPMF3"></map>
                    <doc>
                        Set PMF stage that will use SEXEM3. It can be:
                            IPMF2 - Ingress PMF stage 2.
                            IPMF3 - Ingress PMF stage 3.
                    </doc>
                </property>
            </numeric>
            <numeric name="pmf_map_stage" value="DNX_FIELD_STAGE_IPMF1">
                <property name="pmf_map_stage" method="direct_map">
                    <map name="IPMF1" value="DNX_FIELD_STAGE_IPMF1"></map>
                    <map name="IPMF3" value="DNX_FIELD_STAGE_IPMF3"></map>
                    <doc>
                        Set PMF stage that will use MAP. It can be:
                            IPMF1 - Ingress PMF stage 1/2.
                            IPMF3 - Ingress PMF stage 3.
                    </doc>
                </property>
            </numeric>
        </numerics>
    </sub_module>

    <sub_module name="dir_ext" >
        <defines>
            <define name="half_key_size" value="80"></define>
            <define name="single_key_size" value="160"></define>
            <define name="double_key_size" value="320"></define>
        </defines>
    </sub_module>

    <sub_module name="state_table" >
        <defines>
            <define name="key_size" value="19"></define>
            <define name="address_max" value="1023"></define>
            <define name="address_size" value="10"></define>
            <define name="data_size" value="8"></define>
        </defines>
    </sub_module>

    <sub_module name="map" >
        <defines>
            <define name="key_size" value="20"></define>
            <define name="action_size_small" value="30"></define>
            <define name="action_size_mid" value="60"></define>
            <define name="action_size_large" value="120"></define>
            <define name="ipmf1_key_select" value="2"></define>
            <define name="ipmf2_key_select" value="2"></define>
            <define name="ipmf3_key_select" value="2"></define>
        </defines>
    </sub_module>

    <sub_module name="hash" doc="Hash (CRC) values">
        <defines>
            <define name="max_key_size" value="320"></define>
        </defines>
    </sub_module>

    <sub_module name="udh" doc="User Defined Headers defines">
        <!-- FIXME SDK-140508 Egress parser not support this configuration for 11,14,15B header size -->
        <defines>
            <define name="type_count"     value="4"></define>
            <define name="type_0_length" value="0"></define>
            <define name="type_1_length" value="4"></define>
            <define name="type_2_length" value="4"></define>
            <define name="type_3_length" value="4"></define>
        </defines>
        <numerics>
            <numeric name="field_class_id_size_0" value="0">
                <property name="field_class_id_size_0" method="direct_map">
                    <map name="0" value="0"></map>
                    <map name="8" value="8"></map>
                    <map name="16" value="16"></map>
                    <map name="24" value="24"></map>
                    <map name="32" value="32"></map>
                    <doc>
                        Field class ID size 0 is used to determine UDH_0
                        size in J1 mode and also the udh_egress_offset_0/1.
                        Default: 0x0.
                    </doc>
                </property>
            </numeric>
            <numeric name="field_class_id_size_1" value="0">
                <property name="field_class_id_size_1" method="direct_map">
                    <map name="0" value="0"></map>
                    <map name="8" value="8"></map>
                    <map name="16" value="16"></map>
                    <map name="24" value="24"></map>
                    <map name="32" value="32"></map>
                    <doc>
                        Field class ID size 1 is used to determine UDH_1
                        size in J1 mode.
                        Default: 0x0.
                    </doc>
                </property>
            </numeric>

            <numeric name="field_class_id_size_2" value="0">
                <property name="field_class_id_size_2" method="direct_map">
                    <map name="0" value="0"></map>
                    <map name="8" value="8"></map>
                    <map name="16" value="16"></map>
                    <map name="24" value="24"></map>
                    <map name="32" value="32"></map>
                    <doc>
                        Field class ID size 2 is used to determine UDH_0
                        size in J1 mode.
                        Default: 0x0.
                    </doc>
                </property>
            </numeric>

            <numeric name="field_class_id_size_3" value="0">
                <property name="field_class_id_size_3" method="direct_map">
                    <map name="0" value="0"></map>
                    <map name="8" value="8"></map>
                    <map name="16" value="16"></map>
                    <map name="24" value="24"></map>
                    <map name="32" value="32"></map>
                    <doc>
                        Field class ID size 3 is used to determine UDH_1
                        size in J1 mode.
                        Default: 0x0.
                    </doc>
                </property>
            </numeric>

            <numeric name="field_class_id_total_size" value="(DATA(field, udh, field_class_id_size_3))+(DATA(field, udh, field_class_id_size_2))+(DATA(field, udh, field_class_id_size_1))+(DATA(field, udh, field_class_id_size_0))">
            </numeric>
        </numerics>
    </sub_module>

    <sub_module name="system_headers" doc="System headers definitions">
        <defines>
            <define name="nof_profiles" value="16"></define>
        </defines>
        <numerics>
            <numeric name="pph_learn_ext_disable" value="1">
                <property name="bcm886xx_pph_learn_extension_disable" method="enable">
                    <doc>
                        If set, never add learn_ext in system header (unless explictly required in FP action).
                        Used in JR1 mode only. Used by DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_TSH_PPH_UDH only.
                        Default: 0x1.
                    </doc>
                </property>
            </numeric>
        </numerics>
        <tables>
            <table name="system_header_profiles">
                <key name="system_header_profile" size="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_NOF"></key>
                <value name="name" default="unsupported"></value>
                <value name="build_ftmh" default="0"></value>
                <value name="build_tsh"  default="0"></value>
                <value name="build_pph"  default="0"></value>
                <value name="build_udh"  default="0"></value>
                <value name="never_add_pph_learn_ext" default="0"></value>
                <entries>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_EMPTY" name="NONE"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH" name="FTMH" build_ftmh="1"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_PPH" name="FTMH_PPH" build_ftmh="1" build_pph="1" never_add_pph_learn_ext="1"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_TSH" name="FTMH_TSH" build_ftmh="1" build_tsh="1"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_TSH_PPH" name="FTMH_TSH_PPH" build_ftmh="1" build_tsh="1" build_pph="1" never_add_pph_learn_ext="1"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_TSH_PPH_UDH" name="FTMH_TSH_PPH_UDH" build_ftmh="1" build_pph="1" build_tsh="1" build_udh="1" never_add_pph_learn_ext="DATA(headers,system_headers,system_headers_mode) == DATA(headers,system_headers,system_headers_mode_jericho2) ? 1 : DATA(field,system_headers,pph_learn_ext_disable)"></entry>
                    <entry system_header_profile="DNX_FIELD_CONTEXT_SYS_HDR_PROFILE_FTMH_UDH" name="FTMH_UDH" build_ftmh="1" build_udh="1"></entry>
                </entries>
            </table>
        </tables>
    </sub_module>

    <sub_module name="exem" doc="exem values">
        <defines>
            <define name="small_app_db_id_size" value="6"></define>
            <define name="large_app_db_id_size" value="6"></define>
            <define name="small_max_key_size" value="80"></define>
            <define name="large_max_key_size" value="160"></define>
            <define name="small_max_result_size" value="60"></define>
            <define name="large_max_result_size" value="60"></define>
            <define name="small_max_container_size" value="120"></define>
            <define name="large_max_container_size" value="240"></define>
            <define name="small_key_hash_size" value="13"></define>
            <define name="large_key_hash_size" value="13"></define>
            <define name="small_min_app_db_id_range" value="48"></define>
            <define name="large_min_app_db_id_range" value="48"></define>
            <define name="small_max_app_db_id_range" value="63"></define>
            <define name="large_max_app_db_id_range" value="63"></define>
            <define name="small_ipmf2_key" value="4"></define>
            <define name="small_ipmf2_key_part" value="0"></define>
            <define name="small_ipmf2_key_hw_value" value="DATA(field, exem, small_ipmf2_key)"></define>
            <define name="small_ipmf2_key_hw_bits" value="3"></define>
            <define name="large_ipmf1_key_configurable" value="1"></define>
            <define name="large_ipmf1_key" value="4"></define>
        </defines>
    </sub_module>

    <sub_module name="ace" doc="ACE values, for ACE expansion done by the PPMC DB and ACE ACR, for both MC replication ID pointers and ACE pointers">
        <defines>
            <define name="ace_id_size" value="6"></define>
            <define name="key_size" value="22"></define>
            <define name="key_hash_size" value="17"></define>
            <define name="app_db_id_size" value="0"></define>
            <define name="payload_size" value="110"></define>
            <define name="min_key_range_pmf" value="0x3c0000"></define>
            <define name="max_key_range_pmf" value="0x3fffff"></define>
            <define name="min_ace_id_dynamic_range" value="1"></define>
            <define name="nof_ace_id" value="64"></define>
            <define name="nof_action_per_ace_format" value="8"></define>
            <define name="row_size" value="120"></define>
            <define name="min_entry_size" value="30"></define>
            <define name="ace_id_pmf_alloc_first" value="48"></define>
            <define name="ace_id_pmf_alloc_last" value="63"></define>
            <!-- Per stage info-->
            <define name="nof_masks_per_fes" value="2"></define>
            <define name="nof_fes_id_per_array" value="8"></define>
            <define name="nof_fes_array" value="1"></define>
            <define name="nof_fes_instruction_per_context" value="(DATA(field, ace, nof_fes_id_per_array)*DATA(field, ace, nof_fes_array))"></define>
            <define name="nof_fes_programs" value="64"></define>
            <define name="nof_prog_per_fes" value="1"></define>
            <define name="nof_bits_in_fes_action" value="32"></define>
            <!-- nof_bits_in_fes_key_select is 110, but we don'thave key select and we don't add it while we don't need it so it won't increase maximum values.-->
            <define name="fes_shift_for_zero_bit" value="110"></define>
            <define name="fes_instruction_size" value="21"></define>
            <define name="fes_shift_offset" value="1"></define>
            <define name="fes_invalid_bits_offset" value="8"></define>
            <define name="fes_type_offset" value="13"></define>
            <define name="fes_ace_action_offset" value="14"></define>
            <define name="fes_chosen_mask_offset" value="20"></define>
        </defines>
    </sub_module>

    <sub_module name="entry" doc="Entry data">
        <defines>
            <define name="dir_ext_nof_fields" value="6"></define>
            <define name="nof_action_params_per_entry" value="4"></define>
            <define name="nof_qual_params_per_entry" value="5"></define>
        </defines>
    </sub_module>

   <sub_module name="L4_Ops" >
       <defines>
           <define name="udp_position" value="9"></define>
           <define name="tcp_position" value="8"></define>
           <define name="nof_range_entries" value="24"></define>
           <define name="nof_ext_encoders" value="0"></define>
           <define name="nof_ext_types" value="0"></define>
       </defines>
    </sub_module>

    <sub_module name="encoded_qual_actions_offset" >
       <defines>
           <define name="trap_strength_offset" value="9"></define>
           <define name="trap_qualifier_offset" value="13"></define>
           <define name="sniff_qualifier_offset" value="12"></define>
           <define name="mirror_qualifier_offset" value="9"></define>
       </defines>
    </sub_module>

    <sub_module name="Compare_operand" >
       <defines>
            <define name="equal" value="4"></define>
            <define name="not_equal" value="0"></define>
            <define name="smaller" value="2"></define>
            <define name="not_smaller" value="3"></define>
            <define name="bigger" value="5"></define>
            <define name="not_bigger" value="1"></define>
            <define name="nof_operands" value="6"></define>
       </defines>
    </sub_module>

    <sub_module name="diag" >
        <features>
            <feature name="tcam_cs_hit_bit_support" value="0"></feature>
        </features>
        <defines>
            <define name="bytes_to_remove_mask" value="0x0F"></define>
            <define name="layers_to_remove_size_in_bit" value="3"></define>
            <define name="layers_to_remove_mask" value="0x07"></define>
            <define name="nof_signals_per_action" value="10"></define>
            <define name="nof_signals_per_qualifier" value="10"></define>
       </defines>
    </sub_module>

    <sub_module name="common_max_val">
        <defines>
            <define name="nof_ffc" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_ffc), DATA(field, base_ipmf2, nof_ffc), DATA(field, base_ipmf3, nof_ffc), DATA(field, base_epmf, nof_ffc))"></define>
            <define name="nof_keys" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_keys), DATA(field, base_ipmf2, nof_keys), DATA(field, base_ipmf3, nof_keys), DATA(field, base_epmf, nof_keys))"></define>
            <define name="nof_masks_per_fes" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_masks_per_fes), DATA(field, base_ipmf3, nof_masks_per_fes), DATA(field, base_epmf, nof_masks_per_fes))"></define>
            <define name="nof_fes_id_per_array" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_fes_id_per_array), DATA(field, base_ipmf2, nof_fes_id_per_array), DATA(field, base_ipmf3, nof_fes_id_per_array), DATA(field, base_epmf, nof_fes_id_per_array))"></define>
            <define name="nof_fes_array" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_fes_array), DATA(field, base_ipmf2, nof_fes_array), DATA(field, base_ipmf3, nof_fes_array), DATA(field, base_epmf, nof_fes_array))"></define>
            <define name="nof_fes_instruction_per_context" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_fes_instruction_per_context), DATA(field, base_ipmf2, nof_fes_instruction_per_context), DATA(field, base_ipmf3, nof_fes_instruction_per_context), DATA(field, base_epmf, nof_fes_instruction_per_context))"></define>
            <define name="nof_fes_programs" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_fes_programs), DATA(field, base_ipmf3, nof_fes_programs), DATA(field, base_epmf, nof_fes_programs))"></define>
            <define name="nof_prog_per_fes" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_prog_per_fes), DATA(field, base_ipmf3, nof_prog_per_fes), DATA(field, base_epmf, nof_prog_per_fes))"></define>
            <define name="nof_program_selection_lines" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_cs_lines), DATA(field, base_ipmf2, nof_cs_lines), DATA(field, base_ipmf3, nof_cs_lines), DATA(field, base_epmf, nof_cs_lines))"></define>
            <define name="program_selection_cam_mask_nof_bits" value="UTILEX_MAX4(DATA(field, base_ipmf1, program_selection_cam_mask_nof_bits), DATA(field, base_ipmf2, program_selection_cam_mask_nof_bits), DATA(field, base_ipmf3, program_selection_cam_mask_nof_bits), DATA(field, base_epmf, program_selection_cam_mask_nof_bits))"></define>
            <define name="nof_cs_lines" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_cs_lines), DATA(field, base_ipmf2, nof_cs_lines), DATA(field, base_ipmf3, nof_cs_lines), DATA(field, base_epmf, nof_cs_lines))"></define>
            <define name="nof_contexts" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_contexts), DATA(field, base_ipmf2, nof_contexts), DATA(field, base_ipmf3, nof_contexts), DATA(field, base_epmf, nof_contexts))"></define>
            <define name="nof_actions" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_actions),  DATA(field, base_ipmf3, nof_actions), DATA(field, base_epmf, nof_actions))"></define>
            <define name="nof_qualifiers" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_qualifiers), DATA(field, base_ipmf2, nof_qualifiers), DATA(field, base_ipmf3, nof_qualifiers), DATA(field, base_epmf, nof_qualifiers))"></define>
            <define name="nof_80B_zones" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_80B_zones),DATA(field, base_ipmf2, nof_80B_zones), DATA(field, base_ipmf3, nof_80B_zones), DATA(field, base_epmf, nof_80B_zones))"></define>
            <define name="nof_key_zones" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_key_zones), DATA(field, base_ipmf2, nof_key_zones), DATA(field, base_ipmf3, nof_key_zones), DATA(field, base_epmf, nof_key_zones))"></define>
            <define name="nof_key_zone_bits" value="UTILEX_MAX4(DATA(field, base_ipmf1, nof_key_zone_bits), DATA(field, base_ipmf2, nof_key_zone_bits), DATA(field, base_ipmf3, nof_key_zone_bits), DATA(field, base_epmf, nof_key_zone_bits))"></define>
            <define name="nof_bits_in_fes_action" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_bits_in_fes_action), DATA(field, base_ipmf3, nof_bits_in_fes_action), DATA(field, base_epmf, nof_bits_in_fes_action))"></define>
            <define name="nof_bits_in_fes_key_select" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_bits_in_fes_key_select), DATA(field, base_ipmf3, nof_bits_in_fes_key_select), DATA(field, base_epmf, nof_bits_in_fes_key_select))"></define>
            <define name="nof_fes_key_selects_on_one_actions_line" value="UTILEX_MAX3(DATA(field, base_ipmf1, nof_fes_key_selects_on_one_actions_line), DATA(field, base_ipmf3, nof_fes_key_selects_on_one_actions_line), DATA(field, base_epmf, nof_fes_key_selects_on_one_actions_line))"></define>
            <define name="nof_ffc_in_qual" value="6"></define>
            <define name="nof_bits_in_ffc" value="32"></define>
            <define name="nof_ffc_in_uint32" value="((DATA(field, common_max_val, nof_ffc)+32-1)/32)"></define>
            <define name="nof_action_per_group" value="UTILEX_MAX(DATA(field, group, nof_action_per_fg), DATA(field, ace, nof_action_per_ace_format))"></define>
            <define name="nof_layer_records" value="UTILEX_MAX(DATA(field, qual, ingress_nof_layer_records), DATA(field, qual, egress_nof_layer_records))"></define>
            <define name="layer_record_size" value="UTILEX_MAX(DATA(field, qual, ingress_layer_record_size), DATA(field, qual, egress_layer_record_size))"></define>
            <define name="nof_l4_ops_ranges_legacy" value="UTILEX_MAX(DATA(field, base_ipmf1, nof_l4_ops_ranges_legacy), DATA(field, base_epmf, nof_l4_ops_ranges_legacy))"></define>
            <define name="nof_pkt_hdr_ranges" value="DATA(field, base_ipmf1, nof_pkt_hdr_ranges)"></define>
            <define name="nof_out_lif_ranges" value="UTILEX_MAX(DATA(field, base_ipmf1, nof_out_lif_ranges), DATA(field, base_ipmf3, nof_out_lif_ranges))"></define>
            <define name="kbr_size" value="160"></define>
            <define name="nof_compare_pairs" value="2"></define>
            <define name="nof_compare_pairs_in_compare_mode" value="DATA(field, base_ipmf1, nof_compare_pairs_in_compare_mode)"></define>
            <define name="nof_compare_keys_in_compare_mode" value="DATA(field, base_ipmf1, nof_compare_keys_in_compare_mode)"></define>
            <define name="nof_bits_in_fem_action" value="DATA(field, base_ipmf1, nof_bits_in_fem_action)"></define>
            <define name="nof_fem_condition" value="DATA(field, base_ipmf1, nof_fem_condition)"></define>
            <define name="nof_fem_map_index" value="DATA(field, base_ipmf1, nof_fem_map_index)"></define>
            <define name="nof_fem_id" value="DATA(field, base_ipmf1, nof_fem_id)"></define>
            <define name="nof_array_ids" value="4"></define>
            <define name="dbal_pairs" value="10"></define>
        </defines>

        <tables>
            <!-- Tables indicating whether specified 'array_id' is related to FES or to FEM -->
            <!-- These are system-wide common definitions -->
            <table name="array_id_type">
                <key name="array_id" size="DATA(field, common_max_val, nof_array_ids)"></key>
                <value name="is_fes" default="0"></value>
                <value name="is_fem" default="0"></value>
                <value name="fes_array_index" default="0"></value>
                <value name="fem_array_index" default="0"></value>
                <entries>
                    <entry array_id="0" is_fes="1" is_fem="0" fes_array_index="0"></entry>
                    <entry array_id="1" is_fes="0" is_fem="1" fem_array_index="0"></entry>
                    <entry array_id="2" is_fes="1" is_fem="0" fes_array_index="1"></entry>
                    <entry array_id="3" is_fes="0" is_fem="1" fem_array_index="1"></entry>
                </entries>
            </table>
        </tables>

    </sub_module>
    <sub_module name="init" doc="Field defines and features related to init.">
        <defines>
            <define name="wa_fec_dest" value="1"></define>
            <define name="wa_l4_trap" value="1"></define>
            <define name="wa_oam_layer_index" value="1"></define>
            <define name="wa_oam_stat" value="1"></define>
            <define name="wa_flow_id" value="1"></define>
            <define name="wa_roo" value="1"></define>
            <define name="wa_jr1_ipmc_inlif" value="1"></define>
            <define name="wa_j1_same_port" value="1"></define>
            <define name="wa_j1_learning" value="1"></define>
            <define name="wa_learn_limit" value="0"></define>
            <define name="wa_j1_php" value="1"></define>
        </defines>
    </sub_module>
    <sub_module name="features">
        <defines>
            <define name="ecc_wa_enable" value="1"></define>
            <define name="switch_to_acl_context" value="1"></define>
            <define name="tcam_result_flip_eco" value="0"></define>
            <define name="tcam_result_half_payload_on_msb" value="0"></define>
            <define name="per_pp_port_pmf_profile_cs_offset" value="0"></define>
            <define name="parsing_start_offset_msb_meaningless" value="1"></define>
            <define name="kbp_opcode_in_ipmf1_cs" value="0"></define>
            <define name="kbp_hitbits_correct_in_ipmf1_cs" value="0"></define>
            <define name="exem_vmv_removable_from_payload" value="0"></define>
            <define name="multiple_dynamic_mem_enablers" value="0"></define>
            <define name="aacl_super_group_handler_enable" value="0"></define>
            <define name="aacl_tcam_swap_enable" value="0"></define>
            <define name="extended_l4_ops" value="0"></define>
        </defines>
    </sub_module>
    <sub_module name="signal_sizes">
        <defines>
            <define name="dual_queue_size" value="0" Description="Not supported on device, but we still need to provide a value."></define>
            <define name="packet_header_size" value="8"></define>
            <define name="ecn" value="2"></define>
            <define name="congestion_info" value="DATA(field, signal_sizes, ecn)"></define>
        </defines>
    </sub_module>
    <sub_module name="dnx_data_internal">
        <defines>
            <define name="lr_eth_is_da_mac_valid" value="0"></define>
        </defines>
    </sub_module>
</device_data>
