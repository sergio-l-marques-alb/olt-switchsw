/***********************************************************************************
 *                                                                                 *
 * Copyright: (c) 2020 Broadcom.                                                   *
 * Broadcom Proprietary and Confidential. All rights reserved.                     *
 *                                                                                 *
 *  Revision      :                                                            *
 *                                                                                 *
 *  Description   :  This is an auto generated diagnostic dump tool file           *
 *                                                                                 *
 **********************************************************************************/

/* THIS FILE IS GENERATED USING AN AUTOMATED SCRIPT.DO NOT EDIT THIS FILE DIRECTLY! */
#ifdef __cplusplus
extern "C" {
#endif

#ifndef OSPREY7_V2L8P1_API_LANE_DETAILED_STATUS_H
#define OSPREY7_V2L8P1_API_LANE_DETAILED_STATUS_H
#include "osprey7_v2l8p1_ipconfig.h"
#include "osprey7_v2l8p1_usr_includes.h"
#include "common/srds_api_err_code.h"
#include "common/srds_api_types.h"

/*! @file
 *  @brief Auto generated tool for updating struct member fields
 */

/*! @addtogroup APITag
 * @{
 */

/*! @defgroup SerdesApiLaneDetailedStatusTag Struct Collection APIs
 * Serdes API functions used for updating structs.
 */

/*! @addtogroup SerdesApiLaneDetailedStatusTag
 * @{
 */

 #ifndef SMALL_FOOTPRINT

#include "osprey7_v2l8p1_common.h"


/** osprey7_v2l8p1_detailed_lane_status_st
 * 
 */
typedef struct osprey7_v2l8p1_detailed_lane_status_st {
    /** PRBS Error Count */
    uint32_t prbs_chk_errcnt;
    /** Search Warnings */
    uint32_t srch_warn[8];
    /** Search Errors */
    uint32_t srch_err[8];
    /** Dummy 22 */
    int32_t dummy22;
    /** Link time in milliseconds */
    uint32_t link_time;
    /** Tuning done status time from SD to Tuning Done */
    uint32_t tuningdone_time;
    osprey7_v2l8p1_dbgfb_stats_st dbgfb_stats;
    /** One Hot DSC State */
    uint16_t dsc_sm[2];
    /** Horizontal left eye margin @ 1e-5 as seen by internal diagnostic slicer in mUI and mV */
    uint16_t heye_left;
    /** Horizontal right eye margin @ 1e-5 as seen by internal diagnostic slicer in mUI and mV */
    uint16_t heye_right;
    /** Vertical upper eye margin @ 1e-5 as seen by internal diagnostic slicer in mUI and mV */
    uint16_t veye_upper;
    /** Vertical lower eye margin @ 1e-5 as seen by internal diagnostic slicer in mUI and mV */
    uint16_t veye_lower;
    /** LMS Slicer Threshold */
    int16_t lms_thresh;
    /** Data23 Slicer Threshold */
    int16_t data23_thresh;
    /** Data14 Slicer Threshold */
    int16_t data14_thresh;
    /** Data05 Slicer Threshold */
    int16_t data05_thresh;
    /** Phase1 Slicer Threshold */
    int16_t phase1_thresh;
    /** Phase02 Slicer Threshold */
    int16_t phase02_thresh;
    /** blw gain */
    int16_t blw_gain;
    /** Frequency offset of local reference clock with respect to RX data in ppm */
    int16_t ppm;
    /** Estimate for Main tap */
    int16_t main_tap_est;
    /** TX equalization FIR tap weights */
    osprey7_v2l8p1_txfir_st txfir;
    /** Dummy19 */
    int16_t dummy19;
    /** Dummy20 */
    int16_t dummy20[2];
    /** Dummy21 */
    int16_t dummy21[2];
    /** Dummy24 */
    int16_t dummy24[2];
    /** Dummy25 */
    int16_t dummy25[2];
    /** dummy8 */
    int16_t dummy8[6][4];
    int16_t lvl_ss;
    int16_t lvl_90;
    /** RX PI counter value (Phase Error) for data slicer */
    uint16_t rx_pi_cnt_perr;
    /** Horizontal left eye margin in mUI and mV */
    uint16_t pam_heye_left_mUI[3];
    /** Horizontal right eye margin in mUI and mV */
    uint16_t pam_heye_right_mUI[3];
    /** Vertical upper eye margin in mUI and mV */
    uint16_t pam_veye_upper_mV[3];
    /** Vertical lower eye margin in mUI and mV */
    uint16_t pam_veye_lower_mV[3];
    /** Horizontal eye margin left/right average in mUI */
    uint16_t pam_heye_avg_mUI[3];
    /** Vertical eye margin left/right average in mV */
    uint16_t pam_veye_avg_mV[3];
    /** RX PAM Mode */
    uint8_t rx_pam_mode;
    /** Order of PRBS Checker */
    uint8_t prbs_chk_order;
    /** Temperature Index */
    uint8_t temp_idx;
    /** TX driver to disable high voltage control */
    uint8_t ams_tx_drv_hv_disable;
    /** Analog Resistor Calibration value */
    uint8_t ams_tx_ana_rescal;
    /** TX PAM Mode */
    uint8_t tx_pam_mode;
    /** TX Precoder Enable */
    uint8_t tx_prec_en;
    /** Are the TXFIR taps using the PAM4 range */
    uint8_t txfir_use_pam4_range;
    /** No of TXFIR Taps Enabled */
    uint8_t num_txfir_taps;
    /** Signal Detect */
    uint8_t sigdet;
    /** Signal Detect Change */
    uint8_t sigdet_chg;
    /** PMD RX Lock */
    uint8_t pmd_lock;
    /** PMD RX Lock Change */
    uint8_t pmd_lock_chg;
    /** TX PLL Select */
    uint8_t pmd_tx_pll_select;
    /** RX PLL Select */
    uint8_t pmd_rx_pll_select;
    /** Restart Count */
    uint8_t restart_count;
    /** Reset count */
    uint8_t reset_count;
    /** PMD Lock Count */
    uint8_t pmd_lock_count;
    /** Variable Gain Amplifier setting */
    uint8_t vga;
    /** Fixed Gain setting */
    uint8_t fga;
    /** Main (Mid) Frequency Peaking Filter setting */
    uint8_t pf;
    /** Low Frequency Peaking Filter settings */
    uint8_t pf2;
    /** High Frequency Peaking Filter settings */
    uint8_t pf3;
    /** Main (Mid) Frequency Peaking Filter Register settings */
    uint8_t pf_reg[3];
    /** High Frequency Peaking Filter Register settings */
    uint8_t pf3_reg[3];
    /** Extra AFE settings for Osprey7 */
    uint8_t refgen_range;
    /** Extra AFE settings for Osprey7 */
    uint8_t dfesum_bw;
    /** Extra AFE settings for Osprey7 */
    uint8_t fga_bw_cl;
    /** Extra AFE settings for Osprey7 */
    uint8_t pga_bw_cl;
    /** Extra AFE settings for Osprey7 */
    uint8_t pfhi_range;
    /** Extra AFE settings for Osprey7 */
    uint8_t pfmid_range;
    /** Extra AFE settings for Osprey7 */
    uint8_t pflow_range;
    /** Extra AFE settings for Osprey7 */
    uint8_t pfmid_10g;
    /** Extra AFE settings for Osprey7 */
    uint8_t ffe_enable;
    /** Extra AFE settings for Osprey7 */
    uint8_t ffesum_bw;
    /** Extra AFE settings for Osprey7 */
    uint8_t ffe_gain;
    /** Extra AFE settings for Osprey7 */
    int8_t ffe[2][4];
    /** Delay of zero crossing slicer, m1, wrt to data in PI codes */
    int8_t clk90;
    /** Horizontal offset between data and phase */
    int8_t dp_hoffset;
    /** Horizontal offset between data and lms */
    int8_t dl_hoffset;
    int8_t lms_dac4ck;
    int8_t phase_dac4ck;
    int8_t data_dac4ck;
    int8_t lms_dac4ck_q;
    int8_t phase_dac4ck_q;
    int8_t data_dac4ck_q;
    /** DFE tap values */
    int8_t dfe[38][4];
    /** DC offset DAC control value */
    int8_t dc_offset;
    /** DC offset range shift */
    uint8_t dc_offset_range_shift;
    /** Slicer calibration control codes (data0) */
    int8_t thctrl_d[6][4];
    /** Slicer calibration control codes (phase0) */
    int8_t thctrl_p[3][4];
    /** Slicer calibration control codes (lms) */
    int8_t thctrl_l[4];
    /** PRBS Checker Enable */
    uint8_t prbs_chk_en;
    /** PRBS Checker Invert */
    uint8_t prbs_chk_inv;
    /** PRBS Checker Lock */
    uint8_t prbs_chk_lock;
    /** PRBS Checker Lock Lost */
    uint8_t prbs_chk_lock_lost;
    /** lane_reset_state */
    uint8_t reset_state;
    /** uC stopped state */
    uint8_t stop_state;
    /** BER Error Rate string */
    char ber_string[10];
    /** signal detect offset calibration pos */
    uint8_t ams_rx_sd_cal_pos;
    /** signal detect offset calibration neg */
    uint8_t ams_rx_sd_cal_neg;
    /** channel loss usr var */
    uint8_t pam4_chn_loss;
    /** vga1 bw control capacitor */
    uint8_t ams_rx_vga1_bwr;
    /** vga bw control inductor */
    uint8_t ams_rx_vga_dis_ind;
    /** vga3 inductor */
    uint8_t ams_rx_vga2_cm;
    /** pf3 max bw */
    uint8_t ams_rx_eq2_hibw;
    /** vga0 rescal mux */
    uint8_t ams_rx_vga0_rescal_mux;
    /** vga1 rescal mux */
    uint8_t ams_rx_vga1_rescal_mux;
    /** vga2 rescal mux */
    uint8_t ams_rx_vga2_rescal_mux;
    uint8_t EQ1_bwr;
    uint8_t EQ2_bwr;
    uint8_t VGA1_bwr;
    uint8_t VGA2_bwr;
    uint8_t vga_dis_ind;
    /** lms calibration residual error */
    int8_t lms_cal_err[2];
    /** lms calibration residual error */
    int8_t lms_cal_err_q[2];
    /** phase calibration residual error */
    int8_t phase_cal_err[2];
    /** phase calibration residual error */
    int8_t phase_cal_err_q[2];
    /** data_calibration residual_error */
    int8_t data_cal_err;
    int8_t data_cal_err_q;
    /** max data calibration residual error */
    int8_t max_data_cal_err;
    /** max data calibration residual error */
    int8_t max_data_cal_err_q;
    /** horizontal calibration residual error */
    int8_t res_dac4ck_err[4][2];
    /** horizontal calibration sign change count */
    uint8_t sgn_chn_cnt[4][2];
    /** dac4ck calibration failure */
    uint8_t dac4ck_cal_fail;
    /** eye margin failure */
    uint8_t eye_margin_fail;
    /** dac4ck monotonicity fail */
    uint8_t dac4ck_monotonicity_fail;
    /** hoffset rail out */
    uint8_t hoffset_rail_out;
    /** calibrated dac4ck reset */
    uint8_t reset_calibrated_dac4ck;
    /** Horizontal offset between inphase and quadrature phase */
    int8_t iq_cal;
    /** iq cal INL errors for each PI in each quadrant */
    int8_t iq_cal_inl_errors[2][4];
    /** iq cal residual INL error */
    int8_t iq_cal_residual_inl_error;
    /** Dummy 4 */
    int8_t dummy4;
    /** Dummy 5 */
    int8_t dummy5;
    /** Dummy 6 */
    uint8_t dummy6;
    /** Dummy 7 */
    int8_t dummy7[6][4];
    /** Dummy 9 */
    uint8_t dummy9[12];
    /** Dummy 10 */
    uint8_t dummy10[6][4];
    /** Dummy 11 */
    int8_t dummy11[6][4];
    /** Dummy 12 */
    int8_t dummy12[6][4];
    /** Dummy 13 */
    int8_t dummy13;
    /** Dummy 18 */
    int8_t dummy18[3];
    /** Dummy 23 */
    uint8_t dummy23;
    /** Big endian */
    uint8_t big_endian;
    /** usr_status_eq_debug16 */
    uint8_t usr_status_eq_debug16;
    /** usr_status_eq_debug18 */
    uint8_t usr_status_eq_debug18;
    /** pflow_ctrl_val - Low Frequency Peaking Filter reg setting */
    uint8_t pflow_ctrl_val;
    /** Padding to complete 4-byte boundary */
    uint8_t padding_bytes[2];
} osprey7_v2l8p1_detailed_lane_status_st_t;

/** osprey7_v2l8p1_gen_collect_osprey7_v2l8p1_detailed_lane_status_st
 * @param[in] sa__ is an opaque state vector passed through to device access functions.
 * @param[out] st struct pointer which will have its fields updated
 * @return Error Code generated by API (returns ERR_CODE_NONE if no errors).
 */
err_code_t osprey7_v2l8p1_gen_collect_osprey7_v2l8p1_detailed_lane_status_st(srds_access_t *sa__, osprey7_v2l8p1_detailed_lane_status_st_t *st);

#endif /* !SMALL_FOOTPRINT */
/*! @} SerdesApiLaneDetailedStatusTag */
/*! @} APITag */
#endif /* SERDES_API_LANE_DETAILED_STATUS_H */
#ifdef __cplusplus
}
#endif
