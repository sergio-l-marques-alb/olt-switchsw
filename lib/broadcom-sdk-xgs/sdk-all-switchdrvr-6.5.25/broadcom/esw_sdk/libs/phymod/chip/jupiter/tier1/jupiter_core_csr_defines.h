/* Header generated by Jupiter (2021-05-11 16:50:01) */
#ifndef __jupiter_csr_defines
#define __jupiter_csr_defines


typedef enum jupiter_csr_access_e {
    JUPITER_CSR_READ_WRITE = 0, /* CSR Field is read-write */
    JUPITER_CSR_READ_ONLY = 1, /* CSR Field is read-only */
} jupiter_csr_access_t;

/* NOTE: */
/*   * To access registers in different lanes */
/*     please use the lane offsets below. */
/*   * LANE_BROADCAST is write only and does not */
/*     work for reading registers. */
/* ------------------------------------- */
/* LANE OFFSETS */
#define CMN 0x00000000
#define LANE_OFFSET 0x02000000
#define LANE_BROADCAST 0x40000000
#define JUPITER_LANE_MAX 7
/* ------------------------------------- */

/* ------------------------------------- */
/* BLOCK OFFSETS */
#define CMN_OFFSET 0x00000000
#define RX0_OFFSET 0x02000000
#define TX0_OFFSET 0x02800000
#define ETH0_OFFSET 0x03000000
#define DFX0_OFFSET 0x03800000
#define RX1_OFFSET 0x04000000
#define TX1_OFFSET 0x04800000
#define ETH1_OFFSET 0x05000000
#define DFX1_OFFSET 0x05800000
#define RX2_OFFSET 0x06000000
#define TX2_OFFSET 0x06800000
#define ETH2_OFFSET 0x07000000
#define DFX2_OFFSET 0x07800000
#define RX3_OFFSET 0x08000000
#define TX3_OFFSET 0x08800000
#define ETH3_OFFSET 0x09000000
#define DFX3_OFFSET 0x09800000
#define RX4_OFFSET 0x0A000000
#define TX4_OFFSET 0x0A800000
#define ETH4_OFFSET 0x0B000000
#define DFX4_OFFSET 0x0B800000
#define RX5_OFFSET 0x0C000000
#define TX5_OFFSET 0x0C800000
#define ETH5_OFFSET 0x0D000000
#define DFX5_OFFSET 0x0D800000
#define RX6_OFFSET 0x0E000000
#define TX6_OFFSET 0x0E800000
#define ETH6_OFFSET 0x0F000000
#define DFX6_OFFSET 0x0F800000
#define RX7_OFFSET 0x10000000
#define TX7_OFFSET 0x10800000
#define ETH7_OFFSET 0x11000000
#define DFX7_OFFSET 0x11800000
/* ------------------------------------- */

/* ------------------------------------- */
/* REG: AFE_CMN_ATEST */
/* DESCRIPTION: */
/*   AFE register with fields related to configuration of the analog test pmon selection control. */
/* ------------------------------------- */
#define AFE_CMN_ATEST_ADDR 0x00000000
#define AFE_CMN_ATEST_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable register override for atest */
/*   0 - Normal operation */
/*   1 - Register overrides enabled */
#define AFE_CMN_ATEST_BYPASS_ENA_A_OFFSET 0x00000000
#define AFE_CMN_ATEST_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_CMN_ATEST_BYPASS_ENA_A_MASK 0x00000001
#define AFE_CMN_ATEST_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_ATEST_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CAPTURE_ENA_NT */
/* DESCRIPTION: */
/*   Atest ADC begins the capture process on the rising edge of this control signal.  */
#define AFE_CMN_ATEST_CAPTURE_ENA_NT_OFFSET 0x00000001
#define AFE_CMN_ATEST_CAPTURE_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_ATEST_CAPTURE_ENA_NT_MASK 0x00000002
#define AFE_CMN_ATEST_CAPTURE_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_ATEST_CAPTURE_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: MEAS_TERM_NT */
/* DESCRIPTION: */
/*   Sets  the type of termination to be used during the Atest ADC capture.  */
/*   11 -Unused */
/*   10 - Terminate to GND 1kOhm */
/*   01 - Terminate to vddh 1kOhm */
/*   00 - High impedance (Voltage measurement) */
#define AFE_CMN_ATEST_MEAS_TERM_NT_OFFSET 0x00000002
#define AFE_CMN_ATEST_MEAS_TERM_NT_BITWIDTH 0x00000003
#define AFE_CMN_ATEST_MEAS_TERM_NT_MASK 0x0000001C
#define AFE_CMN_ATEST_MEAS_TERM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_ATEST_MEAS_TERM_NT_RESET_VALUE 0x00000000

/* FIELD: DIV_NT */
/* DESCRIPTION: */
/*   Reference clock divider for the ATEST  ADC block. */
/*   000 - div1 */
/*   001 - div2 */
/*   010 - div4 */
/*   011 - div8 */
/*   100 - div16 */
/*   101 - div32 */
/*   110, 111 - unused.  */
#define AFE_CMN_ATEST_DIV_NT_OFFSET 0x00000005
#define AFE_CMN_ATEST_DIV_NT_BITWIDTH 0x00000003
#define AFE_CMN_ATEST_DIV_NT_MASK 0x000000E0
#define AFE_CMN_ATEST_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_ATEST_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: PMONSEL_A */
/* DESCRIPTION: */
/*   Process monitor oscillator selection block.  */
/*   000: ULVT Inverter Oscillator (Clocking A) */
/*   001: LVT Inverter Oscillator  */
/*   010: SVT Inverter Oscillator  */
/*   011: Thick Oxide Inverter Oscillator */
/*   100: Driver MUX Test Structure (Driver)  */
/*   101: ULVT Inverter+MOMCAP Oscillator  */
/*   110: ULVT NAND Oscillator (Clocking B) */
/*   111: ULVT NOR Oscillator (Clocking C) */
#define AFE_CMN_ATEST_PMONSEL_A_OFFSET 0x00000008
#define AFE_CMN_ATEST_PMONSEL_A_BITWIDTH 0x00000003
#define AFE_CMN_ATEST_PMONSEL_A_MASK 0x00000700
#define AFE_CMN_ATEST_PMONSEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_ATEST_PMONSEL_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_ATEST_RDREG */
/* DESCRIPTION: */
/*   Status register allowing observation of the ATest ADC measured output. */
/* ------------------------------------- */
#define AFE_CMN_ATEST_RDREG_ADDR 0x00000004
#define AFE_CMN_ATEST_RDREG_SIZE 32

/* FIELD: ADC_NT */
/* DESCRIPTION: */
/*   Atest ADC output data word */
#define AFE_CMN_ATEST_RDREG_ADC_NT_OFFSET 0x00000000
#define AFE_CMN_ATEST_RDREG_ADC_NT_BITWIDTH 0x0000000C
#define AFE_CMN_ATEST_RDREG_ADC_NT_MASK 0x00000FFF
#define AFE_CMN_ATEST_RDREG_ADC_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_ATEST_RDREG_ADC_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_BSCAN */
/* DESCRIPTION: */
/*   Boundary scan configuration */
/* ------------------------------------- */
#define AFE_CMN_BSCAN_ADDR 0x00000008
#define AFE_CMN_BSCAN_SIZE 32

/* FIELD: VHYST_NT */
/* DESCRIPTION: */
/*   Boundary scan test recveiver hysteresys level.  */
/*   11 - Max setting */
/*   00 - Min setting */
#define AFE_CMN_BSCAN_VHYST_NT_OFFSET 0x00000000
#define AFE_CMN_BSCAN_VHYST_NT_BITWIDTH 0x00000002
#define AFE_CMN_BSCAN_VHYST_NT_MASK 0x00000003
#define AFE_CMN_BSCAN_VHYST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_BSCAN_VHYST_NT_RESET_VALUE 0x00000001

/* FIELD: VBIAS_NT */
/* DESCRIPTION: */
/*   Boundary scan test recveiver voltage reference. Targeted to be optimal mission mode receiver common mode.  */
/*   111 - Max setting */
/*   000 - Min setting */
#define AFE_CMN_BSCAN_VBIAS_NT_OFFSET 0x00000002
#define AFE_CMN_BSCAN_VBIAS_NT_BITWIDTH 0x00000003
#define AFE_CMN_BSCAN_VBIAS_NT_MASK 0x0000001C
#define AFE_CMN_BSCAN_VBIAS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_BSCAN_VBIAS_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: AFE_CMN_CLKGEN_REG1 */
/* DESCRIPTION: */
/*   AFE register with fields related to configuration of the dcoreg control. */
/* ------------------------------------- */
#define AFE_CMN_CLKGEN_REG1_ADDR 0x0000000C
#define AFE_CMN_CLKGEN_REG1_SIZE 32

/* FIELD: VCODIV_NT */
/* DESCRIPTION: */
/*   CMN clock generator vco post divider ratio control for ock_afe_cmn_clkgen_vcodiv */
/*   7bit representation of the fractional division of LC VCO clock. Ratios between 12 and 127.75 supported.  */
/*   Examples: */
/*   1111111 - Div 127 */
/*   0001000 - Div 16 */

#define AFE_CMN_CLKGEN_REG1_VCODIV_NT_OFFSET 0x00000000
#define AFE_CMN_CLKGEN_REG1_VCODIV_NT_BITWIDTH 0x00000007
#define AFE_CMN_CLKGEN_REG1_VCODIV_NT_MASK 0x0000007F
#define AFE_CMN_CLKGEN_REG1_VCODIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_VCODIV_NT_RESET_VALUE 0x0000000A

/* FIELD: HSREFDIV_NT */
/* DESCRIPTION: */
/*   Divider that takes the 10.5GHz output clock of the common clock gen and divides it down to create the HSREF clock. Default setting is div3. Divide ratios not listed are invalid.   */
/*   011-111 unused */
/*   010 - div5 */
/*   001 - div4 */
/*   000 - div3  */
#define AFE_CMN_CLKGEN_REG1_HSREFDIV_NT_OFFSET 0x00000008
#define AFE_CMN_CLKGEN_REG1_HSREFDIV_NT_BITWIDTH 0x00000003
#define AFE_CMN_CLKGEN_REG1_HSREFDIV_NT_MASK 0x00000700
#define AFE_CMN_CLKGEN_REG1_HSREFDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_HSREFDIV_NT_RESET_VALUE 0x00000000

/* FIELD: FBDIVFRAC_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Enables override of control signals for the feedback path PI based on DBE fractional synthesizer.  */
/*   0 - Normal operation */
/*   1 - 5 MSB of the ictl_afe_cmn_clkgen_fbdivfrac fractional code word directly adjust the PI phase.  */
#define AFE_CMN_CLKGEN_REG1_FBDIVFRAC_OVR_ENA_NT_OFFSET 0x0000000F
#define AFE_CMN_CLKGEN_REG1_FBDIVFRAC_OVR_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_CLKGEN_REG1_FBDIVFRAC_OVR_ENA_NT_MASK 0x00008000
#define AFE_CMN_CLKGEN_REG1_FBDIVFRAC_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_FBDIVFRAC_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: DCOREG_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define AFE_CMN_CLKGEN_REG1_DCOREG_SCBYPASS_NT_OFFSET 0x00000010
#define AFE_CMN_CLKGEN_REG1_DCOREG_SCBYPASS_NT_BITWIDTH 0x00000001
#define AFE_CMN_CLKGEN_REG1_DCOREG_SCBYPASS_NT_MASK 0x00010000
#define AFE_CMN_CLKGEN_REG1_DCOREG_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_DCOREG_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: DCOREG_BLEED_ENA_A */
/* DESCRIPTION: */
/*   1 - CMN Clock Gen DCO Regulator bleed current is on */
/*   0 - Common Clock Gen DCO Regulator bleed current is off */
#define AFE_CMN_CLKGEN_REG1_DCOREG_BLEED_ENA_A_OFFSET 0x00000011
#define AFE_CMN_CLKGEN_REG1_DCOREG_BLEED_ENA_A_BITWIDTH 0x00000001
#define AFE_CMN_CLKGEN_REG1_DCOREG_BLEED_ENA_A_MASK 0x00020000
#define AFE_CMN_CLKGEN_REG1_DCOREG_BLEED_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_DCOREG_BLEED_ENA_A_RESET_VALUE 0x00000000

/* FIELD: DCOREG_NT */
/* DESCRIPTION: */
/*   Common clock gen DCO regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define AFE_CMN_CLKGEN_REG1_DCOREG_NT_OFFSET 0x00000012
#define AFE_CMN_CLKGEN_REG1_DCOREG_NT_BITWIDTH 0x00000004
#define AFE_CMN_CLKGEN_REG1_DCOREG_NT_MASK 0x003C0000
#define AFE_CMN_CLKGEN_REG1_DCOREG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG1_DCOREG_NT_RESET_VALUE 0x0000000E

/* ------------------------------------- */
/* REG: AFE_CMN_CLKGEN_REG2 */
/* DESCRIPTION: */
/*   AFE register with fields related to configuration of the feedback div int control. */
/* ------------------------------------- */
#define AFE_CMN_CLKGEN_REG2_ADDR 0x00000010
#define AFE_CMN_CLKGEN_REG2_SIZE 32

/* FIELD: CK_OSC_SEL_NT */
/* DESCRIPTION: */
/*   Allows the common DCO flops to be clocked with the ls reference clock as a test mode.  */
/*   1 - Test mode */
/*   0 - Normal operation */
#define AFE_CMN_CLKGEN_REG2_CK_OSC_SEL_NT_OFFSET 0x00000000
#define AFE_CMN_CLKGEN_REG2_CK_OSC_SEL_NT_BITWIDTH 0x00000001
#define AFE_CMN_CLKGEN_REG2_CK_OSC_SEL_NT_MASK 0x00000001
#define AFE_CMN_CLKGEN_REG2_CK_OSC_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG2_CK_OSC_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: PCLKDIV_A */
/* DESCRIPTION: */
/*   Common synthesizer output divider setting (clock that is output to DBE) */
/*   7p2 representation of the fractional division of bit clock. Ratios between 12 and 127.75 supported. Is latched into the local clock domain on rising edge of associated ready signal. Examples: */
/*   1111111.11 - Div 127.75 */
/*   0001000.10 - Div 16.5 */
/*   0001000.00 - Div 16 */
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_A_OFFSET 0x00000001
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_A_BITWIDTH 0x00000009
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_A_MASK 0x000003FE
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_A_RESET_VALUE 0x00000000

/* FIELD: PCLKDIV_READY_A */
/* DESCRIPTION: */
/*   Rising edge of this ready signal is used to latch the associated bus onto the local AFE clock domain.   */
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_READY_A_OFFSET 0x0000000A
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_READY_A_BITWIDTH 0x00000001
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_READY_A_MASK 0x00000400
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG2_PCLKDIV_READY_A_RESET_VALUE 0x00000000

/* FIELD: FBDIVINT */
/* DESCRIPTION: */
/*   Control signals for the feedback path Integer divider based on DBE fractional synthesizer */
#define AFE_CMN_CLKGEN_REG2_FBDIVINT_OFFSET 0x00000010
#define AFE_CMN_CLKGEN_REG2_FBDIVINT_BITWIDTH 0x00000007
#define AFE_CMN_CLKGEN_REG2_FBDIVINT_MASK 0x007F0000
#define AFE_CMN_CLKGEN_REG2_FBDIVINT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_CLKGEN_REG2_FBDIVINT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_RDREG */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_RDREG_ADDR 0x00000014
#define AFE_CMN_LCPLL_FRACDIV_RDREG_SIZE 32

/* FIELD: FRACN_DSM_OUT_NT */
/* DESCRIPTION: */
/*   DSM output */
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_DSM_OUT_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_DSM_OUT_NT_BITWIDTH 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_DSM_OUT_NT_MASK 0x0000FFFF
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_DSM_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_DSM_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: FRACN_NT */
/* DESCRIPTION: */
/*   FracN control value to AFE */
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_NT_OFFSET 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_NT_BITWIDTH 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_NT_MASK 0xFFFF0000
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_LCPLL_FRACDIV_RDREG_FRACN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG1 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG1_ADDR 0x00000018
#define AFE_CMN_LCPLL_FRACDIV_REG1_SIZE 32

/* FIELD: FRACN_VALUE_NT */
/* DESCRIPTION: */
/*   FracnN configuration value */
#define AFE_CMN_LCPLL_FRACDIV_REG1_FRACN_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG1_FRACN_VALUE_NT_BITWIDTH 0x00000020
#define AFE_CMN_LCPLL_FRACDIV_REG1_FRACN_VALUE_NT_MASK 0xFFFFFFFF
#define AFE_CMN_LCPLL_FRACDIV_REG1_FRACN_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG1_FRACN_VALUE_NT_RESET_VALUE 0x11B6DB6E

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG2 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG2_ADDR 0x0000001C
#define AFE_CMN_LCPLL_FRACDIV_REG2_SIZE 32

/* FIELD: FRACN_ENABLE_A */
/* DESCRIPTION: */
/*   FrancN enable */
#define AFE_CMN_LCPLL_FRACDIV_REG2_FRACN_ENABLE_A_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG2_FRACN_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_FRACN_ENABLE_A_MASK 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_FRACN_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_FRACN_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   enable dither function */
#define AFE_CMN_LCPLL_FRACDIV_REG2_DITHER_ENABLE_A_OFFSET 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_DITHER_ENABLE_A_MASK 0x00000002
#define AFE_CMN_LCPLL_FRACDIV_REG2_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: VALUE_LOAD_ENABLE_A */
/* DESCRIPTION: */
/*   loading fracN value enable */
#define AFE_CMN_LCPLL_FRACDIV_REG2_VALUE_LOAD_ENABLE_A_OFFSET 0x00000002
#define AFE_CMN_LCPLL_FRACDIV_REG2_VALUE_LOAD_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_VALUE_LOAD_ENABLE_A_MASK 0x00000004
#define AFE_CMN_LCPLL_FRACDIV_REG2_VALUE_LOAD_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_VALUE_LOAD_ENABLE_A_RESET_VALUE 0x00000001

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   Capture the RO data */
#define AFE_CMN_LCPLL_FRACDIV_REG2_RO_CSR_CAPTURE_A_OFFSET 0x00000003
#define AFE_CMN_LCPLL_FRACDIV_REG2_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_RO_CSR_CAPTURE_A_MASK 0x00000008
#define AFE_CMN_LCPLL_FRACDIV_REG2_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   enable cycling function */
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_ENABLE_A_OFFSET 0x00000004
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_ENABLE_A_MASK 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count */
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_MAX_NT_OFFSET 0x00000005
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_MAX_NT_MASK 0x00000FE0
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count */
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_SEQ_NT_OFFSET 0x0000000C
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_SEQ_NT_MASK 0x0007F000
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG2_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG3 */
/* DESCRIPTION: */
/*   Override for common synthesizer fractional division ratio. Driven by the delta-sigma modulator in normal operation. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG3_ADDR 0x00000020
#define AFE_CMN_LCPLL_FRACDIV_REG3_SIZE 32

/* FIELD: BYPASS_FRACN_NT */
/* DESCRIPTION: */
/*   Control signals for the feedback path PI based on DBE fractional synthesizer.  */
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_FRACN_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_FRACN_NT_BITWIDTH 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_FRACN_NT_MASK 0x0000FFFF
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_FRACN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_FRACN_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable register override for lcpll FracN mode */
/*   0 - Normal operation */
/*   1 - Register overrides enabled */
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_ENA_A_OFFSET 0x00000010
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_ENA_A_MASK 0x00010000
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG3_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG4 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG4_ADDR 0x00000024
#define AFE_CMN_LCPLL_FRACDIV_REG4_SIZE 32

/* FIELD: SSC_MAX_VALUE_NT */
/* DESCRIPTION: */
/*   ssc max configuration value */
#define AFE_CMN_LCPLL_FRACDIV_REG4_SSC_MAX_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG4_SSC_MAX_VALUE_NT_BITWIDTH 0x00000020
#define AFE_CMN_LCPLL_FRACDIV_REG4_SSC_MAX_VALUE_NT_MASK 0xFFFFFFFF
#define AFE_CMN_LCPLL_FRACDIV_REG4_SSC_MAX_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG4_SSC_MAX_VALUE_NT_RESET_VALUE 0x01381381

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG5 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG5_ADDR 0x00000028
#define AFE_CMN_LCPLL_FRACDIV_REG5_SIZE 32

/* FIELD: SSC_MIN_VALUE_NT */
/* DESCRIPTION: */
/*   ssc min configuration value */
#define AFE_CMN_LCPLL_FRACDIV_REG5_SSC_MIN_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG5_SSC_MIN_VALUE_NT_BITWIDTH 0x00000020
#define AFE_CMN_LCPLL_FRACDIV_REG5_SSC_MIN_VALUE_NT_MASK 0xFFFFFFFF
#define AFE_CMN_LCPLL_FRACDIV_REG5_SSC_MIN_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG5_SSC_MIN_VALUE_NT_RESET_VALUE 0x0094FB29

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_FRACDIV_REG6 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier LCPLL loop filter. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_FRACDIV_REG6_ADDR 0x0000002C
#define AFE_CMN_LCPLL_FRACDIV_REG6_SIZE 32

/* FIELD: SSC_STEP_VALUE_NT */
/* DESCRIPTION: */
/*   ssc step configuration value */
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_STEP_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_STEP_VALUE_NT_BITWIDTH 0x00000014
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_STEP_VALUE_NT_MASK 0x000FFFFF
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_STEP_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_STEP_VALUE_NT_RESET_VALUE 0x00001A3E

/* FIELD: SSC_ENABLE_A */
/* DESCRIPTION: */
/*   SSC enable */
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_ENABLE_A_OFFSET 0x00000014
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_ENABLE_A_MASK 0x00100000
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_FRACDIV_REG6_SSC_ENABLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_RDREG1 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_RDREG1_ADDR 0x00000030
#define AFE_CMN_LCPLL_OSC_RDREG1_SIZE 32

/* FIELD: CLKGEN_OSC_NT */
/* DESCRIPTION: */
/*   Clockgen (synthesizer) time to digital converter output word. */
#define AFE_CMN_LCPLL_OSC_RDREG1_CLKGEN_OSC_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_RDREG1_CLKGEN_OSC_NT_BITWIDTH 0x0000000A
#define AFE_CMN_LCPLL_OSC_RDREG1_CLKGEN_OSC_NT_MASK 0x000003FF
#define AFE_CMN_LCPLL_OSC_RDREG1_CLKGEN_OSC_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_LCPLL_OSC_RDREG1_CLKGEN_OSC_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_RDREG2 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_RDREG2_ADDR 0x00000034
#define AFE_CMN_LCPLL_OSC_RDREG2_SIZE 32

/* FIELD: INTEGRAL_ACCUM_NT */
/* DESCRIPTION: */
/*   integral accumulator value. */
#define AFE_CMN_LCPLL_OSC_RDREG2_INTEGRAL_ACCUM_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_RDREG2_INTEGRAL_ACCUM_NT_BITWIDTH 0x00000020
#define AFE_CMN_LCPLL_OSC_RDREG2_INTEGRAL_ACCUM_NT_MASK 0xFFFFFFFF
#define AFE_CMN_LCPLL_OSC_RDREG2_INTEGRAL_ACCUM_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_LCPLL_OSC_RDREG2_INTEGRAL_ACCUM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG1_ADDR 0x00000038
#define AFE_CMN_LCPLL_OSC_REG1_SIZE 32

/* FIELD: OSC_ENABLE_A */
/* DESCRIPTION: */
/*   lcpll osc enable control. */
#define AFE_CMN_LCPLL_OSC_REG1_OSC_ENABLE_A_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG1_OSC_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG1_OSC_ENABLE_A_MASK 0x00000001
#define AFE_CMN_LCPLL_OSC_REG1_OSC_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG1_OSC_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: KP_NT */
/* DESCRIPTION: */
/*   prop path gain control. */
#define AFE_CMN_LCPLL_OSC_REG1_KP_NT_OFFSET 0x00000001
#define AFE_CMN_LCPLL_OSC_REG1_KP_NT_BITWIDTH 0x0000000F
#define AFE_CMN_LCPLL_OSC_REG1_KP_NT_MASK 0x0000FFFE
#define AFE_CMN_LCPLL_OSC_REG1_KP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG1_KP_NT_RESET_VALUE 0x00000008

/* FIELD: GAIN_LOAD_A */
/* DESCRIPTION: */
/*   integral and prop path gain load control. */
#define AFE_CMN_LCPLL_OSC_REG1_GAIN_LOAD_A_OFFSET 0x00000010
#define AFE_CMN_LCPLL_OSC_REG1_GAIN_LOAD_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG1_GAIN_LOAD_A_MASK 0x00010000
#define AFE_CMN_LCPLL_OSC_REG1_GAIN_LOAD_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG1_GAIN_LOAD_A_RESET_VALUE 0x00000001

/* FIELD: KI_MU_DIR_NT */
/* DESCRIPTION: */
/*   integral path mu direction control. */
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_DIR_NT_OFFSET 0x00000011
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_DIR_NT_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_DIR_NT_MASK 0x00020000
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: KI_MU_NT */
/* DESCRIPTION: */
/*   integral path mu control. */
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_NT_OFFSET 0x00000012
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_NT_BITWIDTH 0x00000005
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_NT_MASK 0x007C0000
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG1_KI_MU_NT_RESET_VALUE 0x00000014

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG2_ADDR 0x0000003C
#define AFE_CMN_LCPLL_OSC_REG2_SIZE 32

/* FIELD: IIR_GAIN_NT */
/* DESCRIPTION: */
/*   iir filter gain control. */
#define AFE_CMN_LCPLL_OSC_REG2_IIR_GAIN_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG2_IIR_GAIN_NT_BITWIDTH 0x0000000C
#define AFE_CMN_LCPLL_OSC_REG2_IIR_GAIN_NT_MASK 0x00000FFF
#define AFE_CMN_LCPLL_OSC_REG2_IIR_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG2_IIR_GAIN_NT_RESET_VALUE 0x00000400

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG3_ADDR 0x00000040
#define AFE_CMN_LCPLL_OSC_REG3_SIZE 32

/* FIELD: INTEGRAL_ACCUM_FROZEN_A */
/* DESCRIPTION: */
/*   integral accumulator frozen control. */
#define AFE_CMN_LCPLL_OSC_REG3_INTEGRAL_ACCUM_FROZEN_A_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG3_INTEGRAL_ACCUM_FROZEN_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_INTEGRAL_ACCUM_FROZEN_A_MASK 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_INTEGRAL_ACCUM_FROZEN_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_INTEGRAL_ACCUM_FROZEN_A_RESET_VALUE 0x00000000

/* FIELD: TDC_INVERT_NT */
/* DESCRIPTION: */
/*   tdc inversion control. */
#define AFE_CMN_LCPLL_OSC_REG3_TDC_INVERT_NT_OFFSET 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_TDC_INVERT_NT_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_TDC_INVERT_NT_MASK 0x00000002
#define AFE_CMN_LCPLL_OSC_REG3_TDC_INVERT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_TDC_INVERT_NT_RESET_VALUE 0x00000000

/* FIELD: OSC_BYPASS_A */
/* DESCRIPTION: */
/*   Enable register override for lcpll osc */
/*   0 - Normal operation */
/*   1 - Register overrides enabled */
#define AFE_CMN_LCPLL_OSC_REG3_OSC_BYPASS_A_OFFSET 0x00000002
#define AFE_CMN_LCPLL_OSC_REG3_OSC_BYPASS_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_OSC_BYPASS_A_MASK 0x00000004
#define AFE_CMN_LCPLL_OSC_REG3_OSC_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_OSC_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: DSM_BYPASS_A */
/* DESCRIPTION: */
/*   Enable register override for lcpll DSM */
/*   0 - Normal operation */
/*   1 - Register overrides enabled */
#define AFE_CMN_LCPLL_OSC_REG3_DSM_BYPASS_A_OFFSET 0x00000003
#define AFE_CMN_LCPLL_OSC_REG3_DSM_BYPASS_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_DSM_BYPASS_A_MASK 0x00000008
#define AFE_CMN_LCPLL_OSC_REG3_DSM_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_DSM_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: TDC_BYPASS_A */
/* DESCRIPTION: */
/*   tdc bypass enable control. */
#define AFE_CMN_LCPLL_OSC_REG3_TDC_BYPASS_A_OFFSET 0x00000004
#define AFE_CMN_LCPLL_OSC_REG3_TDC_BYPASS_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_TDC_BYPASS_A_MASK 0x00000010
#define AFE_CMN_LCPLL_OSC_REG3_TDC_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_TDC_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: ACCUM_BYPASS_A */
/* DESCRIPTION: */
/*   integral accumulator bypass enable control. */
#define AFE_CMN_LCPLL_OSC_REG3_ACCUM_BYPASS_A_OFFSET 0x00000005
#define AFE_CMN_LCPLL_OSC_REG3_ACCUM_BYPASS_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_ACCUM_BYPASS_A_MASK 0x00000020
#define AFE_CMN_LCPLL_OSC_REG3_ACCUM_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_ACCUM_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   dither enable control. */
#define AFE_CMN_LCPLL_OSC_REG3_DITHER_ENABLE_A_OFFSET 0x00000006
#define AFE_CMN_LCPLL_OSC_REG3_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_DITHER_ENABLE_A_MASK 0x00000040
#define AFE_CMN_LCPLL_OSC_REG3_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   RO CSR capture enable control. */
#define AFE_CMN_LCPLL_OSC_REG3_RO_CSR_CAPTURE_A_OFFSET 0x00000007
#define AFE_CMN_LCPLL_OSC_REG3_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_RO_CSR_CAPTURE_A_MASK 0x00000080
#define AFE_CMN_LCPLL_OSC_REG3_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   cycling enable control. */
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_ENABLE_A_OFFSET 0x00000008
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_ENABLE_A_MASK 0x00000100
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count control. */
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_MAX_NT_OFFSET 0x00000009
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_MAX_NT_MASK 0x0000FE00
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count control. */
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_SEQ_NT_OFFSET 0x00000010
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_SEQ_NT_MASK 0x007F0000
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG3_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG4_ADDR 0x00000044
#define AFE_CMN_LCPLL_OSC_REG4_SIZE 32

/* FIELD: ACCUM_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   integral accumulator bypass value control. */
#define AFE_CMN_LCPLL_OSC_REG4_ACCUM_BYPASS_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG4_ACCUM_BYPASS_VALUE_NT_BITWIDTH 0x00000020
#define AFE_CMN_LCPLL_OSC_REG4_ACCUM_BYPASS_VALUE_NT_MASK 0xFFFFFFFF
#define AFE_CMN_LCPLL_OSC_REG4_ACCUM_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG4_ACCUM_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG5 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG5_ADDR 0x00000048
#define AFE_CMN_LCPLL_OSC_REG5_SIZE 32

/* FIELD: OSC_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   Clockgen digital integral and proportional path control.  */
#define AFE_CMN_LCPLL_OSC_REG5_OSC_BYPASS_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG5_OSC_BYPASS_VALUE_NT_BITWIDTH 0x0000000A
#define AFE_CMN_LCPLL_OSC_REG5_OSC_BYPASS_VALUE_NT_MASK 0x000003FF
#define AFE_CMN_LCPLL_OSC_REG5_OSC_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG5_OSC_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: TDC_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   tdc bypass value control. */
#define AFE_CMN_LCPLL_OSC_REG5_TDC_BYPASS_VALUE_NT_OFFSET 0x0000000A
#define AFE_CMN_LCPLL_OSC_REG5_TDC_BYPASS_VALUE_NT_BITWIDTH 0x00000004
#define AFE_CMN_LCPLL_OSC_REG5_TDC_BYPASS_VALUE_NT_MASK 0x00003C00
#define AFE_CMN_LCPLL_OSC_REG5_TDC_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG5_TDC_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LCPLL_OSC_REG6 */
/* DESCRIPTION: */
/*   Configuration and observability for direct digital synthesizer. */
/* ------------------------------------- */
#define AFE_CMN_LCPLL_OSC_REG6_ADDR 0x0000004C
#define AFE_CMN_LCPLL_OSC_REG6_SIZE 32

/* FIELD: DSM_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   Clockgen digital DSM bypass value. */
#define AFE_CMN_LCPLL_OSC_REG6_DSM_BYPASS_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_LCPLL_OSC_REG6_DSM_BYPASS_VALUE_NT_BITWIDTH 0x00000013
#define AFE_CMN_LCPLL_OSC_REG6_DSM_BYPASS_VALUE_NT_MASK 0x0007FFFF
#define AFE_CMN_LCPLL_OSC_REG6_DSM_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LCPLL_OSC_REG6_DSM_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_LSREF */
/* DESCRIPTION: */
/*   AFE register with fields related to configuration of the lsref term calibration control. */
/* ------------------------------------- */
#define AFE_CMN_LSREF_ADDR 0x00000050
#define AFE_CMN_LSREF_SIZE 32

/* FIELD: TERM_CAL_A */
/* DESCRIPTION: */
/*   Unused */
#define AFE_CMN_LSREF_TERM_CAL_A_OFFSET 0x00000000
#define AFE_CMN_LSREF_TERM_CAL_A_BITWIDTH 0x00000003
#define AFE_CMN_LSREF_TERM_CAL_A_MASK 0x00000007
#define AFE_CMN_LSREF_TERM_CAL_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_LSREF_TERM_CAL_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_RDREG */
/* DESCRIPTION: */
/*   Configuration and observability for the termination calibration FSM */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_RDREG_ADDR 0x00000054
#define AFE_CMN_OCTERM_RDREG_SIZE 32

/* FIELD: TERMCAL_ERROR_NT */
/* DESCRIPTION: */
/*   termination calibration feedback error value */
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ERROR_NT_OFFSET 0x00000000
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ERROR_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ERROR_NT_MASK 0x00000001
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ERROR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ERROR_NT_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   termination calibration feedback error value */
#define AFE_CMN_OCTERM_RDREG_ACK_OFFSET 0x00000001
#define AFE_CMN_OCTERM_RDREG_ACK_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_RDREG_ACK_MASK 0x00000002
#define AFE_CMN_OCTERM_RDREG_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_OCTERM_RDREG_ACK_RESET_VALUE 0x00000000

/* FIELD: TERMCAL */
/* DESCRIPTION: */
/*   termination calibration feedback error value */
#define AFE_CMN_OCTERM_RDREG_TERMCAL_OFFSET 0x00000010
#define AFE_CMN_OCTERM_RDREG_TERMCAL_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_RDREG_TERMCAL_MASK 0x000F0000
#define AFE_CMN_OCTERM_RDREG_TERMCAL_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_OCTERM_RDREG_TERMCAL_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_REG1 */
/* DESCRIPTION: */
/*   Overrides for the on-chip termination calibration controls. This is controlled by the termination calibration state machine in normal operation. */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_REG1_ADDR 0x00000058
#define AFE_CMN_OCTERM_REG1_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   enable bypass termination calibration value */
#define AFE_CMN_OCTERM_REG1_BYPASS_ENA_A_OFFSET 0x00000000
#define AFE_CMN_OCTERM_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG1_BYPASS_ENA_A_MASK 0x00000001
#define AFE_CMN_OCTERM_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000001

/* FIELD: TERMCAL_CAP_NT */
/* DESCRIPTION: */
/*   Termination calibration capacitor bank adjust */
/*   111111 - Min */
/*   000000 - Max */
#define AFE_CMN_OCTERM_REG1_TERMCAL_CAP_NT_OFFSET 0x00000001
#define AFE_CMN_OCTERM_REG1_TERMCAL_CAP_NT_BITWIDTH 0x00000006
#define AFE_CMN_OCTERM_REG1_TERMCAL_CAP_NT_MASK 0x0000007E
#define AFE_CMN_OCTERM_REG1_TERMCAL_CAP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG1_TERMCAL_CAP_NT_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_CHOP_NT */
/* DESCRIPTION: */
/*   Chopping signal to allow calibration with both comparator polarities. */
/*   1 - Standard Polarity */
/*   0 - Inverted Polarity */
#define AFE_CMN_OCTERM_REG1_TERMCAL_CHOP_NT_OFFSET 0x00000007
#define AFE_CMN_OCTERM_REG1_TERMCAL_CHOP_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG1_TERMCAL_CHOP_NT_MASK 0x00000080
#define AFE_CMN_OCTERM_REG1_TERMCAL_CHOP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG1_TERMCAL_CHOP_NT_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_NT */
/* DESCRIPTION: */
/*   Termination calibration code */
#define AFE_CMN_OCTERM_REG1_TERMCAL_NT_OFFSET 0x00000010
#define AFE_CMN_OCTERM_REG1_TERMCAL_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG1_TERMCAL_NT_MASK 0x000F0000
#define AFE_CMN_OCTERM_REG1_TERMCAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG1_TERMCAL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the termination calibration FSM */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_REG2_ADDR 0x0000005C
#define AFE_CMN_OCTERM_REG2_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define AFE_CMN_OCTERM_REG2_REQ_A_OFFSET 0x00000000
#define AFE_CMN_OCTERM_REG2_REQ_A_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_REQ_A_MASK 0x00000001
#define AFE_CMN_OCTERM_REG2_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define AFE_CMN_OCTERM_REG2_LOAD_ONLY_NT_OFFSET 0x00000001
#define AFE_CMN_OCTERM_REG2_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_LOAD_ONLY_NT_MASK 0x00000002
#define AFE_CMN_OCTERM_REG2_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: CHOP_EN_NT */
/* DESCRIPTION: */
/*   Chop enable. 0 - Chopping not enabled. 1 - Chopping enabled. FSM will run twice, asserting chop signal second time, and output the average between the two runs */
#define AFE_CMN_OCTERM_REG2_CHOP_EN_NT_OFFSET 0x00000002
#define AFE_CMN_OCTERM_REG2_CHOP_EN_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_CHOP_EN_NT_MASK 0x00000004
#define AFE_CMN_OCTERM_REG2_CHOP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_CHOP_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define AFE_CMN_OCTERM_REG2_DERIV_TARGET_NT_OFFSET 0x00000003
#define AFE_CMN_OCTERM_REG2_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_OCTERM_REG2_DERIV_TARGET_NT_MASK 0x000000F8
#define AFE_CMN_OCTERM_REG2_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define AFE_CMN_OCTERM_REG2_DERIV_GAIN_NT_OFFSET 0x00000008
#define AFE_CMN_OCTERM_REG2_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG2_DERIV_GAIN_NT_MASK 0x00000F00
#define AFE_CMN_OCTERM_REG2_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define AFE_CMN_OCTERM_REG2_NOCHANGE_DECAY_ENA_NT_OFFSET 0x0000000C
#define AFE_CMN_OCTERM_REG2_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_NOCHANGE_DECAY_ENA_NT_MASK 0x00001000
#define AFE_CMN_OCTERM_REG2_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define AFE_CMN_OCTERM_REG2_OUT_SIGN_MAG_NT_OFFSET 0x0000000D
#define AFE_CMN_OCTERM_REG2_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_OUT_SIGN_MAG_NT_MASK 0x00002000
#define AFE_CMN_OCTERM_REG2_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define AFE_CMN_OCTERM_REG2_OUT_SIGNED_NT_OFFSET 0x0000000E
#define AFE_CMN_OCTERM_REG2_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_OUT_SIGNED_NT_MASK 0x00004000
#define AFE_CMN_OCTERM_REG2_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity */
#define AFE_CMN_OCTERM_REG2_POLARITY_NT_OFFSET 0x0000000F
#define AFE_CMN_OCTERM_REG2_POLARITY_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG2_POLARITY_NT_MASK 0x00008000
#define AFE_CMN_OCTERM_REG2_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_POLARITY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define AFE_CMN_OCTERM_REG2_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x00000010
#define AFE_CMN_OCTERM_REG2_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_OCTERM_REG2_DERIV_NUM_CROSS_TARGET_NT_MASK 0x001F0000
#define AFE_CMN_OCTERM_REG2_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG2_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the termination calibration FSM */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_REG3_ADDR 0x00000060
#define AFE_CMN_OCTERM_REG3_SIZE 32

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. Multiplied/divided by mu1 */
#define AFE_CMN_OCTERM_REG3_INIT_STEP_NT_OFFSET 0x00000000
#define AFE_CMN_OCTERM_REG3_INIT_STEP_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG3_INIT_STEP_NT_MASK 0x0000000F
#define AFE_CMN_OCTERM_REG3_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG3_INIT_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define AFE_CMN_OCTERM_REG3_MIN_NT_OFFSET 0x00000004
#define AFE_CMN_OCTERM_REG3_MIN_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG3_MIN_NT_MASK 0x000000F0
#define AFE_CMN_OCTERM_REG3_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG3_MIN_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define AFE_CMN_OCTERM_REG3_MAX_NT_OFFSET 0x00000008
#define AFE_CMN_OCTERM_REG3_MAX_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG3_MAX_NT_MASK 0x00000F00
#define AFE_CMN_OCTERM_REG3_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG3_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define AFE_CMN_OCTERM_REG3_STOP_HI_NT_OFFSET 0x0000000C
#define AFE_CMN_OCTERM_REG3_STOP_HI_NT_BITWIDTH 0x00000002
#define AFE_CMN_OCTERM_REG3_STOP_HI_NT_MASK 0x00003000
#define AFE_CMN_OCTERM_REG3_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG3_STOP_HI_NT_RESET_VALUE 0x00000000

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define AFE_CMN_OCTERM_REG3_START_VALUE_NT_OFFSET 0x00000010
#define AFE_CMN_OCTERM_REG3_START_VALUE_NT_BITWIDTH 0x00000004
#define AFE_CMN_OCTERM_REG3_START_VALUE_NT_MASK 0x000F0000
#define AFE_CMN_OCTERM_REG3_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG3_START_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the termination calibration FSM */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_REG4_ADDR 0x00000064
#define AFE_CMN_OCTERM_REG4_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define AFE_CMN_OCTERM_REG4_MAX_ITER_NT_OFFSET 0x00000000
#define AFE_CMN_OCTERM_REG4_MAX_ITER_NT_BITWIDTH 0x00000010
#define AFE_CMN_OCTERM_REG4_MAX_ITER_NT_MASK 0x0000FFFF
#define AFE_CMN_OCTERM_REG4_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG4_MAX_ITER_NT_RESET_VALUE 0x00000000

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define AFE_CMN_OCTERM_REG4_UPDATE_DELAY_NT_OFFSET 0x00000010
#define AFE_CMN_OCTERM_REG4_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define AFE_CMN_OCTERM_REG4_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define AFE_CMN_OCTERM_REG4_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG4_UPDATE_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_OCTERM_REG5 */
/* DESCRIPTION: */
/*   Configuration and observability for the termination calibration FSM */
/* ------------------------------------- */
#define AFE_CMN_OCTERM_REG5_ADDR 0x00000068
#define AFE_CMN_OCTERM_REG5_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define AFE_CMN_OCTERM_REG5_LMS_MU1_NT_OFFSET 0x00000000
#define AFE_CMN_OCTERM_REG5_LMS_MU1_NT_BITWIDTH 0x00000005
#define AFE_CMN_OCTERM_REG5_LMS_MU1_NT_MASK 0x0000001F
#define AFE_CMN_OCTERM_REG5_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG5_LMS_MU1_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define AFE_CMN_OCTERM_REG5_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define AFE_CMN_OCTERM_REG5_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG5_LMS_MU1_DIR_NT_MASK 0x00000020
#define AFE_CMN_OCTERM_REG5_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG5_LMS_MU1_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define AFE_CMN_OCTERM_REG5_LMS_MU2_NT_OFFSET 0x00000008
#define AFE_CMN_OCTERM_REG5_LMS_MU2_NT_BITWIDTH 0x00000005
#define AFE_CMN_OCTERM_REG5_LMS_MU2_NT_MASK 0x00001F00
#define AFE_CMN_OCTERM_REG5_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG5_LMS_MU2_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define AFE_CMN_OCTERM_REG5_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define AFE_CMN_OCTERM_REG5_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define AFE_CMN_OCTERM_REG5_LMS_MU2_DIR_NT_MASK 0x00002000
#define AFE_CMN_OCTERM_REG5_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG5_LMS_MU2_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consequtive direction changes that need to occur for lock to occur */
#define AFE_CMN_OCTERM_REG5_BOUNCE_TARGET_NT_OFFSET 0x00000010
#define AFE_CMN_OCTERM_REG5_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_OCTERM_REG5_BOUNCE_TARGET_NT_MASK 0x001F0000
#define AFE_CMN_OCTERM_REG5_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_OCTERM_REG5_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_POWER_CNTRL */
/* DESCRIPTION: */
/*   Overrides for common regulator controls. These are controlled via the power control state machine in normal operation. */
/* ------------------------------------- */
#define AFE_CMN_POWER_CNTRL_ADDR 0x0000006C
#define AFE_CMN_POWER_CNTRL_SIZE 32

/* FIELD: VREG_BLEED_HSREF_ENA_NT */
/* DESCRIPTION: */
/*   1 - CMN Hsref Regulator bleed current is on */
/*   0 - RX Hsref Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_HSREF_ENA_NT_OFFSET 0x00000000
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_HSREF_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_HSREF_ENA_NT_MASK 0x00000001
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_HSREF_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_HSREF_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: VREG_BLEED_LSREF_ENA_NT */
/* DESCRIPTION: */
/*   1 - CMN Lsref Regulator bleed current is on */
/*   0 - RX Hsref Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_LSREF_ENA_NT_OFFSET 0x00000001
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_LSREF_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_LSREF_ENA_NT_MASK 0x00000002
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_LSREF_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_POWER_CNTRL_VREG_BLEED_LSREF_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_TERMCAL */
/* DESCRIPTION: */
/*   AFE register with fields related to configuration of the termcal div control. */
/* ------------------------------------- */
#define AFE_CMN_TERMCAL_ADDR 0x00000070
#define AFE_CMN_TERMCAL_SIZE 32

/* FIELD: DIV_NT */
/* DESCRIPTION: */
/*   Reference clock divider for the termination calibration block. */
/*   000 - div1 */
/*   001 - div2 */
/*   010 - div4 */
/*   011 - div8 */
/*   100 - div16 */
/*   101 - div32 */
/*   110, 111 - unused.  */
#define AFE_CMN_TERMCAL_DIV_NT_OFFSET 0x00000000
#define AFE_CMN_TERMCAL_DIV_NT_BITWIDTH 0x00000003
#define AFE_CMN_TERMCAL_DIV_NT_MASK 0x00000007
#define AFE_CMN_TERMCAL_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_TERMCAL_DIV_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_RDREG1 */
/* DESCRIPTION: */
/*   Observability register for the lcpll frequency calibration. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_RDREG1_ADDR 0x00000074
#define AFE_CMN_VCO_ADAPT_RDREG1_SIZE 32

/* FIELD: FREQ_MEASURE_RESULT_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration result */
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_RESULT_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_RESULT_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_RESULT_NT_MASK 0x0000FFFF
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_RESULT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_RESULT_NT_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_ACK_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration acknowledge */
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_ACK_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_ACK_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_ACK_NT_MASK 0x00010000
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_ACK_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG1_FREQ_MEASURE_ACK_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_RDREG2 */
/* DESCRIPTION: */
/*   Observability register for the lcpll frequency calibration. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_RDREG2_ADDR 0x00000078
#define AFE_CMN_VCO_ADAPT_RDREG2_SIZE 32

/* FIELD: REF_COUNTER_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration reference clock counter */
#define AFE_CMN_VCO_ADAPT_RDREG2_REF_COUNTER_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_RDREG2_REF_COUNTER_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_RDREG2_REF_COUNTER_NT_MASK 0x0000FFFF
#define AFE_CMN_VCO_ADAPT_RDREG2_REF_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG2_REF_COUNTER_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_COUNTER_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration vco clock counter */
#define AFE_CMN_VCO_ADAPT_RDREG2_VCO_COUNTER_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_RDREG2_VCO_COUNTER_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_RDREG2_VCO_COUNTER_NT_MASK 0xFFFF0000
#define AFE_CMN_VCO_ADAPT_RDREG2_VCO_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG2_VCO_COUNTER_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_RDREG3 */
/* DESCRIPTION: */
/*   Observability register for the lcpll frequency calibration. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_RDREG3_ADDR 0x0000007C
#define AFE_CMN_VCO_ADAPT_RDREG3_SIZE 32

/* FIELD: CLKGEN_OSC_CAL */
/* DESCRIPTION: */
/*   lcpll frequency calibration vco clock counter */
#define AFE_CMN_VCO_ADAPT_RDREG3_CLKGEN_OSC_CAL_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_RDREG3_CLKGEN_OSC_CAL_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_RDREG3_CLKGEN_OSC_CAL_MASK 0x0000007F
#define AFE_CMN_VCO_ADAPT_RDREG3_CLKGEN_OSC_CAL_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG3_CLKGEN_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   lcpll frequency calibration vco clock counter */
#define AFE_CMN_VCO_ADAPT_RDREG3_ACK_OFFSET 0x00000007
#define AFE_CMN_VCO_ADAPT_RDREG3_ACK_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_RDREG3_ACK_MASK 0x00000080
#define AFE_CMN_VCO_ADAPT_RDREG3_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_CMN_VCO_ADAPT_RDREG3_ACK_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG1_ADDR 0x00000080
#define AFE_CMN_VCO_ADAPT_REG1_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration target */
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_TARGET_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_TARGET_NT_MASK 0x0000FFFF
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_TARGET_NT_RESET_VALUE 0x00003300

/* FIELD: FREQ_MEASURE_REQ_A */
/* DESCRIPTION: */
/*   lcpll frequency calibration request */
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_MEASURE_REQ_A_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_MEASURE_REQ_A_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_MEASURE_REQ_A_MASK 0x00010000
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_MEASURE_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG1_FREQ_MEASURE_REQ_A_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   lcpll frequency calibration timing window */
#define AFE_CMN_VCO_ADAPT_REG1_TIMING_WINDOW_NT_OFFSET 0x00000011
#define AFE_CMN_VCO_ADAPT_REG1_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define AFE_CMN_VCO_ADAPT_REG1_TIMING_WINDOW_NT_MASK 0x001E0000
#define AFE_CMN_VCO_ADAPT_REG1_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG1_TIMING_WINDOW_NT_RESET_VALUE 0x00000009

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG2_ADDR 0x00000084
#define AFE_CMN_VCO_ADAPT_REG2_SIZE 32

/* FIELD: CLKGEN_OSC_CAL_NT */
/* DESCRIPTION: */
/*   6bit CMN clockgen center frequency calibration code */
/*   111111 - Max center frequency */
/*   000000 - Min center frequency */
#define AFE_CMN_VCO_ADAPT_REG2_CLKGEN_OSC_CAL_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG2_CLKGEN_OSC_CAL_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG2_CLKGEN_OSC_CAL_NT_MASK 0x0000007F
#define AFE_CMN_VCO_ADAPT_REG2_CLKGEN_OSC_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG2_CLKGEN_OSC_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   enable bypass oscillator calibration value */
#define AFE_CMN_VCO_ADAPT_REG2_BYPASS_ENA_A_OFFSET 0x00000007
#define AFE_CMN_VCO_ADAPT_REG2_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG2_BYPASS_ENA_A_MASK 0x00000080
#define AFE_CMN_VCO_ADAPT_REG2_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG2_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG3_ADDR 0x00000088
#define AFE_CMN_VCO_ADAPT_REG3_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define AFE_CMN_VCO_ADAPT_REG3_REQ_A_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG3_REQ_A_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_REQ_A_MASK 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define AFE_CMN_VCO_ADAPT_REG3_LOAD_ONLY_NT_OFFSET 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_LOAD_ONLY_NT_MASK 0x00000002
#define AFE_CMN_VCO_ADAPT_REG3_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: CHOP_EN_NT */
/* DESCRIPTION: */
/*   Chop enable. 0 - Chopping not enabled. 1 - Chopping enabled. FSM will run twice, asserting chop signal second time, and output the average between the two runs */
#define AFE_CMN_VCO_ADAPT_REG3_CHOP_EN_NT_OFFSET 0x00000002
#define AFE_CMN_VCO_ADAPT_REG3_CHOP_EN_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_CHOP_EN_NT_MASK 0x00000004
#define AFE_CMN_VCO_ADAPT_REG3_CHOP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_CHOP_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_TARGET_NT_OFFSET 0x00000003
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_TARGET_NT_MASK 0x000000F8
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_GAIN_NT_OFFSET 0x00000008
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_GAIN_NT_MASK 0x00000F00
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define AFE_CMN_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_OFFSET 0x0000000C
#define AFE_CMN_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_MASK 0x00001000
#define AFE_CMN_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_OFFSET 0x0000000D
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_MASK 0x00002000
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGNED_NT_OFFSET 0x0000000E
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGNED_NT_MASK 0x00004000
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity */
#define AFE_CMN_VCO_ADAPT_REG3_POLARITY_NT_OFFSET 0x0000000F
#define AFE_CMN_VCO_ADAPT_REG3_POLARITY_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG3_POLARITY_NT_MASK 0x00008000
#define AFE_CMN_VCO_ADAPT_REG3_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_POLARITY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_MASK 0x001F0000
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG4_ADDR 0x0000008C
#define AFE_CMN_VCO_ADAPT_REG4_SIZE 32

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. Multiplied/divided by mu1 */
#define AFE_CMN_VCO_ADAPT_REG4_START_VALUE_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG4_START_VALUE_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG4_START_VALUE_NT_MASK 0x0000007F
#define AFE_CMN_VCO_ADAPT_REG4_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG4_START_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define AFE_CMN_VCO_ADAPT_REG4_INIT_STEP_NT_OFFSET 0x00000008
#define AFE_CMN_VCO_ADAPT_REG4_INIT_STEP_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG4_INIT_STEP_NT_MASK 0x00007F00
#define AFE_CMN_VCO_ADAPT_REG4_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG4_INIT_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define AFE_CMN_VCO_ADAPT_REG4_MIN_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_REG4_MIN_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG4_MIN_NT_MASK 0x007F0000
#define AFE_CMN_VCO_ADAPT_REG4_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG4_MIN_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define AFE_CMN_VCO_ADAPT_REG4_MAX_NT_OFFSET 0x00000017
#define AFE_CMN_VCO_ADAPT_REG4_MAX_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG4_MAX_NT_MASK 0x3F800000
#define AFE_CMN_VCO_ADAPT_REG4_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG4_MAX_NT_RESET_VALUE 0x0000007F

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define AFE_CMN_VCO_ADAPT_REG4_STOP_HI_NT_OFFSET 0x0000001E
#define AFE_CMN_VCO_ADAPT_REG4_STOP_HI_NT_BITWIDTH 0x00000002
#define AFE_CMN_VCO_ADAPT_REG4_STOP_HI_NT_MASK 0xC0000000
#define AFE_CMN_VCO_ADAPT_REG4_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG4_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG5_ADDR 0x00000090
#define AFE_CMN_VCO_ADAPT_REG5_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define AFE_CMN_VCO_ADAPT_REG5_MAX_ITER_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG5_MAX_ITER_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_REG5_MAX_ITER_NT_MASK 0x0000FFFF
#define AFE_CMN_VCO_ADAPT_REG5_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG5_MAX_ITER_NT_RESET_VALUE 0x00000032

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define AFE_CMN_VCO_ADAPT_REG5_UPDATE_DELAY_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_REG5_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define AFE_CMN_VCO_ADAPT_REG5_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define AFE_CMN_VCO_ADAPT_REG5_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG5_UPDATE_DELAY_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: AFE_CMN_VCO_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Configuration and observability for the VCO. */
/* ------------------------------------- */
#define AFE_CMN_VCO_ADAPT_REG6_ADDR 0x00000094
#define AFE_CMN_VCO_ADAPT_REG6_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_NT_OFFSET 0x00000000
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_NT_BITWIDTH 0x00000005
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_NT_MASK 0x0000001F
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_NT_RESET_VALUE 0x00000006

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_MASK 0x00000020
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_NT_OFFSET 0x00000008
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_NT_BITWIDTH 0x00000005
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_NT_MASK 0x00001F00
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_NT_RESET_VALUE 0x00000003

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_MASK 0x00002000
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: STEP_NT */
/* DESCRIPTION: */
/*   Step size to used in fine mode. */
#define AFE_CMN_VCO_ADAPT_REG6_STEP_NT_OFFSET 0x00000010
#define AFE_CMN_VCO_ADAPT_REG6_STEP_NT_BITWIDTH 0x00000007
#define AFE_CMN_VCO_ADAPT_REG6_STEP_NT_MASK 0x007F0000
#define AFE_CMN_VCO_ADAPT_REG6_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consequtive direction changes that need to occur for lock to occur */
#define AFE_CMN_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_OFFSET 0x00000018
#define AFE_CMN_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define AFE_CMN_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_MASK 0x1F000000
#define AFE_CMN_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_CMN_VREF */
/* DESCRIPTION: */
/*   AFE override register with fields related to configuration of the hsref selection control. */
/* ------------------------------------- */
#define AFE_CMN_VREF_ADDR 0x00000098
#define AFE_CMN_VREF_SIZE 32

/* FIELD: LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Select whether regulator is slaved to vddl supply or bias */
/*   1 - Referenced to pa_vddl */
/*   0 - Referenced to the bandgap */
#define AFE_CMN_VREF_LSREF_SELECT_NT_OFFSET 0x00000000
#define AFE_CMN_VREF_LSREF_SELECT_NT_BITWIDTH 0x00000001
#define AFE_CMN_VREF_LSREF_SELECT_NT_MASK 0x00000001
#define AFE_CMN_VREF_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VREF_LSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: HSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Select whether regulator is slaved to vddl supply or bias */
/*   1 - Referenced to pa_vddl */
/*   0 - Referenced to the bandgap */
#define AFE_CMN_VREF_HSREF_SELECT_NT_OFFSET 0x00000001
#define AFE_CMN_VREF_HSREF_SELECT_NT_BITWIDTH 0x00000001
#define AFE_CMN_VREF_HSREF_SELECT_NT_MASK 0x00000002
#define AFE_CMN_VREF_HSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_CMN_VREF_HSREF_SELECT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CCG */
/* DESCRIPTION: */
/*   Clock gating for CMN CSRs */
/* ------------------------------------- */
#define CCG_ADDR 0x0000009C
#define CCG_SIZE 32

/* FIELD: PPM_LOCK_DETECT_ENA_A */
/* DESCRIPTION: */
/*   0 - Clock disabled 1 - Clock enabled */
#define CCG_PPM_LOCK_DETECT_ENA_A_OFFSET 0x00000000
#define CCG_PPM_LOCK_DETECT_ENA_A_BITWIDTH 0x00000001
#define CCG_PPM_LOCK_DETECT_ENA_A_MASK 0x00000001
#define CCG_PPM_LOCK_DETECT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CCG_PPM_LOCK_DETECT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: VCO_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   0 - Clock disabled 1 - Clock enabled */
#define CCG_VCO_ADAPT_ENA_A_OFFSET 0x00000001
#define CCG_VCO_ADAPT_ENA_A_BITWIDTH 0x00000001
#define CCG_VCO_ADAPT_ENA_A_MASK 0x00000002
#define CCG_VCO_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CCG_VCO_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: CSR_CLKGATE_ENA */
/* DESCRIPTION: */
/*   0 - Clock disabled 1 - Clock enabled */
#define CCG_CSR_CLKGATE_ENA_OFFSET 0x00000002
#define CCG_CSR_CLKGATE_ENA_BITWIDTH 0x00000001
#define CCG_CSR_CLKGATE_ENA_MASK 0x00000004
#define CCG_CSR_CLKGATE_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define CCG_CSR_CLKGATE_ENA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN */
/* DESCRIPTION: */
/*   Reserved */
/* ------------------------------------- */
#define CMN_ADDR 0x000000A0
#define CMN_SIZE 32

/* FIELD: SPARE_NT */
/* DESCRIPTION: */
/*   Spare registers */
#define CMN_SPARE_NT_OFFSET 0x00000000
#define CMN_SPARE_NT_BITWIDTH 0x00000003
#define CMN_SPARE_NT_MASK 0x00000007
#define CMN_SPARE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_SPARE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_ATEST */
/* DESCRIPTION: */
/*   Configuration of the analog test mux address */
/* ------------------------------------- */
#define CMN_ATEST_ADDR 0x000000A4
#define CMN_ATEST_SIZE 32

/* FIELD: ADDR_BIN_NT */
/* DESCRIPTION: */
/*   Address space for the cmn atest.  */
/*   00000 - High-Z */
/*   00001 to 11111 valid atest addresses */
#define CMN_ATEST_ADDR_BIN_NT_OFFSET 0x00000000
#define CMN_ATEST_ADDR_BIN_NT_BITWIDTH 0x00000005
#define CMN_ATEST_ADDR_BIN_NT_MASK 0x0000001F
#define CMN_ATEST_ADDR_BIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_ATEST_ADDR_BIN_NT_RESET_VALUE 0x00000000

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe cmn atest circuitry bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -25% */
#define CMN_ATEST_BIAS_ADJ_NT_OFFSET 0x00000005
#define CMN_ATEST_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define CMN_ATEST_BIAS_ADJ_NT_MASK 0x00000060
#define CMN_ATEST_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_ATEST_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: CMN_BIAS */
/* DESCRIPTION: */
/*   Configuration of bias related registers. */
/* ------------------------------------- */
#define CMN_BIAS_ADDR 0x000000A8
#define CMN_BIAS_SIZE 32

/* FIELD: ADJ_NT */
/* DESCRIPTION: */
/*   bandgap bias global bias current adjust (affects all blocks) */
/*   1111 - +20% */
/*   0111 - Nominal */
/*   0000 - -17.5% */
#define CMN_BIAS_ADJ_NT_OFFSET 0x00000000
#define CMN_BIAS_ADJ_NT_BITWIDTH 0x00000004
#define CMN_BIAS_ADJ_NT_MASK 0x0000000F
#define CMN_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_BIAS_ADJ_NT_RESET_VALUE 0x00000007

/* FIELD: STARTUP_FORCE_NT */
/* DESCRIPTION: */
/*   1 - Forces the bandgap startup circuitry to power up */
/*   0 - Normal operation */
#define CMN_BIAS_STARTUP_FORCE_NT_OFFSET 0x00000004
#define CMN_BIAS_STARTUP_FORCE_NT_BITWIDTH 0x00000001
#define CMN_BIAS_STARTUP_FORCE_NT_MASK 0x00000010
#define CMN_BIAS_STARTUP_FORCE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_BIAS_STARTUP_FORCE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_CALSTORE */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define CMN_CALSTORE_ADDR 0x000000AC
#define CMN_CALSTORE_SIZE 32

/* FIELD: CLKGEN_OSC_CAL_NT */
/* DESCRIPTION: */
/*   Stored calibrated oscillator value (coarse) */
#define CMN_CALSTORE_CLKGEN_OSC_CAL_NT_OFFSET 0x00000000
#define CMN_CALSTORE_CLKGEN_OSC_CAL_NT_BITWIDTH 0x00000007
#define CMN_CALSTORE_CLKGEN_OSC_CAL_NT_MASK 0x0000007F
#define CMN_CALSTORE_CLKGEN_OSC_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CALSTORE_CLKGEN_OSC_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_NT */
/* DESCRIPTION: */
/*   Stored calibrated termcal value */
#define CMN_CALSTORE_TERMCAL_NT_OFFSET 0x00000007
#define CMN_CALSTORE_TERMCAL_NT_BITWIDTH 0x00000004
#define CMN_CALSTORE_TERMCAL_NT_MASK 0x00000780
#define CMN_CALSTORE_TERMCAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CALSTORE_TERMCAL_NT_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Stored calibrated values valid indicator */
#define CMN_CALSTORE_VALID_OFFSET 0x0000000B
#define CMN_CALSTORE_VALID_BITWIDTH 0x00000001
#define CMN_CALSTORE_VALID_MASK 0x00000800
#define CMN_CALSTORE_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CALSTORE_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   Stored calibrated oscillator value (fine) */
#define CMN_CALSTORE_OSC_CAL_FINE_OFFSET 0x00000016
#define CMN_CALSTORE_OSC_CAL_FINE_BITWIDTH 0x0000000A
#define CMN_CALSTORE_OSC_CAL_FINE_MASK 0xFFC00000
#define CMN_CALSTORE_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CALSTORE_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_CLKGEN */
/* DESCRIPTION: */
/*   Configuration registers for the common synthesizer and post dividers. */
/* ------------------------------------- */
#define CMN_CLKGEN_ADDR 0x000000B0
#define CMN_CLKGEN_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe cmn clkgen circuitry bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -25% */
#define CMN_CLKGEN_BIAS_ADJ_NT_OFFSET 0x00000000
#define CMN_CLKGEN_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define CMN_CLKGEN_BIAS_ADJ_NT_MASK 0x00000003
#define CMN_CLKGEN_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: POSTDIV_NT */
/* DESCRIPTION: */
/*   CMN clock generator post divider ratio control */
#define CMN_CLKGEN_POSTDIV_NT_OFFSET 0x00000002
#define CMN_CLKGEN_POSTDIV_NT_BITWIDTH 0x00000004
#define CMN_CLKGEN_POSTDIV_NT_MASK 0x0000003C
#define CMN_CLKGEN_POSTDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_POSTDIV_NT_RESET_VALUE 0x00000000

/* FIELD: REFDIV_NT */
/* DESCRIPTION: */
/*   CMN clock generator reference divider ratio control */
/*   101 to 111 unused */
/*   101 - div32 */
/*   100 - div16 */
/*   011 - div8 */
/*   010 - div4 */
/*   001 - div2 */
/*   000 - div1 */
#define CMN_CLKGEN_REFDIV_NT_OFFSET 0x00000008
#define CMN_CLKGEN_REFDIV_NT_BITWIDTH 0x00000003
#define CMN_CLKGEN_REFDIV_NT_MASK 0x00000700
#define CMN_CLKGEN_REFDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_REFDIV_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_NT */
/* DESCRIPTION: */
/*   Bypass path from reference clock bumps to HSREF clock.  */
/*   1 - Bypass enabled */
/*   0 - Normal operation */
#define CMN_CLKGEN_BYPASS_NT_OFFSET 0x0000000B
#define CMN_CLKGEN_BYPASS_NT_BITWIDTH 0x00000001
#define CMN_CLKGEN_BYPASS_NT_MASK 0x00000800
#define CMN_CLKGEN_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: OCC1DIV_NT */
/* DESCRIPTION: */
/*   CMN clockgen divider that divides down HSREF for OCC clock1 */
/*   11 - Reserved */
/*   10 - Reserved */
/*   01 - HSREF/4 */
/*   00 - HSREF/2  */
#define CMN_CLKGEN_OCC1DIV_NT_OFFSET 0x0000000C
#define CMN_CLKGEN_OCC1DIV_NT_BITWIDTH 0x00000002
#define CMN_CLKGEN_OCC1DIV_NT_MASK 0x00003000
#define CMN_CLKGEN_OCC1DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_OCC1DIV_NT_RESET_VALUE 0x00000000

/* FIELD: OCC2DIV_NT */
/* DESCRIPTION: */
/*   CMN clockgen divider that divides down HSREF for OCC clock1 */
/*   11 - Reserved */
/*   10 - Reserved */
/*   01 - HSREF/4 */
/*   00 - HSREF/2  */
#define CMN_CLKGEN_OCC2DIV_NT_OFFSET 0x0000000E
#define CMN_CLKGEN_OCC2DIV_NT_BITWIDTH 0x00000002
#define CMN_CLKGEN_OCC2DIV_NT_MASK 0x0000C000
#define CMN_CLKGEN_OCC2DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_OCC2DIV_NT_RESET_VALUE 0x00000001

/* FIELD: CLKCDIV_A */
/* DESCRIPTION: */
/*   ClockC output divider setting (clock is output to DBE) */
/*   7p3 representation of the fractional division of bit clock. Ratios between 12 and 127.875 supported. Is latched into the local clock domain on rising edge of associated ready signal. Examples: */
/*   1111111.111 - Div 127.875 */
/*   0001000.100 - Div 16.5 */
/*   0001000.000 - Div 16 */
#define CMN_CLKGEN_CLKCDIV_A_OFFSET 0x00000010
#define CMN_CLKGEN_CLKCDIV_A_BITWIDTH 0x0000000A
#define CMN_CLKGEN_CLKCDIV_A_MASK 0x03FF0000
#define CMN_CLKGEN_CLKCDIV_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_CLKCDIV_A_RESET_VALUE 0x00000033

/* FIELD: CLKCDIV_READY_A */
/* DESCRIPTION: */
/*   Rising edge of this ready signal is used to latch the associated bus onto the local AFE clock domain.   */
#define CMN_CLKGEN_CLKCDIV_READY_A_OFFSET 0x0000001A
#define CMN_CLKGEN_CLKCDIV_READY_A_BITWIDTH 0x00000001
#define CMN_CLKGEN_CLKCDIV_READY_A_MASK 0x04000000
#define CMN_CLKGEN_CLKCDIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_CLKCDIV_READY_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: CMN_CLKGEN_IDCO */
/* DESCRIPTION: */
/*   Configuration registers for clkgen_idco */
/* ------------------------------------- */
#define CMN_CLKGEN_IDCO_ADDR 0x000000B4
#define CMN_CLKGEN_IDCO_SIZE 32

/* FIELD: TARGET_NT */
/* DESCRIPTION: */
/*   Sets target threshold level for the idco comparator */
/*   1111 - Max Threshold */
/*   0000 - Min Threshold */
/*   1000  Default */
#define CMN_CLKGEN_IDCO_TARGET_NT_OFFSET 0x00000000
#define CMN_CLKGEN_IDCO_TARGET_NT_BITWIDTH 0x00000004
#define CMN_CLKGEN_IDCO_TARGET_NT_MASK 0x0000000F
#define CMN_CLKGEN_IDCO_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_IDCO_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: VAL_A */
/* DESCRIPTION: */
/*   Control of the LC DCO bias current DAC */
/*   0000 - min current */
/*   1111 - max current  */
#define CMN_CLKGEN_IDCO_VAL_A_OFFSET 0x00000004
#define CMN_CLKGEN_IDCO_VAL_A_BITWIDTH 0x00000004
#define CMN_CLKGEN_IDCO_VAL_A_MASK 0x000000F0
#define CMN_CLKGEN_IDCO_VAL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_IDCO_VAL_A_RESET_VALUE 0x0000000C

/* FIELD: READY_A */
/* DESCRIPTION: */
/*   ireg_afe_cmn_clkgen_idco_nt[3:0] codes are updated on positive edge of this signal and must be stable while it is high */
#define CMN_CLKGEN_IDCO_READY_A_OFFSET 0x00000008
#define CMN_CLKGEN_IDCO_READY_A_BITWIDTH 0x00000001
#define CMN_CLKGEN_IDCO_READY_A_MASK 0x00000100
#define CMN_CLKGEN_IDCO_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_IDCO_READY_A_RESET_VALUE 0x00000000

/* FIELD: SAMPLE_A */
/* DESCRIPTION: */
/*   Rising edge of this signal triggers the comparator that produces odat_afe_cmn_clkgen_idco_error_a. */
/*   Measurement filter requires 10ns to settle after IDCO DAC update. */
/*   Error signal is valid 20ns after rising edge.  */
/*   Comparator must be held in (0) arming state for at least 20ns prior to sampling.  */
/*   1 - Previous comparator result is held odat_afe_cmn_clkgen_idco_error_a is valid.  */
/*   0 - Comparator is arming in preparation for next sampling.  */
#define CMN_CLKGEN_IDCO_SAMPLE_A_OFFSET 0x00000009
#define CMN_CLKGEN_IDCO_SAMPLE_A_BITWIDTH 0x00000001
#define CMN_CLKGEN_IDCO_SAMPLE_A_MASK 0x00000200
#define CMN_CLKGEN_IDCO_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_CLKGEN_IDCO_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_CLKGEN_IDCO_RDREG */
/* DESCRIPTION: */
/*   Observability registers for clkgen_idco */
/* ------------------------------------- */
#define CMN_CLKGEN_IDCO_RDREG_ADDR 0x000000B8
#define CMN_CLKGEN_IDCO_RDREG_SIZE 32

/* FIELD: ERROR_A */
/* DESCRIPTION: */
/*   Idco calibration error output */
#define CMN_CLKGEN_IDCO_RDREG_ERROR_A_OFFSET 0x00000000
#define CMN_CLKGEN_IDCO_RDREG_ERROR_A_BITWIDTH 0x00000001
#define CMN_CLKGEN_IDCO_RDREG_ERROR_A_MASK 0x00000001
#define CMN_CLKGEN_IDCO_RDREG_ERROR_A_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_CLKGEN_IDCO_RDREG_ERROR_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_FBCLK */
/* DESCRIPTION: */
/*   Configuration of high-speed and low-speed reference clock selection and muxing. */
/* ------------------------------------- */
#define CMN_FBCLK_ADDR 0x000000BC
#define CMN_FBCLK_SIZE 32

/* FIELD: FBDIV_NT */
/* DESCRIPTION: */
/*   CMN clock generator feedback divider ratio control */
#define CMN_FBCLK_FBDIV_NT_OFFSET 0x00000000
#define CMN_FBCLK_FBDIV_NT_BITWIDTH 0x0000001B
#define CMN_FBCLK_FBDIV_NT_MASK 0x07FFFFFF
#define CMN_FBCLK_FBDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_FBCLK_FBDIV_NT_RESET_VALUE 0x02300000

/* ------------------------------------- */
/* REG: CMN_OVRD */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define CMN_OVRD_ADDR 0x000000C0
#define CMN_OVRD_SIZE 32

/* FIELD: ICTL_PCLK_STATE_RATE_A */
/* DESCRIPTION: */
/*   Register override of ictl_pclk_state_rate_a */
#define CMN_OVRD_ICTL_PCLK_STATE_RATE_A_OFFSET 0x00000000
#define CMN_OVRD_ICTL_PCLK_STATE_RATE_A_BITWIDTH 0x00000009
#define CMN_OVRD_ICTL_PCLK_STATE_RATE_A_MASK 0x000001FF
#define CMN_OVRD_ICTL_PCLK_STATE_RATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_PCLK_STATE_RATE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCLK_STATE_POWER_A */
/* DESCRIPTION: */
/*   Register override of ictl_pclk_state_power_a */
#define CMN_OVRD_ICTL_PCLK_STATE_POWER_A_OFFSET 0x00000009
#define CMN_OVRD_ICTL_PCLK_STATE_POWER_A_BITWIDTH 0x00000001
#define CMN_OVRD_ICTL_PCLK_STATE_POWER_A_MASK 0x00000200
#define CMN_OVRD_ICTL_PCLK_STATE_POWER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_PCLK_STATE_POWER_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_LS_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_ref_ls_ena_a */
#define CMN_OVRD_ICTL_REF_LS_ENA_A_OFFSET 0x0000000A
#define CMN_OVRD_ICTL_REF_LS_ENA_A_BITWIDTH 0x00000001
#define CMN_OVRD_ICTL_REF_LS_ENA_A_MASK 0x00000400
#define CMN_OVRD_ICTL_REF_LS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_REF_LS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_BYPASS_ENA_CMN_A */
/* DESCRIPTION: */
/*   Enable for SERDES CMN bypass mode.  */
#define CMN_OVRD_ICTL_BYPASS_ENA_CMN_A_OFFSET 0x0000000B
#define CMN_OVRD_ICTL_BYPASS_ENA_CMN_A_BITWIDTH 0x00000001
#define CMN_OVRD_ICTL_BYPASS_ENA_CMN_A_MASK 0x00000800
#define CMN_OVRD_ICTL_BYPASS_ENA_CMN_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_BYPASS_ENA_CMN_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_IDDQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_iddq_a */
#define CMN_OVRD_ICTL_IDDQ_A_OFFSET 0x0000000C
#define CMN_OVRD_ICTL_IDDQ_A_BITWIDTH 0x00000001
#define CMN_OVRD_ICTL_IDDQ_A_MASK 0x00001000
#define CMN_OVRD_ICTL_IDDQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_IDDQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_L2R0_LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the left to right low-speed reference clock buffer number 0. */
/*   11 - Unused */
/*   10 - Transmit local lsref clock on left to right cml.  */
/*   01 - Buffer left to right cml clock */
/*   00 - Power down left to right lsref buffer.  */
#define CMN_OVRD_ICTL_L2R0_LSREF_SELECT_NT_OFFSET 0x0000000D
#define CMN_OVRD_ICTL_L2R0_LSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_OVRD_ICTL_L2R0_LSREF_SELECT_NT_MASK 0x00006000
#define CMN_OVRD_ICTL_L2R0_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_L2R0_LSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_L2R1_LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the left to right low-speed reference clock buffer number 1. */
/*   11 - Unused */
/*   10 - Transmit local lsref clock on left to right cml.  */
/*   01 - Buffer left to right cml clock */
/*   00 - Power down left to right lsref buffer.  */
#define CMN_OVRD_ICTL_L2R1_LSREF_SELECT_NT_OFFSET 0x0000000F
#define CMN_OVRD_ICTL_L2R1_LSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_OVRD_ICTL_L2R1_LSREF_SELECT_NT_MASK 0x00018000
#define CMN_OVRD_ICTL_L2R1_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_L2R1_LSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_R2L0_LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the right to left low-speed reference clock buffer number 0. */
/*   11 - Transmit rx_ref clock on left to right cml */
/*   10 - Transmit local lsref clock on right to left cml.  */
/*   01 - Buffer right to left cml clock */
/*   00 - Power down right to left lsref buffer.  */
#define CMN_OVRD_ICTL_R2L0_LSREF_SELECT_NT_OFFSET 0x00000011
#define CMN_OVRD_ICTL_R2L0_LSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_OVRD_ICTL_R2L0_LSREF_SELECT_NT_MASK 0x00060000
#define CMN_OVRD_ICTL_R2L0_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_R2L0_LSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_R2L1_LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the right to left low-speed reference clock buffer number 1. */
/*   11 - Transmit rx_ref clock on right to left cml */
/*   10 - Transmit local lsref clock on right to left cml.  */
/*   01 - Buffer right to left cml clock */
/*   00 - Power down right to left lsref buffer.  */
#define CMN_OVRD_ICTL_R2L1_LSREF_SELECT_NT_OFFSET 0x00000013
#define CMN_OVRD_ICTL_R2L1_LSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_OVRD_ICTL_R2L1_LSREF_SELECT_NT_MASK 0x00180000
#define CMN_OVRD_ICTL_R2L1_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_R2L1_LSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_LSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the right to left low-speed reference clock buffer number 1. */
/*   111 - Unused */
/*   110 - Use ref_soc for the LC synth */
/*   101 - Use ref_looptime for the LC synth */
/*   100 - Use ref_rx for the LC synth */
/*   011 - Use r2l0 reference clock for LC synth */
/*   010 - use r2l1 reference clock for the LC synth */
/*   001 - use l2r0 reference clock for the LC synth */
/*   000 - use l2r1 reference clock for the LC synth */
#define CMN_OVRD_ICTL_LSREF_SELECT_NT_OFFSET 0x00000015
#define CMN_OVRD_ICTL_LSREF_SELECT_NT_BITWIDTH 0x00000003
#define CMN_OVRD_ICTL_LSREF_SELECT_NT_MASK 0x00E00000
#define CMN_OVRD_ICTL_LSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ICTL_LSREF_SELECT_NT_RESET_VALUE 0x00000004

/* FIELD: EXTRA_RESET_B */
/* DESCRIPTION: */
/*   Reserved */
#define CMN_OVRD_EXTRA_RESET_B_OFFSET 0x00000018
#define CMN_OVRD_EXTRA_RESET_B_BITWIDTH 0x00000001
#define CMN_OVRD_EXTRA_RESET_B_MASK 0x01000000
#define CMN_OVRD_EXTRA_RESET_B_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_EXTRA_RESET_B_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: CMN_OVRD_ENABLE */
/* DESCRIPTION: */
/*   Override enables for interface ports */
/* ------------------------------------- */
#define CMN_OVRD_ENABLE_ADDR 0x000000C4
#define CMN_OVRD_ENABLE_SIZE 32

/* FIELD: BYPASS_A */
/* DESCRIPTION: */
/*   Enable for cmn_ovrd[ictl_bypass_ena_cmn_a] */
#define CMN_OVRD_ENABLE_BYPASS_A_OFFSET 0x00000000
#define CMN_OVRD_ENABLE_BYPASS_A_BITWIDTH 0x00000001
#define CMN_OVRD_ENABLE_BYPASS_A_MASK 0x00000001
#define CMN_OVRD_ENABLE_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ENABLE_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: REF_A */
/* DESCRIPTION: */
/*   Enable for cmn_ovrd[ictl_ref_ls_ena_a] */
#define CMN_OVRD_ENABLE_REF_A_OFFSET 0x00000001
#define CMN_OVRD_ENABLE_REF_A_BITWIDTH 0x00000001
#define CMN_OVRD_ENABLE_REF_A_MASK 0x00000002
#define CMN_OVRD_ENABLE_REF_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ENABLE_REF_A_RESET_VALUE 0x00000000

/* FIELD: STATE_A */
/* DESCRIPTION: */
/*   Enable for cmn_ovrd[ictl_pclk_state_rate_a] and cmn_ovrd[ictl_pclk_state_power_a] */
#define CMN_OVRD_ENABLE_STATE_A_OFFSET 0x00000002
#define CMN_OVRD_ENABLE_STATE_A_BITWIDTH 0x00000001
#define CMN_OVRD_ENABLE_STATE_A_MASK 0x00000004
#define CMN_OVRD_ENABLE_STATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_OVRD_ENABLE_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_REFCLK */
/* DESCRIPTION: */
/*   Configuration of low speed reference clock selection for the common synthesizer. */
/* ------------------------------------- */
#define CMN_REFCLK_ADDR 0x000000C8
#define CMN_REFCLK_SIZE 32

/* FIELD: HSREFBUF_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe high speed reference circuitry bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -25% */
#define CMN_REFCLK_HSREFBUF_BIAS_ADJ_NT_OFFSET 0x00000000
#define CMN_REFCLK_HSREFBUF_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define CMN_REFCLK_HSREFBUF_BIAS_ADJ_NT_MASK 0x00000003
#define CMN_REFCLK_HSREFBUF_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_HSREFBUF_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: L2R_HSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the left to right high-speed reference clock buffer. */
/*   11 - Unused */
/*   10 - Transmit local hsref clock on left to right cml.  */
/*   01 - Buffer left to right cml clock */
/*   00 - Power down left to right hsref buffer.  */
#define CMN_REFCLK_L2R_HSREF_SELECT_NT_OFFSET 0x00000002
#define CMN_REFCLK_L2R_HSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_REFCLK_L2R_HSREF_SELECT_NT_MASK 0x0000000C
#define CMN_REFCLK_L2R_HSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_L2R_HSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: LSREFBUF_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe cmn lsrefbuf circuitry bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -25% */
#define CMN_REFCLK_LSREFBUF_BIAS_ADJ_NT_OFFSET 0x00000004
#define CMN_REFCLK_LSREFBUF_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define CMN_REFCLK_LSREFBUF_BIAS_ADJ_NT_MASK 0x00000030
#define CMN_REFCLK_LSREFBUF_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_LSREFBUF_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: LSREFBUF_TERM_MODE_NT */
/* DESCRIPTION: */
/*   Set the termination mode for the ba_ref_p and ba_ref_m reference clock input pads */
/*   11 - Unused */
/*   10 - 100 Ohms differential */
/*   01 - 50 Ohms per leg single ended to ground */
/*   00 - High impedance */
#define CMN_REFCLK_LSREFBUF_TERM_MODE_NT_OFFSET 0x00000006
#define CMN_REFCLK_LSREFBUF_TERM_MODE_NT_BITWIDTH 0x00000002
#define CMN_REFCLK_LSREFBUF_TERM_MODE_NT_MASK 0x000000C0
#define CMN_REFCLK_LSREFBUF_TERM_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_LSREFBUF_TERM_MODE_NT_RESET_VALUE 0x00000001

/* FIELD: R2L_HSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Selection of the right to left high-speed reference clock buffer. */
/*   11 - Unused */
/*   10 - Transmit local hsref clock on right to left cml.  */
/*   01 - Buffer right to left cml clock */
/*   00 - Power down right to left hsref buffer.  */
#define CMN_REFCLK_R2L_HSREF_SELECT_NT_OFFSET 0x00000008
#define CMN_REFCLK_R2L_HSREF_SELECT_NT_BITWIDTH 0x00000002
#define CMN_REFCLK_R2L_HSREF_SELECT_NT_MASK 0x00000300
#define CMN_REFCLK_R2L_HSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_R2L_HSREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: VREF_SELECT_NT */
/* DESCRIPTION: */
/*   Select whether to use bandgap or local supply reference. */
/*   1 - Local supply reference */
/*   0 - Bandgap */
#define CMN_REFCLK_VREF_SELECT_NT_OFFSET 0x0000000A
#define CMN_REFCLK_VREF_SELECT_NT_BITWIDTH 0x00000001
#define CMN_REFCLK_VREF_SELECT_NT_MASK 0x00000400
#define CMN_REFCLK_VREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_REFCLK_VREF_SELECT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_STAT */
/* DESCRIPTION: */
/*   Observability register for interface */
/* ------------------------------------- */
#define CMN_STAT_ADDR 0x000000CC
#define CMN_STAT_SIZE 32

/* FIELD: ODAT_BYPASS_CMN_A */
/* DESCRIPTION: */
/*   Register copy of odat_bypass_cmn_a */
#define CMN_STAT_ODAT_BYPASS_CMN_A_OFFSET 0x00000000
#define CMN_STAT_ODAT_BYPASS_CMN_A_BITWIDTH 0x00000002
#define CMN_STAT_ODAT_BYPASS_CMN_A_MASK 0x00000003
#define CMN_STAT_ODAT_BYPASS_CMN_A_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ODAT_BYPASS_CMN_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_LS_MUX_SEL_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_ls_mux_sel_nt */
#define CMN_STAT_ICTL_REF_LS_MUX_SEL_NT_OFFSET 0x00000002
#define CMN_STAT_ICTL_REF_LS_MUX_SEL_NT_BITWIDTH 0x00000003
#define CMN_STAT_ICTL_REF_LS_MUX_SEL_NT_MASK 0x0000001C
#define CMN_STAT_ICTL_REF_LS_MUX_SEL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_LS_MUX_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_LS_ENA_A */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_ls_ena_a */
#define CMN_STAT_ICTL_REF_LS_ENA_A_OFFSET 0x00000005
#define CMN_STAT_ICTL_REF_LS_ENA_A_BITWIDTH 0x00000001
#define CMN_STAT_ICTL_REF_LS_ENA_A_MASK 0x00000020
#define CMN_STAT_ICTL_REF_LS_ENA_A_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_LS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCLK_STATE_POWER_A */
/* DESCRIPTION: */
/*   Register copy of ictl_pclk_state_power_a */
#define CMN_STAT_ICTL_PCLK_STATE_POWER_A_OFFSET 0x00000006
#define CMN_STAT_ICTL_PCLK_STATE_POWER_A_BITWIDTH 0x00000001
#define CMN_STAT_ICTL_PCLK_STATE_POWER_A_MASK 0x00000040
#define CMN_STAT_ICTL_PCLK_STATE_POWER_A_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_PCLK_STATE_POWER_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_BYPASS_ENA_CMN_A */
/* DESCRIPTION: */
/*   Register copy of ictl_bypass_ena_cmn_a */
#define CMN_STAT_ICTL_BYPASS_ENA_CMN_A_OFFSET 0x00000007
#define CMN_STAT_ICTL_BYPASS_ENA_CMN_A_BITWIDTH 0x00000001
#define CMN_STAT_ICTL_BYPASS_ENA_CMN_A_MASK 0x00000080
#define CMN_STAT_ICTL_BYPASS_ENA_CMN_A_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_BYPASS_ENA_CMN_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_cml_ls_r2l_1_mux_sel_nt */
#define CMN_STAT_ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT_OFFSET 0x00000008
#define CMN_STAT_ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT_BITWIDTH 0x00000002
#define CMN_STAT_ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT_MASK 0x00000300
#define CMN_STAT_ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_CML_LS_R2L_1_MUX_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_cml_ls_r2l_0_mux_sel_nt */
#define CMN_STAT_ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT_OFFSET 0x0000000A
#define CMN_STAT_ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT_BITWIDTH 0x00000002
#define CMN_STAT_ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT_MASK 0x00000C00
#define CMN_STAT_ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_CML_LS_R2L_0_MUX_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_cml_ls_l2r_1_mux_sel_nt */
#define CMN_STAT_ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT_OFFSET 0x0000000C
#define CMN_STAT_ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT_BITWIDTH 0x00000002
#define CMN_STAT_ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT_MASK 0x00003000
#define CMN_STAT_ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_CML_LS_L2R_1_MUX_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_ref_cml_ls_l2r_0_mux_sel_nt */
#define CMN_STAT_ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT_OFFSET 0x0000000E
#define CMN_STAT_ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT_BITWIDTH 0x00000002
#define CMN_STAT_ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT_MASK 0x0000C000
#define CMN_STAT_ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define CMN_STAT_ICTL_REF_CML_LS_L2R_0_MUX_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMN_VREG */
/* DESCRIPTION: */
/*   Voltage regulator control */
/* ------------------------------------- */
#define CMN_VREG_ADDR 0x000000D0
#define CMN_VREG_SIZE 32

/* FIELD: HSREF_NT */
/* DESCRIPTION: */
/*   Hsref regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define CMN_VREG_HSREF_NT_OFFSET 0x00000000
#define CMN_VREG_HSREF_NT_BITWIDTH 0x00000004
#define CMN_VREG_HSREF_NT_MASK 0x0000000F
#define CMN_VREG_HSREF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_VREG_HSREF_NT_RESET_VALUE 0x00000006

/* FIELD: HSREF_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define CMN_VREG_HSREF_SCBYPASS_NT_OFFSET 0x00000004
#define CMN_VREG_HSREF_SCBYPASS_NT_BITWIDTH 0x00000001
#define CMN_VREG_HSREF_SCBYPASS_NT_MASK 0x00000010
#define CMN_VREG_HSREF_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_VREG_HSREF_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: LSREF_NT */
/* DESCRIPTION: */
/*   Lsref regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define CMN_VREG_LSREF_NT_OFFSET 0x00000005
#define CMN_VREG_LSREF_NT_BITWIDTH 0x00000004
#define CMN_VREG_LSREF_NT_MASK 0x000001E0
#define CMN_VREG_LSREF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_VREG_LSREF_NT_RESET_VALUE 0x00000006

/* FIELD: LSREF_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define CMN_VREG_LSREF_SCBYPASS_NT_OFFSET 0x00000009
#define CMN_VREG_LSREF_SCBYPASS_NT_BITWIDTH 0x00000001
#define CMN_VREG_LSREF_SCBYPASS_NT_MASK 0x00000200
#define CMN_VREG_LSREF_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define CMN_VREG_LSREF_SCBYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNIFFSM_CTRL */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNIFFSM_CTRL_ADDR 0x000000D4
#define CMNIFFSM_CTRL_SIZE 32

/* FIELD: CMNIFFSM_INIT_RATE */
/* DESCRIPTION: */
/*   Current rate setting for the first state transition occurring after power on reset. */
#define CMNIFFSM_CTRL_CMNIFFSM_INIT_RATE_OFFSET 0x00000000
#define CMNIFFSM_CTRL_CMNIFFSM_INIT_RATE_BITWIDTH 0x00000009
#define CMNIFFSM_CTRL_CMNIFFSM_INIT_RATE_MASK 0x000001FF
#define CMNIFFSM_CTRL_CMNIFFSM_INIT_RATE_ACCESS JUPITER_CSR_READ_WRITE
#define CMNIFFSM_CTRL_CMNIFFSM_INIT_RATE_RESET_VALUE 0x00000040

/* FIELD: CMNIFFSM_GENERAL_REQ_A */
/* DESCRIPTION: */
/*   Request signal for CMN MFSM general instruction. Part of a req/ack interface with cmniffsm_general_ack */
#define CMNIFFSM_CTRL_CMNIFFSM_GENERAL_REQ_A_OFFSET 0x00000009
#define CMNIFFSM_CTRL_CMNIFFSM_GENERAL_REQ_A_BITWIDTH 0x00000001
#define CMNIFFSM_CTRL_CMNIFFSM_GENERAL_REQ_A_MASK 0x00000200
#define CMNIFFSM_CTRL_CMNIFFSM_GENERAL_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define CMNIFFSM_CTRL_CMNIFFSM_GENERAL_REQ_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNIFFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNIFFSM_STAT_ADDR 0x000000D8
#define CMNIFFSM_STAT_SIZE 32

/* FIELD: CMNIFFSM_STATE */
/* DESCRIPTION: */
/*   Interface FSM state */
#define CMNIFFSM_STAT_CMNIFFSM_STATE_OFFSET 0x00000000
#define CMNIFFSM_STAT_CMNIFFSM_STATE_BITWIDTH 0x00000003
#define CMNIFFSM_STAT_CMNIFFSM_STATE_MASK 0x00000007
#define CMNIFFSM_STAT_CMNIFFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define CMNIFFSM_STAT_CMNIFFSM_STATE_RESET_VALUE 0x00000000

/* FIELD: CMNIFFSM_GENERAL_ACK */
/* DESCRIPTION: */
/*   Ack signal for CMN MFSM general instruction. Part of a req/ack interface with cmniffsm_general_req */
#define CMNIFFSM_STAT_CMNIFFSM_GENERAL_ACK_OFFSET 0x00000003
#define CMNIFFSM_STAT_CMNIFFSM_GENERAL_ACK_BITWIDTH 0x00000001
#define CMNIFFSM_STAT_CMNIFFSM_GENERAL_ACK_MASK 0x00000008
#define CMNIFFSM_STAT_CMNIFFSM_GENERAL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define CMNIFFSM_STAT_CMNIFFSM_GENERAL_ACK_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_ADDRESS_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_ADDRESS_REG1_ADDR 0x000000DC
#define CMNMFSM_ADDRESS_REG1_SIZE 32

/* FIELD: CMNMFSM_CSR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all CSR operations performed by the mfsm */
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_CSR_ADDRESS_START_OFFSET 0x00000000
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_CSR_ADDRESS_START_BITWIDTH 0x00000010
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_CSR_ADDRESS_START_MASK 0x0000FFFF
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_CSR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_CSR_ADDRESS_START_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_INSTR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all instructions read by the mfsm */
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_INSTR_ADDRESS_START_OFFSET 0x00000010
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_INSTR_ADDRESS_START_BITWIDTH 0x00000010
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_INSTR_ADDRESS_START_MASK 0xFFFF0000
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_INSTR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_ADDRESS_REG1_CMNMFSM_INSTR_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_ADDRESS_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_ADDRESS_REG2_ADDR 0x000000E0
#define CMNMFSM_ADDRESS_REG2_SIZE 32

/* FIELD: CMNMFSM_SRAM_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all SRAM read/writes by the mfsm */
#define CMNMFSM_ADDRESS_REG2_CMNMFSM_SRAM_ADDRESS_START_OFFSET 0x00000000
#define CMNMFSM_ADDRESS_REG2_CMNMFSM_SRAM_ADDRESS_START_BITWIDTH 0x00000010
#define CMNMFSM_ADDRESS_REG2_CMNMFSM_SRAM_ADDRESS_START_MASK 0x0000FFFF
#define CMNMFSM_ADDRESS_REG2_CMNMFSM_SRAM_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_ADDRESS_REG2_CMNMFSM_SRAM_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_CTRL */
/* DESCRIPTION: */
/*   MFSM logging control */
/* ------------------------------------- */
#define CMNMFSM_LOG_CTRL_ADDR 0x000000E4
#define CMNMFSM_LOG_CTRL_SIZE 32

/* FIELD: EN */
/* DESCRIPTION: */
/*   MFSM logging enable. 0 = disabled, 1 = enabled. */
#define CMNMFSM_LOG_CTRL_EN_OFFSET 0x00000000
#define CMNMFSM_LOG_CTRL_EN_BITWIDTH 0x00000001
#define CMNMFSM_LOG_CTRL_EN_MASK 0x00000001
#define CMNMFSM_LOG_CTRL_EN_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_LOG_CTRL_EN_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_RDREG1 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define CMNMFSM_LOG_RDREG1_ADDR 0x000000E8
#define CMNMFSM_LOG_RDREG1_SIZE 32

/* FIELD: LOG0 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG1_LOG0_OFFSET 0x00000000
#define CMNMFSM_LOG_RDREG1_LOG0_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG1_LOG0_MASK 0x0000FFFF
#define CMNMFSM_LOG_RDREG1_LOG0_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG1_LOG0_RESET_VALUE 0x00000000

/* FIELD: LOG1 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG1_LOG1_OFFSET 0x00000010
#define CMNMFSM_LOG_RDREG1_LOG1_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG1_LOG1_MASK 0xFFFF0000
#define CMNMFSM_LOG_RDREG1_LOG1_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG1_LOG1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_RDREG2 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define CMNMFSM_LOG_RDREG2_ADDR 0x000000EC
#define CMNMFSM_LOG_RDREG2_SIZE 32

/* FIELD: LOG2 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG2_LOG2_OFFSET 0x00000000
#define CMNMFSM_LOG_RDREG2_LOG2_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG2_LOG2_MASK 0x0000FFFF
#define CMNMFSM_LOG_RDREG2_LOG2_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG2_LOG2_RESET_VALUE 0x00000000

/* FIELD: LOG3 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG2_LOG3_OFFSET 0x00000010
#define CMNMFSM_LOG_RDREG2_LOG3_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG2_LOG3_MASK 0xFFFF0000
#define CMNMFSM_LOG_RDREG2_LOG3_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG2_LOG3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_RDREG3 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define CMNMFSM_LOG_RDREG3_ADDR 0x000000F0
#define CMNMFSM_LOG_RDREG3_SIZE 32

/* FIELD: LOG4 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG3_LOG4_OFFSET 0x00000000
#define CMNMFSM_LOG_RDREG3_LOG4_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG3_LOG4_MASK 0x0000FFFF
#define CMNMFSM_LOG_RDREG3_LOG4_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG3_LOG4_RESET_VALUE 0x00000000

/* FIELD: LOG5 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG3_LOG5_OFFSET 0x00000010
#define CMNMFSM_LOG_RDREG3_LOG5_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG3_LOG5_MASK 0xFFFF0000
#define CMNMFSM_LOG_RDREG3_LOG5_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG3_LOG5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_RDREG4 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define CMNMFSM_LOG_RDREG4_ADDR 0x000000F4
#define CMNMFSM_LOG_RDREG4_SIZE 32

/* FIELD: LOG6 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG4_LOG6_OFFSET 0x00000000
#define CMNMFSM_LOG_RDREG4_LOG6_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG4_LOG6_MASK 0x0000FFFF
#define CMNMFSM_LOG_RDREG4_LOG6_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG4_LOG6_RESET_VALUE 0x00000000

/* FIELD: LOG7 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG4_LOG7_OFFSET 0x00000010
#define CMNMFSM_LOG_RDREG4_LOG7_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG4_LOG7_MASK 0xFFFF0000
#define CMNMFSM_LOG_RDREG4_LOG7_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG4_LOG7_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_LOG_RDREG5 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define CMNMFSM_LOG_RDREG5_ADDR 0x000000F8
#define CMNMFSM_LOG_RDREG5_SIZE 32

/* FIELD: LOG8 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG5_LOG8_OFFSET 0x00000000
#define CMNMFSM_LOG_RDREG5_LOG8_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG5_LOG8_MASK 0x0000FFFF
#define CMNMFSM_LOG_RDREG5_LOG8_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG5_LOG8_RESET_VALUE 0x00000000

/* FIELD: LOG9 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define CMNMFSM_LOG_RDREG5_LOG9_OFFSET 0x00000010
#define CMNMFSM_LOG_RDREG5_LOG9_BITWIDTH 0x00000010
#define CMNMFSM_LOG_RDREG5_LOG9_MASK 0xFFFF0000
#define CMNMFSM_LOG_RDREG5_LOG9_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_LOG_RDREG5_LOG9_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_OVR */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_OVR_ADDR 0x000000FC
#define CMNMFSM_OVR_SIZE 32

/* FIELD: CMNMFSM_OVR_ENA */
/* DESCRIPTION: */
/*   Override enable for signals from mfsm to interface fsm. */
/*   0 = Normal operation */
/*   1 = Override enabled */
#define CMNMFSM_OVR_CMNMFSM_OVR_ENA_OFFSET 0x00000000
#define CMNMFSM_OVR_CMNMFSM_OVR_ENA_BITWIDTH 0x00000001
#define CMNMFSM_OVR_CMNMFSM_OVR_ENA_MASK 0x00000001
#define CMNMFSM_OVR_CMNMFSM_OVR_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_OVR_CMNMFSM_OVR_ENA_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_ACK_OVR */
/* DESCRIPTION: */
/*   Override for ack signal from mfsm to interface fsm. */
#define CMNMFSM_OVR_CMNMFSM_ACK_OVR_OFFSET 0x00000001
#define CMNMFSM_OVR_CMNMFSM_ACK_OVR_BITWIDTH 0x00000001
#define CMNMFSM_OVR_CMNMFSM_ACK_OVR_MASK 0x00000002
#define CMNMFSM_OVR_CMNMFSM_ACK_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_OVR_CMNMFSM_ACK_OVR_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_RUNNING_OVR */
/* DESCRIPTION: */
/*   Override for running signal from mfsm to interface fsm. */
#define CMNMFSM_OVR_CMNMFSM_RUNNING_OVR_OFFSET 0x00000002
#define CMNMFSM_OVR_CMNMFSM_RUNNING_OVR_BITWIDTH 0x00000001
#define CMNMFSM_OVR_CMNMFSM_RUNNING_OVR_MASK 0x00000004
#define CMNMFSM_OVR_CMNMFSM_RUNNING_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_OVR_CMNMFSM_RUNNING_OVR_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_CSR_DISABLE */
/* DESCRIPTION: */
/*   When asserted, disables CSR writes from mfsm */
#define CMNMFSM_OVR_CMNMFSM_CSR_DISABLE_OFFSET 0x00000003
#define CMNMFSM_OVR_CMNMFSM_CSR_DISABLE_BITWIDTH 0x00000001
#define CMNMFSM_OVR_CMNMFSM_CSR_DISABLE_MASK 0x00000008
#define CMNMFSM_OVR_CMNMFSM_CSR_DISABLE_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_OVR_CMNMFSM_CSR_DISABLE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_GENERAL */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_GENERAL_ADDR 0x00000100
#define CMNMFSM_PTR_GENERAL_SIZE 32

/* FIELD: CMNMFSM_GENERAL_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for general function */
#define CMNMFSM_PTR_GENERAL_CMNMFSM_GENERAL_START_OFFSET 0x00000000
#define CMNMFSM_PTR_GENERAL_CMNMFSM_GENERAL_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_GENERAL_CMNMFSM_GENERAL_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_GENERAL_CMNMFSM_GENERAL_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_GENERAL_CMNMFSM_GENERAL_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_PDN_RATE */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_PDN_RATE_ADDR 0x00000104
#define CMNMFSM_PTR_PDN_RATE_SIZE 32

/* FIELD: CMNMFSM_PDN_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power down section during rate change */
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_START_OFFSET 0x00000000
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_START_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_PDN_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power down section during rate change */
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_END_OFFSET 0x00000010
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_END_BITWIDTH 0x00000010
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_END_MASK 0xFFFF0000
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_END_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_PDN_RATE_CMNMFSM_PDN_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_POWER_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_POWER_REG1_ADDR 0x00000108
#define CMNMFSM_PTR_POWER_REG1_SIZE 32

/* FIELD: CMNMFSM_PUP_P4_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p4 */
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PUP_P4_START_OFFSET 0x00000000
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PUP_P4_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PUP_P4_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PUP_P4_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PUP_P4_START_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_PDN_P0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p0 */
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PDN_P0_START_OFFSET 0x00000010
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PDN_P0_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PDN_P0_START_MASK 0xFFFF0000
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PDN_P0_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_POWER_REG1_CMNMFSM_PDN_P0_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_POWER_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_POWER_REG2_ADDR 0x0000010C
#define CMNMFSM_PTR_POWER_REG2_SIZE 32

/* FIELD: CMNMFSM_PDN_P4_END */
/* DESCRIPTION: */
/*   End instruction pointer for power downs ending at p4 */
#define CMNMFSM_PTR_POWER_REG2_CMNMFSM_PDN_P4_END_OFFSET 0x00000000
#define CMNMFSM_PTR_POWER_REG2_CMNMFSM_PDN_P4_END_BITWIDTH 0x00000010
#define CMNMFSM_PTR_POWER_REG2_CMNMFSM_PDN_P4_END_MASK 0x0000FFFF
#define CMNMFSM_PTR_POWER_REG2_CMNMFSM_PDN_P4_END_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_POWER_REG2_CMNMFSM_PDN_P4_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_PUP_RATE */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_PUP_RATE_ADDR 0x00000110
#define CMNMFSM_PTR_PUP_RATE_SIZE 32

/* FIELD: CMNMFSM_PUP_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power up section during rate change */
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_START_OFFSET 0x00000000
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_START_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_PUP_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power up section during rate change */
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_END_OFFSET 0x00000010
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_END_BITWIDTH 0x00000010
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_END_MASK 0xFFFF0000
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_END_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_PUP_RATE_CMNMFSM_PUP_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_RATE */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_RATE_ADDR 0x00000114
#define CMNMFSM_PTR_RATE_SIZE 32

/* FIELD: CMNMFSM_RATE0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes */
#define CMNMFSM_PTR_RATE_CMNMFSM_RATE0_START_OFFSET 0x00000000
#define CMNMFSM_PTR_RATE_CMNMFSM_RATE0_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_RATE_CMNMFSM_RATE0_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_RATE_CMNMFSM_RATE0_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_RATE_CMNMFSM_RATE0_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_PTR_RESET */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_PTR_RESET_ADDR 0x00000118
#define CMNMFSM_PTR_RESET_SIZE 32

/* FIELD: CMNMFSM_RESET_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for reset block */
#define CMNMFSM_PTR_RESET_CMNMFSM_RESET_START_OFFSET 0x00000000
#define CMNMFSM_PTR_RESET_CMNMFSM_RESET_START_BITWIDTH 0x00000010
#define CMNMFSM_PTR_RESET_CMNMFSM_RESET_START_MASK 0x0000FFFF
#define CMNMFSM_PTR_RESET_CMNMFSM_RESET_START_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_PTR_RESET_CMNMFSM_RESET_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_SCRATCH_REG1 */
/* DESCRIPTION: */
/*   Scratch pad register for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_SCRATCH_REG1_ADDR 0x0000011C
#define CMNMFSM_SCRATCH_REG1_SIZE 32

/* FIELD: CMNMFSM_SCRATCH1 */
/* DESCRIPTION: */
/*   Scratch pad field */
#define CMNMFSM_SCRATCH_REG1_CMNMFSM_SCRATCH1_OFFSET 0x00000000
#define CMNMFSM_SCRATCH_REG1_CMNMFSM_SCRATCH1_BITWIDTH 0x00000020
#define CMNMFSM_SCRATCH_REG1_CMNMFSM_SCRATCH1_MASK 0xFFFFFFFF
#define CMNMFSM_SCRATCH_REG1_CMNMFSM_SCRATCH1_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_SCRATCH_REG1_CMNMFSM_SCRATCH1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_SCRATCH_REG2 */
/* DESCRIPTION: */
/*   Scratch pad register for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_SCRATCH_REG2_ADDR 0x00000120
#define CMNMFSM_SCRATCH_REG2_SIZE 32

/* FIELD: CMNMFSM_SCRATCH2 */
/* DESCRIPTION: */
/*   Scratch pad field */
#define CMNMFSM_SCRATCH_REG2_CMNMFSM_SCRATCH2_OFFSET 0x00000000
#define CMNMFSM_SCRATCH_REG2_CMNMFSM_SCRATCH2_BITWIDTH 0x00000020
#define CMNMFSM_SCRATCH_REG2_CMNMFSM_SCRATCH2_MASK 0xFFFFFFFF
#define CMNMFSM_SCRATCH_REG2_CMNMFSM_SCRATCH2_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_SCRATCH_REG2_CMNMFSM_SCRATCH2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_SCRATCH_REG3 */
/* DESCRIPTION: */
/*   Scratch pad register for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_SCRATCH_REG3_ADDR 0x00000124
#define CMNMFSM_SCRATCH_REG3_SIZE 32

/* FIELD: CMNMFSM_SCRATCH3 */
/* DESCRIPTION: */
/*   Scratch pad field */
#define CMNMFSM_SCRATCH_REG3_CMNMFSM_SCRATCH3_OFFSET 0x00000000
#define CMNMFSM_SCRATCH_REG3_CMNMFSM_SCRATCH3_BITWIDTH 0x00000020
#define CMNMFSM_SCRATCH_REG3_CMNMFSM_SCRATCH3_MASK 0xFFFFFFFF
#define CMNMFSM_SCRATCH_REG3_CMNMFSM_SCRATCH3_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_SCRATCH_REG3_CMNMFSM_SCRATCH3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_SCRATCH_REG4 */
/* DESCRIPTION: */
/*   Scratch pad register for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_SCRATCH_REG4_ADDR 0x00000128
#define CMNMFSM_SCRATCH_REG4_SIZE 32

/* FIELD: CMNMFSM_SCRATCH4 */
/* DESCRIPTION: */
/*   Scratch pad field */
#define CMNMFSM_SCRATCH_REG4_CMNMFSM_SCRATCH4_OFFSET 0x00000000
#define CMNMFSM_SCRATCH_REG4_CMNMFSM_SCRATCH4_BITWIDTH 0x00000020
#define CMNMFSM_SCRATCH_REG4_CMNMFSM_SCRATCH4_MASK 0xFFFFFFFF
#define CMNMFSM_SCRATCH_REG4_CMNMFSM_SCRATCH4_ACCESS JUPITER_CSR_READ_WRITE
#define CMNMFSM_SCRATCH_REG4_CMNMFSM_SCRATCH4_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_STAT_ADDR 0x0000012C
#define CMNMFSM_STAT_SIZE 32

/* FIELD: CMNMFSM_RATE_CUR */
/* DESCRIPTION: */
/*   Current rate sent to mfsm when called by interface fsm */
#define CMNMFSM_STAT_CMNMFSM_RATE_CUR_OFFSET 0x00000000
#define CMNMFSM_STAT_CMNMFSM_RATE_CUR_BITWIDTH 0x00000009
#define CMNMFSM_STAT_CMNMFSM_RATE_CUR_MASK 0x000001FF
#define CMNMFSM_STAT_CMNMFSM_RATE_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_RATE_CUR_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_INSTR_NUM */
/* DESCRIPTION: */
/*   Instruction number sent to mfsm when called by interface fsm */
/*   0 = Reset */
/*   1 = State change */
#define CMNMFSM_STAT_CMNMFSM_INSTR_NUM_OFFSET 0x00000009
#define CMNMFSM_STAT_CMNMFSM_INSTR_NUM_BITWIDTH 0x00000004
#define CMNMFSM_STAT_CMNMFSM_INSTR_NUM_MASK 0x00001E00
#define CMNMFSM_STAT_CMNMFSM_INSTR_NUM_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_INSTR_NUM_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_POWER_CUR */
/* DESCRIPTION: */
/*   Current power state sent to mfsm when called by interface fsm */
#define CMNMFSM_STAT_CMNMFSM_POWER_CUR_OFFSET 0x0000000D
#define CMNMFSM_STAT_CMNMFSM_POWER_CUR_BITWIDTH 0x00000003
#define CMNMFSM_STAT_CMNMFSM_POWER_CUR_MASK 0x0000E000
#define CMNMFSM_STAT_CMNMFSM_POWER_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_POWER_CUR_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_POWER_NEW */
/* DESCRIPTION: */
/*   New power state sent to mfsm when called by interface fsm */
#define CMNMFSM_STAT_CMNMFSM_POWER_NEW_OFFSET 0x00000010
#define CMNMFSM_STAT_CMNMFSM_POWER_NEW_BITWIDTH 0x00000003
#define CMNMFSM_STAT_CMNMFSM_POWER_NEW_MASK 0x00070000
#define CMNMFSM_STAT_CMNMFSM_POWER_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_POWER_NEW_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_RATE_NEW */
/* DESCRIPTION: */
/*   New rate sent to mfsm when called by interface fsm */
#define CMNMFSM_STAT_CMNMFSM_RATE_NEW_OFFSET 0x00000013
#define CMNMFSM_STAT_CMNMFSM_RATE_NEW_BITWIDTH 0x00000009
#define CMNMFSM_STAT_CMNMFSM_RATE_NEW_MASK 0x0FF80000
#define CMNMFSM_STAT_CMNMFSM_RATE_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_RATE_NEW_RESET_VALUE 0x00000000

/* FIELD: CMNMFSM_REQ */
/* DESCRIPTION: */
/*   Copy of request signal sent to mfsm */
#define CMNMFSM_STAT_CMNMFSM_REQ_OFFSET 0x0000001C
#define CMNMFSM_STAT_CMNMFSM_REQ_BITWIDTH 0x00000001
#define CMNMFSM_STAT_CMNMFSM_REQ_MASK 0x10000000
#define CMNMFSM_STAT_CMNMFSM_REQ_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STAT_CMNMFSM_REQ_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CMNMFSM_STATE */
/* DESCRIPTION: */
/*   Configuration and observability for common Master Controller. */
/* ------------------------------------- */
#define CMNMFSM_STATE_ADDR 0x00000130
#define CMNMFSM_STATE_SIZE 32

/* FIELD: CMNMFSM_STATE */
/* DESCRIPTION: */
/*   MFSM state register. For debug purposes only. */
#define CMNMFSM_STATE_CMNMFSM_STATE_OFFSET 0x00000000
#define CMNMFSM_STATE_CMNMFSM_STATE_BITWIDTH 0x00000009
#define CMNMFSM_STATE_CMNMFSM_STATE_MASK 0x000001FF
#define CMNMFSM_STATE_CMNMFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define CMNMFSM_STATE_CMNMFSM_STATE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_CMN_TBUS_CLIENT0 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_CMN_TBUS_CLIENT0_ADDR 0x00000134
#define CTL_CMN_TBUS_CLIENT0_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_CMN_TBUS_CLIENT0_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_CMN_TBUS_CLIENT0_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT0_BLOCK_ID_A_MASK 0x000000FF
#define CTL_CMN_TBUS_CLIENT0_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT0_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_CMN_TBUS_CLIENT0_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_CMN_TBUS_CLIENT0_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT0_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_CMN_TBUS_CLIENT0_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT0_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_CMN_TBUS_CLIENT0_TRIGGER_A_OFFSET 0x00000010
#define CTL_CMN_TBUS_CLIENT0_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT0_TRIGGER_A_MASK 0x00010000
#define CTL_CMN_TBUS_CLIENT0_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT0_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_CMN_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_CMN_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_CMN_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_CMN_TBUS_CLIENT1 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_CMN_TBUS_CLIENT1_ADDR 0x00000138
#define CTL_CMN_TBUS_CLIENT1_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_CMN_TBUS_CLIENT1_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_CMN_TBUS_CLIENT1_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT1_BLOCK_ID_A_MASK 0x000000FF
#define CTL_CMN_TBUS_CLIENT1_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT1_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_CMN_TBUS_CLIENT1_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_CMN_TBUS_CLIENT1_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT1_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_CMN_TBUS_CLIENT1_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT1_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_CMN_TBUS_CLIENT1_TRIGGER_A_OFFSET 0x00000010
#define CTL_CMN_TBUS_CLIENT1_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT1_TRIGGER_A_MASK 0x00010000
#define CTL_CMN_TBUS_CLIENT1_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT1_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_CMN_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_CMN_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_CMN_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_CMN_TBUS_CLIENT2 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_CMN_TBUS_CLIENT2_ADDR 0x0000013C
#define CTL_CMN_TBUS_CLIENT2_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_CMN_TBUS_CLIENT2_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_CMN_TBUS_CLIENT2_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT2_BLOCK_ID_A_MASK 0x000000FF
#define CTL_CMN_TBUS_CLIENT2_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT2_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_CMN_TBUS_CLIENT2_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_CMN_TBUS_CLIENT2_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT2_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_CMN_TBUS_CLIENT2_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT2_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_CMN_TBUS_CLIENT2_TRIGGER_A_OFFSET 0x00000010
#define CTL_CMN_TBUS_CLIENT2_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT2_TRIGGER_A_MASK 0x00010000
#define CTL_CMN_TBUS_CLIENT2_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT2_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_CMN_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_CMN_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_CMN_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_CMN_TBUS_CLIENT3 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_CMN_TBUS_CLIENT3_ADDR 0x00000140
#define CTL_CMN_TBUS_CLIENT3_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_CMN_TBUS_CLIENT3_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_CMN_TBUS_CLIENT3_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT3_BLOCK_ID_A_MASK 0x000000FF
#define CTL_CMN_TBUS_CLIENT3_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT3_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_CMN_TBUS_CLIENT3_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_CMN_TBUS_CLIENT3_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_CMN_TBUS_CLIENT3_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_CMN_TBUS_CLIENT3_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT3_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_CMN_TBUS_CLIENT3_TRIGGER_A_OFFSET 0x00000010
#define CTL_CMN_TBUS_CLIENT3_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT3_TRIGGER_A_MASK 0x00010000
#define CTL_CMN_TBUS_CLIENT3_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT3_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_CMN_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_CMN_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_CMN_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_CMN_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_CMN_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_PLLCHARZ_CMN */
/* DESCRIPTION: */
/*   Reserved */
/* ------------------------------------- */
#define CTL_DBE_PLLCHARZ_CMN_ADDR 0x00000144
#define CTL_DBE_PLLCHARZ_CMN_SIZE 32

/* FIELD: CLKSEL_A */
/* DESCRIPTION: */
/*   Select signal for clock observation */
#define CTL_DBE_PLLCHARZ_CMN_CLKSEL_A_OFFSET 0x00000000
#define CTL_DBE_PLLCHARZ_CMN_CLKSEL_A_BITWIDTH 0x00000004
#define CTL_DBE_PLLCHARZ_CMN_CLKSEL_A_MASK 0x0000000F
#define CTL_DBE_PLLCHARZ_CMN_CLKSEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_PLLCHARZ_CMN_CLKSEL_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_CMN_TBUS_CLIENT0 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_CMN_TBUS_CLIENT0_ADDR 0x00000148
#define DAT_CMN_TBUS_CLIENT0_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_CMN_TBUS_CLIENT0_RDDATA_A_OFFSET 0x00000000
#define DAT_CMN_TBUS_CLIENT0_RDDATA_A_BITWIDTH 0x00000020
#define DAT_CMN_TBUS_CLIENT0_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_CMN_TBUS_CLIENT0_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_CMN_TBUS_CLIENT0_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_CMN_TBUS_CLIENT1 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_CMN_TBUS_CLIENT1_ADDR 0x0000014C
#define DAT_CMN_TBUS_CLIENT1_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_CMN_TBUS_CLIENT1_RDDATA_A_OFFSET 0x00000000
#define DAT_CMN_TBUS_CLIENT1_RDDATA_A_BITWIDTH 0x00000020
#define DAT_CMN_TBUS_CLIENT1_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_CMN_TBUS_CLIENT1_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_CMN_TBUS_CLIENT1_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_CMN_TBUS_CLIENT2 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_CMN_TBUS_CLIENT2_ADDR 0x00000150
#define DAT_CMN_TBUS_CLIENT2_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_CMN_TBUS_CLIENT2_RDDATA_A_OFFSET 0x00000000
#define DAT_CMN_TBUS_CLIENT2_RDDATA_A_BITWIDTH 0x00000020
#define DAT_CMN_TBUS_CLIENT2_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_CMN_TBUS_CLIENT2_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_CMN_TBUS_CLIENT2_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_CMN_TBUS_CLIENT3 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_CMN_TBUS_CLIENT3_ADDR 0x00000154
#define DAT_CMN_TBUS_CLIENT3_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_CMN_TBUS_CLIENT3_RDDATA_A_OFFSET 0x00000000
#define DAT_CMN_TBUS_CLIENT3_RDDATA_A_BITWIDTH 0x00000020
#define DAT_CMN_TBUS_CLIENT3_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_CMN_TBUS_CLIENT3_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_CMN_TBUS_CLIENT3_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: LCPLL_CHECK */
/* DESCRIPTION: */
/*   LCPLL Lock Check control */
/* ------------------------------------- */
#define LCPLL_CHECK_ADDR 0x00000158
#define LCPLL_CHECK_SIZE 32

/* FIELD: START_A */
/* DESCRIPTION: */
/*   Start control for LCPLL lock check block */
#define LCPLL_CHECK_START_A_OFFSET 0x00000000
#define LCPLL_CHECK_START_A_BITWIDTH 0x00000001
#define LCPLL_CHECK_START_A_MASK 0x00000001
#define LCPLL_CHECK_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define LCPLL_CHECK_START_A_RESET_VALUE 0x00000000

/* FIELD: LEN_NT */
/* DESCRIPTION: */
/*   Controls the number of cycles to check the LCPLL for lock */
#define LCPLL_CHECK_LEN_NT_OFFSET 0x00000001
#define LCPLL_CHECK_LEN_NT_BITWIDTH 0x00000005
#define LCPLL_CHECK_LEN_NT_MASK 0x0000003E
#define LCPLL_CHECK_LEN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LCPLL_CHECK_LEN_NT_RESET_VALUE 0x0000000A

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Minimum acceptable value for the LCPLL therm counter */
#define LCPLL_CHECK_MIN_NT_OFFSET 0x00000008
#define LCPLL_CHECK_MIN_NT_BITWIDTH 0x00000004
#define LCPLL_CHECK_MIN_NT_MASK 0x00000F00
#define LCPLL_CHECK_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LCPLL_CHECK_MIN_NT_RESET_VALUE 0x00000003

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Maximum acceptable range for the LCPLL therm counter */
#define LCPLL_CHECK_MAX_NT_OFFSET 0x0000000C
#define LCPLL_CHECK_MAX_NT_BITWIDTH 0x00000004
#define LCPLL_CHECK_MAX_NT_MASK 0x0000F000
#define LCPLL_CHECK_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LCPLL_CHECK_MAX_NT_RESET_VALUE 0x0000000C

/* ------------------------------------- */
/* REG: LCPLL_CHECK_RDREG */
/* DESCRIPTION: */
/*   LCPLL Lock Check result */
/* ------------------------------------- */
#define LCPLL_CHECK_RDREG_ADDR 0x0000015C
#define LCPLL_CHECK_RDREG_SIZE 32

/* FIELD: DONE_A */
/* DESCRIPTION: */
/*   Done indicator for LCPLL lock check block */
#define LCPLL_CHECK_RDREG_DONE_A_OFFSET 0x00000000
#define LCPLL_CHECK_RDREG_DONE_A_BITWIDTH 0x00000001
#define LCPLL_CHECK_RDREG_DONE_A_MASK 0x00000001
#define LCPLL_CHECK_RDREG_DONE_A_ACCESS JUPITER_CSR_READ_ONLY
#define LCPLL_CHECK_RDREG_DONE_A_RESET_VALUE 0x00000000

/* FIELD: STAT_NT */
/* DESCRIPTION: */
/*   LCPLL lock check status indicator. 0 = locked, 1 = unlocke */
#define LCPLL_CHECK_RDREG_STAT_NT_OFFSET 0x00000001
#define LCPLL_CHECK_RDREG_STAT_NT_BITWIDTH 0x00000001
#define LCPLL_CHECK_RDREG_STAT_NT_MASK 0x00000002
#define LCPLL_CHECK_RDREG_STAT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define LCPLL_CHECK_RDREG_STAT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG1 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG1_ADDR 0x00000160
#define LOGICAL_MAPPING_REG1_SIZE 32

/* FIELD: LANE0_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane0 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE0_TX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG1_LANE0_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE0_TX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG1_LANE0_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE0_TX_NT_RESET_VALUE 0x00000001

/* FIELD: LANE1_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane1 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE1_TX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG1_LANE1_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE1_TX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG1_LANE1_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE1_TX_NT_RESET_VALUE 0x00000002

/* FIELD: LANE2_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane2 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE2_TX_NT_OFFSET 0x0000000A
#define LOGICAL_MAPPING_REG1_LANE2_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE2_TX_NT_MASK 0x00007C00
#define LOGICAL_MAPPING_REG1_LANE2_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE2_TX_NT_RESET_VALUE 0x00000003

/* FIELD: LANE3_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane3 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE3_TX_NT_OFFSET 0x00000010
#define LOGICAL_MAPPING_REG1_LANE3_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE3_TX_NT_MASK 0x001F0000
#define LOGICAL_MAPPING_REG1_LANE3_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE3_TX_NT_RESET_VALUE 0x00000004

/* FIELD: LANE4_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane4 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE4_TX_NT_OFFSET 0x00000015
#define LOGICAL_MAPPING_REG1_LANE4_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE4_TX_NT_MASK 0x03E00000
#define LOGICAL_MAPPING_REG1_LANE4_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE4_TX_NT_RESET_VALUE 0x00000005

/* FIELD: LANE5_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane5 TX register accesses. */
#define LOGICAL_MAPPING_REG1_LANE5_TX_NT_OFFSET 0x0000001A
#define LOGICAL_MAPPING_REG1_LANE5_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG1_LANE5_TX_NT_MASK 0x7C000000
#define LOGICAL_MAPPING_REG1_LANE5_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG1_LANE5_TX_NT_RESET_VALUE 0x00000006

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG2 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG2_ADDR 0x00000164
#define LOGICAL_MAPPING_REG2_SIZE 32

/* FIELD: LANE6_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane6 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE6_TX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG2_LANE6_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE6_TX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG2_LANE6_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE6_TX_NT_RESET_VALUE 0x00000007

/* FIELD: LANE7_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane7 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE7_TX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG2_LANE7_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE7_TX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG2_LANE7_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE7_TX_NT_RESET_VALUE 0x00000008

/* FIELD: LANE8_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane8 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE8_TX_NT_OFFSET 0x0000000A
#define LOGICAL_MAPPING_REG2_LANE8_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE8_TX_NT_MASK 0x00007C00
#define LOGICAL_MAPPING_REG2_LANE8_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE8_TX_NT_RESET_VALUE 0x00000009

/* FIELD: LANE9_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane9 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE9_TX_NT_OFFSET 0x00000010
#define LOGICAL_MAPPING_REG2_LANE9_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE9_TX_NT_MASK 0x001F0000
#define LOGICAL_MAPPING_REG2_LANE9_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE9_TX_NT_RESET_VALUE 0x0000000A

/* FIELD: LANE10_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane10 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE10_TX_NT_OFFSET 0x00000015
#define LOGICAL_MAPPING_REG2_LANE10_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE10_TX_NT_MASK 0x03E00000
#define LOGICAL_MAPPING_REG2_LANE10_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE10_TX_NT_RESET_VALUE 0x0000000B

/* FIELD: LANE11_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane11 TX register accesses. */
#define LOGICAL_MAPPING_REG2_LANE11_TX_NT_OFFSET 0x0000001A
#define LOGICAL_MAPPING_REG2_LANE11_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG2_LANE11_TX_NT_MASK 0x7C000000
#define LOGICAL_MAPPING_REG2_LANE11_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG2_LANE11_TX_NT_RESET_VALUE 0x0000000C

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG3 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG3_ADDR 0x00000168
#define LOGICAL_MAPPING_REG3_SIZE 32

/* FIELD: LANE12_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane12 TX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE12_TX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG3_LANE12_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE12_TX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG3_LANE12_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE12_TX_NT_RESET_VALUE 0x0000000D

/* FIELD: LANE13_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane13 TX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE13_TX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG3_LANE13_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE13_TX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG3_LANE13_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE13_TX_NT_RESET_VALUE 0x0000000E

/* FIELD: LANE14_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane14 TX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE14_TX_NT_OFFSET 0x0000000A
#define LOGICAL_MAPPING_REG3_LANE14_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE14_TX_NT_MASK 0x00007C00
#define LOGICAL_MAPPING_REG3_LANE14_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE14_TX_NT_RESET_VALUE 0x0000000F

/* FIELD: LANE15_TX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane15 TX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE15_TX_NT_OFFSET 0x00000010
#define LOGICAL_MAPPING_REG3_LANE15_TX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE15_TX_NT_MASK 0x001F0000
#define LOGICAL_MAPPING_REG3_LANE15_TX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE15_TX_NT_RESET_VALUE 0x00000010

/* FIELD: LANE0_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane0 RX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE0_RX_NT_OFFSET 0x00000015
#define LOGICAL_MAPPING_REG3_LANE0_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE0_RX_NT_MASK 0x03E00000
#define LOGICAL_MAPPING_REG3_LANE0_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE0_RX_NT_RESET_VALUE 0x00000001

/* FIELD: LANE1_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane1 RX register accesses. */
#define LOGICAL_MAPPING_REG3_LANE1_RX_NT_OFFSET 0x0000001A
#define LOGICAL_MAPPING_REG3_LANE1_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG3_LANE1_RX_NT_MASK 0x7C000000
#define LOGICAL_MAPPING_REG3_LANE1_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG3_LANE1_RX_NT_RESET_VALUE 0x00000002

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG4 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG4_ADDR 0x0000016C
#define LOGICAL_MAPPING_REG4_SIZE 32

/* FIELD: LANE2_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane2 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE2_RX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG4_LANE2_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE2_RX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG4_LANE2_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE2_RX_NT_RESET_VALUE 0x00000003

/* FIELD: LANE3_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane3 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE3_RX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG4_LANE3_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE3_RX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG4_LANE3_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE3_RX_NT_RESET_VALUE 0x00000004

/* FIELD: LANE4_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane4 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE4_RX_NT_OFFSET 0x0000000A
#define LOGICAL_MAPPING_REG4_LANE4_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE4_RX_NT_MASK 0x00007C00
#define LOGICAL_MAPPING_REG4_LANE4_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE4_RX_NT_RESET_VALUE 0x00000005

/* FIELD: LANE5_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane5 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE5_RX_NT_OFFSET 0x00000010
#define LOGICAL_MAPPING_REG4_LANE5_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE5_RX_NT_MASK 0x001F0000
#define LOGICAL_MAPPING_REG4_LANE5_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE5_RX_NT_RESET_VALUE 0x00000006

/* FIELD: LANE6_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane6 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE6_RX_NT_OFFSET 0x00000015
#define LOGICAL_MAPPING_REG4_LANE6_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE6_RX_NT_MASK 0x03E00000
#define LOGICAL_MAPPING_REG4_LANE6_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE6_RX_NT_RESET_VALUE 0x00000007

/* FIELD: LANE7_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane7 RX register accesses. */
#define LOGICAL_MAPPING_REG4_LANE7_RX_NT_OFFSET 0x0000001A
#define LOGICAL_MAPPING_REG4_LANE7_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG4_LANE7_RX_NT_MASK 0x7C000000
#define LOGICAL_MAPPING_REG4_LANE7_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG4_LANE7_RX_NT_RESET_VALUE 0x00000008

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG5 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG5_ADDR 0x00000170
#define LOGICAL_MAPPING_REG5_SIZE 32

/* FIELD: LANE8_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane8 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE8_RX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG5_LANE8_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE8_RX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG5_LANE8_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE8_RX_NT_RESET_VALUE 0x00000009

/* FIELD: LANE9_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane9 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE9_RX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG5_LANE9_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE9_RX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG5_LANE9_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE9_RX_NT_RESET_VALUE 0x0000000A

/* FIELD: LANE10_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane10 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE10_RX_NT_OFFSET 0x0000000A
#define LOGICAL_MAPPING_REG5_LANE10_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE10_RX_NT_MASK 0x00007C00
#define LOGICAL_MAPPING_REG5_LANE10_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE10_RX_NT_RESET_VALUE 0x0000000B

/* FIELD: LANE11_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane11 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE11_RX_NT_OFFSET 0x00000010
#define LOGICAL_MAPPING_REG5_LANE11_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE11_RX_NT_MASK 0x001F0000
#define LOGICAL_MAPPING_REG5_LANE11_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE11_RX_NT_RESET_VALUE 0x0000000C

/* FIELD: LANE12_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane12 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE12_RX_NT_OFFSET 0x00000015
#define LOGICAL_MAPPING_REG5_LANE12_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE12_RX_NT_MASK 0x03E00000
#define LOGICAL_MAPPING_REG5_LANE12_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE12_RX_NT_RESET_VALUE 0x0000000D

/* FIELD: LANE13_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane13 RX register accesses. */
#define LOGICAL_MAPPING_REG5_LANE13_RX_NT_OFFSET 0x0000001A
#define LOGICAL_MAPPING_REG5_LANE13_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG5_LANE13_RX_NT_MASK 0x7C000000
#define LOGICAL_MAPPING_REG5_LANE13_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG5_LANE13_RX_NT_RESET_VALUE 0x0000000E

/* ------------------------------------- */
/* REG: LOGICAL_MAPPING_REG6 */
/* DESCRIPTION: */
/*   Register access mapping control */
/* ------------------------------------- */
#define LOGICAL_MAPPING_REG6_ADDR 0x00000174
#define LOGICAL_MAPPING_REG6_SIZE 32

/* FIELD: LANE14_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane14 RX register accesses. */
#define LOGICAL_MAPPING_REG6_LANE14_RX_NT_OFFSET 0x00000000
#define LOGICAL_MAPPING_REG6_LANE14_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG6_LANE14_RX_NT_MASK 0x0000001F
#define LOGICAL_MAPPING_REG6_LANE14_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG6_LANE14_RX_NT_RESET_VALUE 0x0000000F

/* FIELD: LANE15_RX_NT */
/* DESCRIPTION: */
/*   Logical mapping for lane15 RX register accesses. */
#define LOGICAL_MAPPING_REG6_LANE15_RX_NT_OFFSET 0x00000005
#define LOGICAL_MAPPING_REG6_LANE15_RX_NT_BITWIDTH 0x00000005
#define LOGICAL_MAPPING_REG6_LANE15_RX_NT_MASK 0x000003E0
#define LOGICAL_MAPPING_REG6_LANE15_RX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOGICAL_MAPPING_REG6_LANE15_RX_NT_RESET_VALUE 0x00000010

/* ------------------------------------- */
/* REG: PD_AFE_CMN */
/* DESCRIPTION: */
/*   Overrides the AFE reset signals. These are controlled via the power control state machine in normal operation. */
/* ------------------------------------- */
#define PD_AFE_CMN_ADDR 0x00000178
#define PD_AFE_CMN_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable register override for CMN block power down signals */
/*   0 - Normal operation */
/*   1 - Register overrides enabled */
#define PD_AFE_CMN_BYPASS_ENA_A_OFFSET 0x00000000
#define PD_AFE_CMN_BYPASS_ENA_A_BITWIDTH 0x00000001
#define PD_AFE_CMN_BYPASS_ENA_A_MASK 0x00000001
#define PD_AFE_CMN_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ATEST_ADC_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn atest adc powered down */
#define PD_AFE_CMN_ATEST_ADC_BA_OFFSET 0x00000001
#define PD_AFE_CMN_ATEST_ADC_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_ATEST_ADC_BA_MASK 0x00000002
#define PD_AFE_CMN_ATEST_ADC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_ATEST_ADC_BA_RESET_VALUE 0x00000000

/* FIELD: ATEST_PMON_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn atest process monitor powered down */
#define PD_AFE_CMN_ATEST_PMON_BA_OFFSET 0x00000002
#define PD_AFE_CMN_ATEST_PMON_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_ATEST_PMON_BA_MASK 0x00000004
#define PD_AFE_CMN_ATEST_PMON_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_ATEST_PMON_BA_RESET_VALUE 0x00000000

/* FIELD: BIAS_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn bias powered down */
#define PD_AFE_CMN_BIAS_BA_OFFSET 0x00000003
#define PD_AFE_CMN_BIAS_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_BIAS_BA_MASK 0x00000008
#define PD_AFE_CMN_BIAS_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_BIAS_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn clkgen powered down */
#define PD_AFE_CMN_CLKGEN_BA_OFFSET 0x00000004
#define PD_AFE_CMN_CLKGEN_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_CLKGEN_BA_MASK 0x00000010
#define PD_AFE_CMN_CLKGEN_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_CLKGEN_BA_RESET_VALUE 0x00000000

/* FIELD: HSREFBUF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn high speed reference clock buffer powered down */
#define PD_AFE_CMN_HSREFBUF_BA_OFFSET 0x00000005
#define PD_AFE_CMN_HSREFBUF_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_HSREFBUF_BA_MASK 0x00000020
#define PD_AFE_CMN_HSREFBUF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_HSREFBUF_BA_RESET_VALUE 0x00000000

/* FIELD: LSREFBUF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn low speed reference clock buffer powered down */
#define PD_AFE_CMN_LSREFBUF_BA_OFFSET 0x00000006
#define PD_AFE_CMN_LSREFBUF_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_LSREFBUF_BA_MASK 0x00000040
#define PD_AFE_CMN_LSREFBUF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_LSREFBUF_BA_RESET_VALUE 0x00000000

/* FIELD: LSREFRX_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn low speed reference clock buffer (rx derived clock section powered down) */
#define PD_AFE_CMN_LSREFRX_BA_OFFSET 0x00000007
#define PD_AFE_CMN_LSREFRX_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_LSREFRX_BA_MASK 0x00000080
#define PD_AFE_CMN_LSREFRX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_LSREFRX_BA_RESET_VALUE 0x00000000

/* FIELD: REG_HSREF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn high speed reference regulator powered down */
#define PD_AFE_CMN_REG_HSREF_BA_OFFSET 0x00000008
#define PD_AFE_CMN_REG_HSREF_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_REG_HSREF_BA_MASK 0x00000100
#define PD_AFE_CMN_REG_HSREF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_REG_HSREF_BA_RESET_VALUE 0x00000000

/* FIELD: REG_LSREF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn low speed reference regulator powered down */
#define PD_AFE_CMN_REG_LSREF_BA_OFFSET 0x00000009
#define PD_AFE_CMN_REG_LSREF_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_REG_LSREF_BA_MASK 0x00000200
#define PD_AFE_CMN_REG_LSREF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_REG_LSREF_BA_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe cmn termination calibration powered down */
#define PD_AFE_CMN_TERMCAL_BA_OFFSET 0x0000000A
#define PD_AFE_CMN_TERMCAL_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_TERMCAL_BA_MASK 0x00000400
#define PD_AFE_CMN_TERMCAL_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_TERMCAL_BA_RESET_VALUE 0x00000000

/* FIELD: BSCAN_BA */
/* DESCRIPTION: */
/*   1 - CMN Clock Gen DCO Regulator bleed current is on */
/*   0 - Common Clock Gen DCO Regulator bleed current is off */
#define PD_AFE_CMN_BSCAN_BA_OFFSET 0x0000000B
#define PD_AFE_CMN_BSCAN_BA_BITWIDTH 0x00000001
#define PD_AFE_CMN_BSCAN_BA_MASK 0x00000800
#define PD_AFE_CMN_BSCAN_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_CMN_BSCAN_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PPM_LOCK_DETECT_RDREG */
/* DESCRIPTION: */
/*   Configuration for ppm detect block */
/* ------------------------------------- */
#define PPM_LOCK_DETECT_RDREG_ADDR 0x0000017C
#define PPM_LOCK_DETECT_RDREG_SIZE 32

/* FIELD: MEAS_RESULT */
/* DESCRIPTION: */
/*   PPM internal measurement block result */
#define PPM_LOCK_DETECT_RDREG_MEAS_RESULT_OFFSET 0x00000000
#define PPM_LOCK_DETECT_RDREG_MEAS_RESULT_BITWIDTH 0x00000010
#define PPM_LOCK_DETECT_RDREG_MEAS_RESULT_MASK 0x0000FFFF
#define PPM_LOCK_DETECT_RDREG_MEAS_RESULT_ACCESS JUPITER_CSR_READ_ONLY
#define PPM_LOCK_DETECT_RDREG_MEAS_RESULT_RESET_VALUE 0x00000000

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   PPM lock indicator */
#define PPM_LOCK_DETECT_RDREG_LOCK_A_OFFSET 0x00000010
#define PPM_LOCK_DETECT_RDREG_LOCK_A_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_RDREG_LOCK_A_MASK 0x00010000
#define PPM_LOCK_DETECT_RDREG_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define PPM_LOCK_DETECT_RDREG_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: MEAS_ACK_A */
/* DESCRIPTION: */
/*   PPM internal measurement block ack indicator */
#define PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_OFFSET 0x00000011
#define PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_MASK 0x00020000
#define PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_ACCESS JUPITER_CSR_READ_ONLY
#define PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PPM_LOCK_DETECT_REG1 */
/* DESCRIPTION: */
/*   Configuration for ppm detect block */
/* ------------------------------------- */
#define PPM_LOCK_DETECT_REG1_ADDR 0x00000180
#define PPM_LOCK_DETECT_REG1_SIZE 32

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Enable for block */
#define PPM_LOCK_DETECT_REG1_EN_A_OFFSET 0x00000000
#define PPM_LOCK_DETECT_REG1_EN_A_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG1_EN_A_MASK 0x00000001
#define PPM_LOCK_DETECT_REG1_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_EN_A_RESET_VALUE 0x00000000

/* FIELD: FREEZE_A */
/* DESCRIPTION: */
/*   When asserted, freezes the block */
#define PPM_LOCK_DETECT_REG1_FREEZE_A_OFFSET 0x00000001
#define PPM_LOCK_DETECT_REG1_FREEZE_A_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG1_FREEZE_A_MASK 0x00000002
#define PPM_LOCK_DETECT_REG1_FREEZE_A_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_FREEZE_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_EN_NT */
/* DESCRIPTION: */
/*   When asserted, allows the ppm detect block to attempt to recover after a ppm error. */
#define PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_OFFSET 0x00000002
#define PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_MASK 0x00000004
#define PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_RESET_EN_B_NT */
/* DESCRIPTION: */
/*   When asserted (active low) allows the ppm detect block to reset the dlpf */
#define PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_OFFSET 0x00000003
#define PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_MASK 0x00000008
#define PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block timing window */
#define PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_OFFSET 0x00000005
#define PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_MASK 0x000001E0
#define PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_RESET_VALUE 0x00000000

/* FIELD: FREQ_LOCK_THRESHOLD_NT */
/* DESCRIPTION: */
/*   Value that specifies lock for ppm. Absolute measurement value must be less than this value to lock. */
#define PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_OFFSET 0x00000010
#define PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_BITWIDTH 0x00000010
#define PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_MASK 0xFFFF0000
#define PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PPM_LOCK_DETECT_REG2 */
/* DESCRIPTION: */
/*   Configuration for ppm detect block */
/* ------------------------------------- */
#define PPM_LOCK_DETECT_REG2_ADDR 0x00000184
#define PPM_LOCK_DETECT_REG2_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block frequency target */
#define PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_OFFSET 0x00000000
#define PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_MASK 0x0000FFFF
#define PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait when block enabled prior to measuring ppm error */
#define PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_OFFSET 0x00000010
#define PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_BITWIDTH 0x0000000F
#define PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_MASK 0x7FFF0000
#define PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PPM_LOCK_DETECT_REG3 */
/* DESCRIPTION: */
/*   Configuration for ppm detect block */
/* ------------------------------------- */
#define PPM_LOCK_DETECT_REG3_ADDR 0x00000188
#define PPM_LOCK_DETECT_REG3_SIZE 32

/* FIELD: LOCK_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait between measurement runs when locked */
#define PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_OFFSET 0x00000000
#define PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_BITWIDTH 0x0000000F
#define PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_MASK 0x00007FFF
#define PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: MEAS_REQ_A */
/* DESCRIPTION: */
/*   PPM internal measurement block request */
#define PPM_LOCK_DETECT_REG3_MEAS_REQ_A_OFFSET 0x0000000F
#define PPM_LOCK_DETECT_REG3_MEAS_REQ_A_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG3_MEAS_REQ_A_MASK 0x00008000
#define PPM_LOCK_DETECT_REG3_MEAS_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG3_MEAS_REQ_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait while asserting dlpf reset during recovery */
#define PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_OFFSET 0x00000010
#define PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_BITWIDTH 0x0000000F
#define PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_MASK 0x7FFF0000
#define PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: CLK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selection for ppm detector block. 0 - vcodiv 1 - pclk */
#define PPM_LOCK_DETECT_REG3_CLK_SEL_NT_OFFSET 0x0000001F
#define PPM_LOCK_DETECT_REG3_CLK_SEL_NT_BITWIDTH 0x00000001
#define PPM_LOCK_DETECT_REG3_CLK_SEL_NT_MASK 0x80000000
#define PPM_LOCK_DETECT_REG3_CLK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PPM_LOCK_DETECT_REG3_CLK_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PRAM */
/* DESCRIPTION: */
/*   PRAM interface control */
/* ------------------------------------- */
#define PRAM_ADDR 0x0000018C
#define PRAM_SIZE 32

/* FIELD: ADDR_NT */
/* DESCRIPTION: */
/*   PRAM interface register */
#define PRAM_ADDR_NT_OFFSET 0x00000000
#define PRAM_ADDR_NT_BITWIDTH 0x00000010
#define PRAM_ADDR_NT_MASK 0x0000FFFF
#define PRAM_ADDR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PRAM_ADDR_NT_RESET_VALUE 0x00000000

/* FIELD: CRC_CLR_A */
/* DESCRIPTION: */
/*   Sets PRAM CRC to 0 when asserted. PRAM clock must be operational. */
#define PRAM_CRC_CLR_A_OFFSET 0x00000010
#define PRAM_CRC_CLR_A_BITWIDTH 0x00000001
#define PRAM_CRC_CLR_A_MASK 0x00010000
#define PRAM_CRC_CLR_A_ACCESS JUPITER_CSR_READ_WRITE
#define PRAM_CRC_CLR_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PRAM_RDREG */
/* DESCRIPTION: */
/*   PRAM interface read */
/* ------------------------------------- */
#define PRAM_RDREG_ADDR 0x00000190
#define PRAM_RDREG_SIZE 32

/* FIELD: CRC */
/* DESCRIPTION: */
/*   PRAM interface CRC for most recent write */
#define PRAM_RDREG_CRC_OFFSET 0x00000000
#define PRAM_RDREG_CRC_BITWIDTH 0x00000020
#define PRAM_RDREG_CRC_MASK 0xFFFFFFFF
#define PRAM_RDREG_CRC_ACCESS JUPITER_CSR_READ_ONLY
#define PRAM_RDREG_CRC_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PVT_MEASURE */
/* DESCRIPTION: */
/*   Configuration and observability for pvt measure block */
/* ------------------------------------- */
#define PVT_MEASURE_ADDR 0x00000194
#define PVT_MEASURE_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   Frequency target for pvr measure block */
#define PVT_MEASURE_FREQ_TARGET_NT_OFFSET 0x00000000
#define PVT_MEASURE_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define PVT_MEASURE_FREQ_TARGET_NT_MASK 0x0000FFFF
#define PVT_MEASURE_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PVT_MEASURE_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: RECOVER_EN_NT */
/* DESCRIPTION: */
/*   No function */
#define PVT_MEASURE_RECOVER_EN_NT_OFFSET 0x00000010
#define PVT_MEASURE_RECOVER_EN_NT_BITWIDTH 0x00000001
#define PVT_MEASURE_RECOVER_EN_NT_MASK 0x00010000
#define PVT_MEASURE_RECOVER_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PVT_MEASURE_RECOVER_EN_NT_RESET_VALUE 0x00000000

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   PVT measure request signal. Part of a req/ack interface with pvt_measure_rdreg[ack_a]. */
#define PVT_MEASURE_REQ_A_OFFSET 0x00000011
#define PVT_MEASURE_REQ_A_BITWIDTH 0x00000001
#define PVT_MEASURE_REQ_A_MASK 0x00020000
#define PVT_MEASURE_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define PVT_MEASURE_REQ_A_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   Timing window for pvt measure block */
#define PVT_MEASURE_TIMING_WINDOW_NT_OFFSET 0x00000012
#define PVT_MEASURE_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define PVT_MEASURE_TIMING_WINDOW_NT_MASK 0x003C0000
#define PVT_MEASURE_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PVT_MEASURE_TIMING_WINDOW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PVT_MEASURE_RDREG */
/* DESCRIPTION: */
/*   Configuration and observability for pvt measure block */
/* ------------------------------------- */
#define PVT_MEASURE_RDREG_ADDR 0x00000198
#define PVT_MEASURE_RDREG_SIZE 32

/* FIELD: RESULT */
/* DESCRIPTION: */
/*   Pvt measure block result */
#define PVT_MEASURE_RDREG_RESULT_OFFSET 0x00000000
#define PVT_MEASURE_RDREG_RESULT_BITWIDTH 0x00000010
#define PVT_MEASURE_RDREG_RESULT_MASK 0x0000FFFF
#define PVT_MEASURE_RDREG_RESULT_ACCESS JUPITER_CSR_READ_ONLY
#define PVT_MEASURE_RDREG_RESULT_RESET_VALUE 0x00000000

/* FIELD: ACK_A */
/* DESCRIPTION: */
/*   PVt measure block ack signal */
#define PVT_MEASURE_RDREG_ACK_A_OFFSET 0x00000010
#define PVT_MEASURE_RDREG_ACK_A_BITWIDTH 0x00000001
#define PVT_MEASURE_RDREG_ACK_A_MASK 0x00010000
#define PVT_MEASURE_RDREG_ACK_A_ACCESS JUPITER_CSR_READ_ONLY
#define PVT_MEASURE_RDREG_ACK_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RST_AFE_CMN */
/* DESCRIPTION: */
/*   Overrides the AFE reset signals. These are controlled via the power control state machine in normal operation. */
/* ------------------------------------- */
#define RST_AFE_CMN_ADDR 0x0000019C
#define RST_AFE_CMN_SIZE 32

/* FIELD: ATEST_ADC_BA */
/* DESCRIPTION: */
/*   CMN atest ADC reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_ATEST_ADC_BA_OFFSET 0x00000000
#define RST_AFE_CMN_ATEST_ADC_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_ATEST_ADC_BA_MASK 0x00000001
#define RST_AFE_CMN_ATEST_ADC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_ATEST_ADC_BA_RESET_VALUE 0x00000000

/* FIELD: ATEST_PMON_BA */
/* DESCRIPTION: */
/*   CMN atest process monitor reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_ATEST_PMON_BA_OFFSET 0x00000001
#define RST_AFE_CMN_ATEST_PMON_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_ATEST_PMON_BA_MASK 0x00000002
#define RST_AFE_CMN_ATEST_PMON_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_ATEST_PMON_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_DCO_BA */
/* DESCRIPTION: */
/*   CMN clkgen dco reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_CLKGEN_DCO_BA_OFFSET 0x00000002
#define RST_AFE_CMN_CLKGEN_DCO_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_DCO_BA_MASK 0x00000004
#define RST_AFE_CMN_CLKGEN_DCO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_DCO_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_POSTDIV_BA */
/* DESCRIPTION: */
/*   Reset signal register override for CLKGEN POSTDIV */
/*   0 - Block is in reset */
/*   1 - Block is out of reset */
#define RST_AFE_CMN_CLKGEN_POSTDIV_BA_OFFSET 0x00000003
#define RST_AFE_CMN_CLKGEN_POSTDIV_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_POSTDIV_BA_MASK 0x00000008
#define RST_AFE_CMN_CLKGEN_POSTDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_POSTDIV_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_REFDIV_BA */
/* DESCRIPTION: */
/*   Reset signal register override for CLKGEN REFDIV */
/*   0 - Block is in reset */
/*   1 - Block is out of reset */
#define RST_AFE_CMN_CLKGEN_REFDIV_BA_OFFSET 0x00000004
#define RST_AFE_CMN_CLKGEN_REFDIV_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_REFDIV_BA_MASK 0x00000010
#define RST_AFE_CMN_CLKGEN_REFDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_REFDIV_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_BA */
/* DESCRIPTION: */
/*   CMN clkgen reset (all blocks except DCO, the PCLK post-divider and the reference divider.  */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_CLKGEN_BA_OFFSET 0x00000005
#define RST_AFE_CMN_CLKGEN_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_BA_MASK 0x00000020
#define RST_AFE_CMN_CLKGEN_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_PCLK_BA */
/* DESCRIPTION: */
/*   CMN clkgen pclk divider reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_CLKGEN_PCLK_BA_OFFSET 0x00000006
#define RST_AFE_CMN_CLKGEN_PCLK_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_PCLK_BA_MASK 0x00000040
#define RST_AFE_CMN_CLKGEN_PCLK_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_PCLK_BA_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_DIV_BA */
/* DESCRIPTION: */
/*   CMN clkgen termcal clock divider reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_TERMCAL_DIV_BA_OFFSET 0x00000007
#define RST_AFE_CMN_TERMCAL_DIV_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_TERMCAL_DIV_BA_MASK 0x00000080
#define RST_AFE_CMN_TERMCAL_DIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_TERMCAL_DIV_BA_RESET_VALUE 0x00000000

/* FIELD: CLKABC_BA */
/* DESCRIPTION: */
/*   Reset for dividers associated with generation of clocka, clockb and clockc. All three clocks are disabled when asserted.  */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_CMN_CLKABC_BA_OFFSET 0x00000008
#define RST_AFE_CMN_CLKABC_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKABC_BA_MASK 0x00000100
#define RST_AFE_CMN_CLKABC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKABC_BA_RESET_VALUE 0x00000000

/* FIELD: CLKGEN_OCCDIV_BA */
/* DESCRIPTION: */
/*   Reset for the OCC clock generator. Disables OCC clocks to the lanes when asserted.  */
/*   1 - OCC clocks enabled */
/*   0 - OCC clocks in reset. */
#define RST_AFE_CMN_CLKGEN_OCCDIV_BA_OFFSET 0x00000009
#define RST_AFE_CMN_CLKGEN_OCCDIV_BA_BITWIDTH 0x00000001
#define RST_AFE_CMN_CLKGEN_OCCDIV_BA_MASK 0x00000200
#define RST_AFE_CMN_CLKGEN_OCCDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_CMN_CLKGEN_OCCDIV_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RST_DBE_CMN */
/* DESCRIPTION: */
/*   Overrides the AFE reset signals. These are controlled via the power control state machine in normal operation. */
/* ------------------------------------- */
#define RST_DBE_CMN_ADDR 0x000001A0
#define RST_DBE_CMN_SIZE 32

/* FIELD: PPM_LOCK_DETECT_BA */
/* DESCRIPTION: */
/*   Reset signal register override for ppm lock */
/*   0 - Block is in reset */
/*   1 - Block is out of reset */
#define RST_DBE_CMN_PPM_LOCK_DETECT_BA_OFFSET 0x00000000
#define RST_DBE_CMN_PPM_LOCK_DETECT_BA_BITWIDTH 0x00000001
#define RST_DBE_CMN_PPM_LOCK_DETECT_BA_MASK 0x00000001
#define RST_DBE_CMN_PPM_LOCK_DETECT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_CMN_PPM_LOCK_DETECT_BA_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset signal register override for vco adapt */
/*   0 - Block is in reset */
/*   1 - Block is out of reset */
#define RST_DBE_CMN_VCO_ADAPT_BA_OFFSET 0x00000001
#define RST_DBE_CMN_VCO_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_CMN_VCO_ADAPT_BA_MASK 0x00000002
#define RST_DBE_CMN_VCO_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_CMN_VCO_ADAPT_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_CMN */
/* DESCRIPTION: */
/*   CMN sequencing control */
/* ------------------------------------- */
#define SEQ_CNTRL_CMN_ADDR 0x000001A4
#define SEQ_CNTRL_CMN_SIZE 32

/* FIELD: DONE_NT */
/* DESCRIPTION: */
/*   Unused */
#define SEQ_CNTRL_CMN_DONE_NT_OFFSET 0x00000000
#define SEQ_CNTRL_CMN_DONE_NT_BITWIDTH 0x00000001
#define SEQ_CNTRL_CMN_DONE_NT_MASK 0x00000001
#define SEQ_CNTRL_CMN_DONE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_CMN_DONE_NT_RESET_VALUE 0x00000000

/* FIELD: LCPLL_LOCK_A */
/* DESCRIPTION: */
/*   Drives the external lcpll_lock signal */
#define SEQ_CNTRL_CMN_LCPLL_LOCK_A_OFFSET 0x00000001
#define SEQ_CNTRL_CMN_LCPLL_LOCK_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_CMN_LCPLL_LOCK_A_MASK 0x00000002
#define SEQ_CNTRL_CMN_LCPLL_LOCK_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_CMN_LCPLL_LOCK_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SRAM0_CFG */
/* DESCRIPTION: */
/*   SRAM0 Configuration Register */
/* ------------------------------------- */
#define SRAM0_CFG_ADDR 0x000001A8
#define SRAM0_CFG_SIZE 32

/* FIELD: RD_DATA_PIPELINE_STAGES_A */
/* DESCRIPTION: */
/*   Number of RD Data pipeline stages */
#define SRAM0_CFG_RD_DATA_PIPELINE_STAGES_A_OFFSET 0x00000000
#define SRAM0_CFG_RD_DATA_PIPELINE_STAGES_A_BITWIDTH 0x00000003
#define SRAM0_CFG_RD_DATA_PIPELINE_STAGES_A_MASK 0x00000007
#define SRAM0_CFG_RD_DATA_PIPELINE_STAGES_A_ACCESS JUPITER_CSR_READ_WRITE
#define SRAM0_CFG_RD_DATA_PIPELINE_STAGES_A_RESET_VALUE 0x00000001

/* FIELD: TM_NT */
/* DESCRIPTION: */
/*   SRAM TM value */
#define SRAM0_CFG_TM_NT_OFFSET 0x00000008
#define SRAM0_CFG_TM_NT_BITWIDTH 0x00000007
#define SRAM0_CFG_TM_NT_MASK 0x00007F00
#define SRAM0_CFG_TM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SRAM0_CFG_TM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SWITCHCLK_DBE_CMN */
/* DESCRIPTION: */
/*   Overrides for the DBE clock muxing. */
/* ------------------------------------- */
#define SWITCHCLK_DBE_CMN_ADDR 0x000001AC
#define SWITCHCLK_DBE_CMN_SIZE 32

/* FIELD: LSREF_DIV_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - LSREF_DIV clock is selected */
#define SWITCHCLK_DBE_CMN_LSREF_DIV_SEL_NT_OFFSET 0x00000000
#define SWITCHCLK_DBE_CMN_LSREF_DIV_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_LSREF_DIV_SEL_NT_MASK 0x00000001
#define SWITCHCLK_DBE_CMN_LSREF_DIV_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_LSREF_DIV_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: VCODIV_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - VCO_DIV clock is selected */
#define SWITCHCLK_DBE_CMN_VCODIV_SEL_NT_OFFSET 0x00000001
#define SWITCHCLK_DBE_CMN_VCODIV_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_VCODIV_SEL_NT_MASK 0x00000002
#define SWITCHCLK_DBE_CMN_VCODIV_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_VCODIV_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: PCLK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - PCLK clock is selected */
#define SWITCHCLK_DBE_CMN_PCLK_SEL_NT_OFFSET 0x00000002
#define SWITCHCLK_DBE_CMN_PCLK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_PCLK_SEL_NT_MASK 0x00000004
#define SWITCHCLK_DBE_CMN_PCLK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_PCLK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: PPM_MEAS_DIV_NT */
/* DESCRIPTION: */
/*   Clock divider setting for PPM detector clock. 0 = div1, 1 = div2, 2 = div4 */
#define SWITCHCLK_DBE_CMN_PPM_MEAS_DIV_NT_OFFSET 0x00000003
#define SWITCHCLK_DBE_CMN_PPM_MEAS_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_CMN_PPM_MEAS_DIV_NT_MASK 0x00000018
#define SWITCHCLK_DBE_CMN_PPM_MEAS_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_PPM_MEAS_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_DIV_NT */
/* DESCRIPTION: */
/*   Clock divider setting for VCO adapt clock. 0 = div1, 1 = div2, 2 = div4 */
#define SWITCHCLK_DBE_CMN_VCO_ADAPT_DIV_NT_OFFSET 0x00000005
#define SWITCHCLK_DBE_CMN_VCO_ADAPT_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_CMN_VCO_ADAPT_DIV_NT_MASK 0x00000060
#define SWITCHCLK_DBE_CMN_VCO_ADAPT_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_VCO_ADAPT_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: MASTER_FAST_DIV_NT */
/* DESCRIPTION: */
/*   Fast master clock divider setting. 0 - div1, 1 - div2, 2 - div4, 3 - div8 */
#define SWITCHCLK_DBE_CMN_MASTER_FAST_DIV_NT_OFFSET 0x00000007
#define SWITCHCLK_DBE_CMN_MASTER_FAST_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_CMN_MASTER_FAST_DIV_NT_MASK 0x00000180
#define SWITCHCLK_DBE_CMN_MASTER_FAST_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_MASTER_FAST_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: MASTER_FAST_SEL_NT */
/* DESCRIPTION: */
/*   Master clock select. 0 - Normal clock (reference), 1 - Divided down vcodiv clock */
#define SWITCHCLK_DBE_CMN_MASTER_FAST_SEL_NT_OFFSET 0x00000009
#define SWITCHCLK_DBE_CMN_MASTER_FAST_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_MASTER_FAST_SEL_NT_MASK 0x00000200
#define SWITCHCLK_DBE_CMN_MASTER_FAST_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_MASTER_FAST_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: MASTER_APB_SEL_NT */
/* DESCRIPTION: */
/*   Master clock select. 0 - Normal (reference), 1 - APB clock. Applied laster (after master_fast_sel) */
#define SWITCHCLK_DBE_CMN_MASTER_APB_SEL_NT_OFFSET 0x0000000A
#define SWITCHCLK_DBE_CMN_MASTER_APB_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_MASTER_APB_SEL_NT_MASK 0x00000400
#define SWITCHCLK_DBE_CMN_MASTER_APB_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_MASTER_APB_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: SRAM_FAST_SEL_NT */
/* DESCRIPTION: */
/*   SRAM fast mode select. 0 = normal operation, 1 = SRAM operates at 2x frequency of master clock */
#define SWITCHCLK_DBE_CMN_SRAM_FAST_SEL_NT_OFFSET 0x0000000B
#define SWITCHCLK_DBE_CMN_SRAM_FAST_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_SRAM_FAST_SEL_NT_MASK 0x00000800
#define SWITCHCLK_DBE_CMN_SRAM_FAST_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_SRAM_FAST_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: CLKB_EN_NT */
/* DESCRIPTION: */
/*   Enables clkb */
/*   0  clkb is reference clock */
/*   1  clkb is 26.5625/8 MHz, when lcpll locked */
#define SWITCHCLK_DBE_CMN_CLKB_EN_NT_OFFSET 0x0000000C
#define SWITCHCLK_DBE_CMN_CLKB_EN_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_CMN_CLKB_EN_NT_MASK 0x00001000
#define SWITCHCLK_DBE_CMN_CLKB_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_CMN_CLKB_EN_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: AFE_OCTERM_RX */
/* DESCRIPTION: */
/*   Configuration register for Rx termination mode. Override for Rx termination code. Controlled by termination calibration state machine in normal operation. */
/* ------------------------------------- */
#define AFE_OCTERM_RX_ADDR 0x02000000
#define AFE_OCTERM_RX_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Overrides ACC termination controls */
#define AFE_OCTERM_RX_BYPASS_ENA_A_OFFSET 0x00000000
#define AFE_OCTERM_RX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_OCTERM_RX_BYPASS_ENA_A_MASK 0x00000001
#define AFE_OCTERM_RX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_RX_BYPASS_ENA_A_RESET_VALUE 0x00000001

/* FIELD: ACC_TERM_CAL_NT */
/* DESCRIPTION: */
/*   Termination calibration code (from the term calibration block in common) */
#define AFE_OCTERM_RX_ACC_TERM_CAL_NT_OFFSET 0x00000001
#define AFE_OCTERM_RX_ACC_TERM_CAL_NT_BITWIDTH 0x00000003
#define AFE_OCTERM_RX_ACC_TERM_CAL_NT_MASK 0x0000000E
#define AFE_OCTERM_RX_ACC_TERM_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_RX_ACC_TERM_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: ACC_TERM_MODE_NT */
/* DESCRIPTION: */
/*   Termination mode */
/*   111 - Reserved */
/*   110 - Floating Termination, DC coupled */
/*   101 - Termination to vss, DC coupled */
/*   100 - Reserved */
/*   011 - Reserved */
/*   010 - Floating Termination, onchip AC coupling */
/*   001 - Termination to vss, onchip AC coupling */
/*   000 - High Z */
#define AFE_OCTERM_RX_ACC_TERM_MODE_NT_OFFSET 0x00000004
#define AFE_OCTERM_RX_ACC_TERM_MODE_NT_BITWIDTH 0x00000003
#define AFE_OCTERM_RX_ACC_TERM_MODE_NT_MASK 0x00000070
#define AFE_OCTERM_RX_ACC_TERM_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_RX_ACC_TERM_MODE_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: ANLT_MON */
/* DESCRIPTION: */
/*   ANLT monitor control */
/* ------------------------------------- */
#define ANLT_MON_ADDR 0x02000004
#define ANLT_MON_SIZE 32

/* FIELD: ZERO_A */
/* DESCRIPTION: */
/*   ANLT monitor zero control. When asserted, zeroes the monitor buffer */
#define ANLT_MON_ZERO_A_OFFSET 0x00000000
#define ANLT_MON_ZERO_A_BITWIDTH 0x00000001
#define ANLT_MON_ZERO_A_MASK 0x00000001
#define ANLT_MON_ZERO_A_ACCESS JUPITER_CSR_READ_WRITE
#define ANLT_MON_ZERO_A_RESET_VALUE 0x00000000

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   ANLT monitor enable */
/*   0 - Disabled */
/*   1 - Enabled */
/*   Note that logical analyzer clock must be set to the internal transmit clock */
#define ANLT_MON_EN_A_OFFSET 0x00000001
#define ANLT_MON_EN_A_BITWIDTH 0x00000001
#define ANLT_MON_EN_A_MASK 0x00000002
#define ANLT_MON_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define ANLT_MON_EN_A_RESET_VALUE 0x00000000

/* FIELD: SEL_NT */
/* DESCRIPTION: */
/*   ANLT monitor source select */
/*   0 - Reserved */
/*   1 - Reserved */
/*   2 - Clause 136/162 RX frames */
/*   3 - Clause 136/162 TX frames */
/*   4 - Clause 72/92 RX frames */
/*   5 - Clause 72/92 TX frames */
#define ANLT_MON_SEL_NT_OFFSET 0x00000002
#define ANLT_MON_SEL_NT_BITWIDTH 0x00000003
#define ANLT_MON_SEL_NT_MASK 0x0000001C
#define ANLT_MON_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define ANLT_MON_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_ON_FULL_NT */
/* DESCRIPTION: */
/*   ANLT monitor stop on full control */
/*   0 - Does not stop on full. Most recent frames will be available */
/*   1 - Stops on full.  */
#define ANLT_MON_STOP_ON_FULL_NT_OFFSET 0x00000005
#define ANLT_MON_STOP_ON_FULL_NT_BITWIDTH 0x00000001
#define ANLT_MON_STOP_ON_FULL_NT_MASK 0x00000020
#define ANLT_MON_STOP_ON_FULL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define ANLT_MON_STOP_ON_FULL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ANLT_MON_RDREG */
/* DESCRIPTION: */
/*   ANLT monitor status */
/* ------------------------------------- */
#define ANLT_MON_RDREG_ADDR 0x02000008
#define ANLT_MON_RDREG_SIZE 32

/* FIELD: FULL_A */
/* DESCRIPTION: */
/*   ANLT monitor full indicator */
/*   0 - Not full */
/*   1 - Full */
#define ANLT_MON_RDREG_FULL_A_OFFSET 0x00000000
#define ANLT_MON_RDREG_FULL_A_BITWIDTH 0x00000001
#define ANLT_MON_RDREG_FULL_A_MASK 0x00000001
#define ANLT_MON_RDREG_FULL_A_ACCESS JUPITER_CSR_READ_ONLY
#define ANLT_MON_RDREG_FULL_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_RDREG1 */
/* DESCRIPTION: */
/*   Accumulator lte regb threshold */
/* ------------------------------------- */
#define COMPUTE_ALU_RDREG1_ADDR 0x0200000C
#define COMPUTE_ALU_RDREG1_SIZE 32

/* FIELD: ACCUM_GTE_REGA_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Accumulator Greater-than-equal-to GTE_REGA */
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGA_OUT_NT_OFFSET 0x00000000
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGA_OUT_NT_BITWIDTH 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGA_OUT_NT_MASK 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGA_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGA_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: ACCUM_GTE_REGB_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Accumulator Greater-than-equal-to GTE_REGB */
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGB_OUT_NT_OFFSET 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGB_OUT_NT_BITWIDTH 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGB_OUT_NT_MASK 0x00000002
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGB_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG1_ACCUM_GTE_REGB_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: ACCUM_LTE_REGA_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Accumulator Less-than-equal-to LTE_REGA */
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGA_OUT_NT_OFFSET 0x00000002
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGA_OUT_NT_BITWIDTH 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGA_OUT_NT_MASK 0x00000004
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGA_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGA_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: ACCUM_LTE_REGB_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Accumulator Less-than-equal-to LTE_REGB */
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGB_OUT_NT_OFFSET 0x00000003
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGB_OUT_NT_BITWIDTH 0x00000001
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGB_OUT_NT_MASK 0x00000008
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGB_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG1_ACCUM_LTE_REGB_OUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_RDREG2 */
/* DESCRIPTION: */
/*   div out */
/* ------------------------------------- */
#define COMPUTE_ALU_RDREG2_ADDR 0x02000010
#define COMPUTE_ALU_RDREG2_SIZE 32

/* FIELD: DIV_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Divider */
#define COMPUTE_ALU_RDREG2_DIV_OUT_NT_OFFSET 0x00000000
#define COMPUTE_ALU_RDREG2_DIV_OUT_NT_BITWIDTH 0x00000010
#define COMPUTE_ALU_RDREG2_DIV_OUT_NT_MASK 0x0000FFFF
#define COMPUTE_ALU_RDREG2_DIV_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG2_DIV_OUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_RDREG3 */
/* DESCRIPTION: */
/*   Mult out */
/* ------------------------------------- */
#define COMPUTE_ALU_RDREG3_ADDR 0x02000014
#define COMPUTE_ALU_RDREG3_SIZE 32

/* FIELD: MULT_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Multiplier */
#define COMPUTE_ALU_RDREG3_MULT_OUT_NT_OFFSET 0x00000000
#define COMPUTE_ALU_RDREG3_MULT_OUT_NT_BITWIDTH 0x00000010
#define COMPUTE_ALU_RDREG3_MULT_OUT_NT_MASK 0x0000FFFF
#define COMPUTE_ALU_RDREG3_MULT_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG3_MULT_OUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_RDREG4 */
/* DESCRIPTION: */
/*   Accumulator output */
/* ------------------------------------- */
#define COMPUTE_ALU_RDREG4_ADDR 0x02000018
#define COMPUTE_ALU_RDREG4_SIZE 32

/* FIELD: ACCUM_OUT_NT */
/* DESCRIPTION: */
/*   Output of ALU Accumulator */
#define COMPUTE_ALU_RDREG4_ACCUM_OUT_NT_OFFSET 0x00000000
#define COMPUTE_ALU_RDREG4_ACCUM_OUT_NT_BITWIDTH 0x00000010
#define COMPUTE_ALU_RDREG4_ACCUM_OUT_NT_MASK 0x0000FFFF
#define COMPUTE_ALU_RDREG4_ACCUM_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define COMPUTE_ALU_RDREG4_ACCUM_OUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG1 */
/* DESCRIPTION: */
/*   Keep last division data */
/* ------------------------------------- */
#define COMPUTE_ALU_REG1_ADDR 0x0200001C
#define COMPUTE_ALU_REG1_SIZE 32

/* FIELD: LOAD_EXTERNAL_NUM_A */
/* DESCRIPTION: */
/*   Control register, if set high, divider numerator uses compute_alu_external_numer_value s4.11, otherwise it is based on sum(ffe .* numer_mask) s4.7 */
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_NUM_A_OFFSET 0x00000000
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_NUM_A_BITWIDTH 0x00000001
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_NUM_A_MASK 0x00000001
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_NUM_A_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_NUM_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_EXTERNAL_DENOM_A */
/* DESCRIPTION: */
/*   Control register, if set high, divider denominator uses compute_alu_external_denom_value s4.11, otherwise it is based on sum(ffe .* denom_mask) s4.7 */
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_DENOM_A_OFFSET 0x00000001
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_DENOM_A_BITWIDTH 0x00000001
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_DENOM_A_MASK 0x00000002
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_DENOM_A_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG1_LOAD_EXTERNAL_DENOM_A_RESET_VALUE 0x00000000

/* FIELD: RESET_ACCUM_A */
/* DESCRIPTION: */
/*   Control bit which clears the accumulator to 0 */
#define COMPUTE_ALU_REG1_RESET_ACCUM_A_OFFSET 0x00000002
#define COMPUTE_ALU_REG1_RESET_ACCUM_A_BITWIDTH 0x00000001
#define COMPUTE_ALU_REG1_RESET_ACCUM_A_MASK 0x00000004
#define COMPUTE_ALU_REG1_RESET_ACCUM_A_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG1_RESET_ACCUM_A_RESET_VALUE 0x00000000

/* FIELD: KEEP_LAST_DIV_A */
/* DESCRIPTION: */
/*   Control register, if set high, the divide operation will not overwrite the last alu_div value. If multiple operations on the resulting divide is required, setting this control will allow time to be saved, as the divide iteration does not need to be repeated. */
#define COMPUTE_ALU_REG1_KEEP_LAST_DIV_A_OFFSET 0x00000003
#define COMPUTE_ALU_REG1_KEEP_LAST_DIV_A_BITWIDTH 0x00000001
#define COMPUTE_ALU_REG1_KEEP_LAST_DIV_A_MASK 0x00000008
#define COMPUTE_ALU_REG1_KEEP_LAST_DIV_A_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG1_KEEP_LAST_DIV_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG2 */
/* DESCRIPTION: */
/*   External numer value */
/* ------------------------------------- */
#define COMPUTE_ALU_REG2_ADDR 0x02000020
#define COMPUTE_ALU_REG2_SIZE 32

/* FIELD: EXTERNAL_NUMER_VALUE_NT */
/* DESCRIPTION: */
/*   When load_external_num is set to 1, this value is used in the ALU numerator computations */
#define COMPUTE_ALU_REG2_EXTERNAL_NUMER_VALUE_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG2_EXTERNAL_NUMER_VALUE_NT_BITWIDTH 0x00000010
#define COMPUTE_ALU_REG2_EXTERNAL_NUMER_VALUE_NT_MASK 0x0000FFFF
#define COMPUTE_ALU_REG2_EXTERNAL_NUMER_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG2_EXTERNAL_NUMER_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG3 */
/* DESCRIPTION: */
/*   External denominator */
/* ------------------------------------- */
#define COMPUTE_ALU_REG3_ADDR 0x02000024
#define COMPUTE_ALU_REG3_SIZE 32

/* FIELD: EXTERNAL_DENOM_VALUE_NT */
/* DESCRIPTION: */
/*   When load_external_num is set to 1, this value is used in the ALU denominator computations */
#define COMPUTE_ALU_REG3_EXTERNAL_DENOM_VALUE_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG3_EXTERNAL_DENOM_VALUE_NT_BITWIDTH 0x00000010
#define COMPUTE_ALU_REG3_EXTERNAL_DENOM_VALUE_NT_MASK 0x0000FFFF
#define COMPUTE_ALU_REG3_EXTERNAL_DENOM_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG3_EXTERNAL_DENOM_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG4 */
/* DESCRIPTION: */
/*   Mult coef */
/* ------------------------------------- */
#define COMPUTE_ALU_REG4_ADDR 0x02000028
#define COMPUTE_ALU_REG4_SIZE 32

/* FIELD: MULT_COEF_NT */
/* DESCRIPTION: */
/*   Specifies the multiplier scalar, operates on the compute_alu_div_out at the end of each divide cycle */
#define COMPUTE_ALU_REG4_MULT_COEF_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG4_MULT_COEF_NT_BITWIDTH 0x0000000A
#define COMPUTE_ALU_REG4_MULT_COEF_NT_MASK 0x000003FF
#define COMPUTE_ALU_REG4_MULT_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG4_MULT_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG5 */
/* DESCRIPTION: */
/*   Gte Rega threshold */
/* ------------------------------------- */
#define COMPUTE_ALU_REG5_ADDR 0x0200002C
#define COMPUTE_ALU_REG5_SIZE 32

/* FIELD: GTE_REGA_TH_NT */
/* DESCRIPTION: */
/*   Compares the compute_alu_accum_out to this register, if accum is greater-than-or-equal-to this value, compute_alu_accum_gte_rega_out is set high, otherwise low */
#define COMPUTE_ALU_REG5_GTE_REGA_TH_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG5_GTE_REGA_TH_NT_BITWIDTH 0x00000014
#define COMPUTE_ALU_REG5_GTE_REGA_TH_NT_MASK 0x000FFFFF
#define COMPUTE_ALU_REG5_GTE_REGA_TH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG5_GTE_REGA_TH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG6 */
/* DESCRIPTION: */
/*   Gte Regb threshold */
/* ------------------------------------- */
#define COMPUTE_ALU_REG6_ADDR 0x02000030
#define COMPUTE_ALU_REG6_SIZE 32

/* FIELD: GTE_REGB_TH_NT */
/* DESCRIPTION: */
/*   Compares the compute_alu_accum_out to this register, if accum is greater-than-or-equal-to this value, compute_alu_accum_gte_regb_out is set high, otherwise low */
#define COMPUTE_ALU_REG6_GTE_REGB_TH_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG6_GTE_REGB_TH_NT_BITWIDTH 0x00000014
#define COMPUTE_ALU_REG6_GTE_REGB_TH_NT_MASK 0x000FFFFF
#define COMPUTE_ALU_REG6_GTE_REGB_TH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG6_GTE_REGB_TH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG7 */
/* DESCRIPTION: */
/*   Lte Rega threshold */
/* ------------------------------------- */
#define COMPUTE_ALU_REG7_ADDR 0x02000034
#define COMPUTE_ALU_REG7_SIZE 32

/* FIELD: LTE_REGA_TH_NT */
/* DESCRIPTION: */
/*   Compares the compute_alu_accum_out to this register, if accum is less-than-or-equal-to this value, compute_alu_accum_lte_rega_out is set high, otherwise low */
#define COMPUTE_ALU_REG7_LTE_REGA_TH_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG7_LTE_REGA_TH_NT_BITWIDTH 0x00000014
#define COMPUTE_ALU_REG7_LTE_REGA_TH_NT_MASK 0x000FFFFF
#define COMPUTE_ALU_REG7_LTE_REGA_TH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG7_LTE_REGA_TH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: COMPUTE_ALU_REG8 */
/* DESCRIPTION: */
/*   Lte Regb threshold */
/* ------------------------------------- */
#define COMPUTE_ALU_REG8_ADDR 0x02000038
#define COMPUTE_ALU_REG8_SIZE 32

/* FIELD: LTE_REGB_TH_NT */
/* DESCRIPTION: */
/*   Compares the compute_alu_accum_out to this register, if accum is less-than-or-equal-to this value, compute_alu_accum_lte_regb_out is set high, otherwise low */
#define COMPUTE_ALU_REG8_LTE_REGB_TH_NT_OFFSET 0x00000000
#define COMPUTE_ALU_REG8_LTE_REGB_TH_NT_BITWIDTH 0x00000014
#define COMPUTE_ALU_REG8_LTE_REGB_TH_NT_MASK 0x000FFFFF
#define COMPUTE_ALU_REG8_LTE_REGB_TH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define COMPUTE_ALU_REG8_LTE_REGB_TH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_OCLA */
/* DESCRIPTION: */
/*   Logical analyzer clock control */
/* ------------------------------------- */
#define CTL_DBE_OCLA_ADDR 0x0200003C
#define CTL_DBE_OCLA_SIZE 32

/* FIELD: CLKSEL_A */
/* DESCRIPTION: */
/*   Logical analyzer clock select */
/*   0 - Disabled */
/*   1 - Internal RX clock */
/*   2 - External RX Clock */
/*   3 - RX refdiv */
/*   4 - RX synthdiv */
/*   5 - Internal TX clock */
/*   6 - External TX clock */
/*   7 - TX refdiv */
/*   8 - TX synthdiv */
#define CTL_DBE_OCLA_CLKSEL_A_OFFSET 0x00000000
#define CTL_DBE_OCLA_CLKSEL_A_BITWIDTH 0x00000004
#define CTL_DBE_OCLA_CLKSEL_A_MASK 0x0000000F
#define CTL_DBE_OCLA_CLKSEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_CLKSEL_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: CTL_DBE_OCLA_TRIGGER */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define CTL_DBE_OCLA_TRIGGER_ADDR 0x02000040
#define CTL_DBE_OCLA_TRIGGER_SIZE 32

/* FIELD: FIRE_A */
/* DESCRIPTION: */
/*   Trigger signal for Trace buffer */
#define CTL_DBE_OCLA_TRIGGER_FIRE_A_OFFSET 0x00000000
#define CTL_DBE_OCLA_TRIGGER_FIRE_A_BITWIDTH 0x00000001
#define CTL_DBE_OCLA_TRIGGER_FIRE_A_MASK 0x00000001
#define CTL_DBE_OCLA_TRIGGER_FIRE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_TRIGGER_FIRE_A_RESET_VALUE 0x00000000

/* FIELD: TYPE_A */
/* DESCRIPTION: */
/*   Type */
#define CTL_DBE_OCLA_TRIGGER_TYPE_A_OFFSET 0x00000001
#define CTL_DBE_OCLA_TRIGGER_TYPE_A_BITWIDTH 0x00000004
#define CTL_DBE_OCLA_TRIGGER_TYPE_A_MASK 0x0000001E
#define CTL_DBE_OCLA_TRIGGER_TYPE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_TRIGGER_TYPE_A_RESET_VALUE 0x00000000

/* FIELD: BIT_ID_A */
/* DESCRIPTION: */
/*   Bit Select */
#define CTL_DBE_OCLA_TRIGGER_BIT_ID_A_OFFSET 0x00000008
#define CTL_DBE_OCLA_TRIGGER_BIT_ID_A_BITWIDTH 0x00000005
#define CTL_DBE_OCLA_TRIGGER_BIT_ID_A_MASK 0x00001F00
#define CTL_DBE_OCLA_TRIGGER_BIT_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_TRIGGER_BIT_ID_A_RESET_VALUE 0x00000000

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_DBE_OCLA_TRIGGER_BLOCK_ID_A_OFFSET 0x00000010
#define CTL_DBE_OCLA_TRIGGER_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_OCLA_TRIGGER_BLOCK_ID_A_MASK 0x00FF0000
#define CTL_DBE_OCLA_TRIGGER_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_TRIGGER_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_DBE_OCLA_TRIGGER_SIGNAL_ID_A_OFFSET 0x00000018
#define CTL_DBE_OCLA_TRIGGER_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_OCLA_TRIGGER_SIGNAL_ID_A_MASK 0xFF000000
#define CTL_DBE_OCLA_TRIGGER_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_OCLA_TRIGGER_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TRACE_BUFFER */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define CTL_DBE_TRACE_BUFFER_ADDR 0x02000044
#define CTL_DBE_TRACE_BUFFER_SIZE 32

/* FIELD: MODE_A */
/* DESCRIPTION: */
/*   Trace Buffer Mode- 00 ADC - 01 internal tbus - 10/11 Raw adc  */
#define CTL_DBE_TRACE_BUFFER_MODE_A_OFFSET 0x00000000
#define CTL_DBE_TRACE_BUFFER_MODE_A_BITWIDTH 0x00000002
#define CTL_DBE_TRACE_BUFFER_MODE_A_MASK 0x00000003
#define CTL_DBE_TRACE_BUFFER_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TRACE_BUFFER_MODE_A_RESET_VALUE 0x00000000

/* FIELD: RDADDR_A */
/* DESCRIPTION: */
/*   Trace Buffer entry to read */
#define CTL_DBE_TRACE_BUFFER_RDADDR_A_OFFSET 0x00000002
#define CTL_DBE_TRACE_BUFFER_RDADDR_A_BITWIDTH 0x0000000D
#define CTL_DBE_TRACE_BUFFER_RDADDR_A_MASK 0x00007FFC
#define CTL_DBE_TRACE_BUFFER_RDADDR_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TRACE_BUFFER_RDADDR_A_RESET_VALUE 0x00000000

/* FIELD: SAMPLES_PER_CYCLE_A */
/* DESCRIPTION: */
/*   Samples captured in Trace buffer (per cycle) */
#define CTL_DBE_TRACE_BUFFER_SAMPLES_PER_CYCLE_A_OFFSET 0x00000010
#define CTL_DBE_TRACE_BUFFER_SAMPLES_PER_CYCLE_A_BITWIDTH 0x00000005
#define CTL_DBE_TRACE_BUFFER_SAMPLES_PER_CYCLE_A_MASK 0x001F0000
#define CTL_DBE_TRACE_BUFFER_SAMPLES_PER_CYCLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TRACE_BUFFER_SAMPLES_PER_CYCLE_A_RESET_VALUE 0x00000000

/* FIELD: RJUPITER_ADC_SELECT_A */
/* DESCRIPTION: */
/*   Selects what Raw ADC to capture in Trace buffer (per cycle) */
#define CTL_DBE_TRACE_BUFFER_RJUPITER_ADC_SELECT_A_OFFSET 0x00000015
#define CTL_DBE_TRACE_BUFFER_RJUPITER_ADC_SELECT_A_BITWIDTH 0x00000006
#define CTL_DBE_TRACE_BUFFER_RJUPITER_ADC_SELECT_A_MASK 0x07E00000
#define CTL_DBE_TRACE_BUFFER_RJUPITER_ADC_SELECT_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TRACE_BUFFER_RJUPITER_ADC_SELECT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TRACE_BUFFER */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DAT_DBE_TRACE_BUFFER_ADDR 0x02000048
#define DAT_DBE_TRACE_BUFFER_SIZE 32

/* FIELD: RDDATA */
/* DESCRIPTION: */
/*   Trace Buffer Readout */
#define DAT_DBE_TRACE_BUFFER_RDDATA_OFFSET 0x00000000
#define DAT_DBE_TRACE_BUFFER_RDDATA_BITWIDTH 0x00000020
#define DAT_DBE_TRACE_BUFFER_RDDATA_MASK 0xFFFFFFFF
#define DAT_DBE_TRACE_BUFFER_RDDATA_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TRACE_BUFFER_RDDATA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG0 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG0_ADDR 0x0200004C
#define DBE_RX_DBG_SAMPLE_AFE_REG0_SIZE 32

/* FIELD: BLOCK0_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK0_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK0_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK0_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK0_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK1_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK1_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK1_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK1_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK1_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK2_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK2_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK2_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK2_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG0_BLOCK2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG1 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG1_ADDR 0x02000050
#define DBE_RX_DBG_SAMPLE_AFE_REG1_SIZE 32

/* FIELD: BLOCK3_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK3_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK3_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK3_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK3_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK4_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK4_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK4_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK4_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK4_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK5_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK5_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK5_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK5_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG1_BLOCK5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG10 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG10_ADDR 0x02000054
#define DBE_RX_DBG_SAMPLE_AFE_REG10_SIZE 32

/* FIELD: BLOCK30_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK30_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK30_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK30_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK30_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK30_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK31_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK31_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK31_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK31_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK31_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK31_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK32_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK32_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK32_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK32_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK32_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG10_BLOCK32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG11 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG11_ADDR 0x02000058
#define DBE_RX_DBG_SAMPLE_AFE_REG11_SIZE 32

/* FIELD: BLOCK33_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK33_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK33_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK33_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK33_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK33_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK34_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK34_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK34_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK34_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK34_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK34_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK35_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK35_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK35_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK35_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK35_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG11_BLOCK35_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG2 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG2_ADDR 0x0200005C
#define DBE_RX_DBG_SAMPLE_AFE_REG2_SIZE 32

/* FIELD: BLOCK6_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK6_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK6_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK6_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK6_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK7_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK7_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK7_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK7_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK7_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK8_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK8_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK8_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK8_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG2_BLOCK8_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG3 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG3_ADDR 0x02000060
#define DBE_RX_DBG_SAMPLE_AFE_REG3_SIZE 32

/* FIELD: BLOCK9_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK9_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK9_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK9_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK9_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK10_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK10_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK10_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK10_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK10_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK11_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK11_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK11_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK11_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG3_BLOCK11_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG4 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG4_ADDR 0x02000064
#define DBE_RX_DBG_SAMPLE_AFE_REG4_SIZE 32

/* FIELD: BLOCK12_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK12_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK12_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK12_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK12_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK13_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK13_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK13_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK13_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK13_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK14_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK14_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK14_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK14_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG4_BLOCK14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG5 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG5_ADDR 0x02000068
#define DBE_RX_DBG_SAMPLE_AFE_REG5_SIZE 32

/* FIELD: BLOCK15_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK15_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK15_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK15_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK15_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK16_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK16_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK16_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK16_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK16_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK16_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK17_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK17_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK17_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK17_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK17_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG5_BLOCK17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG6 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG6_ADDR 0x0200006C
#define DBE_RX_DBG_SAMPLE_AFE_REG6_SIZE 32

/* FIELD: BLOCK18_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK18_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK18_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK18_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK18_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK18_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK19_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK19_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK19_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK19_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK19_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK19_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK20_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK20_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK20_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK20_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK20_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG6_BLOCK20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG7 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG7_ADDR 0x02000070
#define DBE_RX_DBG_SAMPLE_AFE_REG7_SIZE 32

/* FIELD: BLOCK21_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK21_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK21_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK21_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK21_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK21_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK22_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK22_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK22_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK22_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK22_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK22_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK23_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK23_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK23_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK23_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK23_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG7_BLOCK23_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG8 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG8_ADDR 0x02000074
#define DBE_RX_DBG_SAMPLE_AFE_REG8_SIZE 32

/* FIELD: BLOCK24_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK24_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK24_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK24_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK24_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK24_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK25_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK25_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK25_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK25_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK25_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK25_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK26_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK26_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK26_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK26_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK26_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG8_BLOCK26_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_AFE_REG9 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_AFE_REG9_ADDR 0x02000078
#define DBE_RX_DBG_SAMPLE_AFE_REG9_SIZE 32

/* FIELD: BLOCK27_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK27_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK27_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK27_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK27_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK27_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK28_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK28_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK28_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK28_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK28_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK28_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK29_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK29_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK29_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK29_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK29_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_AFE_REG9_BLOCK29_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG0 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG0_ADDR 0x0200007C
#define DBE_RX_DBG_SAMPLE_FFE_REG0_SIZE 32

/* FIELD: BLOCK0_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK0_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK0_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK0_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK0_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK1_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK1_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK1_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK1_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK1_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK2_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK2_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK2_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK2_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG0_BLOCK2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG1 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG1_ADDR 0x02000080
#define DBE_RX_DBG_SAMPLE_FFE_REG1_SIZE 32

/* FIELD: BLOCK3_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK3_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK3_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK3_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK3_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK4_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK4_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK4_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK4_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK4_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK5_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK5_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK5_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK5_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG1_BLOCK5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG2 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG2_ADDR 0x02000084
#define DBE_RX_DBG_SAMPLE_FFE_REG2_SIZE 32

/* FIELD: BLOCK6_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK6_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK6_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK6_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK6_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK7_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK7_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK7_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK7_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK7_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK8_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK8_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK8_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK8_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG2_BLOCK8_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG3 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG3_ADDR 0x02000088
#define DBE_RX_DBG_SAMPLE_FFE_REG3_SIZE 32

/* FIELD: BLOCK9_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK9_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK9_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK9_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK9_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK10_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK10_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK10_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK10_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK10_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK11_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK11_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK11_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK11_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG3_BLOCK11_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG4 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG4_ADDR 0x0200008C
#define DBE_RX_DBG_SAMPLE_FFE_REG4_SIZE 32

/* FIELD: BLOCK12_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK12_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK12_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK12_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK12_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK13_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK13_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK13_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK13_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK13_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK14_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK14_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK14_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK14_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG4_BLOCK14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_FFE_REG5 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_FFE_REG5_ADDR 0x02000090
#define DBE_RX_DBG_SAMPLE_FFE_REG5_SIZE 32

/* FIELD: BLOCK15_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_FFE_REG5_BLOCK15_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_FFE_REG5_BLOCK15_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_FFE_REG5_BLOCK15_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_FFE_REG5_BLOCK15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_FFE_REG5_BLOCK15_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG0 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_ADDR 0x02000094
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_SIZE 32

/* FIELD: BLOCK0_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK0_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK0_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK0_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK0_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK1_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK1_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK1_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK1_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK1_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK2_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK2_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK2_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK2_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG0_BLOCK2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG1 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_ADDR 0x02000098
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_SIZE 32

/* FIELD: BLOCK3_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK3_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK3_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK3_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK3_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK4_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK4_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK4_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK4_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK4_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK5_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK5_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK5_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK5_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG1_BLOCK5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG2 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_ADDR 0x0200009C
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_SIZE 32

/* FIELD: BLOCK6_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK6_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK6_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK6_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK6_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK7_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK7_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK7_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK7_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK7_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK8_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK8_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK8_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK8_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG2_BLOCK8_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG3 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_ADDR 0x020000A0
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_SIZE 32

/* FIELD: BLOCK9_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK9_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK9_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK9_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK9_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK10_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK10_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK10_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK10_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK10_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK11_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK11_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK11_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK11_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG3_BLOCK11_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG4 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_ADDR 0x020000A4
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_SIZE 32

/* FIELD: BLOCK12_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK12_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK12_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK12_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK12_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK13_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK13_NT_OFFSET 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK13_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK13_NT_MASK 0x0003FE00
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK13_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK14_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK14_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK14_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK14_NT_MASK 0x07FC0000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG4_BLOCK14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_ERR_REG5 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_ADDR 0x020000A8
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_SIZE 32

/* FIELD: BLOCK15_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_BLOCK15_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_BLOCK15_NT_BITWIDTH 0x00000009
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_BLOCK15_NT_MASK 0x000001FF
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_BLOCK15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_ERR_REG5_BLOCK15_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_RGN_REG0 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_ADDR 0x020000AC
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_SIZE 32

/* FIELD: BLOCK0_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK0_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK0_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK0_NT_MASK 0x00000003
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK0_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK1_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK1_NT_OFFSET 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK1_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK1_NT_MASK 0x0000000C
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK1_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK2_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK2_NT_OFFSET 0x00000004
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK2_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK2_NT_MASK 0x00000030
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK2_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK3_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK3_NT_OFFSET 0x00000006
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK3_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK3_NT_MASK 0x000000C0
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK3_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK4_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK4_NT_OFFSET 0x00000008
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK4_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK4_NT_MASK 0x00000300
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK4_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK5_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK5_NT_OFFSET 0x0000000A
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK5_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK5_NT_MASK 0x00000C00
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK5_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK6_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK6_NT_OFFSET 0x0000000C
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK6_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK6_NT_MASK 0x00003000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK6_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK7_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK7_NT_OFFSET 0x0000000E
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK7_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK7_NT_MASK 0x0000C000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK7_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK8_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK8_NT_OFFSET 0x00000010
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK8_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK8_NT_MASK 0x00030000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK8_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK9_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK9_NT_OFFSET 0x00000012
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK9_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK9_NT_MASK 0x000C0000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK9_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK10_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK10_NT_OFFSET 0x00000014
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK10_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK10_NT_MASK 0x00300000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK10_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK11_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK11_NT_OFFSET 0x00000016
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK11_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK11_NT_MASK 0x00C00000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK11_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK12_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK12_NT_OFFSET 0x00000018
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK12_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK12_NT_MASK 0x03000000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK12_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK13_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK13_NT_OFFSET 0x0000001A
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK13_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK13_NT_MASK 0x0C000000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK13_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK14_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK14_NT_OFFSET 0x0000001C
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK14_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK14_NT_MASK 0x30000000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG0_BLOCK14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DBE_RX_DBG_SAMPLE_QZD_RGN_REG1 */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_ADDR 0x020000B0
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_SIZE 32

/* FIELD: BLOCK15_NT */
/* DESCRIPTION: */
/*   Reserved */
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_BLOCK15_NT_OFFSET 0x00000000
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_BLOCK15_NT_BITWIDTH 0x00000002
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_BLOCK15_NT_MASK 0x00000003
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_BLOCK15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define DBE_RX_DBG_SAMPLE_QZD_RGN_REG1_BLOCK15_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DIG_RX_LA_SAMPLER_CTL */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define DIG_RX_LA_SAMPLER_CTL_ADDR 0x020000B4
#define DIG_RX_LA_SAMPLER_CTL_SIZE 32

/* FIELD: ICTL_RX_DBG_TRIGGER_A */
/* DESCRIPTION: */
/*    debug sampler trigger signal */
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_TRIGGER_A_OFFSET 0x00000000
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_TRIGGER_A_BITWIDTH 0x00000001
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_TRIGGER_A_MASK 0x00000001
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_DBG_DS_SAMPLE_DELAY_A */
/* DESCRIPTION: */
/*   cyles delay between DFE outputs to FFE input. 1 ~ 14 are valid settings */
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_DS_SAMPLE_DELAY_A_OFFSET 0x00000001
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_DS_SAMPLE_DELAY_A_BITWIDTH 0x00000004
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_DS_SAMPLE_DELAY_A_MASK 0x0000001E
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_DS_SAMPLE_DELAY_A_ACCESS JUPITER_CSR_READ_WRITE
#define DIG_RX_LA_SAMPLER_CTL_ICTL_RX_DBG_DS_SAMPLE_DELAY_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: FAST_SIM */
/* DESCRIPTION: */
/*   Unused */
/* ------------------------------------- */
#define FAST_SIM_ADDR 0x020000B8
#define FAST_SIM_SIZE 32

/* FIELD: MODE_NT */
/* DESCRIPTION: */
/*   Unused */
#define FAST_SIM_MODE_NT_OFFSET 0x00000000
#define FAST_SIM_MODE_NT_BITWIDTH 0x00000001
#define FAST_SIM_MODE_NT_MASK 0x00000001
#define FAST_SIM_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define FAST_SIM_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PD_AFE_RX */
/* DESCRIPTION: */
/*   Overrides for the AFE Rx power down signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define PD_AFE_RX_ADDR 0x020000BC
#define PD_AFE_RX_SIZE 32

/* FIELD: BIAS_BA */
/* DESCRIPTION: */
/*   1 - normal operation */
/*   0 - afe_rx_bias powered down */
#define PD_AFE_RX_BIAS_BA_OFFSET 0x00000000
#define PD_AFE_RX_BIAS_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_BIAS_BA_MASK 0x00000001
#define PD_AFE_RX_BIAS_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_BIAS_BA_RESET_VALUE 0x00000001

/* FIELD: BSCAN_NT */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx bscan powered down */
#define PD_AFE_RX_BSCAN_NT_OFFSET 0x00000001
#define PD_AFE_RX_BSCAN_NT_BITWIDTH 0x00000001
#define PD_AFE_RX_BSCAN_NT_MASK 0x00000002
#define PD_AFE_RX_BSCAN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_BSCAN_NT_RESET_VALUE 0x00000000

/* FIELD: CTLE_VGA_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx ctle and vga powered down */
#define PD_AFE_RX_CTLE_VGA_BA_OFFSET 0x00000002
#define PD_AFE_RX_CTLE_VGA_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_CTLE_VGA_BA_MASK 0x00000004
#define PD_AFE_RX_CTLE_VGA_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_CTLE_VGA_BA_RESET_VALUE 0x00000000

/* FIELD: DS_DIRECT_SYNTH_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx sscm powered down */
#define PD_AFE_RX_DS_DIRECT_SYNTH_BA_OFFSET 0x00000003
#define PD_AFE_RX_DS_DIRECT_SYNTH_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_DS_DIRECT_SYNTH_BA_MASK 0x00000008
#define PD_AFE_RX_DS_DIRECT_SYNTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_DS_DIRECT_SYNTH_BA_RESET_VALUE 0x00000000

/* FIELD: REG_BITCK_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx bitck regulator powered down */
#define PD_AFE_RX_REG_BITCK_BA_OFFSET 0x00000004
#define PD_AFE_RX_REG_BITCK_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_REG_BITCK_BA_MASK 0x00000010
#define PD_AFE_RX_REG_BITCK_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_REG_BITCK_BA_RESET_VALUE 0x00000000

/* FIELD: REG_HSREF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx hsfef regulator powered down */
#define PD_AFE_RX_REG_HSREF_BA_OFFSET 0x00000005
#define PD_AFE_RX_REG_HSREF_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_REG_HSREF_BA_MASK 0x00000020
#define PD_AFE_RX_REG_HSREF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_REG_HSREF_BA_RESET_VALUE 0x00000000

/* FIELD: SIGDET_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx signal detector powered down */
#define PD_AFE_RX_SIGDET_BA_OFFSET 0x00000006
#define PD_AFE_RX_SIGDET_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_SIGDET_BA_MASK 0x00000040
#define PD_AFE_RX_SIGDET_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_SIGDET_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_DCDIQ_BA */
/* DESCRIPTION: */
/*   Power down register override for TIADC DCC/IQ */
/*   0 - Block is power down */
/*   1 - Block is power up */
#define PD_AFE_RX_TIADC_DCDIQ_BA_OFFSET 0x00000007
#define PD_AFE_RX_TIADC_DCDIQ_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_DCDIQ_BA_MASK 0x00000080
#define PD_AFE_RX_TIADC_DCDIQ_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_DCDIQ_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_BA */
/* DESCRIPTION: */
/*   Global power down register control for tiadc. This signal is used to decode the other power downs depending on adc count */
#define PD_AFE_RX_TIADC_BA_OFFSET 0x00000008
#define PD_AFE_RX_TIADC_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_BA_MASK 0x00000100
#define PD_AFE_RX_TIADC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_OVR_ENA_A */
/* DESCRIPTION: */
/*   TIADC override enable. 0 - tiadc_ba is used to control powerdown. 1 - Other registers are used */
#define PD_AFE_RX_TIADC_OVR_ENA_A_OFFSET 0x00000009
#define PD_AFE_RX_TIADC_OVR_ENA_A_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_OVR_ENA_A_MASK 0x00000200
#define PD_AFE_RX_TIADC_OVR_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_OVR_ENA_A_RESET_VALUE 0x00000000

/* FIELD: TIADC_EIGHTH_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx tiadc powered down for 1/8th rate (all higer rates must aslo be powered down) */
#define PD_AFE_RX_TIADC_EIGHTH_BA_OFFSET 0x0000000A
#define PD_AFE_RX_TIADC_EIGHTH_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_EIGHTH_BA_MASK 0x00000400
#define PD_AFE_RX_TIADC_EIGHTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_EIGHTH_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_HALF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx tiadc powered down for 1/2 rate */
#define PD_AFE_RX_TIADC_HALF_BA_OFFSET 0x0000000B
#define PD_AFE_RX_TIADC_HALF_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_HALF_BA_MASK 0x00000800
#define PD_AFE_RX_TIADC_HALF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_HALF_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_QUARTER_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx tiadc powered down for 1/4 rate (all higer rates must aslo be powered down) */
#define PD_AFE_RX_TIADC_QUARTER_BA_OFFSET 0x0000000C
#define PD_AFE_RX_TIADC_QUARTER_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_QUARTER_BA_MASK 0x00001000
#define PD_AFE_RX_TIADC_QUARTER_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_QUARTER_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_REMAINDER_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx tiadc powered down (all higer rates must aslo be powered down) */
#define PD_AFE_RX_TIADC_REMAINDER_BA_OFFSET 0x0000000D
#define PD_AFE_RX_TIADC_REMAINDER_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_REMAINDER_BA_MASK 0x00002000
#define PD_AFE_RX_TIADC_REMAINDER_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_REMAINDER_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_SIXTEENTH_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe rx tiadc powered down for 1/16th rate (all higer rates must aslo be powered down) */
#define PD_AFE_RX_TIADC_SIXTEENTH_BA_OFFSET 0x0000000E
#define PD_AFE_RX_TIADC_SIXTEENTH_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_TIADC_SIXTEENTH_BA_MASK 0x00004000
#define PD_AFE_RX_TIADC_SIXTEENTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_TIADC_SIXTEENTH_BA_RESET_VALUE 0x00000000

/* FIELD: HSREFMUX_BA */
/* DESCRIPTION: */
/*   Power down register override for HSREFMUX */
/*   0 - Block is power down */
/*   1 - Block is power up */
#define PD_AFE_RX_HSREFMUX_BA_OFFSET 0x0000000F
#define PD_AFE_RX_HSREFMUX_BA_BITWIDTH 0x00000001
#define PD_AFE_RX_HSREFMUX_BA_MASK 0x00008000
#define PD_AFE_RX_HSREFMUX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_RX_HSREFMUX_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: POWER_CNTRL_RX */
/* DESCRIPTION: */
/*   Overrides for the AFE Rx regulator signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define POWER_CNTRL_RX_ADDR 0x020000C0
#define POWER_CNTRL_RX_SIZE 32

/* FIELD: VREG_BLEED_BITCK_ENA_NT */
/* DESCRIPTION: */
/*   1 - RX Bitck Regulator bleed current is on */
/*   0 - RX Bitck Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_RX_VREG_BLEED_BITCK_ENA_NT_OFFSET 0x00000000
#define POWER_CNTRL_RX_VREG_BLEED_BITCK_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_RX_VREG_BLEED_BITCK_ENA_NT_MASK 0x00000001
#define POWER_CNTRL_RX_VREG_BLEED_BITCK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_RX_VREG_BLEED_BITCK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: VREG_BLEED_HSREF_ENA_NT */
/* DESCRIPTION: */
/*   1 - RX Hsref Regulator bleed current is on */
/*   0 - RX Hsref Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_RX_VREG_BLEED_HSREF_ENA_NT_OFFSET 0x00000001
#define POWER_CNTRL_RX_VREG_BLEED_HSREF_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_RX_VREG_BLEED_HSREF_ENA_NT_MASK 0x00000002
#define POWER_CNTRL_RX_VREG_BLEED_HSREF_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_RX_VREG_BLEED_HSREF_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: DS_DCOREG_BLEED_ENA_NT */
/* DESCRIPTION: */
/*   1 - RX DCO regulator bleed current is on */
/*   0 - RX DCO regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_RX_DS_DCOREG_BLEED_ENA_NT_OFFSET 0x00000002
#define POWER_CNTRL_RX_DS_DCOREG_BLEED_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_RX_DS_DCOREG_BLEED_ENA_NT_MASK 0x00000004
#define POWER_CNTRL_RX_DS_DCOREG_BLEED_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_RX_DS_DCOREG_BLEED_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RATE_CNTRL_RX */
/* DESCRIPTION: */
/*   Overrides for the AFE Rx postdiv signals. These are controlled by the rate control state machine in normal operation. */
/* ------------------------------------- */
#define RATE_CNTRL_RX_ADDR 0x020000C4
#define RATE_CNTRL_RX_SIZE 32

/* FIELD: POSTDIV_NT */
/* DESCRIPTION: */
/*   11 - Unused */
/*   10 - RX bitclock divided by 4 */
/*   01 - RX bitclock divided by 2 */
/*   00 - RX bitclock divided by 1 */
#define RATE_CNTRL_RX_POSTDIV_NT_OFFSET 0x00000000
#define RATE_CNTRL_RX_POSTDIV_NT_BITWIDTH 0x00000002
#define RATE_CNTRL_RX_POSTDIV_NT_MASK 0x00000003
#define RATE_CNTRL_RX_POSTDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RATE_CNTRL_RX_POSTDIV_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RST_AFE_RX */
/* DESCRIPTION: */
/*   Overrides for the AFE Rx reset signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define RST_AFE_RX_ADDR 0x020000C8
#define RST_AFE_RX_SIZE 32

/* FIELD: DS_DCO_BA */
/* DESCRIPTION: */
/*   RX sscm dco reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_DS_DCO_BA_OFFSET 0x00000000
#define RST_AFE_RX_DS_DCO_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_DS_DCO_BA_MASK 0x00000001
#define RST_AFE_RX_DS_DCO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_DS_DCO_BA_RESET_VALUE 0x00000000

/* FIELD: DS_DIRECT_SYNTH_BA */
/* DESCRIPTION: */
/*   RX sscm reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_DS_DIRECT_SYNTH_BA_OFFSET 0x00000001
#define RST_AFE_RX_DS_DIRECT_SYNTH_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_DS_DIRECT_SYNTH_BA_MASK 0x00000002
#define RST_AFE_RX_DS_DIRECT_SYNTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_DS_DIRECT_SYNTH_BA_RESET_VALUE 0x00000000

/* FIELD: POSTDIV_BA */
/* DESCRIPTION: */
/*   RX sscm postdivider reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_POSTDIV_BA_OFFSET 0x00000002
#define RST_AFE_RX_POSTDIV_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_POSTDIV_BA_MASK 0x00000004
#define RST_AFE_RX_POSTDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_POSTDIV_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_BA */
/* DESCRIPTION: */
/*   RX tiadc reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_TIADC_BA_OFFSET 0x00000003
#define RST_AFE_RX_TIADC_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_TIADC_BA_MASK 0x00000008
#define RST_AFE_RX_TIADC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_TIADC_BA_RESET_VALUE 0x00000000

/* FIELD: TIADC_CLOCK_GEN_BA */
/* DESCRIPTION: */
/*   RX tiadc clock generator reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_TIADC_CLOCK_GEN_BA_OFFSET 0x00000004
#define RST_AFE_RX_TIADC_CLOCK_GEN_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_TIADC_CLOCK_GEN_BA_MASK 0x00000010
#define RST_AFE_RX_TIADC_CLOCK_GEN_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_TIADC_CLOCK_GEN_BA_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_BA */
/* DESCRIPTION: */
/*   RX clockgen divider that generates divided synthesizer output.  */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_SYNTH_DIV_BA_OFFSET 0x00000005
#define RST_AFE_RX_SYNTH_DIV_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_SYNTH_DIV_BA_MASK 0x00000020
#define RST_AFE_RX_SYNTH_DIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_SYNTH_DIV_BA_RESET_VALUE 0x00000000

/* FIELD: RXREF_DIV_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_AFE_RX_RXREF_DIV_BA_OFFSET 0x00000006
#define RST_AFE_RX_RXREF_DIV_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_RXREF_DIV_BA_MASK 0x00000040
#define RST_AFE_RX_RXREF_DIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_RXREF_DIV_BA_RESET_VALUE 0x00000000

/* FIELD: REF_HS_LOOPTIME_BA */
/* DESCRIPTION: */
/*   RX divider that generates the RX derived hs reference */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_REF_HS_LOOPTIME_BA_OFFSET 0x00000007
#define RST_AFE_RX_REF_HS_LOOPTIME_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_REF_HS_LOOPTIME_BA_MASK 0x00000080
#define RST_AFE_RX_REF_HS_LOOPTIME_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_REF_HS_LOOPTIME_BA_RESET_VALUE 0x00000000

/* FIELD: REF_LS_LOOPTIME_BA */
/* DESCRIPTION: */
/*   RX divider that generates the RX derived ls reference */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_RX_REF_LS_LOOPTIME_BA_OFFSET 0x00000008
#define RST_AFE_RX_REF_LS_LOOPTIME_BA_BITWIDTH 0x00000001
#define RST_AFE_RX_REF_LS_LOOPTIME_BA_MASK 0x00000100
#define RST_AFE_RX_REF_LS_LOOPTIME_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_RX_REF_LS_LOOPTIME_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RST_DBE_RX */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx reset signals. These are controlled by the master control state machine in normal operation. */
/* ------------------------------------- */
#define RST_DBE_RX_ADDR 0x020000CC
#define RST_DBE_RX_SIZE 32

/* FIELD: SYNC_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_SYNC_BA_OFFSET 0x00000000
#define RST_DBE_RX_SYNC_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_SYNC_BA_MASK 0x00000001
#define RST_DBE_RX_SYNC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_SYNC_BA_RESET_VALUE 0x00000000

/* FIELD: DFX_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DFX_BA_OFFSET 0x00000001
#define RST_DBE_RX_DFX_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DFX_BA_MASK 0x00000002
#define RST_DBE_RX_DFX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DFX_BA_RESET_VALUE 0x00000000

/* FIELD: EQFFE_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_EQFFE_BA_OFFSET 0x00000002
#define RST_DBE_RX_EQFFE_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_EQFFE_BA_MASK 0x00000004
#define RST_DBE_RX_EQFFE_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_EQFFE_BA_RESET_VALUE 0x00000000

/* FIELD: EQDFE_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_EQDFE_BA_OFFSET 0x00000003
#define RST_DBE_RX_EQDFE_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_EQDFE_BA_MASK 0x00000008
#define RST_DBE_RX_EQDFE_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_EQDFE_BA_RESET_VALUE 0x00000000

/* FIELD: DEMAPPER_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DEMAPPER_BA_OFFSET 0x00000004
#define RST_DBE_RX_DEMAPPER_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DEMAPPER_BA_MASK 0x00000010
#define RST_DBE_RX_DEMAPPER_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DEMAPPER_BA_RESET_VALUE 0x00000000

/* FIELD: GB_FIFO_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_GB_FIFO_BA_OFFSET 0x00000005
#define RST_DBE_RX_GB_FIFO_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_GB_FIFO_BA_MASK 0x00000020
#define RST_DBE_RX_GB_FIFO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_GB_FIFO_BA_RESET_VALUE 0x00000000

/* FIELD: DATA_OUT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DATA_OUT_BA_OFFSET 0x00000006
#define RST_DBE_RX_DATA_OUT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DATA_OUT_BA_MASK 0x00000040
#define RST_DBE_RX_DATA_OUT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DATA_OUT_BA_RESET_VALUE 0x00000000

/* FIELD: DATABIST_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DATABIST_BA_OFFSET 0x00000007
#define RST_DBE_RX_DATABIST_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DATABIST_BA_MASK 0x00000080
#define RST_DBE_RX_DATABIST_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DATABIST_BA_RESET_VALUE 0x00000000

/* FIELD: DATABLOCK_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DATABLOCK_BA_OFFSET 0x00000008
#define RST_DBE_RX_DATABLOCK_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DATABLOCK_BA_MASK 0x00000100
#define RST_DBE_RX_DATABLOCK_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DATABLOCK_BA_RESET_VALUE 0x00000000

/* FIELD: SSCM_DLPF_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_SSCM_DLPF_BA_OFFSET 0x00000009
#define RST_DBE_RX_SSCM_DLPF_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_SSCM_DLPF_BA_MASK 0x00000200
#define RST_DBE_RX_SSCM_DLPF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_SSCM_DLPF_BA_RESET_VALUE 0x00000000

/* FIELD: SSCM_FRACDIV_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_SSCM_FRACDIV_BA_OFFSET 0x0000000A
#define RST_DBE_RX_SSCM_FRACDIV_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_SSCM_FRACDIV_BA_MASK 0x00000400
#define RST_DBE_RX_SSCM_FRACDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_SSCM_FRACDIV_BA_RESET_VALUE 0x00000000

/* FIELD: DPLL_DLPF_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DPLL_DLPF_BA_OFFSET 0x0000000B
#define RST_DBE_RX_DPLL_DLPF_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DPLL_DLPF_BA_MASK 0x00000800
#define RST_DBE_RX_DPLL_DLPF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DPLL_DLPF_BA_RESET_VALUE 0x00000000

/* FIELD: DPLL_TED_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DPLL_TED_BA_OFFSET 0x0000000C
#define RST_DBE_RX_DPLL_TED_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DPLL_TED_BA_MASK 0x00001000
#define RST_DBE_RX_DPLL_TED_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DPLL_TED_BA_RESET_VALUE 0x00000000

/* FIELD: AGC_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_AGC_ADAPT_BA_OFFSET 0x0000000D
#define RST_DBE_RX_AGC_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_AGC_ADAPT_BA_MASK 0x00002000
#define RST_DBE_RX_AGC_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_AGC_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: CTLE_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_CTLE_ADAPT_BA_OFFSET 0x0000000E
#define RST_DBE_RX_CTLE_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_CTLE_ADAPT_BA_MASK 0x00004000
#define RST_DBE_RX_CTLE_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_CTLE_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: FFE_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_FFE_ADAPT_BA_OFFSET 0x0000000F
#define RST_DBE_RX_FFE_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_FFE_ADAPT_BA_MASK 0x00008000
#define RST_DBE_RX_FFE_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_FFE_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: DFE_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DFE_ADAPT_BA_OFFSET 0x00000010
#define RST_DBE_RX_DFE_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DFE_ADAPT_BA_MASK 0x00010000
#define RST_DBE_RX_DFE_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DFE_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: PHASE_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_PHASE_ADAPT_BA_OFFSET 0x00000011
#define RST_DBE_RX_PHASE_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_PHASE_ADAPT_BA_MASK 0x00020000
#define RST_DBE_RX_PHASE_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_PHASE_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_VGA_OFFSET_ADAPT_BA_OFFSET 0x00000012
#define RST_DBE_RX_VGA_OFFSET_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_VGA_OFFSET_ADAPT_BA_MASK 0x00040000
#define RST_DBE_RX_VGA_OFFSET_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_VGA_OFFSET_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: DC_OFFSET_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_DC_OFFSET_ADAPT_BA_OFFSET 0x00000013
#define RST_DBE_RX_DC_OFFSET_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_DC_OFFSET_ADAPT_BA_MASK 0x00080000
#define RST_DBE_RX_DC_OFFSET_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_DC_OFFSET_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: SLICER_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_SLICER_ADAPT_BA_OFFSET 0x00000014
#define RST_DBE_RX_SLICER_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_SLICER_ADAPT_BA_MASK 0x00100000
#define RST_DBE_RX_SLICER_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_SLICER_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: TARGET_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_TARGET_ADAPT_BA_OFFSET 0x00000015
#define RST_DBE_RX_TARGET_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_TARGET_ADAPT_BA_MASK 0x00200000
#define RST_DBE_RX_TARGET_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_TARGET_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_VCO_ADAPT_BA_OFFSET 0x00000016
#define RST_DBE_RX_VCO_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_VCO_ADAPT_BA_MASK 0x00400000
#define RST_DBE_RX_VCO_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_VCO_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: PPM_LOCK_DETECT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_RX_PPM_LOCK_DETECT_BA_OFFSET 0x00000017
#define RST_DBE_RX_PPM_LOCK_DETECT_BA_BITWIDTH 0x00000001
#define RST_DBE_RX_PPM_LOCK_DETECT_BA_MASK 0x00800000
#define RST_DBE_RX_PPM_LOCK_DETECT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_RX_PPM_LOCK_DETECT_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX */
/* DESCRIPTION: */
/*   Reserved */
/* ------------------------------------- */
#define RX_ADDR 0x020000D0
#define RX_SIZE 32

/* FIELD: SPARE_NT */
/* DESCRIPTION: */
/*   Spare registers */
#define RX_SPARE_NT_OFFSET 0x00000000
#define RX_SPARE_NT_BITWIDTH 0x00000001
#define RX_SPARE_NT_MASK 0x00000001
#define RX_SPARE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SPARE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ACC */
/* DESCRIPTION: */
/*   Configuration registers for the acc block */
/* ------------------------------------- */
#define RX_ACC_ADDR 0x020000D4
#define RX_ACC_SIZE 32

/* FIELD: RCM_VAL_NT */
/* DESCRIPTION: */
/*   Sets the common mode bias resistance after the AC coupling in the ACC */
/*   10 - 0.25 MOhm */
/*   01 - 0.50 MOhm */
/*   00 - 1.00 MOhm  */
#define RX_ACC_RCM_VAL_NT_OFFSET 0x00000000
#define RX_ACC_RCM_VAL_NT_BITWIDTH 0x00000002
#define RX_ACC_RCM_VAL_NT_MASK 0x00000003
#define RX_ACC_RCM_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ACC_RCM_VAL_NT_RESET_VALUE 0x00000000

/* FIELD: BOOST_NT */
/* DESCRIPTION: */
/*   11 - Max Boost */
/*   00 - Min Boost */
#define RX_ACC_BOOST_NT_OFFSET 0x00000002
#define RX_ACC_BOOST_NT_BITWIDTH 0x00000002
#define RX_ACC_BOOST_NT_MASK 0x0000000C
#define RX_ACC_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ACC_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: TERM_VAL_NT */
/* DESCRIPTION: */
/*   Unused */
#define RX_ACC_TERM_VAL_NT_OFFSET 0x00000004
#define RX_ACC_TERM_VAL_NT_BITWIDTH 0x00000001
#define RX_ACC_TERM_VAL_NT_MASK 0x00000010
#define RX_ACC_TERM_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ACC_TERM_VAL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_BACKGROUND */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_ADDR 0x020000D8
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_SIZE 32

/* FIELD: MU_A */
/* DESCRIPTION: */
/*   When Background_Adapt_Mode is enabled: use this mu instead of foreground version */
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_MU_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_MU_A_BITWIDTH 0x00000005
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_MU_A_MASK 0x0000001F
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_MU_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_MU_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_A */
/* DESCRIPTION: */
/*   When Background_Adapt_Mode is enabled: use this watchdog instead of foreground version. */
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_WATCHDOG_A_OFFSET 0x00000008
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_WATCHDOG_A_BITWIDTH 0x00000005
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_WATCHDOG_A_MASK 0x00001F00
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_BACKGROUND_WATCHDOG_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_BYPASS */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_BYPASS_ADDR 0x020000DC
#define RX_ADAPT_VGA_OFFSET_BYPASS_SIZE 32

/* FIELD: ENABLE_A */
/* DESCRIPTION: */
/*   Enables vga_offset override (Analog Front End DC Offset correction) */
#define RX_ADAPT_VGA_OFFSET_BYPASS_ENABLE_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_BYPASS_ENABLE_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_BYPASS_ENABLE_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_BYPASS_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_BYPASS_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: SETTING_A */
/* DESCRIPTION: */
/*   Sign-Magnitude Representation */
/*   0111 - Max offset */
/*   0000/1000 - Zero offset */
/*   1111 - Min offset */
#define RX_ADAPT_VGA_OFFSET_BYPASS_SETTING_A_OFFSET 0x00000001
#define RX_ADAPT_VGA_OFFSET_BYPASS_SETTING_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_BYPASS_SETTING_A_MASK 0x0000001E
#define RX_ADAPT_VGA_OFFSET_BYPASS_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_BYPASS_SETTING_A_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_CFG */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_CFG_ADDR 0x020000E0
#define RX_ADAPT_VGA_OFFSET_CFG_SIZE 32

/* FIELD: SETTLING_NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue number of clock cycles for Analog to settle to the VGA offset value before adapting to transitionary information. */
#define RX_ADAPT_VGA_OFFSET_CFG_SETTLING_NUM_SAMPLES_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_CFG_SETTLING_NUM_SAMPLES_A_BITWIDTH 0x00000010
#define RX_ADAPT_VGA_OFFSET_CFG_SETTLING_NUM_SAMPLES_A_MASK 0x0000FFFF
#define RX_ADAPT_VGA_OFFSET_CFG_SETTLING_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_CFG_SETTLING_NUM_SAMPLES_A_RESET_VALUE 0x00000004

/* FIELD: SETTING_INIT_A */
/* DESCRIPTION: */
/*   Initializes VGA offset to regvalue during reset */
#define RX_ADAPT_VGA_OFFSET_CFG_SETTING_INIT_A_OFFSET 0x00000010
#define RX_ADAPT_VGA_OFFSET_CFG_SETTING_INIT_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_CFG_SETTING_INIT_A_MASK 0x000F0000
#define RX_ADAPT_VGA_OFFSET_CFG_SETTING_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_CFG_SETTING_INIT_A_RESET_VALUE 0x00000009

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_CTLE */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_CTLE_ADDR 0x020000E4
#define RX_ADAPT_VGA_OFFSET_CTLE_SIZE 32

/* FIELD: ISOLATE_A */
/* DESCRIPTION: */
/*   1 - First stage of the CTLE placed in high-isolation mode to isolate RX path from input pads */
/*   0 - Normal operating mode */
/*   This signal should be ictl_afe_tx_offset_cal_ena_a "or" ictl_rx_ctle_isolate_loopback_a */
#define RX_ADAPT_VGA_OFFSET_CTLE_ISOLATE_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_CTLE_ISOLATE_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTLE_ISOLATE_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTLE_ISOLATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_CTLE_ISOLATE_A_RESET_VALUE 0x00000000

/* FIELD: OFFSET_ENA_NT */
/* DESCRIPTION: */
/*   1 - Calibration codes for CTLE offset are applied to CTLE */
/*   0 - Calibration codes for CTLE offset are zeroed in AFE */
#define RX_ADAPT_VGA_OFFSET_CTLE_OFFSET_ENA_NT_OFFSET 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTLE_OFFSET_ENA_NT_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTLE_OFFSET_ENA_NT_MASK 0x00000002
#define RX_ADAPT_VGA_OFFSET_CTLE_OFFSET_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_CTLE_OFFSET_ENA_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_CTRL */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_CTRL_ADDR 0x020000E8
#define RX_ADAPT_VGA_OFFSET_CTRL_SIZE 32

/* FIELD: START_A */
/* DESCRIPTION: */
/*   Setting to 1 starts the VGA Offset (Analog Front End DC Offset correction). Adapts for watchdog number of clock cycles. Retriggering an adaption after LOCK, requires deasserting to 0, and restarting with a 1. */
#define RX_ADAPT_VGA_OFFSET_CTRL_START_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_CTRL_START_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTRL_START_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_CTRL_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_CTRL_START_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_LMS */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_LMS_ADDR 0x020000EC
#define RX_ADAPT_VGA_OFFSET_LMS_SIZE 32

/* FIELD: INVERT_ENA_A */
/* DESCRIPTION: */
/*   Debug feature: Inverts the VGA Offset Adaption */
#define RX_ADAPT_VGA_OFFSET_LMS_INVERT_ENA_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_LMS_INVERT_ENA_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_LMS_INVERT_ENA_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_LMS_INVERT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_LMS_INVERT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: MIN_SETTING_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable min VGA Offset value applied. */
/*   E.g. if regvalue=2, values below 2 will be modified to 2. */
#define RX_ADAPT_VGA_OFFSET_LMS_MIN_SETTING_A_OFFSET 0x00000001
#define RX_ADAPT_VGA_OFFSET_LMS_MIN_SETTING_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_LMS_MIN_SETTING_A_MASK 0x0000001E
#define RX_ADAPT_VGA_OFFSET_LMS_MIN_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_LMS_MIN_SETTING_A_RESET_VALUE 0x00000000

/* FIELD: MAX_SETTING_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable VGA Offset value applied. */
/*   E.g. if regvalue=28, values above 28 will be modified to 28. */
#define RX_ADAPT_VGA_OFFSET_LMS_MAX_SETTING_A_OFFSET 0x00000005
#define RX_ADAPT_VGA_OFFSET_LMS_MAX_SETTING_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_LMS_MAX_SETTING_A_MASK 0x000001E0
#define RX_ADAPT_VGA_OFFSET_LMS_MAX_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_LMS_MAX_SETTING_A_RESET_VALUE 0x0000000F

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_MEASURE */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_MEASURE_ADDR 0x020000F0
#define RX_ADAPT_VGA_OFFSET_MEASURE_SIZE 32

/* FIELD: HOLD_ENA_A */
/* DESCRIPTION: */
/*   Debug feature - when set to 1 enables single-stepping of adaption FSM */
/*   When set to 1 the FSM will measure the errorterm and HOLD. */
/*   FSM will advance on rising-edge of continue */
#define RX_ADAPT_VGA_OFFSET_MEASURE_HOLD_ENA_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_MEASURE_HOLD_ENA_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUE_A */
/* DESCRIPTION: */
/*   Debug feature - used when hold_ena=1 */
/*   When hold_ena=1 rising edge of this signal will advance the FSM by one adapt cycle */
#define RX_ADAPT_VGA_OFFSET_MEASURE_CONTINUE_A_OFFSET 0x00000001
#define RX_ADAPT_VGA_OFFSET_MEASURE_CONTINUE_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_MEASURE_CONTINUE_A_MASK 0x00000002
#define RX_ADAPT_VGA_OFFSET_MEASURE_CONTINUE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_MEASURE_CONTINUE_A_RESET_VALUE 0x00000000

/* FIELD: NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue num samples to wait before each iteration of adaption - recommendation=0 */
#define RX_ADAPT_VGA_OFFSET_MEASURE_NUM_SAMPLES_A_OFFSET 0x00000002
#define RX_ADAPT_VGA_OFFSET_MEASURE_NUM_SAMPLES_A_BITWIDTH 0x00000008
#define RX_ADAPT_VGA_OFFSET_MEASURE_NUM_SAMPLES_A_MASK 0x000003FC
#define RX_ADAPT_VGA_OFFSET_MEASURE_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_MEASURE_NUM_SAMPLES_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_SETUP */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_SETUP_ADDR 0x020000F4
#define RX_ADAPT_VGA_OFFSET_SETUP_SIZE 32

/* FIELD: MU_A */
/* DESCRIPTION: */
/*   Sets the adaption coefficient for LMS: 2**-regvalue * errorterm per clock cycle of adaption. */
#define RX_ADAPT_VGA_OFFSET_SETUP_MU_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_SETUP_MU_A_BITWIDTH 0x00000005
#define RX_ADAPT_VGA_OFFSET_SETUP_MU_A_MASK 0x0000001F
#define RX_ADAPT_VGA_OFFSET_SETUP_MU_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_MU_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_A */
/* DESCRIPTION: */
/*   Specifies adaption watchdog duration: 2**regvalue number of cycles.  */
/*   E.g. reg value=10 is 1024 clock cycles. */
#define RX_ADAPT_VGA_OFFSET_SETUP_WATCHDOG_A_OFFSET 0x00000008
#define RX_ADAPT_VGA_OFFSET_SETUP_WATCHDOG_A_BITWIDTH 0x00000005
#define RX_ADAPT_VGA_OFFSET_SETUP_WATCHDOG_A_MASK 0x00001F00
#define RX_ADAPT_VGA_OFFSET_SETUP_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_WATCHDOG_A_RESET_VALUE 0x00000000

/* FIELD: MIN_STOP_HI_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   0=stop adaption when transition density is met and falling edge gain change */
/*   1=stop adaption when transition density is met and rising edge gain change */
/*   2=stop adaption when transition density is met and any gain change */
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_STOP_HI_A_OFFSET 0x0000000D
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_STOP_HI_A_BITWIDTH 0x00000002
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_STOP_HI_A_MASK 0x00006000
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_STOP_HI_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_STOP_HI_A_RESET_VALUE 0x00000000

/* FIELD: MIN_NUM_CROSS_TARGET_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the number of transitions required to satisfy lock condition */
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_NUM_CROSS_TARGET_A_OFFSET 0x00000010
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_NUM_CROSS_TARGET_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_NUM_CROSS_TARGET_A_MASK 0x000F0000
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_NUM_CROSS_TARGET_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_NUM_CROSS_TARGET_A_RESET_VALUE 0x00000000

/* FIELD: MIN_GAIN_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the gain of minima detector, recommend setting to 0 to disable feature. */
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_GAIN_A_OFFSET 0x00000014
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_GAIN_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_GAIN_A_MASK 0x00F00000
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_GAIN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_GAIN_A_RESET_VALUE 0x00000000

/* FIELD: MIN_TARGET_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the 2-to-negative-power-of-regvalue target for transition threshold, bigger regvalue means harder to lock */
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_TARGET_A_OFFSET 0x00000018
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_TARGET_A_BITWIDTH 0x00000005
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_TARGET_A_MASK 0x1F000000
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_TARGET_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ADAPT_VGA_OFFSET_SETUP_MIN_TARGET_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ADAPT_VGA_OFFSET_STATUS */
/* DESCRIPTION: */
/*   Status Register for VGA Offset Adaptation Block */
/* ------------------------------------- */
#define RX_ADAPT_VGA_OFFSET_STATUS_ADDR 0x020000F8
#define RX_ADAPT_VGA_OFFSET_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: VGA offset adaption done */
#define RX_ADAPT_VGA_OFFSET_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_ADAPT_VGA_OFFSET_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_STATUS_LOCK_A_MASK 0x00000001
#define RX_ADAPT_VGA_OFFSET_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ADAPT_VGA_OFFSET_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: DERIV_LOCK_A */
/* DESCRIPTION: */
/*   Debug feature  Minima detector is Locked  not recommended for use. */
#define RX_ADAPT_VGA_OFFSET_STATUS_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_ADAPT_VGA_OFFSET_STATUS_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_STATUS_DERIV_LOCK_A_MASK 0x00000002
#define RX_ADAPT_VGA_OFFSET_STATUS_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ADAPT_VGA_OFFSET_STATUS_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Debug feature  Indicates watchdog timeout */
#define RX_ADAPT_VGA_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000002
#define RX_ADAPT_VGA_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_ADAPT_VGA_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000004
#define RX_ADAPT_VGA_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ADAPT_VGA_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: LMS_ERROR_A */
/* DESCRIPTION: */
/*   Debug feature  adaption error can be observed in single-step debug mode. */
#define RX_ADAPT_VGA_OFFSET_STATUS_LMS_ERROR_A_OFFSET 0x00000003
#define RX_ADAPT_VGA_OFFSET_STATUS_LMS_ERROR_A_BITWIDTH 0x00000008
#define RX_ADAPT_VGA_OFFSET_STATUS_LMS_ERROR_A_MASK 0x000007F8
#define RX_ADAPT_VGA_OFFSET_STATUS_LMS_ERROR_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ADAPT_VGA_OFFSET_STATUS_LMS_ERROR_A_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_A */
/* DESCRIPTION: */
/*   Status: readback VGA offset applied */
#define RX_ADAPT_VGA_OFFSET_STATUS_VGA_OFFSET_A_OFFSET 0x0000000B
#define RX_ADAPT_VGA_OFFSET_STATUS_VGA_OFFSET_A_BITWIDTH 0x00000004
#define RX_ADAPT_VGA_OFFSET_STATUS_VGA_OFFSET_A_MASK 0x00007800
#define RX_ADAPT_VGA_OFFSET_STATUS_VGA_OFFSET_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ADAPT_VGA_OFFSET_STATUS_VGA_OFFSET_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_BACKGROUND */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_BACKGROUND_ADDR 0x020000FC
#define RX_AGC_ADAPT_BACKGROUND_SIZE 32

/* FIELD: MU_POS_A */
/* DESCRIPTION: */
/*   When background_sel_ena==1, use this mu_pos_a instead of the foreground version */
#define RX_AGC_ADAPT_BACKGROUND_MU_POS_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_BACKGROUND_MU_POS_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_BACKGROUND_MU_POS_A_MASK 0x0000001F
#define RX_AGC_ADAPT_BACKGROUND_MU_POS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BACKGROUND_MU_POS_A_RESET_VALUE 0x00000000

/* FIELD: MU_NEG_A */
/* DESCRIPTION: */
/*   When Background_Adapt_Mode is enabled:use this mu_neg_a instead of the roeground version */
#define RX_AGC_ADAPT_BACKGROUND_MU_NEG_A_OFFSET 0x00000008
#define RX_AGC_ADAPT_BACKGROUND_MU_NEG_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_BACKGROUND_MU_NEG_A_MASK 0x00001F00
#define RX_AGC_ADAPT_BACKGROUND_MU_NEG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BACKGROUND_MU_NEG_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_A */
/* DESCRIPTION: */
/*   When background_sel_ena==1: use this watchdog instead of the foreground version */
#define RX_AGC_ADAPT_BACKGROUND_WATCHDOG_A_OFFSET 0x00000010
#define RX_AGC_ADAPT_BACKGROUND_WATCHDOG_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_BACKGROUND_WATCHDOG_A_MASK 0x001F0000
#define RX_AGC_ADAPT_BACKGROUND_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BACKGROUND_WATCHDOG_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_BYPASS */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_BYPASS_ADDR 0x02000100
#define RX_AGC_ADAPT_BYPASS_SIZE 32

/* FIELD: ENABLE_A */
/* DESCRIPTION: */
/*   Enables coarse and fine gain override */
#define RX_AGC_ADAPT_BYPASS_ENABLE_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_BYPASS_ENABLE_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_BYPASS_ENABLE_A_MASK 0x00000001
#define RX_AGC_ADAPT_BYPASS_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BYPASS_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: COARSE_A */
/* DESCRIPTION: */
/*   11111 to 11110 - Unused */
/*   11101 - Max VGA Gain */
/*   00000 - Min VGA gain */
#define RX_AGC_ADAPT_BYPASS_COARSE_A_OFFSET 0x00000001
#define RX_AGC_ADAPT_BYPASS_COARSE_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_BYPASS_COARSE_A_MASK 0x0000003E
#define RX_AGC_ADAPT_BYPASS_COARSE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BYPASS_COARSE_A_RESET_VALUE 0x00000010

/* FIELD: FINE_A */
/* DESCRIPTION: */
/*   111111 - Max fine VGA setting */
/*   000000 - Min fine VGA setting */
#define RX_AGC_ADAPT_BYPASS_FINE_A_OFFSET 0x00000006
#define RX_AGC_ADAPT_BYPASS_FINE_A_BITWIDTH 0x00000006
#define RX_AGC_ADAPT_BYPASS_FINE_A_MASK 0x00000FC0
#define RX_AGC_ADAPT_BYPASS_FINE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_BYPASS_FINE_A_RESET_VALUE 0x00000020

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_COARSE */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_COARSE_ADDR 0x02000104
#define RX_AGC_ADAPT_COARSE_SIZE 32

/* FIELD: SETTING_INIT_A */
/* DESCRIPTION: */
/*   Initializes coarse gain to regvalue during reset */
#define RX_AGC_ADAPT_COARSE_SETTING_INIT_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_COARSE_SETTING_INIT_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_COARSE_SETTING_INIT_A_MASK 0x0000001F
#define RX_AGC_ADAPT_COARSE_SETTING_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_COARSE_SETTING_INIT_A_RESET_VALUE 0x00000010

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_CTRL */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_CTRL_ADDR 0x02000108
#define RX_AGC_ADAPT_CTRL_SIZE 32

/* FIELD: START_A */
/* DESCRIPTION: */
/*   Setting to 1 starts the AGC coarse or fine gain adaption depending on the configured mode. Adapts for watchdog number of clock cycles. Retriggering an adaption after lock requires deasserting to 0, and restarting with a 1. */
#define RX_AGC_ADAPT_CTRL_START_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_CTRL_START_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_CTRL_START_A_MASK 0x00000001
#define RX_AGC_ADAPT_CTRL_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_CTRL_START_A_RESET_VALUE 0x00000000

/* FIELD: BACKGROUND_ENA_A */
/* DESCRIPTION: */
/*   Configured to adapt coarse gain when set to 1 */
#define RX_AGC_ADAPT_CTRL_BACKGROUND_ENA_A_OFFSET 0x00000001
#define RX_AGC_ADAPT_CTRL_BACKGROUND_ENA_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_CTRL_BACKGROUND_ENA_A_MASK 0x00000002
#define RX_AGC_ADAPT_CTRL_BACKGROUND_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_CTRL_BACKGROUND_ENA_A_RESET_VALUE 0x00000000

/* FIELD: FOREGROUND_ENA_A */
/* DESCRIPTION: */
/*   Configured to adapt fine gain when set to 1 */
#define RX_AGC_ADAPT_CTRL_FOREGROUND_ENA_A_OFFSET 0x00000002
#define RX_AGC_ADAPT_CTRL_FOREGROUND_ENA_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_CTRL_FOREGROUND_ENA_A_MASK 0x00000004
#define RX_AGC_ADAPT_CTRL_FOREGROUND_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_CTRL_FOREGROUND_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_FINE */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_FINE_ADDR 0x0200010C
#define RX_AGC_ADAPT_FINE_SIZE 32

/* FIELD: SETTING_INIT_A */
/* DESCRIPTION: */
/*   Initializes fine gain to regvalue during reset */
#define RX_AGC_ADAPT_FINE_SETTING_INIT_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_FINE_SETTING_INIT_A_BITWIDTH 0x00000006
#define RX_AGC_ADAPT_FINE_SETTING_INIT_A_MASK 0x0000003F
#define RX_AGC_ADAPT_FINE_SETTING_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_FINE_SETTING_INIT_A_RESET_VALUE 0x00000020

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_LMS */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_LMS_ADDR 0x02000110
#define RX_AGC_ADAPT_LMS_SIZE 32

/* FIELD: INVERT_ENA_A */
/* DESCRIPTION: */
/*   Debug feature: Inverts the AGC Adaption */
#define RX_AGC_ADAPT_LMS_INVERT_ENA_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_LMS_INVERT_ENA_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_LMS_INVERT_ENA_A_MASK 0x00000001
#define RX_AGC_ADAPT_LMS_INVERT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_LMS_INVERT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: MIN_COARSE_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable min coarse gain applied. */
/*   E.g. if regvalue=2, values below 2 will be clipped to 2. */
#define RX_AGC_ADAPT_LMS_MIN_COARSE_A_OFFSET 0x00000001
#define RX_AGC_ADAPT_LMS_MIN_COARSE_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_LMS_MIN_COARSE_A_MASK 0x0000003E
#define RX_AGC_ADAPT_LMS_MIN_COARSE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_LMS_MIN_COARSE_A_RESET_VALUE 0x00000000

/* FIELD: MAX_COARSE_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable max coarse gain applied. */
/*   E.g. if regvalue=28, values above 28 will be clipped to 28. */
#define RX_AGC_ADAPT_LMS_MAX_COARSE_A_OFFSET 0x00000006
#define RX_AGC_ADAPT_LMS_MAX_COARSE_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_LMS_MAX_COARSE_A_MASK 0x000007C0
#define RX_AGC_ADAPT_LMS_MAX_COARSE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_LMS_MAX_COARSE_A_RESET_VALUE 0x0000001F

/* FIELD: MIN_FINE_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable min fine gain applied. */
/*   E.g. if regvalue=2, values below 2 will be clipped to 2. */
#define RX_AGC_ADAPT_LMS_MIN_FINE_A_OFFSET 0x0000000B
#define RX_AGC_ADAPT_LMS_MIN_FINE_A_BITWIDTH 0x00000006
#define RX_AGC_ADAPT_LMS_MIN_FINE_A_MASK 0x0001F800
#define RX_AGC_ADAPT_LMS_MIN_FINE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_LMS_MIN_FINE_A_RESET_VALUE 0x00000000

/* FIELD: MAX_FINE_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable max fine gain applied. */
/*   E.g. if regvalue=28, values above 28 will be clipped to 28. */
#define RX_AGC_ADAPT_LMS_MAX_FINE_A_OFFSET 0x00000011
#define RX_AGC_ADAPT_LMS_MAX_FINE_A_BITWIDTH 0x00000006
#define RX_AGC_ADAPT_LMS_MAX_FINE_A_MASK 0x007E0000
#define RX_AGC_ADAPT_LMS_MAX_FINE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_LMS_MAX_FINE_A_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_MEASURE */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_MEASURE_ADDR 0x02000114
#define RX_AGC_ADAPT_MEASURE_SIZE 32

/* FIELD: HOLD_ENA_A */
/* DESCRIPTION: */
/*   Debug feature - when set to 1 enables single-stepping of adaption FSM */
/*   FSM will advance on rising-edge of continue */
#define RX_AGC_ADAPT_MEASURE_HOLD_ENA_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_MEASURE_HOLD_ENA_A_MASK 0x00000001
#define RX_AGC_ADAPT_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUE_A */
/* DESCRIPTION: */
/*   Debug feature - used when hold_ena=1 */
/*   When hold_ena=1 rising edge of this signal will advance the FSM by one adapt cycle */
#define RX_AGC_ADAPT_MEASURE_CONTINUE_A_OFFSET 0x00000001
#define RX_AGC_ADAPT_MEASURE_CONTINUE_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_MEASURE_CONTINUE_A_MASK 0x00000002
#define RX_AGC_ADAPT_MEASURE_CONTINUE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_MEASURE_CONTINUE_A_RESET_VALUE 0x00000000

/* FIELD: NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue num samples to wait before each iteration of adaption - recommendation=0 */
#define RX_AGC_ADAPT_MEASURE_NUM_SAMPLES_A_OFFSET 0x00000002
#define RX_AGC_ADAPT_MEASURE_NUM_SAMPLES_A_BITWIDTH 0x00000008
#define RX_AGC_ADAPT_MEASURE_NUM_SAMPLES_A_MASK 0x000003FC
#define RX_AGC_ADAPT_MEASURE_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_MEASURE_NUM_SAMPLES_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG1 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG1_ADDR 0x02000118
#define RX_AGC_ADAPT_REG1_SIZE 32

/* FIELD: VGA_COARSE1_LUT0_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT0_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT0_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT0_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT0_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSE1_LUT1_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT1_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT1_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT1_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT1_NT_RESET_VALUE 0x00000001

/* FIELD: VGA_COARSE1_LUT2_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT2_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT2_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT2_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT2_NT_RESET_VALUE 0x00000002

/* FIELD: VGA_COARSE1_LUT3_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT3_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT3_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT3_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT3_NT_RESET_VALUE 0x00000002

/* FIELD: VGA_COARSE1_LUT4_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT4_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT4_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT4_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT4_NT_RESET_VALUE 0x00000002

/* FIELD: VGA_COARSE1_LUT5_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT5_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT5_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT5_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG1_VGA_COARSE1_LUT5_NT_RESET_VALUE 0x00000003

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG10 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG10_ADDR 0x0200011C
#define RX_AGC_ADAPT_REG10_SIZE 32

/* FIELD: VGA_COARSE2_LUT26_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT26_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT26_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT26_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT26_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT26_NT_RESET_VALUE 0x0000000C

/* FIELD: VGA_COARSE2_LUT27_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT27_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT27_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT27_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT27_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT27_NT_RESET_VALUE 0x0000000D

/* FIELD: VGA_COARSE2_LUT28_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT28_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT28_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT28_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT28_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT28_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE2_LUT29_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT29_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT29_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT29_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT29_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT29_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE2_LUT30_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT30_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT30_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT30_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT30_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT30_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE2_LUT31_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT31_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT31_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT31_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT31_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG10_VGA_COARSE2_LUT31_NT_RESET_VALUE 0x0000000E

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG2 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG2_ADDR 0x02000120
#define RX_AGC_ADAPT_REG2_SIZE 32

/* FIELD: VGA_COARSE1_LUT6_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT6_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT6_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT6_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT6_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE1_LUT7_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT7_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT7_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT7_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT7_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE1_LUT8_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT8_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT8_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT8_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT8_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE1_LUT9_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT9_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT9_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT9_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT9_NT_RESET_VALUE 0x00000005

/* FIELD: VGA_COARSE1_LUT10_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT10_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT10_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT10_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT10_NT_RESET_VALUE 0x00000006

/* FIELD: VGA_COARSE1_LUT11_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT11_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT11_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT11_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT11_NT_RESET_VALUE 0x00000006

/* FIELD: VGA_COARSE1_LUT12_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT12_NT_OFFSET 0x00000018
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT12_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT12_NT_MASK 0x0F000000
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG2_VGA_COARSE1_LUT12_NT_RESET_VALUE 0x00000006

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG3 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG3_ADDR 0x02000124
#define RX_AGC_ADAPT_REG3_SIZE 32

/* FIELD: VGA_COARSE1_LUT13_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT13_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT13_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT13_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT13_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_COARSE1_LUT14_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT14_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT14_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT14_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT14_NT_RESET_VALUE 0x00000008

/* FIELD: VGA_COARSE1_LUT15_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT15_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT15_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT15_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT15_NT_RESET_VALUE 0x00000008

/* FIELD: VGA_COARSE1_LUT16_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT16_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT16_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT16_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT16_NT_RESET_VALUE 0x00000008

/* FIELD: VGA_COARSE1_LUT17_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT17_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT17_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT17_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT17_NT_RESET_VALUE 0x00000009

/* FIELD: VGA_COARSE1_LUT18_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT18_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT18_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT18_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG3_VGA_COARSE1_LUT18_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG4 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG4_ADDR 0x02000128
#define RX_AGC_ADAPT_REG4_SIZE 32

/* FIELD: VGA_COARSE1_LUT19_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT19_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT19_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT19_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT19_NT_RESET_VALUE 0x0000000A

/* FIELD: VGA_COARSE1_LUT20_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT20_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT20_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT20_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT20_NT_RESET_VALUE 0x0000000A

/* FIELD: VGA_COARSE1_LUT21_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT21_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT21_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT21_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT21_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT21_NT_RESET_VALUE 0x0000000B

/* FIELD: VGA_COARSE1_LUT22_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT22_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT22_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT22_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT22_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT22_NT_RESET_VALUE 0x0000000C

/* FIELD: VGA_COARSE1_LUT23_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT23_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT23_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT23_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT23_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT23_NT_RESET_VALUE 0x0000000C

/* FIELD: VGA_COARSE1_LUT24_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT24_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT24_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT24_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT24_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT24_NT_RESET_VALUE 0x0000000C

/* FIELD: VGA_COARSE1_LUT25_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT25_NT_OFFSET 0x00000018
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT25_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT25_NT_MASK 0x0F000000
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT25_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG4_VGA_COARSE1_LUT25_NT_RESET_VALUE 0x0000000D

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG5 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG5_ADDR 0x0200012C
#define RX_AGC_ADAPT_REG5_SIZE 32

/* FIELD: VGA_COARSE1_LUT26_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT26_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT26_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT26_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT26_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT26_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE1_LUT27_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT27_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT27_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT27_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT27_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT27_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE1_LUT28_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT28_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT28_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT28_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT28_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT28_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE1_LUT29_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT29_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT29_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT29_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT29_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT29_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE1_LUT30_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT30_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT30_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT30_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT30_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT30_NT_RESET_VALUE 0x0000000E

/* FIELD: VGA_COARSE1_LUT31_NT */
/* DESCRIPTION: */
/*   VGA course1 lookup table value */
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT31_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT31_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT31_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT31_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG5_VGA_COARSE1_LUT31_NT_RESET_VALUE 0x0000000E

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG6 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG6_ADDR 0x02000130
#define RX_AGC_ADAPT_REG6_SIZE 32

/* FIELD: VGA_COARSE2_LUT0_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT0_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT0_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT0_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT0_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSE2_LUT1_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT1_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT1_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT1_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT1_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSE2_LUT2_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT2_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT2_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT2_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT2_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSE2_LUT3_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT3_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT3_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT3_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT3_NT_RESET_VALUE 0x00000001

/* FIELD: VGA_COARSE2_LUT4_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT4_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT4_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT4_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT4_NT_RESET_VALUE 0x00000002

/* FIELD: VGA_COARSE2_LUT5_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT5_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT5_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT5_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG6_VGA_COARSE2_LUT5_NT_RESET_VALUE 0x00000002

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG7 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG7_ADDR 0x02000134
#define RX_AGC_ADAPT_REG7_SIZE 32

/* FIELD: VGA_COARSE2_LUT6_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT6_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT6_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT6_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT6_NT_RESET_VALUE 0x00000002

/* FIELD: VGA_COARSE2_LUT7_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT7_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT7_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT7_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT7_NT_RESET_VALUE 0x00000003

/* FIELD: VGA_COARSE2_LUT8_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT8_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT8_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT8_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT8_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE2_LUT9_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT9_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT9_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT9_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT9_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE2_LUT10_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT10_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT10_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT10_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT10_NT_RESET_VALUE 0x00000004

/* FIELD: VGA_COARSE2_LUT11_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT11_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT11_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT11_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT11_NT_RESET_VALUE 0x00000005

/* FIELD: VGA_COARSE2_LUT12_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT12_NT_OFFSET 0x00000018
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT12_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT12_NT_MASK 0x0F000000
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG7_VGA_COARSE2_LUT12_NT_RESET_VALUE 0x00000006

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG8 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG8_ADDR 0x02000138
#define RX_AGC_ADAPT_REG8_SIZE 32

/* FIELD: VGA_COARSE2_LUT13_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT13_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT13_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT13_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT13_NT_RESET_VALUE 0x00000006

/* FIELD: VGA_COARSE2_LUT14_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT14_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT14_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT14_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT14_NT_RESET_VALUE 0x00000006

/* FIELD: VGA_COARSE2_LUT15_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT15_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT15_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT15_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT15_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_COARSE2_LUT16_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT16_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT16_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT16_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT16_NT_RESET_VALUE 0x00000008

/* FIELD: VGA_COARSE2_LUT17_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT17_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT17_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT17_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT17_NT_RESET_VALUE 0x00000008

/* FIELD: VGA_COARSE2_LUT18_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT18_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT18_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT18_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG8_VGA_COARSE2_LUT18_NT_RESET_VALUE 0x00000008

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_REG9 */
/* DESCRIPTION: */
/*   VGA coarse1/2 lookup table */
/* ------------------------------------- */
#define RX_AGC_ADAPT_REG9_ADDR 0x0200013C
#define RX_AGC_ADAPT_REG9_SIZE 32

/* FIELD: VGA_COARSE2_LUT19_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT19_NT_OFFSET 0x00000000
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT19_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT19_NT_MASK 0x0000000F
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT19_NT_RESET_VALUE 0x00000009

/* FIELD: VGA_COARSE2_LUT20_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT20_NT_OFFSET 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT20_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT20_NT_MASK 0x000000F0
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT20_NT_RESET_VALUE 0x0000000A

/* FIELD: VGA_COARSE2_LUT21_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT21_NT_OFFSET 0x00000008
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT21_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT21_NT_MASK 0x00000F00
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT21_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT21_NT_RESET_VALUE 0x0000000A

/* FIELD: VGA_COARSE2_LUT22_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT22_NT_OFFSET 0x0000000C
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT22_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT22_NT_MASK 0x0000F000
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT22_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT22_NT_RESET_VALUE 0x0000000A

/* FIELD: VGA_COARSE2_LUT23_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT23_NT_OFFSET 0x00000010
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT23_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT23_NT_MASK 0x000F0000
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT23_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT23_NT_RESET_VALUE 0x0000000B

/* FIELD: VGA_COARSE2_LUT24_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT24_NT_OFFSET 0x00000014
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT24_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT24_NT_MASK 0x00F00000
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT24_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT24_NT_RESET_VALUE 0x0000000C

/* FIELD: VGA_COARSE2_LUT25_NT */
/* DESCRIPTION: */
/*   VGA course2 lookup table value */
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT25_NT_OFFSET 0x00000018
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT25_NT_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT25_NT_MASK 0x0F000000
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT25_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_REG9_VGA_COARSE2_LUT25_NT_RESET_VALUE 0x0000000C

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_SETUP_0 */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_SETUP_0_ADDR 0x02000140
#define RX_AGC_ADAPT_SETUP_0_SIZE 32

/* FIELD: WATCHDOG_A */
/* DESCRIPTION: */
/*   During coarse gain adaption, specifies watchdog duration: 2**regvalue number of cycles.  */
/*   E.g. reg value=10 is 1024 clock cycles. */
#define RX_AGC_ADAPT_SETUP_0_WATCHDOG_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_SETUP_0_WATCHDOG_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_SETUP_0_WATCHDOG_A_MASK 0x0000001F
#define RX_AGC_ADAPT_SETUP_0_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_0_WATCHDOG_A_RESET_VALUE 0x00000000

/* FIELD: MIN_STOP_HI_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   0=stop adaption when transition density is met and falling edge gain change */
/*   1=stop adaption when transition density is met and rising edge gain change */
/*   2=stop adaption when transition density is met and any gain change */
#define RX_AGC_ADAPT_SETUP_0_MIN_STOP_HI_A_OFFSET 0x00000005
#define RX_AGC_ADAPT_SETUP_0_MIN_STOP_HI_A_BITWIDTH 0x00000002
#define RX_AGC_ADAPT_SETUP_0_MIN_STOP_HI_A_MASK 0x00000060
#define RX_AGC_ADAPT_SETUP_0_MIN_STOP_HI_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_0_MIN_STOP_HI_A_RESET_VALUE 0x00000000

/* FIELD: MIN_NUM_CROSS_TARGET_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the number of transitions required to satisfy lock condition */
#define RX_AGC_ADAPT_SETUP_0_MIN_NUM_CROSS_TARGET_A_OFFSET 0x00000007
#define RX_AGC_ADAPT_SETUP_0_MIN_NUM_CROSS_TARGET_A_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_SETUP_0_MIN_NUM_CROSS_TARGET_A_MASK 0x00000780
#define RX_AGC_ADAPT_SETUP_0_MIN_NUM_CROSS_TARGET_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_0_MIN_NUM_CROSS_TARGET_A_RESET_VALUE 0x00000000

/* FIELD: MIN_GAIN_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the gain of minima detector, recommend setting to 0 to disable feature. */
#define RX_AGC_ADAPT_SETUP_0_MIN_GAIN_A_OFFSET 0x0000000B
#define RX_AGC_ADAPT_SETUP_0_MIN_GAIN_A_BITWIDTH 0x00000004
#define RX_AGC_ADAPT_SETUP_0_MIN_GAIN_A_MASK 0x00007800
#define RX_AGC_ADAPT_SETUP_0_MIN_GAIN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_0_MIN_GAIN_A_RESET_VALUE 0x00000000

/* FIELD: MIN_TARGET_A */
/* DESCRIPTION: */
/*   Minima detector lock mechanism (not recommended for use) */
/*   Specifies the 2-to-negative-power-of-regvalue target for transition threshold, bigger regvalue means harder to lock */
#define RX_AGC_ADAPT_SETUP_0_MIN_TARGET_A_OFFSET 0x0000000F
#define RX_AGC_ADAPT_SETUP_0_MIN_TARGET_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_SETUP_0_MIN_TARGET_A_MASK 0x000F8000
#define RX_AGC_ADAPT_SETUP_0_MIN_TARGET_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_0_MIN_TARGET_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_SETUP_1 */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_SETUP_1_ADDR 0x02000144
#define RX_AGC_ADAPT_SETUP_1_SIZE 32

/* FIELD: MU_POS_A */
/* DESCRIPTION: */
/*   Reduces coarse/fine gain applied by 2**-regvalue per cycle of the adaption when signal exceeds Target Code */
/*   Typically set mu_pos_a greater-than mu_neg_a.  */
/*   As an example:  */
/*   set mu_pos_a to 9 = 2**-9 (slow gain decay) */
/*   set mu_neg_a to 4 = 2**-4 (fast gain attack) */
#define RX_AGC_ADAPT_SETUP_1_MU_POS_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_SETUP_1_MU_POS_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_SETUP_1_MU_POS_A_MASK 0x0000001F
#define RX_AGC_ADAPT_SETUP_1_MU_POS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_1_MU_POS_A_RESET_VALUE 0x00000000

/* FIELD: MU_NEG_A */
/* DESCRIPTION: */
/*   Increases coarse/fine gain applied by 2**-regvalue per cycle of the adaption when signal is below Target Code */
#define RX_AGC_ADAPT_SETUP_1_MU_NEG_A_OFFSET 0x00000008
#define RX_AGC_ADAPT_SETUP_1_MU_NEG_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_SETUP_1_MU_NEG_A_MASK 0x00001F00
#define RX_AGC_ADAPT_SETUP_1_MU_NEG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_1_MU_NEG_A_RESET_VALUE 0x00000000

/* FIELD: TARGET_CODE_A */
/* DESCRIPTION: */
/*   Specifies AGC Target: amount of ADC full-scale to occupy. */
/*   Programmed in conjunction with clip_threshold_rate. */
/*   Example: 128=1.0, 64=0.5 */
#define RX_AGC_ADAPT_SETUP_1_TARGET_CODE_A_OFFSET 0x00000010
#define RX_AGC_ADAPT_SETUP_1_TARGET_CODE_A_BITWIDTH 0x00000008
#define RX_AGC_ADAPT_SETUP_1_TARGET_CODE_A_MASK 0x00FF0000
#define RX_AGC_ADAPT_SETUP_1_TARGET_CODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_1_TARGET_CODE_A_RESET_VALUE 0x0000006C

/* FIELD: CLIP_THRESHOLD_RATE_A */
/* DESCRIPTION: */
/*   Specifies the percentage of signal above target_code:  */
/*   2**-clip_threshold_rate is the density of signal above target_code. */
/*   As an example, if clip_threshold_rate=10, AGC will adapt gain such that approx 0.001 (0.1%) of signal data sits above target_code. */
#define RX_AGC_ADAPT_SETUP_1_CLIP_THRESHOLD_RATE_A_OFFSET 0x00000018
#define RX_AGC_ADAPT_SETUP_1_CLIP_THRESHOLD_RATE_A_BITWIDTH 0x00000008
#define RX_AGC_ADAPT_SETUP_1_CLIP_THRESHOLD_RATE_A_MASK 0xFF000000
#define RX_AGC_ADAPT_SETUP_1_CLIP_THRESHOLD_RATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_1_CLIP_THRESHOLD_RATE_A_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_SETUP_2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the VGA and CTLE. */
/* ------------------------------------- */
#define RX_AGC_ADAPT_SETUP_2_ADDR 0x02000148
#define RX_AGC_ADAPT_SETUP_2_SIZE 32

/* FIELD: SETTLING_NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue number of clock cycles for Analog gain to settle to avoid using transitionary information within adaption */
#define RX_AGC_ADAPT_SETUP_2_SETTLING_NUM_SAMPLES_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_SETUP_2_SETTLING_NUM_SAMPLES_A_BITWIDTH 0x00000010
#define RX_AGC_ADAPT_SETUP_2_SETTLING_NUM_SAMPLES_A_MASK 0x0000FFFF
#define RX_AGC_ADAPT_SETUP_2_SETTLING_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_AGC_ADAPT_SETUP_2_SETTLING_NUM_SAMPLES_A_RESET_VALUE 0x00000002

/* ------------------------------------- */
/* REG: RX_AGC_ADAPT_STATUS */
/* DESCRIPTION: */
/*   Status Register for AGC Adaptation Block */
/* ------------------------------------- */
#define RX_AGC_ADAPT_STATUS_ADDR 0x0200014C
#define RX_AGC_ADAPT_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: AGC adaption done */
#define RX_AGC_ADAPT_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_AGC_ADAPT_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_STATUS_LOCK_A_MASK 0x00000001
#define RX_AGC_ADAPT_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: DERIV_LOCK_A */
/* DESCRIPTION: */
/*   Debug feature  Minima detector is Locked  not recommended for use. */
#define RX_AGC_ADAPT_STATUS_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_AGC_ADAPT_STATUS_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_STATUS_DERIV_LOCK_A_MASK 0x00000002
#define RX_AGC_ADAPT_STATUS_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Debug feature  Indicates watchdog timeout */
#define RX_AGC_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000002
#define RX_AGC_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_AGC_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000004
#define RX_AGC_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: LMS_ERROR_A */
/* DESCRIPTION: */
/*   Debug feature  adaption error can be observed in single-step debug mode. */
#define RX_AGC_ADAPT_STATUS_LMS_ERROR_A_OFFSET 0x00000003
#define RX_AGC_ADAPT_STATUS_LMS_ERROR_A_BITWIDTH 0x0000000E
#define RX_AGC_ADAPT_STATUS_LMS_ERROR_A_MASK 0x0001FFF8
#define RX_AGC_ADAPT_STATUS_LMS_ERROR_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_LMS_ERROR_A_RESET_VALUE 0x00000000

/* FIELD: VGA_FINE_A */
/* DESCRIPTION: */
/*   Status: Readback Fine gain applied */
#define RX_AGC_ADAPT_STATUS_VGA_FINE_A_OFFSET 0x00000011
#define RX_AGC_ADAPT_STATUS_VGA_FINE_A_BITWIDTH 0x00000006
#define RX_AGC_ADAPT_STATUS_VGA_FINE_A_MASK 0x007E0000
#define RX_AGC_ADAPT_STATUS_VGA_FINE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_VGA_FINE_A_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSE_A */
/* DESCRIPTION: */
/*   Status: Readback Coarse gain applied */
#define RX_AGC_ADAPT_STATUS_VGA_COARSE_A_OFFSET 0x00000017
#define RX_AGC_ADAPT_STATUS_VGA_COARSE_A_BITWIDTH 0x00000005
#define RX_AGC_ADAPT_STATUS_VGA_COARSE_A_MASK 0x0F800000
#define RX_AGC_ADAPT_STATUS_VGA_COARSE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_AGC_ADAPT_STATUS_VGA_COARSE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ATEST */
/* DESCRIPTION: */
/*   Configuration registers for the Rx AFE analog test mux address. */
/* ------------------------------------- */
#define RX_ATEST_ADDR 0x02000150
#define RX_ATEST_SIZE 32

/* FIELD: A_ADDR_BIN_NT */
/* DESCRIPTION: */
/*   Address space for the rx atest.  */
/*   00000 - High-Z */
/*   00001 to 11111 valid atest addresses */
#define RX_ATEST_A_ADDR_BIN_NT_OFFSET 0x00000000
#define RX_ATEST_A_ADDR_BIN_NT_BITWIDTH 0x00000005
#define RX_ATEST_A_ADDR_BIN_NT_MASK 0x0000001F
#define RX_ATEST_A_ADDR_BIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ATEST_A_ADDR_BIN_NT_RESET_VALUE 0x00000000

/* FIELD: B_ADDR_BIN_NT */
/* DESCRIPTION: */
/*   Address space for the rx atest.  */
/*   00000 - High-Z */
/*   00001 to 11111 valid atest addresses */
#define RX_ATEST_B_ADDR_BIN_NT_OFFSET 0x00000005
#define RX_ATEST_B_ADDR_BIN_NT_BITWIDTH 0x00000005
#define RX_ATEST_B_ADDR_BIN_NT_MASK 0x000003E0
#define RX_ATEST_B_ADDR_BIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ATEST_B_ADDR_BIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_BK_PHASE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Configuration of background duty cycle */
/* ------------------------------------- */
#define RX_BK_PHASE_ADAPT_REG1_ADDR 0x02000154
#define RX_BK_PHASE_ADAPT_REG1_SIZE 32

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Background enable */
#define RX_BK_PHASE_ADAPT_REG1_EN_A_OFFSET 0x00000000
#define RX_BK_PHASE_ADAPT_REG1_EN_A_BITWIDTH 0x00000001
#define RX_BK_PHASE_ADAPT_REG1_EN_A_MASK 0x00000001
#define RX_BK_PHASE_ADAPT_REG1_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG1_EN_A_RESET_VALUE 0x00000000

/* FIELD: CTRL_NT */
/* DESCRIPTION: */
/*   When background is enabled, controls which duty cycle(s) to run. Bit 0 = d90, bit 1 = d0, bit 2 = iq */
#define RX_BK_PHASE_ADAPT_REG1_CTRL_NT_OFFSET 0x00000001
#define RX_BK_PHASE_ADAPT_REG1_CTRL_NT_BITWIDTH 0x00000003
#define RX_BK_PHASE_ADAPT_REG1_CTRL_NT_MASK 0x0000000E
#define RX_BK_PHASE_ADAPT_REG1_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG1_CTRL_NT_RESET_VALUE 0x00000007

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   Mu value used in background */
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_OFFSET 0x00000008
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_MASK 0x00001F00
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_RESET_VALUE 0x00000001

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in background */
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_OFFSET 0x0000000D
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_MASK 0x00002000
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run in background, per duty cycle */
#define RX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_OFFSET 0x00000010
#define RX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_BITWIDTH 0x00000010
#define RX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_MASK 0xFFFF0000
#define RX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_RESET_VALUE 0x00000032

/* ------------------------------------- */
/* REG: RX_BK_PHASE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Configuration of background duty cycle */
/* ------------------------------------- */
#define RX_BK_PHASE_ADAPT_REG2_ADDR 0x02000158
#define RX_BK_PHASE_ADAPT_REG2_SIZE 32

/* FIELD: TIMER_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait between calibration runs. */
#define RX_BK_PHASE_ADAPT_REG2_TIMER_NT_OFFSET 0x00000000
#define RX_BK_PHASE_ADAPT_REG2_TIMER_NT_BITWIDTH 0x00000016
#define RX_BK_PHASE_ADAPT_REG2_TIMER_NT_MASK 0x003FFFFF
#define RX_BK_PHASE_ADAPT_REG2_TIMER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG2_TIMER_NT_RESET_VALUE 0x00000000

/* FIELD: RANGE_NT */
/* DESCRIPTION: */
/*   Determines allowable range during background adaptation */
#define RX_BK_PHASE_ADAPT_REG2_RANGE_NT_OFFSET 0x00000016
#define RX_BK_PHASE_ADAPT_REG2_RANGE_NT_BITWIDTH 0x00000003
#define RX_BK_PHASE_ADAPT_REG2_RANGE_NT_MASK 0x01C00000
#define RX_BK_PHASE_ADAPT_REG2_RANGE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BK_PHASE_ADAPT_REG2_RANGE_NT_RESET_VALUE 0x00000002

/* ------------------------------------- */
/* REG: RX_BSCAN */
/* DESCRIPTION: */
/*   Configuration registers for the AFE boundary scan block. Defaults will be set appropriate to boundary scan testing. These are primarily of debug. */
/* ------------------------------------- */
#define RX_BSCAN_ADDR 0x0200015C
#define RX_BSCAN_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   Boundary scan bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define RX_BSCAN_BIAS_ADJ_NT_OFFSET 0x00000000
#define RX_BSCAN_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define RX_BSCAN_BIAS_ADJ_NT_MASK 0x00000003
#define RX_BSCAN_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BSCAN_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: VBIAS_NT */
/* DESCRIPTION: */
/*   Boundary scan test recveiver voltage reference. Targeted to be optimal mission mode receiver common mode.  */
/*   111 - Max setting */
/*   000 - Min setting */
#define RX_BSCAN_VBIAS_NT_OFFSET 0x00000002
#define RX_BSCAN_VBIAS_NT_BITWIDTH 0x00000003
#define RX_BSCAN_VBIAS_NT_MASK 0x0000001C
#define RX_BSCAN_VBIAS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BSCAN_VBIAS_NT_RESET_VALUE 0x00000001

/* FIELD: VHYST_NT */
/* DESCRIPTION: */
/*   Boundary scan test recveiver hysteresys level.  */
/*   11 - Max setting */
/*   00 - Min setting */
#define RX_BSCAN_VHYST_NT_OFFSET 0x00000005
#define RX_BSCAN_VHYST_NT_BITWIDTH 0x00000002
#define RX_BSCAN_VHYST_NT_MASK 0x00000060
#define RX_BSCAN_VHYST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_BSCAN_VHYST_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_CCG */
/* DESCRIPTION: */
/*   Block clock gating control */
/* ------------------------------------- */
#define RX_CCG_ADDR 0x02000160
#define RX_CCG_SIZE 32

/* FIELD: AGC_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_AGC_ADAPT_ENA_A_OFFSET 0x00000000
#define RX_CCG_AGC_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_AGC_ADAPT_ENA_A_MASK 0x00000001
#define RX_CCG_AGC_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_AGC_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: CTLE_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_CTLE_ADAPT_ENA_A_OFFSET 0x00000001
#define RX_CCG_CTLE_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_CTLE_ADAPT_ENA_A_MASK 0x00000002
#define RX_CCG_CTLE_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_CTLE_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DATA_OUT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DATA_OUT_ENA_A_OFFSET 0x00000002
#define RX_CCG_DATA_OUT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DATA_OUT_ENA_A_MASK 0x00000004
#define RX_CCG_DATA_OUT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DATA_OUT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DATABIST_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DATABIST_ENA_A_OFFSET 0x00000003
#define RX_CCG_DATABIST_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DATABIST_ENA_A_MASK 0x00000008
#define RX_CCG_DATABIST_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DATABIST_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DATABLOCK_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DATABLOCK_ENA_A_OFFSET 0x00000004
#define RX_CCG_DATABLOCK_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DATABLOCK_ENA_A_MASK 0x00000010
#define RX_CCG_DATABLOCK_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DATABLOCK_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DC_OFFSET_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DC_OFFSET_ADAPT_ENA_A_OFFSET 0x00000005
#define RX_CCG_DC_OFFSET_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DC_OFFSET_ADAPT_ENA_A_MASK 0x00000020
#define RX_CCG_DC_OFFSET_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DC_OFFSET_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DEMAPPER_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DEMAPPER_ENA_A_OFFSET 0x00000006
#define RX_CCG_DEMAPPER_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DEMAPPER_ENA_A_MASK 0x00000040
#define RX_CCG_DEMAPPER_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DEMAPPER_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DFE_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DFE_ADAPT_ENA_A_OFFSET 0x00000007
#define RX_CCG_DFE_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DFE_ADAPT_ENA_A_MASK 0x00000080
#define RX_CCG_DFE_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DFE_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DFX_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DFX_ENA_A_OFFSET 0x00000008
#define RX_CCG_DFX_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DFX_ENA_A_MASK 0x00000100
#define RX_CCG_DFX_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DFX_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DPLL_DLPF_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DPLL_DLPF_ENA_A_OFFSET 0x00000009
#define RX_CCG_DPLL_DLPF_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DPLL_DLPF_ENA_A_MASK 0x00000200
#define RX_CCG_DPLL_DLPF_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DPLL_DLPF_ENA_A_RESET_VALUE 0x00000001

/* FIELD: DPLL_TED_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_DPLL_TED_ENA_A_OFFSET 0x0000000A
#define RX_CCG_DPLL_TED_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_DPLL_TED_ENA_A_MASK 0x00000400
#define RX_CCG_DPLL_TED_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_DPLL_TED_ENA_A_RESET_VALUE 0x00000001

/* FIELD: ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_ENA_A_OFFSET 0x0000000B
#define RX_CCG_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_ENA_A_MASK 0x00000800
#define RX_CCG_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_ENA_A_RESET_VALUE 0x00000001

/* FIELD: EQDFE_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_EQDFE_ENA_A_OFFSET 0x0000000C
#define RX_CCG_EQDFE_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_EQDFE_ENA_A_MASK 0x00001000
#define RX_CCG_EQDFE_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_EQDFE_ENA_A_RESET_VALUE 0x00000001

/* FIELD: EQFFE_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_EQFFE_ENA_A_OFFSET 0x0000000D
#define RX_CCG_EQFFE_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_EQFFE_ENA_A_MASK 0x00002000
#define RX_CCG_EQFFE_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_EQFFE_ENA_A_RESET_VALUE 0x00000001

/* FIELD: FFE_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_FFE_ADAPT_ENA_A_OFFSET 0x0000000E
#define RX_CCG_FFE_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_FFE_ADAPT_ENA_A_MASK 0x00004000
#define RX_CCG_FFE_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_FFE_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: GB_FIFO_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_GB_FIFO_ENA_A_OFFSET 0x0000000F
#define RX_CCG_GB_FIFO_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_GB_FIFO_ENA_A_MASK 0x00008000
#define RX_CCG_GB_FIFO_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_GB_FIFO_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PHASE_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_PHASE_ADAPT_ENA_A_OFFSET 0x00000010
#define RX_CCG_PHASE_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_PHASE_ADAPT_ENA_A_MASK 0x00010000
#define RX_CCG_PHASE_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_PHASE_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PPM_LOCK_DETECT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_PPM_LOCK_DETECT_ENA_A_OFFSET 0x00000011
#define RX_CCG_PPM_LOCK_DETECT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_PPM_LOCK_DETECT_ENA_A_MASK 0x00020000
#define RX_CCG_PPM_LOCK_DETECT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_PPM_LOCK_DETECT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SLICER_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_SLICER_ADAPT_ENA_A_OFFSET 0x00000012
#define RX_CCG_SLICER_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_SLICER_ADAPT_ENA_A_MASK 0x00040000
#define RX_CCG_SLICER_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_SLICER_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SSCM_DLPF_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_SSCM_DLPF_ENA_A_OFFSET 0x00000013
#define RX_CCG_SSCM_DLPF_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_SSCM_DLPF_ENA_A_MASK 0x00080000
#define RX_CCG_SSCM_DLPF_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_SSCM_DLPF_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SSCM_FRACDIV_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_SSCM_FRACDIV_ENA_A_OFFSET 0x00000014
#define RX_CCG_SSCM_FRACDIV_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_SSCM_FRACDIV_ENA_A_MASK 0x00100000
#define RX_CCG_SSCM_FRACDIV_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_SSCM_FRACDIV_ENA_A_RESET_VALUE 0x00000001

/* FIELD: TARGET_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_TARGET_ADAPT_ENA_A_OFFSET 0x00000015
#define RX_CCG_TARGET_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_TARGET_ADAPT_ENA_A_MASK 0x00200000
#define RX_CCG_TARGET_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_TARGET_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: VCO_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_VCO_ADAPT_ENA_A_OFFSET 0x00000016
#define RX_CCG_VCO_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_VCO_ADAPT_ENA_A_MASK 0x00400000
#define RX_CCG_VCO_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_VCO_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: VGA_OFFSET_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define RX_CCG_VGA_OFFSET_ADAPT_ENA_A_OFFSET 0x00000017
#define RX_CCG_VGA_OFFSET_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_CCG_VGA_OFFSET_ADAPT_ENA_A_MASK 0x00800000
#define RX_CCG_VGA_OFFSET_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CCG_VGA_OFFSET_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_CDR_LOCKPOINT_UPD */
/* DESCRIPTION: */
/*   CDR Lockpoint update control / observability registers */
/* ------------------------------------- */
#define RX_CDR_LOCKPOINT_UPD_ADDR 0x02000164
#define RX_CDR_LOCKPOINT_UPD_SIZE 32

/* FIELD: CHNG_A */
/* DESCRIPTION: */
/*   Lockpoint update sign output changed signal. Sign output from this block is read when this signal changes. */
#define RX_CDR_LOCKPOINT_UPD_CHNG_A_OFFSET 0x00000012
#define RX_CDR_LOCKPOINT_UPD_CHNG_A_BITWIDTH 0x00000001
#define RX_CDR_LOCKPOINT_UPD_CHNG_A_MASK 0x00040000
#define RX_CDR_LOCKPOINT_UPD_CHNG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CDR_LOCKPOINT_UPD_CHNG_A_RESET_VALUE 0x00000000

/* FIELD: SIGN_NT */
/* DESCRIPTION: */
/*   Lockpoint update sign output override signal. 0 - Zero, 1 - +1, 2 - -1 */
#define RX_CDR_LOCKPOINT_UPD_SIGN_NT_OFFSET 0x00000014
#define RX_CDR_LOCKPOINT_UPD_SIGN_NT_BITWIDTH 0x00000002
#define RX_CDR_LOCKPOINT_UPD_SIGN_NT_MASK 0x00300000
#define RX_CDR_LOCKPOINT_UPD_SIGN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CDR_LOCKPOINT_UPD_SIGN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE0 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE0_ADDR 0x02000168
#define RX_CFG_RATE0_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE0_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE0_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE0_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE0_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE0_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE0_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE0_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE0_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE0_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE0_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE0_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE0_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE0_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE0_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE0_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE0_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE0_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE0_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE0_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE0_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE1 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE1_ADDR 0x0200016C
#define RX_CFG_RATE1_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE1_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE1_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE1_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE1_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE1_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE1_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE1_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE1_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE1_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE1_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE1_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE1_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE1_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE1_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE1_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE1_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE1_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE1_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE1_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE1_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE2 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE2_ADDR 0x02000170
#define RX_CFG_RATE2_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE2_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE2_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE2_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE2_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE2_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE2_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE2_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE2_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE2_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE2_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE2_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE2_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE2_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE2_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE2_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE2_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE2_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE2_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE2_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE2_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE3 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE3_ADDR 0x02000174
#define RX_CFG_RATE3_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE3_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE3_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE3_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE3_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE3_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE3_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE3_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE3_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE3_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE3_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE3_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE3_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE3_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE3_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE3_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE3_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE3_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE3_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE3_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE3_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE4 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE4_ADDR 0x02000178
#define RX_CFG_RATE4_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE4_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE4_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE4_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE4_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE4_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE4_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE4_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE4_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE4_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE4_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE4_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE4_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE4_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE4_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE4_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE4_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE4_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE4_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE4_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE4_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE5 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE5_ADDR 0x0200017C
#define RX_CFG_RATE5_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE5_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE5_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE5_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE5_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE5_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE5_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE5_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE5_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE5_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE5_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE5_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE5_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE5_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE5_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE5_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE5_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE5_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE5_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE5_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE5_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE6 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE6_ADDR 0x02000180
#define RX_CFG_RATE6_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE6_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE6_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE6_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE6_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE6_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE6_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE6_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE6_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE6_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE6_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE6_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE6_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE6_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE6_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE6_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE6_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE6_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE6_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE6_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE6_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CFG_RATE7 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define RX_CFG_RATE7_ADDR 0x02000184
#define RX_CFG_RATE7_SIZE 32

/* FIELD: RX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE7_RX_CFG_FIELD0_NT_OFFSET 0x00000000
#define RX_CFG_RATE7_RX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE7_RX_CFG_FIELD0_NT_MASK 0x0000000F
#define RX_CFG_RATE7_RX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE7_RX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE7_RX_CFG_FIELD1_NT_OFFSET 0x00000004
#define RX_CFG_RATE7_RX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE7_RX_CFG_FIELD1_NT_MASK 0x000000F0
#define RX_CFG_RATE7_RX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE7_RX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE7_RX_CFG_FIELD2_NT_OFFSET 0x00000008
#define RX_CFG_RATE7_RX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE7_RX_CFG_FIELD2_NT_MASK 0x00000F00
#define RX_CFG_RATE7_RX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE7_RX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: RX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent RX register */
#define RX_CFG_RATE7_RX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define RX_CFG_RATE7_RX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define RX_CFG_RATE7_RX_CFG_FIELD3_NT_MASK 0x0000F000
#define RX_CFG_RATE7_RX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CFG_RATE7_RX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CNTRL_REG1 */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define RX_CNTRL_REG1_ADDR 0x02000188
#define RX_CNTRL_REG1_SIZE 32

/* FIELD: RX_WIDTH_NT */
/* DESCRIPTION: */
/*   Global width control signal. This signal is used to decode other signals dependent on width */
#define RX_CNTRL_REG1_RX_WIDTH_NT_OFFSET 0x00000000
#define RX_CNTRL_REG1_RX_WIDTH_NT_BITWIDTH 0x00000004
#define RX_CNTRL_REG1_RX_WIDTH_NT_MASK 0x0000000F
#define RX_CNTRL_REG1_RX_WIDTH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_WIDTH_NT_RESET_VALUE 0x00000000

/* FIELD: RX_WIDTH_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Global width control override enable. 0 - Use rx_width_nt. 1 - Use other signals */
#define RX_CNTRL_REG1_RX_WIDTH_OVR_ENA_NT_OFFSET 0x00000004
#define RX_CNTRL_REG1_RX_WIDTH_OVR_ENA_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG1_RX_WIDTH_OVR_ENA_NT_MASK 0x00000010
#define RX_CNTRL_REG1_RX_WIDTH_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_WIDTH_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_FIFO_DELAY_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Global width control override enable, specific to fifo delay. 0 - Use rx_width_nt. 1 - Use registers */
#define RX_CNTRL_REG1_RX_FIFO_DELAY_OVR_ENA_NT_OFFSET 0x00000005
#define RX_CNTRL_REG1_RX_FIFO_DELAY_OVR_ENA_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG1_RX_FIFO_DELAY_OVR_ENA_NT_MASK 0x00000020
#define RX_CNTRL_REG1_RX_FIFO_DELAY_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_FIFO_DELAY_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_MM_DISABLE_OVR_ENA_A */
/* DESCRIPTION: */
/*   Synchronization signal to sync update: Kprop3, Kint3, Ted Bias3, mm_disable, mmbias_disable and branch_group_sel. */
/*   This override signal has priority over all others, e.g. higher priority than mm_disable_init_ovr_ena. */
/*   When this signal is set high, the following registers are used: */
/*   Kprop3 is used, not Kprop1 or Kprop2 */
/*   Kint3 is used, not Kint1 or Kint2 */
/*   Ted Bias3 is used, not Ted Bias1 or Ted Bias2 */
/*   mm_disable_nt is used, not init_mm_disable_nt or active_adc_branch control */
/*   mmbias_disable1/2_nt is used, not init_mmbias_disable1/2_nt or active_adc_branch control */
/*   branch_group_sel_nt is used, not init_branch_group_sel_nt or active_adc_branch_control */
#define RX_CNTRL_REG1_RX_MM_DISABLE_OVR_ENA_A_OFFSET 0x00000006
#define RX_CNTRL_REG1_RX_MM_DISABLE_OVR_ENA_A_BITWIDTH 0x00000001
#define RX_CNTRL_REG1_RX_MM_DISABLE_OVR_ENA_A_MASK 0x00000040
#define RX_CNTRL_REG1_RX_MM_DISABLE_OVR_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_MM_DISABLE_OVR_ENA_A_RESET_VALUE 0x00000000

/* FIELD: RX_MM_DISABLE_INIT_OVR_ENA_NT */
/* DESCRIPTION: */
/*   MM init disable overide enables use of init_mm_disable_nt,  init_mmbias_disable1 and 2 and init_branch_group_sel. */
/*   These values should be configured prior to CDR adapt start. */
/*   When this signal is set high, the following registers are used: */
/*   init_mm_disable_nt is used, not governed by active_adc_branch */
/*   init_mmbias_disable_nt is used, not governed by active_adc_branch */
/*   init_branch_group_sel_nt is used, not governed by active_adc_branch */
#define RX_CNTRL_REG1_RX_MM_DISABLE_INIT_OVR_ENA_NT_OFFSET 0x00000007
#define RX_CNTRL_REG1_RX_MM_DISABLE_INIT_OVR_ENA_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG1_RX_MM_DISABLE_INIT_OVR_ENA_NT_MASK 0x00000080
#define RX_CNTRL_REG1_RX_MM_DISABLE_INIT_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_MM_DISABLE_INIT_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_MM_FREQDET_DISABLE_OVR_ENA_NT */
/* DESCRIPTION: */
/*   MM freqdet disable overide enable controls whether to use mm_freqdet_disable1 and 2.  */
/*   0 - Use active adc count to control mm freqdet disable. 1 - Use registers mm_freqdet_disable1 and 2. */
#define RX_CNTRL_REG1_RX_MM_FREQDET_DISABLE_OVR_ENA_NT_OFFSET 0x00000008
#define RX_CNTRL_REG1_RX_MM_FREQDET_DISABLE_OVR_ENA_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG1_RX_MM_FREQDET_DISABLE_OVR_ENA_NT_MASK 0x00000100
#define RX_CNTRL_REG1_RX_MM_FREQDET_DISABLE_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG1_RX_MM_FREQDET_DISABLE_OVR_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CNTRL_REG2 */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define RX_CNTRL_REG2_ADDR 0x0200018C
#define RX_CNTRL_REG2_SIZE 32

/* FIELD: RX_GRAY_ENA_OVR_NT */
/* DESCRIPTION: */
/*   Global gray enable control override enable. 0 - Use rx_gray_ena_nt, 1 - Use registers */
#define RX_CNTRL_REG2_RX_GRAY_ENA_OVR_NT_OFFSET 0x00000000
#define RX_CNTRL_REG2_RX_GRAY_ENA_OVR_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG2_RX_GRAY_ENA_OVR_NT_MASK 0x00000001
#define RX_CNTRL_REG2_RX_GRAY_ENA_OVR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG2_RX_GRAY_ENA_OVR_NT_RESET_VALUE 0x00000000

/* FIELD: RX_GRAYFLIP_NT */
/* DESCRIPTION: */
/*   Gray coding bit flip control */
/*   0 - Normal ordering */
/*   1 - Reversed ordering */
#define RX_CNTRL_REG2_RX_GRAYFLIP_NT_OFFSET 0x00000001
#define RX_CNTRL_REG2_RX_GRAYFLIP_NT_BITWIDTH 0x00000001
#define RX_CNTRL_REG2_RX_GRAYFLIP_NT_MASK 0x00000002
#define RX_CNTRL_REG2_RX_GRAYFLIP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CNTRL_REG2_RX_GRAYFLIP_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE */
/* DESCRIPTION: */
/*   Configuration registers for CTLE rate and bias levels. */
/* ------------------------------------- */
#define RX_CTLE_ADDR 0x02000190
#define RX_CTLE_SIZE 32

/* FIELD: RATE_NT */
/* DESCRIPTION: */
/*   Sets the ctle peak frequency */
/*   1 - 28GHz Nyquist */
/*   0 - 14GHz Nyquist */
#define RX_CTLE_RATE_NT_OFFSET 0x00000000
#define RX_CTLE_RATE_NT_BITWIDTH 0x00000001
#define RX_CTLE_RATE_NT_MASK 0x00000001
#define RX_CTLE_RATE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_RATE_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   CTLE/VGA bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define RX_CTLE_VGA_BIAS_ADJ_NT_OFFSET 0x00000001
#define RX_CTLE_VGA_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define RX_CTLE_VGA_BIAS_ADJ_NT_MASK 0x00000006
#define RX_CTLE_VGA_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_VGA_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_BYPASS */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_BYPASS_ADDR 0x02000194
#define RX_CTLE_ADAPT_BYPASS_SIZE 32

/* FIELD: ENABLE_A */
/* DESCRIPTION: */
/*   enables ctle boost bypass */
#define RX_CTLE_ADAPT_BYPASS_ENABLE_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_BYPASS_ENABLE_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_BYPASS_ENABLE_A_MASK 0x00000001
#define RX_CTLE_ADAPT_BYPASS_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_BYPASS_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: SETTING_A */
/* DESCRIPTION: */
/*   1111, 1110  - Not used */
/*   1101 - Max Boost */
/*   000 - Min Boost */
#define RX_CTLE_ADAPT_BYPASS_SETTING_A_OFFSET 0x00000001
#define RX_CTLE_ADAPT_BYPASS_SETTING_A_BITWIDTH 0x00000004
#define RX_CTLE_ADAPT_BYPASS_SETTING_A_MASK 0x0000001E
#define RX_CTLE_ADAPT_BYPASS_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_BYPASS_SETTING_A_RESET_VALUE 0x0000000E

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_CFG */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_CFG_ADDR 0x02000198
#define RX_CTLE_ADAPT_CFG_SIZE 32

/* FIELD: SETTLING_NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue number of clock cycles for Analog ctle_boost to settle to avoid using transitionary information within adaption */
#define RX_CTLE_ADAPT_CFG_SETTLING_NUM_SAMPLES_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_CFG_SETTLING_NUM_SAMPLES_A_BITWIDTH 0x00000010
#define RX_CTLE_ADAPT_CFG_SETTLING_NUM_SAMPLES_A_MASK 0x0000FFFF
#define RX_CTLE_ADAPT_CFG_SETTLING_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_CFG_SETTLING_NUM_SAMPLES_A_RESET_VALUE 0x00000000

/* FIELD: SETTING_INIT_A */
/* DESCRIPTION: */
/*   Sets the initial ctle_boost to start adapting from after a reset */
#define RX_CTLE_ADAPT_CFG_SETTING_INIT_A_OFFSET 0x00000010
#define RX_CTLE_ADAPT_CFG_SETTING_INIT_A_BITWIDTH 0x00000004
#define RX_CTLE_ADAPT_CFG_SETTING_INIT_A_MASK 0x000F0000
#define RX_CTLE_ADAPT_CFG_SETTING_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_CFG_SETTING_INIT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_CTRL */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_CTRL_ADDR 0x0200019C
#define RX_CTLE_ADAPT_CTRL_SIZE 32

/* FIELD: START_A */
/* DESCRIPTION: */
/*   start */
#define RX_CTLE_ADAPT_CTRL_START_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_CTRL_START_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_CTRL_START_A_MASK 0x00000001
#define RX_CTLE_ADAPT_CTRL_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_CTRL_START_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_RDREG */
/* DESCRIPTION: */
/*   anlt fom */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ADDR 0x020001A0
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_SIZE 32

/* FIELD: ERRORTERM_NT */
/* DESCRIPTION: */
/*   Status: CTLE errorterm */
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ERRORTERM_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ERRORTERM_NT_BITWIDTH 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ERRORTERM_NT_MASK 0x00000FFF
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ERRORTERM_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ERRORTERM_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_FOM_NT */
/* DESCRIPTION: */
/*   Status: FOM measurement */
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ANLT_FOM_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ANLT_FOM_NT_BITWIDTH 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ANLT_FOM_NT_MASK 0x00FFF000
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ANLT_FOM_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_RDREG_ANLT_FOM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG1 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_ADDR 0x020001A4
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SIZE 32

/* FIELD: SETUP_WATCHDOG_A */
/* DESCRIPTION: */
/*   runs error calculator block for regvalue number of clock cycles */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SETUP_WATCHDOG_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SETUP_WATCHDOG_A_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SETUP_WATCHDOG_A_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SETUP_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_SETUP_WATCHDOG_A_RESET_VALUE 0x00000000

/* FIELD: CTRL_ENA_A */
/* DESCRIPTION: */
/*   enables the computation block  used for txfir training, fom, ctle errorterm */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_ENA_A_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_ENA_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_ENA_A_MASK 0x00000100
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CTRL_START_A */
/* DESCRIPTION: */
/*   starts the computations */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_START_A_OFFSET 0x00000009
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_START_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_START_A_MASK 0x00000200
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_CTRL_START_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENABLE_A */
/* DESCRIPTION: */
/*   bypass_enable */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BYPASS_ENABLE_A_OFFSET 0x0000000A
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BYPASS_ENABLE_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BYPASS_ENABLE_A_MASK 0x00000400
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BYPASS_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BYPASS_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: TXFIR_FOM_INVERT_A */
/* DESCRIPTION: */
/*   inverts the sign of fom calculation */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_TXFIR_FOM_INVERT_A_OFFSET 0x0000000B
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_TXFIR_FOM_INVERT_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_TXFIR_FOM_INVERT_A_MASK 0x00000800
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_TXFIR_FOM_INVERT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_TXFIR_FOM_INVERT_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_POST_TAP1_A */
/* DESCRIPTION: */
/*   invert post_tap1 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP1_A_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP1_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP1_A_MASK 0x00001000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP1_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP1_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_POST_TAP2_A */
/* DESCRIPTION: */
/*   invert post2_tap inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP2_A_OFFSET 0x0000000D
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP2_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP2_A_MASK 0x00002000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP2_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP2_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_POST_TAP3_A */
/* DESCRIPTION: */
/*   invert post3_tap inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP3_A_OFFSET 0x0000000E
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP3_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP3_A_MASK 0x00004000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP3_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_POST_TAP3_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_MAIN_TAP_A */
/* DESCRIPTION: */
/*   inverts main_tap inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_MAIN_TAP_A_OFFSET 0x0000000F
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_MAIN_TAP_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_MAIN_TAP_A_MASK 0x00008000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_MAIN_TAP_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_MAIN_TAP_A_RESET_VALUE 0x00000000

/* FIELD: BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   selects which ffe branch to use for analysis */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BRANCH_SEL_NT_OFFSET 0x00000010
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BRANCH_SEL_NT_MASK 0x003F0000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: INVERT_PRE_TAP1_A */
/* DESCRIPTION: */
/*   inverts pre_tap1 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP1_A_OFFSET 0x00000016
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP1_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP1_A_MASK 0x00400000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP1_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP1_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_PRE_TAP2_A */
/* DESCRIPTION: */
/*   inverts pre_tap2 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP2_A_OFFSET 0x00000017
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP2_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP2_A_MASK 0x00800000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP2_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP2_A_RESET_VALUE 0x00000000

/* FIELD: INVERT_PRE_TAP3_A */
/* DESCRIPTION: */
/*   inverts pre_tap3 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP3_A_OFFSET 0x00000018
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP3_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP3_A_MASK 0x01000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP3_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG1_INVERT_PRE_TAP3_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG10 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_ADDR 0x020001A8
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_SIZE 32

/* FIELD: REFERENCE_MASK_NT */
/* DESCRIPTION: */
/*   Sets which taps of FFE contribute to the denominator computation of CTLE Adapt errorterm */
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_REFERENCE_MASK_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_REFERENCE_MASK_NT_BITWIDTH 0x00000015
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_REFERENCE_MASK_NT_MASK 0x001FFFFF
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_REFERENCE_MASK_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG10_REFERENCE_MASK_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG2 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ADDR 0x020001AC
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_SIZE 32

/* FIELD: ERRORTERM_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides errorterm value with errorterm_bypass */
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ERRORTERM_BYPASS_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ERRORTERM_BYPASS_NT_BITWIDTH 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ERRORTERM_BYPASS_NT_MASK 0x00000FFF
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ERRORTERM_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ERRORTERM_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_FOM_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides fom value with anlt_fom_bypass */
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ANLT_FOM_BYPASS_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ANLT_FOM_BYPASS_NT_BITWIDTH 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ANLT_FOM_BYPASS_NT_MASK 0x00FFF000
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ANLT_FOM_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG2_ANLT_FOM_BYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG3 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ADDR 0x020001B0
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_SIZE 32

/* FIELD: ANLT_POST_TAP1_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt post_tap1 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP1_BYPASS_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP1_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP1_BYPASS_NT_MASK 0x00000003
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP1_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP1_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_POST_TAP2_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt post_tap2 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP2_BYPASS_NT_OFFSET 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP2_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP2_BYPASS_NT_MASK 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP2_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP2_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_POST_TAP3_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt post_tap3 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP3_BYPASS_NT_OFFSET 0x00000004
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP3_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP3_BYPASS_NT_MASK 0x00000030
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP3_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_POST_TAP3_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_MAIN_TAP_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt main_tap inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_MAIN_TAP_BYPASS_NT_OFFSET 0x00000006
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_MAIN_TAP_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_MAIN_TAP_BYPASS_NT_MASK 0x000000C0
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_MAIN_TAP_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_MAIN_TAP_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP1_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt pre_tap1 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP1_BYPASS_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP1_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP1_BYPASS_NT_MASK 0x00000300
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP1_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP1_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP2_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt pre_tap2 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP2_BYPASS_NT_OFFSET 0x0000000A
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP2_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP2_BYPASS_NT_MASK 0x00000C00
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP2_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP2_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP3_BYPASS_NT */
/* DESCRIPTION: */
/*   When bypass is enabled, overrides anlt pre_tap3 inc/dec result */
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP3_BYPASS_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP3_BYPASS_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP3_BYPASS_NT_MASK 0x00003000
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP3_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG3_ANLT_PRE_TAP3_BYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG4 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_ADDR 0x020001B4
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_SIZE 32

/* FIELD: DEADZONE_POS_PRE_TAP3_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre3/main greater-than regvalue/128, anlt_pre_tap3 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP3_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP3_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP3_NT_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_POS_PRE_TAP2_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre2/main greater-than regvalue/128, anlt_pre_tap2 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP2_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP2_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP2_NT_MASK 0x0000FF00
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_POS_PRE_TAP1_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre1/main greater-than regvalue/128, anlt_pre_tap1 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP1_NT_OFFSET 0x00000010
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP1_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP1_NT_MASK 0x00FF0000
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG4_DEADZONE_POS_PRE_TAP1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG5 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_ADDR 0x020001B8
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_SIZE 32

/* FIELD: DEADZONE_POS_POST_TAP1_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post1/main greater-than regvalue/128, anlt_post_tap1 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP1_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP1_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP1_NT_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_POS_POST_TAP2_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post2/main greater-than regvalue/128, anlt_post_tap2 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP2_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP2_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP2_NT_MASK 0x0000FF00
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_POS_POST_TAP3_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post3/main greater-than regvalue/128, anlt_post_tap3 inc/dec=1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP3_NT_OFFSET 0x00000010
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP3_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP3_NT_MASK 0x00FF0000
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG5_DEADZONE_POS_POST_TAP3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG6 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_ADDR 0x020001BC
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_SIZE 32

/* FIELD: DEADZONE_NEG_PRE_TAP3_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre3/main less-than regvalue/128, anlt_pre_tap3 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP3_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP3_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP3_NT_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_NEG_PRE_TAP2_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre2/main less-than regvalue/128, anlt_pre_tap2 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP2_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP2_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP2_NT_MASK 0x0000FF00
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_NEG_PRE_TAP1_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef pre1/main less-than regvalue/128, anlt_pre_tap1 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP1_NT_OFFSET 0x00000010
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP1_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP1_NT_MASK 0x00FF0000
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG6_DEADZONE_NEG_PRE_TAP1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG7 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_ADDR 0x020001C0
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_SIZE 32

/* FIELD: DEADZONE_NEG_POST_TAP1_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post1/main less-than regvalue/128, anlt_post_tap1 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP1_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP1_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP1_NT_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_NEG_POST_TAP2_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post2/main less-than regvalue/128, anlt_post_tap2 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP2_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP2_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP2_NT_MASK 0x0000FF00
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_NEG_POST_TAP3_NT */
/* DESCRIPTION: */
/*   If ratio of FFE coef post3/main less-than regvalue/128, anlt_post_tap3 inc/dec=-1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP3_NT_OFFSET 0x00000010
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP3_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP3_NT_MASK 0x00FF0000
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG7_DEADZONE_NEG_POST_TAP3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG8 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_ADDR 0x020001C4
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_SIZE 32

/* FIELD: DEADZONE_POS_ERRORTERM_NT */
/* DESCRIPTION: */
/*   If CTLE errorterm greater-than regvalue and errorterm_mode==0, sets ctle adapt errorterm to +1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_POS_ERRORTERM_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_POS_ERRORTERM_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_POS_ERRORTERM_NT_MASK 0x000000FF
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_POS_ERRORTERM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_POS_ERRORTERM_NT_RESET_VALUE 0x00000000

/* FIELD: DEADZONE_NEG_ERRORTERM_NT */
/* DESCRIPTION: */
/*   If CTLE errorterm less-than regvalue and errorterm_mode==0, sets ctle adapt errorterm to -1 */
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_NEG_ERRORTERM_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_NEG_ERRORTERM_NT_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_NEG_ERRORTERM_NT_MASK 0x0000FF00
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_NEG_ERRORTERM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG8_DEADZONE_NEG_ERRORTERM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_REG9 */
/* DESCRIPTION: */
/*   Override register for CTLE boost error calculatiing setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ADDR 0x020001C8
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_SIZE 32

/* FIELD: ERRORTERM_MASK_NT */
/* DESCRIPTION: */
/*   Sets which taps of FFE contribute to the numerator of CTLE Adapt errorterm */
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MASK_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MASK_NT_BITWIDTH 0x00000015
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MASK_NT_MASK 0x001FFFFF
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MASK_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MASK_NT_RESET_VALUE 0x00000000

/* FIELD: ERRORTERM_MODE_NT */
/* DESCRIPTION: */
/*   1 - CTLE Adapt uses computed errorterm (proportional LMS) */
/*   0 - CTLE Adapt uses quantized +/-1 quantized errorterm (bang-bang) */
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MODE_NT_OFFSET 0x00000015
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MODE_NT_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MODE_NT_MASK 0x00200000
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_ERROR_CALC_REG9_ERRORTERM_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_ERROR_CALC_STATUS */
/* DESCRIPTION: */
/*   watchdog timeout */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ADDR 0x020001CC
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_SIZE 32

/* FIELD: ANLT_POST_TAP3_NT */
/* DESCRIPTION: */
/*   Status: post_tap3 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP3_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP3_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP3_NT_MASK 0x00000003
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_POST_TAP2_NT */
/* DESCRIPTION: */
/*   Status: post_tap2 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP2_NT_OFFSET 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP2_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP2_NT_MASK 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_POST_TAP1_NT */
/* DESCRIPTION: */
/*   Status: post_tap1 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP1_NT_OFFSET 0x00000004
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP1_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP1_NT_MASK 0x00000030
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_POST_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_MAIN_TAP_NT */
/* DESCRIPTION: */
/*   Status: main_tap inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_MAIN_TAP_NT_OFFSET 0x00000006
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_MAIN_TAP_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_MAIN_TAP_NT_MASK 0x000000C0
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_MAIN_TAP_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_MAIN_TAP_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP1_NT */
/* DESCRIPTION: */
/*   Status: pre_tap1 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP1_NT_OFFSET 0x00000008
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP1_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP1_NT_MASK 0x00000300
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP2_NT */
/* DESCRIPTION: */
/*   Status: pre_tap2 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP2_NT_OFFSET 0x0000000A
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP2_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP2_NT_MASK 0x00000C00
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: ANLT_PRE_TAP3_NT */
/* DESCRIPTION: */
/*   Status: pre_tap3 inc/dec/hold */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP3_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP3_NT_BITWIDTH 0x00000002
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP3_NT_MASK 0x00003000
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_ANLT_PRE_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: adapt_error_calc done calculation */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_LOCK_A_OFFSET 0x0000000E
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_LOCK_A_MASK 0x00004000
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: watchdog done */
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x0000000F
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00008000
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_ERROR_CALC_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_LMS */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_LMS_ADDR 0x020001D0
#define RX_CTLE_ADAPT_LMS_SIZE 32

/* FIELD: INVERT_ENA_A */
/* DESCRIPTION: */
/*   Inverts the direction of the CTLE adaption */
#define RX_CTLE_ADAPT_LMS_INVERT_ENA_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_LMS_INVERT_ENA_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_LMS_INVERT_ENA_A_MASK 0x00000001
#define RX_CTLE_ADAPT_LMS_INVERT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_LMS_INVERT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: MIN_SETTING_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable ctle_boost value applied. */
/*   E.g. if regvalue=2, values below 2 will be clipped to 2. */
#define RX_CTLE_ADAPT_LMS_MIN_SETTING_A_OFFSET 0x00000001
#define RX_CTLE_ADAPT_LMS_MIN_SETTING_A_BITWIDTH 0x00000004
#define RX_CTLE_ADAPT_LMS_MIN_SETTING_A_MASK 0x0000001E
#define RX_CTLE_ADAPT_LMS_MIN_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_LMS_MIN_SETTING_A_RESET_VALUE 0x00000000

/* FIELD: MAX_SETTING_A */
/* DESCRIPTION: */
/*   Sets a range limit on allowable ctle_boost value applied. */
/*   E.g. if regvalue=8, values above 8 will be clipped to 8. */
#define RX_CTLE_ADAPT_LMS_MAX_SETTING_A_OFFSET 0x00000005
#define RX_CTLE_ADAPT_LMS_MAX_SETTING_A_BITWIDTH 0x00000004
#define RX_CTLE_ADAPT_LMS_MAX_SETTING_A_MASK 0x000001E0
#define RX_CTLE_ADAPT_LMS_MAX_SETTING_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_LMS_MAX_SETTING_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_MEASURE */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_MEASURE_ADDR 0x020001D4
#define RX_CTLE_ADAPT_MEASURE_SIZE 32

/* FIELD: HOLD_ENA_A */
/* DESCRIPTION: */
/*   Debug feature - when set to 1 enables single-stepping of adaption FSM */
/*   FSM will advance on rising-edge of continue */
#define RX_CTLE_ADAPT_MEASURE_HOLD_ENA_A_OFFSET 0x00000010
#define RX_CTLE_ADAPT_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_MEASURE_HOLD_ENA_A_MASK 0x00010000
#define RX_CTLE_ADAPT_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUE_A */
/* DESCRIPTION: */
/*   Debug feature - used when hold_ena=1 */
/*   When hold_ena=1 rising edge of this signal will advance the FSM by one adapt cycle */
#define RX_CTLE_ADAPT_MEASURE_CONTINUE_A_OFFSET 0x00000011
#define RX_CTLE_ADAPT_MEASURE_CONTINUE_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_MEASURE_CONTINUE_A_MASK 0x00020000
#define RX_CTLE_ADAPT_MEASURE_CONTINUE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_MEASURE_CONTINUE_A_RESET_VALUE 0x00000000

/* FIELD: NUM_SAMPLES_A */
/* DESCRIPTION: */
/*   Waits regvalue num samples to wait before each iteration of adaption - recommendation=0 */
#define RX_CTLE_ADAPT_MEASURE_NUM_SAMPLES_A_OFFSET 0x00000018
#define RX_CTLE_ADAPT_MEASURE_NUM_SAMPLES_A_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_MEASURE_NUM_SAMPLES_A_MASK 0xFF000000
#define RX_CTLE_ADAPT_MEASURE_NUM_SAMPLES_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_MEASURE_NUM_SAMPLES_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   CTLE Boost lookup table */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_REG1_ADDR 0x020001D8
#define RX_CTLE_ADAPT_REG1_SIZE 32

/* FIELD: BOOST1_LUT0_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT0_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT0_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT0_NT_MASK 0x00000007
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT0_NT_RESET_VALUE 0x00000000

/* FIELD: BOOST1_LUT1_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT1_NT_OFFSET 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT1_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT1_NT_MASK 0x00000038
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT1_NT_RESET_VALUE 0x00000001

/* FIELD: BOOST1_LUT2_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT2_NT_OFFSET 0x00000006
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT2_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT2_NT_MASK 0x000001C0
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT2_NT_RESET_VALUE 0x00000001

/* FIELD: BOOST1_LUT3_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT3_NT_OFFSET 0x00000009
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT3_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT3_NT_MASK 0x00000E00
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT3_NT_RESET_VALUE 0x00000002

/* FIELD: BOOST1_LUT4_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT4_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT4_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT4_NT_MASK 0x00007000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT4_NT_RESET_VALUE 0x00000002

/* FIELD: BOOST1_LUT5_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT5_NT_OFFSET 0x0000000F
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT5_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT5_NT_MASK 0x00038000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT5_NT_RESET_VALUE 0x00000004

/* FIELD: BOOST1_LUT6_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT6_NT_OFFSET 0x00000012
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT6_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT6_NT_MASK 0x001C0000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT6_NT_RESET_VALUE 0x00000004

/* FIELD: BOOST1_LUT7_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT7_NT_OFFSET 0x00000015
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT7_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT7_NT_MASK 0x00E00000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT7_NT_RESET_VALUE 0x00000005

/* FIELD: BOOST1_LUT8_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT8_NT_OFFSET 0x00000018
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT8_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT8_NT_MASK 0x07000000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT8_NT_RESET_VALUE 0x00000005

/* FIELD: BOOST1_LUT9_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT9_NT_OFFSET 0x0000001B
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT9_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT9_NT_MASK 0x38000000
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG1_BOOST1_LUT9_NT_RESET_VALUE 0x00000006

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   CTLE Boost lookup table */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_REG2_ADDR 0x020001DC
#define RX_CTLE_ADAPT_REG2_SIZE 32

/* FIELD: BOOST1_LUT10_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT10_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT10_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT10_NT_MASK 0x00000007
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT10_NT_RESET_VALUE 0x00000006

/* FIELD: BOOST1_LUT11_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT11_NT_OFFSET 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT11_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT11_NT_MASK 0x00000038
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT11_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST1_LUT12_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT12_NT_OFFSET 0x00000006
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT12_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT12_NT_MASK 0x000001C0
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT12_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST1_LUT13_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT13_NT_OFFSET 0x00000009
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT13_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT13_NT_MASK 0x00000E00
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT13_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST1_LUT14_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT14_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT14_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT14_NT_MASK 0x00007000
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT14_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST1_LUT15_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT15_NT_OFFSET 0x0000000F
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT15_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT15_NT_MASK 0x00038000
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST1_LUT15_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST2_LUT0_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT0_NT_OFFSET 0x00000012
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT0_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT0_NT_MASK 0x001C0000
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT0_NT_RESET_VALUE 0x00000000

/* FIELD: BOOST2_LUT1_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT1_NT_OFFSET 0x00000015
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT1_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT1_NT_MASK 0x00E00000
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT1_NT_RESET_VALUE 0x00000000

/* FIELD: BOOST2_LUT2_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT2_NT_OFFSET 0x00000018
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT2_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT2_NT_MASK 0x07000000
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT2_NT_RESET_VALUE 0x00000001

/* FIELD: BOOST2_LUT3_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT3_NT_OFFSET 0x0000001B
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT3_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT3_NT_MASK 0x38000000
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG2_BOOST2_LUT3_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_REG3 */
/* DESCRIPTION: */
/*   CTLE Boost lookup table */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_REG3_ADDR 0x020001E0
#define RX_CTLE_ADAPT_REG3_SIZE 32

/* FIELD: BOOST2_LUT4_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT4_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT4_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT4_NT_MASK 0x00000007
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT4_NT_RESET_VALUE 0x00000002

/* FIELD: BOOST2_LUT5_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT5_NT_OFFSET 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT5_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT5_NT_MASK 0x00000038
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT5_NT_RESET_VALUE 0x00000002

/* FIELD: BOOST2_LUT6_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT6_NT_OFFSET 0x00000006
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT6_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT6_NT_MASK 0x000001C0
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT6_NT_RESET_VALUE 0x00000004

/* FIELD: BOOST2_LUT7_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT7_NT_OFFSET 0x00000009
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT7_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT7_NT_MASK 0x00000E00
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT7_NT_RESET_VALUE 0x00000004

/* FIELD: BOOST2_LUT8_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT8_NT_OFFSET 0x0000000C
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT8_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT8_NT_MASK 0x00007000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT8_NT_RESET_VALUE 0x00000005

/* FIELD: BOOST2_LUT9_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT9_NT_OFFSET 0x0000000F
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT9_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT9_NT_MASK 0x00038000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT9_NT_RESET_VALUE 0x00000005

/* FIELD: BOOST2_LUT10_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT10_NT_OFFSET 0x00000012
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT10_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT10_NT_MASK 0x001C0000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT10_NT_RESET_VALUE 0x00000006

/* FIELD: BOOST2_LUT11_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT11_NT_OFFSET 0x00000015
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT11_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT11_NT_MASK 0x00E00000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT11_NT_RESET_VALUE 0x00000006

/* FIELD: BOOST2_LUT12_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT12_NT_OFFSET 0x00000018
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT12_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT12_NT_MASK 0x07000000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT12_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST2_LUT13_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT13_NT_OFFSET 0x0000001B
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT13_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT13_NT_MASK 0x38000000
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG3_BOOST2_LUT13_NT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_REG4 */
/* DESCRIPTION: */
/*   CTLE Boost lookup table */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_REG4_ADDR 0x020001E4
#define RX_CTLE_ADAPT_REG4_SIZE 32

/* FIELD: BOOST2_LUT14_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT14_NT_OFFSET 0x00000000
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT14_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT14_NT_MASK 0x00000007
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT14_NT_RESET_VALUE 0x00000007

/* FIELD: BOOST2_LUT15_NT */
/* DESCRIPTION: */
/*   CTLE boost lookup table value */
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT15_NT_OFFSET 0x00000003
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT15_NT_BITWIDTH 0x00000003
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT15_NT_MASK 0x00000038
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_REG4_BOOST2_LUT15_NT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_SETUP */
/* DESCRIPTION: */
/*   Override register for CTLE boost setting. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_SETUP_ADDR 0x020001E8
#define RX_CTLE_ADAPT_SETUP_SIZE 32

/* FIELD: MU_A */
/* DESCRIPTION: */
/*   Sets the LMS mu: 2**-regvalue per adapt iteration */
#define RX_CTLE_ADAPT_SETUP_MU_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_SETUP_MU_A_BITWIDTH 0x00000005
#define RX_CTLE_ADAPT_SETUP_MU_A_MASK 0x0000001F
#define RX_CTLE_ADAPT_SETUP_MU_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_SETUP_MU_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_A */
/* DESCRIPTION: */
/*   runs adapt block for regvalue number of iterations, each iteration is 1 clock cycle */
#define RX_CTLE_ADAPT_SETUP_WATCHDOG_A_OFFSET 0x00000008
#define RX_CTLE_ADAPT_SETUP_WATCHDOG_A_BITWIDTH 0x00000008
#define RX_CTLE_ADAPT_SETUP_WATCHDOG_A_MASK 0x0000FF00
#define RX_CTLE_ADAPT_SETUP_WATCHDOG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_CTLE_ADAPT_SETUP_WATCHDOG_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_CTLE_ADAPT_STATUS */
/* DESCRIPTION: */
/*   ctle boost */
/* ------------------------------------- */
#define RX_CTLE_ADAPT_STATUS_ADDR 0x020001EC
#define RX_CTLE_ADAPT_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_CTLE_ADAPT_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_CTLE_ADAPT_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_STATUS_LOCK_A_MASK 0x00000001
#define RX_CTLE_ADAPT_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: DERIV_LOCK_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_CTLE_ADAPT_STATUS_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_CTLE_ADAPT_STATUS_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_STATUS_DERIV_LOCK_A_MASK 0x00000002
#define RX_CTLE_ADAPT_STATUS_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_STATUS_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_CTLE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000002
#define RX_CTLE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_CTLE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000004
#define RX_CTLE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: CTLE_BOOST_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_CTLE_ADAPT_STATUS_CTLE_BOOST_A_OFFSET 0x00000003
#define RX_CTLE_ADAPT_STATUS_CTLE_BOOST_A_BITWIDTH 0x00000004
#define RX_CTLE_ADAPT_STATUS_CTLE_BOOST_A_MASK 0x00000078
#define RX_CTLE_ADAPT_STATUS_CTLE_BOOST_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_CTLE_ADAPT_STATUS_CTLE_BOOST_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG1 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG1_ADDR 0x020001F0
#define RX_DATABIST_TOP_RDREG1_SIZE 32

/* FIELD: STATE_NT */
/* DESCRIPTION: */
/*   Parameter defined state: */
/*     S_IDLE= 3'b000 */
/*     S_LOAD= 3'b001 */
/*     S_PRE_LOCK= 3'b010 */
/*     S_LOCKED= 3'b011 */
/*     S_LOSS_LOCK= 3'b100 */
#define RX_DATABIST_TOP_RDREG1_STATE_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG1_STATE_NT_BITWIDTH 0x00000003
#define RX_DATABIST_TOP_RDREG1_STATE_NT_MASK 0x00000007
#define RX_DATABIST_TOP_RDREG1_STATE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG1_STATE_NT_RESET_VALUE 0x00000000

/* FIELD: LOCKED_NT */
/* DESCRIPTION: */
/*   High if currently in locked state */
#define RX_DATABIST_TOP_RDREG1_LOCKED_NT_OFFSET 0x00000003
#define RX_DATABIST_TOP_RDREG1_LOCKED_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_RDREG1_LOCKED_NT_MASK 0x00000008
#define RX_DATABIST_TOP_RDREG1_LOCKED_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG1_LOCKED_NT_RESET_VALUE 0x00000000

/* FIELD: ERROR_CNT_DONE_NT */
/* DESCRIPTION: */
/*   Signals databist error counting is finished */
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_DONE_NT_OFFSET 0x00000004
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_DONE_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_DONE_NT_MASK 0x00000010
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_DONE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_DONE_NT_RESET_VALUE 0x00000000

/* FIELD: ERROR_CNT_OVERFLOW_NT */
/* DESCRIPTION: */
/*   If 1, overflow has occurred in the error counting */
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_OVERFLOW_NT_OFFSET 0x00000005
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_OVERFLOW_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_OVERFLOW_NT_MASK 0x00000020
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_OVERFLOW_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG1_ERROR_CNT_OVERFLOW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG10 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG10_ADDR 0x020001F4
#define RX_DATABIST_TOP_RDREG10_SIZE 32

/* FIELD: REC_DATA2_NT */
/* DESCRIPTION: */
/*    3rd 32 bits of received data */
#define RX_DATABIST_TOP_RDREG10_REC_DATA2_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG10_REC_DATA2_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG10_REC_DATA2_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG10_REC_DATA2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG10_REC_DATA2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG11 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG11_ADDR 0x020001F8
#define RX_DATABIST_TOP_RDREG11_SIZE 32

/* FIELD: REC_DATA3_NT */
/* DESCRIPTION: */
/*    4th 32 bits of received data */
#define RX_DATABIST_TOP_RDREG11_REC_DATA3_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG11_REC_DATA3_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG11_REC_DATA3_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG11_REC_DATA3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG11_REC_DATA3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG12 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG12_ADDR 0x020001FC
#define RX_DATABIST_TOP_RDREG12_SIZE 32

/* FIELD: BURST_ERR_FOUND_CNT_NT */
/* DESCRIPTION: */
/*   Total number of burst errors found when burst error measurement enabled */
#define RX_DATABIST_TOP_RDREG12_BURST_ERR_FOUND_CNT_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG12_BURST_ERR_FOUND_CNT_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG12_BURST_ERR_FOUND_CNT_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG12_BURST_ERR_FOUND_CNT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG12_BURST_ERR_FOUND_CNT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG13 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG13_ADDR 0x02000200
#define RX_DATABIST_TOP_RDREG13_SIZE 32

/* FIELD: PREFEC_HIST0_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 0 symbol errors */
#define RX_DATABIST_TOP_RDREG13_PREFEC_HIST0_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG13_PREFEC_HIST0_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG13_PREFEC_HIST0_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG13_PREFEC_HIST0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG13_PREFEC_HIST0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG14 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG14_ADDR 0x02000204
#define RX_DATABIST_TOP_RDREG14_SIZE 32

/* FIELD: PREFEC_HIST1_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 1 symbol errors */
#define RX_DATABIST_TOP_RDREG14_PREFEC_HIST1_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG14_PREFEC_HIST1_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG14_PREFEC_HIST1_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG14_PREFEC_HIST1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG14_PREFEC_HIST1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG15 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG15_ADDR 0x02000208
#define RX_DATABIST_TOP_RDREG15_SIZE 32

/* FIELD: PREFEC_HIST2_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 2 symbol errors */
#define RX_DATABIST_TOP_RDREG15_PREFEC_HIST2_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG15_PREFEC_HIST2_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG15_PREFEC_HIST2_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG15_PREFEC_HIST2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG15_PREFEC_HIST2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG16 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG16_ADDR 0x0200020C
#define RX_DATABIST_TOP_RDREG16_SIZE 32

/* FIELD: PREFEC_HIST3_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 3 symbol errors */
#define RX_DATABIST_TOP_RDREG16_PREFEC_HIST3_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG16_PREFEC_HIST3_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG16_PREFEC_HIST3_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG16_PREFEC_HIST3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG16_PREFEC_HIST3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG17 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG17_ADDR 0x02000210
#define RX_DATABIST_TOP_RDREG17_SIZE 32

/* FIELD: PREFEC_HIST4_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 4 symbol errors */
#define RX_DATABIST_TOP_RDREG17_PREFEC_HIST4_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG17_PREFEC_HIST4_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG17_PREFEC_HIST4_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG17_PREFEC_HIST4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG17_PREFEC_HIST4_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG18 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG18_ADDR 0x02000214
#define RX_DATABIST_TOP_RDREG18_SIZE 32

/* FIELD: PREFEC_HIST5_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 5 symbol errors */
#define RX_DATABIST_TOP_RDREG18_PREFEC_HIST5_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG18_PREFEC_HIST5_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG18_PREFEC_HIST5_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG18_PREFEC_HIST5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG18_PREFEC_HIST5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG19 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG19_ADDR 0x02000218
#define RX_DATABIST_TOP_RDREG19_SIZE 32

/* FIELD: PREFEC_HIST6_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 6 symbol errors */
#define RX_DATABIST_TOP_RDREG19_PREFEC_HIST6_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG19_PREFEC_HIST6_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG19_PREFEC_HIST6_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG19_PREFEC_HIST6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG19_PREFEC_HIST6_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG2 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG2_ADDR 0x0200021C
#define RX_DATABIST_TOP_RDREG2_SIZE 32

/* FIELD: ERROR_CNT_NT */
/* DESCRIPTION: */
/*   lower 32bits of errors for a given amount of time specified in timer_cnt_nt */
#define RX_DATABIST_TOP_RDREG2_ERROR_CNT_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG2_ERROR_CNT_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG2_ERROR_CNT_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG2_ERROR_CNT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG2_ERROR_CNT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG20 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG20_ADDR 0x02000220
#define RX_DATABIST_TOP_RDREG20_SIZE 32

/* FIELD: PREFEC_HIST7_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 7 symbol errors */
#define RX_DATABIST_TOP_RDREG20_PREFEC_HIST7_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG20_PREFEC_HIST7_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG20_PREFEC_HIST7_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG20_PREFEC_HIST7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG20_PREFEC_HIST7_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG21 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG21_ADDR 0x02000224
#define RX_DATABIST_TOP_RDREG21_SIZE 32

/* FIELD: PREFEC_HIST8_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 8 symbol errors */
#define RX_DATABIST_TOP_RDREG21_PREFEC_HIST8_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG21_PREFEC_HIST8_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG21_PREFEC_HIST8_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG21_PREFEC_HIST8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG21_PREFEC_HIST8_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG22 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG22_ADDR 0x02000228
#define RX_DATABIST_TOP_RDREG22_SIZE 32

/* FIELD: PREFEC_HIST9_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 9 symbol errors */
#define RX_DATABIST_TOP_RDREG22_PREFEC_HIST9_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG22_PREFEC_HIST9_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG22_PREFEC_HIST9_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG22_PREFEC_HIST9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG22_PREFEC_HIST9_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG23 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG23_ADDR 0x0200022C
#define RX_DATABIST_TOP_RDREG23_SIZE 32

/* FIELD: PREFEC_HIST10_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 10 symbol errors */
#define RX_DATABIST_TOP_RDREG23_PREFEC_HIST10_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG23_PREFEC_HIST10_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG23_PREFEC_HIST10_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG23_PREFEC_HIST10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG23_PREFEC_HIST10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG24 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG24_ADDR 0x02000230
#define RX_DATABIST_TOP_RDREG24_SIZE 32

/* FIELD: PREFEC_HIST11_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 11 symbol errors */
#define RX_DATABIST_TOP_RDREG24_PREFEC_HIST11_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG24_PREFEC_HIST11_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG24_PREFEC_HIST11_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG24_PREFEC_HIST11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG24_PREFEC_HIST11_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG25 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG25_ADDR 0x02000234
#define RX_DATABIST_TOP_RDREG25_SIZE 32

/* FIELD: PREFEC_HIST12_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 12 symbol errors */
#define RX_DATABIST_TOP_RDREG25_PREFEC_HIST12_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG25_PREFEC_HIST12_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG25_PREFEC_HIST12_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG25_PREFEC_HIST12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG25_PREFEC_HIST12_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG26 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG26_ADDR 0x02000238
#define RX_DATABIST_TOP_RDREG26_SIZE 32

/* FIELD: PREFEC_HIST13_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 13 symbol errors */
#define RX_DATABIST_TOP_RDREG26_PREFEC_HIST13_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG26_PREFEC_HIST13_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG26_PREFEC_HIST13_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG26_PREFEC_HIST13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG26_PREFEC_HIST13_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG27 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG27_ADDR 0x0200023C
#define RX_DATABIST_TOP_RDREG27_SIZE 32

/* FIELD: PREFEC_HIST14_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 14 symbol errors */
#define RX_DATABIST_TOP_RDREG27_PREFEC_HIST14_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG27_PREFEC_HIST14_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG27_PREFEC_HIST14_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG27_PREFEC_HIST14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG27_PREFEC_HIST14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG28 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG28_ADDR 0x02000240
#define RX_DATABIST_TOP_RDREG28_SIZE 32

/* FIELD: PREFEC_HIST15_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 15 symbol errors */
#define RX_DATABIST_TOP_RDREG28_PREFEC_HIST15_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG28_PREFEC_HIST15_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG28_PREFEC_HIST15_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG28_PREFEC_HIST15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG28_PREFEC_HIST15_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG29 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG29_ADDR 0x02000244
#define RX_DATABIST_TOP_RDREG29_SIZE 32

/* FIELD: PREFEC_HIST16_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 16 symbol errors */
#define RX_DATABIST_TOP_RDREG29_PREFEC_HIST16_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG29_PREFEC_HIST16_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG29_PREFEC_HIST16_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG29_PREFEC_HIST16_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG29_PREFEC_HIST16_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG3 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG3_ADDR 0x02000248
#define RX_DATABIST_TOP_RDREG3_SIZE 32

/* FIELD: ERROR_CNT_55T32_NT */
/* DESCRIPTION: */
/*   higher 16 bits of errors for a given amount of time specified in timer_cnt_nt */
#define RX_DATABIST_TOP_RDREG3_ERROR_CNT_55T32_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG3_ERROR_CNT_55T32_NT_BITWIDTH 0x00000018
#define RX_DATABIST_TOP_RDREG3_ERROR_CNT_55T32_NT_MASK 0x00FFFFFF
#define RX_DATABIST_TOP_RDREG3_ERROR_CNT_55T32_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG3_ERROR_CNT_55T32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG30 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG30_ADDR 0x0200024C
#define RX_DATABIST_TOP_RDREG30_SIZE 32

/* FIELD: PREFEC_HIST17_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 17 symbol errors */
#define RX_DATABIST_TOP_RDREG30_PREFEC_HIST17_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG30_PREFEC_HIST17_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG30_PREFEC_HIST17_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG30_PREFEC_HIST17_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG30_PREFEC_HIST17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG31 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG31_ADDR 0x02000250
#define RX_DATABIST_TOP_RDREG31_SIZE 32

/* FIELD: PREFEC_HIST18_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 18 symbol errors */
#define RX_DATABIST_TOP_RDREG31_PREFEC_HIST18_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG31_PREFEC_HIST18_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG31_PREFEC_HIST18_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG31_PREFEC_HIST18_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG31_PREFEC_HIST18_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG32 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG32_ADDR 0x02000254
#define RX_DATABIST_TOP_RDREG32_SIZE 32

/* FIELD: PREFEC_HIST19_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 19 symbol errors */
#define RX_DATABIST_TOP_RDREG32_PREFEC_HIST19_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG32_PREFEC_HIST19_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG32_PREFEC_HIST19_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG32_PREFEC_HIST19_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG32_PREFEC_HIST19_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG33 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG33_ADDR 0x02000258
#define RX_DATABIST_TOP_RDREG33_SIZE 32

/* FIELD: PREFEC_HIST20_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 20 symbol errors */
#define RX_DATABIST_TOP_RDREG33_PREFEC_HIST20_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG33_PREFEC_HIST20_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG33_PREFEC_HIST20_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG33_PREFEC_HIST20_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG33_PREFEC_HIST20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG34 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG34_ADDR 0x0200025C
#define RX_DATABIST_TOP_RDREG34_SIZE 32

/* FIELD: PREFEC_HIST21_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 21 symbol errors */
#define RX_DATABIST_TOP_RDREG34_PREFEC_HIST21_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG34_PREFEC_HIST21_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG34_PREFEC_HIST21_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG34_PREFEC_HIST21_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG34_PREFEC_HIST21_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG35 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG35_ADDR 0x02000260
#define RX_DATABIST_TOP_RDREG35_SIZE 32

/* FIELD: PREFEC_HIST22_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 22 symbol errors */
#define RX_DATABIST_TOP_RDREG35_PREFEC_HIST22_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG35_PREFEC_HIST22_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG35_PREFEC_HIST22_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG35_PREFEC_HIST22_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG35_PREFEC_HIST22_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG36 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG36_ADDR 0x02000264
#define RX_DATABIST_TOP_RDREG36_SIZE 32

/* FIELD: PREFEC_HIST23_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 23 symbol errors */
#define RX_DATABIST_TOP_RDREG36_PREFEC_HIST23_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG36_PREFEC_HIST23_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG36_PREFEC_HIST23_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG36_PREFEC_HIST23_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG36_PREFEC_HIST23_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG37 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG37_ADDR 0x02000268
#define RX_DATABIST_TOP_RDREG37_SIZE 32

/* FIELD: PREFEC_HIST24_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 24 symbol errors */
#define RX_DATABIST_TOP_RDREG37_PREFEC_HIST24_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG37_PREFEC_HIST24_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG37_PREFEC_HIST24_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG37_PREFEC_HIST24_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG37_PREFEC_HIST24_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG38 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG38_ADDR 0x0200026C
#define RX_DATABIST_TOP_RDREG38_SIZE 32

/* FIELD: PREFEC_HIST25_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 25 symbol errors */
#define RX_DATABIST_TOP_RDREG38_PREFEC_HIST25_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG38_PREFEC_HIST25_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG38_PREFEC_HIST25_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG38_PREFEC_HIST25_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG38_PREFEC_HIST25_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG39 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG39_ADDR 0x02000270
#define RX_DATABIST_TOP_RDREG39_SIZE 32

/* FIELD: PREFEC_HIST26_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 26 symbol errors */
#define RX_DATABIST_TOP_RDREG39_PREFEC_HIST26_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG39_PREFEC_HIST26_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG39_PREFEC_HIST26_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG39_PREFEC_HIST26_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG39_PREFEC_HIST26_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG4 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG4_ADDR 0x02000274
#define RX_DATABIST_TOP_RDREG4_SIZE 32

/* FIELD: EXPECT_DATA0_NT */
/* DESCRIPTION: */
/*    1st 32 bits of expected data */
#define RX_DATABIST_TOP_RDREG4_EXPECT_DATA0_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG4_EXPECT_DATA0_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG4_EXPECT_DATA0_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG4_EXPECT_DATA0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG4_EXPECT_DATA0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG40 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG40_ADDR 0x02000278
#define RX_DATABIST_TOP_RDREG40_SIZE 32

/* FIELD: PREFEC_HIST27_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 27 symbol errors */
#define RX_DATABIST_TOP_RDREG40_PREFEC_HIST27_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG40_PREFEC_HIST27_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG40_PREFEC_HIST27_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG40_PREFEC_HIST27_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG40_PREFEC_HIST27_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG41 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG41_ADDR 0x0200027C
#define RX_DATABIST_TOP_RDREG41_SIZE 32

/* FIELD: PREFEC_HIST28_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 28 symbol errors */
#define RX_DATABIST_TOP_RDREG41_PREFEC_HIST28_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG41_PREFEC_HIST28_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG41_PREFEC_HIST28_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG41_PREFEC_HIST28_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG41_PREFEC_HIST28_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG42 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG42_ADDR 0x02000280
#define RX_DATABIST_TOP_RDREG42_SIZE 32

/* FIELD: PREFEC_HIST29_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 29 symbol errors */
#define RX_DATABIST_TOP_RDREG42_PREFEC_HIST29_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG42_PREFEC_HIST29_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG42_PREFEC_HIST29_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG42_PREFEC_HIST29_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG42_PREFEC_HIST29_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG43 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG43_ADDR 0x02000284
#define RX_DATABIST_TOP_RDREG43_SIZE 32

/* FIELD: PREFEC_HIST30_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 30 symbol errors */
#define RX_DATABIST_TOP_RDREG43_PREFEC_HIST30_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG43_PREFEC_HIST30_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG43_PREFEC_HIST30_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG43_PREFEC_HIST30_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG43_PREFEC_HIST30_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG44 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG44_ADDR 0x02000288
#define RX_DATABIST_TOP_RDREG44_SIZE 32

/* FIELD: PREFEC_HIST31_NT */
/* DESCRIPTION: */
/*   Typically counts the number of codewords with 31 symbol errors */
#define RX_DATABIST_TOP_RDREG44_PREFEC_HIST31_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG44_PREFEC_HIST31_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG44_PREFEC_HIST31_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG44_PREFEC_HIST31_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG44_PREFEC_HIST31_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG45 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG45_ADDR 0x0200028C
#define RX_DATABIST_TOP_RDREG45_SIZE 32

/* FIELD: PREFEC_TOTAL_CW_CNT_NT */
/* DESCRIPTION: */
/*    Counts the total number of codewords analyzed  */
#define RX_DATABIST_TOP_RDREG45_PREFEC_TOTAL_CW_CNT_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG45_PREFEC_TOTAL_CW_CNT_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG45_PREFEC_TOTAL_CW_CNT_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG45_PREFEC_TOTAL_CW_CNT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG45_PREFEC_TOTAL_CW_CNT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG46 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST pre FEC checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG46_ADDR 0x02000290
#define RX_DATABIST_TOP_RDREG46_SIZE 32

/* FIELD: PREFEC_DONE_NT */
/* DESCRIPTION: */
/*    Asserts high when timer mode reaches num codewords a specified in timer_num_cw.  */
#define RX_DATABIST_TOP_RDREG46_PREFEC_DONE_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG46_PREFEC_DONE_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_RDREG46_PREFEC_DONE_NT_MASK 0x00000001
#define RX_DATABIST_TOP_RDREG46_PREFEC_DONE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG46_PREFEC_DONE_NT_RESET_VALUE 0x00000000

/* FIELD: PREFEC_OVERFLOW_NT */
/* DESCRIPTION: */
/*    Asserts high when prefec fifo overflow indicating prefec configuration wrong.  */
#define RX_DATABIST_TOP_RDREG46_PREFEC_OVERFLOW_NT_OFFSET 0x00000001
#define RX_DATABIST_TOP_RDREG46_PREFEC_OVERFLOW_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_RDREG46_PREFEC_OVERFLOW_NT_MASK 0x00000002
#define RX_DATABIST_TOP_RDREG46_PREFEC_OVERFLOW_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG46_PREFEC_OVERFLOW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG5 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG5_ADDR 0x02000294
#define RX_DATABIST_TOP_RDREG5_SIZE 32

/* FIELD: EXPECT_DATA1_NT */
/* DESCRIPTION: */
/*    2nd 32 bits of expected data */
#define RX_DATABIST_TOP_RDREG5_EXPECT_DATA1_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG5_EXPECT_DATA1_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG5_EXPECT_DATA1_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG5_EXPECT_DATA1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG5_EXPECT_DATA1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG6 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG6_ADDR 0x02000298
#define RX_DATABIST_TOP_RDREG6_SIZE 32

/* FIELD: EXPECT_DATA2_NT */
/* DESCRIPTION: */
/*    3rd 32 bits of expected data */
#define RX_DATABIST_TOP_RDREG6_EXPECT_DATA2_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG6_EXPECT_DATA2_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG6_EXPECT_DATA2_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG6_EXPECT_DATA2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG6_EXPECT_DATA2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG7 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG7_ADDR 0x0200029C
#define RX_DATABIST_TOP_RDREG7_SIZE 32

/* FIELD: EXPECT_DATA3_NT */
/* DESCRIPTION: */
/*    4th 32 bits of expected data */
#define RX_DATABIST_TOP_RDREG7_EXPECT_DATA3_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG7_EXPECT_DATA3_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG7_EXPECT_DATA3_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG7_EXPECT_DATA3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG7_EXPECT_DATA3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG8 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG8_ADDR 0x020002A0
#define RX_DATABIST_TOP_RDREG8_SIZE 32

/* FIELD: REC_DATA0_NT */
/* DESCRIPTION: */
/*    1st 32 bits of received data */
#define RX_DATABIST_TOP_RDREG8_REC_DATA0_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG8_REC_DATA0_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG8_REC_DATA0_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG8_REC_DATA0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG8_REC_DATA0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_RDREG9 */
/* DESCRIPTION: */
/*   Status registers for the Rx BIST checker */
/* ------------------------------------- */
#define RX_DATABIST_TOP_RDREG9_ADDR 0x020002A4
#define RX_DATABIST_TOP_RDREG9_SIZE 32

/* FIELD: REC_DATA1_NT */
/* DESCRIPTION: */
/*    2nd 32 bits of received data */
#define RX_DATABIST_TOP_RDREG9_REC_DATA1_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_RDREG9_REC_DATA1_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_RDREG9_REC_DATA1_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_RDREG9_REC_DATA1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABIST_TOP_RDREG9_REC_DATA1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG1 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG1_ADDR 0x020002A8
#define RX_DATABIST_TOP_REG1_SIZE 32

/* FIELD: LOCK_THRESHOLD_NT */
/* DESCRIPTION: */
/*   The number of cycles before entering lock state */
#define RX_DATABIST_TOP_REG1_LOCK_THRESHOLD_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG1_LOCK_THRESHOLD_NT_BITWIDTH 0x00000004
#define RX_DATABIST_TOP_REG1_LOCK_THRESHOLD_NT_MASK 0x0000000F
#define RX_DATABIST_TOP_REG1_LOCK_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_LOCK_THRESHOLD_NT_RESET_VALUE 0x00000001

/* FIELD: BIST_ENABLE_A */
/* DESCRIPTION: */
/*   Enable the Rx databist */
#define RX_DATABIST_TOP_REG1_BIST_ENABLE_A_OFFSET 0x00000004
#define RX_DATABIST_TOP_REG1_BIST_ENABLE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_BIST_ENABLE_A_MASK 0x00000010
#define RX_DATABIST_TOP_REG1_BIST_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_BIST_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: ERROR_CNT_CLR_A */
/* DESCRIPTION: */
/*   Clear the bist error count */
#define RX_DATABIST_TOP_REG1_ERROR_CNT_CLR_A_OFFSET 0x00000005
#define RX_DATABIST_TOP_REG1_ERROR_CNT_CLR_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_ERROR_CNT_CLR_A_MASK 0x00000020
#define RX_DATABIST_TOP_REG1_ERROR_CNT_CLR_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_ERROR_CNT_CLR_A_RESET_VALUE 0x00000000

/* FIELD: TX_ERROR_INJECT_ENABLE_A */
/* DESCRIPTION: */
/*   If enabled we introduce error to the Tx datapath */
#define RX_DATABIST_TOP_REG1_TX_ERROR_INJECT_ENABLE_A_OFFSET 0x00000006
#define RX_DATABIST_TOP_REG1_TX_ERROR_INJECT_ENABLE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_TX_ERROR_INJECT_ENABLE_A_MASK 0x00000040
#define RX_DATABIST_TOP_REG1_TX_ERROR_INJECT_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_TX_ERROR_INJECT_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: WALL_CLOCK_ENABLE_A */
/* DESCRIPTION: */
/*   Must be in wall clock mode, pull wall_clock_enable high then will start counting errors, when drop low will send number of errors to error count read only register */
#define RX_DATABIST_TOP_REG1_WALL_CLOCK_ENABLE_A_OFFSET 0x00000007
#define RX_DATABIST_TOP_REG1_WALL_CLOCK_ENABLE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_WALL_CLOCK_ENABLE_A_MASK 0x00000080
#define RX_DATABIST_TOP_REG1_WALL_CLOCK_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_WALL_CLOCK_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: BIST_MODE_NT */
/* DESCRIPTION: */
/*   0 - timer mode, 1 - wall clock mode, longer 80ms we need to set wall clock mode */
#define RX_DATABIST_TOP_REG1_BIST_MODE_NT_OFFSET 0x00000008
#define RX_DATABIST_TOP_REG1_BIST_MODE_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_BIST_MODE_NT_MASK 0x00000100
#define RX_DATABIST_TOP_REG1_BIST_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_BIST_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: BURST_MODE_NT */
/* DESCRIPTION: */
/*   0 - 1 consecutive burst error, 1 - 2 consective burst error, 2 - 3 consective burst error, 3 - 4 consective burst error */
#define RX_DATABIST_TOP_REG1_BURST_MODE_NT_OFFSET 0x00000009
#define RX_DATABIST_TOP_REG1_BURST_MODE_NT_BITWIDTH 0x00000003
#define RX_DATABIST_TOP_REG1_BURST_MODE_NT_MASK 0x00000E00
#define RX_DATABIST_TOP_REG1_BURST_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_BURST_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: SWAP_MSB_LSB_A */
/* DESCRIPTION: */
/*   0 - normal mode, 1 - swap msb and lsb for PAM4 symbol */
#define RX_DATABIST_TOP_REG1_SWAP_MSB_LSB_A_OFFSET 0x0000000C
#define RX_DATABIST_TOP_REG1_SWAP_MSB_LSB_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_SWAP_MSB_LSB_A_MASK 0x00001000
#define RX_DATABIST_TOP_REG1_SWAP_MSB_LSB_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_SWAP_MSB_LSB_A_RESET_VALUE 0x00000000

/* FIELD: BURST_ERR_SYMBOL_MODE_NT */
/* DESCRIPTION: */
/*   0 - NRZ 1bit per symbol mode, 1 - PAM4 2bits per symbol mode */
#define RX_DATABIST_TOP_REG1_BURST_ERR_SYMBOL_MODE_NT_OFFSET 0x0000000D
#define RX_DATABIST_TOP_REG1_BURST_ERR_SYMBOL_MODE_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG1_BURST_ERR_SYMBOL_MODE_NT_MASK 0x00002000
#define RX_DATABIST_TOP_REG1_BURST_ERR_SYMBOL_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG1_BURST_ERR_SYMBOL_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG10 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST Pre FEC checker. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG10_ADDR 0x020002AC
#define RX_DATABIST_TOP_REG10_SIZE 32

/* FIELD: PREFEC_ENABLE_A */
/* DESCRIPTION: */
/*   Measures statistical distribution of symbol errors per codeword.  */
/*   Bins into a histogram of symerr per codeword - CW for offline analysis.   */
/*       Usage:  */
/*             RX Bist should be configured in wall mode.   */
/*             RX Bist needs to be locked prior to enabling this feature. */
#define RX_DATABIST_TOP_REG10_PREFEC_ENABLE_A_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG10_PREFEC_ENABLE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG10_PREFEC_ENABLE_A_MASK 0x00000001
#define RX_DATABIST_TOP_REG10_PREFEC_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: PREFEC_CLR_A */
/* DESCRIPTION: */
/*   Clears the accumulated statistics. Level sensitive. */
#define RX_DATABIST_TOP_REG10_PREFEC_CLR_A_OFFSET 0x00000001
#define RX_DATABIST_TOP_REG10_PREFEC_CLR_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG10_PREFEC_CLR_A_MASK 0x00000002
#define RX_DATABIST_TOP_REG10_PREFEC_CLR_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_CLR_A_RESET_VALUE 0x00000000

/* FIELD: PREFEC_MODE_A */
/* DESCRIPTION: */
/*   Configures the design into one of two modes  */
/*       0: timer mode, runs for a predefined number of codewords  */
/*       1: wall mode, runs forever until enable deasserted */
#define RX_DATABIST_TOP_REG10_PREFEC_MODE_A_OFFSET 0x00000002
#define RX_DATABIST_TOP_REG10_PREFEC_MODE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG10_PREFEC_MODE_A_MASK 0x00000004
#define RX_DATABIST_TOP_REG10_PREFEC_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_MODE_A_RESET_VALUE 0x00000000

/* FIELD: PREFEC_SYMBOL_SIZE_NT */
/* DESCRIPTION: */
/*   Configures number of bits per symbol. 8 and 10 are valid supported modes. */
#define RX_DATABIST_TOP_REG10_PREFEC_SYMBOL_SIZE_NT_OFFSET 0x00000003
#define RX_DATABIST_TOP_REG10_PREFEC_SYMBOL_SIZE_NT_BITWIDTH 0x00000005
#define RX_DATABIST_TOP_REG10_PREFEC_SYMBOL_SIZE_NT_MASK 0x000000F8
#define RX_DATABIST_TOP_REG10_PREFEC_SYMBOL_SIZE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_SYMBOL_SIZE_NT_RESET_VALUE 0x00000000

/* FIELD: PREFEC_SEARCHBUF_SYMBOLS_NT */
/* DESCRIPTION: */
/*   Internal design configuration:  */
/*       should typ be set to 20 and 16 for 8bit and 10bit symbols, respectively.  */
/*       Additional configurations will be provided in programming model,  */
/*       changes as function: sym per CW. */
#define RX_DATABIST_TOP_REG10_PREFEC_SEARCHBUF_SYMBOLS_NT_OFFSET 0x00000008
#define RX_DATABIST_TOP_REG10_PREFEC_SEARCHBUF_SYMBOLS_NT_BITWIDTH 0x00000006
#define RX_DATABIST_TOP_REG10_PREFEC_SEARCHBUF_SYMBOLS_NT_MASK 0x00003F00
#define RX_DATABIST_TOP_REG10_PREFEC_SEARCHBUF_SYMBOLS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_SEARCHBUF_SYMBOLS_NT_RESET_VALUE 0x00000000

/* FIELD: PREFEC_UNCORR_SYMERR_NT */
/* DESCRIPTION: */
/*   All symbol errors per CW greater-than-or-equal-to to set value will be accumulated in hist_bin[uncorr_symerr].   */
/*   E.g. if set to 15, hist_bin[15] will accum num symerr greater than 15, hist_bin[16:31] will not accum. */
#define RX_DATABIST_TOP_REG10_PREFEC_UNCORR_SYMERR_NT_OFFSET 0x00000010
#define RX_DATABIST_TOP_REG10_PREFEC_UNCORR_SYMERR_NT_BITWIDTH 0x00000006
#define RX_DATABIST_TOP_REG10_PREFEC_UNCORR_SYMERR_NT_MASK 0x003F0000
#define RX_DATABIST_TOP_REG10_PREFEC_UNCORR_SYMERR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG10_PREFEC_UNCORR_SYMERR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG11 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST Pre FEC checker. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG11_ADDR 0x020002B0
#define RX_DATABIST_TOP_REG11_SIZE 32

/* FIELD: PREFEC_SYMBOLS_PER_CW_NT */
/* DESCRIPTION: */
/*   Number of symbols per codeword */
#define RX_DATABIST_TOP_REG11_PREFEC_SYMBOLS_PER_CW_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG11_PREFEC_SYMBOLS_PER_CW_NT_BITWIDTH 0x00000010
#define RX_DATABIST_TOP_REG11_PREFEC_SYMBOLS_PER_CW_NT_MASK 0x0000FFFF
#define RX_DATABIST_TOP_REG11_PREFEC_SYMBOLS_PER_CW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG11_PREFEC_SYMBOLS_PER_CW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG12 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST Pre FEC checker. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG12_ADDR 0x020002B4
#define RX_DATABIST_TOP_REG12_SIZE 32

/* FIELD: PREFEC_SKIP_BITS_NT */
/* DESCRIPTION: */
/*   Specifies the number of bits to skip between codeword analysis.   */
/*       This number should be configured typically >= than 256bits, but other design restrictions exist.   */
/*       Exact recommendations will be provided in programming model, function: sym per CW. */
#define RX_DATABIST_TOP_REG12_PREFEC_SKIP_BITS_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG12_PREFEC_SKIP_BITS_NT_BITWIDTH 0x00000010
#define RX_DATABIST_TOP_REG12_PREFEC_SKIP_BITS_NT_MASK 0x0000FFFF
#define RX_DATABIST_TOP_REG12_PREFEC_SKIP_BITS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG12_PREFEC_SKIP_BITS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG13 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST Pre FEC checker. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG13_ADDR 0x020002B8
#define RX_DATABIST_TOP_REG13_SIZE 32

/* FIELD: PREFEC_TIMER_NUM_CW_NT */
/* DESCRIPTION: */
/*   In timer mode  this register specifies number of codewords to analyze */
#define RX_DATABIST_TOP_REG13_PREFEC_TIMER_NUM_CW_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG13_PREFEC_TIMER_NUM_CW_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG13_PREFEC_TIMER_NUM_CW_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG13_PREFEC_TIMER_NUM_CW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG13_PREFEC_TIMER_NUM_CW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG14 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG14_ADDR 0x020002BC
#define RX_DATABIST_TOP_REG14_SIZE 32

/* FIELD: BURST_ERROR_BITS_THRESHOLD_NT */
/* DESCRIPTION: */
/*   Number of burst error bits threshold to enable burst error measurement */
#define RX_DATABIST_TOP_REG14_BURST_ERROR_BITS_THRESHOLD_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG14_BURST_ERROR_BITS_THRESHOLD_NT_BITWIDTH 0x00000008
#define RX_DATABIST_TOP_REG14_BURST_ERROR_BITS_THRESHOLD_NT_MASK 0x000000FF
#define RX_DATABIST_TOP_REG14_BURST_ERROR_BITS_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG14_BURST_ERROR_BITS_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG2 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG2_ADDR 0x020002C0
#define RX_DATABIST_TOP_REG2_SIZE 32

/* FIELD: TIMER_THRESHOLD_NT */
/* DESCRIPTION: */
/*   Amount of cycles to time for errors */
#define RX_DATABIST_TOP_REG2_TIMER_THRESHOLD_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG2_TIMER_THRESHOLD_NT_BITWIDTH 0x0000001B
#define RX_DATABIST_TOP_REG2_TIMER_THRESHOLD_NT_MASK 0x07FFFFFF
#define RX_DATABIST_TOP_REG2_TIMER_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG2_TIMER_THRESHOLD_NT_RESET_VALUE 0x00002710

/* FIELD: REVERSE_QPRBS13_LSB_MSB_NT */
/* DESCRIPTION: */
/*   Reverse QPRBS13 LSB and MSB */
#define RX_DATABIST_TOP_REG2_REVERSE_QPRBS13_LSB_MSB_NT_OFFSET 0x0000001B
#define RX_DATABIST_TOP_REG2_REVERSE_QPRBS13_LSB_MSB_NT_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG2_REVERSE_QPRBS13_LSB_MSB_NT_MASK 0x08000000
#define RX_DATABIST_TOP_REG2_REVERSE_QPRBS13_LSB_MSB_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG2_REVERSE_QPRBS13_LSB_MSB_NT_RESET_VALUE 0x00000000

/* FIELD: PATTERN_SEL_NT */
/* DESCRIPTION: */
/*   Pattern select where the applicable patterns are: */
/*   PRBS7=d'0 */
/*   PRBS9=d'1 */
/*   PRBS11=d'2 */
/*   PRBS13=d'3 */
/*   PRBS15=d'4 */
/*   PRBS23=d'5 */
/*   PRBS31=d'6 */
/*   QPRBS13=d'7 */
/*   JP03A=d'8 */
/*   JP03B=d'9 */
/*   TRANS_LINEARITY=d'10 */
/*   UDP=d'11 */
#define RX_DATABIST_TOP_REG2_PATTERN_SEL_NT_OFFSET 0x0000001C
#define RX_DATABIST_TOP_REG2_PATTERN_SEL_NT_BITWIDTH 0x00000004
#define RX_DATABIST_TOP_REG2_PATTERN_SEL_NT_MASK 0xF0000000
#define RX_DATABIST_TOP_REG2_PATTERN_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG2_PATTERN_SEL_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG3 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG3_ADDR 0x020002C4
#define RX_DATABIST_TOP_REG3_SIZE 32

/* FIELD: DATA_WIDTH_NT */
/* DESCRIPTION: */
/*   Data width where available options are: */
/*   WIDTH8=d'0 */
/*   WIDTH10=d'1 */
/*   WIDTH16=d'2 */
/*   WIDTH20=d'3 */
/*   WIDTH32=d'4 */
/*   WIDTH40=d'5 */
/*   WIDTH64=d'6 */
/*   WIDTH128=d'7 */
#define RX_DATABIST_TOP_REG3_DATA_WIDTH_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG3_DATA_WIDTH_NT_BITWIDTH 0x00000004
#define RX_DATABIST_TOP_REG3_DATA_WIDTH_NT_MASK 0x0000000F
#define RX_DATABIST_TOP_REG3_DATA_WIDTH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG3_DATA_WIDTH_NT_RESET_VALUE 0x00000003

/* FIELD: PAM4_MODE_A */
/* DESCRIPTION: */
/*   Enable PAM4 if 1, otherwise NRZ mode */
#define RX_DATABIST_TOP_REG3_PAM4_MODE_A_OFFSET 0x00000004
#define RX_DATABIST_TOP_REG3_PAM4_MODE_A_BITWIDTH 0x00000001
#define RX_DATABIST_TOP_REG3_PAM4_MODE_A_MASK 0x00000010
#define RX_DATABIST_TOP_REG3_PAM4_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG3_PAM4_MODE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG4 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG4_ADDR 0x020002C8
#define RX_DATABIST_TOP_REG4_SIZE 32

/* FIELD: UDP_PATTERN_31_0_NT */
/* DESCRIPTION: */
/*   User defined pattern, if using 8/16/32/64/128 bits then write bits [63:0], if using 10/20/40 bits then leave [63:40] as zero and write to bits [39:0] */
#define RX_DATABIST_TOP_REG4_UDP_PATTERN_31_0_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG4_UDP_PATTERN_31_0_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG4_UDP_PATTERN_31_0_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG4_UDP_PATTERN_31_0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG4_UDP_PATTERN_31_0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG5 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG5_ADDR 0x020002CC
#define RX_DATABIST_TOP_REG5_SIZE 32

/* FIELD: UDP_PATTERN_63_32_NT */
/* DESCRIPTION: */
/*   User defined pattern, if using 8/16/32/64/128 bits then write bits [63:0], if using 10/20/40 bits then leave [63:40] as zero and write to bits [39:0] */
#define RX_DATABIST_TOP_REG5_UDP_PATTERN_63_32_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG5_UDP_PATTERN_63_32_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG5_UDP_PATTERN_63_32_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG5_UDP_PATTERN_63_32_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG5_UDP_PATTERN_63_32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG6 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG6_ADDR 0x020002D0
#define RX_DATABIST_TOP_REG6_SIZE 32

/* FIELD: UDP_PATTERN_95_64_NT */
/* DESCRIPTION: */
/*   Currently not being used as we are using fixed length UDP pattern */
#define RX_DATABIST_TOP_REG6_UDP_PATTERN_95_64_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG6_UDP_PATTERN_95_64_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG6_UDP_PATTERN_95_64_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG6_UDP_PATTERN_95_64_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG6_UDP_PATTERN_95_64_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG7 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG7_ADDR 0x020002D4
#define RX_DATABIST_TOP_REG7_SIZE 32

/* FIELD: UDP_PATTERN_127_96_NT */
/* DESCRIPTION: */
/*   Currently not being used as we are using fixed length UDP pattern */
#define RX_DATABIST_TOP_REG7_UDP_PATTERN_127_96_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG7_UDP_PATTERN_127_96_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG7_UDP_PATTERN_127_96_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG7_UDP_PATTERN_127_96_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG7_UDP_PATTERN_127_96_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG8 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG8_ADDR 0x020002D8
#define RX_DATABIST_TOP_REG8_SIZE 32

/* FIELD: UDP_PATTERN_159_128_NT */
/* DESCRIPTION: */
/*   Currently not being used as we are using fixed length UDP pattern */
#define RX_DATABIST_TOP_REG8_UDP_PATTERN_159_128_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG8_UDP_PATTERN_159_128_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG8_UDP_PATTERN_159_128_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG8_UDP_PATTERN_159_128_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG8_UDP_PATTERN_159_128_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABIST_TOP_REG9 */
/* DESCRIPTION: */
/*   Configuration registers for the Rx BIST checker including UDP pattern. */
/* ------------------------------------- */
#define RX_DATABIST_TOP_REG9_ADDR 0x020002DC
#define RX_DATABIST_TOP_REG9_SIZE 32

/* FIELD: UDP_PATTERN_191_160_NT */
/* DESCRIPTION: */
/*   Currently not being used as we are using fixed length UDP pattern */
#define RX_DATABIST_TOP_REG9_UDP_PATTERN_191_160_NT_OFFSET 0x00000000
#define RX_DATABIST_TOP_REG9_UDP_PATTERN_191_160_NT_BITWIDTH 0x00000020
#define RX_DATABIST_TOP_REG9_UDP_PATTERN_191_160_NT_MASK 0xFFFFFFFF
#define RX_DATABIST_TOP_REG9_UDP_PATTERN_191_160_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABIST_TOP_REG9_UDP_PATTERN_191_160_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_BACKGROUND */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_BACKGROUND_ADDR 0x020002E0
#define RX_DATABLOCK_OFFSET_BACKGROUND_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for dc offset adapt mu */
#define RX_DATABLOCK_OFFSET_BACKGROUND_LMS_MU_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_BACKGROUND_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_DATABLOCK_OFFSET_BACKGROUND_LMS_MU_NT_MASK 0x0000001F
#define RX_DATABLOCK_OFFSET_BACKGROUND_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_BACKGROUND_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for dc offset watchdog */
#define RX_DATABLOCK_OFFSET_BACKGROUND_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_DATABLOCK_OFFSET_BACKGROUND_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_DATABLOCK_OFFSET_BACKGROUND_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_DATABLOCK_OFFSET_BACKGROUND_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_BACKGROUND_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_RDREG9 */
/* DESCRIPTION: */
/*   RX DC offset value */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_RDREG9_ADDR 0x020002E4
#define RX_DATABLOCK_OFFSET_RDREG9_SIZE 32

/* FIELD: OFFSET_NT */
/* DESCRIPTION: */
/*   Status: readback dc offset value in specified branch */
#define RX_DATABLOCK_OFFSET_RDREG9_OFFSET_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_RDREG9_OFFSET_NT_BITWIDTH 0x00000007
#define RX_DATABLOCK_OFFSET_RDREG9_OFFSET_NT_MASK 0x0000007F
#define RX_DATABLOCK_OFFSET_RDREG9_OFFSET_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABLOCK_OFFSET_RDREG9_OFFSET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG1 */
/* DESCRIPTION: */
/*   RX Datablock offset correction control */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG1_ADDR 0x020002E8
#define RX_DATABLOCK_OFFSET_REG1_SIZE 32

/* FIELD: BRANCH_SEL_A */
/* DESCRIPTION: */
/*   Branch Selection */
#define RX_DATABLOCK_OFFSET_REG1_BRANCH_SEL_A_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG1_BRANCH_SEL_A_BITWIDTH 0x00000008
#define RX_DATABLOCK_OFFSET_REG1_BRANCH_SEL_A_MASK 0x000000FF
#define RX_DATABLOCK_OFFSET_REG1_BRANCH_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BRANCH_SEL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOLOAD_ENA_A */
/* DESCRIPTION: */
/*   Autoload enable */
#define RX_DATABLOCK_OFFSET_REG1_AUTOLOAD_ENA_A_OFFSET 0x00000008
#define RX_DATABLOCK_OFFSET_REG1_AUTOLOAD_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_AUTOLOAD_ENA_A_MASK 0x00000100
#define RX_DATABLOCK_OFFSET_REG1_AUTOLOAD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_AUTOLOAD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_ALL_BRANCHES_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to all branches */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_OFFSET 0x00000009
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_MASK 0x00000200
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_0_7_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 0 - 7 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_OFFSET 0x0000000A
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_MASK 0x00000400
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_8_15_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 8 - 15 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_OFFSET 0x0000000B
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_MASK 0x00000800
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_16_23_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 16 - 23 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_OFFSET 0x0000000C
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_MASK 0x00001000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_24_31_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 24 - 31 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_OFFSET 0x0000000D
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_MASK 0x00002000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_32_39_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 32 - 39 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_OFFSET 0x0000000E
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_MASK 0x00004000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_40_47_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 40 - 47 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_OFFSET 0x0000000F
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_MASK 0x00008000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_48_55_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 48 - 55 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_OFFSET 0x00000010
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_MASK 0x00010000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_56_63_ENA_A */
/* DESCRIPTION: */
/*   Broadcast datablock offset overrides to branches 56 - 63 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_OFFSET 0x00000011
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_MASK 0x00020000
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG2 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset branch increase override. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG2_ADDR 0x020002EC
#define RX_DATABLOCK_OFFSET_REG2_SIZE 32

/* FIELD: OVRD_NT */
/* DESCRIPTION: */
/*   Dcoffset bypass value to use when bypass_ena=1 */
#define RX_DATABLOCK_OFFSET_REG2_OVRD_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG2_OVRD_NT_BITWIDTH 0x00000007
#define RX_DATABLOCK_OFFSET_REG2_OVRD_NT_MASK 0x0000007F
#define RX_DATABLOCK_OFFSET_REG2_OVRD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG2_OVRD_NT_RESET_VALUE 0x00000000

/* FIELD: BRANCH_INC_OVRD_A */
/* DESCRIPTION: */
/*   0  automatically sets dcoffset branch_inc based on active_branch config */
/*   1  allows user to override branch_inc programming */
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_A_OFFSET 0x00000007
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_A_MASK 0x00000080
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_A_RESET_VALUE 0x00000000

/* FIELD: BRANCH_INC_OVRD_VALUE_NT */
/* DESCRIPTION: */
/*   when branch_inc_ovrd_a=1, allows user to set regvalue branch_inc */
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_VALUE_NT_OFFSET 0x00000008
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_VALUE_NT_BITWIDTH 0x00000005
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_VALUE_NT_MASK 0x00001F00
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG2_BRANCH_INC_OVRD_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG3 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG3_ADDR 0x020002F0
#define RX_DATABLOCK_OFFSET_REG3_SIZE 32

/* FIELD: INIT_NT */
/* DESCRIPTION: */
/*   Init DC offset value for all branches */
#define RX_DATABLOCK_OFFSET_REG3_INIT_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG3_INIT_NT_BITWIDTH 0x00000007
#define RX_DATABLOCK_OFFSET_REG3_INIT_NT_MASK 0x0000007F
#define RX_DATABLOCK_OFFSET_REG3_INIT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG3_INIT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG4 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG4_ADDR 0x020002F4
#define RX_DATABLOCK_OFFSET_REG4_SIZE 32

/* FIELD: BRANCH_DISABLE1_NT */
/* DESCRIPTION: */
/*   One-hot disable DC Offset branch 0-31 (note: maps to physical ADC) */
#define RX_DATABLOCK_OFFSET_REG4_BRANCH_DISABLE1_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG4_BRANCH_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_DATABLOCK_OFFSET_REG4_BRANCH_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_DATABLOCK_OFFSET_REG4_BRANCH_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG4_BRANCH_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG5 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG5_ADDR 0x020002F8
#define RX_DATABLOCK_OFFSET_REG5_SIZE 32

/* FIELD: BRANCH_DISABLE2_NT */
/* DESCRIPTION: */
/*   One-hot disable DC Offset branch 32-63 (note: maps to physical ADC) */
#define RX_DATABLOCK_OFFSET_REG5_BRANCH_DISABLE2_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG5_BRANCH_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_DATABLOCK_OFFSET_REG5_BRANCH_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_DATABLOCK_OFFSET_REG5_BRANCH_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG5_BRANCH_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG6 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG6_ADDR 0x020002FC
#define RX_DATABLOCK_OFFSET_REG6_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu */
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_NT_MASK 0x0000001F
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   lms mu dir */
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_DIR_NT_OFFSET 0x00000005
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_DIR_NT_MASK 0x00000020
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_INVERT_A */
/* DESCRIPTION: */
/*   invert error term */
#define RX_DATABLOCK_OFFSET_REG6_LMS_INVERT_A_OFFSET 0x00000006
#define RX_DATABLOCK_OFFSET_REG6_LMS_INVERT_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_LMS_INVERT_A_MASK 0x00000040
#define RX_DATABLOCK_OFFSET_REG6_LMS_INVERT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_LMS_INVERT_A_RESET_VALUE 0x00000000

/* FIELD: INIT_ENA_A */
/* DESCRIPTION: */
/*   When set to 1, reinitializes all DC offset values to initialization, resets FSM to init state */
#define RX_DATABLOCK_OFFSET_REG6_INIT_ENA_A_OFFSET 0x00000007
#define RX_DATABLOCK_OFFSET_REG6_INIT_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_INIT_ENA_A_MASK 0x00000080
#define RX_DATABLOCK_OFFSET_REG6_INIT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_INIT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   During DC Offset adaption, specifies watchdog duration: 2**regvalue number of cycles. */
/*   In bonded mode, duration =  2**regvalue clock cycles. */
/*   In unbonded mode, duration ~ 2**regvalue * num_branch clock cycles. */
#define RX_DATABLOCK_OFFSET_REG6_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_DATABLOCK_OFFSET_REG6_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_DATABLOCK_OFFSET_REG6_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_DATABLOCK_OFFSET_REG6_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_DATABLOCK_OFFSET_REG6_BYPASS_ENA_A_OFFSET 0x0000000D
#define RX_DATABLOCK_OFFSET_REG6_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_BYPASS_ENA_A_MASK 0x00002000
#define RX_DATABLOCK_OFFSET_REG6_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_NBONDED_A */
/* DESCRIPTION: */
/*   1 unbonded, 0 bonded mode sel */
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_NBONDED_A_OFFSET 0x0000000E
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_NBONDED_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_NBONDED_A_MASK 0x00004000
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_NBONDED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_NBONDED_A_RESET_VALUE 0x00000001

/* FIELD: MEASURE_HOLD_ENA_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_DATABLOCK_OFFSET_REG6_MEASURE_HOLD_ENA_A_OFFSET 0x0000000F
#define RX_DATABLOCK_OFFSET_REG6_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_MEASURE_HOLD_ENA_A_MASK 0x00008000
#define RX_DATABLOCK_OFFSET_REG6_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: START_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded start branch */
#define RX_DATABLOCK_OFFSET_REG6_START_BRANCH_NT_OFFSET 0x00000010
#define RX_DATABLOCK_OFFSET_REG6_START_BRANCH_NT_BITWIDTH 0x00000006
#define RX_DATABLOCK_OFFSET_REG6_START_BRANCH_NT_MASK 0x003F0000
#define RX_DATABLOCK_OFFSET_REG6_START_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_START_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: ADAPT_ENA_A */
/* DESCRIPTION: */
/*   adapt enable */
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_ENA_A_OFFSET 0x00000016
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_ENA_A_MASK 0x00400000
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_START_A_OFFSET 0x00000017
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_START_A_MASK 0x00800000
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_STOP_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded stop branch */
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_STOP_BRANCH_NT_OFFSET 0x00000018
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_STOP_BRANCH_NT_BITWIDTH 0x00000006
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_STOP_BRANCH_NT_MASK 0x3F000000
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_STOP_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG6_UNBONDED_STOP_BRANCH_NT_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG7 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx datablock offset correction. */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG7_ADDR 0x02000300
#define RX_DATABLOCK_OFFSET_REG7_SIZE 32

/* FIELD: MODE_NT */
/* DESCRIPTION: */
/*   0 mean data based dc offset (default), 1 sign based dc offset */
#define RX_DATABLOCK_OFFSET_REG7_MODE_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG7_MODE_NT_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_REG7_MODE_NT_MASK 0x00000001
#define RX_DATABLOCK_OFFSET_REG7_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG7_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_REG8 */
/* DESCRIPTION: */
/*   Debug branch select Register */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_REG8_ADDR 0x02000304
#define RX_DATABLOCK_OFFSET_REG8_SIZE 32

/* FIELD: DBG_BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Debug branch select for DC offset value */
#define RX_DATABLOCK_OFFSET_REG8_DBG_BRANCH_SEL_NT_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_REG8_DBG_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_DATABLOCK_OFFSET_REG8_DBG_BRANCH_SEL_NT_MASK 0x0000003F
#define RX_DATABLOCK_OFFSET_REG8_DBG_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_OFFSET_REG8_DBG_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_OFFSET_STATUS */
/* DESCRIPTION: */
/*   RX Datablock offset correction observability */
/* ------------------------------------- */
#define RX_DATABLOCK_OFFSET_STATUS_ADDR 0x02000308
#define RX_DATABLOCK_OFFSET_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: indicates dc offset adaption done */
#define RX_DATABLOCK_OFFSET_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_DATABLOCK_OFFSET_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_STATUS_LOCK_A_MASK 0x00000001
#define RX_DATABLOCK_OFFSET_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABLOCK_OFFSET_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_DATABLOCK_OFFSET_STATUS_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_DATABLOCK_OFFSET_STATUS_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_STATUS_DERIV_LOCK_A_MASK 0x00000002
#define RX_DATABLOCK_OFFSET_STATUS_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABLOCK_OFFSET_STATUS_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: dc offset watchdog done */
#define RX_DATABLOCK_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000002
#define RX_DATABLOCK_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000004
#define RX_DATABLOCK_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABLOCK_OFFSET_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_STATE_A */
/* DESCRIPTION: */
/*   adapt_state */
#define RX_DATABLOCK_OFFSET_STATUS_ADAPT_STATE_A_OFFSET 0x00000003
#define RX_DATABLOCK_OFFSET_STATUS_ADAPT_STATE_A_BITWIDTH 0x00000004
#define RX_DATABLOCK_OFFSET_STATUS_ADAPT_STATE_A_MASK 0x00000078
#define RX_DATABLOCK_OFFSET_STATUS_ADAPT_STATE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DATABLOCK_OFFSET_STATUS_ADAPT_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_REG1 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Rx datablock block. */
/* ------------------------------------- */
#define RX_DATABLOCK_REG1_ADDR 0x0200030C
#define RX_DATABLOCK_REG1_SIZE 32

/* FIELD: SIGNAL_ORDER_R_NT */
/* DESCRIPTION: */
/*   Determines how many taps you have to the right of the center tap. */
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_R_NT_OFFSET 0x00000000
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_R_NT_BITWIDTH 0x00000004
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_R_NT_MASK 0x0000000F
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_R_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_R_NT_RESET_VALUE 0x00000002

/* FIELD: SIGNAL_ORDER_L_NT */
/* DESCRIPTION: */
/*   Determines how many taps you have to the left of the center tap */
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_L_NT_OFFSET 0x00000004
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_L_NT_BITWIDTH 0x00000004
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_L_NT_MASK 0x000000F0
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_L_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG1_SIGNAL_ORDER_L_NT_RESET_VALUE 0x00000002

/* FIELD: BYPASS_VAL_NT */
/* DESCRIPTION: */
/*   Bypass value for all of the ADC branches */
#define RX_DATABLOCK_REG1_BYPASS_VAL_NT_OFFSET 0x00000008
#define RX_DATABLOCK_REG1_BYPASS_VAL_NT_BITWIDTH 0x00000009
#define RX_DATABLOCK_REG1_BYPASS_VAL_NT_MASK 0x0001FF00
#define RX_DATABLOCK_REG1_BYPASS_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG1_BYPASS_VAL_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Bypass enable for the ADC branches.  When enabled, bypass data will be sent into the design instead of ADC data coming from AFE. */
#define RX_DATABLOCK_REG1_BYPASS_ENA_A_OFFSET 0x00000011
#define RX_DATABLOCK_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_REG1_BYPASS_ENA_A_MASK 0x00020000
#define RX_DATABLOCK_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DATABLOCK_REG2 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Rx datablock block. */
/* ------------------------------------- */
#define RX_DATABLOCK_REG2_ADDR 0x02000310
#define RX_DATABLOCK_REG2_SIZE 32

/* FIELD: POS3_VAL_NT */
/* DESCRIPTION: */
/*   Simplified De-mapper used only in Oversample=1 mode: signals above regvalue are categorized as +3 constellation. Signals greater than 0, but less than regvalue are categorized as +1.  */
#define RX_DATABLOCK_REG2_POS3_VAL_NT_OFFSET 0x00000000
#define RX_DATABLOCK_REG2_POS3_VAL_NT_BITWIDTH 0x00000009
#define RX_DATABLOCK_REG2_POS3_VAL_NT_MASK 0x000001FF
#define RX_DATABLOCK_REG2_POS3_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG2_POS3_VAL_NT_RESET_VALUE 0x0000000A

/* FIELD: NEG3_VAL_NT */
/* DESCRIPTION: */
/*   Simplified De-mapper used only in Oversample=1 mode: signals below regvalue are categorized as -3 constellation. Signals less than 0, but greater than regvalue are categorized as -1.  */
#define RX_DATABLOCK_REG2_NEG3_VAL_NT_OFFSET 0x00000009
#define RX_DATABLOCK_REG2_NEG3_VAL_NT_BITWIDTH 0x00000009
#define RX_DATABLOCK_REG2_NEG3_VAL_NT_MASK 0x0003FE00
#define RX_DATABLOCK_REG2_NEG3_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG2_NEG3_VAL_NT_RESET_VALUE 0x000001F6

/* ------------------------------------- */
/* REG: RX_DATABLOCK_REG3 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Rx datablock block. */
/* ------------------------------------- */
#define RX_DATABLOCK_REG3_ADDR 0x02000314
#define RX_DATABLOCK_REG3_SIZE 32

/* FIELD: MASK_NT */
/* DESCRIPTION: */
/*   Sets which bits of offset corrected ADC data is valid, one menas valid, zero will zero out the bit */
#define RX_DATABLOCK_REG3_MASK_NT_OFFSET 0x00000000
#define RX_DATABLOCK_REG3_MASK_NT_BITWIDTH 0x00000009
#define RX_DATABLOCK_REG3_MASK_NT_MASK 0x000001FF
#define RX_DATABLOCK_REG3_MASK_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_REG3_MASK_NT_RESET_VALUE 0x000001FF

/* ------------------------------------- */
/* REG: RX_DATABLOCK_ROAMING */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Rx datablock block. */
/* ------------------------------------- */
#define RX_DATABLOCK_ROAMING_ADDR 0x02000318
#define RX_DATABLOCK_ROAMING_SIZE 32

/* FIELD: WINDOW_CHANGE_A */
/* DESCRIPTION: */
/*   One rising edge of this signal, the roaming_window_select values will be applied.  Allows synchronous change of roaming window select register */
#define RX_DATABLOCK_ROAMING_WINDOW_CHANGE_A_OFFSET 0x00000000
#define RX_DATABLOCK_ROAMING_WINDOW_CHANGE_A_BITWIDTH 0x00000001
#define RX_DATABLOCK_ROAMING_WINDOW_CHANGE_A_MASK 0x00000001
#define RX_DATABLOCK_ROAMING_WINDOW_CHANGE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_ROAMING_WINDOW_CHANGE_A_RESET_VALUE 0x00000000

/* FIELD: WINDOW_SELECT_1_NT */
/* DESCRIPTION: */
/*   This register will select which window Roaming Tap 1 (of 2 total roaming taps)  will select */
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_1_NT_OFFSET 0x00000001
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_1_NT_BITWIDTH 0x00000006
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_1_NT_MASK 0x0000007E
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_1_NT_RESET_VALUE 0x00000000

/* FIELD: WINDOW_SELECT_2_NT */
/* DESCRIPTION: */
/*   This register will select which window Roaming Tap 2 (of 2 total roaming taps)  will select */
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_2_NT_OFFSET 0x00000007
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_2_NT_BITWIDTH 0x00000006
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_2_NT_MASK 0x00001F80
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_ROAMING_WINDOW_SELECT_2_NT_RESET_VALUE 0x00000003

/* FIELD: MODE_NT */
/* DESCRIPTION: */
/*   00=no roaming, 01=bank0 roaming, 10=bank1 roaming, 11=both roaming */
#define RX_DATABLOCK_ROAMING_MODE_NT_OFFSET 0x0000000D
#define RX_DATABLOCK_ROAMING_MODE_NT_BITWIDTH 0x00000002
#define RX_DATABLOCK_ROAMING_MODE_NT_MASK 0x00006000
#define RX_DATABLOCK_ROAMING_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DATABLOCK_ROAMING_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DEMAPPER */
/* DESCRIPTION: */
/*   Configuration of the DBE Rx constellation de-mapper block. */
/* ------------------------------------- */
#define RX_DEMAPPER_ADDR 0x0200031C
#define RX_DEMAPPER_SIZE 32

/* FIELD: SIGNAL_TYPE_NT */
/* DESCRIPTION: */
/*   Determines signal type */
/*   PAM4 - 01, NRZ - 00, 10/11 reserved for future use */
#define RX_DEMAPPER_SIGNAL_TYPE_NT_OFFSET 0x00000000
#define RX_DEMAPPER_SIGNAL_TYPE_NT_BITWIDTH 0x00000002
#define RX_DEMAPPER_SIGNAL_TYPE_NT_MASK 0x00000003
#define RX_DEMAPPER_SIGNAL_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_SIGNAL_TYPE_NT_RESET_VALUE 0x00000000

/* FIELD: EL3_VAL_NT */
/* DESCRIPTION: */
/*   Gray code value for EL3 region */
#define RX_DEMAPPER_EL3_VAL_NT_OFFSET 0x00000002
#define RX_DEMAPPER_EL3_VAL_NT_BITWIDTH 0x00000002
#define RX_DEMAPPER_EL3_VAL_NT_MASK 0x0000000C
#define RX_DEMAPPER_EL3_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_EL3_VAL_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_VAL_NT */
/* DESCRIPTION: */
/*   Gray code value for EL1 region */
#define RX_DEMAPPER_EL1_VAL_NT_OFFSET 0x00000004
#define RX_DEMAPPER_EL1_VAL_NT_BITWIDTH 0x00000002
#define RX_DEMAPPER_EL1_VAL_NT_MASK 0x00000030
#define RX_DEMAPPER_EL1_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_EL1_VAL_NT_RESET_VALUE 0x00000001

/* FIELD: EH3_VAL_NT */
/* DESCRIPTION: */
/*   Gray code value for EH3 region */
#define RX_DEMAPPER_EH3_VAL_NT_OFFSET 0x00000006
#define RX_DEMAPPER_EH3_VAL_NT_BITWIDTH 0x00000002
#define RX_DEMAPPER_EH3_VAL_NT_MASK 0x000000C0
#define RX_DEMAPPER_EH3_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_EH3_VAL_NT_RESET_VALUE 0x00000003

/* FIELD: EH1_VAL_NT */
/* DESCRIPTION: */
/*   Gray code value for EH1 region */
#define RX_DEMAPPER_EH1_VAL_NT_OFFSET 0x00000008
#define RX_DEMAPPER_EH1_VAL_NT_BITWIDTH 0x00000002
#define RX_DEMAPPER_EH1_VAL_NT_MASK 0x00000300
#define RX_DEMAPPER_EH1_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_EH1_VAL_NT_RESET_VALUE 0x00000002

/* FIELD: DATA_WIDTH_NT */
/* DESCRIPTION: */
/*   Used for 1 plus d only, 128/64/32 widths are supported 128 - d'7, 64 -d'6, 32-d'4.  This signal determines the feedback for the 1 plus d, If an unsupported width is selected, the feedback will be 0. */
#define RX_DEMAPPER_DATA_WIDTH_NT_OFFSET 0x0000000A
#define RX_DEMAPPER_DATA_WIDTH_NT_BITWIDTH 0x00000004
#define RX_DEMAPPER_DATA_WIDTH_NT_MASK 0x00003C00
#define RX_DEMAPPER_DATA_WIDTH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_DATA_WIDTH_NT_RESET_VALUE 0x00000000

/* FIELD: INVERT_ENABLE_A */
/* DESCRIPTION: */
/*   When enabled will invert the RX data. */
#define RX_DEMAPPER_INVERT_ENABLE_A_OFFSET 0x0000000E
#define RX_DEMAPPER_INVERT_ENABLE_A_BITWIDTH 0x00000001
#define RX_DEMAPPER_INVERT_ENABLE_A_MASK 0x00004000
#define RX_DEMAPPER_INVERT_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_INVERT_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: ENABLE_EH1_EL1_SLICER_A */
/* DESCRIPTION: */
/*   When enabled will allow the outputs from target eh1/el1 to drive the slicer threshold of el1/eh1. */
#define RX_DEMAPPER_ENABLE_EH1_EL1_SLICER_A_OFFSET 0x0000000F
#define RX_DEMAPPER_ENABLE_EH1_EL1_SLICER_A_BITWIDTH 0x00000001
#define RX_DEMAPPER_ENABLE_EH1_EL1_SLICER_A_MASK 0x00008000
#define RX_DEMAPPER_ENABLE_EH1_EL1_SLICER_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DEMAPPER_ENABLE_EH1_EL1_SLICER_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_BACKGROUND */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_BACKGROUND_ADDR 0x02000320
#define RX_DFE_ADAPT_BACKGROUND_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for dfe adapt mu */
#define RX_DFE_ADAPT_BACKGROUND_LMS_MU_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_BACKGROUND_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_DFE_ADAPT_BACKGROUND_LMS_MU_NT_MASK 0x0000001F
#define RX_DFE_ADAPT_BACKGROUND_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_BACKGROUND_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for dfe adapt watchdog */
#define RX_DFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_DFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_DFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_DFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_RDREG9 */
/* DESCRIPTION: */
/*   RX DFE coefficient value */
/* ------------------------------------- */
#define RX_DFE_ADAPT_RDREG9_ADDR 0x02000324
#define RX_DFE_ADAPT_RDREG9_SIZE 32

/* FIELD: COEF_NT */
/* DESCRIPTION: */
/*   Status: readback dfe coef for selected branch */
#define RX_DFE_ADAPT_RDREG9_COEF_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_RDREG9_COEF_NT_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_RDREG9_COEF_NT_MASK 0x000000FF
#define RX_DFE_ADAPT_RDREG9_COEF_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DFE_ADAPT_RDREG9_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG1_ADDR 0x02000328
#define RX_DFE_ADAPT_REG1_SIZE 32

/* FIELD: BRANCH_SEL_A */
/* DESCRIPTION: */
/*   Branch Selection */
#define RX_DFE_ADAPT_REG1_BRANCH_SEL_A_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG1_BRANCH_SEL_A_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_REG1_BRANCH_SEL_A_MASK 0x000000FF
#define RX_DFE_ADAPT_REG1_BRANCH_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BRANCH_SEL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOLOAD_ENA_A */
/* DESCRIPTION: */
/*   Autoload enable */
#define RX_DFE_ADAPT_REG1_AUTOLOAD_ENA_A_OFFSET 0x00000008
#define RX_DFE_ADAPT_REG1_AUTOLOAD_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_AUTOLOAD_ENA_A_MASK 0x00000100
#define RX_DFE_ADAPT_REG1_AUTOLOAD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_AUTOLOAD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_ALL_BRANCHES_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to all branches */
#define RX_DFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_OFFSET 0x00000009
#define RX_DFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_MASK 0x00000200
#define RX_DFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_0_7_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 0 - 7 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_OFFSET 0x0000000A
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_MASK 0x00000400
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_8_15_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 8 - 15 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_OFFSET 0x0000000B
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_MASK 0x00000800
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_16_23_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 16 - 23 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_OFFSET 0x0000000C
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_MASK 0x00001000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_24_31_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 24 - 31 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_OFFSET 0x0000000D
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_MASK 0x00002000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_32_39_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 32 - 39 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_OFFSET 0x0000000E
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_MASK 0x00004000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_40_47_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 40 - 47 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_OFFSET 0x0000000F
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_MASK 0x00008000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_48_55_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 48 - 55 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_OFFSET 0x00000010
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_MASK 0x00010000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_56_63_ENA_A */
/* DESCRIPTION: */
/*   Broadcast DFE coefficient overrides to branches 56 - 63 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_OFFSET 0x00000011
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_MASK 0x00020000
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG2_ADDR 0x0200032C
#define RX_DFE_ADAPT_REG2_SIZE 32

/* FIELD: OVRD_NT */
/* DESCRIPTION: */
/*   DFE coef bypass value to use when bypass_ena=1 */
#define RX_DFE_ADAPT_REG2_OVRD_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG2_OVRD_NT_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_REG2_OVRD_NT_MASK 0x000000FF
#define RX_DFE_ADAPT_REG2_OVRD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG2_OVRD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG3_ADDR 0x02000330
#define RX_DFE_ADAPT_REG3_SIZE 32

/* FIELD: INIT_NT */
/* DESCRIPTION: */
/*   Initialization value for DFE coefficients during reset */
#define RX_DFE_ADAPT_REG3_INIT_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG3_INIT_NT_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_REG3_INIT_NT_MASK 0x000000FF
#define RX_DFE_ADAPT_REG3_INIT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG3_INIT_NT_RESET_VALUE 0x00000000

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Limits the minimum DFE Coefficient value, values below this will be clipped */
#define RX_DFE_ADAPT_REG3_MIN_NT_OFFSET 0x00000008
#define RX_DFE_ADAPT_REG3_MIN_NT_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_REG3_MIN_NT_MASK 0x0000FF00
#define RX_DFE_ADAPT_REG3_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG3_MIN_NT_RESET_VALUE 0x000000D3

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Limits the maximum DFE Coefficient value, values above this will be clipped */
#define RX_DFE_ADAPT_REG3_MAX_NT_OFFSET 0x00000010
#define RX_DFE_ADAPT_REG3_MAX_NT_BITWIDTH 0x00000008
#define RX_DFE_ADAPT_REG3_MAX_NT_MASK 0x00FF0000
#define RX_DFE_ADAPT_REG3_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG3_MAX_NT_RESET_VALUE 0x0000002C

/* FIELD: DEADZONE_NT */
/* DESCRIPTION: */
/*   Sets the stop condition for DFE adaption: Zero-forces Postcur1/Maintap to within +/-2*regvalue/64 */
#define RX_DFE_ADAPT_REG3_DEADZONE_NT_OFFSET 0x00000018
#define RX_DFE_ADAPT_REG3_DEADZONE_NT_BITWIDTH 0x00000004
#define RX_DFE_ADAPT_REG3_DEADZONE_NT_MASK 0x0F000000
#define RX_DFE_ADAPT_REG3_DEADZONE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG3_DEADZONE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG4_ADDR 0x02000334
#define RX_DFE_ADAPT_REG4_SIZE 32

/* FIELD: BRANCH_DISABLE1_NT */
/* DESCRIPTION: */
/*   disable branch 0 31 */
#define RX_DFE_ADAPT_REG4_BRANCH_DISABLE1_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG4_BRANCH_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_DFE_ADAPT_REG4_BRANCH_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_DFE_ADAPT_REG4_BRANCH_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG4_BRANCH_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG5_ADDR 0x02000338
#define RX_DFE_ADAPT_REG5_SIZE 32

/* FIELD: BRANCH_DISABLE2_NT */
/* DESCRIPTION: */
/*   disable branch 32 63 */
#define RX_DFE_ADAPT_REG5_BRANCH_DISABLE2_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG5_BRANCH_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_DFE_ADAPT_REG5_BRANCH_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_DFE_ADAPT_REG5_BRANCH_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG5_BRANCH_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Overrides for the DBE Rx DFE adapt. */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG6_ADDR 0x0200033C
#define RX_DFE_ADAPT_REG6_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu */
#define RX_DFE_ADAPT_REG6_LMS_MU_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG6_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_DFE_ADAPT_REG6_LMS_MU_NT_MASK 0x0000001F
#define RX_DFE_ADAPT_REG6_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   lms mu dir */
#define RX_DFE_ADAPT_REG6_LMS_MU_DIR_NT_OFFSET 0x00000005
#define RX_DFE_ADAPT_REG6_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_LMS_MU_DIR_NT_MASK 0x00000020
#define RX_DFE_ADAPT_REG6_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_INVERT_A */
/* DESCRIPTION: */
/*   invert error term */
#define RX_DFE_ADAPT_REG6_LMS_INVERT_A_OFFSET 0x00000006
#define RX_DFE_ADAPT_REG6_LMS_INVERT_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_LMS_INVERT_A_MASK 0x00000040
#define RX_DFE_ADAPT_REG6_LMS_INVERT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_LMS_INVERT_A_RESET_VALUE 0x00000000

/* FIELD: MEASURE_HOLD_ENA_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_DFE_ADAPT_REG6_MEASURE_HOLD_ENA_A_OFFSET 0x00000007
#define RX_DFE_ADAPT_REG6_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_MEASURE_HOLD_ENA_A_MASK 0x00000080
#define RX_DFE_ADAPT_REG6_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   During DFE adaption, specifies watchdog duration: 2**regvalue number of cycles. */
/*   In bonded mode, duration =  2**regvalue clock cycles. */
/*   In unbonded mode, duration ~ 2**regvalue * num_branch clock cycles. */
#define RX_DFE_ADAPT_REG6_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_DFE_ADAPT_REG6_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_DFE_ADAPT_REG6_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_DFE_ADAPT_REG6_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_NBONDED_A */
/* DESCRIPTION: */
/*   1 unbonded, 0 bonded mode sel */
#define RX_DFE_ADAPT_REG6_UNBONDED_NBONDED_A_OFFSET 0x0000000D
#define RX_DFE_ADAPT_REG6_UNBONDED_NBONDED_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_UNBONDED_NBONDED_A_MASK 0x00002000
#define RX_DFE_ADAPT_REG6_UNBONDED_NBONDED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_UNBONDED_NBONDED_A_RESET_VALUE 0x00000000

/* FIELD: INIT_ENA_A */
/* DESCRIPTION: */
/*   When set to 1, reinitializes all DFE values to initialization, resets FSM to init state */
#define RX_DFE_ADAPT_REG6_INIT_ENA_A_OFFSET 0x0000000E
#define RX_DFE_ADAPT_REG6_INIT_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_INIT_ENA_A_MASK 0x00004000
#define RX_DFE_ADAPT_REG6_INIT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_INIT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_DFE_ADAPT_REG6_BYPASS_ENA_A_OFFSET 0x0000000F
#define RX_DFE_ADAPT_REG6_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_BYPASS_ENA_A_MASK 0x00008000
#define RX_DFE_ADAPT_REG6_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: START_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded start branch */
#define RX_DFE_ADAPT_REG6_START_BRANCH_NT_OFFSET 0x00000010
#define RX_DFE_ADAPT_REG6_START_BRANCH_NT_BITWIDTH 0x00000006
#define RX_DFE_ADAPT_REG6_START_BRANCH_NT_MASK 0x003F0000
#define RX_DFE_ADAPT_REG6_START_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_START_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: ADAPT_ENA_A */
/* DESCRIPTION: */
/*   adapt enable */
#define RX_DFE_ADAPT_REG6_ADAPT_ENA_A_OFFSET 0x00000016
#define RX_DFE_ADAPT_REG6_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_ADAPT_ENA_A_MASK 0x00400000
#define RX_DFE_ADAPT_REG6_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_ADAPT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_DFE_ADAPT_REG6_ADAPT_START_A_OFFSET 0x00000017
#define RX_DFE_ADAPT_REG6_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_ADAPT_START_A_MASK 0x00800000
#define RX_DFE_ADAPT_REG6_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_STOP_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded stop branch */
#define RX_DFE_ADAPT_REG6_UNBONDED_STOP_BRANCH_NT_OFFSET 0x00000018
#define RX_DFE_ADAPT_REG6_UNBONDED_STOP_BRANCH_NT_BITWIDTH 0x00000006
#define RX_DFE_ADAPT_REG6_UNBONDED_STOP_BRANCH_NT_MASK 0x3F000000
#define RX_DFE_ADAPT_REG6_UNBONDED_STOP_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_UNBONDED_STOP_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: FFE_DFE_ADAPT_START_A */
/* DESCRIPTION: */
/*   Triggers a synchronous adapt_start to ffe and dfe adaption */
#define RX_DFE_ADAPT_REG6_FFE_DFE_ADAPT_START_A_OFFSET 0x0000001E
#define RX_DFE_ADAPT_REG6_FFE_DFE_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_REG6_FFE_DFE_ADAPT_START_A_MASK 0x40000000
#define RX_DFE_ADAPT_REG6_FFE_DFE_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG6_FFE_DFE_ADAPT_START_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_REG8 */
/* DESCRIPTION: */
/*   Debug branch select Register */
/* ------------------------------------- */
#define RX_DFE_ADAPT_REG8_ADDR 0x02000340
#define RX_DFE_ADAPT_REG8_SIZE 32

/* FIELD: DBG_BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Debug branch select for DFE coefficient value */
#define RX_DFE_ADAPT_REG8_DBG_BRANCH_SEL_NT_OFFSET 0x00000000
#define RX_DFE_ADAPT_REG8_DBG_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_DFE_ADAPT_REG8_DBG_BRANCH_SEL_NT_MASK 0x0000003F
#define RX_DFE_ADAPT_REG8_DBG_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DFE_ADAPT_REG8_DBG_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DFE_ADAPT_STATUS */
/* DESCRIPTION: */
/*   adapt state */
/* ------------------------------------- */
#define RX_DFE_ADAPT_STATUS_ADDR 0x02000344
#define RX_DFE_ADAPT_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: dfe adaption done */
#define RX_DFE_ADAPT_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_DFE_ADAPT_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_STATUS_LOCK_A_MASK 0x00000001
#define RX_DFE_ADAPT_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DFE_ADAPT_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_DFE_ADAPT_STATUS_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_DFE_ADAPT_STATUS_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_STATUS_DERIV_LOCK_A_MASK 0x00000002
#define RX_DFE_ADAPT_STATUS_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DFE_ADAPT_STATUS_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: dfe watchdog done */
#define RX_DFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000002
#define RX_DFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_DFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000004
#define RX_DFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_STATE_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_DFE_ADAPT_STATUS_ADAPT_STATE_A_OFFSET 0x00000003
#define RX_DFE_ADAPT_STATUS_ADAPT_STATE_A_BITWIDTH 0x00000004
#define RX_DFE_ADAPT_STATUS_ADAPT_STATE_A_MASK 0x00000078
#define RX_DFE_ADAPT_STATUS_ADAPT_STATE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_DFE_ADAPT_STATUS_ADAPT_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_DS */
/* DESCRIPTION: */
/*   Configuration and overrides for the RX direct synthesizer. */
/* ------------------------------------- */
#define RX_DS_ADDR 0x02000348
#define RX_DS_SIZE 32

/* FIELD: DCO_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   RX Synth DCO bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define RX_DS_DCO_BIAS_ADJ_NT_OFFSET 0x00000000
#define RX_DS_DCO_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define RX_DS_DCO_BIAS_ADJ_NT_MASK 0x00000003
#define RX_DS_DCO_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_DCO_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: INT_BW_NT */
/* DESCRIPTION: */
/*   Bandwidth of the RX SSCM Integral Path */
/*   11 - Max */
/*   00 - Min */
#define RX_DS_INT_BW_NT_OFFSET 0x00000002
#define RX_DS_INT_BW_NT_BITWIDTH 0x00000002
#define RX_DS_INT_BW_NT_MASK 0x0000000C
#define RX_DS_INT_BW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_INT_BW_NT_RESET_VALUE 0x00000002

/* FIELD: INT_GAIN_NT */
/* DESCRIPTION: */
/*   Analog Gain of the RX SSCM Integral Path */
/*   11 - Max */
/*   00 - Min */
#define RX_DS_INT_GAIN_NT_OFFSET 0x00000004
#define RX_DS_INT_GAIN_NT_BITWIDTH 0x00000002
#define RX_DS_INT_GAIN_NT_MASK 0x00000030
#define RX_DS_INT_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_INT_GAIN_NT_RESET_VALUE 0x00000001

/* FIELD: REFDCD_A */
/* DESCRIPTION: */
/*   SSCM HSREF dcd calibration code */
#define RX_DS_REFDCD_A_OFFSET 0x00000006
#define RX_DS_REFDCD_A_BITWIDTH 0x00000007
#define RX_DS_REFDCD_A_MASK 0x00001FC0
#define RX_DS_REFDCD_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_REFDCD_A_RESET_VALUE 0x00000000

/* FIELD: REFDCD_READY_A */
/* DESCRIPTION: */
/*   SSCM HSREF dcd calibration code updates in AFE on positive edge of this signal */
#define RX_DS_REFDCD_READY_A_OFFSET 0x0000000D
#define RX_DS_REFDCD_READY_A_BITWIDTH 0x00000001
#define RX_DS_REFDCD_READY_A_MASK 0x00002000
#define RX_DS_REFDCD_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_REFDCD_READY_A_RESET_VALUE 0x00000000

/* FIELD: BBDET_DE_ENA_NT */
/* DESCRIPTION: */
/*   1  Enables HSREF dual edge functionality in SSCM. 0  Dual edge mode disabled */
#define RX_DS_BBDET_DE_ENA_NT_OFFSET 0x0000000E
#define RX_DS_BBDET_DE_ENA_NT_BITWIDTH 0x00000001
#define RX_DS_BBDET_DE_ENA_NT_MASK 0x00004000
#define RX_DS_BBDET_DE_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_BBDET_DE_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_A */
/* DESCRIPTION: */
/*   RX synthesizer output divider setting (clock that is output to DBE) */
/*   7p2 representation of the fractional division of bit clock. Ratios between 16 and 127.75 supported. Examples: */
/*   1111111.11 - Div 127.75 */
/*   0001000.10 - Div 16.5 */
/*   0001000.00 - Div 16 */
#define RX_DS_SYNTH_DIV_A_OFFSET 0x0000000F
#define RX_DS_SYNTH_DIV_A_BITWIDTH 0x00000009
#define RX_DS_SYNTH_DIV_A_MASK 0x00FF8000
#define RX_DS_SYNTH_DIV_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_SYNTH_DIV_A_RESET_VALUE 0x00000000

/* FIELD: DCOREG_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define RX_DS_DCOREG_SCBYPASS_NT_OFFSET 0x00000018
#define RX_DS_DCOREG_SCBYPASS_NT_BITWIDTH 0x00000001
#define RX_DS_DCOREG_SCBYPASS_NT_MASK 0x01000000
#define RX_DS_DCOREG_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_DCOREG_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: DCOREG_NT */
/* DESCRIPTION: */
/*   RX DCO regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define RX_DS_DCOREG_NT_OFFSET 0x00000019
#define RX_DS_DCOREG_NT_BITWIDTH 0x00000004
#define RX_DS_DCOREG_NT_MASK 0x1E000000
#define RX_DS_DCOREG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_DCOREG_NT_RESET_VALUE 0x0000000E

/* FIELD: PI_BYPASS_NT */
/* DESCRIPTION: */
/*   Bypasses the PI in the Direct Synthesizer. */
/*   0 - Normal operation, FracN supported */
/*   1 - Jitter optimized integer mode only.  */
#define RX_DS_PI_BYPASS_NT_OFFSET 0x0000001D
#define RX_DS_PI_BYPASS_NT_BITWIDTH 0x00000001
#define RX_DS_PI_BYPASS_NT_MASK 0x20000000
#define RX_DS_PI_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_PI_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: FRACN_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Override for the PI accumulator code.  */
/*   0 - Normal operation */
/*   1 - Override enabled. When asserted the PI phase is directly overriden to be the 7 MSB of ictl_afe_tx_ds_fracn[11:0] */
#define RX_DS_FRACN_OVR_ENA_NT_OFFSET 0x0000001E
#define RX_DS_FRACN_OVR_ENA_NT_BITWIDTH 0x00000001
#define RX_DS_FRACN_OVR_ENA_NT_MASK 0x40000000
#define RX_DS_FRACN_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_FRACN_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: PROP_GAIN_NT */
/* DESCRIPTION: */
/*   Proportional gain granularity control */
/*   1 - Enable half steps.  */
/*   0 - Default mode */
#define RX_DS_PROP_GAIN_NT_OFFSET 0x0000001F
#define RX_DS_PROP_GAIN_NT_BITWIDTH 0x00000001
#define RX_DS_PROP_GAIN_NT_MASK 0x80000000
#define RX_DS_PROP_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_DS_PROP_GAIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_EQDFE */
/* DESCRIPTION: */
/*   Overrides for DFE. */
/* ------------------------------------- */
#define RX_EQDFE_ADDR 0x0200034C
#define RX_EQDFE_SIZE 32

/* FIELD: DFE_ENABLE_NT */
/* DESCRIPTION: */
/*   DFE enable bit */
#define RX_EQDFE_DFE_ENABLE_NT_OFFSET 0x00000000
#define RX_EQDFE_DFE_ENABLE_NT_BITWIDTH 0x00000001
#define RX_EQDFE_DFE_ENABLE_NT_MASK 0x00000001
#define RX_EQDFE_DFE_ENABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQDFE_DFE_ENABLE_NT_RESET_VALUE 0x00000000

/* FIELD: QZD_ERR_DISABLE_A */
/* DESCRIPTION: */
/*   quantized error disable bit */
#define RX_EQDFE_QZD_ERR_DISABLE_A_OFFSET 0x00000001
#define RX_EQDFE_QZD_ERR_DISABLE_A_BITWIDTH 0x00000001
#define RX_EQDFE_QZD_ERR_DISABLE_A_MASK 0x00000002
#define RX_EQDFE_QZD_ERR_DISABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQDFE_QZD_ERR_DISABLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_EQFFE_CKGATE_REG0 */
/* DESCRIPTION: */
/*   Overrides for DFE. */
/* ------------------------------------- */
#define RX_EQFFE_CKGATE_REG0_ADDR 0x02000350
#define RX_EQFFE_CKGATE_REG0_SIZE 32

/* FIELD: OVRD_BRANCH0_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 0 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH0_NT_OFFSET 0x00000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH0_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH0_NT_MASK 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH0_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH1_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 1 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH1_NT_OFFSET 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH1_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH1_NT_MASK 0x00000002
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH1_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH2_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 2 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH2_NT_OFFSET 0x00000002
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH2_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH2_NT_MASK 0x00000004
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH2_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH3_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 3 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH3_NT_OFFSET 0x00000003
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH3_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH3_NT_MASK 0x00000008
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH3_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH4_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 4 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH4_NT_OFFSET 0x00000004
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH4_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH4_NT_MASK 0x00000010
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH4_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH5_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 5 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH5_NT_OFFSET 0x00000005
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH5_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH5_NT_MASK 0x00000020
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH5_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH6_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 6 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH6_NT_OFFSET 0x00000006
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH6_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH6_NT_MASK 0x00000040
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH6_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH7_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 7 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH7_NT_OFFSET 0x00000007
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH7_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH7_NT_MASK 0x00000080
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH7_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH8_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 8 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH8_NT_OFFSET 0x00000008
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH8_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH8_NT_MASK 0x00000100
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH8_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH9_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 9 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH9_NT_OFFSET 0x00000009
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH9_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH9_NT_MASK 0x00000200
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH9_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH10_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 10 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH10_NT_OFFSET 0x0000000A
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH10_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH10_NT_MASK 0x00000400
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH10_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH11_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 11 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH11_NT_OFFSET 0x0000000B
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH11_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH11_NT_MASK 0x00000800
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH11_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH12_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 12 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH12_NT_OFFSET 0x0000000C
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH12_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH12_NT_MASK 0x00001000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH12_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH13_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 13 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH13_NT_OFFSET 0x0000000D
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH13_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH13_NT_MASK 0x00002000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH13_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH14_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 14 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH14_NT_OFFSET 0x0000000E
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH14_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH14_NT_MASK 0x00004000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH14_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH15_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 15 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH15_NT_OFFSET 0x0000000F
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH15_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH15_NT_MASK 0x00008000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH15_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH16_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 16 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH16_NT_OFFSET 0x00000010
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH16_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH16_NT_MASK 0x00010000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH16_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH17_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 17 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH17_NT_OFFSET 0x00000011
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH17_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH17_NT_MASK 0x00020000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH17_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH18_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 18 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH18_NT_OFFSET 0x00000012
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH18_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH18_NT_MASK 0x00040000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH18_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH19_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 19 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH19_NT_OFFSET 0x00000013
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH19_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH19_NT_MASK 0x00080000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH19_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH20_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 20 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH20_NT_OFFSET 0x00000014
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH20_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH20_NT_MASK 0x00100000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH20_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH21_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 21 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH21_NT_OFFSET 0x00000015
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH21_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH21_NT_MASK 0x00200000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH21_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH21_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH22_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 22 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH22_NT_OFFSET 0x00000016
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH22_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH22_NT_MASK 0x00400000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH22_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH22_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH23_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 23 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH23_NT_OFFSET 0x00000017
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH23_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH23_NT_MASK 0x00800000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH23_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH23_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH24_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 24 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH24_NT_OFFSET 0x00000018
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH24_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH24_NT_MASK 0x01000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH24_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH24_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH25_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 25 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH25_NT_OFFSET 0x00000019
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH25_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH25_NT_MASK 0x02000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH25_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH25_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH26_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 26 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH26_NT_OFFSET 0x0000001A
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH26_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH26_NT_MASK 0x04000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH26_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH26_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH27_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 27 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH27_NT_OFFSET 0x0000001B
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH27_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH27_NT_MASK 0x08000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH27_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH27_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH28_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 28 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH28_NT_OFFSET 0x0000001C
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH28_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH28_NT_MASK 0x10000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH28_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH28_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH29_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 29 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH29_NT_OFFSET 0x0000001D
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH29_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH29_NT_MASK 0x20000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH29_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH29_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH30_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 30 */
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH30_NT_OFFSET 0x0000001E
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH30_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH30_NT_MASK 0x40000000
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH30_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG0_OVRD_BRANCH30_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_EQFFE_CKGATE_REG1 */
/* DESCRIPTION: */
/*   Overrides for DFE. */
/* ------------------------------------- */
#define RX_EQFFE_CKGATE_REG1_ADDR 0x02000354
#define RX_EQFFE_CKGATE_REG1_SIZE 32

/* FIELD: OVRD_BRANCH31_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 31 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH31_NT_OFFSET 0x00000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH31_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH31_NT_MASK 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH31_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH31_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH32_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 32 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH32_NT_OFFSET 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH32_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH32_NT_MASK 0x00000002
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH32_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH32_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH33_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 33 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH33_NT_OFFSET 0x00000002
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH33_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH33_NT_MASK 0x00000004
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH33_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH33_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH34_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 34 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH34_NT_OFFSET 0x00000003
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH34_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH34_NT_MASK 0x00000008
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH34_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH34_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH35_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 35 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH35_NT_OFFSET 0x00000004
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH35_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH35_NT_MASK 0x00000010
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH35_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH35_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH36_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 36 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH36_NT_OFFSET 0x00000005
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH36_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH36_NT_MASK 0x00000020
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH36_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH36_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH37_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 37 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH37_NT_OFFSET 0x00000006
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH37_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH37_NT_MASK 0x00000040
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH37_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH37_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH38_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 38 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH38_NT_OFFSET 0x00000007
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH38_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH38_NT_MASK 0x00000080
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH38_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH38_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH39_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 39 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH39_NT_OFFSET 0x00000008
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH39_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH39_NT_MASK 0x00000100
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH39_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH39_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH40_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 40 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH40_NT_OFFSET 0x00000009
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH40_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH40_NT_MASK 0x00000200
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH40_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH40_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH41_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 41 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH41_NT_OFFSET 0x0000000A
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH41_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH41_NT_MASK 0x00000400
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH41_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH41_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH42_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 42 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH42_NT_OFFSET 0x0000000B
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH42_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH42_NT_MASK 0x00000800
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH42_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH42_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH43_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 43 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH43_NT_OFFSET 0x0000000C
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH43_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH43_NT_MASK 0x00001000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH43_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH43_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH44_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 44 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH44_NT_OFFSET 0x0000000D
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH44_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH44_NT_MASK 0x00002000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH44_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH44_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH45_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 45 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH45_NT_OFFSET 0x0000000E
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH45_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH45_NT_MASK 0x00004000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH45_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH45_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH46_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 46 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH46_NT_OFFSET 0x0000000F
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH46_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH46_NT_MASK 0x00008000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH46_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH46_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH47_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 47 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH47_NT_OFFSET 0x00000010
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH47_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH47_NT_MASK 0x00010000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH47_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH47_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH48_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 48 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH48_NT_OFFSET 0x00000011
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH48_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH48_NT_MASK 0x00020000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH48_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH48_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH49_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 49 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH49_NT_OFFSET 0x00000012
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH49_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH49_NT_MASK 0x00040000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH49_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH49_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH50_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 50 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH50_NT_OFFSET 0x00000013
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH50_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH50_NT_MASK 0x00080000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH50_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH50_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH51_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 51 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH51_NT_OFFSET 0x00000014
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH51_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH51_NT_MASK 0x00100000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH51_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH51_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH52_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 52 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH52_NT_OFFSET 0x00000015
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH52_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH52_NT_MASK 0x00200000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH52_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH52_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH53_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 53 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH53_NT_OFFSET 0x00000016
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH53_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH53_NT_MASK 0x00400000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH53_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH53_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH54_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 54 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH54_NT_OFFSET 0x00000017
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH54_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH54_NT_MASK 0x00800000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH54_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH54_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH55_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 55 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH55_NT_OFFSET 0x00000018
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH55_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH55_NT_MASK 0x01000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH55_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH55_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH56_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 56 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH56_NT_OFFSET 0x00000019
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH56_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH56_NT_MASK 0x02000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH56_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH56_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH57_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 57 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH57_NT_OFFSET 0x0000001A
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH57_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH57_NT_MASK 0x04000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH57_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH57_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH58_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 58 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH58_NT_OFFSET 0x0000001B
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH58_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH58_NT_MASK 0x08000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH58_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH58_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH59_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 59 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH59_NT_OFFSET 0x0000001C
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH59_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH59_NT_MASK 0x10000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH59_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH59_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH60_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 60 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH60_NT_OFFSET 0x0000001D
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH60_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH60_NT_MASK 0x20000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH60_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH60_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH61_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 61 */
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH61_NT_OFFSET 0x0000001E
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH61_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH61_NT_MASK 0x40000000
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH61_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG1_OVRD_BRANCH61_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_EQFFE_CKGATE_REG2 */
/* DESCRIPTION: */
/*   Overrides for DFE. */
/* ------------------------------------- */
#define RX_EQFFE_CKGATE_REG2_ADDR 0x02000358
#define RX_EQFFE_CKGATE_REG2_SIZE 32

/* FIELD: OVRD_BRANCH62_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 62 */
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH62_NT_OFFSET 0x00000000
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH62_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH62_NT_MASK 0x00000001
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH62_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH62_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_BRANCH63_NT */
/* DESCRIPTION: */
/*   Clock gate override inside FFE for branch 63 */
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH63_NT_OFFSET 0x00000001
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH63_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH63_NT_MASK 0x00000002
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH63_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CKGATE_REG2_OVRD_BRANCH63_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_EQFFE_CLK */
/* DESCRIPTION: */
/*   Overrides for DFE. */
/* ------------------------------------- */
#define RX_EQFFE_CLK_ADDR 0x0200035C
#define RX_EQFFE_CLK_SIZE 32

/* FIELD: DISABLE_TAP0_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 0.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP0_NT_OFFSET 0x00000000
#define RX_EQFFE_CLK_DISABLE_TAP0_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP0_NT_MASK 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP1_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 1.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP1_NT_OFFSET 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP1_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP1_NT_MASK 0x00000002
#define RX_EQFFE_CLK_DISABLE_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP2_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 2.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP2_NT_OFFSET 0x00000002
#define RX_EQFFE_CLK_DISABLE_TAP2_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP2_NT_MASK 0x00000004
#define RX_EQFFE_CLK_DISABLE_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP3_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 3.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP3_NT_OFFSET 0x00000003
#define RX_EQFFE_CLK_DISABLE_TAP3_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP3_NT_MASK 0x00000008
#define RX_EQFFE_CLK_DISABLE_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP4_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 4.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP4_NT_OFFSET 0x00000004
#define RX_EQFFE_CLK_DISABLE_TAP4_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP4_NT_MASK 0x00000010
#define RX_EQFFE_CLK_DISABLE_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP5_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 5.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP5_NT_OFFSET 0x00000005
#define RX_EQFFE_CLK_DISABLE_TAP5_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP5_NT_MASK 0x00000020
#define RX_EQFFE_CLK_DISABLE_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP5_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP6_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 6.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP6_NT_OFFSET 0x00000006
#define RX_EQFFE_CLK_DISABLE_TAP6_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP6_NT_MASK 0x00000040
#define RX_EQFFE_CLK_DISABLE_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP7_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 7.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP7_NT_OFFSET 0x00000007
#define RX_EQFFE_CLK_DISABLE_TAP7_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP7_NT_MASK 0x00000080
#define RX_EQFFE_CLK_DISABLE_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP8_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 8.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP8_NT_OFFSET 0x00000008
#define RX_EQFFE_CLK_DISABLE_TAP8_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP8_NT_MASK 0x00000100
#define RX_EQFFE_CLK_DISABLE_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP9_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 9.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP9_NT_OFFSET 0x00000009
#define RX_EQFFE_CLK_DISABLE_TAP9_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP9_NT_MASK 0x00000200
#define RX_EQFFE_CLK_DISABLE_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP10_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 10.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP10_NT_OFFSET 0x0000000A
#define RX_EQFFE_CLK_DISABLE_TAP10_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP10_NT_MASK 0x00000400
#define RX_EQFFE_CLK_DISABLE_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP10_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP11_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 11.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP11_NT_OFFSET 0x0000000B
#define RX_EQFFE_CLK_DISABLE_TAP11_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP11_NT_MASK 0x00000800
#define RX_EQFFE_CLK_DISABLE_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP12_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 12.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP12_NT_OFFSET 0x0000000C
#define RX_EQFFE_CLK_DISABLE_TAP12_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP12_NT_MASK 0x00001000
#define RX_EQFFE_CLK_DISABLE_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP13_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 13.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP13_NT_OFFSET 0x0000000D
#define RX_EQFFE_CLK_DISABLE_TAP13_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP13_NT_MASK 0x00002000
#define RX_EQFFE_CLK_DISABLE_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP14_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 14.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP14_NT_OFFSET 0x0000000E
#define RX_EQFFE_CLK_DISABLE_TAP14_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP14_NT_MASK 0x00004000
#define RX_EQFFE_CLK_DISABLE_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP14_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP15_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 15.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP15_NT_OFFSET 0x0000000F
#define RX_EQFFE_CLK_DISABLE_TAP15_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP15_NT_MASK 0x00008000
#define RX_EQFFE_CLK_DISABLE_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP16_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 16.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP16_NT_OFFSET 0x00000010
#define RX_EQFFE_CLK_DISABLE_TAP16_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP16_NT_MASK 0x00010000
#define RX_EQFFE_CLK_DISABLE_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP16_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP17_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 17.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP17_NT_OFFSET 0x00000011
#define RX_EQFFE_CLK_DISABLE_TAP17_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP17_NT_MASK 0x00020000
#define RX_EQFFE_CLK_DISABLE_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP17_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP18_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 18.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP18_NT_OFFSET 0x00000012
#define RX_EQFFE_CLK_DISABLE_TAP18_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP18_NT_MASK 0x00040000
#define RX_EQFFE_CLK_DISABLE_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP19_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 19.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP19_NT_OFFSET 0x00000013
#define RX_EQFFE_CLK_DISABLE_TAP19_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP19_NT_MASK 0x00080000
#define RX_EQFFE_CLK_DISABLE_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: DISABLE_TAP20_NT */
/* DESCRIPTION: */
/*   Clock gate override for tap 20.  By default  clock is enabled */
#define RX_EQFFE_CLK_DISABLE_TAP20_NT_OFFSET 0x00000014
#define RX_EQFFE_CLK_DISABLE_TAP20_NT_BITWIDTH 0x00000001
#define RX_EQFFE_CLK_DISABLE_TAP20_NT_MASK 0x00100000
#define RX_EQFFE_CLK_DISABLE_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_EQFFE_CLK_DISABLE_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_BACKGROUND */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_BACKGROUND_ADDR 0x02000360
#define RX_FFE_ADAPT_BACKGROUND_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for ffe adapt mu */
#define RX_FFE_ADAPT_BACKGROUND_LMS_MU_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_BACKGROUND_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_BACKGROUND_LMS_MU_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_BACKGROUND_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_BACKGROUND_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for ffe adapt watchdog */
#define RX_FFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_FFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_BACKGROUND_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_CMA */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_CMA_ADDR 0x02000364
#define RX_FFE_ADAPT_CMA_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu for CMA mode */
#define RX_FFE_ADAPT_CMA_LMS_MU_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_CMA_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_CMA_LMS_MU_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_CMA_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_CMA_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   watchdog timeout configuration for CMA mode */
#define RX_FFE_ADAPT_CMA_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_CMA_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_CMA_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_FFE_ADAPT_CMA_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_CMA_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_COEF_RDREG0 */
/* DESCRIPTION: */
/*   RX FFE TAP coefficient value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_COEF_RDREG0_ADDR 0x02000368
#define RX_FFE_ADAPT_COEF_RDREG0_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP0_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_COEF_RDREG0_TAP0_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP0_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_COEF_RDREG0_TAP0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP1_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP1_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP1_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_COEF_RDREG0_TAP1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP2_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_COEF_RDREG0_TAP2_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP2_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_COEF_RDREG0_TAP2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP3_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_COEF_RDREG0_TAP3_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP3_NT_MASK 0x000F8000
#define RX_FFE_ADAPT_COEF_RDREG0_TAP3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP4_NT_OFFSET 0x00000014
#define RX_FFE_ADAPT_COEF_RDREG0_TAP4_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP4_NT_MASK 0x01F00000
#define RX_FFE_ADAPT_COEF_RDREG0_TAP4_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG0_TAP5_NT_OFFSET 0x00000019
#define RX_FFE_ADAPT_COEF_RDREG0_TAP5_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG0_TAP5_NT_MASK 0x3E000000
#define RX_FFE_ADAPT_COEF_RDREG0_TAP5_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG0_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_COEF_RDREG1 */
/* DESCRIPTION: */
/*   RX FFE TAP coefficient value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_COEF_RDREG1_ADDR 0x0200036C
#define RX_FFE_ADAPT_COEF_RDREG1_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG1_TAP6_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_COEF_RDREG1_TAP6_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG1_TAP6_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_COEF_RDREG1_TAP6_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG1_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG1_TAP7_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG1_TAP7_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG1_TAP7_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_COEF_RDREG1_TAP7_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG1_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG1_TAP8_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_COEF_RDREG1_TAP8_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_COEF_RDREG1_TAP8_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_COEF_RDREG1_TAP8_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG1_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG1_TAP9_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_COEF_RDREG1_TAP9_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_COEF_RDREG1_TAP9_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_COEF_RDREG1_TAP9_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG1_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG1_TAP10_NT_OFFSET 0x00000015
#define RX_FFE_ADAPT_COEF_RDREG1_TAP10_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_COEF_RDREG1_TAP10_NT_MASK 0x07E00000
#define RX_FFE_ADAPT_COEF_RDREG1_TAP10_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG1_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_COEF_RDREG2 */
/* DESCRIPTION: */
/*   RX FFE TAP coefficient value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_COEF_RDREG2_ADDR 0x02000370
#define RX_FFE_ADAPT_COEF_RDREG2_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG2_TAP11_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_COEF_RDREG2_TAP11_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_COEF_RDREG2_TAP11_NT_MASK 0x0000007F
#define RX_FFE_ADAPT_COEF_RDREG2_TAP11_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG2_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG2_TAP12_NT_OFFSET 0x00000007
#define RX_FFE_ADAPT_COEF_RDREG2_TAP12_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_COEF_RDREG2_TAP12_NT_MASK 0x00007F80
#define RX_FFE_ADAPT_COEF_RDREG2_TAP12_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG2_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG2_TAP13_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_COEF_RDREG2_TAP13_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_COEF_RDREG2_TAP13_NT_MASK 0x007F8000
#define RX_FFE_ADAPT_COEF_RDREG2_TAP13_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG2_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG2_TAP14_NT_OFFSET 0x00000017
#define RX_FFE_ADAPT_COEF_RDREG2_TAP14_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_COEF_RDREG2_TAP14_NT_MASK 0x7F800000
#define RX_FFE_ADAPT_COEF_RDREG2_TAP14_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG2_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_COEF_RDREG3 */
/* DESCRIPTION: */
/*   RX FFE TAP coefficient value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_COEF_RDREG3_ADDR 0x02000374
#define RX_FFE_ADAPT_COEF_RDREG3_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG3_TAP15_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_COEF_RDREG3_TAP15_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_COEF_RDREG3_TAP15_NT_MASK 0x000001FF
#define RX_FFE_ADAPT_COEF_RDREG3_TAP15_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG3_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG3_TAP16_NT_OFFSET 0x00000009
#define RX_FFE_ADAPT_COEF_RDREG3_TAP16_NT_BITWIDTH 0x0000000A
#define RX_FFE_ADAPT_COEF_RDREG3_TAP16_NT_MASK 0x0007FE00
#define RX_FFE_ADAPT_COEF_RDREG3_TAP16_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG3_TAP16_NT_RESET_VALUE 0x00000000

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG3_TAP17_NT_OFFSET 0x00000013
#define RX_FFE_ADAPT_COEF_RDREG3_TAP17_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_COEF_RDREG3_TAP17_NT_MASK 0x0FF80000
#define RX_FFE_ADAPT_COEF_RDREG3_TAP17_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG3_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_COEF_RDREG4 */
/* DESCRIPTION: */
/*   RX FFE TAP coefficient value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_COEF_RDREG4_ADDR 0x02000378
#define RX_FFE_ADAPT_COEF_RDREG4_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG4_TAP18_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_COEF_RDREG4_TAP18_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_COEF_RDREG4_TAP18_NT_MASK 0x000000FF
#define RX_FFE_ADAPT_COEF_RDREG4_TAP18_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG4_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG4_TAP19_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_COEF_RDREG4_TAP19_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_COEF_RDREG4_TAP19_NT_MASK 0x00007F00
#define RX_FFE_ADAPT_COEF_RDREG4_TAP19_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG4_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_COEF_RDREG4_TAP20_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_COEF_RDREG4_TAP20_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_COEF_RDREG4_TAP20_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_COEF_RDREG4_TAP20_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_COEF_RDREG4_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_DDLMS */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_DDLMS_ADDR 0x0200037C
#define RX_FFE_ADAPT_DDLMS_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu for DDLMS mode */
#define RX_FFE_ADAPT_DDLMS_LMS_MU_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_DDLMS_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_DDLMS_LMS_MU_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_DDLMS_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_DDLMS_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   watchdog timeout configurations for DDLMS mode */
#define RX_FFE_ADAPT_DDLMS_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_DDLMS_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_DDLMS_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_FFE_ADAPT_DDLMS_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_DDLMS_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG1_ADDR 0x02000380
#define RX_FFE_ADAPT_REG1_SIZE 32

/* FIELD: BRANCH_SEL_A */
/* DESCRIPTION: */
/*   Branch Selection */
#define RX_FFE_ADAPT_REG1_BRANCH_SEL_A_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG1_BRANCH_SEL_A_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG1_BRANCH_SEL_A_MASK 0x000000FF
#define RX_FFE_ADAPT_REG1_BRANCH_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BRANCH_SEL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOLOAD_ENA_A */
/* DESCRIPTION: */
/*   Autoload enable */
#define RX_FFE_ADAPT_REG1_AUTOLOAD_ENA_A_OFFSET 0x00000008
#define RX_FFE_ADAPT_REG1_AUTOLOAD_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_AUTOLOAD_ENA_A_MASK 0x00000100
#define RX_FFE_ADAPT_REG1_AUTOLOAD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_AUTOLOAD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_ALL_BRANCHES_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to all branches */
#define RX_FFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_OFFSET 0x00000009
#define RX_FFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_MASK 0x00000200
#define RX_FFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_ALL_BRANCHES_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_0_7_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 0 - 7 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_MASK 0x00000400
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_0_7_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_8_15_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 8 - 15 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_OFFSET 0x0000000B
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_MASK 0x00000800
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_8_15_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_16_23_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 16 - 23 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_OFFSET 0x0000000C
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_MASK 0x00001000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_16_23_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_24_31_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 24 - 31 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_OFFSET 0x0000000D
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_MASK 0x00002000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_24_31_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_32_39_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 32 - 39 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_OFFSET 0x0000000E
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_MASK 0x00004000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_32_39_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_40_47_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 40 - 47 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_MASK 0x00008000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_40_47_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_48_55_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 48 - 55 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_OFFSET 0x00000010
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_MASK 0x00010000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_48_55_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_56_63_ENA_A */
/* DESCRIPTION: */
/*   Broadcast FFE coefficients overrides to branches 56 - 63 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_OFFSET 0x00000011
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_MASK 0x00020000
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG1_BROADCAST_BRANCHES_56_63_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG10 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG10_ADDR 0x02000384
#define RX_FFE_ADAPT_REG10_SIZE 32

/* FIELD: COEF_INIT_TAP6_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP6_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP6_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP6_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP7_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP7_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP7_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP7_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP8_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP8_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP8_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP8_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP9_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP9_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP9_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP9_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP10_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP10_NT_OFFSET 0x00000015
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP10_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP10_NT_MASK 0x07E00000
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG10_COEF_INIT_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG11 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG11_ADDR 0x02000388
#define RX_FFE_ADAPT_REG11_SIZE 32

/* FIELD: COEF_INIT_TAP11_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP11_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP11_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP11_NT_MASK 0x0000007F
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP12_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP12_NT_OFFSET 0x00000007
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP12_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP12_NT_MASK 0x00007F80
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP13_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP13_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP13_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP13_NT_MASK 0x007F8000
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP14_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP14_NT_OFFSET 0x00000017
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP14_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP14_NT_MASK 0x7F800000
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG11_COEF_INIT_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG12 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG12_ADDR 0x0200038C
#define RX_FFE_ADAPT_REG12_SIZE 32

/* FIELD: COEF_INIT_TAP15_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP15_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP15_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP15_NT_MASK 0x000001FF
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP16_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP16_NT_OFFSET 0x00000009
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP16_NT_BITWIDTH 0x0000000A
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP16_NT_MASK 0x0007FE00
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: COEF_INIT_TAP17_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP17_NT_OFFSET 0x00000013
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP17_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP17_NT_MASK 0x0FF80000
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG12_COEF_INIT_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG13 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG13_ADDR 0x02000390
#define RX_FFE_ADAPT_REG13_SIZE 32

/* FIELD: COEF_INIT_TAP18_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP18_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP18_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP18_NT_MASK 0x000000FF
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP19_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP19_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP19_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP19_NT_MASK 0x00007F00
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP20_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP20_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP20_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP20_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG13_COEF_INIT_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG16 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG16_ADDR 0x02000394
#define RX_FFE_ADAPT_REG16_SIZE 32

/* FIELD: TARGET_CMA_NT */
/* DESCRIPTION: */
/*   CMA target sets the internal gain AGC target = regvalue/128 */
#define RX_FFE_ADAPT_REG16_TARGET_CMA_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG16_TARGET_CMA_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_REG16_TARGET_CMA_NT_MASK 0x000001FF
#define RX_FFE_ADAPT_REG16_TARGET_CMA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG16_TARGET_CMA_NT_RESET_VALUE 0x0000004C

/* FIELD: ZERO_COEF_A */
/* DESCRIPTION: */
/*   set all coefficient to zero */
#define RX_FFE_ADAPT_REG16_ZERO_COEF_A_OFFSET 0x00000009
#define RX_FFE_ADAPT_REG16_ZERO_COEF_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG16_ZERO_COEF_A_MASK 0x00000200
#define RX_FFE_ADAPT_REG16_ZERO_COEF_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG16_ZERO_COEF_A_RESET_VALUE 0x00000000

/* FIELD: ONE_MAIN_COEF_A */
/* DESCRIPTION: */
/*   set maintap coefficient to one */
#define RX_FFE_ADAPT_REG16_ONE_MAIN_COEF_A_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG16_ONE_MAIN_COEF_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG16_ONE_MAIN_COEF_A_MASK 0x00000400
#define RX_FFE_ADAPT_REG16_ONE_MAIN_COEF_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG16_ONE_MAIN_COEF_A_RESET_VALUE 0x00000000

/* FIELD: TAP_DISABLE_NT */
/* DESCRIPTION: */
/*   Disables adaption updates to individual taps within the FFE */
#define RX_FFE_ADAPT_REG16_TAP_DISABLE_NT_OFFSET 0x0000000B
#define RX_FFE_ADAPT_REG16_TAP_DISABLE_NT_BITWIDTH 0x00000015
#define RX_FFE_ADAPT_REG16_TAP_DISABLE_NT_MASK 0xFFFFF800
#define RX_FFE_ADAPT_REG16_TAP_DISABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG16_TAP_DISABLE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG17 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG17_ADDR 0x02000398
#define RX_FFE_ADAPT_REG17_SIZE 32

/* FIELD: BRANCH_DISABLE1_NT */
/* DESCRIPTION: */
/*   branch 0~31 disable */
#define RX_FFE_ADAPT_REG17_BRANCH_DISABLE1_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG17_BRANCH_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_FFE_ADAPT_REG17_BRANCH_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_FFE_ADAPT_REG17_BRANCH_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG17_BRANCH_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG18 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG18_ADDR 0x0200039C
#define RX_FFE_ADAPT_REG18_SIZE 32

/* FIELD: BRANCH_DISABLE2_NT */
/* DESCRIPTION: */
/*   branch 32~63 disable */
#define RX_FFE_ADAPT_REG18_BRANCH_DISABLE2_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG18_BRANCH_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_FFE_ADAPT_REG18_BRANCH_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_FFE_ADAPT_REG18_BRANCH_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG18_BRANCH_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG19 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG19_ADDR 0x020003A0
#define RX_FFE_ADAPT_REG19_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu */
#define RX_FFE_ADAPT_REG19_LMS_MU_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG19_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG19_LMS_MU_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_REG19_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   lms mu dir */
#define RX_FFE_ADAPT_REG19_LMS_MU_DIR_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_REG19_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_LMS_MU_DIR_NT_MASK 0x00000020
#define RX_FFE_ADAPT_REG19_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_INVERT_A */
/* DESCRIPTION: */
/*   Inverts adapt direction */
#define RX_FFE_ADAPT_REG19_LMS_INVERT_A_OFFSET 0x00000006
#define RX_FFE_ADAPT_REG19_LMS_INVERT_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_LMS_INVERT_A_MASK 0x00000040
#define RX_FFE_ADAPT_REG19_LMS_INVERT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_LMS_INVERT_A_RESET_VALUE 0x00000000

/* FIELD: INIT_ENA_A */
/* DESCRIPTION: */
/*   When set to 1, reinitializes all FFE branch coefficients to initial value */
#define RX_FFE_ADAPT_REG19_INIT_ENA_A_OFFSET 0x00000007
#define RX_FFE_ADAPT_REG19_INIT_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_INIT_ENA_A_MASK 0x00000080
#define RX_FFE_ADAPT_REG19_INIT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_INIT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   watchdog timeout configurations */
#define RX_FFE_ADAPT_REG19_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_REG19_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG19_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_FFE_ADAPT_REG19_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: DDLMS_NCMA_A */
/* DESCRIPTION: */
/*   1 ddlms 0 cma */
#define RX_FFE_ADAPT_REG19_DDLMS_NCMA_A_OFFSET 0x0000000D
#define RX_FFE_ADAPT_REG19_DDLMS_NCMA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_DDLMS_NCMA_A_MASK 0x00002000
#define RX_FFE_ADAPT_REG19_DDLMS_NCMA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_DDLMS_NCMA_A_RESET_VALUE 0x00000000

/* FIELD: SLAVE_MODE_A */
/* DESCRIPTION: */
/*   slave mode configuration: */
/*   0 = pre leads */
/*   1 = post leads */
/*   2 = pre and post are averaged */
#define RX_FFE_ADAPT_REG19_SLAVE_MODE_A_OFFSET 0x0000000E
#define RX_FFE_ADAPT_REG19_SLAVE_MODE_A_BITWIDTH 0x00000002
#define RX_FFE_ADAPT_REG19_SLAVE_MODE_A_MASK 0x0000C000
#define RX_FFE_ADAPT_REG19_SLAVE_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_SLAVE_MODE_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_FFE_ADAPT_REG19_BYPASS_ENA_A_OFFSET 0x00000010
#define RX_FFE_ADAPT_REG19_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_BYPASS_ENA_A_MASK 0x00010000
#define RX_FFE_ADAPT_REG19_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: START_BRANCH_NT */
/* DESCRIPTION: */
/*   start branch */
#define RX_FFE_ADAPT_REG19_START_BRANCH_NT_OFFSET 0x00000011
#define RX_FFE_ADAPT_REG19_START_BRANCH_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG19_START_BRANCH_NT_MASK 0x007E0000
#define RX_FFE_ADAPT_REG19_START_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_START_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: ADAPT_ENA_A */
/* DESCRIPTION: */
/*   adapt enable */
#define RX_FFE_ADAPT_REG19_ADAPT_ENA_A_OFFSET 0x00000017
#define RX_FFE_ADAPT_REG19_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_ADAPT_ENA_A_MASK 0x00800000
#define RX_FFE_ADAPT_REG19_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_ADAPT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_FFE_ADAPT_REG19_ADAPT_START_A_OFFSET 0x00000018
#define RX_FFE_ADAPT_REG19_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_ADAPT_START_A_MASK 0x01000000
#define RX_FFE_ADAPT_REG19_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_STOP_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded stop branch */
#define RX_FFE_ADAPT_REG19_UNBONDED_STOP_BRANCH_NT_OFFSET 0x00000019
#define RX_FFE_ADAPT_REG19_UNBONDED_STOP_BRANCH_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG19_UNBONDED_STOP_BRANCH_NT_MASK 0x7E000000
#define RX_FFE_ADAPT_REG19_UNBONDED_STOP_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_UNBONDED_STOP_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_NBONDED_A */
/* DESCRIPTION: */
/*   1 unbonded, 0 bonded mode sel */
#define RX_FFE_ADAPT_REG19_UNBONDED_NBONDED_A_OFFSET 0x0000001F
#define RX_FFE_ADAPT_REG19_UNBONDED_NBONDED_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_REG19_UNBONDED_NBONDED_A_MASK 0x80000000
#define RX_FFE_ADAPT_REG19_UNBONDED_NBONDED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG19_UNBONDED_NBONDED_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG2_ADDR 0x020003A4
#define RX_FFE_ADAPT_REG2_SIZE 32

/* FIELD: COEF_OVRD_TAP0_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP0_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP0_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP0_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP1_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP1_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP1_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP1_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP2_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP2_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP2_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP2_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP3_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP3_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP3_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP3_NT_MASK 0x000F8000
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP4_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP4_NT_OFFSET 0x00000014
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP4_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP4_NT_MASK 0x01F00000
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP5_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP5_NT_OFFSET 0x00000019
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP5_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP5_NT_MASK 0x3E000000
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG2_COEF_OVRD_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG20 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG20_ADDR 0x020003A8
#define RX_FFE_ADAPT_REG20_SIZE 32

/* FIELD: DBG_BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Branch select for debug read back of FIR tap value */
#define RX_FFE_ADAPT_REG20_DBG_BRANCH_SEL_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG20_DBG_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG20_DBG_BRANCH_SEL_NT_MASK 0x0000003F
#define RX_FFE_ADAPT_REG20_DBG_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG20_DBG_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG3_ADDR 0x020003AC
#define RX_FFE_ADAPT_REG3_SIZE 32

/* FIELD: COEF_OVRD_TAP6_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP6_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP6_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP6_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP7_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP7_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP7_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP7_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP8_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP8_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP8_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP8_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP9_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP9_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP9_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP9_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP10_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP10_NT_OFFSET 0x00000015
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP10_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP10_NT_MASK 0x07E00000
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG3_COEF_OVRD_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG4_ADDR 0x020003B0
#define RX_FFE_ADAPT_REG4_SIZE 32

/* FIELD: COEF_OVRD_TAP11_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP11_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP11_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP11_NT_MASK 0x0000007F
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP12_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP12_NT_OFFSET 0x00000007
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP12_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP12_NT_MASK 0x00007F80
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP13_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP13_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP13_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP13_NT_MASK 0x007F8000
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP14_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP14_NT_OFFSET 0x00000017
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP14_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP14_NT_MASK 0x7F800000
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG4_COEF_OVRD_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG5_ADDR 0x020003B4
#define RX_FFE_ADAPT_REG5_SIZE 32

/* FIELD: COEF_OVRD_TAP15_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP15_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP15_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP15_NT_MASK 0x000001FF
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP16_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP16_NT_OFFSET 0x00000009
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP16_NT_BITWIDTH 0x0000000A
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP16_NT_MASK 0x0007FE00
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP16_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP17_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP17_NT_OFFSET 0x00000013
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP17_NT_BITWIDTH 0x00000009
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP17_NT_MASK 0x0FF80000
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG5_COEF_OVRD_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG6_ADDR 0x020003B8
#define RX_FFE_ADAPT_REG6_SIZE 32

/* FIELD: COEF_OVRD_TAP18_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP18_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP18_NT_BITWIDTH 0x00000008
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP18_NT_MASK 0x000000FF
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP19_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP19_NT_OFFSET 0x00000008
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP19_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP19_NT_MASK 0x00007F00
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_OVRD_TAP20_NT */
/* DESCRIPTION: */
/*   Tap override */
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP20_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP20_NT_BITWIDTH 0x00000006
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP20_NT_MASK 0x001F8000
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG6_COEF_OVRD_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_REG9 */
/* DESCRIPTION: */
/*   Override of DBE FFE coefficients. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_FFE_ADAPT_REG9_ADDR 0x020003BC
#define RX_FFE_ADAPT_REG9_SIZE 32

/* FIELD: COEF_INIT_TAP0_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP0_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP0_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP0_NT_MASK 0x0000001F
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP1_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP1_NT_OFFSET 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP1_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP1_NT_MASK 0x000003E0
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP2_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP2_NT_OFFSET 0x0000000A
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP2_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP2_NT_MASK 0x00007C00
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP3_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP3_NT_OFFSET 0x0000000F
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP3_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP3_NT_MASK 0x000F8000
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP4_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP4_NT_OFFSET 0x00000014
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP4_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP4_NT_MASK 0x01F00000
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: COEF_INIT_TAP5_NT */
/* DESCRIPTION: */
/*   Tap initial */
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP5_NT_OFFSET 0x00000019
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP5_NT_BITWIDTH 0x00000005
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP5_NT_MASK 0x3E000000
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_FFE_ADAPT_REG9_COEF_INIT_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_ROAMING_RDREG5 */
/* DESCRIPTION: */
/*   RX FFE roaming TAP bank energy value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_ROAMING_RDREG5_ADDR 0x020003C0
#define RX_FFE_ADAPT_ROAMING_RDREG5_SIZE 32

/* FIELD: BANK0_ENERGY_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_ROAMING_RDREG5_BANK0_ENERGY_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_ROAMING_RDREG5_BANK0_ENERGY_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_ROAMING_RDREG5_BANK0_ENERGY_NT_MASK 0x0000007F
#define RX_FFE_ADAPT_ROAMING_RDREG5_BANK0_ENERGY_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_ROAMING_RDREG5_BANK0_ENERGY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_ROAMING_RDREG6 */
/* DESCRIPTION: */
/*   RX FFE roaming TAP bank energy value */
/* ------------------------------------- */
#define RX_FFE_ADAPT_ROAMING_RDREG6_ADDR 0x020003C4
#define RX_FFE_ADAPT_ROAMING_RDREG6_SIZE 32

/* FIELD: BANK1_ENERGY_NT */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_ROAMING_RDREG6_BANK1_ENERGY_NT_OFFSET 0x00000000
#define RX_FFE_ADAPT_ROAMING_RDREG6_BANK1_ENERGY_NT_BITWIDTH 0x00000007
#define RX_FFE_ADAPT_ROAMING_RDREG6_BANK1_ENERGY_NT_MASK 0x0000007F
#define RX_FFE_ADAPT_ROAMING_RDREG6_BANK1_ENERGY_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_ROAMING_RDREG6_BANK1_ENERGY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_FFE_ADAPT_STATUS */
/* DESCRIPTION: */
/*   adapt state */
/* ------------------------------------- */
#define RX_FFE_ADAPT_STATUS_ADDR 0x020003C8
#define RX_FFE_ADAPT_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: adaption is done */
#define RX_FFE_ADAPT_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_FFE_ADAPT_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_STATUS_LOCK_A_MASK 0x00000001
#define RX_FFE_ADAPT_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: PRE_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_FFE_ADAPT_STATUS_PRE_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_FFE_ADAPT_STATUS_PRE_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_STATUS_PRE_DERIV_LOCK_A_MASK 0x00000002
#define RX_FFE_ADAPT_STATUS_PRE_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_PRE_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: MAIN_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_FFE_ADAPT_STATUS_MAIN_DERIV_LOCK_A_OFFSET 0x00000002
#define RX_FFE_ADAPT_STATUS_MAIN_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_STATUS_MAIN_DERIV_LOCK_A_MASK 0x00000004
#define RX_FFE_ADAPT_STATUS_MAIN_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_MAIN_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: POST_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_FFE_ADAPT_STATUS_POST_DERIV_LOCK_A_OFFSET 0x00000003
#define RX_FFE_ADAPT_STATUS_POST_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_STATUS_POST_DERIV_LOCK_A_MASK 0x00000008
#define RX_FFE_ADAPT_STATUS_POST_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_POST_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: watchdog done */
#define RX_FFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000004
#define RX_FFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_FFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000010
#define RX_FFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_STATE_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_FFE_ADAPT_STATUS_ADAPT_STATE_A_OFFSET 0x00000005
#define RX_FFE_ADAPT_STATUS_ADAPT_STATE_A_BITWIDTH 0x00000004
#define RX_FFE_ADAPT_STATUS_ADAPT_STATE_A_MASK 0x000001E0
#define RX_FFE_ADAPT_STATUS_ADAPT_STATE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_FFE_ADAPT_STATUS_ADAPT_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_RDREG1 */
/* DESCRIPTION: */
/*   Observability registers for the DBE CDR digital loop filter.  */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_RDREG1_ADDR 0x020003CC
#define RX_ITR_DPLL_DLPF_RDREG1_SIZE 32

/* FIELD: DLPF_INT_NT */
/* DESCRIPTION: */
/*   dpll dlpf int value */
#define RX_ITR_DPLL_DLPF_RDREG1_DLPF_INT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_RDREG1_DLPF_INT_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_DLPF_RDREG1_DLPF_INT_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_DLPF_RDREG1_DLPF_INT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_DLPF_RDREG1_DLPF_INT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG1 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG1_ADDR 0x020003D0
#define RX_ITR_DPLL_DLPF_REG1_SIZE 32

/* FIELD: KPROP1_NT */
/* DESCRIPTION: */
/*   CDR Prop gain setting, acquisition mode: right shift the CDR proportional sum by regvalue. */
#define RX_ITR_DPLL_DLPF_REG1_KPROP1_NT_OFFSET 0x00000008
#define RX_ITR_DPLL_DLPF_REG1_KPROP1_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG1_KPROP1_NT_MASK 0x00001F00
#define RX_ITR_DPLL_DLPF_REG1_KPROP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG1_KPROP1_NT_RESET_VALUE 0x00000006

/* FIELD: KPROP2_NT */
/* DESCRIPTION: */
/*   CDR Prop gain setting, lock mode: right shift the CDR proportional sum by regvalue. */
#define RX_ITR_DPLL_DLPF_REG1_KPROP2_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_DLPF_REG1_KPROP2_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG1_KPROP2_NT_MASK 0x001F0000
#define RX_ITR_DPLL_DLPF_REG1_KPROP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG1_KPROP2_NT_RESET_VALUE 0x00000006

/* FIELD: KPROP3_NT */
/* DESCRIPTION: */
/*   CDR Prop gain setting to apply when rx_mm_disable_ovr_ena_nt=1: right shift the CDR proportional sum by regvalue. */
#define RX_ITR_DPLL_DLPF_REG1_KPROP3_NT_OFFSET 0x00000015
#define RX_ITR_DPLL_DLPF_REG1_KPROP3_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG1_KPROP3_NT_MASK 0x03E00000
#define RX_ITR_DPLL_DLPF_REG1_KPROP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG1_KPROP3_NT_RESET_VALUE 0x00000006

/* FIELD: TED_BIAS3_NT */
/* DESCRIPTION: */
/*   CDR Bias setting to apply when rx_mm_disable_ovr_ena_nt=1: right shift the bias by regvalue amount. Note: 31 disables bias. */
#define RX_ITR_DPLL_DLPF_REG1_TED_BIAS3_NT_OFFSET 0x0000001A
#define RX_ITR_DPLL_DLPF_REG1_TED_BIAS3_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG1_TED_BIAS3_NT_MASK 0x7C000000
#define RX_ITR_DPLL_DLPF_REG1_TED_BIAS3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG1_TED_BIAS3_NT_RESET_VALUE 0x0000001F

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG2_ADDR 0x020003D4
#define RX_ITR_DPLL_DLPF_REG2_SIZE 32

/* FIELD: KINT1_NT */
/* DESCRIPTION: */
/*   CDR Int gain setting, acquisition mode: right shift the CDR integral gain by regvalue. */
#define RX_ITR_DPLL_DLPF_REG2_KINT1_NT_OFFSET 0x00000008
#define RX_ITR_DPLL_DLPF_REG2_KINT1_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG2_KINT1_NT_MASK 0x00001F00
#define RX_ITR_DPLL_DLPF_REG2_KINT1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG2_KINT1_NT_RESET_VALUE 0x00000010

/* FIELD: KINT2_NT */
/* DESCRIPTION: */
/*   CDR Int gain setting, lock mode: right shift the CDR integral gain by regvalue. */
#define RX_ITR_DPLL_DLPF_REG2_KINT2_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_DLPF_REG2_KINT2_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG2_KINT2_NT_MASK 0x001F0000
#define RX_ITR_DPLL_DLPF_REG2_KINT2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG2_KINT2_NT_RESET_VALUE 0x00000010

/* FIELD: KINT3_NT */
/* DESCRIPTION: */
/*   CDR Int gain setting to apply when rx_mm_disable_ovr_ena_nt=1: right shift the integral gain by regvalue. */
#define RX_ITR_DPLL_DLPF_REG2_KINT3_NT_OFFSET 0x00000015
#define RX_ITR_DPLL_DLPF_REG2_KINT3_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_DLPF_REG2_KINT3_NT_MASK 0x03E00000
#define RX_ITR_DPLL_DLPF_REG2_KINT3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG2_KINT3_NT_RESET_VALUE 0x00000010

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG3 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG3_ADDR 0x020003D8
#define RX_ITR_DPLL_DLPF_REG3_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable CDR Bypass mode */
#define RX_ITR_DPLL_DLPF_REG3_BYPASS_ENA_A_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG3_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG3_BYPASS_ENA_A_MASK 0x00000001
#define RX_ITR_DPLL_DLPF_REG3_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG3_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_ENABLE_A */
/* DESCRIPTION: */
/*   Deprecated  watchdog is controlled within freqdet block */
#define RX_ITR_DPLL_DLPF_REG3_WATCHDOG_ENABLE_A_OFFSET 0x00000001
#define RX_ITR_DPLL_DLPF_REG3_WATCHDOG_ENABLE_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG3_WATCHDOG_ENABLE_A_MASK 0x00000002
#define RX_ITR_DPLL_DLPF_REG3_WATCHDOG_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG3_WATCHDOG_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: LOS_HOLD_LOCK_ENA_A */
/* DESCRIPTION: */
/*   0 - on adapt_start deassertion and reassertion the CDR restarts from initial state, reacquiring CDR lock with no saved state. */
/*   1  saves state during adapt_start deasseration (LOS): holds lock state, maintaining CDR frequency. Adapt_start reassertion resumes CDR from where it left off. */
#define RX_ITR_DPLL_DLPF_REG3_LOS_HOLD_LOCK_ENA_A_OFFSET 0x00000002
#define RX_ITR_DPLL_DLPF_REG3_LOS_HOLD_LOCK_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG3_LOS_HOLD_LOCK_ENA_A_MASK 0x00000004
#define RX_ITR_DPLL_DLPF_REG3_LOS_HOLD_LOCK_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG3_LOS_HOLD_LOCK_ENA_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG4 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG4_ADDR 0x020003DC
#define RX_ITR_DPLL_DLPF_REG4_SIZE 32

/* FIELD: SATURATE_THRESH_NT */
/* DESCRIPTION: */
/*   Saturation: automatic CDR reacquire mechanism when frequency has drifted out of range. When DPLF integral exceeds +/-saturate_thresh, CDR will restart iff saturate_entry_init_a=1 (during acquistion) and iff saturate_exit_init_a=1 (during lock). */
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_THRESH_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_THRESH_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_THRESH_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_THRESH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_THRESH_NT_RESET_VALUE 0x0133333F

/* FIELD: FREEZE_ENA_A */
/* DESCRIPTION: */
/*   Put state machine in freeze state */
#define RX_ITR_DPLL_DLPF_REG4_FREEZE_ENA_A_OFFSET 0x0000001A
#define RX_ITR_DPLL_DLPF_REG4_FREEZE_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG4_FREEZE_ENA_A_MASK 0x04000000
#define RX_ITR_DPLL_DLPF_REG4_FREEZE_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG4_FREEZE_ENA_A_RESET_VALUE 0x00000000

/* FIELD: SATURATE_ENTRY_INIT_A */
/* DESCRIPTION: */
/*   0  staurate_thresh is ignored during Acquisition state: CDR will drift until saturating at upper or lower max value of CDR frequency. */
/*   1  if DLPF integral exceeds +/- saturate_thresh during Acquision mode, will reset the DLPF integral to reset to sat_init_nt and try to reacquire CDR. */
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_ENTRY_INIT_A_OFFSET 0x0000001B
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_ENTRY_INIT_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_ENTRY_INIT_A_MASK 0x08000000
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_ENTRY_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_ENTRY_INIT_A_RESET_VALUE 0x00000001

/* FIELD: SATURATE_EXIT_INIT_A */
/* DESCRIPTION: */
/*   0  staurate_thresh is ignored during Lock state: CDR will drift until saturating at upper or lower max value of CDR frequency. */
/*   1  if DLPF integral exceeds +/- saturate_thresh during Lock mode, will reset the DLPF integral to reset to sat_init_nt and try to reacquire CDR. */
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_EXIT_INIT_A_OFFSET 0x0000001C
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_EXIT_INIT_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_EXIT_INIT_A_MASK 0x10000000
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_EXIT_INIT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG4_SATURATE_EXIT_INIT_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG5 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG5_ADDR 0x020003E0
#define RX_ITR_DPLL_DLPF_REG5_SIZE 32

/* FIELD: INT_BYPASS_NT */
/* DESCRIPTION: */
/*   Bypass value for integral sum */
#define RX_ITR_DPLL_DLPF_REG5_INT_BYPASS_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG5_INT_BYPASS_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_DLPF_REG5_INT_BYPASS_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_DLPF_REG5_INT_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG5_INT_BYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG6 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG6_ADDR 0x020003E4
#define RX_ITR_DPLL_DLPF_REG6_SIZE 32

/* FIELD: INIT_NT */
/* DESCRIPTION: */
/*   Initial value for DLPF integral sum */
#define RX_ITR_DPLL_DLPF_REG6_INIT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG6_INIT_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_DLPF_REG6_INIT_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_DLPF_REG6_INIT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG6_INIT_NT_RESET_VALUE 0x03FFD8F0

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG7 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG7_ADDR 0x020003E8
#define RX_ITR_DPLL_DLPF_REG7_SIZE 32

/* FIELD: SAT_INIT_NT */
/* DESCRIPTION: */
/*   Resets DLPF integral to regvalue when saturation occurs */
#define RX_ITR_DPLL_DLPF_REG7_SAT_INIT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG7_SAT_INIT_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_DLPF_REG7_SAT_INIT_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_DLPF_REG7_SAT_INIT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG7_SAT_INIT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG8 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop filter. */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG8_ADDR 0x020003EC
#define RX_ITR_DPLL_DLPF_REG8_SIZE 32

/* FIELD: SATURATE_WAIT_THRESH_NT */
/* DESCRIPTION: */
/*   Settling time for PLL. When saturation occurs, before proceeding to reacquire, wait regvalue number of cycles, to allow the PLL to catch up to the sat_init_nt value. */
#define RX_ITR_DPLL_DLPF_REG8_SATURATE_WAIT_THRESH_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG8_SATURATE_WAIT_THRESH_NT_BITWIDTH 0x00000014
#define RX_ITR_DPLL_DLPF_REG8_SATURATE_WAIT_THRESH_NT_MASK 0x000FFFFF
#define RX_ITR_DPLL_DLPF_REG8_SATURATE_WAIT_THRESH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG8_SATURATE_WAIT_THRESH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_DLPF_REG9 */
/* DESCRIPTION: */
/*   Observability registers for the DBE CDR digital loop filter.  */
/* ------------------------------------- */
#define RX_ITR_DPLL_DLPF_REG9_ADDR 0x020003F0
#define RX_ITR_DPLL_DLPF_REG9_SIZE 32

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   capture the RO data */
#define RX_ITR_DPLL_DLPF_REG9_RO_CSR_CAPTURE_A_OFFSET 0x00000000
#define RX_ITR_DPLL_DLPF_REG9_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_DLPF_REG9_RO_CSR_CAPTURE_A_MASK 0x00000001
#define RX_ITR_DPLL_DLPF_REG9_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_DLPF_REG9_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_RDREG1 */
/* DESCRIPTION: */
/*   Status registers for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_RDREG1_ADDR 0x020003F4
#define RX_ITR_DPLL_FREQDET_RDREG1_SIZE 32

/* FIELD: ALMOST_LOCKED_NT */
/* DESCRIPTION: */
/*   Status: Almost Locked detected */
#define RX_ITR_DPLL_FREQDET_RDREG1_ALMOST_LOCKED_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_RDREG1_ALMOST_LOCKED_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_RDREG1_ALMOST_LOCKED_NT_MASK 0x00000001
#define RX_ITR_DPLL_FREQDET_RDREG1_ALMOST_LOCKED_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG1_ALMOST_LOCKED_NT_RESET_VALUE 0x00000000

/* FIELD: LOCKED_NT */
/* DESCRIPTION: */
/*   Status: Locked detected */
#define RX_ITR_DPLL_FREQDET_RDREG1_LOCKED_NT_OFFSET 0x00000001
#define RX_ITR_DPLL_FREQDET_RDREG1_LOCKED_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_RDREG1_LOCKED_NT_MASK 0x00000002
#define RX_ITR_DPLL_FREQDET_RDREG1_LOCKED_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG1_LOCKED_NT_RESET_VALUE 0x00000000

/* FIELD: PHASE_LOCKED_NT */
/* DESCRIPTION: */
/*   Status: Phase Locked  completed freqdet */
#define RX_ITR_DPLL_FREQDET_RDREG1_PHASE_LOCKED_NT_OFFSET 0x00000002
#define RX_ITR_DPLL_FREQDET_RDREG1_PHASE_LOCKED_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_RDREG1_PHASE_LOCKED_NT_MASK 0x00000004
#define RX_ITR_DPLL_FREQDET_RDREG1_PHASE_LOCKED_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG1_PHASE_LOCKED_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_RDREG2 */
/* DESCRIPTION: */
/*   Status registers for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_RDREG2_ADDR 0x020003F8
#define RX_ITR_DPLL_FREQDET_RDREG2_SIZE 32

/* FIELD: ESTIMATED_PPM_OUT_NT */
/* DESCRIPTION: */
/*   estimated ppm output */
#define RX_ITR_DPLL_FREQDET_RDREG2_ESTIMATED_PPM_OUT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_RDREG2_ESTIMATED_PPM_OUT_NT_BITWIDTH 0x0000000D
#define RX_ITR_DPLL_FREQDET_RDREG2_ESTIMATED_PPM_OUT_NT_MASK 0x00001FFF
#define RX_ITR_DPLL_FREQDET_RDREG2_ESTIMATED_PPM_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG2_ESTIMATED_PPM_OUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_RDREG3 */
/* DESCRIPTION: */
/*   Status registers for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_RDREG3_ADDR 0x020003FC
#define RX_ITR_DPLL_FREQDET_RDREG3_SIZE 32

/* FIELD: MAX_SPACING_NT */
/* DESCRIPTION: */
/*   maximum spacing */
#define RX_ITR_DPLL_FREQDET_RDREG3_MAX_SPACING_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_RDREG3_MAX_SPACING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_FREQDET_RDREG3_MAX_SPACING_NT_MASK 0x000001FF
#define RX_ITR_DPLL_FREQDET_RDREG3_MAX_SPACING_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG3_MAX_SPACING_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_RDREG4 */
/* DESCRIPTION: */
/*   Status registers for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_RDREG4_ADDR 0x02000400
#define RX_ITR_DPLL_FREQDET_RDREG4_SIZE 32

/* FIELD: LOCK_TIMING_NT */
/* DESCRIPTION: */
/*   lock timing */
#define RX_ITR_DPLL_FREQDET_RDREG4_LOCK_TIMING_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_RDREG4_LOCK_TIMING_NT_BITWIDTH 0x00000018
#define RX_ITR_DPLL_FREQDET_RDREG4_LOCK_TIMING_NT_MASK 0x00FFFFFF
#define RX_ITR_DPLL_FREQDET_RDREG4_LOCK_TIMING_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_ITR_DPLL_FREQDET_RDREG4_LOCK_TIMING_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG1 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG1_ADDR 0x02000404
#define RX_ITR_DPLL_FREQDET_REG1_SIZE 32

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_ITR_DPLL_FREQDET_REG1_ADAPT_START_A_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG1_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_ADAPT_START_A_MASK 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_ITR_DPLL_FREQDET_REG1_BYPASS_ENA_A_OFFSET 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_BYPASS_ENA_A_MASK 0x00000002
#define RX_ITR_DPLL_FREQDET_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: FREEZE_ENA_A */
/* DESCRIPTION: */
/*   freeze enable */
#define RX_ITR_DPLL_FREQDET_REG1_FREEZE_ENA_A_OFFSET 0x00000002
#define RX_ITR_DPLL_FREQDET_REG1_FREEZE_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_FREEZE_ENA_A_MASK 0x00000004
#define RX_ITR_DPLL_FREQDET_REG1_FREEZE_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_FREEZE_ENA_A_RESET_VALUE 0x00000000

/* FIELD: SETTLING_DELAY_NT */
/* DESCRIPTION: */
/*   Settling Wait: Defines the number of clock cycles for FreqDet frequency offset update settling before resuming next cycle of measurement. */
#define RX_ITR_DPLL_FREQDET_REG1_SETTLING_DELAY_NT_OFFSET 0x00000008
#define RX_ITR_DPLL_FREQDET_REG1_SETTLING_DELAY_NT_BITWIDTH 0x00000006
#define RX_ITR_DPLL_FREQDET_REG1_SETTLING_DELAY_NT_MASK 0x00003F00
#define RX_ITR_DPLL_FREQDET_REG1_SETTLING_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_SETTLING_DELAY_NT_RESET_VALUE 0x0000000F

/* FIELD: ENABLE_KPROP_SETTING_LOCKED_NT */
/* DESCRIPTION: */
/*   Enable CDR proportional path during Freqdet Phase Lock mode */
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_LOCKED_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_LOCKED_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_LOCKED_NT_MASK 0x00010000
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_LOCKED_NT_RESET_VALUE 0x00000001

/* FIELD: ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT */
/* DESCRIPTION: */
/*   Enable CDR proportional path during Freqdet Almost Locked mode */
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT_OFFSET 0x00000011
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT_MASK 0x00020000
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_SETTING_ALMOST_LOCKED_NT_RESET_VALUE 0x00000001

/* FIELD: ENABLE_KPROP_DURING_MEASUREMENT_NT */
/* DESCRIPTION: */
/*   Enable CDR proportional path during FreqDet Acquisition mode */
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_DURING_MEASUREMENT_NT_OFFSET 0x00000012
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_DURING_MEASUREMENT_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_DURING_MEASUREMENT_NT_MASK 0x00040000
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_DURING_MEASUREMENT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_ENABLE_KPROP_DURING_MEASUREMENT_NT_RESET_VALUE 0x00000001

/* FIELD: PROCESS2X_A */
/* DESCRIPTION: */
/*   enable processing 2x */
#define RX_ITR_DPLL_FREQDET_REG1_PROCESS2X_A_OFFSET 0x00000013
#define RX_ITR_DPLL_FREQDET_REG1_PROCESS2X_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_PROCESS2X_A_MASK 0x00080000
#define RX_ITR_DPLL_FREQDET_REG1_PROCESS2X_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_PROCESS2X_A_RESET_VALUE 0x00000000

/* FIELD: SINGLE_STEP_ENA_A */
/* DESCRIPTION: */
/*   Debug feature: enable single step */
#define RX_ITR_DPLL_FREQDET_REG1_SINGLE_STEP_ENA_A_OFFSET 0x00000014
#define RX_ITR_DPLL_FREQDET_REG1_SINGLE_STEP_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG1_SINGLE_STEP_ENA_A_MASK 0x00100000
#define RX_ITR_DPLL_FREQDET_REG1_SINGLE_STEP_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG1_SINGLE_STEP_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG2_ADDR 0x02000408
#define RX_ITR_DPLL_FREQDET_REG2_SIZE 32

/* FIELD: WATCHDOG_GLOBAL_TIMEOUT_NT */
/* DESCRIPTION: */
/*   Sets the CDR watchdog acquisition duration in regvalue clock cycles */
#define RX_ITR_DPLL_FREQDET_REG2_WATCHDOG_GLOBAL_TIMEOUT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG2_WATCHDOG_GLOBAL_TIMEOUT_NT_BITWIDTH 0x00000018
#define RX_ITR_DPLL_FREQDET_REG2_WATCHDOG_GLOBAL_TIMEOUT_NT_MASK 0x00FFFFFF
#define RX_ITR_DPLL_FREQDET_REG2_WATCHDOG_GLOBAL_TIMEOUT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG2_WATCHDOG_GLOBAL_TIMEOUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG3 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG3_ADDR 0x0200040C
#define RX_ITR_DPLL_FREQDET_REG3_SIZE 32

/* FIELD: WATCHDOG_TIMEOUT_NT */
/* DESCRIPTION: */
/*   Sets the CDR watchdog timeout duration from the moment freqdet has declared lock/freqlock detected in regvalue clock cycles */
#define RX_ITR_DPLL_FREQDET_REG3_WATCHDOG_TIMEOUT_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG3_WATCHDOG_TIMEOUT_NT_BITWIDTH 0x00000018
#define RX_ITR_DPLL_FREQDET_REG3_WATCHDOG_TIMEOUT_NT_MASK 0x00FFFFFF
#define RX_ITR_DPLL_FREQDET_REG3_WATCHDOG_TIMEOUT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG3_WATCHDOG_TIMEOUT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG4 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG4_ADDR 0x02000410
#define RX_ITR_DPLL_FREQDET_REG4_SIZE 32

/* FIELD: LOCKED_SPACING_NT */
/* DESCRIPTION: */
/*   Defines the estimated PPM spacing which is considered Locked. */
#define RX_ITR_DPLL_FREQDET_REG4_LOCKED_SPACING_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG4_LOCKED_SPACING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_FREQDET_REG4_LOCKED_SPACING_NT_MASK 0x000001FF
#define RX_ITR_DPLL_FREQDET_REG4_LOCKED_SPACING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG4_LOCKED_SPACING_NT_RESET_VALUE 0x00000000

/* FIELD: ALMOST_LOCKED_SPACING_NT */
/* DESCRIPTION: */
/*   Defines the estimated PPM spacing which is considered Almost Locked. */
#define RX_ITR_DPLL_FREQDET_REG4_ALMOST_LOCKED_SPACING_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG4_ALMOST_LOCKED_SPACING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_FREQDET_REG4_ALMOST_LOCKED_SPACING_NT_MASK 0x01FF0000
#define RX_ITR_DPLL_FREQDET_REG4_ALMOST_LOCKED_SPACING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG4_ALMOST_LOCKED_SPACING_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG5 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG5_ADDR 0x02000414
#define RX_ITR_DPLL_FREQDET_REG5_SIZE 32

/* FIELD: TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT */
/* DESCRIPTION: */
/*   Defines the number of peaks required in freqdet signature during Almost Locked phase before making an estimate of PPM offset. The more peaks requried, the more robust the estimate. */
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT_MASK 0x000001FF
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_ALMOSTLOCKED_NT_RESET_VALUE 0x000001FF

/* FIELD: TARGET_NUM_PEAK_SPACING_NT */
/* DESCRIPTION: */
/*   Defines the number of peaks required in freqdet signature during Measurement phase before making an estimate of PPM offset. The more peaks requried, the more robust the estimate. */
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_NT_MASK 0x01FF0000
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG5_TARGET_NUM_PEAK_SPACING_NT_RESET_VALUE 0x000001FF

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG6 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG6_ADDR 0x02000418
#define RX_ITR_DPLL_FREQDET_REG6_SIZE 32

/* FIELD: VALLEY_THRESHOLD_NT */
/* DESCRIPTION: */
/*   If freqdet_signature less-than-or-equal valley_threshold_nt, a Valley is detected within freqdet pattern analysis */
#define RX_ITR_DPLL_FREQDET_REG6_VALLEY_THRESHOLD_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG6_VALLEY_THRESHOLD_NT_BITWIDTH 0x00000008
#define RX_ITR_DPLL_FREQDET_REG6_VALLEY_THRESHOLD_NT_MASK 0x000000FF
#define RX_ITR_DPLL_FREQDET_REG6_VALLEY_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG6_VALLEY_THRESHOLD_NT_RESET_VALUE 0x00000000

/* FIELD: PEAK_THRESHOLD_NT */
/* DESCRIPTION: */
/*   If freqdet_signature greater-than-or-equal valley_threshold_nt, a Peak is detected within freqdet pattern analysis */
#define RX_ITR_DPLL_FREQDET_REG6_PEAK_THRESHOLD_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG6_PEAK_THRESHOLD_NT_BITWIDTH 0x00000008
#define RX_ITR_DPLL_FREQDET_REG6_PEAK_THRESHOLD_NT_MASK 0x00FF0000
#define RX_ITR_DPLL_FREQDET_REG6_PEAK_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG6_PEAK_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG7 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG7_ADDR 0x0200041C
#define RX_ITR_DPLL_FREQDET_REG7_SIZE 32

/* FIELD: DLPF_INT_OFFSET_MU_NT */
/* DESCRIPTION: */
/*   Applies a scaling factor=regvalue/512 as a confidence level before correcting for the estimated PPM offset during Acquisition phase */
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_NT_BITWIDTH 0x00000006
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_NT_MASK 0x0000003F
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT */
/* DESCRIPTION: */
/*   Applies a scaling factor=regvalue/512 as a confidence level before correcting for the estimated PPM offset during Almost Lock phase */
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT_BITWIDTH 0x00000006
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT_MASK 0x003F0000
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG7_DLPF_INT_OFFSET_MU_ALMOST_LOCKED_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG8 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG8_ADDR 0x02000420
#define RX_ITR_DPLL_FREQDET_REG8_SIZE 32

/* FIELD: DLPF_OFFSET_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   dlpf int offset bypass value */
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_VALUE_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_VALUE_NT_BITWIDTH 0x0000001A
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_VALUE_NT_MASK 0x03FFFFFF
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_OFFSET_BYPASS_ENA_A */
/* DESCRIPTION: */
/*   dlpf int offset bypass enable */
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_ENA_A_OFFSET 0x0000001A
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_ENA_A_MASK 0x04000000
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG8_DLPF_OFFSET_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: TEDO_BYPASS_ENA_A */
/* DESCRIPTION: */
/*   tedo bypass enable */
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_ENA_A_OFFSET 0x0000001B
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_ENA_A_MASK 0x08000000
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: TEDO_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   tedo bypass value */
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_VALUE_NT_OFFSET 0x0000001C
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_VALUE_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_VALUE_NT_MASK 0x10000000
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG8_TEDO_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_FREQDET_REG9 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop freq detector. */
/* ------------------------------------- */
#define RX_ITR_DPLL_FREQDET_REG9_ADDR 0x02000424
#define RX_ITR_DPLL_FREQDET_REG9_SIZE 32

/* FIELD: UNIT_PPM_NT */
/* DESCRIPTION: */
/*   unit ppm setting */
#define RX_ITR_DPLL_FREQDET_REG9_UNIT_PPM_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_FREQDET_REG9_UNIT_PPM_NT_BITWIDTH 0x00000008
#define RX_ITR_DPLL_FREQDET_REG9_UNIT_PPM_NT_MASK 0x000000FF
#define RX_ITR_DPLL_FREQDET_REG9_UNIT_PPM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG9_UNIT_PPM_NT_RESET_VALUE 0x00000000

/* FIELD: NUMSYMBOLS_NT */
/* DESCRIPTION: */
/*   Defines the number of UI cycles to compute the freqdet signature  */
#define RX_ITR_DPLL_FREQDET_REG9_NUMSYMBOLS_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_FREQDET_REG9_NUMSYMBOLS_NT_BITWIDTH 0x00000008
#define RX_ITR_DPLL_FREQDET_REG9_NUMSYMBOLS_NT_MASK 0x00FF0000
#define RX_ITR_DPLL_FREQDET_REG9_NUMSYMBOLS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_FREQDET_REG9_NUMSYMBOLS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_LOWLATENCY_REG1 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop low latency prop. */
/* ------------------------------------- */
#define RX_ITR_DPLL_LOWLATENCY_REG1_ADDR 0x02000428
#define RX_ITR_DPLL_LOWLATENCY_REG1_SIZE 32

/* FIELD: ENABLE_A */
/* DESCRIPTION: */
/*   enable lowlatency CDR loop */
#define RX_ITR_DPLL_LOWLATENCY_REG1_ENABLE_A_OFFSET 0x00000000
#define RX_ITR_DPLL_LOWLATENCY_REG1_ENABLE_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_ENABLE_A_MASK 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Configure which fixed branches to use for low latency CDR proportional path. */
/*   0=branches 4-7 */
/*   1=branches 12-15 */
/*   2=branches 28-31 */
#define RX_ITR_DPLL_LOWLATENCY_REG1_BRANCH_SEL_NT_OFFSET 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_BRANCH_SEL_NT_BITWIDTH 0x00000002
#define RX_ITR_DPLL_LOWLATENCY_REG1_BRANCH_SEL_NT_MASK 0x00000006
#define RX_ITR_DPLL_LOWLATENCY_REG1_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: KTED_A */
/* DESCRIPTION: */
/*   0=default loop polarity, 1=invert loop polarity */
#define RX_ITR_DPLL_LOWLATENCY_REG1_KTED_A_OFFSET 0x00000003
#define RX_ITR_DPLL_LOWLATENCY_REG1_KTED_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_KTED_A_MASK 0x00000008
#define RX_ITR_DPLL_LOWLATENCY_REG1_KTED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_KTED_A_RESET_VALUE 0x00000000

/* FIELD: FINEGAIN_NT */
/* DESCRIPTION: */
/*   CDR Prop fine gain: 000b=1.0x, 001b=1.125x, ..., 111b=1.875x */
#define RX_ITR_DPLL_LOWLATENCY_REG1_FINEGAIN_NT_OFFSET 0x00000004
#define RX_ITR_DPLL_LOWLATENCY_REG1_FINEGAIN_NT_BITWIDTH 0x00000004
#define RX_ITR_DPLL_LOWLATENCY_REG1_FINEGAIN_NT_MASK 0x000000F0
#define RX_ITR_DPLL_LOWLATENCY_REG1_FINEGAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_FINEGAIN_NT_RESET_VALUE 0x00000002

/* FIELD: KP_MU_NT */
/* DESCRIPTION: */
/*   CDR Prop coarse gain: right shift the CDR proportional gain by regvalue. */
#define RX_ITR_DPLL_LOWLATENCY_REG1_KP_MU_NT_OFFSET 0x00000008
#define RX_ITR_DPLL_LOWLATENCY_REG1_KP_MU_NT_BITWIDTH 0x00000004
#define RX_ITR_DPLL_LOWLATENCY_REG1_KP_MU_NT_MASK 0x00000F00
#define RX_ITR_DPLL_LOWLATENCY_REG1_KP_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_KP_MU_NT_RESET_VALUE 0x00000000

/* FIELD: IGNORE_FSM_STATE_NT */
/* DESCRIPTION: */
/*   Debug feature: ignore_fsm_state runs lowlatency in both acquisition and lock states, typically only runs during lock state */
#define RX_ITR_DPLL_LOWLATENCY_REG1_IGNORE_FSM_STATE_NT_OFFSET 0x0000000C
#define RX_ITR_DPLL_LOWLATENCY_REG1_IGNORE_FSM_STATE_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_IGNORE_FSM_STATE_NT_MASK 0x00001000
#define RX_ITR_DPLL_LOWLATENCY_REG1_IGNORE_FSM_STATE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_IGNORE_FSM_STATE_NT_RESET_VALUE 0x00000000

/* FIELD: MUX_BYPASS_ENA_A */
/* DESCRIPTION: */
/*   mux bypass enable */
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_ENA_A_OFFSET 0x0000000D
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_ENA_A_MASK 0x00002000
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: MUX_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   mux bypass value */
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_VALUE_NT_OFFSET 0x0000000E
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_VALUE_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_VALUE_NT_MASK 0x00004000
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG1_MUX_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_LOWLATENCY_REG2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR digital loop low latency prop. */
/* ------------------------------------- */
#define RX_ITR_DPLL_LOWLATENCY_REG2_ADDR 0x0200042C
#define RX_ITR_DPLL_LOWLATENCY_REG2_SIZE 32

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   specifies the eh threshold used for lowlatency demapping */
#define RX_ITR_DPLL_LOWLATENCY_REG2_EH_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_LOWLATENCY_REG2_EH_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_LOWLATENCY_REG2_EH_NT_MASK 0x000001FF
#define RX_ITR_DPLL_LOWLATENCY_REG2_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG2_EH_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   specifies the ez threshold used for lowlatency demapping */
#define RX_ITR_DPLL_LOWLATENCY_REG2_EZ_NT_OFFSET 0x00000009
#define RX_ITR_DPLL_LOWLATENCY_REG2_EZ_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_LOWLATENCY_REG2_EZ_NT_MASK 0x0003FE00
#define RX_ITR_DPLL_LOWLATENCY_REG2_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG2_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   specifies the el threshold used for lowlatency demapping */
#define RX_ITR_DPLL_LOWLATENCY_REG2_EL_NT_OFFSET 0x00000012
#define RX_ITR_DPLL_LOWLATENCY_REG2_EL_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_LOWLATENCY_REG2_EL_NT_MASK 0x07FC0000
#define RX_ITR_DPLL_LOWLATENCY_REG2_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_LOWLATENCY_REG2_EL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_ADDR 0x02000430
#define RX_ITR_DPLL_TED_SIZE 32

/* FIELD: FREEZE_EN_A */
/* DESCRIPTION: */
/*   Freeze enable signal.  When asserted will put timing state machine into FREEZE state. */
#define RX_ITR_DPLL_TED_FREEZE_EN_A_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_FREEZE_EN_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_TED_FREEZE_EN_A_MASK 0x00000001
#define RX_ITR_DPLL_TED_FREEZE_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_FREEZE_EN_A_RESET_VALUE 0x00000000

/* FIELD: BIAS1_NT */
/* DESCRIPTION: */
/*   Determining how much to right shift the ted bias sum. */
#define RX_ITR_DPLL_TED_BIAS1_NT_OFFSET 0x00000001
#define RX_ITR_DPLL_TED_BIAS1_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_TED_BIAS1_NT_MASK 0x0000003E
#define RX_ITR_DPLL_TED_BIAS1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_BIAS1_NT_RESET_VALUE 0x0000000B

/* FIELD: BIAS2_NT */
/* DESCRIPTION: */
/*   Determining how much to right shift the ted bias sum when locked. */
#define RX_ITR_DPLL_TED_BIAS2_NT_OFFSET 0x00000008
#define RX_ITR_DPLL_TED_BIAS2_NT_BITWIDTH 0x00000005
#define RX_ITR_DPLL_TED_BIAS2_NT_MASK 0x00001F00
#define RX_ITR_DPLL_TED_BIAS2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_BIAS2_NT_RESET_VALUE 0x0000001F

/* FIELD: BIAS1_DIR_NT */
/* DESCRIPTION: */
/*   Determine direction in which to bias MM during acquisition. 0=no inversion 1=invert */
#define RX_ITR_DPLL_TED_BIAS1_DIR_NT_OFFSET 0x0000000D
#define RX_ITR_DPLL_TED_BIAS1_DIR_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_TED_BIAS1_DIR_NT_MASK 0x00002000
#define RX_ITR_DPLL_TED_BIAS1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_BIAS1_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: BIAS2_DIR_NT */
/* DESCRIPTION: */
/*   Determine direction in which to bias MM during lock. 0=no inversion, 1=invert */
#define RX_ITR_DPLL_TED_BIAS2_DIR_NT_OFFSET 0x0000000E
#define RX_ITR_DPLL_TED_BIAS2_DIR_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_TED_BIAS2_DIR_NT_MASK 0x00004000
#define RX_ITR_DPLL_TED_BIAS2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_BIAS2_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: KTED_SHIFT_NT */
/* DESCRIPTION: */
/*   Inverts CDR loop direction. 0=no inversion, 1=invert */
#define RX_ITR_DPLL_TED_KTED_SHIFT_NT_OFFSET 0x0000000F
#define RX_ITR_DPLL_TED_KTED_SHIFT_NT_BITWIDTH 0x00000001
#define RX_ITR_DPLL_TED_KTED_SHIFT_NT_MASK 0x00008000
#define RX_ITR_DPLL_TED_KTED_SHIFT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_KTED_SHIFT_NT_RESET_VALUE 0x00000000

/* FIELD: KTED1_NT */
/* DESCRIPTION: */
/*   Determining how much to right shift the final ted sum in class A. Note: 31=off */
#define RX_ITR_DPLL_TED_KTED1_NT_OFFSET 0x00000010
#define RX_ITR_DPLL_TED_KTED1_NT_BITWIDTH 0x00000002
#define RX_ITR_DPLL_TED_KTED1_NT_MASK 0x00030000
#define RX_ITR_DPLL_TED_KTED1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_KTED1_NT_RESET_VALUE 0x00000000

/* FIELD: KTED2_NT */
/* DESCRIPTION: */
/*   Determining how much to right shift the final ted sum in class B. Note: 31=off (deprecated) */
#define RX_ITR_DPLL_TED_KTED2_NT_OFFSET 0x00000012
#define RX_ITR_DPLL_TED_KTED2_NT_BITWIDTH 0x00000002
#define RX_ITR_DPLL_TED_KTED2_NT_MASK 0x000C0000
#define RX_ITR_DPLL_TED_KTED2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_KTED2_NT_RESET_VALUE 0x00000000

/* FIELD: OFFSET_ENABLE_A */
/* DESCRIPTION: */
/*   Trim offset enable  uses the EZ slicer value to correct residual DC Offset error */
#define RX_ITR_DPLL_TED_OFFSET_ENABLE_A_OFFSET 0x00000014
#define RX_ITR_DPLL_TED_OFFSET_ENABLE_A_BITWIDTH 0x00000001
#define RX_ITR_DPLL_TED_OFFSET_ENABLE_A_MASK 0x00100000
#define RX_ITR_DPLL_TED_OFFSET_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_OFFSET_ENABLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG2_ADDR 0x02000434
#define RX_ITR_DPLL_TED_REG2_SIZE 32

/* FIELD: PHASE_OFFSETA_RISING_NT */
/* DESCRIPTION: */
/*   Introduces CDR Timing Error Detector Phase offset for classA mode */
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_RISING_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_RISING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_RISING_NT_MASK 0x000001FF
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_RISING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_RISING_NT_RESET_VALUE 0x00000000

/* FIELD: PHASE_OFFSETA_FALLING_NT */
/* DESCRIPTION: */
/*   Introduces CDR Timing Error Detector Phase offset for classA mode */
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_FALLING_NT_OFFSET 0x00000009
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_FALLING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_FALLING_NT_MASK 0x0003FE00
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_FALLING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG2_PHASE_OFFSETA_FALLING_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG3 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG3_ADDR 0x02000438
#define RX_ITR_DPLL_TED_REG3_SIZE 32

/* FIELD: PHASE_OFFSETB_RISING_NT */
/* DESCRIPTION: */
/*   deprecated */
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_RISING_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_RISING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_RISING_NT_MASK 0x000001FF
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_RISING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_RISING_NT_RESET_VALUE 0x00000000

/* FIELD: PHASE_OFFSETB_FALLING_NT */
/* DESCRIPTION: */
/*   deprecated */
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_FALLING_NT_OFFSET 0x00000009
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_FALLING_NT_BITWIDTH 0x00000009
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_FALLING_NT_MASK 0x0003FE00
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_FALLING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG3_PHASE_OFFSETB_FALLING_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG4 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG4_ADDR 0x0200043C
#define RX_ITR_DPLL_TED_REG4_SIZE 32

/* FIELD: MMBIAS_DISABLE1_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_ovr_ena_nt is set to 1. */
/*   0 - CDR bias based on active_branches */
/*   1  disable CDR bias branches */
/*   bit0 - branch0    ... bit31  branch31 */
#define RX_ITR_DPLL_TED_REG4_MMBIAS_DISABLE1_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG4_MMBIAS_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_ITR_DPLL_TED_REG4_MMBIAS_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_ITR_DPLL_TED_REG4_MMBIAS_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG4_MMBIAS_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG5 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG5_ADDR 0x02000440
#define RX_ITR_DPLL_TED_REG5_SIZE 32

/* FIELD: MMBIAS_DISABLE2_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_ovr_ena_nt is set to 1. */
/*   0  CDR bias based on active branches */
/*   1  disable CDR bias branches */
/*   bit0 - branch32    ... bit15  branch63 */
#define RX_ITR_DPLL_TED_REG5_MMBIAS_DISABLE2_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG5_MMBIAS_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_ITR_DPLL_TED_REG5_MMBIAS_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_ITR_DPLL_TED_REG5_MMBIAS_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG5_MMBIAS_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG6 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG6_ADDR 0x02000444
#define RX_ITR_DPLL_TED_REG6_SIZE 32

/* FIELD: INIT_MMBIAS_DISABLE1_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_init_ovr_ena_nt is set to 1. */
/*   0  CDR bias based on active_branches */
/*   1  disable CDR bias branches */
/*   bit0 - branch0    ... bit31  branch31 */
#define RX_ITR_DPLL_TED_REG6_INIT_MMBIAS_DISABLE1_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG6_INIT_MMBIAS_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_ITR_DPLL_TED_REG6_INIT_MMBIAS_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_ITR_DPLL_TED_REG6_INIT_MMBIAS_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG6_INIT_MMBIAS_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_ITR_DPLL_TED_REG7 */
/* DESCRIPTION: */
/*   Configuration and overrides for the DBE CDR Timing Error Detector (TED). */
/* ------------------------------------- */
#define RX_ITR_DPLL_TED_REG7_ADDR 0x02000448
#define RX_ITR_DPLL_TED_REG7_SIZE 32

/* FIELD: INIT_MMBIAS_DISABLE2_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_init_ovr_ena_nt is set to 1. */
/*   0  CDR bias based on active_branches */
/*   1  disable CDR bias branches */
/*   bit0 - branch32    ... bit15  branch63 */
#define RX_ITR_DPLL_TED_REG7_INIT_MMBIAS_DISABLE2_NT_OFFSET 0x00000000
#define RX_ITR_DPLL_TED_REG7_INIT_MMBIAS_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_ITR_DPLL_TED_REG7_INIT_MMBIAS_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_ITR_DPLL_TED_REG7_INIT_MMBIAS_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_ITR_DPLL_TED_REG7_INIT_MMBIAS_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_OVRD_ENABLE */
/* DESCRIPTION: */
/*   Override enables for interface ports */
/* ------------------------------------- */
#define RX_OVRD_ENABLE_ADDR 0x0200044C
#define RX_OVRD_ENABLE_SIZE 32

/* FIELD: PCIE_MARGIN_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_pcie_rxmargin_*] */
#define RX_OVRD_ENABLE_PCIE_MARGIN_A_OFFSET 0x00000000
#define RX_OVRD_ENABLE_PCIE_MARGIN_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_PCIE_MARGIN_A_MASK 0x00000001
#define RX_OVRD_ENABLE_PCIE_MARGIN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_PCIE_MARGIN_A_RESET_VALUE 0x00000001

/* FIELD: RST_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[irst_rx_ba] */
#define RX_OVRD_ENABLE_RST_A_OFFSET 0x00000001
#define RX_OVRD_ENABLE_RST_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_RST_A_MASK 0x00000002
#define RX_OVRD_ENABLE_RST_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_RST_A_RESET_VALUE 0x00000000

/* FIELD: RX_BYPASS_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_bypass_ena_a] */
#define RX_OVRD_ENABLE_RX_BYPASS_A_OFFSET 0x00000002
#define RX_OVRD_ENABLE_RX_BYPASS_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_RX_BYPASS_A_MASK 0x00000004
#define RX_OVRD_ENABLE_RX_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_RX_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: RX_DISABLE_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_disable_a] */
#define RX_OVRD_ENABLE_RX_DISABLE_A_OFFSET 0x00000003
#define RX_OVRD_ENABLE_RX_DISABLE_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_RX_DISABLE_A_MASK 0x00000008
#define RX_OVRD_ENABLE_RX_DISABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_RX_DISABLE_A_RESET_VALUE 0x00000001

/* FIELD: RX_TERM_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_term_a] */
#define RX_OVRD_ENABLE_RX_TERM_A_OFFSET 0x00000004
#define RX_OVRD_ENABLE_RX_TERM_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_RX_TERM_A_MASK 0x00000010
#define RX_OVRD_ENABLE_RX_TERM_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_RX_TERM_A_RESET_VALUE 0x00000000

/* FIELD: STATE_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_state*] and rx_ovrd_reg[ictl_rx_training_mode_a] */
#define RX_OVRD_ENABLE_STATE_A_OFFSET 0x00000005
#define RX_OVRD_ENABLE_STATE_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_STATE_A_MASK 0x00000020
#define RX_OVRD_ENABLE_STATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_STATE_A_RESET_VALUE 0x00000000

/* FIELD: PCIE_ASYNC_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_pcie_rx_sigdet_disable_a] */
#define RX_OVRD_ENABLE_PCIE_ASYNC_A_OFFSET 0x00000006
#define RX_OVRD_ENABLE_PCIE_ASYNC_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_PCIE_ASYNC_A_MASK 0x00000040
#define RX_OVRD_ENABLE_PCIE_ASYNC_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_PCIE_ASYNC_A_RESET_VALUE 0x00000001

/* FIELD: GRAY_PLUSD_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_plusd_ena_a] and rx_ovrd_reg[ictl_rx_gray_ena_a] */
#define RX_OVRD_ENABLE_GRAY_PLUSD_A_OFFSET 0x00000007
#define RX_OVRD_ENABLE_GRAY_PLUSD_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_GRAY_PLUSD_A_MASK 0x00000080
#define RX_OVRD_ENABLE_GRAY_PLUSD_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_GRAY_PLUSD_A_RESET_VALUE 0x00000000

/* FIELD: LINKEVAL_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_linkeval*] */
#define RX_OVRD_ENABLE_LINKEVAL_A_OFFSET 0x00000008
#define RX_OVRD_ENABLE_LINKEVAL_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_LINKEVAL_A_MASK 0x00000100
#define RX_OVRD_ENABLE_LINKEVAL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_LINKEVAL_A_RESET_VALUE 0x00000000

/* FIELD: DME_ENA_A */
/* DESCRIPTION: */
/*   Enable for rx_ovrd_reg[ictl_rx_dme_ena_a] */
#define RX_OVRD_ENABLE_DME_ENA_A_OFFSET 0x00000009
#define RX_OVRD_ENABLE_DME_ENA_A_BITWIDTH 0x00000001
#define RX_OVRD_ENABLE_DME_ENA_A_MASK 0x00000200
#define RX_OVRD_ENABLE_DME_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_ENABLE_DME_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_OVRD_REG1 */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define RX_OVRD_REG1_ADDR 0x02000450
#define RX_OVRD_REG1_SIZE 32

/* FIELD: IRST_RX_BA */
/* DESCRIPTION: */
/*   Register override of irst_rx_ba */
#define RX_OVRD_REG1_IRST_RX_BA_OFFSET 0x00000000
#define RX_OVRD_REG1_IRST_RX_BA_BITWIDTH 0x00000001
#define RX_OVRD_REG1_IRST_RX_BA_MASK 0x00000001
#define RX_OVRD_REG1_IRST_RX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_IRST_RX_BA_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_STATE_POWER_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_state_power */
#define RX_OVRD_REG1_ICTL_RX_STATE_POWER_A_OFFSET 0x00000001
#define RX_OVRD_REG1_ICTL_RX_STATE_POWER_A_BITWIDTH 0x00000003
#define RX_OVRD_REG1_ICTL_RX_STATE_POWER_A_MASK 0x0000000E
#define RX_OVRD_REG1_ICTL_RX_STATE_POWER_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_STATE_POWER_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_STATE_RATE_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_state_rate */
#define RX_OVRD_REG1_ICTL_RX_STATE_RATE_A_OFFSET 0x00000004
#define RX_OVRD_REG1_ICTL_RX_STATE_RATE_A_BITWIDTH 0x00000004
#define RX_OVRD_REG1_ICTL_RX_STATE_RATE_A_MASK 0x000000F0
#define RX_OVRD_REG1_ICTL_RX_STATE_RATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_STATE_RATE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_STATE_WIDTH_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_state_width */
#define RX_OVRD_REG1_ICTL_RX_STATE_WIDTH_A_OFFSET 0x00000008
#define RX_OVRD_REG1_ICTL_RX_STATE_WIDTH_A_BITWIDTH 0x00000004
#define RX_OVRD_REG1_ICTL_RX_STATE_WIDTH_A_MASK 0x00000F00
#define RX_OVRD_REG1_ICTL_RX_STATE_WIDTH_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_STATE_WIDTH_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_TRAINING_MODE_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_training_mode_a */
#define RX_OVRD_REG1_ICTL_RX_TRAINING_MODE_A_OFFSET 0x0000000C
#define RX_OVRD_REG1_ICTL_RX_TRAINING_MODE_A_BITWIDTH 0x00000003
#define RX_OVRD_REG1_ICTL_RX_TRAINING_MODE_A_MASK 0x00007000
#define RX_OVRD_REG1_ICTL_RX_TRAINING_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_TRAINING_MODE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_LINKEVAL_TYPE_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_linkeval_type (post LT block) */
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_TYPE_A_OFFSET 0x00000010
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_TYPE_A_BITWIDTH 0x00000004
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_TYPE_A_MASK 0x000F0000
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_TYPE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_TYPE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_LINKEVAL_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_linkeval_req (post LT block) */
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_REQ_A_OFFSET 0x00000014
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_REQ_A_BITWIDTH 0x00000001
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_REQ_A_MASK 0x00100000
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_LINKEVAL_REQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_RX_MARGIN_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_rx_margin_req_a */
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_REQ_A_OFFSET 0x00000015
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_REQ_A_BITWIDTH 0x00000001
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_REQ_A_MASK 0x00200000
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_REQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_RX_MARGIN_OFFSET_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_rx_margin_offset_a */
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_OFFSET_A_OFFSET 0x00000016
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_OFFSET_A_BITWIDTH 0x00000007
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_OFFSET_A_MASK 0x1FC00000
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_OFFSET_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_OFFSET_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_RX_MARGIN_TYPE_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_rx_margin_type */
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_TYPE_A_OFFSET 0x0000001D
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_TYPE_A_BITWIDTH 0x00000001
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_TYPE_A_MASK 0x20000000
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_TYPE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_TYPE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_RX_MARGIN_DIR_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_rx_margin_dir_a */
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_DIR_A_OFFSET 0x0000001E
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_DIR_A_BITWIDTH 0x00000001
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_DIR_A_MASK 0x40000000
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_DIR_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_PCIE_RX_MARGIN_DIR_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable for SERDES RX bypass mode.  */
#define RX_OVRD_REG1_ICTL_RX_BYPASS_ENA_A_OFFSET 0x0000001F
#define RX_OVRD_REG1_ICTL_RX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_OVRD_REG1_ICTL_RX_BYPASS_ENA_A_MASK 0x80000000
#define RX_OVRD_REG1_ICTL_RX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG1_ICTL_RX_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_OVRD_REG2 */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define RX_OVRD_REG2_ADDR 0x02000454
#define RX_OVRD_REG2_SIZE 32

/* FIELD: ICTL_RX_TERM_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_term */
#define RX_OVRD_REG2_ICTL_RX_TERM_A_OFFSET 0x00000000
#define RX_OVRD_REG2_ICTL_RX_TERM_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_RX_TERM_A_MASK 0x00000001
#define RX_OVRD_REG2_ICTL_RX_TERM_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_RX_TERM_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_DME_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_dme_ena (post-LT block) */
#define RX_OVRD_REG2_ICTL_RX_DME_ENA_A_OFFSET 0x00000001
#define RX_OVRD_REG2_ICTL_RX_DME_ENA_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_RX_DME_ENA_A_MASK 0x00000002
#define RX_OVRD_REG2_ICTL_RX_DME_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_RX_DME_ENA_A_RESET_VALUE 0x00000001

/* FIELD: ICTL_RX_DISABLE_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_disable_a */
#define RX_OVRD_REG2_ICTL_RX_DISABLE_A_OFFSET 0x00000002
#define RX_OVRD_REG2_ICTL_RX_DISABLE_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_RX_DISABLE_A_MASK 0x00000004
#define RX_OVRD_REG2_ICTL_RX_DISABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_RX_DISABLE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_RX_SIGDET_DISABLE_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_rx_sigdet_disable_a */
#define RX_OVRD_REG2_ICTL_PCIE_RX_SIGDET_DISABLE_A_OFFSET 0x00000003
#define RX_OVRD_REG2_ICTL_PCIE_RX_SIGDET_DISABLE_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_PCIE_RX_SIGDET_DISABLE_A_MASK 0x00000008
#define RX_OVRD_REG2_ICTL_PCIE_RX_SIGDET_DISABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_PCIE_RX_SIGDET_DISABLE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_GRAY_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_gray_ena_a (post LT block) */
#define RX_OVRD_REG2_ICTL_RX_GRAY_ENA_A_OFFSET 0x00000004
#define RX_OVRD_REG2_ICTL_RX_GRAY_ENA_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_RX_GRAY_ENA_A_MASK 0x00000010
#define RX_OVRD_REG2_ICTL_RX_GRAY_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_RX_GRAY_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_PLUSD_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_rx_plusd_ena_a (post LT block) */
#define RX_OVRD_REG2_ICTL_RX_PLUSD_ENA_A_OFFSET 0x00000005
#define RX_OVRD_REG2_ICTL_RX_PLUSD_ENA_A_BITWIDTH 0x00000001
#define RX_OVRD_REG2_ICTL_RX_PLUSD_ENA_A_MASK 0x00000020
#define RX_OVRD_REG2_ICTL_RX_PLUSD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_OVRD_REG2_ICTL_RX_PLUSD_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_RDREG */
/* DESCRIPTION: */
/*   Configuration / observability of duty cycle adaptation block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_RDREG_ADDR 0x02000458
#define RX_PHASE_ADAPT_RDREG_SIZE 32

/* FIELD: D90_DCD_A */
/* DESCRIPTION: */
/*   D90 calibrated value */
#define RX_PHASE_ADAPT_RDREG_D90_DCD_A_OFFSET 0x00000000
#define RX_PHASE_ADAPT_RDREG_D90_DCD_A_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_RDREG_D90_DCD_A_MASK 0x0000007F
#define RX_PHASE_ADAPT_RDREG_D90_DCD_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PHASE_ADAPT_RDREG_D90_DCD_A_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_A */
/* DESCRIPTION: */
/*   D0 calibrated value */
#define RX_PHASE_ADAPT_RDREG_D0_DCD_A_OFFSET 0x00000007
#define RX_PHASE_ADAPT_RDREG_D0_DCD_A_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_RDREG_D0_DCD_A_MASK 0x00003F80
#define RX_PHASE_ADAPT_RDREG_D0_DCD_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PHASE_ADAPT_RDREG_D0_DCD_A_RESET_VALUE 0x00000000

/* FIELD: IQ_A */
/* DESCRIPTION: */
/*   IQ calibrated value */
#define RX_PHASE_ADAPT_RDREG_IQ_A_OFFSET 0x0000000E
#define RX_PHASE_ADAPT_RDREG_IQ_A_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_RDREG_IQ_A_MASK 0x001FC000
#define RX_PHASE_ADAPT_RDREG_IQ_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PHASE_ADAPT_RDREG_IQ_A_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   Calibration ack signal */
#define RX_PHASE_ADAPT_RDREG_ACK_OFFSET 0x00000015
#define RX_PHASE_ADAPT_RDREG_ACK_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_RDREG_ACK_MASK 0x00200000
#define RX_PHASE_ADAPT_RDREG_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PHASE_ADAPT_RDREG_ACK_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_ERROR_NT */
/* DESCRIPTION: */
/*   Copy of error indicator */
#define RX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_OFFSET 0x00000016
#define RX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_MASK 0x00400000
#define RX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Overrides for the AFE TIADC clock generator IQ/DCD calibration signals. */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG1_ADDR 0x0200045C
#define RX_PHASE_ADAPT_REG1_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   1111111 - Max positive dcd correction */
/*   1000000 - No correction */
/*   0000000 - Min negative dcd correction */
#define RX_PHASE_ADAPT_REG1_D90_DCD_NT_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG1_D90_DCD_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG1_D90_DCD_NT_MASK 0x0000007F
#define RX_PHASE_ADAPT_REG1_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_D90_DCD_NT_RESET_VALUE 0x0000003F

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   1111111 - Max positive dcd correction */
/*   1000000 - No correction */
/*   0000000 - Min negative dcd correction */
#define RX_PHASE_ADAPT_REG1_D0_DCD_NT_OFFSET 0x00000008
#define RX_PHASE_ADAPT_REG1_D0_DCD_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG1_D0_DCD_NT_MASK 0x00007F00
#define RX_PHASE_ADAPT_REG1_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_D0_DCD_NT_RESET_VALUE 0x0000003F

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   1111111 - Max positive iq correction */
/*   1000000 - No correction */
/*   0000000 - Min negative iq correction */
#define RX_PHASE_ADAPT_REG1_IQ_NT_OFFSET 0x00000010
#define RX_PHASE_ADAPT_REG1_IQ_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG1_IQ_NT_MASK 0x007F0000
#define RX_PHASE_ADAPT_REG1_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_IQ_NT_RESET_VALUE 0x0000003F

/* FIELD: DCDIQ_SAMPLE_A */
/* DESCRIPTION: */
/*   Rising edge of this signal triggers the comparator that produces odat_afe_rx_dcdiq_error_a. */
/*   Measurement filter requires 200ns to settle after IQ/DCD DAC update. */
/*   Error signal is valid 20ns after rising edge.  */
/*   Comparator must be held in (0) arming state for at least 20ns prior to sampling.  */
/*   1 - Previous comparator result is held odat_afe_rx_dcdiq_error_a is valid.  */
/*   0 - Comparator is arming in preparation for next sampling.  */
#define RX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_OFFSET 0x00000018
#define RX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_MASK 0x01000000
#define RX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_SELECT_NT */
/* DESCRIPTION: */
/*   Select rx bitclk to calibrate for DCD */
/*   11 - unused */
/*   10 - calibrate IQ */
/*   01 - calibrate DCD d0 */
/*   00 - calibrate DCD d90 */
#define RX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_OFFSET 0x00000019
#define RX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_BITWIDTH 0x00000002
#define RX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_MASK 0x06000000
#define RX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_READY_A */
/* DESCRIPTION: */
/*   Override for the IQ ready signal to the AFE. Associated signals are read on the positive edge of this signal */
#define RX_PHASE_ADAPT_REG1_DCDIQ_READY_A_OFFSET 0x0000001B
#define RX_PHASE_ADAPT_REG1_DCDIQ_READY_A_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG1_DCDIQ_READY_A_MASK 0x08000000
#define RX_PHASE_ADAPT_REG1_DCDIQ_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_DCDIQ_READY_A_RESET_VALUE 0x00000001

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable bypass of rx IQ/DCD control signals. */
#define RX_PHASE_ADAPT_REG1_BYPASS_ENA_A_OFFSET 0x0000001F
#define RX_PHASE_ADAPT_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG1_BYPASS_ENA_A_MASK 0x80000000
#define RX_PHASE_ADAPT_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Configuration / observability of duty cycle adaptation block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG2_ADDR 0x02000460
#define RX_PHASE_ADAPT_REG2_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define RX_PHASE_ADAPT_REG2_REQ_A_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG2_REQ_A_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG2_REQ_A_MASK 0x00000001
#define RX_PHASE_ADAPT_REG2_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define RX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_OFFSET 0x00000001
#define RX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_MASK 0x00000002
#define RX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define RX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_OFFSET 0x00000002
#define RX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define RX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_MASK 0x0000007C
#define RX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define RX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_OFFSET 0x00000007
#define RX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define RX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_MASK 0x00000780
#define RX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity. Bit0= d90, Bit1 = d0, Bit2 = iq */
#define RX_PHASE_ADAPT_REG2_POLARITY_NT_OFFSET 0x0000000B
#define RX_PHASE_ADAPT_REG2_POLARITY_NT_BITWIDTH 0x00000003
#define RX_PHASE_ADAPT_REG2_POLARITY_NT_MASK 0x00003800
#define RX_PHASE_ADAPT_REG2_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_POLARITY_NT_RESET_VALUE 0x00000007

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define RX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_OFFSET 0x0000000E
#define RX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_MASK 0x00004000
#define RX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define RX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_OFFSET 0x0000000F
#define RX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_MASK 0x00008000
#define RX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define RX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_OFFSET 0x00000010
#define RX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_MASK 0x00010000
#define RX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: TYPE_NT */
/* DESCRIPTION: */
/*   Type select. 0 = d90, 1 = d0, 2 = iq */
#define RX_PHASE_ADAPT_REG2_TYPE_NT_OFFSET 0x00000011
#define RX_PHASE_ADAPT_REG2_TYPE_NT_BITWIDTH 0x00000002
#define RX_PHASE_ADAPT_REG2_TYPE_NT_MASK 0x00060000
#define RX_PHASE_ADAPT_REG2_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_TYPE_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define RX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x00000013
#define RX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define RX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_MASK 0x00F80000
#define RX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: SAMPLE_DELAY_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define RX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_OFFSET 0x00000018
#define RX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_BITWIDTH 0x00000006
#define RX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_MASK 0x3F000000
#define RX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_RESET_VALUE 0x0000001F

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Configuration / observability of duty cycle adaptation block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG3_ADDR 0x02000464
#define RX_PHASE_ADAPT_REG3_SIZE 32

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define RX_PHASE_ADAPT_REG3_START_VALUE_NT_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG3_START_VALUE_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG3_START_VALUE_NT_MASK 0x0000007F
#define RX_PHASE_ADAPT_REG3_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG3_START_VALUE_NT_RESET_VALUE 0x0000003F

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. Multiplied/divided by mu1 */
#define RX_PHASE_ADAPT_REG3_INIT_STEP_NT_OFFSET 0x00000007
#define RX_PHASE_ADAPT_REG3_INIT_STEP_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG3_INIT_STEP_NT_MASK 0x00003F80
#define RX_PHASE_ADAPT_REG3_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG3_INIT_STEP_NT_RESET_VALUE 0x00000006

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define RX_PHASE_ADAPT_REG3_MAX_NT_OFFSET 0x0000000E
#define RX_PHASE_ADAPT_REG3_MAX_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG3_MAX_NT_MASK 0x001FC000
#define RX_PHASE_ADAPT_REG3_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG3_MAX_NT_RESET_VALUE 0x0000007F

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define RX_PHASE_ADAPT_REG3_MIN_NT_OFFSET 0x00000015
#define RX_PHASE_ADAPT_REG3_MIN_NT_BITWIDTH 0x00000007
#define RX_PHASE_ADAPT_REG3_MIN_NT_MASK 0x0FE00000
#define RX_PHASE_ADAPT_REG3_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG3_MIN_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define RX_PHASE_ADAPT_REG3_STOP_HI_NT_OFFSET 0x0000001C
#define RX_PHASE_ADAPT_REG3_STOP_HI_NT_BITWIDTH 0x00000002
#define RX_PHASE_ADAPT_REG3_STOP_HI_NT_MASK 0x30000000
#define RX_PHASE_ADAPT_REG3_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG3_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Configuration / observability of duty cycle adaptation block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG4_ADDR 0x02000468
#define RX_PHASE_ADAPT_REG4_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define RX_PHASE_ADAPT_REG4_MAX_ITER_NT_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG4_MAX_ITER_NT_BITWIDTH 0x00000010
#define RX_PHASE_ADAPT_REG4_MAX_ITER_NT_MASK 0x0000FFFF
#define RX_PHASE_ADAPT_REG4_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG4_MAX_ITER_NT_RESET_VALUE 0x00000064

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define RX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_OFFSET 0x00000010
#define RX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define RX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define RX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_RESET_VALUE 0x000000AF

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Configuration / observability of duty cycle adaptation block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG5_ADDR 0x0200046C
#define RX_PHASE_ADAPT_REG5_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define RX_PHASE_ADAPT_REG5_LMS_MU1_NT_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG5_LMS_MU1_NT_BITWIDTH 0x00000005
#define RX_PHASE_ADAPT_REG5_LMS_MU1_NT_MASK 0x0000001F
#define RX_PHASE_ADAPT_REG5_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG5_LMS_MU1_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define RX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define RX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_MASK 0x00000020
#define RX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define RX_PHASE_ADAPT_REG5_LMS_MU2_NT_OFFSET 0x00000008
#define RX_PHASE_ADAPT_REG5_LMS_MU2_NT_BITWIDTH 0x00000005
#define RX_PHASE_ADAPT_REG5_LMS_MU2_NT_MASK 0x00001F00
#define RX_PHASE_ADAPT_REG5_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG5_LMS_MU2_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define RX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define RX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define RX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_MASK 0x00002000
#define RX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consecutive direction changes that need to occur for lock to occur */
#define RX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_OFFSET 0x00000010
#define RX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define RX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_MASK 0x001F0000
#define RX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PHASE_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define RX_PHASE_ADAPT_REG6_ADDR 0x02000470
#define RX_PHASE_ADAPT_REG6_SIZE 32

/* FIELD: SETUP_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after changing output before asserting ready  */
#define RX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_OFFSET 0x00000000
#define RX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_BITWIDTH 0x00000010
#define RX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_MASK 0x0000FFFF
#define RX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_RESET_VALUE 0x00000005

/* FIELD: HOLD_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after deasserting ready signal before changing output */
#define RX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_OFFSET 0x00000010
#define RX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_BITWIDTH 0x00000010
#define RX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_MASK 0xFFFF0000
#define RX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_RESET_VALUE 0x00000005

/* ------------------------------------- */
/* REG: RX_PPM_LOCK_DETECT_RDREG */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define RX_PPM_LOCK_DETECT_RDREG_ADDR 0x02000474
#define RX_PPM_LOCK_DETECT_RDREG_SIZE 32

/* FIELD: MEAS_RESULT */
/* DESCRIPTION: */
/*   PPM internal measurement block result */
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_OFFSET 0x00000000
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_BITWIDTH 0x00000010
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_MASK 0x0000FFFF
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_RESET_VALUE 0x00000000

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   PPM lock indicator */
#define RX_PPM_LOCK_DETECT_RDREG_LOCK_A_OFFSET 0x00000010
#define RX_PPM_LOCK_DETECT_RDREG_LOCK_A_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_RDREG_LOCK_A_MASK 0x00010000
#define RX_PPM_LOCK_DETECT_RDREG_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PPM_LOCK_DETECT_RDREG_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: MEAS_ACK_A */
/* DESCRIPTION: */
/*   PPM internal measurement block ack indicator */
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_OFFSET 0x00000011
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_MASK 0x00020000
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PPM_LOCK_DETECT_REG1 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define RX_PPM_LOCK_DETECT_REG1_ADDR 0x02000478
#define RX_PPM_LOCK_DETECT_REG1_SIZE 32

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Enable for block */
#define RX_PPM_LOCK_DETECT_REG1_EN_A_OFFSET 0x00000000
#define RX_PPM_LOCK_DETECT_REG1_EN_A_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_EN_A_MASK 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_EN_A_RESET_VALUE 0x00000000

/* FIELD: FREEZE_A */
/* DESCRIPTION: */
/*   When asserted, freezes the block */
#define RX_PPM_LOCK_DETECT_REG1_FREEZE_A_OFFSET 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_FREEZE_A_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_FREEZE_A_MASK 0x00000002
#define RX_PPM_LOCK_DETECT_REG1_FREEZE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_FREEZE_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_EN_NT */
/* DESCRIPTION: */
/*   When asserted, allows the ppm detect block to attempt to recover after a ppm error. */
#define RX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_OFFSET 0x00000002
#define RX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_MASK 0x00000004
#define RX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_RESET_EN_B_NT */
/* DESCRIPTION: */
/*   When asserted (active low) allows the ppm detect block to reset the dlpf */
#define RX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_OFFSET 0x00000003
#define RX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_MASK 0x00000008
#define RX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block timing window */
#define RX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_OFFSET 0x00000004
#define RX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define RX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_MASK 0x000000F0
#define RX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_RESET_VALUE 0x00000000

/* FIELD: FREQ_LOCK_THRESHOLD_NT */
/* DESCRIPTION: */
/*   Value that specifies lock for ppm. Absolute measurement value must be less than this value to lock. */
#define RX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_OFFSET 0x00000010
#define RX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_BITWIDTH 0x00000010
#define RX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_MASK 0xFFFF0000
#define RX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PPM_LOCK_DETECT_REG2 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define RX_PPM_LOCK_DETECT_REG2_ADDR 0x0200047C
#define RX_PPM_LOCK_DETECT_REG2_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block frequency target */
#define RX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_OFFSET 0x00000000
#define RX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define RX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_MASK 0x0000FFFF
#define RX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait when block enabled prior to measuring ppm error */
#define RX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_OFFSET 0x00000010
#define RX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_BITWIDTH 0x0000000F
#define RX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_MASK 0x7FFF0000
#define RX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_PPM_LOCK_DETECT_REG3 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define RX_PPM_LOCK_DETECT_REG3_ADDR 0x02000480
#define RX_PPM_LOCK_DETECT_REG3_SIZE 32

/* FIELD: LOCK_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait between measurement runs when locked */
#define RX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_OFFSET 0x00000000
#define RX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_BITWIDTH 0x0000000F
#define RX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_MASK 0x00007FFF
#define RX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: MEAS_REQ_A */
/* DESCRIPTION: */
/*   PPM internal measurement block request */
#define RX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_OFFSET 0x0000000F
#define RX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_MASK 0x00008000
#define RX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait while asserting dlpf reset during recovery */
#define RX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_OFFSET 0x00000010
#define RX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_BITWIDTH 0x0000000F
#define RX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_MASK 0x7FFF0000
#define RX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: CLK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selection for ppm detector block. 0 - vcodiv 1 - pclk */
#define RX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_OFFSET 0x0000001F
#define RX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_BITWIDTH 0x00000001
#define RX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_MASK 0x80000000
#define RX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_RXREF */
/* DESCRIPTION: */
/*   Configuration of the AFE function to generate a reference clock from the recovered clock. */
/* ------------------------------------- */
#define RX_RXREF_ADDR 0x02000484
#define RX_RXREF_SIZE 32

/* FIELD: DIV_NT */
/* DESCRIPTION: */
/*   RX divider for recovered clock derived reference */
/*   MSB Not Used */
/*   0111 - div30 */
/*   ... */
/*   0010 - div20 */
/*   0001 - div18 */
/*   0000 - div16 */
#define RX_RXREF_DIV_NT_OFFSET 0x00000000
#define RX_RXREF_DIV_NT_BITWIDTH 0x00000004
#define RX_RXREF_DIV_NT_MASK 0x0000000F
#define RX_RXREF_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_RXREF_DIV_NT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RX_SIGDET */
/* DESCRIPTION: */
/*   Configuration and overrides of the Rx signal detector functionality. */
/* ------------------------------------- */
#define RX_SIGDET_ADDR 0x02000488
#define RX_SIGDET_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   RX hsref mux bias adjust */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define RX_SIGDET_BIAS_ADJ_NT_OFFSET 0x00000000
#define RX_SIGDET_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define RX_SIGDET_BIAS_ADJ_NT_MASK 0x00000003
#define RX_SIGDET_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: FILTER_NT */
/* DESCRIPTION: */
/*   Bandwidth of the signal detect analog filter */
/*   11 - Max */
/*   00 - Min */
#define RX_SIGDET_FILTER_NT_OFFSET 0x00000002
#define RX_SIGDET_FILTER_NT_BITWIDTH 0x00000002
#define RX_SIGDET_FILTER_NT_MASK 0x0000000C
#define RX_SIGDET_FILTER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_FILTER_NT_RESET_VALUE 0x00000001

/* FIELD: THRESH_NT */
/* DESCRIPTION: */
/*   Threshold level of the signal detector */
/*   11 - Max */
/*   00 - Min */
#define RX_SIGDET_THRESH_NT_OFFSET 0x00000004
#define RX_SIGDET_THRESH_NT_BITWIDTH 0x00000003
#define RX_SIGDET_THRESH_NT_MASK 0x00000070
#define RX_SIGDET_THRESH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_THRESH_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: RX_SIGDET_RDREG */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_RDREG_ADDR 0x0200048C
#define RX_SIGDET_RDREG_SIZE 32

/* FIELD: OFFSET_CAL */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RX_SIGDET_RDREG_OFFSET_CAL_OFFSET 0x00000000
#define RX_SIGDET_RDREG_OFFSET_CAL_BITWIDTH 0x00000004
#define RX_SIGDET_RDREG_OFFSET_CAL_MASK 0x0000000F
#define RX_SIGDET_RDREG_OFFSET_CAL_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGDET_RDREG_OFFSET_CAL_RESET_VALUE 0x00000000

/* FIELD: ERROR_A */
/* DESCRIPTION: */
/*   Copy of analog error signal */
#define RX_SIGDET_RDREG_ERROR_A_OFFSET 0x00000004
#define RX_SIGDET_RDREG_ERROR_A_BITWIDTH 0x00000001
#define RX_SIGDET_RDREG_ERROR_A_MASK 0x00000010
#define RX_SIGDET_RDREG_ERROR_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGDET_RDREG_ERROR_A_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   Calibration FSM done indicator */
#define RX_SIGDET_RDREG_ACK_OFFSET 0x00000005
#define RX_SIGDET_RDREG_ACK_BITWIDTH 0x00000001
#define RX_SIGDET_RDREG_ACK_MASK 0x00000020
#define RX_SIGDET_RDREG_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGDET_RDREG_ACK_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGDET_REG1 */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_REG1_ADDR 0x02000490
#define RX_SIGDET_REG1_SIZE 32

/* FIELD: OFFSET_CAL_NT */
/* DESCRIPTION: */
/*   Sign-Magnitude Representation */
/*   0111 - Max offset */
/*   0000/1000 - Zero offset */
/*   1111 - Min offset */
#define RX_SIGDET_REG1_OFFSET_CAL_NT_OFFSET 0x00000000
#define RX_SIGDET_REG1_OFFSET_CAL_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG1_OFFSET_CAL_NT_MASK 0x0000000F
#define RX_SIGDET_REG1_OFFSET_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG1_OFFSET_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enables override for the analog signal detection offset calibration. */
#define RX_SIGDET_REG1_BYPASS_ENA_A_OFFSET 0x00000004
#define RX_SIGDET_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_SIGDET_REG1_BYPASS_ENA_A_MASK 0x00000010
#define RX_SIGDET_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: OFFSET_CHOP_NT */
/* DESCRIPTION: */
/*   Signal detection offset calibration chop polarity selection. */
/*   1 - Standard Polarity */
/*   0 - Inverted Polarity */
#define RX_SIGDET_REG1_OFFSET_CHOP_NT_OFFSET 0x00000005
#define RX_SIGDET_REG1_OFFSET_CHOP_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG1_OFFSET_CHOP_NT_MASK 0x00000020
#define RX_SIGDET_REG1_OFFSET_CHOP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG1_OFFSET_CHOP_NT_RESET_VALUE 0x00000000

/* FIELD: ISOLATE_A */
/* DESCRIPTION: */
/*   Signal detection offset calibration isolation. */
/*   1 - Signal detection isolated from the RX pads */
/*   0 - Normal operation */
#define RX_SIGDET_REG1_ISOLATE_A_OFFSET 0x00000006
#define RX_SIGDET_REG1_ISOLATE_A_BITWIDTH 0x00000001
#define RX_SIGDET_REG1_ISOLATE_A_MASK 0x00000040
#define RX_SIGDET_REG1_ISOLATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG1_ISOLATE_A_RESET_VALUE 0x00000000

/* FIELD: OFFSET_ENA_NT */
/* DESCRIPTION: */
/*   1 - Calibration codes for SIGDET offset are applied to SIGDET */
/*   0 - Calibration codes for SIGDET offset are zeroed in AFE */
#define RX_SIGDET_REG1_OFFSET_ENA_NT_OFFSET 0x00000007
#define RX_SIGDET_REG1_OFFSET_ENA_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG1_OFFSET_ENA_NT_MASK 0x00000080
#define RX_SIGDET_REG1_OFFSET_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG1_OFFSET_ENA_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_SIGDET_REG2 */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_REG2_ADDR 0x02000494
#define RX_SIGDET_REG2_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define RX_SIGDET_REG2_REQ_A_OFFSET 0x00000000
#define RX_SIGDET_REG2_REQ_A_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_REQ_A_MASK 0x00000001
#define RX_SIGDET_REG2_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define RX_SIGDET_REG2_LOAD_ONLY_NT_OFFSET 0x00000001
#define RX_SIGDET_REG2_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_LOAD_ONLY_NT_MASK 0x00000002
#define RX_SIGDET_REG2_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define RX_SIGDET_REG2_DERIV_TARGET_NT_OFFSET 0x00000002
#define RX_SIGDET_REG2_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define RX_SIGDET_REG2_DERIV_TARGET_NT_MASK 0x0000007C
#define RX_SIGDET_REG2_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define RX_SIGDET_REG2_DERIV_GAIN_NT_OFFSET 0x00000007
#define RX_SIGDET_REG2_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG2_DERIV_GAIN_NT_MASK 0x00000780
#define RX_SIGDET_REG2_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define RX_SIGDET_REG2_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x0000000B
#define RX_SIGDET_REG2_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define RX_SIGDET_REG2_DERIV_NUM_CROSS_TARGET_NT_MASK 0x0000F800
#define RX_SIGDET_REG2_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: CHOP_EN_NT */
/* DESCRIPTION: */
/*   Chop enable. 0 - Chopping not enabled. 1 - Chopping enabled. FSM will run twice, asserting chop signal second time, and output the average between the two runs */
#define RX_SIGDET_REG2_CHOP_EN_NT_OFFSET 0x00000010
#define RX_SIGDET_REG2_CHOP_EN_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_CHOP_EN_NT_MASK 0x00010000
#define RX_SIGDET_REG2_CHOP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_CHOP_EN_NT_RESET_VALUE 0x00000001

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define RX_SIGDET_REG2_NOCHANGE_DECAY_ENA_NT_OFFSET 0x00000011
#define RX_SIGDET_REG2_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_NOCHANGE_DECAY_ENA_NT_MASK 0x00020000
#define RX_SIGDET_REG2_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define RX_SIGDET_REG2_OUT_SIGN_MAG_NT_OFFSET 0x00000012
#define RX_SIGDET_REG2_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_OUT_SIGN_MAG_NT_MASK 0x00040000
#define RX_SIGDET_REG2_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000001

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define RX_SIGDET_REG2_OUT_SIGNED_NT_OFFSET 0x00000013
#define RX_SIGDET_REG2_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_OUT_SIGNED_NT_MASK 0x00080000
#define RX_SIGDET_REG2_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_OUT_SIGNED_NT_RESET_VALUE 0x00000001

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity. Bit0= d90, Bit1 = d0, Bit2 = iq */
#define RX_SIGDET_REG2_POLARITY_NT_OFFSET 0x00000014
#define RX_SIGDET_REG2_POLARITY_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG2_POLARITY_NT_MASK 0x00100000
#define RX_SIGDET_REG2_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_POLARITY_NT_RESET_VALUE 0x00000001

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define RX_SIGDET_REG2_STOP_HI_NT_OFFSET 0x00000015
#define RX_SIGDET_REG2_STOP_HI_NT_BITWIDTH 0x00000002
#define RX_SIGDET_REG2_STOP_HI_NT_MASK 0x00600000
#define RX_SIGDET_REG2_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG2_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGDET_REG3 */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_REG3_ADDR 0x02000498
#define RX_SIGDET_REG3_SIZE 32

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. */
#define RX_SIGDET_REG3_INIT_STEP_NT_OFFSET 0x00000000
#define RX_SIGDET_REG3_INIT_STEP_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG3_INIT_STEP_NT_MASK 0x0000000F
#define RX_SIGDET_REG3_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG3_INIT_STEP_NT_RESET_VALUE 0x00000003

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define RX_SIGDET_REG3_START_VALUE_NT_OFFSET 0x00000004
#define RX_SIGDET_REG3_START_VALUE_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG3_START_VALUE_NT_MASK 0x000000F0
#define RX_SIGDET_REG3_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG3_START_VALUE_NT_RESET_VALUE 0x00000008

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define RX_SIGDET_REG3_MAX_NT_OFFSET 0x00000008
#define RX_SIGDET_REG3_MAX_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG3_MAX_NT_MASK 0x00000F00
#define RX_SIGDET_REG3_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG3_MAX_NT_RESET_VALUE 0x0000000F

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define RX_SIGDET_REG3_MIN_NT_OFFSET 0x0000000C
#define RX_SIGDET_REG3_MIN_NT_BITWIDTH 0x00000004
#define RX_SIGDET_REG3_MIN_NT_MASK 0x0000F000
#define RX_SIGDET_REG3_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG3_MIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGDET_REG4 */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_REG4_ADDR 0x0200049C
#define RX_SIGDET_REG4_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define RX_SIGDET_REG4_MAX_ITER_NT_OFFSET 0x00000000
#define RX_SIGDET_REG4_MAX_ITER_NT_BITWIDTH 0x00000010
#define RX_SIGDET_REG4_MAX_ITER_NT_MASK 0x0000FFFF
#define RX_SIGDET_REG4_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG4_MAX_ITER_NT_RESET_VALUE 0x0000001E

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define RX_SIGDET_REG4_UPDATE_DELAY_NT_OFFSET 0x00000010
#define RX_SIGDET_REG4_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define RX_SIGDET_REG4_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define RX_SIGDET_REG4_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG4_UPDATE_DELAY_NT_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: RX_SIGDET_REG5 */
/* DESCRIPTION: */
/*   Configuration / observability of signal detect adaptation block */
/* ------------------------------------- */
#define RX_SIGDET_REG5_ADDR 0x020004A0
#define RX_SIGDET_REG5_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define RX_SIGDET_REG5_LMS_MU1_NT_OFFSET 0x00000000
#define RX_SIGDET_REG5_LMS_MU1_NT_BITWIDTH 0x00000005
#define RX_SIGDET_REG5_LMS_MU1_NT_MASK 0x0000001F
#define RX_SIGDET_REG5_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG5_LMS_MU1_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define RX_SIGDET_REG5_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define RX_SIGDET_REG5_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG5_LMS_MU1_DIR_NT_MASK 0x00000020
#define RX_SIGDET_REG5_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG5_LMS_MU1_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define RX_SIGDET_REG5_LMS_MU2_NT_OFFSET 0x00000008
#define RX_SIGDET_REG5_LMS_MU2_NT_BITWIDTH 0x00000005
#define RX_SIGDET_REG5_LMS_MU2_NT_MASK 0x00001F00
#define RX_SIGDET_REG5_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG5_LMS_MU2_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define RX_SIGDET_REG5_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define RX_SIGDET_REG5_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define RX_SIGDET_REG5_LMS_MU2_DIR_NT_MASK 0x00002000
#define RX_SIGDET_REG5_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG5_LMS_MU2_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consecutive direction changes that need to occur for lock to occur */
#define RX_SIGDET_REG5_BOUNCE_TARGET_NT_OFFSET 0x00000010
#define RX_SIGDET_REG5_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define RX_SIGDET_REG5_BOUNCE_TARGET_NT_MASK 0x001F0000
#define RX_SIGDET_REG5_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGDET_REG5_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_RDREG */
/* DESCRIPTION: */
/*   Signal detect observability */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_RDREG_ADDR 0x020004A4
#define RX_SIGNAL_DETECT_RDREG_SIZE 32

/* FIELD: DBE_VAL_A */
/* DESCRIPTION: */
/*   Copy of digital signal detect indicator */
#define RX_SIGNAL_DETECT_RDREG_DBE_VAL_A_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_RDREG_DBE_VAL_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_RDREG_DBE_VAL_A_MASK 0x00000001
#define RX_SIGNAL_DETECT_RDREG_DBE_VAL_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGNAL_DETECT_RDREG_DBE_VAL_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   Copy of adapt start signal */
#define RX_SIGNAL_DETECT_RDREG_ADAPT_START_A_OFFSET 0x00000001
#define RX_SIGNAL_DETECT_RDREG_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_RDREG_ADAPT_START_A_MASK 0x00000002
#define RX_SIGNAL_DETECT_RDREG_ADAPT_START_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGNAL_DETECT_RDREG_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: AFE_VAL_A */
/* DESCRIPTION: */
/*   Copy of afe signal detect indicator */
#define RX_SIGNAL_DETECT_RDREG_AFE_VAL_A_OFFSET 0x00000002
#define RX_SIGNAL_DETECT_RDREG_AFE_VAL_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_RDREG_AFE_VAL_A_MASK 0x00000004
#define RX_SIGNAL_DETECT_RDREG_AFE_VAL_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGNAL_DETECT_RDREG_AFE_VAL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_DONE_A */
/* DESCRIPTION: */
/*   Asserted whenever autoeq is run. Cleared on rate change/reset */
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_DONE_A_OFFSET 0x00000003
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_DONE_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_DONE_A_MASK 0x00000008
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_DONE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_DONE_A_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_CNTR_NT */
/* DESCRIPTION: */
/*   Increments whenever autoeq is run. Cleared on rate change/reset */
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_CNTR_NT_OFFSET 0x00000008
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_CNTR_NT_BITWIDTH 0x00000008
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_CNTR_NT_MASK 0x0000FF00
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_CNTR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SIGNAL_DETECT_RDREG_AUTOEQ_CNTR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG1 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG1_ADDR 0x020004A8
#define RX_SIGNAL_DETECT_REG1_SIZE 32

/* FIELD: ADC_INVALID_THRES_NT */
/* DESCRIPTION: */
/*   Digital signal detect invalid threshold */
#define RX_SIGNAL_DETECT_REG1_ADC_INVALID_THRES_NT_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG1_ADC_INVALID_THRES_NT_BITWIDTH 0x00000010
#define RX_SIGNAL_DETECT_REG1_ADC_INVALID_THRES_NT_MASK 0x0000FFFF
#define RX_SIGNAL_DETECT_REG1_ADC_INVALID_THRES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG1_ADC_INVALID_THRES_NT_RESET_VALUE 0x00000AF0

/* FIELD: ADC_VALID_THRES_NT */
/* DESCRIPTION: */
/*   Digital signal detect valid threshold */
#define RX_SIGNAL_DETECT_REG1_ADC_VALID_THRES_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG1_ADC_VALID_THRES_NT_BITWIDTH 0x00000010
#define RX_SIGNAL_DETECT_REG1_ADC_VALID_THRES_NT_MASK 0xFFFF0000
#define RX_SIGNAL_DETECT_REG1_ADC_VALID_THRES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG1_ADC_VALID_THRES_NT_RESET_VALUE 0x00000C80

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG2 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG2_ADDR 0x020004AC
#define RX_SIGNAL_DETECT_REG2_SIZE 32

/* FIELD: ADC_IIR_ALPHA_NT */
/* DESCRIPTION: */
/*   Digital signal detect iir filter alpha value */
#define RX_SIGNAL_DETECT_REG2_ADC_IIR_ALPHA_NT_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG2_ADC_IIR_ALPHA_NT_BITWIDTH 0x0000000F
#define RX_SIGNAL_DETECT_REG2_ADC_IIR_ALPHA_NT_MASK 0x00007FFF
#define RX_SIGNAL_DETECT_REG2_ADC_IIR_ALPHA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG2_ADC_IIR_ALPHA_NT_RESET_VALUE 0x00007FDF

/* FIELD: PLL_NOWAIT_NT */
/* DESCRIPTION: */
/*   Wait for CDR lock control. 0 - Wait for CDR lock prior to indicating data valid. 1 - Do not wait for CDR lock */
#define RX_SIGNAL_DETECT_REG2_PLL_NOWAIT_NT_OFFSET 0x0000000F
#define RX_SIGNAL_DETECT_REG2_PLL_NOWAIT_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG2_PLL_NOWAIT_NT_MASK 0x00008000
#define RX_SIGNAL_DETECT_REG2_PLL_NOWAIT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG2_PLL_NOWAIT_NT_RESET_VALUE 0x00000000

/* FIELD: DATA_VALID_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles between entry to valid state (and cdr lock if enabled), before asserting rxvalid signal */
#define RX_SIGNAL_DETECT_REG2_DATA_VALID_DELAY_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG2_DATA_VALID_DELAY_NT_BITWIDTH 0x00000010
#define RX_SIGNAL_DETECT_REG2_DATA_VALID_DELAY_NT_MASK 0xFFFF0000
#define RX_SIGNAL_DETECT_REG2_DATA_VALID_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG2_DATA_VALID_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG3 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG3_ADDR 0x020004B0
#define RX_SIGNAL_DETECT_REG3_SIZE 32

/* FIELD: DPLL_EN_A */
/* DESCRIPTION: */
/*   Enables block control of cdr dpll. 0 - DPLL disabled. 1 - DPLL enabled when block enters valid state */
#define RX_SIGNAL_DETECT_REG3_DPLL_EN_A_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG3_DPLL_EN_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_DPLL_EN_A_MASK 0x00000001
#define RX_SIGNAL_DETECT_REG3_DPLL_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_DPLL_EN_A_RESET_VALUE 0x00000000

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Signal detect block enable. 0 - Block disabled. 1 - Block enabled */
#define RX_SIGNAL_DETECT_REG3_EN_A_OFFSET 0x00000001
#define RX_SIGNAL_DETECT_REG3_EN_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_EN_A_MASK 0x00000002
#define RX_SIGNAL_DETECT_REG3_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_EN_A_RESET_VALUE 0x00000000

/* FIELD: FORCE_INVALID_A */
/* DESCRIPTION: */
/*   When asserted, forces signal detect block into invalid (rxvalid deasserted) state */
#define RX_SIGNAL_DETECT_REG3_FORCE_INVALID_A_OFFSET 0x00000002
#define RX_SIGNAL_DETECT_REG3_FORCE_INVALID_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_FORCE_INVALID_A_MASK 0x00000004
#define RX_SIGNAL_DETECT_REG3_FORCE_INVALID_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_FORCE_INVALID_A_RESET_VALUE 0x00000000

/* FIELD: FORCE_VALID_A */
/* DESCRIPTION: */
/*   When asserted, forces signal detect block into valid state */
#define RX_SIGNAL_DETECT_REG3_FORCE_VALID_A_OFFSET 0x00000003
#define RX_SIGNAL_DETECT_REG3_FORCE_VALID_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_FORCE_VALID_A_MASK 0x00000008
#define RX_SIGNAL_DETECT_REG3_FORCE_VALID_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_FORCE_VALID_A_RESET_VALUE 0x00000000

/* FIELD: VALID_CTRL_NT */
/* DESCRIPTION: */
/*   Valid entry condition control enable. Each bit, when asserted, enables a control for entry into valid state */
/*   Bit 0 - AFE signal detect */
/*   Bit 1 - Filtered ADC data */
/*   Bit 2 - Rxdisable port */
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_NT_OFFSET 0x00000004
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_NT_BITWIDTH 0x00000003
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_NT_MASK 0x00000070
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_NT_RESET_VALUE 0x00000002

/* FIELD: VALID_CTRL_TYPE_NT */
/* DESCRIPTION: */
/*   Valid entry condition type. 0 - AND, 1 - OR */
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_TYPE_NT_OFFSET 0x00000007
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_TYPE_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_TYPE_NT_MASK 0x00000080
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_VALID_CTRL_TYPE_NT_RESET_VALUE 0x00000000

/* FIELD: INVALID_CTRL_NT */
/* DESCRIPTION: */
/*   Valid exit condition control enable. Each bit, when asserted, enables a control for exit from valid state */
/*   Bit 0 - AFE signal detect */
/*   Bit 1 - Filtered ADC data */
/*   Bit 2 - Rxdisable port */
/*   Bit 3 - CDR lock (level) */
/*   Bit 4 - CDR lock (negedge) */
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_NT_OFFSET 0x00000008
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_NT_BITWIDTH 0x00000006
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_NT_MASK 0x00003F00
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_NT_RESET_VALUE 0x00000002

/* FIELD: INVALID_CTRL_TYPE_NT */
/* DESCRIPTION: */
/*   Valid exit condition type. 0 - AND, 1 - OR */
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_TYPE_NT_OFFSET 0x0000000E
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_TYPE_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_TYPE_NT_MASK 0x00004000
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_INVALID_CTRL_TYPE_NT_RESET_VALUE 0x00000001

/* FIELD: VALID_PCS_SEL_NT */
/* DESCRIPTION: */
/*   Selects which signal to use for external odat_rx_signal_detect_ln[#]_a signal */
/*   0 - AFE signal detect */
/*   1 - Digital signal detect */
/*   2 - Data valid */
/*   3 - CDR adapt start */
#define RX_SIGNAL_DETECT_REG3_VALID_PCS_SEL_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG3_VALID_PCS_SEL_NT_BITWIDTH 0x00000003
#define RX_SIGNAL_DETECT_REG3_VALID_PCS_SEL_NT_MASK 0x00070000
#define RX_SIGNAL_DETECT_REG3_VALID_PCS_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_VALID_PCS_SEL_NT_RESET_VALUE 0x00000001

/* FIELD: DPLL_ADAPT_START_OVR_A */
/* DESCRIPTION: */
/*   Override for cdr adapt start signal */
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVR_A_OFFSET 0x00000013
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVR_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVR_A_MASK 0x00080000
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVR_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVR_A_RESET_VALUE 0x00000000

/* FIELD: DPLL_ADAPT_START_OVREN_A */
/* DESCRIPTION: */
/*   Override enable for cdr adapt start signal. 0 - Normal operation. 1 - dpll_adapt_start_ovr_a used */
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVREN_A_OFFSET 0x00000014
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVREN_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVREN_A_MASK 0x00100000
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVREN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_DPLL_ADAPT_START_OVREN_A_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_EN_NT */
/* DESCRIPTION: */
/*   Autoeq feature enable */
/*   0 - Disabled */
/*   1 - Enabled */
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_EN_NT_OFFSET 0x00000015
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_EN_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_EN_NT_MASK 0x00200000
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_EN_NT_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_TYPE_NT */
/* DESCRIPTION: */
/*   Controls the type of EQ performed when autoeq enabled */
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_TYPE_NT_OFFSET 0x00000018
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_TYPE_NT_BITWIDTH 0x00000003
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_TYPE_NT_MASK 0x07000000
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_TYPE_NT_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_ONCEONLY_NT */
/* DESCRIPTION: */
/*   Controls whether or not autoeq runs on every signal detect posedge, or just the first after reset/link training */
/*   0 - Every edge */
/*   1 - First only */
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCEONLY_NT_OFFSET 0x0000001B
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCEONLY_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCEONLY_NT_MASK 0x08000000
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCEONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCEONLY_NT_RESET_VALUE 0x00000000

/* FIELD: AUTOEQ_ONCE_CLR_A */
/* DESCRIPTION: */
/*   If asserted, clears the ran once indicator */
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCE_CLR_A_OFFSET 0x0000001C
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCE_CLR_A_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCE_CLR_A_MASK 0x10000000
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCE_CLR_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG3_AUTOEQ_ONCE_CLR_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG4 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG4_ADDR 0x020004B4
#define RX_SIGNAL_DETECT_REG4_SIZE 32

/* FIELD: TRAN_2VALID_THRES_LOW_NT */
/* DESCRIPTION: */
/*   Transition detector low threshold, for 2 branch mode */
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_LOW_NT_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_LOW_NT_BITWIDTH 0x00000008
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_LOW_NT_MASK 0x000000FF
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_LOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_LOW_NT_RESET_VALUE 0x00000000

/* FIELD: TRAN_2VALID_THRES_HIGH_NT */
/* DESCRIPTION: */
/*   Transition detector high threshold, for 2 branch mode */
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_HIGH_NT_OFFSET 0x00000008
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_HIGH_NT_BITWIDTH 0x00000008
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_HIGH_NT_MASK 0x0000FF00
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_HIGH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_THRES_HIGH_NT_RESET_VALUE 0x00000000

/* FIELD: TRAN_2VALID_POINT_NT */
/* DESCRIPTION: */
/*   Transition detector valid point. Set to this value when enabled, for 2 branch mode */
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_POINT_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_POINT_NT_BITWIDTH 0x00000008
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_POINT_NT_MASK 0x00FF0000
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_POINT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG4_TRAN_2VALID_POINT_NT_RESET_VALUE 0x00000000

/* FIELD: TRAN_BRANCHES_NT */
/* DESCRIPTION: */
/*   Transition detector branch number control. 0 = 2 branches, 1 = 4 branches */
#define RX_SIGNAL_DETECT_REG4_TRAN_BRANCHES_NT_OFFSET 0x00000018
#define RX_SIGNAL_DETECT_REG4_TRAN_BRANCHES_NT_BITWIDTH 0x00000001
#define RX_SIGNAL_DETECT_REG4_TRAN_BRANCHES_NT_MASK 0x01000000
#define RX_SIGNAL_DETECT_REG4_TRAN_BRANCHES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG4_TRAN_BRANCHES_NT_RESET_VALUE 0x00000000

/* FIELD: TRAN_ALPHA_NT */
/* DESCRIPTION: */
/*   Transition detector alpha setting */
#define RX_SIGNAL_DETECT_REG4_TRAN_ALPHA_NT_OFFSET 0x00000019
#define RX_SIGNAL_DETECT_REG4_TRAN_ALPHA_NT_BITWIDTH 0x00000005
#define RX_SIGNAL_DETECT_REG4_TRAN_ALPHA_NT_MASK 0x3E000000
#define RX_SIGNAL_DETECT_REG4_TRAN_ALPHA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG4_TRAN_ALPHA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG5 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG5_ADDR 0x020004B8
#define RX_SIGNAL_DETECT_REG5_SIZE 32

/* FIELD: TRAN_4VALID_THRES_LOW_NT */
/* DESCRIPTION: */
/*   Transition detector low threshold, for 4 branch mode */
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_LOW_NT_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_LOW_NT_BITWIDTH 0x0000000A
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_LOW_NT_MASK 0x000003FF
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_LOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_LOW_NT_RESET_VALUE 0x00000000

/* FIELD: TRAN_4VALID_THRES_HIGH_NT */
/* DESCRIPTION: */
/*   Transition detector high threshold, for 4 branch mode */
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_HIGH_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_HIGH_NT_BITWIDTH 0x0000000A
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_HIGH_NT_MASK 0x03FF0000
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_HIGH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG5_TRAN_4VALID_THRES_HIGH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SIGNAL_DETECT_REG6 */
/* DESCRIPTION: */
/*   Configuration for the signal detect block */
/* ------------------------------------- */
#define RX_SIGNAL_DETECT_REG6_ADDR 0x020004BC
#define RX_SIGNAL_DETECT_REG6_SIZE 32

/* FIELD: TRAN_4VALID_POINT_NT */
/* DESCRIPTION: */
/*   Transition detector valid point. Set to this value when enabled, for 4 branch mode */
#define RX_SIGNAL_DETECT_REG6_TRAN_4VALID_POINT_NT_OFFSET 0x00000000
#define RX_SIGNAL_DETECT_REG6_TRAN_4VALID_POINT_NT_BITWIDTH 0x0000000A
#define RX_SIGNAL_DETECT_REG6_TRAN_4VALID_POINT_NT_MASK 0x000003FF
#define RX_SIGNAL_DETECT_REG6_TRAN_4VALID_POINT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG6_TRAN_4VALID_POINT_NT_RESET_VALUE 0x00000000

/* FIELD: VALID_DELAY_NT */
/* DESCRIPTION: */
/*   Valid delay setting. When set to non-zero, the signal detector will wait this number of clock cycles prior to asserting data valid */
#define RX_SIGNAL_DETECT_REG6_VALID_DELAY_NT_OFFSET 0x00000010
#define RX_SIGNAL_DETECT_REG6_VALID_DELAY_NT_BITWIDTH 0x00000010
#define RX_SIGNAL_DETECT_REG6_VALID_DELAY_NT_MASK 0xFFFF0000
#define RX_SIGNAL_DETECT_REG6_VALID_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SIGNAL_DETECT_REG6_VALID_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_BACKGROUND */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_BACKGROUND_ADDR 0x020004C0
#define RX_SLICER_TARGET_BACKGROUND_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for target adapt mu */
#define RX_SLICER_TARGET_BACKGROUND_LMS_MU_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_BACKGROUND_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_TARGET_BACKGROUND_LMS_MU_NT_MASK 0x0000001F
#define RX_SLICER_TARGET_BACKGROUND_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_BACKGROUND_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for target adapt watchdog */
#define RX_SLICER_TARGET_BACKGROUND_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_SLICER_TARGET_BACKGROUND_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_TARGET_BACKGROUND_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_SLICER_TARGET_BACKGROUND_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_BACKGROUND_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_RDREG13 */
/* DESCRIPTION: */
/*   RX target EL1 value */
/* ------------------------------------- */
#define RX_SLICER_TARGET_RDREG13_ADDR 0x020004C4
#define RX_SLICER_TARGET_RDREG13_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Readback EL3 value for selected branch */
#define RX_SLICER_TARGET_RDREG13_EL3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_RDREG13_EL3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_RDREG13_EL3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_RDREG13_EL3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_RDREG13_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Readback EL1 value for selected branch */
#define RX_SLICER_TARGET_RDREG13_EL1_NT_OFFSET 0x00000009
#define RX_SLICER_TARGET_RDREG13_EL1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_RDREG13_EL1_NT_MASK 0x0003FE00
#define RX_SLICER_TARGET_RDREG13_EL1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_RDREG13_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Readback EH1 value for selected branch */
#define RX_SLICER_TARGET_RDREG13_EH1_NT_OFFSET 0x00000012
#define RX_SLICER_TARGET_RDREG13_EH1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_RDREG13_EH1_NT_MASK 0x07FC0000
#define RX_SLICER_TARGET_RDREG13_EH1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_RDREG13_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_RDREG14 */
/* DESCRIPTION: */
/*   RX target EL3 value */
/* ------------------------------------- */
#define RX_SLICER_TARGET_RDREG14_ADDR 0x020004C8
#define RX_SLICER_TARGET_RDREG14_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Readback EH3 value for selected branch */
#define RX_SLICER_TARGET_RDREG14_EH3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_RDREG14_EH3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_RDREG14_EH3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_RDREG14_EH3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_RDREG14_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG1 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG1_ADDR 0x020004CC
#define RX_SLICER_TARGET_REG1_SIZE 32

/* FIELD: BRANCH_SEL_A */
/* DESCRIPTION: */
/*   Branch Selection */
#define RX_SLICER_TARGET_REG1_BRANCH_SEL_A_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG1_BRANCH_SEL_A_BITWIDTH 0x00000008
#define RX_SLICER_TARGET_REG1_BRANCH_SEL_A_MASK 0x000000FF
#define RX_SLICER_TARGET_REG1_BRANCH_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BRANCH_SEL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOLOAD_ENA_A */
/* DESCRIPTION: */
/*   Autoload enable */
#define RX_SLICER_TARGET_REG1_AUTOLOAD_ENA_A_OFFSET 0x00000008
#define RX_SLICER_TARGET_REG1_AUTOLOAD_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_AUTOLOAD_ENA_A_MASK 0x00000100
#define RX_SLICER_TARGET_REG1_AUTOLOAD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_AUTOLOAD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_ALL_BRANCHES_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to all branches */
#define RX_SLICER_TARGET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_OFFSET 0x00000009
#define RX_SLICER_TARGET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_MASK 0x00000200
#define RX_SLICER_TARGET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_ALL_BRANCHES_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_0_7_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 0 - 7 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_OFFSET 0x0000000A
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_MASK 0x00000400
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_0_7_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_8_15_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 8 - 15 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_OFFSET 0x0000000B
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_MASK 0x00000800
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_8_15_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_16_23_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 16 - 23 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_OFFSET 0x0000000C
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_MASK 0x00001000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_16_23_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_24_31_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 24 - 31 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_OFFSET 0x0000000D
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_MASK 0x00002000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_24_31_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_32_39_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 32 - 39 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_OFFSET 0x0000000E
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_MASK 0x00004000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_32_39_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_40_47_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 40 - 47 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_OFFSET 0x0000000F
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_MASK 0x00008000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_40_47_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_48_55_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 48 - 55 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_OFFSET 0x00000010
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_MASK 0x00010000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_48_55_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_56_63_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer target overrides to branches 56 - 63 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_OFFSET 0x00000011
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_MASK 0x00020000
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG1_BROADCAST_BRANCHES_56_63_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG10 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG10_ADDR 0x020004D0
#define RX_SLICER_TARGET_REG10_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu */
#define RX_SLICER_TARGET_REG10_LMS_MU_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG10_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_TARGET_REG10_LMS_MU_NT_MASK 0x0000001F
#define RX_SLICER_TARGET_REG10_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   lms mu dir */
#define RX_SLICER_TARGET_REG10_LMS_MU_DIR_NT_OFFSET 0x00000005
#define RX_SLICER_TARGET_REG10_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_LMS_MU_DIR_NT_MASK 0x00000020
#define RX_SLICER_TARGET_REG10_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_ENA_A */
/* DESCRIPTION: */
/*   When set to 1, reinitializes all EL3/EL1/EH1/EH3 values to initialization, resets FSM to init state */
#define RX_SLICER_TARGET_REG10_INIT_ENA_A_OFFSET 0x00000006
#define RX_SLICER_TARGET_REG10_INIT_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_INIT_ENA_A_MASK 0x00000040
#define RX_SLICER_TARGET_REG10_INIT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_INIT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_SLICER_TARGET_REG10_BYPASS_ENA_A_OFFSET 0x00000007
#define RX_SLICER_TARGET_REG10_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_BYPASS_ENA_A_MASK 0x00000080
#define RX_SLICER_TARGET_REG10_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   During Target adaption, specifies watchdog duration: 2**regvalue number of cycles. */
/*   In bonded mode, duration =  2**regvalue clock cycles. */
/*   In unbonded mode, duration ~ 2**regvalue * num_branch clock cycles. */
#define RX_SLICER_TARGET_REG10_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_SLICER_TARGET_REG10_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_TARGET_REG10_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_SLICER_TARGET_REG10_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: ADAPT_ENA_A */
/* DESCRIPTION: */
/*   adapt enable */
#define RX_SLICER_TARGET_REG10_ADAPT_ENA_A_OFFSET 0x0000000D
#define RX_SLICER_TARGET_REG10_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_ADAPT_ENA_A_MASK 0x00002000
#define RX_SLICER_TARGET_REG10_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_ADAPT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_SLICER_TARGET_REG10_ADAPT_START_A_OFFSET 0x0000000E
#define RX_SLICER_TARGET_REG10_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_ADAPT_START_A_MASK 0x00004000
#define RX_SLICER_TARGET_REG10_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: START_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded start branch */
#define RX_SLICER_TARGET_REG10_START_BRANCH_NT_OFFSET 0x00000010
#define RX_SLICER_TARGET_REG10_START_BRANCH_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG10_START_BRANCH_NT_MASK 0x003F0000
#define RX_SLICER_TARGET_REG10_START_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_START_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_NBONDED_A */
/* DESCRIPTION: */
/*   1 unbonded, 0 bonded mode sel */
#define RX_SLICER_TARGET_REG10_UNBONDED_NBONDED_A_OFFSET 0x00000016
#define RX_SLICER_TARGET_REG10_UNBONDED_NBONDED_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_UNBONDED_NBONDED_A_MASK 0x00400000
#define RX_SLICER_TARGET_REG10_UNBONDED_NBONDED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_UNBONDED_NBONDED_A_RESET_VALUE 0x00000000

/* FIELD: MEASURE_HOLD_ENA_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_TARGET_REG10_MEASURE_HOLD_ENA_A_OFFSET 0x00000017
#define RX_SLICER_TARGET_REG10_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_REG10_MEASURE_HOLD_ENA_A_MASK 0x00800000
#define RX_SLICER_TARGET_REG10_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_STOP_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded stop branch */
#define RX_SLICER_TARGET_REG10_UNBONDED_STOP_BRANCH_NT_OFFSET 0x00000018
#define RX_SLICER_TARGET_REG10_UNBONDED_STOP_BRANCH_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG10_UNBONDED_STOP_BRANCH_NT_MASK 0x3F000000
#define RX_SLICER_TARGET_REG10_UNBONDED_STOP_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG10_UNBONDED_STOP_BRANCH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG12 */
/* DESCRIPTION: */
/*   Debug branch select Register. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG12_ADDR 0x020004D4
#define RX_SLICER_TARGET_REG12_SIZE 32

/* FIELD: DBG_BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Debug branch select for target readback */
#define RX_SLICER_TARGET_REG12_DBG_BRANCH_SEL_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG12_DBG_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG12_DBG_BRANCH_SEL_NT_MASK 0x0000003F
#define RX_SLICER_TARGET_REG12_DBG_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG12_DBG_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG2 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG2_ADDR 0x020004D8
#define RX_SLICER_TARGET_REG2_SIZE 32

/* FIELD: OVRD_EL3_NT */
/* DESCRIPTION: */
/*   Sets EL3 bypass value when bypass_ena */
#define RX_SLICER_TARGET_REG2_OVRD_EL3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG2_OVRD_EL3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG2_OVRD_EL3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_REG2_OVRD_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG2_OVRD_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_EL1_NT */
/* DESCRIPTION: */
/*   Sets EL1 bypass value when bypass_ena */
#define RX_SLICER_TARGET_REG2_OVRD_EL1_NT_OFFSET 0x00000009
#define RX_SLICER_TARGET_REG2_OVRD_EL1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG2_OVRD_EL1_NT_MASK 0x0003FE00
#define RX_SLICER_TARGET_REG2_OVRD_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG2_OVRD_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_EH1_NT */
/* DESCRIPTION: */
/*   Sets EH1 bypass value when bypass_ena */
#define RX_SLICER_TARGET_REG2_OVRD_EH1_NT_OFFSET 0x00000012
#define RX_SLICER_TARGET_REG2_OVRD_EH1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG2_OVRD_EH1_NT_MASK 0x07FC0000
#define RX_SLICER_TARGET_REG2_OVRD_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG2_OVRD_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG3 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG3_ADDR 0x020004DC
#define RX_SLICER_TARGET_REG3_SIZE 32

/* FIELD: OVRD_EH3_NT */
/* DESCRIPTION: */
/*   Sets EH3 bypass value when bypass_ena */
#define RX_SLICER_TARGET_REG3_OVRD_EH3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG3_OVRD_EH3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG3_OVRD_EH3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_REG3_OVRD_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG3_OVRD_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG4 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG4_ADDR 0x020004E0
#define RX_SLICER_TARGET_REG4_SIZE 32

/* FIELD: INIT_EL3_NT */
/* DESCRIPTION: */
/*   Initialization value for EL3 across all branches */
#define RX_SLICER_TARGET_REG4_INIT_EL3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG4_INIT_EL3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG4_INIT_EL3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_REG4_INIT_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG4_INIT_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_EL1_NT */
/* DESCRIPTION: */
/*   Initialization value for EL1 across all branches */
#define RX_SLICER_TARGET_REG4_INIT_EL1_NT_OFFSET 0x00000009
#define RX_SLICER_TARGET_REG4_INIT_EL1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG4_INIT_EL1_NT_MASK 0x0003FE00
#define RX_SLICER_TARGET_REG4_INIT_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG4_INIT_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_EH1_NT */
/* DESCRIPTION: */
/*   Initialization value for EH1 across all branches */
#define RX_SLICER_TARGET_REG4_INIT_EH1_NT_OFFSET 0x00000012
#define RX_SLICER_TARGET_REG4_INIT_EH1_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG4_INIT_EH1_NT_MASK 0x07FC0000
#define RX_SLICER_TARGET_REG4_INIT_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG4_INIT_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG5 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG5_ADDR 0x020004E4
#define RX_SLICER_TARGET_REG5_SIZE 32

/* FIELD: INIT_EH3_NT */
/* DESCRIPTION: */
/*   Initialization value for EH3 across all branches */
#define RX_SLICER_TARGET_REG5_INIT_EH3_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG5_INIT_EH3_NT_BITWIDTH 0x00000009
#define RX_SLICER_TARGET_REG5_INIT_EH3_NT_MASK 0x000001FF
#define RX_SLICER_TARGET_REG5_INIT_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG5_INIT_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG6 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG6_ADDR 0x020004E8
#define RX_SLICER_TARGET_REG6_SIZE 32

/* FIELD: EH3_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the eh3 adapt distribution target plus weight: regvalue/32 */
#define RX_SLICER_TARGET_REG6_EH3_PLUS_WEIGHT_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG6_EH3_PLUS_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG6_EH3_PLUS_WEIGHT_NT_MASK 0x0000003F
#define RX_SLICER_TARGET_REG6_EH3_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG6_EH3_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EH3_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the eh3 adapt distribution target neg weight: regvalue/32 */
#define RX_SLICER_TARGET_REG6_EH3_SUB_WEIGHT_NT_OFFSET 0x00000008
#define RX_SLICER_TARGET_REG6_EH3_SUB_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG6_EH3_SUB_WEIGHT_NT_MASK 0x00003F00
#define RX_SLICER_TARGET_REG6_EH3_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG6_EH3_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EL3_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the el3 adapt distribution target plus weight: regvalue/32 */
#define RX_SLICER_TARGET_REG6_EL3_PLUS_WEIGHT_NT_OFFSET 0x00000010
#define RX_SLICER_TARGET_REG6_EL3_PLUS_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG6_EL3_PLUS_WEIGHT_NT_MASK 0x003F0000
#define RX_SLICER_TARGET_REG6_EL3_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG6_EL3_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EL3_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the el3 adapt distribution target neg weight: regvalue/32 */
#define RX_SLICER_TARGET_REG6_EL3_SUB_WEIGHT_NT_OFFSET 0x00000018
#define RX_SLICER_TARGET_REG6_EL3_SUB_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG6_EL3_SUB_WEIGHT_NT_MASK 0x3F000000
#define RX_SLICER_TARGET_REG6_EL3_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG6_EL3_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG7 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG7_ADDR 0x020004EC
#define RX_SLICER_TARGET_REG7_SIZE 32

/* FIELD: EH1_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the eh1 adapt distribution target plus weight: regvalue/32 */
#define RX_SLICER_TARGET_REG7_EH1_PLUS_WEIGHT_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG7_EH1_PLUS_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG7_EH1_PLUS_WEIGHT_NT_MASK 0x0000003F
#define RX_SLICER_TARGET_REG7_EH1_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG7_EH1_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the eh1 adapt distribution target neg weight: regvalue/32 */
#define RX_SLICER_TARGET_REG7_EH1_SUB_WEIGHT_NT_OFFSET 0x00000008
#define RX_SLICER_TARGET_REG7_EH1_SUB_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG7_EH1_SUB_WEIGHT_NT_MASK 0x00003F00
#define RX_SLICER_TARGET_REG7_EH1_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG7_EH1_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the el1 adapt distribution target plus weight: regvalue/32 */
#define RX_SLICER_TARGET_REG7_EL1_PLUS_WEIGHT_NT_OFFSET 0x00000010
#define RX_SLICER_TARGET_REG7_EL1_PLUS_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG7_EL1_PLUS_WEIGHT_NT_MASK 0x003F0000
#define RX_SLICER_TARGET_REG7_EL1_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG7_EL1_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the el1 adapt distribution target neg weight: regvalue/32 */
#define RX_SLICER_TARGET_REG7_EL1_SUB_WEIGHT_NT_OFFSET 0x00000018
#define RX_SLICER_TARGET_REG7_EL1_SUB_WEIGHT_NT_BITWIDTH 0x00000006
#define RX_SLICER_TARGET_REG7_EL1_SUB_WEIGHT_NT_MASK 0x3F000000
#define RX_SLICER_TARGET_REG7_EL1_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG7_EL1_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG8 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG8_ADDR 0x020004F0
#define RX_SLICER_TARGET_REG8_SIZE 32

/* FIELD: BRANCH_DISABLE1_NT */
/* DESCRIPTION: */
/*   disable branch 0 31 */
#define RX_SLICER_TARGET_REG8_BRANCH_DISABLE1_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG8_BRANCH_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_SLICER_TARGET_REG8_BRANCH_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_SLICER_TARGET_REG8_BRANCH_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG8_BRANCH_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_REG9 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer constellation targets. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_TARGET_REG9_ADDR 0x020004F4
#define RX_SLICER_TARGET_REG9_SIZE 32

/* FIELD: BRANCH_DISABLE2_NT */
/* DESCRIPTION: */
/*   disable branch 32 63 */
#define RX_SLICER_TARGET_REG9_BRANCH_DISABLE2_NT_OFFSET 0x00000000
#define RX_SLICER_TARGET_REG9_BRANCH_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_SLICER_TARGET_REG9_BRANCH_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_SLICER_TARGET_REG9_BRANCH_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_TARGET_REG9_BRANCH_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_TARGET_STATUS */
/* DESCRIPTION: */
/*   adapt state */
/* ------------------------------------- */
#define RX_SLICER_TARGET_STATUS_ADDR 0x020004F8
#define RX_SLICER_TARGET_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: target adapt done */
#define RX_SLICER_TARGET_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_SLICER_TARGET_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_LOCK_A_MASK 0x00000001
#define RX_SLICER_TARGET_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: EL3_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_TARGET_STATUS_EL3_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_SLICER_TARGET_STATUS_EL3_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_EL3_DERIV_LOCK_A_MASK 0x00000002
#define RX_SLICER_TARGET_STATUS_EL3_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_EL3_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: EL1_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_TARGET_STATUS_EL1_DERIV_LOCK_A_OFFSET 0x00000002
#define RX_SLICER_TARGET_STATUS_EL1_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_EL1_DERIV_LOCK_A_MASK 0x00000004
#define RX_SLICER_TARGET_STATUS_EL1_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_EL1_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: EH1_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_TARGET_STATUS_EH1_DERIV_LOCK_A_OFFSET 0x00000003
#define RX_SLICER_TARGET_STATUS_EH1_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_EH1_DERIV_LOCK_A_MASK 0x00000008
#define RX_SLICER_TARGET_STATUS_EH1_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_EH1_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: EH3_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_TARGET_STATUS_EH3_DERIV_LOCK_A_OFFSET 0x00000004
#define RX_SLICER_TARGET_STATUS_EH3_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_EH3_DERIV_LOCK_A_MASK 0x00000010
#define RX_SLICER_TARGET_STATUS_EH3_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_EH3_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: target watchdog done */
#define RX_SLICER_TARGET_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000005
#define RX_SLICER_TARGET_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_SLICER_TARGET_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000020
#define RX_SLICER_TARGET_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_STATE_A */
/* DESCRIPTION: */
/*   Reserved */
#define RX_SLICER_TARGET_STATUS_ADAPT_STATE_A_OFFSET 0x00000006
#define RX_SLICER_TARGET_STATUS_ADAPT_STATE_A_BITWIDTH 0x00000004
#define RX_SLICER_TARGET_STATUS_ADAPT_STATE_A_MASK 0x000003C0
#define RX_SLICER_TARGET_STATUS_ADAPT_STATE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_TARGET_STATUS_ADAPT_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_BACKGROUND */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_BACKGROUND_ADDR 0x020004FC
#define RX_SLICER_THRESHOLD_BACKGROUND_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for slicer adapt mu */
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_MU_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_MU_NT_MASK 0x0000001F
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   When background_sel_ena==1, this regvalue is used for slicer adapt watchdog */
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_COARSE_MU_NT */
/* DESCRIPTION: */
/*   use this mu in background coarse mode */
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_COARSE_MU_NT_OFFSET 0x00000010
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_COARSE_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_COARSE_MU_NT_MASK 0x001F0000
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_COARSE_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_BACKGROUND_LMS_COARSE_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_COARSE_CFG_NT */
/* DESCRIPTION: */
/*   When slicer adapt watchdog less-then background watchdog_coarse_cfg, use background lms_coarse_mu; otherwise use background lms_mu */
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_COARSE_CFG_NT_OFFSET 0x00000018
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_COARSE_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_COARSE_CFG_NT_MASK 0x1F000000
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_COARSE_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_BACKGROUND_WATCHDOG_COARSE_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_RDREG13 */
/* DESCRIPTION: */
/*   RX slicer threshold EL value */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_RDREG13_ADDR 0x02000500
#define RX_SLICER_THRESHOLD_RDREG13_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Readback EL value for selected branch */
#define RX_SLICER_THRESHOLD_RDREG13_EL_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_RDREG13_EL_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_RDREG13_EL_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_RDREG13_EL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_RDREG13_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Readback EZ value for selected branch */
#define RX_SLICER_THRESHOLD_RDREG13_EZ_NT_OFFSET 0x00000009
#define RX_SLICER_THRESHOLD_RDREG13_EZ_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_RDREG13_EZ_NT_MASK 0x0003FE00
#define RX_SLICER_THRESHOLD_RDREG13_EZ_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_RDREG13_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Readback EH value for selected branch */
#define RX_SLICER_THRESHOLD_RDREG13_EH_NT_OFFSET 0x00000012
#define RX_SLICER_THRESHOLD_RDREG13_EH_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_RDREG13_EH_NT_MASK 0x07FC0000
#define RX_SLICER_THRESHOLD_RDREG13_EH_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_RDREG13_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_RDREG14 */
/* DESCRIPTION: */
/*   RX slicer threshold LOW value */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_RDREG14_ADDR 0x02000504
#define RX_SLICER_THRESHOLD_RDREG14_SIZE 32

/* FIELD: UPP_NT */
/* DESCRIPTION: */
/*   Readback settled value of Upper Target adaption */
#define RX_SLICER_THRESHOLD_RDREG14_UPP_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_RDREG14_UPP_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_RDREG14_UPP_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_RDREG14_UPP_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_RDREG14_UPP_NT_RESET_VALUE 0x00000000

/* FIELD: LOW_NT */
/* DESCRIPTION: */
/*   Readback settled value of Lower Target adaption */
#define RX_SLICER_THRESHOLD_RDREG14_LOW_NT_OFFSET 0x00000009
#define RX_SLICER_THRESHOLD_RDREG14_LOW_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_RDREG14_LOW_NT_MASK 0x0003FE00
#define RX_SLICER_THRESHOLD_RDREG14_LOW_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_RDREG14_LOW_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG1 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG1_ADDR 0x02000508
#define RX_SLICER_THRESHOLD_REG1_SIZE 32

/* FIELD: BRANCH_SEL_A */
/* DESCRIPTION: */
/*   Branch Selection */
#define RX_SLICER_THRESHOLD_REG1_BRANCH_SEL_A_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG1_BRANCH_SEL_A_BITWIDTH 0x00000008
#define RX_SLICER_THRESHOLD_REG1_BRANCH_SEL_A_MASK 0x000000FF
#define RX_SLICER_THRESHOLD_REG1_BRANCH_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BRANCH_SEL_A_RESET_VALUE 0x00000000

/* FIELD: AUTOLOAD_ENA_A */
/* DESCRIPTION: */
/*   Autoload enable */
#define RX_SLICER_THRESHOLD_REG1_AUTOLOAD_ENA_A_OFFSET 0x00000008
#define RX_SLICER_THRESHOLD_REG1_AUTOLOAD_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_AUTOLOAD_ENA_A_MASK 0x00000100
#define RX_SLICER_THRESHOLD_REG1_AUTOLOAD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_AUTOLOAD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_ALL_BRANCHES_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to all branches */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_ALL_BRANCHES_ENA_A_OFFSET 0x00000009
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_ALL_BRANCHES_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_ALL_BRANCHES_ENA_A_MASK 0x00000200
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_ALL_BRANCHES_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_ALL_BRANCHES_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_0_7_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 0 - 7 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_0_7_ENA_A_OFFSET 0x0000000A
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_0_7_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_0_7_ENA_A_MASK 0x00000400
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_0_7_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_0_7_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_8_15_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 8 - 15 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_8_15_ENA_A_OFFSET 0x0000000B
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_8_15_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_8_15_ENA_A_MASK 0x00000800
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_8_15_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_8_15_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_16_23_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 16 - 23 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_16_23_ENA_A_OFFSET 0x0000000C
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_16_23_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_16_23_ENA_A_MASK 0x00001000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_16_23_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_16_23_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_24_31_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 24 - 31 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_24_31_ENA_A_OFFSET 0x0000000D
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_24_31_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_24_31_ENA_A_MASK 0x00002000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_24_31_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_24_31_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_32_39_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 32 - 39 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_32_39_ENA_A_OFFSET 0x0000000E
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_32_39_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_32_39_ENA_A_MASK 0x00004000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_32_39_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_32_39_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_40_47_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 40 - 47 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_40_47_ENA_A_OFFSET 0x0000000F
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_40_47_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_40_47_ENA_A_MASK 0x00008000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_40_47_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_40_47_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_48_55_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 48 - 55 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_48_55_ENA_A_OFFSET 0x00000010
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_48_55_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_48_55_ENA_A_MASK 0x00010000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_48_55_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_48_55_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BROADCAST_BRANCHES_56_63_ENA_A */
/* DESCRIPTION: */
/*   Broadcast slicer threshold overrides to branches 56 - 63 */
/*   0 - Normal operation */
/*   1 - Broadcast overrides */
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_56_63_ENA_A_OFFSET 0x00000011
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_56_63_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_56_63_ENA_A_MASK 0x00020000
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_56_63_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG1_BROADCAST_BRANCHES_56_63_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG10 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG10_ADDR 0x0200050C
#define RX_SLICER_THRESHOLD_REG10_SIZE 32

/* FIELD: ADAPT_MODE_NT */
/* DESCRIPTION: */
/*   Mode selection: adapted serially one after another */
/*   0  el (averages upper and lower targets) */
/*   1 - ez (averages upper and lower targets) */
/*   2 - eh (averages upper and lower targets) */
/*   3  fom (subtracts upper  lower targets) */
#define RX_SLICER_THRESHOLD_REG10_ADAPT_MODE_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG10_ADAPT_MODE_NT_BITWIDTH 0x00000002
#define RX_SLICER_THRESHOLD_REG10_ADAPT_MODE_NT_MASK 0x00000003
#define RX_SLICER_THRESHOLD_REG10_ADAPT_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG10_ADAPT_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG11 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG11_ADDR 0x02000510
#define RX_SLICER_THRESHOLD_REG11_SIZE 32

/* FIELD: FOM_NT */
/* DESCRIPTION: */
/*   Status: FOM value */
#define RX_SLICER_THRESHOLD_REG11_FOM_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG11_FOM_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG11_FOM_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_REG11_FOM_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_REG11_FOM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG12 */
/* DESCRIPTION: */
/*   Debug branch select Register */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG12_ADDR 0x02000514
#define RX_SLICER_THRESHOLD_REG12_SIZE 32

/* FIELD: DBG_BRANCH_SEL_NT */
/* DESCRIPTION: */
/*   Debug branch select for threshold values */
#define RX_SLICER_THRESHOLD_REG12_DBG_BRANCH_SEL_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG12_DBG_BRANCH_SEL_NT_BITWIDTH 0x00000006
#define RX_SLICER_THRESHOLD_REG12_DBG_BRANCH_SEL_NT_MASK 0x0000003F
#define RX_SLICER_THRESHOLD_REG12_DBG_BRANCH_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG12_DBG_BRANCH_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG13 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG13_ADDR 0x02000518
#define RX_SLICER_THRESHOLD_REG13_SIZE 32

/* FIELD: LOCK_CNTR_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to modify threshold after cdr adapt start asserted */
#define RX_SLICER_THRESHOLD_REG13_LOCK_CNTR_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG13_LOCK_CNTR_NT_BITWIDTH 0x00000008
#define RX_SLICER_THRESHOLD_REG13_LOCK_CNTR_NT_MASK 0x000000FF
#define RX_SLICER_THRESHOLD_REG13_LOCK_CNTR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG13_LOCK_CNTR_NT_RESET_VALUE 0x00000000

/* FIELD: LOCK_MOD_EH_NT */
/* DESCRIPTION: */
/*   Value to increment EZ by to create EH during modified threshold */
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EH_NT_OFFSET 0x00000008
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EH_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EH_NT_MASK 0x0001FF00
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EH_NT_RESET_VALUE 0x00000001

/* FIELD: LOCK_MOD_EL_NT */
/* DESCRIPTION: */
/*   Value to decrement EZ by to create EH during modified threshold */
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EL_NT_OFFSET 0x00000011
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EL_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EL_NT_MASK 0x03FE0000
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG13_LOCK_MOD_EL_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG15 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG15_ADDR 0x0200051C
#define RX_SLICER_THRESHOLD_REG15_SIZE 32

/* FIELD: FOM_THRESHOLD_NT */
/* DESCRIPTION: */
/*   fom_gt_threshold_nt = (FOM greater-than regvalue) */
#define RX_SLICER_THRESHOLD_REG15_FOM_THRESHOLD_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG15_FOM_THRESHOLD_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG15_FOM_THRESHOLD_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_REG15_FOM_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG15_FOM_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG16 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG16_ADDR 0x02000520
#define RX_SLICER_THRESHOLD_REG16_SIZE 32

/* FIELD: FOM_GT_THRESHOLD_NT */
/* DESCRIPTION: */
/*   1-bit result of FOM greater-than calculation.  */
/*   1=greater than  */
/*   0=less-than-equal-to */
#define RX_SLICER_THRESHOLD_REG16_FOM_GT_THRESHOLD_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG16_FOM_GT_THRESHOLD_NT_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG16_FOM_GT_THRESHOLD_NT_MASK 0x00000001
#define RX_SLICER_THRESHOLD_REG16_FOM_GT_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_REG16_FOM_GT_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG2 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG2_ADDR 0x02000524
#define RX_SLICER_THRESHOLD_REG2_SIZE 32

/* FIELD: OVRD_EL_NT */
/* DESCRIPTION: */
/*   Sets EL bypass value when bypass_ena */
#define RX_SLICER_THRESHOLD_REG2_OVRD_EL_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG2_OVRD_EL_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG2_OVRD_EL_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_REG2_OVRD_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG2_OVRD_EL_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_EZ_NT */
/* DESCRIPTION: */
/*   Sets EZ bypass value when bypass_ena */
#define RX_SLICER_THRESHOLD_REG2_OVRD_EZ_NT_OFFSET 0x00000009
#define RX_SLICER_THRESHOLD_REG2_OVRD_EZ_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG2_OVRD_EZ_NT_MASK 0x0003FE00
#define RX_SLICER_THRESHOLD_REG2_OVRD_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG2_OVRD_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: OVRD_EH_NT */
/* DESCRIPTION: */
/*   Sets EH bypass value when bypass_ena */
#define RX_SLICER_THRESHOLD_REG2_OVRD_EH_NT_OFFSET 0x00000012
#define RX_SLICER_THRESHOLD_REG2_OVRD_EH_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG2_OVRD_EH_NT_MASK 0x07FC0000
#define RX_SLICER_THRESHOLD_REG2_OVRD_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG2_OVRD_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG3 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG3_ADDR 0x02000528
#define RX_SLICER_THRESHOLD_REG3_SIZE 32

/* FIELD: INIT_EL_NT */
/* DESCRIPTION: */
/*   Initialization value for EL across all branches */
#define RX_SLICER_THRESHOLD_REG3_INIT_EL_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG3_INIT_EL_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG3_INIT_EL_NT_MASK 0x000001FF
#define RX_SLICER_THRESHOLD_REG3_INIT_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG3_INIT_EL_NT_RESET_VALUE 0x000001DE

/* FIELD: INIT_EZ_NT */
/* DESCRIPTION: */
/*   Initialization value for EZ across all branches */
#define RX_SLICER_THRESHOLD_REG3_INIT_EZ_NT_OFFSET 0x00000009
#define RX_SLICER_THRESHOLD_REG3_INIT_EZ_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG3_INIT_EZ_NT_MASK 0x0003FE00
#define RX_SLICER_THRESHOLD_REG3_INIT_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG3_INIT_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_EH_NT */
/* DESCRIPTION: */
/*   Initialization value for EH across all branches */
#define RX_SLICER_THRESHOLD_REG3_INIT_EH_NT_OFFSET 0x00000012
#define RX_SLICER_THRESHOLD_REG3_INIT_EH_NT_BITWIDTH 0x00000009
#define RX_SLICER_THRESHOLD_REG3_INIT_EH_NT_MASK 0x07FC0000
#define RX_SLICER_THRESHOLD_REG3_INIT_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG3_INIT_EH_NT_RESET_VALUE 0x00000021

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG4 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG4_ADDR 0x0200052C
#define RX_SLICER_THRESHOLD_REG4_SIZE 32

/* FIELD: LOW_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the lower adapt distribution target plus weight: regvalue/512 */
#define RX_SLICER_THRESHOLD_REG4_LOW_PLUS_WEIGHT_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG4_LOW_PLUS_WEIGHT_NT_BITWIDTH 0x0000000A
#define RX_SLICER_THRESHOLD_REG4_LOW_PLUS_WEIGHT_NT_MASK 0x000003FF
#define RX_SLICER_THRESHOLD_REG4_LOW_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG4_LOW_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: LOW_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the lower adapt distribution target neg weight: regvalue/512 */
#define RX_SLICER_THRESHOLD_REG4_LOW_SUB_WEIGHT_NT_OFFSET 0x00000010
#define RX_SLICER_THRESHOLD_REG4_LOW_SUB_WEIGHT_NT_BITWIDTH 0x0000000A
#define RX_SLICER_THRESHOLD_REG4_LOW_SUB_WEIGHT_NT_MASK 0x03FF0000
#define RX_SLICER_THRESHOLD_REG4_LOW_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG4_LOW_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG5 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG5_ADDR 0x02000530
#define RX_SLICER_THRESHOLD_REG5_SIZE 32

/* FIELD: UPP_PLUS_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the upper adapt distribution target plus weight: regvalue/512 */
#define RX_SLICER_THRESHOLD_REG5_UPP_PLUS_WEIGHT_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG5_UPP_PLUS_WEIGHT_NT_BITWIDTH 0x0000000A
#define RX_SLICER_THRESHOLD_REG5_UPP_PLUS_WEIGHT_NT_MASK 0x000003FF
#define RX_SLICER_THRESHOLD_REG5_UPP_PLUS_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG5_UPP_PLUS_WEIGHT_NT_RESET_VALUE 0x00000000

/* FIELD: UPP_SUB_WEIGHT_NT */
/* DESCRIPTION: */
/*   Sets the upper adapt distribution target neg weight: regvalue/512 */
#define RX_SLICER_THRESHOLD_REG5_UPP_SUB_WEIGHT_NT_OFFSET 0x00000010
#define RX_SLICER_THRESHOLD_REG5_UPP_SUB_WEIGHT_NT_BITWIDTH 0x0000000A
#define RX_SLICER_THRESHOLD_REG5_UPP_SUB_WEIGHT_NT_MASK 0x03FF0000
#define RX_SLICER_THRESHOLD_REG5_UPP_SUB_WEIGHT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG5_UPP_SUB_WEIGHT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG6 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG6_ADDR 0x02000534
#define RX_SLICER_THRESHOLD_REG6_SIZE 32

/* FIELD: BRANCH_DISABLE1_NT */
/* DESCRIPTION: */
/*   disable branch 0 31 */
#define RX_SLICER_THRESHOLD_REG6_BRANCH_DISABLE1_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG6_BRANCH_DISABLE1_NT_BITWIDTH 0x00000020
#define RX_SLICER_THRESHOLD_REG6_BRANCH_DISABLE1_NT_MASK 0xFFFFFFFF
#define RX_SLICER_THRESHOLD_REG6_BRANCH_DISABLE1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG6_BRANCH_DISABLE1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG7 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG7_ADDR 0x02000538
#define RX_SLICER_THRESHOLD_REG7_SIZE 32

/* FIELD: BRANCH_DISABLE2_NT */
/* DESCRIPTION: */
/*   disable branch 32 63 */
#define RX_SLICER_THRESHOLD_REG7_BRANCH_DISABLE2_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG7_BRANCH_DISABLE2_NT_BITWIDTH 0x00000020
#define RX_SLICER_THRESHOLD_REG7_BRANCH_DISABLE2_NT_MASK 0xFFFFFFFF
#define RX_SLICER_THRESHOLD_REG7_BRANCH_DISABLE2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG7_BRANCH_DISABLE2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG8 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG8_ADDR 0x0200053C
#define RX_SLICER_THRESHOLD_REG8_SIZE 32

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   lms mu */
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_NT_MASK 0x0000001F
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   lms mu dir */
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_DIR_NT_OFFSET 0x00000005
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_DIR_NT_MASK 0x00000020
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_ENA_A */
/* DESCRIPTION: */
/*   When set to 1, reinitializes all EH/EL/EZ values to initialization, resets FSM to init state */
#define RX_SLICER_THRESHOLD_REG8_INIT_ENA_A_OFFSET 0x00000006
#define RX_SLICER_THRESHOLD_REG8_INIT_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_INIT_ENA_A_MASK 0x00000040
#define RX_SLICER_THRESHOLD_REG8_INIT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_INIT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   bypass enable */
#define RX_SLICER_THRESHOLD_REG8_BYPASS_ENA_A_OFFSET 0x00000007
#define RX_SLICER_THRESHOLD_REG8_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_BYPASS_ENA_A_MASK 0x00000080
#define RX_SLICER_THRESHOLD_REG8_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_CFG_NT */
/* DESCRIPTION: */
/*   During Slicer adaption, specifies watchdog duration: 2**regvalue number of cycles. */
/*   In bonded mode, duration ~  2**regvalue clock cycles. */
/*   In unbonded mode, duration ~ 2**regvalue * num_branch clock cycles. */
#define RX_SLICER_THRESHOLD_REG8_WATCHDOG_CFG_NT_OFFSET 0x00000008
#define RX_SLICER_THRESHOLD_REG8_WATCHDOG_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_REG8_WATCHDOG_CFG_NT_MASK 0x00001F00
#define RX_SLICER_THRESHOLD_REG8_WATCHDOG_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_WATCHDOG_CFG_NT_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_NBONDED_A */
/* DESCRIPTION: */
/*   1 unbonded, 0 bonded mode sel */
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_NBONDED_A_OFFSET 0x0000000D
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_NBONDED_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_NBONDED_A_MASK 0x00002000
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_NBONDED_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_NBONDED_A_RESET_VALUE 0x00000000

/* FIELD: MEASURE_HOLD_ENA_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_THRESHOLD_REG8_MEASURE_HOLD_ENA_A_OFFSET 0x0000000E
#define RX_SLICER_THRESHOLD_REG8_MEASURE_HOLD_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_MEASURE_HOLD_ENA_A_MASK 0x00004000
#define RX_SLICER_THRESHOLD_REG8_MEASURE_HOLD_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_MEASURE_HOLD_ENA_A_RESET_VALUE 0x00000000

/* FIELD: START_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded start branch */
#define RX_SLICER_THRESHOLD_REG8_START_BRANCH_NT_OFFSET 0x00000010
#define RX_SLICER_THRESHOLD_REG8_START_BRANCH_NT_BITWIDTH 0x00000006
#define RX_SLICER_THRESHOLD_REG8_START_BRANCH_NT_MASK 0x003F0000
#define RX_SLICER_THRESHOLD_REG8_START_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_START_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: ADAPT_ENA_A */
/* DESCRIPTION: */
/*   adapt enable */
#define RX_SLICER_THRESHOLD_REG8_ADAPT_ENA_A_OFFSET 0x00000016
#define RX_SLICER_THRESHOLD_REG8_ADAPT_ENA_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_ADAPT_ENA_A_MASK 0x00400000
#define RX_SLICER_THRESHOLD_REG8_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_ADAPT_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_START_A */
/* DESCRIPTION: */
/*   adapt start */
#define RX_SLICER_THRESHOLD_REG8_ADAPT_START_A_OFFSET 0x00000017
#define RX_SLICER_THRESHOLD_REG8_ADAPT_START_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_ADAPT_START_A_MASK 0x00800000
#define RX_SLICER_THRESHOLD_REG8_ADAPT_START_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_ADAPT_START_A_RESET_VALUE 0x00000000

/* FIELD: UNBONDED_STOP_BRANCH_NT */
/* DESCRIPTION: */
/*   unbonded stop branch */
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_STOP_BRANCH_NT_OFFSET 0x00000018
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_STOP_BRANCH_NT_BITWIDTH 0x00000006
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_STOP_BRANCH_NT_MASK 0x3F000000
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_STOP_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_UNBONDED_STOP_BRANCH_NT_RESET_VALUE 0x00000000

/* FIELD: FOM_INVERT_A */
/* DESCRIPTION: */
/*   invert FOM output enable */
#define RX_SLICER_THRESHOLD_REG8_FOM_INVERT_A_OFFSET 0x0000001E
#define RX_SLICER_THRESHOLD_REG8_FOM_INVERT_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_REG8_FOM_INVERT_A_MASK 0x40000000
#define RX_SLICER_THRESHOLD_REG8_FOM_INVERT_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG8_FOM_INVERT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_REG9 */
/* DESCRIPTION: */
/*   Overrides for the DBE slicer thresholds. Controlled by the adaption state machine in normal operation. */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_REG9_ADDR 0x02000540
#define RX_SLICER_THRESHOLD_REG9_SIZE 32

/* FIELD: LMS_COARSE_MU_NT */
/* DESCRIPTION: */
/*   use this mu in coarse mode */
#define RX_SLICER_THRESHOLD_REG9_LMS_COARSE_MU_NT_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_REG9_LMS_COARSE_MU_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_REG9_LMS_COARSE_MU_NT_MASK 0x0000001F
#define RX_SLICER_THRESHOLD_REG9_LMS_COARSE_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG9_LMS_COARSE_MU_NT_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_COARSE_CFG_NT */
/* DESCRIPTION: */
/*   When slicer adapt watchdog less-then watchdog_coarse_cfg, use lms_coarse_mu; otherwise use lms_mu */
#define RX_SLICER_THRESHOLD_REG9_WATCHDOG_COARSE_CFG_NT_OFFSET 0x00000008
#define RX_SLICER_THRESHOLD_REG9_WATCHDOG_COARSE_CFG_NT_BITWIDTH 0x00000005
#define RX_SLICER_THRESHOLD_REG9_WATCHDOG_COARSE_CFG_NT_MASK 0x00001F00
#define RX_SLICER_THRESHOLD_REG9_WATCHDOG_COARSE_CFG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SLICER_THRESHOLD_REG9_WATCHDOG_COARSE_CFG_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SLICER_THRESHOLD_STATUS */
/* DESCRIPTION: */
/*   adapt state */
/* ------------------------------------- */
#define RX_SLICER_THRESHOLD_STATUS_ADDR 0x02000544
#define RX_SLICER_THRESHOLD_STATUS_SIZE 32

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   Status: slicer adaption is done */
#define RX_SLICER_THRESHOLD_STATUS_LOCK_A_OFFSET 0x00000000
#define RX_SLICER_THRESHOLD_STATUS_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_LOCK_A_MASK 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_STATUS_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: LOW_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_THRESHOLD_STATUS_LOW_DERIV_LOCK_A_OFFSET 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_LOW_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_LOW_DERIV_LOCK_A_MASK 0x00000002
#define RX_SLICER_THRESHOLD_STATUS_LOW_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_STATUS_LOW_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: UPP_DERIV_LOCK_A */
/* DESCRIPTION: */
/*   deprecated */
#define RX_SLICER_THRESHOLD_STATUS_UPP_DERIV_LOCK_A_OFFSET 0x00000002
#define RX_SLICER_THRESHOLD_STATUS_UPP_DERIV_LOCK_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_UPP_DERIV_LOCK_A_MASK 0x00000004
#define RX_SLICER_THRESHOLD_STATUS_UPP_DERIV_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_STATUS_UPP_DERIV_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: WATCHDOG_TIMEOUT_A */
/* DESCRIPTION: */
/*   Status: watchdog done */
#define RX_SLICER_THRESHOLD_STATUS_WATCHDOG_TIMEOUT_A_OFFSET 0x00000003
#define RX_SLICER_THRESHOLD_STATUS_WATCHDOG_TIMEOUT_A_BITWIDTH 0x00000001
#define RX_SLICER_THRESHOLD_STATUS_WATCHDOG_TIMEOUT_A_MASK 0x00000008
#define RX_SLICER_THRESHOLD_STATUS_WATCHDOG_TIMEOUT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_STATUS_WATCHDOG_TIMEOUT_A_RESET_VALUE 0x00000000

/* FIELD: ADAPT_STATE_A */
/* DESCRIPTION: */
/*   adapt_state */
#define RX_SLICER_THRESHOLD_STATUS_ADAPT_STATE_A_OFFSET 0x00000004
#define RX_SLICER_THRESHOLD_STATUS_ADAPT_STATE_A_BITWIDTH 0x00000004
#define RX_SLICER_THRESHOLD_STATUS_ADAPT_STATE_A_MASK 0x000000F0
#define RX_SLICER_THRESHOLD_STATUS_ADAPT_STATE_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SLICER_THRESHOLD_STATUS_ADAPT_STATE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_RDREG1 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_RDREG1_ADDR 0x02000548
#define RX_SSCM_DLPF_RDREG1_SIZE 32

/* FIELD: DLPF_INTEGRAL_ACCUMULATOR_NT */
/* DESCRIPTION: */
/*   DLPF integral accumlator value */
#define RX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_OFFSET 0x00000000
#define RX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_BITWIDTH 0x00000016
#define RX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_MASK 0x003FFFFF
#define RX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_RDREG2 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_RDREG2_ADDR 0x0200054C
#define RX_SSCM_DLPF_RDREG2_SIZE 32

/* FIELD: IIR_LPF_NT */
/* DESCRIPTION: */
/*   IIR LPF value */
#define RX_SSCM_DLPF_RDREG2_IIR_LPF_NT_OFFSET 0x00000000
#define RX_SSCM_DLPF_RDREG2_IIR_LPF_NT_BITWIDTH 0x0000000C
#define RX_SSCM_DLPF_RDREG2_IIR_LPF_NT_MASK 0x00000FFF
#define RX_SSCM_DLPF_RDREG2_IIR_LPF_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_DLPF_RDREG2_IIR_LPF_NT_RESET_VALUE 0x00000000

/* FIELD: CTL_AFE_DS_OSC_INT_NT */
/* DESCRIPTION: */
/*   AFE OSC integral control value */
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_OFFSET 0x00000010
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_BITWIDTH 0x00000008
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_MASK 0x00FF0000
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_RESET_VALUE 0x00000000

/* FIELD: CTL_AFE_DS_PROP_ADJ_NT */
/* DESCRIPTION: */
/*   AFE proportional gain value */
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_OFFSET 0x00000018
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_MASK 0x0F000000
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_RESET_VALUE 0x00000000

/* FIELD: PROP_ADJ_ACCUMULATOR_NT */
/* DESCRIPTION: */
/*   proportional gain accumulator value */
#define RX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_OFFSET 0x0000001C
#define RX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_MASK 0xF0000000
#define RX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_REG1 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_REG1_ADDR 0x02000550
#define RX_SSCM_DLPF_REG1_SIZE 32

/* FIELD: DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A */
/* DESCRIPTION: */
/*   1: frozen the integral accumulator */
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_OFFSET 0x00000000
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_MASK 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_INTEGRAL_POLARITY_INVERT_NT */
/* DESCRIPTION: */
/*   invert the integral accumulator increase/decrease function */
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_OFFSET 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_MASK 0x00000002
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_CHANGE_MAGNITUDE_NT */
/* DESCRIPTION: */
/*   dlpf change magnitude control (integral gain) to apply in CDR Acquisition */
/*   1 - 2 */
/*   2 - 4 */
/*   3 - 8 */
/*   4 - 16 */
/*   5 - 32 */
/*   6 - 64 */
/*   7 - 128 */
/*   8 - 256 */
/*   9 - 512 */
/*   10 - 1024 */
/*   11 - 2048 */
/*   12 to 15 - 4096 */
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_OFFSET 0x00000002
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_MASK 0x0000003C
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_RESET_VALUE 0x00000007

/* FIELD: DLPF_CHANGE_MAGNITUDE_LOCKED_NT */
/* DESCRIPTION: */
/*   dlpf change magnitude control (integral gain) to apply in CDR LOCK  */
/*   1 - 2 */
/*   2 - 4 */
/*   3 - 8 */
/*   4 - 16 */
/*   5 - 32 */
/*   6 - 64 */
/*   7 - 128 */
/*   8 - 256 */
/*   9 - 512 */
/*   10 - 1024 */
/*   11 - 2048 */
/*   12 to 15 - 4096 */
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_LOCKED_NT_OFFSET 0x00000006
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_LOCKED_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_LOCKED_NT_MASK 0x000003C0
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_LOCKED_NT_RESET_VALUE 0x00000007

/* FIELD: DLPF_INTEGRAL_GAIN_LOAD_A */
/* DESCRIPTION: */
/*   1: load the integral path gain */
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_OFFSET 0x0000000A
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_MASK 0x00000400
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_ENABLE_A */
/* DESCRIPTION: */
/*   enable the integral path function */
#define RX_SSCM_DLPF_REG1_DLPF_ENABLE_A_OFFSET 0x0000000B
#define RX_SSCM_DLPF_REG1_DLPF_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_ENABLE_A_MASK 0x00000800
#define RX_SSCM_DLPF_REG1_DLPF_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_PROP_POLARITY_INVERT_NT */
/* DESCRIPTION: */
/*   Inverts proportional path polarity */
#define RX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_OFFSET 0x0000000C
#define RX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_MASK 0x00001000
#define RX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_OSC_INT_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable the integral path function */
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_OFFSET 0x0000000D
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_MASK 0x00002000
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_OSC_INT_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   bypass value for the integral path function */
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_OFFSET 0x00000010
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_BITWIDTH 0x00000008
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_MASK 0x00FF0000
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_REG2 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_REG2_ADDR 0x02000554
#define RX_SSCM_DLPF_REG2_SIZE 32

/* FIELD: PROP_IIR_LPF_LOW_THRESHOLD_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control  */
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_OFFSET 0x00000000
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_BITWIDTH 0x00000007
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_MASK 0x0000007F
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_RESET_VALUE 0x0000000A

/* FIELD: PROP_IIR_LPF_HIGH_THRESHOLD_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control  */
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_OFFSET 0x00000007
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_BITWIDTH 0x00000007
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_MASK 0x00003F80
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_RESET_VALUE 0x00000025

/* FIELD: PROP_ADJ_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable for proportional gain control */
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_OFFSET 0x0000000E
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_MASK 0x00004000
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_RESET_VALUE 0x00000001

/* FIELD: PROP_IIR_LPF_FEEDFORWARD_GAIN_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control  */
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_OFFSET 0x00000010
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_MASK 0x000F0000
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_RESET_VALUE 0x00000004

/* FIELD: PROP_ADJ_MINIMUM_NT */
/* DESCRIPTION: */
/*   sets the minimum prop_adj setting during CDR acquisition, has priority over prop_adj_bypass_value */
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_OFFSET 0x00000014
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_MASK 0x00F00000
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_RESET_VALUE 0x00000000

/* FIELD: PROP_ADJ_MAXIMUM_NT */
/* DESCRIPTION: */
/*   sets the maximum prop_adj setting during CDR acquisition, has priority over prop_adj_bypass_value */
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_OFFSET 0x00000018
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_MASK 0x0F000000
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_RESET_VALUE 0x0000000F

/* FIELD: PROP_ADJ_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   bypass value for proportional gain during CDR acquisition, min/max has priority */
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_OFFSET 0x0000001C
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_MASK 0xF0000000
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_REG3 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_REG3_ADDR 0x02000558
#define RX_SSCM_DLPF_REG3_SIZE 32

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   enable dither function */
#define RX_SSCM_DLPF_REG3_DITHER_ENABLE_A_OFFSET 0x00000000
#define RX_SSCM_DLPF_REG3_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG3_DITHER_ENABLE_A_MASK 0x00000001
#define RX_SSCM_DLPF_REG3_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG3_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   capture the RO data */
#define RX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_OFFSET 0x00000001
#define RX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_MASK 0x00000002
#define RX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   enable cycling function */
#define RX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_OFFSET 0x00000002
#define RX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_MASK 0x00000004
#define RX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count */
#define RX_SSCM_DLPF_REG3_CYCLING_MAX_NT_OFFSET 0x00000003
#define RX_SSCM_DLPF_REG3_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define RX_SSCM_DLPF_REG3_CYCLING_MAX_NT_MASK 0x000003F8
#define RX_SSCM_DLPF_REG3_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG3_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count */
#define RX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_OFFSET 0x0000000A
#define RX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define RX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_MASK 0x0001FC00
#define RX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_REG4 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_REG4_ADDR 0x0200055C
#define RX_SSCM_DLPF_REG4_SIZE 32

/* FIELD: DLPF_ACCUM_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   bypass value for the integral path accumulator */
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_OFFSET 0x00000000
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_BITWIDTH 0x00000016
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_MASK 0x003FFFFF
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_ACCUM_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable the integral path accumulator */
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_OFFSET 0x00000016
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_BITWIDTH 0x00000001
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_MASK 0x00400000
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_DLPF_REG5 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_DLPF_REG5_ADDR 0x02000560
#define RX_SSCM_DLPF_REG5_SIZE 32

/* FIELD: PROP_ADJ_MINIMUM_LOCKED_NT */
/* DESCRIPTION: */
/*   sets the minimum prop_adj setting during CDR lock, has priority over prop_adj_bypass_value_locked */
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MINIMUM_LOCKED_NT_OFFSET 0x00000000
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MINIMUM_LOCKED_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MINIMUM_LOCKED_NT_MASK 0x0000000F
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MINIMUM_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MINIMUM_LOCKED_NT_RESET_VALUE 0x00000000

/* FIELD: PROP_ADJ_MAXIMUM_LOCKED_NT */
/* DESCRIPTION: */
/*   sets the maximum prop_adj setting during CDR lock, has priority over prop_adj_bypass_value_locked */
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MAXIMUM_LOCKED_NT_OFFSET 0x00000004
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MAXIMUM_LOCKED_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MAXIMUM_LOCKED_NT_MASK 0x000000F0
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MAXIMUM_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG5_PROP_ADJ_MAXIMUM_LOCKED_NT_RESET_VALUE 0x0000000F

/* FIELD: PROP_ADJ_BYPASS_VALUE_LOCKED_NT */
/* DESCRIPTION: */
/*   bypass enable for proportional gain during CDR lock, min_lock/max_lock has priority */
#define RX_SSCM_DLPF_REG5_PROP_ADJ_BYPASS_VALUE_LOCKED_NT_OFFSET 0x00000008
#define RX_SSCM_DLPF_REG5_PROP_ADJ_BYPASS_VALUE_LOCKED_NT_BITWIDTH 0x00000004
#define RX_SSCM_DLPF_REG5_PROP_ADJ_BYPASS_VALUE_LOCKED_NT_MASK 0x00000F00
#define RX_SSCM_DLPF_REG5_PROP_ADJ_BYPASS_VALUE_LOCKED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_DLPF_REG5_PROP_ADJ_BYPASS_VALUE_LOCKED_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG1 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG1_ADDR 0x02000564
#define RX_SSCM_FRACDIV_REG1_SIZE 32

/* FIELD: FRACN_VALUE_NT */
/* DESCRIPTION: */
/*   FracnN configuration value */
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_BITWIDTH 0x0000001A
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_MASK 0x03FFFFFF
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: FRACN_ENABLE_A */
/* DESCRIPTION: */
/*   FrancN enable */
#define RX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_OFFSET 0x0000001A
#define RX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_MASK 0x04000000
#define RX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: FRACN_VALUE_LOAD_A */
/* DESCRIPTION: */
/*   FrancN value load enable */
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_OFFSET 0x0000001B
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_MASK 0x08000000
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG2 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG2_ADDR 0x02000568
#define RX_SSCM_FRACDIV_REG2_SIZE 32

/* FIELD: TED_DLPF_GAIN_NT */
/* DESCRIPTION: */
/*   TED dlpf gain control */
/*   0 -1 */
/*   1 - 2 */
/*   2 - 4 */
/*   3. 8 */
/*   4 - 16 */
/*   5 - 32 */
/*   6 - 64 */
/*   7 - 128 */
/*   8 to 15 - 256 */
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_GAIN_NT_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_GAIN_NT_BITWIDTH 0x00000004
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_GAIN_NT_MASK 0x0000000F
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: TED_DLPF_PRE_DSM_NT */
/* DESCRIPTION: */
/*   Enable TED dlpf before DSM */
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_PRE_DSM_NT_OFFSET 0x00000004
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_PRE_DSM_NT_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_PRE_DSM_NT_MASK 0x00000010
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_PRE_DSM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_PRE_DSM_NT_RESET_VALUE 0x00000001

/* FIELD: TED_DLPF_POST_DSM_NT */
/* DESCRIPTION: */
/*   Unused */
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_POST_DSM_NT_OFFSET 0x00000005
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_POST_DSM_NT_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_POST_DSM_NT_MASK 0x00000020
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_POST_DSM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG2_TED_DLPF_POST_DSM_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG3 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG3_ADDR 0x0200056C
#define RX_SSCM_FRACDIV_REG3_SIZE 32

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   enable dither function */
#define RX_SSCM_FRACDIV_REG3_DITHER_ENABLE_A_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG3_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG3_DITHER_ENABLE_A_MASK 0x00000001
#define RX_SSCM_FRACDIV_REG3_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG3_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   enable cycling function */
#define RX_SSCM_FRACDIV_REG3_CYCLING_ENABLE_A_OFFSET 0x00000001
#define RX_SSCM_FRACDIV_REG3_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG3_CYCLING_ENABLE_A_MASK 0x00000002
#define RX_SSCM_FRACDIV_REG3_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG3_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   Capture the RO data */
#define RX_SSCM_FRACDIV_REG3_RO_CSR_CAPTURE_A_OFFSET 0x00000002
#define RX_SSCM_FRACDIV_REG3_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG3_RO_CSR_CAPTURE_A_MASK 0x00000004
#define RX_SSCM_FRACDIV_REG3_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG3_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count */
#define RX_SSCM_FRACDIV_REG3_CYCLING_MAX_NT_OFFSET 0x00000003
#define RX_SSCM_FRACDIV_REG3_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define RX_SSCM_FRACDIV_REG3_CYCLING_MAX_NT_MASK 0x000003F8
#define RX_SSCM_FRACDIV_REG3_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG3_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count */
#define RX_SSCM_FRACDIV_REG3_CYCLING_SEQ_NT_OFFSET 0x0000000A
#define RX_SSCM_FRACDIV_REG3_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define RX_SSCM_FRACDIV_REG3_CYCLING_SEQ_NT_MASK 0x0001FC00
#define RX_SSCM_FRACDIV_REG3_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG3_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG4 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG4_ADDR 0x02000570
#define RX_SSCM_FRACDIV_REG4_SIZE 32

/* FIELD: FRACN_DSM_OUT_NT */
/* DESCRIPTION: */
/*   DSM output */
#define RX_SSCM_FRACDIV_REG4_FRACN_DSM_OUT_NT_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG4_FRACN_DSM_OUT_NT_BITWIDTH 0x0000000C
#define RX_SSCM_FRACDIV_REG4_FRACN_DSM_OUT_NT_MASK 0x00000FFF
#define RX_SSCM_FRACDIV_REG4_FRACN_DSM_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_FRACDIV_REG4_FRACN_DSM_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: SSCM_FRACN_NT */
/* DESCRIPTION: */
/*   FracN control value to AFE */
#define RX_SSCM_FRACDIV_REG4_SSCM_FRACN_NT_OFFSET 0x00000010
#define RX_SSCM_FRACDIV_REG4_SSCM_FRACN_NT_BITWIDTH 0x0000000C
#define RX_SSCM_FRACDIV_REG4_SSCM_FRACN_NT_MASK 0x0FFF0000
#define RX_SSCM_FRACDIV_REG4_SSCM_FRACN_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_SSCM_FRACDIV_REG4_SSCM_FRACN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG5 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG5_ADDR 0x02000574
#define RX_SSCM_FRACDIV_REG5_SIZE 32

/* FIELD: FRACN_BYPASS_A */
/* DESCRIPTION: */
/*   FrancN bypass enable */
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_A_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_A_MASK 0x00000001
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: FRACN_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   12bit PI accumulator update code. 3x+ oversampled in analog domain to manage asynchronous transfer. Constrained as synchronous from the digital side.  */
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_VALUE_NT_OFFSET 0x00000001
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_VALUE_NT_BITWIDTH 0x0000000C
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_VALUE_NT_MASK 0x00001FFE
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG5_FRACN_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG6 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG6_ADDR 0x02000578
#define RX_SSCM_FRACDIV_REG6_SIZE 32

/* FIELD: FRACN_VALUE_2_NT */
/* DESCRIPTION: */
/*   FracnN configuration value */
#define RX_SSCM_FRACDIV_REG6_FRACN_VALUE_2_NT_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG6_FRACN_VALUE_2_NT_BITWIDTH 0x0000001A
#define RX_SSCM_FRACDIV_REG6_FRACN_VALUE_2_NT_MASK 0x03FFFFFF
#define RX_SSCM_FRACDIV_REG6_FRACN_VALUE_2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG6_FRACN_VALUE_2_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_SSCM_FRACDIV_REG7 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define RX_SSCM_FRACDIV_REG7_ADDR 0x0200057C
#define RX_SSCM_FRACDIV_REG7_SIZE 32

/* FIELD: BIT_SLIP_ENABLE_A */
/* DESCRIPTION: */
/*   bit slip enable */
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_ENABLE_A_OFFSET 0x00000000
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_ENABLE_A_BITWIDTH 0x00000001
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_ENABLE_A_MASK 0x00000001
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: BIT_SLIP_VALUE_NT */
/* DESCRIPTION: */
/*   bit slip value */
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_VALUE_NT_OFFSET 0x00000001
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_VALUE_NT_BITWIDTH 0x0000000D
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_VALUE_NT_MASK 0x00003FFE
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: BIT_SLIP_CYCLES_NT */
/* DESCRIPTION: */
/*   bit slip cycles */
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_CYCLES_NT_OFFSET 0x0000000E
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_CYCLES_NT_BITWIDTH 0x00000005
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_CYCLES_NT_MASK 0x0007C000
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_CYCLES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_SSCM_FRACDIV_REG7_BIT_SLIP_CYCLES_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_STAT */
/* DESCRIPTION: */
/*   Observability register for interface */
/* ------------------------------------- */
#define RX_STAT_ADDR 0x02000580
#define RX_STAT_SIZE 32

/* FIELD: OCTL_RX_DATA_VLD */
/* DESCRIPTION: */
/*   Register copy of octl_rx_data_vld */
#define RX_STAT_OCTL_RX_DATA_VLD_OFFSET 0x00000000
#define RX_STAT_OCTL_RX_DATA_VLD_BITWIDTH 0x00000001
#define RX_STAT_OCTL_RX_DATA_VLD_MASK 0x00000001
#define RX_STAT_OCTL_RX_DATA_VLD_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_OCTL_RX_DATA_VLD_RESET_VALUE 0x00000000

/* FIELD: OCTL_RX_LINKEVAL_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_rx_linkeval_ack */
#define RX_STAT_OCTL_RX_LINKEVAL_ACK_OFFSET 0x00000001
#define RX_STAT_OCTL_RX_LINKEVAL_ACK_BITWIDTH 0x00000001
#define RX_STAT_OCTL_RX_LINKEVAL_ACK_MASK 0x00000002
#define RX_STAT_OCTL_RX_LINKEVAL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_OCTL_RX_LINKEVAL_ACK_RESET_VALUE 0x00000000

/* FIELD: OCTL_RX_LINKEVAL_DIR */
/* DESCRIPTION: */
/*   Register copy of octl_rx_linkeval_dir */
#define RX_STAT_OCTL_RX_LINKEVAL_DIR_OFFSET 0x00000002
#define RX_STAT_OCTL_RX_LINKEVAL_DIR_BITWIDTH 0x0000000A
#define RX_STAT_OCTL_RX_LINKEVAL_DIR_MASK 0x00000FFC
#define RX_STAT_OCTL_RX_LINKEVAL_DIR_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_OCTL_RX_LINKEVAL_DIR_RESET_VALUE 0x00000000

/* FIELD: ODAT_RX_SIGNAL_DETECT_A */
/* DESCRIPTION: */
/*   Register copy of odat_rx_signal_detect_a */
#define RX_STAT_ODAT_RX_SIGNAL_DETECT_A_OFFSET 0x0000000C
#define RX_STAT_ODAT_RX_SIGNAL_DETECT_A_BITWIDTH 0x00000001
#define RX_STAT_ODAT_RX_SIGNAL_DETECT_A_MASK 0x00001000
#define RX_STAT_ODAT_RX_SIGNAL_DETECT_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_ODAT_RX_SIGNAL_DETECT_A_RESET_VALUE 0x00000000

/* FIELD: OCTL_PCIE_RX_MARGIN_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_pcie_rx_margin_ack */
#define RX_STAT_OCTL_PCIE_RX_MARGIN_ACK_OFFSET 0x0000000D
#define RX_STAT_OCTL_PCIE_RX_MARGIN_ACK_BITWIDTH 0x00000001
#define RX_STAT_OCTL_PCIE_RX_MARGIN_ACK_MASK 0x00002000
#define RX_STAT_OCTL_PCIE_RX_MARGIN_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_OCTL_PCIE_RX_MARGIN_ACK_RESET_VALUE 0x00000000

/* FIELD: ODAT_RX_BYPASS_A */
/* DESCRIPTION: */
/*   Register copy of odat_rx_bypass_a */
#define RX_STAT_ODAT_RX_BYPASS_A_OFFSET 0x0000000E
#define RX_STAT_ODAT_RX_BYPASS_A_BITWIDTH 0x00000002
#define RX_STAT_ODAT_RX_BYPASS_A_MASK 0x0000C000
#define RX_STAT_ODAT_RX_BYPASS_A_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_ODAT_RX_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: OCTL_RX_LINKEVAL_FOM */
/* DESCRIPTION: */
/*   Register copy of octl_rx_linkeval_fom */
#define RX_STAT_OCTL_RX_LINKEVAL_FOM_OFFSET 0x00000010
#define RX_STAT_OCTL_RX_LINKEVAL_FOM_BITWIDTH 0x00000008
#define RX_STAT_OCTL_RX_LINKEVAL_FOM_MASK 0x00FF0000
#define RX_STAT_OCTL_RX_LINKEVAL_FOM_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_OCTL_RX_LINKEVAL_FOM_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_STATE_RATE_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_rx_state_rate_nt */
#define RX_STAT_ICTL_RX_STATE_RATE_NT_OFFSET 0x00000018
#define RX_STAT_ICTL_RX_STATE_RATE_NT_BITWIDTH 0x00000003
#define RX_STAT_ICTL_RX_STATE_RATE_NT_MASK 0x07000000
#define RX_STAT_ICTL_RX_STATE_RATE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_ICTL_RX_STATE_RATE_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_TRAINING_MODE_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_rx_training_mode_nt */
#define RX_STAT_ICTL_RX_TRAINING_MODE_NT_OFFSET 0x0000001B
#define RX_STAT_ICTL_RX_TRAINING_MODE_NT_BITWIDTH 0x00000003
#define RX_STAT_ICTL_RX_TRAINING_MODE_NT_MASK 0x38000000
#define RX_STAT_ICTL_RX_TRAINING_MODE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_ICTL_RX_TRAINING_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_RX_BYPASS_ENA */
/* DESCRIPTION: */
/*   Register copy of ictl_rx_bypass_ena */
#define RX_STAT_ICTL_RX_BYPASS_ENA_OFFSET 0x0000001E
#define RX_STAT_ICTL_RX_BYPASS_ENA_BITWIDTH 0x00000001
#define RX_STAT_ICTL_RX_BYPASS_ENA_MASK 0x40000000
#define RX_STAT_ICTL_RX_BYPASS_ENA_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_ICTL_RX_BYPASS_ENA_RESET_VALUE 0x00000000

/* FIELD: IRST_RX_BA */
/* DESCRIPTION: */
/*   Register copy of irst_rx_ba */
#define RX_STAT_IRST_RX_BA_OFFSET 0x0000001F
#define RX_STAT_IRST_RX_BA_BITWIDTH 0x00000001
#define RX_STAT_IRST_RX_BA_MASK 0x80000000
#define RX_STAT_IRST_RX_BA_ACCESS JUPITER_CSR_READ_ONLY
#define RX_STAT_IRST_RX_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_TIADC_AFE_REG1 */
/* DESCRIPTION: */
/*   Configuration registers for the AFE TIADC */
/* ------------------------------------- */
#define RX_TIADC_AFE_REG1_ADDR 0x02000584
#define RX_TIADC_AFE_REG1_SIZE 32

/* FIELD: ADC_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe rx tiadc b3 TIADC bias adjust */
/*   111  +25% */
/*   110  +12.5% */
/*   101  Nominal */
/*   100 -12.5% */
/*   011 -25% */
/*   010 -50% */
/*   001 -62.5 */
/*   000 -75% */
#define RX_TIADC_AFE_REG1_ADC_BIAS_ADJ_NT_OFFSET 0x00000000
#define RX_TIADC_AFE_REG1_ADC_BIAS_ADJ_NT_BITWIDTH 0x00000003
#define RX_TIADC_AFE_REG1_ADC_BIAS_ADJ_NT_MASK 0x00000007
#define RX_TIADC_AFE_REG1_ADC_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: ADC_CKOVERLAP_NT */
/* DESCRIPTION: */
/*   Controls clock overlapp in the s3 samplers/ADC */
/*   11 - Max */
/*   00 - Min */
#define RX_TIADC_AFE_REG1_ADC_CKOVERLAP_NT_OFFSET 0x00000003
#define RX_TIADC_AFE_REG1_ADC_CKOVERLAP_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_ADC_CKOVERLAP_NT_MASK 0x00000018
#define RX_TIADC_AFE_REG1_ADC_CKOVERLAP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_CKOVERLAP_NT_RESET_VALUE 0x00000000

/* FIELD: ADC_NUMBITS_NT */
/* DESCRIPTION: */
/*   Controls number of bits that are resolved in ADC slice (some power savings) */
/*   11 - 8bit */
/*   10 - 7bit */
/*   01 - 6bit */
/*   00 - 5bit */
#define RX_TIADC_AFE_REG1_ADC_NUMBITS_NT_OFFSET 0x00000005
#define RX_TIADC_AFE_REG1_ADC_NUMBITS_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_ADC_NUMBITS_NT_MASK 0x00000060
#define RX_TIADC_AFE_REG1_ADC_NUMBITS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_NUMBITS_NT_RESET_VALUE 0x00000003

/* FIELD: B1_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe rx tiadc b1 bias adjust */
/*   111  +25% */
/*   110  +12.5% */
/*   101  Nominal */
/*   100 -12.5% */
/*   011 -25% */
/*   010 -50% */
/*   001 -62.5 */
/*   000 -75% */
#define RX_TIADC_AFE_REG1_B1_BIAS_ADJ_NT_OFFSET 0x00000007
#define RX_TIADC_AFE_REG1_B1_BIAS_ADJ_NT_BITWIDTH 0x00000003
#define RX_TIADC_AFE_REG1_B1_BIAS_ADJ_NT_MASK 0x00000380
#define RX_TIADC_AFE_REG1_B1_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_B1_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: B2_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe rx tiadc b2 bias adjust */
/*   111  +25% */
/*   110  +12.5% */
/*   101  Nominal */
/*   100 -12.5% */
/*   011 -25% */
/*   010 -50% */
/*   001 -62.5 */
/*   000 -75% */
#define RX_TIADC_AFE_REG1_B2_BIAS_ADJ_NT_OFFSET 0x0000000A
#define RX_TIADC_AFE_REG1_B2_BIAS_ADJ_NT_BITWIDTH 0x00000003
#define RX_TIADC_AFE_REG1_B2_BIAS_ADJ_NT_MASK 0x00001C00
#define RX_TIADC_AFE_REG1_B2_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_B2_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: B2_CKOVERLAP_NT */
/* DESCRIPTION: */
/*   Controls clock overlapp in the s2 samplers */
/*   11 - Max */
/*   00 - Min */
#define RX_TIADC_AFE_REG1_B2_CKOVERLAP_NT_OFFSET 0x0000000D
#define RX_TIADC_AFE_REG1_B2_CKOVERLAP_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_B2_CKOVERLAP_NT_MASK 0x00006000
#define RX_TIADC_AFE_REG1_B2_CKOVERLAP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_B2_CKOVERLAP_NT_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe rx tiadc dcd/iq sensor bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define RX_TIADC_AFE_REG1_DCDIQ_BIAS_ADJ_NT_OFFSET 0x0000000F
#define RX_TIADC_AFE_REG1_DCDIQ_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_DCDIQ_BIAS_ADJ_NT_MASK 0x00018000
#define RX_TIADC_AFE_REG1_DCDIQ_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_DCDIQ_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: ADC_VREF_NT */
/* DESCRIPTION: */
/*   11 - Max VREF */
/*   00 - Min VREF */
#define RX_TIADC_AFE_REG1_ADC_VREF_NT_OFFSET 0x00000011
#define RX_TIADC_AFE_REG1_ADC_VREF_NT_BITWIDTH 0x00000003
#define RX_TIADC_AFE_REG1_ADC_VREF_NT_MASK 0x000E0000
#define RX_TIADC_AFE_REG1_ADC_VREF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_VREF_NT_RESET_VALUE 0x00000003

/* FIELD: ADC_B3DELAY_NT */
/* DESCRIPTION: */
/*   Controls delay through the B3 buffer.  */
#define RX_TIADC_AFE_REG1_ADC_B3DELAY_NT_OFFSET 0x00000014
#define RX_TIADC_AFE_REG1_ADC_B3DELAY_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_ADC_B3DELAY_NT_MASK 0x00300000
#define RX_TIADC_AFE_REG1_ADC_B3DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_B3DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: CLOCK_GEN_2X_ENA_NT */
/* DESCRIPTION: */
/*   RX tiadc clock generator 2x clock path enable */
/*   1 - Enabled */
/*   0 - Disabled */
#define RX_TIADC_AFE_REG1_CLOCK_GEN_2X_ENA_NT_OFFSET 0x00000016
#define RX_TIADC_AFE_REG1_CLOCK_GEN_2X_ENA_NT_BITWIDTH 0x00000001
#define RX_TIADC_AFE_REG1_CLOCK_GEN_2X_ENA_NT_MASK 0x00400000
#define RX_TIADC_AFE_REG1_CLOCK_GEN_2X_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_CLOCK_GEN_2X_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: CLOCK_GEN_10B_ENA_NT */
/* DESCRIPTION: */
/*   RX tiadc clock generator 10b clock path enable */
/*   1 - Enabled */
/*   0 - Disabled */
#define RX_TIADC_AFE_REG1_CLOCK_GEN_10B_ENA_NT_OFFSET 0x00000017
#define RX_TIADC_AFE_REG1_CLOCK_GEN_10B_ENA_NT_BITWIDTH 0x00000001
#define RX_TIADC_AFE_REG1_CLOCK_GEN_10B_ENA_NT_MASK 0x00800000
#define RX_TIADC_AFE_REG1_CLOCK_GEN_10B_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_CLOCK_GEN_10B_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: B2_DELAY_NT */
/* DESCRIPTION: */
/*   Controls B2 input clock delay. Default 01.  */
/*   00 09ps typ/12ps max */
/*   01 10ps typ/13ps max */
/*   10 12ps typ/15ps max */
/*   11 13ps typ/17ps max  */
#define RX_TIADC_AFE_REG1_B2_DELAY_NT_OFFSET 0x00000018
#define RX_TIADC_AFE_REG1_B2_DELAY_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_B2_DELAY_NT_MASK 0x03000000
#define RX_TIADC_AFE_REG1_B2_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_B2_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: B1_VDRV_ADJ_NT */
/* DESCRIPTION: */
/*   Vreg set to 0.75V VDRV will be configured as follows: */
/*   000 1.000*Vreg = 0.750 */
/*   001 1.050*Vreg = 0.787 */
/*   010 1.100*Vreg = 0.825 */
/*   011 1.111*Vreg = 0.833 */
/*   100 1.125*Vreg = 0.844 */
/*   101 1.143*Vreg = 0.857 (default) */
/*   110 1.167*Vreg = 0.875 */
/*   111 1.200*Vreg = 0.900 */
#define RX_TIADC_AFE_REG1_B1_VDRV_ADJ_NT_OFFSET 0x0000001A
#define RX_TIADC_AFE_REG1_B1_VDRV_ADJ_NT_BITWIDTH 0x00000003
#define RX_TIADC_AFE_REG1_B1_VDRV_ADJ_NT_MASK 0x1C000000
#define RX_TIADC_AFE_REG1_B1_VDRV_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_B1_VDRV_ADJ_NT_RESET_VALUE 0x00000005

/* FIELD: ADC_DELAY_NT */
/* DESCRIPTION: */
/*   SAR loop delay programmability. */
/*   11 - Max Delay */
/*   00 - Default, nominal operation.  */
#define RX_TIADC_AFE_REG1_ADC_DELAY_NT_OFFSET 0x0000001D
#define RX_TIADC_AFE_REG1_ADC_DELAY_NT_BITWIDTH 0x00000002
#define RX_TIADC_AFE_REG1_ADC_DELAY_NT_MASK 0x60000000
#define RX_TIADC_AFE_REG1_ADC_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG1_ADC_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_TIADC_AFE_REG2 */
/* DESCRIPTION: */
/*   Configuration registers for the AFE TIADC */
/* ------------------------------------- */
#define RX_TIADC_AFE_REG2_ADDR 0x02000588
#define RX_TIADC_AFE_REG2_SIZE 32

/* FIELD: CLOCK_DIV8DUTY_ENA_NT */
/* DESCRIPTION: */
/*   Clock div8 duty enable.  */
/*   0 = div16  */
/*   1 = div8 */
#define RX_TIADC_AFE_REG2_CLOCK_DIV8DUTY_ENA_NT_OFFSET 0x00000000
#define RX_TIADC_AFE_REG2_CLOCK_DIV8DUTY_ENA_NT_BITWIDTH 0x00000001
#define RX_TIADC_AFE_REG2_CLOCK_DIV8DUTY_ENA_NT_MASK 0x00000001
#define RX_TIADC_AFE_REG2_CLOCK_DIV8DUTY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG2_CLOCK_DIV8DUTY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: CLOCK_DIV8MODE_ENA_NT */
/* DESCRIPTION: */
/*   Clock div8 duty enable.  */
/*   0 = div16  */
/*   1 = div8 */
#define RX_TIADC_AFE_REG2_CLOCK_DIV8MODE_ENA_NT_OFFSET 0x00000001
#define RX_TIADC_AFE_REG2_CLOCK_DIV8MODE_ENA_NT_BITWIDTH 0x00000001
#define RX_TIADC_AFE_REG2_CLOCK_DIV8MODE_ENA_NT_MASK 0x00000002
#define RX_TIADC_AFE_REG2_CLOCK_DIV8MODE_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_TIADC_AFE_REG2_CLOCK_DIV8MODE_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO */
/* DESCRIPTION: */
/*   Fast simulation control */
/* ------------------------------------- */
#define RX_VCO_ADDR 0x0200058C
#define RX_VCO_SIZE 32

/* FIELD: FREQ_NT */
/* DESCRIPTION: */
/*   Specifies frequency for RX PLL in fast sim mode.  */
#define RX_VCO_FREQ_NT_OFFSET 0x00000000
#define RX_VCO_FREQ_NT_BITWIDTH 0x00000010
#define RX_VCO_FREQ_NT_MASK 0x0000FFFF
#define RX_VCO_FREQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_FREQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_RDREG1 */
/* DESCRIPTION: */
/*   Configuration / observability of VCO adaptation block */
/* ------------------------------------- */
#define RX_VCO_ADAPT_RDREG1_ADDR 0x02000590
#define RX_VCO_ADAPT_RDREG1_SIZE 32

/* FIELD: REF_COUNTER_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration reference clock counter */
#define RX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_OFFSET 0x00000000
#define RX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_MASK 0x0000FFFF
#define RX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_COUNTER_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration target clock counter */
#define RX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_MASK 0xFFFF0000
#define RX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_RDREG2 */
/* DESCRIPTION: */
/*   Observability registers for the RX direct synthesizer. */
/* ------------------------------------- */
#define RX_VCO_ADAPT_RDREG2_ADDR 0x02000594
#define RX_VCO_ADAPT_RDREG2_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX VCO oscillator calibrated value */
#define RX_VCO_ADAPT_RDREG2_DS_OSC_CAL_OFFSET 0x00000000
#define RX_VCO_ADAPT_RDREG2_DS_OSC_CAL_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_RDREG2_DS_OSC_CAL_MASK 0x000000FF
#define RX_VCO_ADAPT_RDREG2_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG2_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_ACK_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration acknowledge */
/*   0: no ACK */
/*   1: finished */
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_OFFSET 0x00000008
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_MASK 0x00000100
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   Calibration FSM done indicator */
#define RX_VCO_ADAPT_RDREG2_ACK_OFFSET 0x00000009
#define RX_VCO_ADAPT_RDREG2_ACK_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_RDREG2_ACK_MASK 0x00000200
#define RX_VCO_ADAPT_RDREG2_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG2_ACK_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_RESULT_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration resut. Format Q4.12 */
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_MASK 0xFFFF0000
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define RX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Overrides for the RX direct synthesizer. */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG1_ADDR 0x02000598
#define RX_VCO_ADAPT_REG1_SIZE 32

/* FIELD: DS_OSC_CAL_NT */
/* DESCRIPTION: */
/*   8bit RX SSCM center frequency calibration code */
/*   11111111 - Max center frequency */
/*   00000000 - Min center frequency */
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_MASK 0x000000FF
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - bypass the RX VCO frequency calibration */
#define RX_VCO_ADAPT_REG1_BYPASS_ENA_A_OFFSET 0x00000008
#define RX_VCO_ADAPT_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG1_BYPASS_ENA_A_MASK 0x00000100
#define RX_VCO_ADAPT_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: DS_OSC_CAL_CAP_NT */
/* DESCRIPTION: */
/*   4bit RX SSCM DCO cap center frequency calibration code */
/*   1111 - Max center frequency */
/*   0000 - Min center frequency */
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_OFFSET 0x00000009
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_BITWIDTH 0x00000003
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_MASK 0x00000E00
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_RESET_VALUE 0x00000000

/* FIELD: DS_OSC_CAL_ENA_NT */
/* DESCRIPTION: */
/*   Enables RX SSCM calibration mode in the oscillator.  */
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_OFFSET 0x0000000C
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_MASK 0x00001000
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Overrides for the RX direct synthesizer. */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG2_ADDR 0x0200059C
#define RX_VCO_ADAPT_REG2_SIZE 32

/* FIELD: FREQ_MEASURE_REQ_A */
/* DESCRIPTION: */
/*   RX VCO frequency calibration request */
/*   0: no request */
/*   1: requst */
#define RX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_MASK 0x00000001
#define RX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration timing window */
/*   15: 32768 cycles */
/*   ... */
/*   1: 2 cycles */
/*   0: 1 cycle */
#define RX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_OFFSET 0x00000001
#define RX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define RX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_MASK 0x0000001E
#define RX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_RESET_VALUE 0x00000009

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   RX VCO frequency calibration target. Format Q4.12 */
#define RX_VCO_ADAPT_REG2_FREQ_TARGET_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_REG2_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_REG2_FREQ_TARGET_NT_MASK 0xFFFF0000
#define RX_VCO_ADAPT_REG2_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG2_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Configuration / observability of VCO adaptation block */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG3_ADDR 0x020005A0
#define RX_VCO_ADAPT_REG3_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define RX_VCO_ADAPT_REG3_REQ_A_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG3_REQ_A_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_REQ_A_MASK 0x00000001
#define RX_VCO_ADAPT_REG3_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define RX_VCO_ADAPT_REG3_LOAD_ONLY_NT_OFFSET 0x00000001
#define RX_VCO_ADAPT_REG3_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_LOAD_ONLY_NT_MASK 0x00000002
#define RX_VCO_ADAPT_REG3_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define RX_VCO_ADAPT_REG3_DERIV_TARGET_NT_OFFSET 0x00000002
#define RX_VCO_ADAPT_REG3_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define RX_VCO_ADAPT_REG3_DERIV_TARGET_NT_MASK 0x0000007C
#define RX_VCO_ADAPT_REG3_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define RX_VCO_ADAPT_REG3_DERIV_GAIN_NT_OFFSET 0x00000007
#define RX_VCO_ADAPT_REG3_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define RX_VCO_ADAPT_REG3_DERIV_GAIN_NT_MASK 0x00000780
#define RX_VCO_ADAPT_REG3_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define RX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x0000000B
#define RX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define RX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_MASK 0x0000F800
#define RX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: CHOP_EN_NT */
/* DESCRIPTION: */
/*   Chop enable. 0 - Chopping not enabled. 1 - Chopping enabled. FSM will run twice, asserting chop signal second time, and output the average between the two runs */
#define RX_VCO_ADAPT_REG3_CHOP_EN_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_REG3_CHOP_EN_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_CHOP_EN_NT_MASK 0x00010000
#define RX_VCO_ADAPT_REG3_CHOP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_CHOP_EN_NT_RESET_VALUE 0x00000000

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define RX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_OFFSET 0x00000011
#define RX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_MASK 0x00020000
#define RX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define RX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_OFFSET 0x00000012
#define RX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_MASK 0x00040000
#define RX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define RX_VCO_ADAPT_REG3_OUT_SIGNED_NT_OFFSET 0x00000013
#define RX_VCO_ADAPT_REG3_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_OUT_SIGNED_NT_MASK 0x00080000
#define RX_VCO_ADAPT_REG3_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity. Bit0= d90, Bit1 = d0, Bit2 = iq */
#define RX_VCO_ADAPT_REG3_POLARITY_NT_OFFSET 0x00000014
#define RX_VCO_ADAPT_REG3_POLARITY_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG3_POLARITY_NT_MASK 0x00100000
#define RX_VCO_ADAPT_REG3_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_POLARITY_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define RX_VCO_ADAPT_REG3_STOP_HI_NT_OFFSET 0x00000015
#define RX_VCO_ADAPT_REG3_STOP_HI_NT_BITWIDTH 0x00000002
#define RX_VCO_ADAPT_REG3_STOP_HI_NT_MASK 0x00600000
#define RX_VCO_ADAPT_REG3_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG3_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Configuration / observability of VCO adaptation block */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG4_ADDR 0x020005A4
#define RX_VCO_ADAPT_REG4_SIZE 32

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. */
#define RX_VCO_ADAPT_REG4_INIT_STEP_NT_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG4_INIT_STEP_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG4_INIT_STEP_NT_MASK 0x000000FF
#define RX_VCO_ADAPT_REG4_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG4_INIT_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define RX_VCO_ADAPT_REG4_START_VALUE_NT_OFFSET 0x00000008
#define RX_VCO_ADAPT_REG4_START_VALUE_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG4_START_VALUE_NT_MASK 0x0000FF00
#define RX_VCO_ADAPT_REG4_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG4_START_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define RX_VCO_ADAPT_REG4_MAX_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_REG4_MAX_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG4_MAX_NT_MASK 0x00FF0000
#define RX_VCO_ADAPT_REG4_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG4_MAX_NT_RESET_VALUE 0x000000FF

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define RX_VCO_ADAPT_REG4_MIN_NT_OFFSET 0x00000018
#define RX_VCO_ADAPT_REG4_MIN_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG4_MIN_NT_MASK 0xFF000000
#define RX_VCO_ADAPT_REG4_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG4_MIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Configuration / observability of VCO adaptation block */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG5_ADDR 0x020005A8
#define RX_VCO_ADAPT_REG5_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define RX_VCO_ADAPT_REG5_MAX_ITER_NT_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG5_MAX_ITER_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_REG5_MAX_ITER_NT_MASK 0x0000FFFF
#define RX_VCO_ADAPT_REG5_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG5_MAX_ITER_NT_RESET_VALUE 0x00000064

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define RX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define RX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define RX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: RX_VCO_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Configuration / observability of VCO adaptation block */
/* ------------------------------------- */
#define RX_VCO_ADAPT_REG6_ADDR 0x020005AC
#define RX_VCO_ADAPT_REG6_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define RX_VCO_ADAPT_REG6_LMS_MU1_NT_OFFSET 0x00000000
#define RX_VCO_ADAPT_REG6_LMS_MU1_NT_BITWIDTH 0x00000005
#define RX_VCO_ADAPT_REG6_LMS_MU1_NT_MASK 0x0000001F
#define RX_VCO_ADAPT_REG6_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_LMS_MU1_NT_RESET_VALUE 0x00000006

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define RX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define RX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_MASK 0x00000020
#define RX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define RX_VCO_ADAPT_REG6_LMS_MU2_NT_OFFSET 0x00000008
#define RX_VCO_ADAPT_REG6_LMS_MU2_NT_BITWIDTH 0x00000005
#define RX_VCO_ADAPT_REG6_LMS_MU2_NT_MASK 0x00001F00
#define RX_VCO_ADAPT_REG6_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_LMS_MU2_NT_RESET_VALUE 0x00000003

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define RX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define RX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define RX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_MASK 0x00002000
#define RX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: STEP_NT */
/* DESCRIPTION: */
/*   Step size to use in fine mode. */
#define RX_VCO_ADAPT_REG6_STEP_NT_OFFSET 0x00000010
#define RX_VCO_ADAPT_REG6_STEP_NT_BITWIDTH 0x00000008
#define RX_VCO_ADAPT_REG6_STEP_NT_MASK 0x00FF0000
#define RX_VCO_ADAPT_REG6_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consecutive direction changes that need to occur for lock to occur */
#define RX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_OFFSET 0x00000018
#define RX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define RX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_MASK 0x1F000000
#define RX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VGA */
/* DESCRIPTION: */
/*   Analog RX VGA control register */
/* ------------------------------------- */
#define RX_VGA_ADDR 0x020005B0
#define RX_VGA_SIZE 32

/* FIELD: COARSE_READY_A */
/* DESCRIPTION: */
/*   VGA coarse code is updated on positive edge of this signal and must be stable while it is high.  Allows synchronized update of codes for background adaption.   */
#define RX_VGA_COARSE_READY_A_OFFSET 0x00000003
#define RX_VGA_COARSE_READY_A_BITWIDTH 0x00000001
#define RX_VGA_COARSE_READY_A_MASK 0x00000008
#define RX_VGA_COARSE_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_COARSE_READY_A_RESET_VALUE 0x00000001

/* FIELD: CMOUT_NT */
/* DESCRIPTION: */
/*   Controls the output common mode of the CTLE.  */
/*   111-Maximum common mode */
/*   100-Default */
/*   000-Minimum common mode */
#define RX_VGA_CMOUT_NT_OFFSET 0x00000019
#define RX_VGA_CMOUT_NT_BITWIDTH 0x00000003
#define RX_VGA_CMOUT_NT_MASK 0x0E000000
#define RX_VGA_CMOUT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_CMOUT_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: RX_VGA_REG1 */
/* DESCRIPTION: */
/*   VGA Load Cap LUT with VGA coarse (3 MSB) as index */
/* ------------------------------------- */
#define RX_VGA_REG1_ADDR 0x020005B4
#define RX_VGA_REG1_SIZE 32

/* FIELD: CAP1_LUT_0_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 0 */
#define RX_VGA_REG1_CAP1_LUT_0_A_OFFSET 0x00000000
#define RX_VGA_REG1_CAP1_LUT_0_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_0_A_MASK 0x00000003
#define RX_VGA_REG1_CAP1_LUT_0_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_0_A_RESET_VALUE 0x00000003

/* FIELD: CAP1_LUT_1_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 1 */
#define RX_VGA_REG1_CAP1_LUT_1_A_OFFSET 0x00000002
#define RX_VGA_REG1_CAP1_LUT_1_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_1_A_MASK 0x0000000C
#define RX_VGA_REG1_CAP1_LUT_1_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_1_A_RESET_VALUE 0x00000001

/* FIELD: CAP1_LUT_2_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 2 */
#define RX_VGA_REG1_CAP1_LUT_2_A_OFFSET 0x00000004
#define RX_VGA_REG1_CAP1_LUT_2_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_2_A_MASK 0x00000030
#define RX_VGA_REG1_CAP1_LUT_2_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_2_A_RESET_VALUE 0x00000001

/* FIELD: CAP1_LUT_3_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 3 */
#define RX_VGA_REG1_CAP1_LUT_3_A_OFFSET 0x00000006
#define RX_VGA_REG1_CAP1_LUT_3_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_3_A_MASK 0x000000C0
#define RX_VGA_REG1_CAP1_LUT_3_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_3_A_RESET_VALUE 0x00000000

/* FIELD: CAP1_LUT_4_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 4 */
#define RX_VGA_REG1_CAP1_LUT_4_A_OFFSET 0x00000008
#define RX_VGA_REG1_CAP1_LUT_4_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_4_A_MASK 0x00000300
#define RX_VGA_REG1_CAP1_LUT_4_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_4_A_RESET_VALUE 0x00000000

/* FIELD: CAP1_LUT_5_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 5 */
#define RX_VGA_REG1_CAP1_LUT_5_A_OFFSET 0x0000000A
#define RX_VGA_REG1_CAP1_LUT_5_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_5_A_MASK 0x00000C00
#define RX_VGA_REG1_CAP1_LUT_5_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_5_A_RESET_VALUE 0x00000000

/* FIELD: CAP1_LUT_6_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 6 */
#define RX_VGA_REG1_CAP1_LUT_6_A_OFFSET 0x0000000C
#define RX_VGA_REG1_CAP1_LUT_6_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_6_A_MASK 0x00003000
#define RX_VGA_REG1_CAP1_LUT_6_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_6_A_RESET_VALUE 0x00000000

/* FIELD: CAP1_LUT_7_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 7 */
#define RX_VGA_REG1_CAP1_LUT_7_A_OFFSET 0x0000000E
#define RX_VGA_REG1_CAP1_LUT_7_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP1_LUT_7_A_MASK 0x0000C000
#define RX_VGA_REG1_CAP1_LUT_7_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP1_LUT_7_A_RESET_VALUE 0x00000000

/* FIELD: CAP2_LUT_0_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 0 */
#define RX_VGA_REG1_CAP2_LUT_0_A_OFFSET 0x00000010
#define RX_VGA_REG1_CAP2_LUT_0_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_0_A_MASK 0x00030000
#define RX_VGA_REG1_CAP2_LUT_0_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_0_A_RESET_VALUE 0x00000003

/* FIELD: CAP2_LUT_1_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 1 */
#define RX_VGA_REG1_CAP2_LUT_1_A_OFFSET 0x00000012
#define RX_VGA_REG1_CAP2_LUT_1_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_1_A_MASK 0x000C0000
#define RX_VGA_REG1_CAP2_LUT_1_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_1_A_RESET_VALUE 0x00000003

/* FIELD: CAP2_LUT_2_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 2 */
#define RX_VGA_REG1_CAP2_LUT_2_A_OFFSET 0x00000014
#define RX_VGA_REG1_CAP2_LUT_2_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_2_A_MASK 0x00300000
#define RX_VGA_REG1_CAP2_LUT_2_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_2_A_RESET_VALUE 0x00000001

/* FIELD: CAP2_LUT_3_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 3 */
#define RX_VGA_REG1_CAP2_LUT_3_A_OFFSET 0x00000016
#define RX_VGA_REG1_CAP2_LUT_3_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_3_A_MASK 0x00C00000
#define RX_VGA_REG1_CAP2_LUT_3_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_3_A_RESET_VALUE 0x00000001

/* FIELD: CAP2_LUT_4_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 4 */
#define RX_VGA_REG1_CAP2_LUT_4_A_OFFSET 0x00000018
#define RX_VGA_REG1_CAP2_LUT_4_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_4_A_MASK 0x03000000
#define RX_VGA_REG1_CAP2_LUT_4_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_4_A_RESET_VALUE 0x00000001

/* FIELD: CAP2_LUT_5_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 5 */
#define RX_VGA_REG1_CAP2_LUT_5_A_OFFSET 0x0000001A
#define RX_VGA_REG1_CAP2_LUT_5_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_5_A_MASK 0x0C000000
#define RX_VGA_REG1_CAP2_LUT_5_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_5_A_RESET_VALUE 0x00000000

/* FIELD: CAP2_LUT_6_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 6 */
#define RX_VGA_REG1_CAP2_LUT_6_A_OFFSET 0x0000001C
#define RX_VGA_REG1_CAP2_LUT_6_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_6_A_MASK 0x30000000
#define RX_VGA_REG1_CAP2_LUT_6_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_6_A_RESET_VALUE 0x00000000

/* FIELD: CAP2_LUT_7_A */
/* DESCRIPTION: */
/*   VGA Load Cap value when VGA Coarse (3 MSB) is 7 */
#define RX_VGA_REG1_CAP2_LUT_7_A_OFFSET 0x0000001E
#define RX_VGA_REG1_CAP2_LUT_7_A_BITWIDTH 0x00000002
#define RX_VGA_REG1_CAP2_LUT_7_A_MASK 0xC0000000
#define RX_VGA_REG1_CAP2_LUT_7_A_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VGA_REG1_CAP2_LUT_7_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VREF */
/* DESCRIPTION: */
/*   Configuration register associated with the AFE Rx reference voltage generator. */
/* ------------------------------------- */
#define RX_VREF_ADDR 0x020005B8
#define RX_VREF_SIZE 32

/* FIELD: SELECT_NT */
/* DESCRIPTION: */
/*   Selects voltage reference for the rx bias and regulators */
/*   1 - Supply voltage reference */
/*   0 - Central bandgap reference */
#define RX_VREF_SELECT_NT_OFFSET 0x00000000
#define RX_VREF_SELECT_NT_BITWIDTH 0x00000001
#define RX_VREF_SELECT_NT_MASK 0x00000001
#define RX_VREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VREF_SELECT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RX_VREG */
/* DESCRIPTION: */
/*   Configuration register associated with the voltage regulators in the AFE Rx partition. */
/* ------------------------------------- */
#define RX_VREG_ADDR 0x020005BC
#define RX_VREG_SIZE 32

/* FIELD: BITCK_NT */
/* DESCRIPTION: */
/*   Bitck regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define RX_VREG_BITCK_NT_OFFSET 0x00000000
#define RX_VREG_BITCK_NT_BITWIDTH 0x00000004
#define RX_VREG_BITCK_NT_MASK 0x0000000F
#define RX_VREG_BITCK_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VREG_BITCK_NT_RESET_VALUE 0x00000006

/* FIELD: HSREF_NT */
/* DESCRIPTION: */
/*   Hsref regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define RX_VREG_HSREF_NT_OFFSET 0x00000004
#define RX_VREG_HSREF_NT_BITWIDTH 0x00000004
#define RX_VREG_HSREF_NT_MASK 0x000000F0
#define RX_VREG_HSREF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VREG_HSREF_NT_RESET_VALUE 0x00000006

/* FIELD: HSREF_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define RX_VREG_HSREF_SCBYPASS_NT_OFFSET 0x00000008
#define RX_VREG_HSREF_SCBYPASS_NT_BITWIDTH 0x00000001
#define RX_VREG_HSREF_SCBYPASS_NT_MASK 0x00000100
#define RX_VREG_HSREF_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VREG_HSREF_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: BITCK_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define RX_VREG_BITCK_SCBYPASS_NT_OFFSET 0x00000009
#define RX_VREG_BITCK_SCBYPASS_NT_BITWIDTH 0x00000001
#define RX_VREG_BITCK_SCBYPASS_NT_MASK 0x00000200
#define RX_VREG_BITCK_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RX_VREG_BITCK_SCBYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE0 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE0_ADDR 0x020005C0
#define RXCALSTORE0_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE0_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE0_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE0_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE0_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE0_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE0_VALID_OFFSET 0x00000008
#define RXCALSTORE0_VALID_BITWIDTH 0x00000001
#define RXCALSTORE0_VALID_MASK 0x00000100
#define RXCALSTORE0_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE0_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE0_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE0_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE0_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE0_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE0_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE0_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE0_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE0_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE0_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE0_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE1 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE1_ADDR 0x020005C4
#define RXCALSTORE1_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE1_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE1_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE1_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE1_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE1_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE1_VALID_OFFSET 0x00000008
#define RXCALSTORE1_VALID_BITWIDTH 0x00000001
#define RXCALSTORE1_VALID_MASK 0x00000100
#define RXCALSTORE1_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE1_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE1_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE1_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE1_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE1_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE1_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE1_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE1_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE1_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE1_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE1_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE2 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE2_ADDR 0x020005C8
#define RXCALSTORE2_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE2_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE2_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE2_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE2_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE2_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE2_VALID_OFFSET 0x00000008
#define RXCALSTORE2_VALID_BITWIDTH 0x00000001
#define RXCALSTORE2_VALID_MASK 0x00000100
#define RXCALSTORE2_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE2_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE2_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE2_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE2_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE2_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE2_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE2_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE2_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE2_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE2_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE2_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE3 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE3_ADDR 0x020005CC
#define RXCALSTORE3_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE3_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE3_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE3_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE3_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE3_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE3_VALID_OFFSET 0x00000008
#define RXCALSTORE3_VALID_BITWIDTH 0x00000001
#define RXCALSTORE3_VALID_MASK 0x00000100
#define RXCALSTORE3_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE3_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE3_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE3_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE3_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE3_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE3_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE3_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE3_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE3_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE3_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE3_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE4 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE4_ADDR 0x020005D0
#define RXCALSTORE4_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE4_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE4_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE4_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE4_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE4_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE4_VALID_OFFSET 0x00000008
#define RXCALSTORE4_VALID_BITWIDTH 0x00000001
#define RXCALSTORE4_VALID_MASK 0x00000100
#define RXCALSTORE4_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE4_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE4_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE4_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE4_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE4_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE4_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE4_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE4_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE4_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE4_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE4_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE5 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE5_ADDR 0x020005D4
#define RXCALSTORE5_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE5_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE5_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE5_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE5_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE5_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE5_VALID_OFFSET 0x00000008
#define RXCALSTORE5_VALID_BITWIDTH 0x00000001
#define RXCALSTORE5_VALID_MASK 0x00000100
#define RXCALSTORE5_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE5_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE5_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE5_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE5_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE5_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE5_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE5_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE5_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE5_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE5_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE5_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE6 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE6_ADDR 0x020005D8
#define RXCALSTORE6_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE6_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE6_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE6_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE6_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE6_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE6_VALID_OFFSET 0x00000008
#define RXCALSTORE6_VALID_BITWIDTH 0x00000001
#define RXCALSTORE6_VALID_MASK 0x00000100
#define RXCALSTORE6_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE6_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE6_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE6_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE6_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE6_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE6_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE6_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE6_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE6_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE6_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE6_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTORE7 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTORE7_ADDR 0x020005DC
#define RXCALSTORE7_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   RX oscillator coarse calibrated value */
#define RXCALSTORE7_DS_OSC_CAL_OFFSET 0x00000000
#define RXCALSTORE7_DS_OSC_CAL_BITWIDTH 0x00000008
#define RXCALSTORE7_DS_OSC_CAL_MASK 0x000000FF
#define RXCALSTORE7_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE7_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define RXCALSTORE7_VALID_OFFSET 0x00000008
#define RXCALSTORE7_VALID_BITWIDTH 0x00000001
#define RXCALSTORE7_VALID_MASK 0x00000100
#define RXCALSTORE7_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE7_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   RX oscillator fine calibrated value */
#define RXCALSTORE7_OSC_CAL_FINE_OFFSET 0x00000009
#define RXCALSTORE7_OSC_CAL_FINE_BITWIDTH 0x00000003
#define RXCALSTORE7_OSC_CAL_FINE_MASK 0x00000E00
#define RXCALSTORE7_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE7_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* FIELD: SIGDET_OFFSET */
/* DESCRIPTION: */
/*   Signal detect calibrated value */
#define RXCALSTORE7_SIGDET_OFFSET_OFFSET 0x0000000C
#define RXCALSTORE7_SIGDET_OFFSET_BITWIDTH 0x00000004
#define RXCALSTORE7_SIGDET_OFFSET_MASK 0x0000F000
#define RXCALSTORE7_SIGDET_OFFSET_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTORE7_SIGDET_OFFSET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB0 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB0_ADDR 0x020005E0
#define RXCALSTOREB0_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB0_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB0_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB0_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB0_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB0_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB0_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB0_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB0_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB0_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB0_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB0_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB0_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB0_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB0_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB0_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB1 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB1_ADDR 0x020005E4
#define RXCALSTOREB1_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB1_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB1_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB1_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB1_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB1_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB1_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB1_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB1_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB1_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB1_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB1_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB1_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB1_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB1_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB1_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB2 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB2_ADDR 0x020005E8
#define RXCALSTOREB2_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB2_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB2_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB2_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB2_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB2_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB2_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB2_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB2_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB2_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB2_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB2_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB2_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB2_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB2_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB2_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB3 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB3_ADDR 0x020005EC
#define RXCALSTOREB3_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB3_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB3_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB3_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB3_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB3_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB3_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB3_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB3_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB3_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB3_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB3_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB3_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB3_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB3_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB3_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB4 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB4_ADDR 0x020005F0
#define RXCALSTOREB4_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB4_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB4_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB4_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB4_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB4_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB4_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB4_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB4_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB4_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB4_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB4_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB4_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB4_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB4_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB4_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB5 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB5_ADDR 0x020005F4
#define RXCALSTOREB5_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB5_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB5_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB5_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB5_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB5_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB5_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB5_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB5_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB5_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB5_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB5_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB5_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB5_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB5_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB5_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB6 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB6_ADDR 0x020005F8
#define RXCALSTOREB6_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB6_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB6_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB6_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB6_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB6_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB6_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB6_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB6_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB6_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB6_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB6_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB6_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB6_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB6_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB6_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXCALSTOREB7 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define RXCALSTOREB7_ADDR 0x020005FC
#define RXCALSTOREB7_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define RXCALSTOREB7_D90_DCD_NT_OFFSET 0x00000000
#define RXCALSTOREB7_D90_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB7_D90_DCD_NT_MASK 0x0000007F
#define RXCALSTOREB7_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB7_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define RXCALSTOREB7_D0_DCD_NT_OFFSET 0x00000007
#define RXCALSTOREB7_D0_DCD_NT_BITWIDTH 0x00000007
#define RXCALSTOREB7_D0_DCD_NT_MASK 0x00003F80
#define RXCALSTOREB7_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB7_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define RXCALSTOREB7_IQ_NT_OFFSET 0x0000000E
#define RXCALSTOREB7_IQ_NT_BITWIDTH 0x00000007
#define RXCALSTOREB7_IQ_NT_MASK 0x001FC000
#define RXCALSTOREB7_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXCALSTOREB7_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_OTHER_REG1_ADDR 0x02000600
#define RXEQSTORE0_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE0_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE0_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE0_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE0_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE0_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE0_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE0_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE0_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE0_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE0_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE0_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE0_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE0_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE0_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE0_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE0_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE0_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE0_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE0_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_SLICER_REG1_ADDR 0x02000604
#define RXEQSTORE0_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE0_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE0_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE0_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE0_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE0_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE0_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE0_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE0_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE0_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_SLICER_REG2_ADDR 0x02000608
#define RXEQSTORE0_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE0_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE0_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE0_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_TAP_REG1_ADDR 0x0200060C
#define RXEQSTORE0_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE0_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE0_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE0_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE0_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE0_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE0_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE0_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE0_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE0_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE0_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE0_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_TAP_REG2_ADDR 0x02000610
#define RXEQSTORE0_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE0_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE0_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE0_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE0_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE0_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE0_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE0_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE0_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE0_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE0_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE0_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE0_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE0_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_TAP_REG3_ADDR 0x02000614
#define RXEQSTORE0_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE0_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE0_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE0_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE0_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE0_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE0_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE0_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE0_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE0_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE0_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE0_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE0_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_TAP_REG4_ADDR 0x02000618
#define RXEQSTORE0_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE0_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE0_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE0_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE0_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE0_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE0_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE0_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_TAP_REG5_ADDR 0x0200061C
#define RXEQSTORE0_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE0_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE0_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE0_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE0_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE0_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE0_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE0_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE0_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE0_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE0_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE0_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE0_THRES_REG1_ADDR 0x02000620
#define RXEQSTORE0_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE0_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE0_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE0_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE0_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE0_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE0_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE0_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE0_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE0_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE0_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE0_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_OTHER_REG1_ADDR 0x02000624
#define RXEQSTORE1_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE1_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE1_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE1_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE1_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE1_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE1_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE1_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE1_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE1_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE1_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE1_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE1_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE1_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE1_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE1_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE1_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE1_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE1_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE1_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_SLICER_REG1_ADDR 0x02000628
#define RXEQSTORE1_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE1_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE1_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE1_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE1_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE1_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE1_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE1_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE1_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE1_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_SLICER_REG2_ADDR 0x0200062C
#define RXEQSTORE1_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE1_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE1_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE1_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_TAP_REG1_ADDR 0x02000630
#define RXEQSTORE1_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE1_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE1_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE1_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE1_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE1_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE1_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE1_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE1_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE1_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE1_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE1_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_TAP_REG2_ADDR 0x02000634
#define RXEQSTORE1_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE1_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE1_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE1_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE1_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE1_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE1_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE1_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE1_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE1_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE1_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE1_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE1_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE1_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_TAP_REG3_ADDR 0x02000638
#define RXEQSTORE1_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE1_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE1_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE1_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE1_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE1_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE1_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE1_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE1_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE1_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE1_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE1_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE1_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_TAP_REG4_ADDR 0x0200063C
#define RXEQSTORE1_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE1_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE1_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE1_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE1_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE1_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE1_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE1_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_TAP_REG5_ADDR 0x02000640
#define RXEQSTORE1_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE1_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE1_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE1_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE1_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE1_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE1_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE1_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE1_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE1_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE1_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE1_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE1_THRES_REG1_ADDR 0x02000644
#define RXEQSTORE1_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE1_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE1_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE1_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE1_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE1_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE1_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE1_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE1_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE1_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE1_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE1_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_OTHER_REG1_ADDR 0x02000648
#define RXEQSTORE2_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE2_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE2_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE2_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE2_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE2_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE2_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE2_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE2_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE2_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE2_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE2_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE2_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE2_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE2_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE2_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE2_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE2_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE2_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE2_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_SLICER_REG1_ADDR 0x0200064C
#define RXEQSTORE2_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE2_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE2_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE2_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE2_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE2_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE2_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE2_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE2_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE2_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_SLICER_REG2_ADDR 0x02000650
#define RXEQSTORE2_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE2_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE2_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE2_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_TAP_REG1_ADDR 0x02000654
#define RXEQSTORE2_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE2_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE2_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE2_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE2_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE2_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE2_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE2_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE2_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE2_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE2_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE2_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_TAP_REG2_ADDR 0x02000658
#define RXEQSTORE2_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE2_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE2_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE2_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE2_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE2_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE2_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE2_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE2_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE2_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE2_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE2_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE2_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE2_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_TAP_REG3_ADDR 0x0200065C
#define RXEQSTORE2_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE2_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE2_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE2_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE2_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE2_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE2_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE2_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE2_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE2_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE2_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE2_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE2_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_TAP_REG4_ADDR 0x02000660
#define RXEQSTORE2_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE2_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE2_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE2_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE2_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE2_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE2_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE2_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_TAP_REG5_ADDR 0x02000664
#define RXEQSTORE2_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE2_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE2_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE2_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE2_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE2_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE2_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE2_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE2_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE2_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE2_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE2_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE2_THRES_REG1_ADDR 0x02000668
#define RXEQSTORE2_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE2_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE2_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE2_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE2_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE2_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE2_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE2_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE2_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE2_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE2_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE2_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_OTHER_REG1_ADDR 0x0200066C
#define RXEQSTORE3_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE3_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE3_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE3_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE3_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE3_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE3_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE3_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE3_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE3_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE3_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE3_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE3_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE3_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE3_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE3_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE3_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE3_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE3_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE3_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_SLICER_REG1_ADDR 0x02000670
#define RXEQSTORE3_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE3_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE3_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE3_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE3_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE3_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE3_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE3_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE3_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE3_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_SLICER_REG2_ADDR 0x02000674
#define RXEQSTORE3_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE3_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE3_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE3_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_TAP_REG1_ADDR 0x02000678
#define RXEQSTORE3_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE3_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE3_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE3_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE3_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE3_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE3_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE3_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE3_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE3_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE3_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE3_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_TAP_REG2_ADDR 0x0200067C
#define RXEQSTORE3_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE3_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE3_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE3_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE3_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE3_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE3_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE3_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE3_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE3_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE3_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE3_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE3_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE3_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_TAP_REG3_ADDR 0x02000680
#define RXEQSTORE3_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE3_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE3_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE3_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE3_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE3_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE3_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE3_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE3_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE3_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE3_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE3_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE3_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_TAP_REG4_ADDR 0x02000684
#define RXEQSTORE3_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE3_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE3_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE3_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE3_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE3_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE3_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE3_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_TAP_REG5_ADDR 0x02000688
#define RXEQSTORE3_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE3_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE3_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE3_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE3_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE3_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE3_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE3_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE3_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE3_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE3_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE3_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE3_THRES_REG1_ADDR 0x0200068C
#define RXEQSTORE3_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE3_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE3_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE3_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE3_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE3_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE3_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE3_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE3_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE3_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE3_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE3_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_OTHER_REG1_ADDR 0x02000690
#define RXEQSTORE4_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE4_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE4_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE4_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE4_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE4_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE4_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE4_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE4_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE4_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE4_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE4_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE4_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE4_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE4_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE4_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE4_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE4_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE4_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE4_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_SLICER_REG1_ADDR 0x02000694
#define RXEQSTORE4_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE4_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE4_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE4_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE4_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE4_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE4_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE4_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE4_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE4_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_SLICER_REG2_ADDR 0x02000698
#define RXEQSTORE4_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE4_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE4_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE4_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_TAP_REG1_ADDR 0x0200069C
#define RXEQSTORE4_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE4_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE4_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE4_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE4_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE4_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE4_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE4_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE4_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE4_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE4_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE4_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_TAP_REG2_ADDR 0x020006A0
#define RXEQSTORE4_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE4_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE4_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE4_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE4_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE4_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE4_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE4_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE4_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE4_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE4_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE4_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE4_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE4_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_TAP_REG3_ADDR 0x020006A4
#define RXEQSTORE4_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE4_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE4_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE4_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE4_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE4_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE4_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE4_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE4_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE4_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE4_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE4_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE4_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_TAP_REG4_ADDR 0x020006A8
#define RXEQSTORE4_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE4_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE4_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE4_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE4_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE4_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE4_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE4_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_TAP_REG5_ADDR 0x020006AC
#define RXEQSTORE4_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE4_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE4_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE4_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE4_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE4_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE4_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE4_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE4_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE4_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE4_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE4_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE4_THRES_REG1_ADDR 0x020006B0
#define RXEQSTORE4_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE4_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE4_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE4_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE4_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE4_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE4_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE4_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE4_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE4_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE4_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE4_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_OTHER_REG1_ADDR 0x020006B4
#define RXEQSTORE5_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE5_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE5_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE5_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE5_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE5_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE5_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE5_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE5_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE5_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE5_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE5_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE5_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE5_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE5_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE5_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE5_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE5_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE5_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE5_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_SLICER_REG1_ADDR 0x020006B8
#define RXEQSTORE5_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE5_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE5_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE5_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE5_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE5_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE5_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE5_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE5_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE5_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_SLICER_REG2_ADDR 0x020006BC
#define RXEQSTORE5_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE5_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE5_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE5_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_TAP_REG1_ADDR 0x020006C0
#define RXEQSTORE5_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE5_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE5_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE5_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE5_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE5_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE5_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE5_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE5_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE5_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE5_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE5_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_TAP_REG2_ADDR 0x020006C4
#define RXEQSTORE5_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE5_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE5_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE5_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE5_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE5_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE5_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE5_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE5_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE5_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE5_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE5_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE5_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE5_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_TAP_REG3_ADDR 0x020006C8
#define RXEQSTORE5_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE5_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE5_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE5_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE5_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE5_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE5_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE5_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE5_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE5_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE5_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE5_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE5_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_TAP_REG4_ADDR 0x020006CC
#define RXEQSTORE5_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE5_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE5_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE5_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE5_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE5_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE5_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE5_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_TAP_REG5_ADDR 0x020006D0
#define RXEQSTORE5_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE5_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE5_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE5_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE5_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE5_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE5_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE5_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE5_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE5_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE5_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE5_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE5_THRES_REG1_ADDR 0x020006D4
#define RXEQSTORE5_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE5_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE5_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE5_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE5_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE5_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE5_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE5_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE5_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE5_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE5_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE5_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_OTHER_REG1_ADDR 0x020006D8
#define RXEQSTORE6_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE6_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE6_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE6_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE6_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE6_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE6_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE6_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE6_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE6_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE6_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE6_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE6_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE6_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE6_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE6_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE6_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE6_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE6_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE6_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_SLICER_REG1_ADDR 0x020006DC
#define RXEQSTORE6_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE6_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE6_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE6_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE6_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE6_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE6_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE6_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE6_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE6_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_SLICER_REG2_ADDR 0x020006E0
#define RXEQSTORE6_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE6_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE6_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE6_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_TAP_REG1_ADDR 0x020006E4
#define RXEQSTORE6_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE6_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE6_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE6_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE6_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE6_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE6_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE6_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE6_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE6_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE6_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE6_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_TAP_REG2_ADDR 0x020006E8
#define RXEQSTORE6_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE6_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE6_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE6_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE6_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE6_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE6_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE6_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE6_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE6_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE6_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE6_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE6_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE6_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_TAP_REG3_ADDR 0x020006EC
#define RXEQSTORE6_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE6_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE6_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE6_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE6_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE6_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE6_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE6_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE6_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE6_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE6_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE6_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE6_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_TAP_REG4_ADDR 0x020006F0
#define RXEQSTORE6_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE6_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE6_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE6_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE6_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE6_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE6_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE6_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_TAP_REG5_ADDR 0x020006F4
#define RXEQSTORE6_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE6_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE6_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE6_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE6_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE6_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE6_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE6_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE6_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE6_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE6_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE6_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE6_THRES_REG1_ADDR 0x020006F8
#define RXEQSTORE6_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE6_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE6_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE6_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE6_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE6_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE6_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE6_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE6_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE6_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE6_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE6_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_OTHER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_OTHER_REG1_ADDR 0x020006FC
#define RXEQSTORE7_OTHER_REG1_SIZE 32

/* FIELD: CTLE_BOOST_NT */
/* DESCRIPTION: */
/*   Stored ctle boost value, per rate */
#define RXEQSTORE7_OTHER_REG1_CTLE_BOOST_NT_OFFSET 0x00000000
#define RXEQSTORE7_OTHER_REG1_CTLE_BOOST_NT_BITWIDTH 0x00000004
#define RXEQSTORE7_OTHER_REG1_CTLE_BOOST_NT_MASK 0x0000000F
#define RXEQSTORE7_OTHER_REG1_CTLE_BOOST_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_OTHER_REG1_CTLE_BOOST_NT_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_NT */
/* DESCRIPTION: */
/*   Stored vga offset value, per rate */
#define RXEQSTORE7_OTHER_REG1_VGA_OFFSET_NT_OFFSET 0x00000004
#define RXEQSTORE7_OTHER_REG1_VGA_OFFSET_NT_BITWIDTH 0x00000004
#define RXEQSTORE7_OTHER_REG1_VGA_OFFSET_NT_MASK 0x000000F0
#define RXEQSTORE7_OTHER_REG1_VGA_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_OTHER_REG1_VGA_OFFSET_NT_RESET_VALUE 0x00000007

/* FIELD: VGA_FINE_NT */
/* DESCRIPTION: */
/*   Stored vga fine value, per rate */
#define RXEQSTORE7_OTHER_REG1_VGA_FINE_NT_OFFSET 0x00000008
#define RXEQSTORE7_OTHER_REG1_VGA_FINE_NT_BITWIDTH 0x00000006
#define RXEQSTORE7_OTHER_REG1_VGA_FINE_NT_MASK 0x00003F00
#define RXEQSTORE7_OTHER_REG1_VGA_FINE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_OTHER_REG1_VGA_FINE_NT_RESET_VALUE 0x00000020

/* FIELD: VGA_COARSE_NT */
/* DESCRIPTION: */
/*   Stored vga coarse value, per rate */
#define RXEQSTORE7_OTHER_REG1_VGA_COARSE_NT_OFFSET 0x0000000E
#define RXEQSTORE7_OTHER_REG1_VGA_COARSE_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_OTHER_REG1_VGA_COARSE_NT_MASK 0x0007C000
#define RXEQSTORE7_OTHER_REG1_VGA_COARSE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_OTHER_REG1_VGA_COARSE_NT_RESET_VALUE 0x0000001F

/* FIELD: DFE_COEF_NT */
/* DESCRIPTION: */
/*   Stored dfe coefficients, per rate */
#define RXEQSTORE7_OTHER_REG1_DFE_COEF_NT_OFFSET 0x00000013
#define RXEQSTORE7_OTHER_REG1_DFE_COEF_NT_BITWIDTH 0x00000008
#define RXEQSTORE7_OTHER_REG1_DFE_COEF_NT_MASK 0x07F80000
#define RXEQSTORE7_OTHER_REG1_DFE_COEF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_OTHER_REG1_DFE_COEF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_SLICER_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_SLICER_REG1_ADDR 0x02000700
#define RXEQSTORE7_SLICER_REG1_SIZE 32

/* FIELD: EL3_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE7_SLICER_REG1_EL3_NT_OFFSET 0x00000000
#define RXEQSTORE7_SLICER_REG1_EL3_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_SLICER_REG1_EL3_NT_MASK 0x000001FF
#define RXEQSTORE7_SLICER_REG1_EL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_SLICER_REG1_EL3_NT_RESET_VALUE 0x00000000

/* FIELD: EL1_NT */
/* DESCRIPTION: */
/*   Stored target el1 values, per rate */
#define RXEQSTORE7_SLICER_REG1_EL1_NT_OFFSET 0x00000009
#define RXEQSTORE7_SLICER_REG1_EL1_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_SLICER_REG1_EL1_NT_MASK 0x0003FE00
#define RXEQSTORE7_SLICER_REG1_EL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_SLICER_REG1_EL1_NT_RESET_VALUE 0x00000000

/* FIELD: EH1_NT */
/* DESCRIPTION: */
/*   Stored target el3 values, per rate */
#define RXEQSTORE7_SLICER_REG1_EH1_NT_OFFSET 0x00000012
#define RXEQSTORE7_SLICER_REG1_EH1_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_SLICER_REG1_EH1_NT_MASK 0x07FC0000
#define RXEQSTORE7_SLICER_REG1_EH1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_SLICER_REG1_EH1_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_SLICER_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_SLICER_REG2_ADDR 0x02000704
#define RXEQSTORE7_SLICER_REG2_SIZE 32

/* FIELD: EH3_NT */
/* DESCRIPTION: */
/*   Stored target eh3 values, per rate */
#define RXEQSTORE7_SLICER_REG2_EH3_NT_OFFSET 0x00000000
#define RXEQSTORE7_SLICER_REG2_EH3_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_SLICER_REG2_EH3_NT_MASK 0x000001FF
#define RXEQSTORE7_SLICER_REG2_EH3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_SLICER_REG2_EH3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_TAP_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_TAP_REG1_ADDR 0x02000708
#define RXEQSTORE7_TAP_REG1_SIZE 32

/* FIELD: TAP0_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP0_NT_OFFSET 0x00000000
#define RXEQSTORE7_TAP_REG1_TAP0_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP0_NT_MASK 0x0000001F
#define RXEQSTORE7_TAP_REG1_TAP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP0_NT_RESET_VALUE 0x00000000

/* FIELD: TAP1_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP1_NT_OFFSET 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP1_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP1_NT_MASK 0x000003E0
#define RXEQSTORE7_TAP_REG1_TAP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP1_NT_RESET_VALUE 0x00000000

/* FIELD: TAP2_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP2_NT_OFFSET 0x0000000A
#define RXEQSTORE7_TAP_REG1_TAP2_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP2_NT_MASK 0x00007C00
#define RXEQSTORE7_TAP_REG1_TAP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP2_NT_RESET_VALUE 0x00000000

/* FIELD: TAP3_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP3_NT_OFFSET 0x0000000F
#define RXEQSTORE7_TAP_REG1_TAP3_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP3_NT_MASK 0x000F8000
#define RXEQSTORE7_TAP_REG1_TAP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP3_NT_RESET_VALUE 0x00000000

/* FIELD: TAP4_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP4_NT_OFFSET 0x00000014
#define RXEQSTORE7_TAP_REG1_TAP4_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP4_NT_MASK 0x01F00000
#define RXEQSTORE7_TAP_REG1_TAP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP4_NT_RESET_VALUE 0x00000000

/* FIELD: TAP5_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG1_TAP5_NT_OFFSET 0x00000019
#define RXEQSTORE7_TAP_REG1_TAP5_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG1_TAP5_NT_MASK 0x3E000000
#define RXEQSTORE7_TAP_REG1_TAP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG1_TAP5_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_TAP_REG2 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_TAP_REG2_ADDR 0x0200070C
#define RXEQSTORE7_TAP_REG2_SIZE 32

/* FIELD: TAP6_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG2_TAP6_NT_OFFSET 0x00000000
#define RXEQSTORE7_TAP_REG2_TAP6_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG2_TAP6_NT_MASK 0x0000001F
#define RXEQSTORE7_TAP_REG2_TAP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG2_TAP6_NT_RESET_VALUE 0x00000000

/* FIELD: TAP7_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG2_TAP7_NT_OFFSET 0x00000005
#define RXEQSTORE7_TAP_REG2_TAP7_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG2_TAP7_NT_MASK 0x000003E0
#define RXEQSTORE7_TAP_REG2_TAP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG2_TAP7_NT_RESET_VALUE 0x00000000

/* FIELD: TAP8_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG2_TAP8_NT_OFFSET 0x0000000A
#define RXEQSTORE7_TAP_REG2_TAP8_NT_BITWIDTH 0x00000005
#define RXEQSTORE7_TAP_REG2_TAP8_NT_MASK 0x00007C00
#define RXEQSTORE7_TAP_REG2_TAP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG2_TAP8_NT_RESET_VALUE 0x00000000

/* FIELD: TAP9_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG2_TAP9_NT_OFFSET 0x0000000F
#define RXEQSTORE7_TAP_REG2_TAP9_NT_BITWIDTH 0x00000006
#define RXEQSTORE7_TAP_REG2_TAP9_NT_MASK 0x001F8000
#define RXEQSTORE7_TAP_REG2_TAP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG2_TAP9_NT_RESET_VALUE 0x00000000

/* FIELD: TAP10_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG2_TAP10_NT_OFFSET 0x00000015
#define RXEQSTORE7_TAP_REG2_TAP10_NT_BITWIDTH 0x00000006
#define RXEQSTORE7_TAP_REG2_TAP10_NT_MASK 0x07E00000
#define RXEQSTORE7_TAP_REG2_TAP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG2_TAP10_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_TAP_REG3 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_TAP_REG3_ADDR 0x02000710
#define RXEQSTORE7_TAP_REG3_SIZE 32

/* FIELD: TAP11_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG3_TAP11_NT_OFFSET 0x00000000
#define RXEQSTORE7_TAP_REG3_TAP11_NT_BITWIDTH 0x00000007
#define RXEQSTORE7_TAP_REG3_TAP11_NT_MASK 0x0000007F
#define RXEQSTORE7_TAP_REG3_TAP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG3_TAP11_NT_RESET_VALUE 0x00000000

/* FIELD: TAP12_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG3_TAP12_NT_OFFSET 0x00000007
#define RXEQSTORE7_TAP_REG3_TAP12_NT_BITWIDTH 0x00000008
#define RXEQSTORE7_TAP_REG3_TAP12_NT_MASK 0x00007F80
#define RXEQSTORE7_TAP_REG3_TAP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG3_TAP12_NT_RESET_VALUE 0x00000000

/* FIELD: TAP13_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG3_TAP13_NT_OFFSET 0x0000000F
#define RXEQSTORE7_TAP_REG3_TAP13_NT_BITWIDTH 0x00000008
#define RXEQSTORE7_TAP_REG3_TAP13_NT_MASK 0x007F8000
#define RXEQSTORE7_TAP_REG3_TAP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG3_TAP13_NT_RESET_VALUE 0x00000000

/* FIELD: TAP14_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG3_TAP14_NT_OFFSET 0x00000017
#define RXEQSTORE7_TAP_REG3_TAP14_NT_BITWIDTH 0x00000008
#define RXEQSTORE7_TAP_REG3_TAP14_NT_MASK 0x7F800000
#define RXEQSTORE7_TAP_REG3_TAP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG3_TAP14_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_TAP_REG4 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_TAP_REG4_ADDR 0x02000714
#define RXEQSTORE7_TAP_REG4_SIZE 32

/* FIELD: TAP15_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG4_TAP15_NT_OFFSET 0x00000000
#define RXEQSTORE7_TAP_REG4_TAP15_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_TAP_REG4_TAP15_NT_MASK 0x000001FF
#define RXEQSTORE7_TAP_REG4_TAP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG4_TAP15_NT_RESET_VALUE 0x00000000

/* FIELD: TAP16_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG4_TAP16_NT_OFFSET 0x00000009
#define RXEQSTORE7_TAP_REG4_TAP16_NT_BITWIDTH 0x0000000A
#define RXEQSTORE7_TAP_REG4_TAP16_NT_MASK 0x0007FE00
#define RXEQSTORE7_TAP_REG4_TAP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG4_TAP16_NT_RESET_VALUE 0x00000080

/* FIELD: TAP17_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG4_TAP17_NT_OFFSET 0x00000013
#define RXEQSTORE7_TAP_REG4_TAP17_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_TAP_REG4_TAP17_NT_MASK 0x0FF80000
#define RXEQSTORE7_TAP_REG4_TAP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG4_TAP17_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_TAP_REG5 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_TAP_REG5_ADDR 0x02000718
#define RXEQSTORE7_TAP_REG5_SIZE 32

/* FIELD: TAP18_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG5_TAP18_NT_OFFSET 0x00000000
#define RXEQSTORE7_TAP_REG5_TAP18_NT_BITWIDTH 0x00000008
#define RXEQSTORE7_TAP_REG5_TAP18_NT_MASK 0x000000FF
#define RXEQSTORE7_TAP_REG5_TAP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG5_TAP18_NT_RESET_VALUE 0x00000000

/* FIELD: TAP19_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG5_TAP19_NT_OFFSET 0x00000008
#define RXEQSTORE7_TAP_REG5_TAP19_NT_BITWIDTH 0x00000007
#define RXEQSTORE7_TAP_REG5_TAP19_NT_MASK 0x00007F00
#define RXEQSTORE7_TAP_REG5_TAP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG5_TAP19_NT_RESET_VALUE 0x00000000

/* FIELD: TAP20_NT */
/* DESCRIPTION: */
/*   Stored ffe tap values, per rate */
#define RXEQSTORE7_TAP_REG5_TAP20_NT_OFFSET 0x0000000F
#define RXEQSTORE7_TAP_REG5_TAP20_NT_BITWIDTH 0x00000006
#define RXEQSTORE7_TAP_REG5_TAP20_NT_MASK 0x001F8000
#define RXEQSTORE7_TAP_REG5_TAP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_TAP_REG5_TAP20_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE7_THRES_REG1 */
/* DESCRIPTION: */
/*   Stored equalization values */
/* ------------------------------------- */
#define RXEQSTORE7_THRES_REG1_ADDR 0x0200071C
#define RXEQSTORE7_THRES_REG1_SIZE 32

/* FIELD: EL_NT */
/* DESCRIPTION: */
/*   Stored target el values, per rate */
#define RXEQSTORE7_THRES_REG1_EL_NT_OFFSET 0x00000000
#define RXEQSTORE7_THRES_REG1_EL_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_THRES_REG1_EL_NT_MASK 0x000001FF
#define RXEQSTORE7_THRES_REG1_EL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_THRES_REG1_EL_NT_RESET_VALUE 0x00000000

/* FIELD: EZ_NT */
/* DESCRIPTION: */
/*   Stored target ez values, per rate */
#define RXEQSTORE7_THRES_REG1_EZ_NT_OFFSET 0x00000009
#define RXEQSTORE7_THRES_REG1_EZ_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_THRES_REG1_EZ_NT_MASK 0x0003FE00
#define RXEQSTORE7_THRES_REG1_EZ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_THRES_REG1_EZ_NT_RESET_VALUE 0x00000000

/* FIELD: EH_NT */
/* DESCRIPTION: */
/*   Stored target eh values, per rate */
#define RXEQSTORE7_THRES_REG1_EH_NT_OFFSET 0x00000012
#define RXEQSTORE7_THRES_REG1_EH_NT_BITWIDTH 0x00000009
#define RXEQSTORE7_THRES_REG1_EH_NT_MASK 0x07FC0000
#define RXEQSTORE7_THRES_REG1_EH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE7_THRES_REG1_EH_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE_CTRL */
/* DESCRIPTION: */
/*   Stored equalization values control */
/* ------------------------------------- */
#define RXEQSTORE_CTRL_ADDR 0x02000720
#define RXEQSTORE_CTRL_SIZE 32

/* FIELD: RXEQSTORE_SEL */
/* DESCRIPTION: */
/*   Selects which rxeqstore[X] setting to use, when saving/restoring values */
#define RXEQSTORE_CTRL_RXEQSTORE_SEL_OFFSET 0x00000000
#define RXEQSTORE_CTRL_RXEQSTORE_SEL_BITWIDTH 0x00000003
#define RXEQSTORE_CTRL_RXEQSTORE_SEL_MASK 0x00000007
#define RXEQSTORE_CTRL_RXEQSTORE_SEL_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_RXEQSTORE_SEL_RESET_VALUE 0x00000000

/* FIELD: COEFF_INIT_SET */
/* DESCRIPTION: */
/*   When asserted, sets the ffe coefficient initial value to the stored value */
#define RXEQSTORE_CTRL_COEFF_INIT_SET_OFFSET 0x00000003
#define RXEQSTORE_CTRL_COEFF_INIT_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_COEFF_INIT_SET_MASK 0x00000008
#define RXEQSTORE_CTRL_COEFF_INIT_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_COEFF_INIT_SET_RESET_VALUE 0x00000000

/* FIELD: DFE_INIT_SET */
/* DESCRIPTION: */
/*   When asserted, sets the dfe coefficient initial value to the stored value */
#define RXEQSTORE_CTRL_DFE_INIT_SET_OFFSET 0x00000004
#define RXEQSTORE_CTRL_DFE_INIT_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_DFE_INIT_SET_MASK 0x00000010
#define RXEQSTORE_CTRL_DFE_INIT_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_DFE_INIT_SET_RESET_VALUE 0x00000000

/* FIELD: THRESHOLD_INIT_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer threshold initial value to the stored value */
#define RXEQSTORE_CTRL_THRESHOLD_INIT_SET_OFFSET 0x00000005
#define RXEQSTORE_CTRL_THRESHOLD_INIT_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_THRESHOLD_INIT_SET_MASK 0x00000020
#define RXEQSTORE_CTRL_THRESHOLD_INIT_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_THRESHOLD_INIT_SET_RESET_VALUE 0x00000000

/* FIELD: TARGET_INIT_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer target initial value to the stored value */
#define RXEQSTORE_CTRL_TARGET_INIT_SET_OFFSET 0x00000006
#define RXEQSTORE_CTRL_TARGET_INIT_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_TARGET_INIT_SET_MASK 0x00000040
#define RXEQSTORE_CTRL_TARGET_INIT_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_TARGET_INIT_SET_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_INIT_SET */
/* DESCRIPTION: */
/*   When asserted, sets the vga offset initial value to the stored value */
#define RXEQSTORE_CTRL_VGA_OFFSET_INIT_SET_OFFSET 0x00000007
#define RXEQSTORE_CTRL_VGA_OFFSET_INIT_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_OFFSET_INIT_SET_MASK 0x00000080
#define RXEQSTORE_CTRL_VGA_OFFSET_INIT_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_OFFSET_INIT_SET_RESET_VALUE 0x00000000

/* FIELD: COEFF_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the ffe coefficient override value to the stored value */
#define RXEQSTORE_CTRL_COEFF_OVRD_SET_OFFSET 0x00000008
#define RXEQSTORE_CTRL_COEFF_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_COEFF_OVRD_SET_MASK 0x00000100
#define RXEQSTORE_CTRL_COEFF_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_COEFF_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: DFE_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the dfe coefficient override value to the stored value */
#define RXEQSTORE_CTRL_DFE_OVRD_SET_OFFSET 0x00000009
#define RXEQSTORE_CTRL_DFE_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_DFE_OVRD_SET_MASK 0x00000200
#define RXEQSTORE_CTRL_DFE_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_DFE_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: THRESHOLD_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer threshold override value to the stored value */
#define RXEQSTORE_CTRL_THRESHOLD_OVRD_SET_OFFSET 0x0000000A
#define RXEQSTORE_CTRL_THRESHOLD_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_THRESHOLD_OVRD_SET_MASK 0x00000400
#define RXEQSTORE_CTRL_THRESHOLD_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_THRESHOLD_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: TARGET_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer target override value to the stored value */
#define RXEQSTORE_CTRL_TARGET_OVRD_SET_OFFSET 0x0000000B
#define RXEQSTORE_CTRL_TARGET_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_TARGET_OVRD_SET_MASK 0x00000800
#define RXEQSTORE_CTRL_TARGET_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_TARGET_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: CTLE_BOOST_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the ctle boost override value to the stored value */
#define RXEQSTORE_CTRL_CTLE_BOOST_OVRD_SET_OFFSET 0x0000000C
#define RXEQSTORE_CTRL_CTLE_BOOST_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_CTLE_BOOST_OVRD_SET_MASK 0x00001000
#define RXEQSTORE_CTRL_CTLE_BOOST_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_CTLE_BOOST_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the vga offset override value to the stored value */
#define RXEQSTORE_CTRL_VGA_OFFSET_OVRD_SET_OFFSET 0x0000000D
#define RXEQSTORE_CTRL_VGA_OFFSET_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_OFFSET_OVRD_SET_MASK 0x00002000
#define RXEQSTORE_CTRL_VGA_OFFSET_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_OFFSET_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSEFINE_OVRD_SET */
/* DESCRIPTION: */
/*   When asserted, sets the vga coarsefine override values to the stored values */
#define RXEQSTORE_CTRL_VGA_COARSEFINE_OVRD_SET_OFFSET 0x0000000E
#define RXEQSTORE_CTRL_VGA_COARSEFINE_OVRD_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_COARSEFINE_OVRD_SET_MASK 0x00004000
#define RXEQSTORE_CTRL_VGA_COARSEFINE_OVRD_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_COARSEFINE_OVRD_SET_RESET_VALUE 0x00000000

/* FIELD: RXEQSTORE_SET */
/* DESCRIPTION: */
/*   When asserted, stores all current rxeq values into the appropriate rxeqstore[X] registers  */
#define RXEQSTORE_CTRL_RXEQSTORE_SET_OFFSET 0x0000000F
#define RXEQSTORE_CTRL_RXEQSTORE_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_RXEQSTORE_SET_MASK 0x00008000
#define RXEQSTORE_CTRL_RXEQSTORE_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_RXEQSTORE_SET_RESET_VALUE 0x00000000

/* FIELD: COEFF_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the ffe coefficient bypass enable register. */
#define RXEQSTORE_CTRL_COEFF_BYPASS_SET_OFFSET 0x00000010
#define RXEQSTORE_CTRL_COEFF_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_COEFF_BYPASS_SET_MASK 0x00010000
#define RXEQSTORE_CTRL_COEFF_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_COEFF_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: DFE_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the dfe coefficient bypass enable register. */
#define RXEQSTORE_CTRL_DFE_BYPASS_SET_OFFSET 0x00000011
#define RXEQSTORE_CTRL_DFE_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_DFE_BYPASS_SET_MASK 0x00020000
#define RXEQSTORE_CTRL_DFE_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_DFE_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: THRESHOLD_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer threshold bypass enable register. */
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_SET_OFFSET 0x00000012
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_SET_MASK 0x00040000
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: TARGET_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the slicer target bypass enable register. */
#define RXEQSTORE_CTRL_TARGET_BYPASS_SET_OFFSET 0x00000013
#define RXEQSTORE_CTRL_TARGET_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_TARGET_BYPASS_SET_MASK 0x00080000
#define RXEQSTORE_CTRL_TARGET_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_TARGET_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: CTLE_BOOST_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the ctle boost bypass enable register. */
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_SET_OFFSET 0x00000014
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_SET_MASK 0x00100000
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the vga offset bypass enable register. */
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_SET_OFFSET 0x00000015
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_SET_MASK 0x00200000
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSEFINE_BYPASS_SET */
/* DESCRIPTION: */
/*   When asserted, sets the vga coarsefine bypass enable register. */
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_SET_OFFSET 0x00000016
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_SET_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_SET_MASK 0x00400000
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_SET_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_SET_RESET_VALUE 0x00000000

/* FIELD: COEFF_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the ffe coefficient bypass enable register. */
#define RXEQSTORE_CTRL_COEFF_BYPASS_CLR_OFFSET 0x00000018
#define RXEQSTORE_CTRL_COEFF_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_COEFF_BYPASS_CLR_MASK 0x01000000
#define RXEQSTORE_CTRL_COEFF_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_COEFF_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: DFE_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the dfe coefficient bypass enable register. */
#define RXEQSTORE_CTRL_DFE_BYPASS_CLR_OFFSET 0x00000019
#define RXEQSTORE_CTRL_DFE_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_DFE_BYPASS_CLR_MASK 0x02000000
#define RXEQSTORE_CTRL_DFE_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_DFE_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: THRESHOLD_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the slicer threshold bypass enable register. */
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_CLR_OFFSET 0x0000001A
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_CLR_MASK 0x04000000
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_THRESHOLD_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: TARGET_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the slicer target bypass enable register. */
#define RXEQSTORE_CTRL_TARGET_BYPASS_CLR_OFFSET 0x0000001B
#define RXEQSTORE_CTRL_TARGET_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_TARGET_BYPASS_CLR_MASK 0x08000000
#define RXEQSTORE_CTRL_TARGET_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_TARGET_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: CTLE_BOOST_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the ctle boost bypass enable register. */
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_CLR_OFFSET 0x0000001C
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_CLR_MASK 0x10000000
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_CTLE_BOOST_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: VGA_OFFSET_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the vga offset bypass enable register. */
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_CLR_OFFSET 0x0000001D
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_CLR_MASK 0x20000000
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_OFFSET_BYPASS_CLR_RESET_VALUE 0x00000000

/* FIELD: VGA_COARSEFINE_BYPASS_CLR */
/* DESCRIPTION: */
/*   When asserted, clears the vga coarsefine bypass enable register. */
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_CLR_OFFSET 0x0000001E
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_CLR_BITWIDTH 0x00000001
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_CLR_MASK 0x40000000
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_CLR_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL_VGA_COARSEFINE_BYPASS_CLR_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE_CTRL2 */
/* DESCRIPTION: */
/*   Stored equalization value copy control */
/* ------------------------------------- */
#define RXEQSTORE_CTRL2_ADDR 0x02000724
#define RXEQSTORE_CTRL2_SIZE 32

/* FIELD: RXEQSTORE_COPY */
/* DESCRIPTION: */
/*   When each bit is asserted, that rxeqstore takes the value of the eqstore as determined by rxeqstore_copysrc_nt */
#define RXEQSTORE_CTRL2_RXEQSTORE_COPY_OFFSET 0x00000000
#define RXEQSTORE_CTRL2_RXEQSTORE_COPY_BITWIDTH 0x00000008
#define RXEQSTORE_CTRL2_RXEQSTORE_COPY_MASK 0x000000FF
#define RXEQSTORE_CTRL2_RXEQSTORE_COPY_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL2_RXEQSTORE_COPY_RESET_VALUE 0x00000000

/* FIELD: RXEQSTORE_COPYSRC */
/* DESCRIPTION: */
/*   Determines the source eqstore for copying */
#define RXEQSTORE_CTRL2_RXEQSTORE_COPYSRC_OFFSET 0x00000008
#define RXEQSTORE_CTRL2_RXEQSTORE_COPYSRC_BITWIDTH 0x00000003
#define RXEQSTORE_CTRL2_RXEQSTORE_COPYSRC_MASK 0x00000700
#define RXEQSTORE_CTRL2_RXEQSTORE_COPYSRC_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_CTRL2_RXEQSTORE_COPYSRC_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXEQSTORE_MUX */
/* DESCRIPTION: */
/*   Stored equalization values control */
/* ------------------------------------- */
#define RXEQSTORE_MUX_ADDR 0x02000728
#define RXEQSTORE_MUX_SIZE 32

/* FIELD: SEL0_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate0 */
#define RXEQSTORE_MUX_SEL0_NT_OFFSET 0x00000000
#define RXEQSTORE_MUX_SEL0_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL0_NT_MASK 0x00000007
#define RXEQSTORE_MUX_SEL0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL0_NT_RESET_VALUE 0x00000000

/* FIELD: SEL1_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate1 */
#define RXEQSTORE_MUX_SEL1_NT_OFFSET 0x00000003
#define RXEQSTORE_MUX_SEL1_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL1_NT_MASK 0x00000038
#define RXEQSTORE_MUX_SEL1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL1_NT_RESET_VALUE 0x00000001

/* FIELD: SEL2_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate2 */
#define RXEQSTORE_MUX_SEL2_NT_OFFSET 0x00000008
#define RXEQSTORE_MUX_SEL2_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL2_NT_MASK 0x00000700
#define RXEQSTORE_MUX_SEL2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL2_NT_RESET_VALUE 0x00000002

/* FIELD: SEL3_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate3 */
#define RXEQSTORE_MUX_SEL3_NT_OFFSET 0x0000000C
#define RXEQSTORE_MUX_SEL3_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL3_NT_MASK 0x00007000
#define RXEQSTORE_MUX_SEL3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL3_NT_RESET_VALUE 0x00000003

/* FIELD: SEL4_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate4 */
#define RXEQSTORE_MUX_SEL4_NT_OFFSET 0x00000010
#define RXEQSTORE_MUX_SEL4_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL4_NT_MASK 0x00070000
#define RXEQSTORE_MUX_SEL4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL4_NT_RESET_VALUE 0x00000004

/* FIELD: SEL5_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate5 */
#define RXEQSTORE_MUX_SEL5_NT_OFFSET 0x00000013
#define RXEQSTORE_MUX_SEL5_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL5_NT_MASK 0x00380000
#define RXEQSTORE_MUX_SEL5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL5_NT_RESET_VALUE 0x00000005

/* FIELD: SEL6_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate6 */
#define RXEQSTORE_MUX_SEL6_NT_OFFSET 0x00000016
#define RXEQSTORE_MUX_SEL6_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL6_NT_MASK 0x01C00000
#define RXEQSTORE_MUX_SEL6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL6_NT_RESET_VALUE 0x00000006

/* FIELD: SEL7_NT */
/* DESCRIPTION: */
/*   Controls which saved rxeqstore value to use while for rate7 */
#define RXEQSTORE_MUX_SEL7_NT_OFFSET 0x0000001A
#define RXEQSTORE_MUX_SEL7_NT_BITWIDTH 0x00000003
#define RXEQSTORE_MUX_SEL7_NT_MASK 0x1C000000
#define RXEQSTORE_MUX_SEL7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXEQSTORE_MUX_SEL7_NT_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: RXIFFSM_CTRL */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXIFFSM_CTRL_ADDR 0x0200072C
#define RXIFFSM_CTRL_SIZE 32

/* FIELD: RXIFFSM_CMN_PUP_POWER_STATE */
/* DESCRIPTION: */
/*   Common power up state. IF fsm will power up the common prior to calling the mfsm if the target power state is greater than or equal to this value. Common will be powered down after mfsm call if target power state is less than this value. */
#define RXIFFSM_CTRL_RXIFFSM_CMN_PUP_POWER_STATE_OFFSET 0x00000000
#define RXIFFSM_CTRL_RXIFFSM_CMN_PUP_POWER_STATE_BITWIDTH 0x00000003
#define RXIFFSM_CTRL_RXIFFSM_CMN_PUP_POWER_STATE_MASK 0x00000007
#define RXIFFSM_CTRL_RXIFFSM_CMN_PUP_POWER_STATE_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_CMN_PUP_POWER_STATE_RESET_VALUE 0x00000003

/* FIELD: RXIFFSM_L1CTRL */
/* DESCRIPTION: */
/*   L1 control, each bit representing a power state. If bit is asserted, IF fsm will assert the L1 control bit prior to calling mfsm. If deasserted, IF fsm will deassert the L1 control bit after calling mfsm. */
#define RXIFFSM_CTRL_RXIFFSM_L1CTRL_OFFSET 0x00000003
#define RXIFFSM_CTRL_RXIFFSM_L1CTRL_BITWIDTH 0x00000008
#define RXIFFSM_CTRL_RXIFFSM_L1CTRL_MASK 0x000007F8
#define RXIFFSM_CTRL_RXIFFSM_L1CTRL_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_L1CTRL_RESET_VALUE 0x00000020

/* FIELD: RXIFFSM_INIT_RATE */
/* DESCRIPTION: */
/*   Current rate setting for the first state/linkeval transition when rxiffsm_init is set */
#define RXIFFSM_CTRL_RXIFFSM_INIT_RATE_OFFSET 0x0000000B
#define RXIFFSM_CTRL_RXIFFSM_INIT_RATE_BITWIDTH 0x00000003
#define RXIFFSM_CTRL_RXIFFSM_INIT_RATE_MASK 0x00003800
#define RXIFFSM_CTRL_RXIFFSM_INIT_RATE_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_RATE_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_INIT_WIDTH */
/* DESCRIPTION: */
/*   Current width setting for the first state/linkeval transition when rxiffsm_init is set */
#define RXIFFSM_CTRL_RXIFFSM_INIT_WIDTH_OFFSET 0x00000010
#define RXIFFSM_CTRL_RXIFFSM_INIT_WIDTH_BITWIDTH 0x00000004
#define RXIFFSM_CTRL_RXIFFSM_INIT_WIDTH_MASK 0x000F0000
#define RXIFFSM_CTRL_RXIFFSM_INIT_WIDTH_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_WIDTH_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_INIT_PAM */
/* DESCRIPTION: */
/*   Current pam setting for the first state/linkeval transition when rxiffsm_init is set */
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_OFFSET 0x00000014
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_MASK 0x00100000
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_INIT_PAM_GRAY */
/* DESCRIPTION: */
/*   Current pam gray setting for the first state/linkeval transition when rxiffsm_init is set */
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_GRAY_OFFSET 0x00000015
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_GRAY_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_GRAY_MASK 0x00200000
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_GRAY_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_GRAY_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_INIT_PAM_PRE */
/* DESCRIPTION: */
/*   Current pam precoding setting for the first state/linkeval transition when rxiffsm_init is set */
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_PRE_OFFSET 0x00000016
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_PRE_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_PRE_MASK 0x00400000
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_PRE_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_PAM_PRE_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_INIT */
/* DESCRIPTION: */
/*   Controls whether rxiffsm_init_* signals are read on a state/linkeval transition. Automatically cleared after those values are read. This setting is used to inform the IFFSM the current state (rate/width/etc) after a reset. */
#define RXIFFSM_CTRL_RXIFFSM_INIT_OFFSET 0x00000017
#define RXIFFSM_CTRL_RXIFFSM_INIT_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_INIT_MASK 0x00800000
#define RXIFFSM_CTRL_RXIFFSM_INIT_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_INIT_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_GENERAL_REQ_A */
/* DESCRIPTION: */
/*   Request signal for RX MFSM general instruction. Part of a req/ack interface with rxiffsm_general_ack */
#define RXIFFSM_CTRL_RXIFFSM_GENERAL_REQ_A_OFFSET 0x00000018
#define RXIFFSM_CTRL_RXIFFSM_GENERAL_REQ_A_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_GENERAL_REQ_A_MASK 0x01000000
#define RXIFFSM_CTRL_RXIFFSM_GENERAL_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_GENERAL_REQ_A_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_RCHNG_AFTER_RESET */
/* DESCRIPTION: */
/*   Asserting this signal will result in the MFSM always performing a rate change operation prior to powering up when exiting reset */
#define RXIFFSM_CTRL_RXIFFSM_RCHNG_AFTER_RESET_OFFSET 0x00000019
#define RXIFFSM_CTRL_RXIFFSM_RCHNG_AFTER_RESET_BITWIDTH 0x00000001
#define RXIFFSM_CTRL_RXIFFSM_RCHNG_AFTER_RESET_MASK 0x02000000
#define RXIFFSM_CTRL_RXIFFSM_RCHNG_AFTER_RESET_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_CTRL_RXIFFSM_RCHNG_AFTER_RESET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXIFFSM_LINKEVAL */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXIFFSM_LINKEVAL_ADDR 0x02000730
#define RXIFFSM_LINKEVAL_SIZE 32

/* FIELD: RXIFFSM_LINKEVAL_OVR_ENA */
/* DESCRIPTION: */
/*   Override enable for link evaluation inputs to RX IF FSM. */
/*   0 - Normal operation */
/*   1 - linkeval_*_ovr signals enabled */
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_OVR_ENA_OFFSET 0x00000000
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_OVR_ENA_BITWIDTH 0x00000001
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_OVR_ENA_MASK 0x00000001
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_OVR_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_OVR_ENA_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_LINKEVAL_REQ_OVR */
/* DESCRIPTION: */
/*   Link evaluation request override to RX IF FSM. */
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_REQ_OVR_OFFSET 0x00000001
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_REQ_OVR_BITWIDTH 0x00000001
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_REQ_OVR_MASK 0x00000002
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_REQ_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_REQ_OVR_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_LINKEVAL_TYPE_OVR */
/* DESCRIPTION: */
/*   Link evaluation type override to RX IF FSM. */
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_TYPE_OVR_OFFSET 0x00000002
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_TYPE_OVR_BITWIDTH 0x00000003
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_TYPE_OVR_MASK 0x0000001C
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_TYPE_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define RXIFFSM_LINKEVAL_RXIFFSM_LINKEVAL_TYPE_OVR_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXIFFSM_LINKEVAL_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXIFFSM_LINKEVAL_REG2_ADDR 0x02000734
#define RXIFFSM_LINKEVAL_REG2_SIZE 32

/* FIELD: RXIFFSM_LINKEVAL_ACK */
/* DESCRIPTION: */
/*   Link evaluation ack signal from RX IF FSM. */
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_ACK_OFFSET 0x00000005
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_ACK_BITWIDTH 0x00000001
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_ACK_MASK 0x00000020
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_ACK_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_LINKEVAL_FOM */
/* DESCRIPTION: */
/*   Link evaluation figure of merit feedback from RX IF FSM. */
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_FOM_OFFSET 0x00000008
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_FOM_BITWIDTH 0x00000008
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_FOM_MASK 0x0000FF00
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_FOM_ACCESS JUPITER_CSR_READ_ONLY
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_FOM_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_LINKEVAL_DIR */
/* DESCRIPTION: */
/*   Link evaluation direction feedback from RX IF FSM. */
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_DIR_OFFSET 0x00000010
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_DIR_BITWIDTH 0x0000000A
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_DIR_MASK 0x03FF0000
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_DIR_ACCESS JUPITER_CSR_READ_ONLY
#define RXIFFSM_LINKEVAL_REG2_RXIFFSM_LINKEVAL_DIR_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXIFFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXIFFSM_STAT_ADDR 0x02000738
#define RXIFFSM_STAT_SIZE 32

/* FIELD: RXIFFSM_STATE */
/* DESCRIPTION: */
/*   Interface FSM state */
#define RXIFFSM_STAT_RXIFFSM_STATE_OFFSET 0x00000000
#define RXIFFSM_STAT_RXIFFSM_STATE_BITWIDTH 0x00000006
#define RXIFFSM_STAT_RXIFFSM_STATE_MASK 0x0000003F
#define RXIFFSM_STAT_RXIFFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define RXIFFSM_STAT_RXIFFSM_STATE_RESET_VALUE 0x00000000

/* FIELD: RXIFFSM_GENERAL_ACK */
/* DESCRIPTION: */
/*   Ack signal for RX MFSM general instruction. Part of a req/ack interface with rxiffsm_general_req */
#define RXIFFSM_STAT_RXIFFSM_GENERAL_ACK_OFFSET 0x00000006
#define RXIFFSM_STAT_RXIFFSM_GENERAL_ACK_BITWIDTH 0x00000001
#define RXIFFSM_STAT_RXIFFSM_GENERAL_ACK_MASK 0x00000040
#define RXIFFSM_STAT_RXIFFSM_GENERAL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define RXIFFSM_STAT_RXIFFSM_GENERAL_ACK_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXLINKEVAL_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXLINKEVAL_STAT_ADDR 0x0200073C
#define RXLINKEVAL_STAT_SIZE 32

/* FIELD: RXLINKEVAL_FOM */
/* DESCRIPTION: */
/*   Link evaluation FOM feedback. This value is returned to the upper level logic when a link evaluation w/ FOM feedback is called. */
#define RXLINKEVAL_STAT_RXLINKEVAL_FOM_OFFSET 0x00000000
#define RXLINKEVAL_STAT_RXLINKEVAL_FOM_BITWIDTH 0x00000008
#define RXLINKEVAL_STAT_RXLINKEVAL_FOM_MASK 0x000000FF
#define RXLINKEVAL_STAT_RXLINKEVAL_FOM_ACCESS JUPITER_CSR_READ_WRITE
#define RXLINKEVAL_STAT_RXLINKEVAL_FOM_RESET_VALUE 0x00000000

/* FIELD: RXLINKEVAL_DIR */
/* DESCRIPTION: */
/*   Link evaluation direction feedback. This value is returned to the upper level logic when a link evaluation w/ directional feedback is called. */
#define RXLINKEVAL_STAT_RXLINKEVAL_DIR_OFFSET 0x00000010
#define RXLINKEVAL_STAT_RXLINKEVAL_DIR_BITWIDTH 0x0000000A
#define RXLINKEVAL_STAT_RXLINKEVAL_DIR_MASK 0x03FF0000
#define RXLINKEVAL_STAT_RXLINKEVAL_DIR_ACCESS JUPITER_CSR_READ_WRITE
#define RXLINKEVAL_STAT_RXLINKEVAL_DIR_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMARGIN */
/* DESCRIPTION: */
/*   Register control of rxmargin interface block */
/* ------------------------------------- */
#define RXMARGIN_ADDR 0x02000740
#define RXMARGIN_SIZE 32

/* FIELD: VOLT_OFFSET_NT */
/* DESCRIPTION: */
/*   Register override  */
#define RXMARGIN_VOLT_OFFSET_NT_OFFSET 0x00000000
#define RXMARGIN_VOLT_OFFSET_NT_BITWIDTH 0x00000007
#define RXMARGIN_VOLT_OFFSET_NT_MASK 0x0000007F
#define RXMARGIN_VOLT_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_VOLT_OFFSET_NT_RESET_VALUE 0x00000000

/* FIELD: VOLT_DIR_NT */
/* DESCRIPTION: */
/*   Register override  */
#define RXMARGIN_VOLT_DIR_NT_OFFSET 0x00000007
#define RXMARGIN_VOLT_DIR_NT_BITWIDTH 0x00000001
#define RXMARGIN_VOLT_DIR_NT_MASK 0x00000080
#define RXMARGIN_VOLT_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_VOLT_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: TIME_OFFSET_NT */
/* DESCRIPTION: */
/*   Register override  */
#define RXMARGIN_TIME_OFFSET_NT_OFFSET 0x00000008
#define RXMARGIN_TIME_OFFSET_NT_BITWIDTH 0x00000007
#define RXMARGIN_TIME_OFFSET_NT_MASK 0x00007F00
#define RXMARGIN_TIME_OFFSET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_TIME_OFFSET_NT_RESET_VALUE 0x00000000

/* FIELD: TIME_DIR_NT */
/* DESCRIPTION: */
/*   Register override  */
#define RXMARGIN_TIME_DIR_NT_OFFSET 0x0000000F
#define RXMARGIN_TIME_DIR_NT_BITWIDTH 0x00000001
#define RXMARGIN_TIME_DIR_NT_MASK 0x00008000
#define RXMARGIN_TIME_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_TIME_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: DELAY_NT */
/* DESCRIPTION: */
/*   Number of cycles to wait before asserting ack after values changed */
#define RXMARGIN_DELAY_NT_OFFSET 0x00000010
#define RXMARGIN_DELAY_NT_BITWIDTH 0x00000004
#define RXMARGIN_DELAY_NT_MASK 0x000F0000
#define RXMARGIN_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_DELAY_NT_RESET_VALUE 0x00000004

/* FIELD: CHNG_A */
/* DESCRIPTION: */
/*   Register override for chng enable signal from rxmargin block. Output values are read by other blocks when this signal changes */
#define RXMARGIN_CHNG_A_OFFSET 0x00000014
#define RXMARGIN_CHNG_A_BITWIDTH 0x00000001
#define RXMARGIN_CHNG_A_MASK 0x00100000
#define RXMARGIN_CHNG_A_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_CHNG_A_RESET_VALUE 0x00000000

/* FIELD: OVR_EN_A */
/* DESCRIPTION: */
/*   Override enable of outputs of rxmargin interface block. 0 - Normal operation. 1 - Register overrides enabled */
#define RXMARGIN_OVR_EN_A_OFFSET 0x00000015
#define RXMARGIN_OVR_EN_A_BITWIDTH 0x00000001
#define RXMARGIN_OVR_EN_A_MASK 0x00200000
#define RXMARGIN_OVR_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define RXMARGIN_OVR_EN_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_ADDR_OFFSET_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDR_OFFSET_REG1_ADDR 0x02000744
#define RXMFSM_ADDR_OFFSET_REG1_SIZE 32

/* FIELD: RXMFSM_ADDR_OFFSET_R0 */
/* DESCRIPTION: */
/*   Address offset for rate 0, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R0_OFFSET 0x00000000
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R0_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R0_MASK 0x0000FFFF
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R0_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R0_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_ADDR_OFFSET_R1 */
/* DESCRIPTION: */
/*   Address offset for rate 1, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R1_OFFSET 0x00000010
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R1_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R1_MASK 0xFFFF0000
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R1_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG1_RXMFSM_ADDR_OFFSET_R1_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: RXMFSM_ADDR_OFFSET_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDR_OFFSET_REG2_ADDR 0x02000748
#define RXMFSM_ADDR_OFFSET_REG2_SIZE 32

/* FIELD: RXMFSM_ADDR_OFFSET_R2 */
/* DESCRIPTION: */
/*   Address offset for rate 2, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R2_OFFSET 0x00000000
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R2_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R2_MASK 0x0000FFFF
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R2_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R2_RESET_VALUE 0x00000008

/* FIELD: RXMFSM_ADDR_OFFSET_R3 */
/* DESCRIPTION: */
/*   Address offset for rate 3, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R3_OFFSET 0x00000010
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R3_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R3_MASK 0xFFFF0000
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R3_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG2_RXMFSM_ADDR_OFFSET_R3_RESET_VALUE 0x0000000C

/* ------------------------------------- */
/* REG: RXMFSM_ADDR_OFFSET_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDR_OFFSET_REG3_ADDR 0x0200074C
#define RXMFSM_ADDR_OFFSET_REG3_SIZE 32

/* FIELD: RXMFSM_ADDR_OFFSET_R4 */
/* DESCRIPTION: */
/*   Address offset for rate 4, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R4_OFFSET 0x00000000
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R4_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R4_MASK 0x0000FFFF
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R4_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R4_RESET_VALUE 0x00000010

/* FIELD: RXMFSM_ADDR_OFFSET_R5 */
/* DESCRIPTION: */
/*   Address offset for rate 5, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R5_OFFSET 0x00000010
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R5_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R5_MASK 0xFFFF0000
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R5_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG3_RXMFSM_ADDR_OFFSET_R5_RESET_VALUE 0x00000014

/* ------------------------------------- */
/* REG: RXMFSM_ADDR_OFFSET_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDR_OFFSET_REG4_ADDR 0x02000750
#define RXMFSM_ADDR_OFFSET_REG4_SIZE 32

/* FIELD: RXMFSM_ADDR_OFFSET_R6 */
/* DESCRIPTION: */
/*   Address offset for rate 6, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R6_OFFSET 0x00000000
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R6_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R6_MASK 0x0000FFFF
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R6_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R6_RESET_VALUE 0x00000018

/* FIELD: RXMFSM_ADDR_OFFSET_R7 */
/* DESCRIPTION: */
/*   Address offset for rate 7, used during CSR read/writes where rate dependency is enabled */
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R7_OFFSET 0x00000010
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R7_BITWIDTH 0x00000010
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R7_MASK 0xFFFF0000
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R7_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDR_OFFSET_REG4_RXMFSM_ADDR_OFFSET_R7_RESET_VALUE 0x0000001C

/* ------------------------------------- */
/* REG: RXMFSM_ADDRESS_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDRESS_REG1_ADDR 0x02000754
#define RXMFSM_ADDRESS_REG1_SIZE 32

/* FIELD: RXMFSM_CSR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all CSR operations performed by the mfsm */
#define RXMFSM_ADDRESS_REG1_RXMFSM_CSR_ADDRESS_START_OFFSET 0x00000000
#define RXMFSM_ADDRESS_REG1_RXMFSM_CSR_ADDRESS_START_BITWIDTH 0x00000010
#define RXMFSM_ADDRESS_REG1_RXMFSM_CSR_ADDRESS_START_MASK 0x0000FFFF
#define RXMFSM_ADDRESS_REG1_RXMFSM_CSR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDRESS_REG1_RXMFSM_CSR_ADDRESS_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_INSTR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all instructions read by the mfsm */
#define RXMFSM_ADDRESS_REG1_RXMFSM_INSTR_ADDRESS_START_OFFSET 0x00000010
#define RXMFSM_ADDRESS_REG1_RXMFSM_INSTR_ADDRESS_START_BITWIDTH 0x00000010
#define RXMFSM_ADDRESS_REG1_RXMFSM_INSTR_ADDRESS_START_MASK 0xFFFF0000
#define RXMFSM_ADDRESS_REG1_RXMFSM_INSTR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDRESS_REG1_RXMFSM_INSTR_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_ADDRESS_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_ADDRESS_REG2_ADDR 0x02000758
#define RXMFSM_ADDRESS_REG2_SIZE 32

/* FIELD: RXMFSM_SRAM_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all SRAM read/writes read by the mfsm */
#define RXMFSM_ADDRESS_REG2_RXMFSM_SRAM_ADDRESS_START_OFFSET 0x00000000
#define RXMFSM_ADDRESS_REG2_RXMFSM_SRAM_ADDRESS_START_BITWIDTH 0x00000010
#define RXMFSM_ADDRESS_REG2_RXMFSM_SRAM_ADDRESS_START_MASK 0x0000FFFF
#define RXMFSM_ADDRESS_REG2_RXMFSM_SRAM_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_ADDRESS_REG2_RXMFSM_SRAM_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_CTRL */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_CTRL_ADDR 0x0200075C
#define RXMFSM_CTRL_SIZE 32

/* FIELD: RXMFSM_EQBK_POWER_STATE */
/* DESCRIPTION: */
/*   Defines power state where background equalization may be run */
#define RXMFSM_CTRL_RXMFSM_EQBK_POWER_STATE_OFFSET 0x00000000
#define RXMFSM_CTRL_RXMFSM_EQBK_POWER_STATE_BITWIDTH 0x00000003
#define RXMFSM_CTRL_RXMFSM_EQBK_POWER_STATE_MASK 0x00000007
#define RXMFSM_CTRL_RXMFSM_EQBK_POWER_STATE_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_CTRL_RXMFSM_EQBK_POWER_STATE_RESET_VALUE 0x00000007

/* FIELD: RXMFSM_EQ_CHECK_RXDISABLE */
/* DESCRIPTION: */
/*   Foreground equalization rxdisable check enable */
/*   0 - Ignore rxdisable */
/*   1 - Abort if rxdisable deasserted during operation */
#define RXMFSM_CTRL_RXMFSM_EQ_CHECK_RXDISABLE_OFFSET 0x00000003
#define RXMFSM_CTRL_RXMFSM_EQ_CHECK_RXDISABLE_BITWIDTH 0x00000001
#define RXMFSM_CTRL_RXMFSM_EQ_CHECK_RXDISABLE_MASK 0x00000008
#define RXMFSM_CTRL_RXMFSM_EQ_CHECK_RXDISABLE_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_CTRL_RXMFSM_EQ_CHECK_RXDISABLE_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_EQBK_ABORT_SIGDET */
/* DESCRIPTION: */
/*   Enable background abort on signal detect fall */
/*   0 - Disabled */
/*   1 - Enabled */
#define RXMFSM_CTRL_RXMFSM_EQBK_ABORT_SIGDET_OFFSET 0x00000004
#define RXMFSM_CTRL_RXMFSM_EQBK_ABORT_SIGDET_BITWIDTH 0x00000001
#define RXMFSM_CTRL_RXMFSM_EQBK_ABORT_SIGDET_MASK 0x00000010
#define RXMFSM_CTRL_RXMFSM_EQBK_ABORT_SIGDET_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_CTRL_RXMFSM_EQBK_ABORT_SIGDET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_CTRL */
/* DESCRIPTION: */
/*   MFSM logging control */
/* ------------------------------------- */
#define RXMFSM_LOG_CTRL_ADDR 0x02000760
#define RXMFSM_LOG_CTRL_SIZE 32

/* FIELD: EN */
/* DESCRIPTION: */
/*   MFSM logging enable. 0 = disabled, 1 = enabled. */
#define RXMFSM_LOG_CTRL_EN_OFFSET 0x00000000
#define RXMFSM_LOG_CTRL_EN_BITWIDTH 0x00000001
#define RXMFSM_LOG_CTRL_EN_MASK 0x00000001
#define RXMFSM_LOG_CTRL_EN_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_LOG_CTRL_EN_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_RDREG1 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define RXMFSM_LOG_RDREG1_ADDR 0x02000764
#define RXMFSM_LOG_RDREG1_SIZE 32

/* FIELD: LOG0 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG1_LOG0_OFFSET 0x00000000
#define RXMFSM_LOG_RDREG1_LOG0_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG1_LOG0_MASK 0x0000FFFF
#define RXMFSM_LOG_RDREG1_LOG0_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG1_LOG0_RESET_VALUE 0x00000000

/* FIELD: LOG1 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG1_LOG1_OFFSET 0x00000010
#define RXMFSM_LOG_RDREG1_LOG1_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG1_LOG1_MASK 0xFFFF0000
#define RXMFSM_LOG_RDREG1_LOG1_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG1_LOG1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_RDREG2 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define RXMFSM_LOG_RDREG2_ADDR 0x02000768
#define RXMFSM_LOG_RDREG2_SIZE 32

/* FIELD: LOG2 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG2_LOG2_OFFSET 0x00000000
#define RXMFSM_LOG_RDREG2_LOG2_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG2_LOG2_MASK 0x0000FFFF
#define RXMFSM_LOG_RDREG2_LOG2_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG2_LOG2_RESET_VALUE 0x00000000

/* FIELD: LOG3 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG2_LOG3_OFFSET 0x00000010
#define RXMFSM_LOG_RDREG2_LOG3_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG2_LOG3_MASK 0xFFFF0000
#define RXMFSM_LOG_RDREG2_LOG3_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG2_LOG3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_RDREG3 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define RXMFSM_LOG_RDREG3_ADDR 0x0200076C
#define RXMFSM_LOG_RDREG3_SIZE 32

/* FIELD: LOG4 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG3_LOG4_OFFSET 0x00000000
#define RXMFSM_LOG_RDREG3_LOG4_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG3_LOG4_MASK 0x0000FFFF
#define RXMFSM_LOG_RDREG3_LOG4_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG3_LOG4_RESET_VALUE 0x00000000

/* FIELD: LOG5 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG3_LOG5_OFFSET 0x00000010
#define RXMFSM_LOG_RDREG3_LOG5_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG3_LOG5_MASK 0xFFFF0000
#define RXMFSM_LOG_RDREG3_LOG5_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG3_LOG5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_RDREG4 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define RXMFSM_LOG_RDREG4_ADDR 0x02000770
#define RXMFSM_LOG_RDREG4_SIZE 32

/* FIELD: LOG6 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG4_LOG6_OFFSET 0x00000000
#define RXMFSM_LOG_RDREG4_LOG6_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG4_LOG6_MASK 0x0000FFFF
#define RXMFSM_LOG_RDREG4_LOG6_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG4_LOG6_RESET_VALUE 0x00000000

/* FIELD: LOG7 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG4_LOG7_OFFSET 0x00000010
#define RXMFSM_LOG_RDREG4_LOG7_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG4_LOG7_MASK 0xFFFF0000
#define RXMFSM_LOG_RDREG4_LOG7_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG4_LOG7_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_LOG_RDREG5 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define RXMFSM_LOG_RDREG5_ADDR 0x02000774
#define RXMFSM_LOG_RDREG5_SIZE 32

/* FIELD: LOG8 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG5_LOG8_OFFSET 0x00000000
#define RXMFSM_LOG_RDREG5_LOG8_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG5_LOG8_MASK 0x0000FFFF
#define RXMFSM_LOG_RDREG5_LOG8_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG5_LOG8_RESET_VALUE 0x00000000

/* FIELD: LOG9 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define RXMFSM_LOG_RDREG5_LOG9_OFFSET 0x00000010
#define RXMFSM_LOG_RDREG5_LOG9_BITWIDTH 0x00000010
#define RXMFSM_LOG_RDREG5_LOG9_MASK 0xFFFF0000
#define RXMFSM_LOG_RDREG5_LOG9_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_LOG_RDREG5_LOG9_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_OVR */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_OVR_ADDR 0x02000778
#define RXMFSM_OVR_SIZE 32

/* FIELD: RXMFSM_ACK_OVR_ENA */
/* DESCRIPTION: */
/*   Override enable for signal from mfsm to interface fsm. */
/*   0 = Normal operation */
/*   1 = Override enabled */
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ENA_OFFSET 0x00000000
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ENA_BITWIDTH 0x00000001
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ENA_MASK 0x00000001
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ENA_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_ACK_OVR */
/* DESCRIPTION: */
/*   Override for ack signal from mfsm to interface fsm. */
#define RXMFSM_OVR_RXMFSM_ACK_OVR_OFFSET 0x00000001
#define RXMFSM_OVR_RXMFSM_ACK_OVR_BITWIDTH 0x00000001
#define RXMFSM_OVR_RXMFSM_ACK_OVR_MASK 0x00000002
#define RXMFSM_OVR_RXMFSM_ACK_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_OVR_RXMFSM_ACK_OVR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RUNNING_OVR */
/* DESCRIPTION: */
/*   Override for running signal from mfsm to interface fsm. */
#define RXMFSM_OVR_RXMFSM_RUNNING_OVR_OFFSET 0x00000002
#define RXMFSM_OVR_RXMFSM_RUNNING_OVR_BITWIDTH 0x00000001
#define RXMFSM_OVR_RXMFSM_RUNNING_OVR_MASK 0x00000004
#define RXMFSM_OVR_RXMFSM_RUNNING_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_OVR_RXMFSM_RUNNING_OVR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_CSR_DISABLE */
/* DESCRIPTION: */
/*   When asserted, clears the ctle boost bypass enable register. */
#define RXMFSM_OVR_RXMFSM_CSR_DISABLE_OFFSET 0x00000003
#define RXMFSM_OVR_RXMFSM_CSR_DISABLE_BITWIDTH 0x00000001
#define RXMFSM_OVR_RXMFSM_CSR_DISABLE_MASK 0x00000008
#define RXMFSM_OVR_RXMFSM_CSR_DISABLE_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_OVR_RXMFSM_CSR_DISABLE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_EQBK */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_EQBK_ADDR 0x0200077C
#define RXMFSM_PTR_EQBK_SIZE 32

/* FIELD: RXMFSM_EQBK_ABORT_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for background equalization abort block */
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_ABORT_START_OFFSET 0x00000000
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_ABORT_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_ABORT_START_MASK 0x0000FFFF
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_ABORT_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_ABORT_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_EQBK_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for background equalization block */
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_START_OFFSET 0x00000010
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_START_MASK 0xFFFF0000
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_EQBK_RXMFSM_EQBK_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_GENERAL */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_GENERAL_ADDR 0x02000780
#define RXMFSM_PTR_GENERAL_SIZE 32

/* FIELD: RXMFSM_GENERAL_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for general function */
#define RXMFSM_PTR_GENERAL_RXMFSM_GENERAL_START_OFFSET 0x00000000
#define RXMFSM_PTR_GENERAL_RXMFSM_GENERAL_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_GENERAL_RXMFSM_GENERAL_START_MASK 0x0000FFFF
#define RXMFSM_PTR_GENERAL_RXMFSM_GENERAL_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_GENERAL_RXMFSM_GENERAL_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_LINKEVAL_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_LINKEVAL_REG1_ADDR 0x02000784
#define RXMFSM_PTR_LINKEVAL_REG1_SIZE 32

/* FIELD: RXMFSM_LINKEVAL_INIT_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation init block */
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_INIT_START_OFFSET 0x00000000
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_INIT_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_INIT_START_MASK 0x0000FFFF
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_INIT_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_INIT_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_LINKEVAL_RST_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation reset block */
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_RST_START_OFFSET 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_RST_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_RST_START_MASK 0xFFFF0000
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_RST_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG1_RXMFSM_LINKEVAL_RST_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_LINKEVAL_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_LINKEVAL_REG2_ADDR 0x02000788
#define RXMFSM_PTR_LINKEVAL_REG2_SIZE 32

/* FIELD: RXMFSM_LINKEVAL_EVAL_DIR_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation evaluation only block, when returning directional */
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_DIR_START_OFFSET 0x00000000
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_DIR_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_DIR_START_MASK 0x0000FFFF
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_DIR_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_DIR_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_LINKEVAL_EVAL_FOM_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation evaluation only block, when returning fom result */
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_FOM_START_OFFSET 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_FOM_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_FOM_START_MASK 0xFFFF0000
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_FOM_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG2_RXMFSM_LINKEVAL_EVAL_FOM_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_LINKEVAL_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_LINKEVAL_REG3_ADDR 0x0200078C
#define RXMFSM_PTR_LINKEVAL_REG3_SIZE 32

/* FIELD: RXMFSM_LINKEVAL_FULL_DIR_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation full block, when return directional result */
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_DIR_START_OFFSET 0x00000000
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_DIR_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_DIR_START_MASK 0x0000FFFF
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_DIR_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_DIR_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_LINKEVAL_FULL_FOM_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation full block, when return fom result */
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_FOM_START_OFFSET 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_FOM_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_FOM_START_MASK 0xFFFF0000
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_FOM_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG3_RXMFSM_LINKEVAL_FULL_FOM_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_LINKEVAL_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_LINKEVAL_REG4_ADDR 0x02000790
#define RXMFSM_PTR_LINKEVAL_REG4_SIZE 32

/* FIELD: RXMFSM_LINKEVAL_ABORT_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for link evaluation abort block */
#define RXMFSM_PTR_LINKEVAL_REG4_RXMFSM_LINKEVAL_ABORT_START_OFFSET 0x00000000
#define RXMFSM_PTR_LINKEVAL_REG4_RXMFSM_LINKEVAL_ABORT_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_LINKEVAL_REG4_RXMFSM_LINKEVAL_ABORT_START_MASK 0x0000FFFF
#define RXMFSM_PTR_LINKEVAL_REG4_RXMFSM_LINKEVAL_ABORT_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_LINKEVAL_REG4_RXMFSM_LINKEVAL_ABORT_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_PDN_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_PDN_RATE_REG1_ADDR 0x02000794
#define RXMFSM_PTR_PDN_RATE_REG1_SIZE 32

/* FIELD: RXMFSM_PDN_RATEA_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power down section during rate change for A type rates */
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_START_OFFSET 0x00000000
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_START_MASK 0x0000FFFF
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PDN_RATEA_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power down section during rate change for A type rates */
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_END_OFFSET 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_END_BITWIDTH 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_END_MASK 0xFFFF0000
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_END_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PDN_RATE_REG1_RXMFSM_PDN_RATEA_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_PDN_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_PDN_RATE_REG2_ADDR 0x02000798
#define RXMFSM_PTR_PDN_RATE_REG2_SIZE 32

/* FIELD: RXMFSM_PDN_RATEB_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power down section during rate change for B type rates */
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_START_OFFSET 0x00000000
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_START_MASK 0x0000FFFF
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PDN_RATEB_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power down section during rate change for B type rates */
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_END_OFFSET 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_END_BITWIDTH 0x00000010
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_END_MASK 0xFFFF0000
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_END_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PDN_RATE_REG2_RXMFSM_PDN_RATEB_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_POWER_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_POWER_REG1_ADDR 0x0200079C
#define RXMFSM_PTR_POWER_REG1_SIZE 32

/* FIELD: RXMFSM_PUP_P4_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p4 */
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P4_START_OFFSET 0x00000000
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P4_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P4_START_MASK 0x0000FFFF
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P4_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P4_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PUP_P3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p3 */
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P3_START_OFFSET 0x00000010
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P3_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P3_START_MASK 0xFFFF0000
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P3_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG1_RXMFSM_PUP_P3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_POWER_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_POWER_REG2_ADDR 0x020007A0
#define RXMFSM_PTR_POWER_REG2_SIZE 32

/* FIELD: RXMFSM_PUP_P2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p2 */
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P2_START_OFFSET 0x00000000
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P2_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P2_START_MASK 0x0000FFFF
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P2_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P2_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PUP_P1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p1 */
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P1_START_OFFSET 0x00000010
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P1_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P1_START_MASK 0xFFFF0000
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P1_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG2_RXMFSM_PUP_P1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_POWER_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_POWER_REG3_ADDR 0x020007A4
#define RXMFSM_PTR_POWER_REG3_SIZE 32

/* FIELD: RXMFSM_PDN_P0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p0 */
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P0_START_OFFSET 0x00000000
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P0_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P0_START_MASK 0x0000FFFF
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P0_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P0_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PDN_P1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p1 */
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P1_START_OFFSET 0x00000010
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P1_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P1_START_MASK 0xFFFF0000
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P1_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG3_RXMFSM_PDN_P1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_POWER_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_POWER_REG4_ADDR 0x020007A8
#define RXMFSM_PTR_POWER_REG4_SIZE 32

/* FIELD: RXMFSM_PDN_P2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p2 */
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P2_START_OFFSET 0x00000000
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P2_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P2_START_MASK 0x0000FFFF
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P2_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P2_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PDN_P3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p3 */
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P3_START_OFFSET 0x00000010
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P3_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P3_START_MASK 0xFFFF0000
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P3_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG4_RXMFSM_PDN_P3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_POWER_REG5 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_POWER_REG5_ADDR 0x020007AC
#define RXMFSM_PTR_POWER_REG5_SIZE 32

/* FIELD: RXMFSM_PDN_P4_END */
/* DESCRIPTION: */
/*   End instruction pointer for power downs ending at p4 */
#define RXMFSM_PTR_POWER_REG5_RXMFSM_PDN_P4_END_OFFSET 0x00000000
#define RXMFSM_PTR_POWER_REG5_RXMFSM_PDN_P4_END_BITWIDTH 0x00000010
#define RXMFSM_PTR_POWER_REG5_RXMFSM_PDN_P4_END_MASK 0x0000FFFF
#define RXMFSM_PTR_POWER_REG5_RXMFSM_PDN_P4_END_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_POWER_REG5_RXMFSM_PDN_P4_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_PUP_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_PUP_RATE_REG1_ADDR 0x020007B0
#define RXMFSM_PTR_PUP_RATE_REG1_SIZE 32

/* FIELD: RXMFSM_PUP_RATEA_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power up section during rate change for A type rates */
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_START_OFFSET 0x00000000
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_START_MASK 0x0000FFFF
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PUP_RATEA_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power up section during rate change for A type rates */
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_END_OFFSET 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_END_BITWIDTH 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_END_MASK 0xFFFF0000
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_END_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PUP_RATE_REG1_RXMFSM_PUP_RATEA_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_PUP_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_PUP_RATE_REG2_ADDR 0x020007B4
#define RXMFSM_PTR_PUP_RATE_REG2_SIZE 32

/* FIELD: RXMFSM_PUP_RATEB_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power up section during rate change for B type rates */
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_START_OFFSET 0x00000000
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_START_MASK 0x0000FFFF
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PUP_RATEB_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power up section during rate change for B type rates */
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_END_OFFSET 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_END_BITWIDTH 0x00000010
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_END_MASK 0xFFFF0000
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_END_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_PUP_RATE_REG2_RXMFSM_PUP_RATEB_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_RATE_REG1_ADDR 0x020007B8
#define RXMFSM_PTR_RATE_REG1_SIZE 32

/* FIELD: RXMFSM_RATE0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 0 */
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE0_START_OFFSET 0x00000000
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE0_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE0_START_MASK 0x0000FFFF
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE0_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE0_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RATE1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 1 */
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE1_START_OFFSET 0x00000010
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE1_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE1_START_MASK 0xFFFF0000
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE1_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG1_RXMFSM_RATE1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_RATE_REG2_ADDR 0x020007BC
#define RXMFSM_PTR_RATE_REG2_SIZE 32

/* FIELD: RXMFSM_RATE2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 2 */
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE2_START_OFFSET 0x00000000
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE2_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE2_START_MASK 0x0000FFFF
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE2_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE2_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RATE3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 3 */
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE3_START_OFFSET 0x00000010
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE3_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE3_START_MASK 0xFFFF0000
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE3_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG2_RXMFSM_RATE3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_RATE_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_RATE_REG3_ADDR 0x020007C0
#define RXMFSM_PTR_RATE_REG3_SIZE 32

/* FIELD: RXMFSM_RATE4_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 4 */
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE4_START_OFFSET 0x00000000
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE4_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE4_START_MASK 0x0000FFFF
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE4_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE4_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RATE5_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 5 */
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE5_START_OFFSET 0x00000010
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE5_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE5_START_MASK 0xFFFF0000
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE5_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG3_RXMFSM_RATE5_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_RATE_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_RATE_REG4_ADDR 0x020007C4
#define RXMFSM_PTR_RATE_REG4_SIZE 32

/* FIELD: RXMFSM_RATE6_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 6 */
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE6_START_OFFSET 0x00000000
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE6_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE6_START_MASK 0x0000FFFF
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE6_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE6_START_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RATE7_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 7 */
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE7_START_OFFSET 0x00000010
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE7_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE7_START_MASK 0xFFFF0000
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE7_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RATE_REG4_RXMFSM_RATE7_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_PTR_RESET */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_PTR_RESET_ADDR 0x020007C8
#define RXMFSM_PTR_RESET_SIZE 32

/* FIELD: RXMFSM_RESET_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for reset block */
#define RXMFSM_PTR_RESET_RXMFSM_RESET_START_OFFSET 0x00000000
#define RXMFSM_PTR_RESET_RXMFSM_RESET_START_BITWIDTH 0x00000010
#define RXMFSM_PTR_RESET_RXMFSM_RESET_START_MASK 0x0000FFFF
#define RXMFSM_PTR_RESET_RXMFSM_RESET_START_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_PTR_RESET_RXMFSM_RESET_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_RCHANGE */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_RCHANGE_ADDR 0x020007CC
#define RXMFSM_RCHANGE_SIZE 32

/* FIELD: RXMFSM_RCHANGE_TYPE */
/* DESCRIPTION: */
/*   Rate change type. Each bit represents a possible transition. */
/*   00 - 0 to / from 1     07 - 1 to / from 2     14 - 2 to / from 4     21 - 3 to / from 7 */
/*   01 - 0 to / from 2     08 - 1 to / from 3     15 - 2 to / from 5     22 - 4 to / from 5 */
/*   02 - 0 to / from 3     09 - 1 to / from 4     16 - 2 to / from 6     23 - 4 to / from 6 */
/*   03 - 0 to / from 4     10 - 1 to / from 5     17 - 2 to / from 7     24 - 4 to / from 7 */
/*   04 - 0 to / from 5     11 - 1 to / from 6     18 - 3 to / from 4     25 - 5 to / from 6 */
/*   05 - 0 to / from 6     12 - 1 to / from 7     19 - 3 to / from 5     26 - 5 to / from 7 */
/*   06 - 0 to / from 7     13 - 2 to / from 3     20 - 3 to / from 6     27 - 6 to / from 7 */
#define RXMFSM_RCHANGE_RXMFSM_RCHANGE_TYPE_OFFSET 0x00000000
#define RXMFSM_RCHANGE_RXMFSM_RCHANGE_TYPE_BITWIDTH 0x0000001C
#define RXMFSM_RCHANGE_RXMFSM_RCHANGE_TYPE_MASK 0x0FFFFFFF
#define RXMFSM_RCHANGE_RXMFSM_RCHANGE_TYPE_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_RCHANGE_RXMFSM_RCHANGE_TYPE_RESET_VALUE 0x0FFFFFFF

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG1 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG1_ADDR 0x020007D0
#define RXMFSM_SCRATCH_REG1_SIZE 32

/* FIELD: RXMFSM_SCRATCH1 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG1_RXMFSM_SCRATCH1_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG1_RXMFSM_SCRATCH1_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG1_RXMFSM_SCRATCH1_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG1_RXMFSM_SCRATCH1_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG1_RXMFSM_SCRATCH1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG10 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG10_ADDR 0x020007D4
#define RXMFSM_SCRATCH_REG10_SIZE 32

/* FIELD: RXMFSM_SCRATCH10 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG10_RXMFSM_SCRATCH10_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG10_RXMFSM_SCRATCH10_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG10_RXMFSM_SCRATCH10_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG10_RXMFSM_SCRATCH10_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG10_RXMFSM_SCRATCH10_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG11 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG11_ADDR 0x020007D8
#define RXMFSM_SCRATCH_REG11_SIZE 32

/* FIELD: RXMFSM_SCRATCH11 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG11_RXMFSM_SCRATCH11_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG11_RXMFSM_SCRATCH11_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG11_RXMFSM_SCRATCH11_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG11_RXMFSM_SCRATCH11_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG11_RXMFSM_SCRATCH11_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG12 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG12_ADDR 0x020007DC
#define RXMFSM_SCRATCH_REG12_SIZE 32

/* FIELD: RXMFSM_SCRATCH12 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG12_RXMFSM_SCRATCH12_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG12_RXMFSM_SCRATCH12_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG12_RXMFSM_SCRATCH12_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG12_RXMFSM_SCRATCH12_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG12_RXMFSM_SCRATCH12_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG2 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG2_ADDR 0x020007E0
#define RXMFSM_SCRATCH_REG2_SIZE 32

/* FIELD: RXMFSM_SCRATCH2 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG2_RXMFSM_SCRATCH2_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG2_RXMFSM_SCRATCH2_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG2_RXMFSM_SCRATCH2_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG2_RXMFSM_SCRATCH2_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG2_RXMFSM_SCRATCH2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG3 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG3_ADDR 0x020007E4
#define RXMFSM_SCRATCH_REG3_SIZE 32

/* FIELD: RXMFSM_SCRATCH3 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG3_RXMFSM_SCRATCH3_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG3_RXMFSM_SCRATCH3_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG3_RXMFSM_SCRATCH3_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG3_RXMFSM_SCRATCH3_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG3_RXMFSM_SCRATCH3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG4 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG4_ADDR 0x020007E8
#define RXMFSM_SCRATCH_REG4_SIZE 32

/* FIELD: RXMFSM_SCRATCH4 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG4_RXMFSM_SCRATCH4_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG4_RXMFSM_SCRATCH4_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG4_RXMFSM_SCRATCH4_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG4_RXMFSM_SCRATCH4_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG4_RXMFSM_SCRATCH4_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG5 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG5_ADDR 0x020007EC
#define RXMFSM_SCRATCH_REG5_SIZE 32

/* FIELD: RXMFSM_SCRATCH5 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG5_RXMFSM_SCRATCH5_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG5_RXMFSM_SCRATCH5_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG5_RXMFSM_SCRATCH5_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG5_RXMFSM_SCRATCH5_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG5_RXMFSM_SCRATCH5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG6 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG6_ADDR 0x020007F0
#define RXMFSM_SCRATCH_REG6_SIZE 32

/* FIELD: RXMFSM_SCRATCH6 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG6_RXMFSM_SCRATCH6_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG6_RXMFSM_SCRATCH6_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG6_RXMFSM_SCRATCH6_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG6_RXMFSM_SCRATCH6_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG6_RXMFSM_SCRATCH6_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG7 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG7_ADDR 0x020007F4
#define RXMFSM_SCRATCH_REG7_SIZE 32

/* FIELD: RXMFSM_SCRATCH7 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG7_RXMFSM_SCRATCH7_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG7_RXMFSM_SCRATCH7_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG7_RXMFSM_SCRATCH7_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG7_RXMFSM_SCRATCH7_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG7_RXMFSM_SCRATCH7_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG8 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG8_ADDR 0x020007F8
#define RXMFSM_SCRATCH_REG8_SIZE 32

/* FIELD: RXMFSM_SCRATCH8 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG8_RXMFSM_SCRATCH8_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG8_RXMFSM_SCRATCH8_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG8_RXMFSM_SCRATCH8_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG8_RXMFSM_SCRATCH8_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG8_RXMFSM_SCRATCH8_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_SCRATCH_REG9 */
/* DESCRIPTION: */
/*   Scratch pad register for RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_SCRATCH_REG9_ADDR 0x020007FC
#define RXMFSM_SCRATCH_REG9_SIZE 32

/* FIELD: RXMFSM_SCRATCH9 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define RXMFSM_SCRATCH_REG9_RXMFSM_SCRATCH9_OFFSET 0x00000000
#define RXMFSM_SCRATCH_REG9_RXMFSM_SCRATCH9_BITWIDTH 0x00000020
#define RXMFSM_SCRATCH_REG9_RXMFSM_SCRATCH9_MASK 0xFFFFFFFF
#define RXMFSM_SCRATCH_REG9_RXMFSM_SCRATCH9_ACCESS JUPITER_CSR_READ_WRITE
#define RXMFSM_SCRATCH_REG9_RXMFSM_SCRATCH9_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_STAT_ADDR 0x02000800
#define RXMFSM_STAT_SIZE 32

/* FIELD: RXMFSM_RATE_CUR */
/* DESCRIPTION: */
/*   Current rate sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_RATE_CUR_OFFSET 0x00000000
#define RXMFSM_STAT_RXMFSM_RATE_CUR_BITWIDTH 0x00000003
#define RXMFSM_STAT_RXMFSM_RATE_CUR_MASK 0x00000007
#define RXMFSM_STAT_RXMFSM_RATE_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_RATE_CUR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RATE_NEW */
/* DESCRIPTION: */
/*   New rate sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_RATE_NEW_OFFSET 0x00000003
#define RXMFSM_STAT_RXMFSM_RATE_NEW_BITWIDTH 0x00000003
#define RXMFSM_STAT_RXMFSM_RATE_NEW_MASK 0x00000038
#define RXMFSM_STAT_RXMFSM_RATE_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_RATE_NEW_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_WIDTH_CUR */
/* DESCRIPTION: */
/*   Current width sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_WIDTH_CUR_OFFSET 0x00000006
#define RXMFSM_STAT_RXMFSM_WIDTH_CUR_BITWIDTH 0x00000004
#define RXMFSM_STAT_RXMFSM_WIDTH_CUR_MASK 0x000003C0
#define RXMFSM_STAT_RXMFSM_WIDTH_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_WIDTH_CUR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_WIDTH_NEW */
/* DESCRIPTION: */
/*   New width sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_WIDTH_NEW_OFFSET 0x0000000A
#define RXMFSM_STAT_RXMFSM_WIDTH_NEW_BITWIDTH 0x00000004
#define RXMFSM_STAT_RXMFSM_WIDTH_NEW_MASK 0x00003C00
#define RXMFSM_STAT_RXMFSM_WIDTH_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_WIDTH_NEW_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_RXDISABLE */
/* DESCRIPTION: */
/*   Copy of rxdisable signal sent to mfsm */
#define RXMFSM_STAT_RXMFSM_RXDISABLE_OFFSET 0x0000000E
#define RXMFSM_STAT_RXMFSM_RXDISABLE_BITWIDTH 0x00000001
#define RXMFSM_STAT_RXMFSM_RXDISABLE_MASK 0x00004000
#define RXMFSM_STAT_RXMFSM_RXDISABLE_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_RXDISABLE_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_REQ */
/* DESCRIPTION: */
/*   Copy of request signal sent to mfsm */
#define RXMFSM_STAT_RXMFSM_REQ_OFFSET 0x0000000F
#define RXMFSM_STAT_RXMFSM_REQ_BITWIDTH 0x00000001
#define RXMFSM_STAT_RXMFSM_REQ_MASK 0x00008000
#define RXMFSM_STAT_RXMFSM_REQ_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_REQ_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_POWER_CUR */
/* DESCRIPTION: */
/*   Current power state sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_POWER_CUR_OFFSET 0x00000010
#define RXMFSM_STAT_RXMFSM_POWER_CUR_BITWIDTH 0x00000003
#define RXMFSM_STAT_RXMFSM_POWER_CUR_MASK 0x00070000
#define RXMFSM_STAT_RXMFSM_POWER_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_POWER_CUR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_POWER_NEW */
/* DESCRIPTION: */
/*   New power state sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_POWER_NEW_OFFSET 0x00000013
#define RXMFSM_STAT_RXMFSM_POWER_NEW_BITWIDTH 0x00000003
#define RXMFSM_STAT_RXMFSM_POWER_NEW_MASK 0x00380000
#define RXMFSM_STAT_RXMFSM_POWER_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_POWER_NEW_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PAM_CUR */
/* DESCRIPTION: */
/*   Current pam state sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_PAM_CUR_OFFSET 0x00000016
#define RXMFSM_STAT_RXMFSM_PAM_CUR_BITWIDTH 0x00000001
#define RXMFSM_STAT_RXMFSM_PAM_CUR_MASK 0x00400000
#define RXMFSM_STAT_RXMFSM_PAM_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_PAM_CUR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PAM_NEW */
/* DESCRIPTION: */
/*   New pam state sent to mfsm when called by interface fsm */
#define RXMFSM_STAT_RXMFSM_PAM_NEW_OFFSET 0x00000017
#define RXMFSM_STAT_RXMFSM_PAM_NEW_BITWIDTH 0x00000001
#define RXMFSM_STAT_RXMFSM_PAM_NEW_MASK 0x00800000
#define RXMFSM_STAT_RXMFSM_PAM_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_PAM_NEW_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PAM_CTRL_CUR */
/* DESCRIPTION: */
/*   Current pam controls sent to mfsm when called by interface fsm. Bit 0 = gray encoding, Bit 1 = pre-coding */
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_CUR_OFFSET 0x00000018
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_CUR_BITWIDTH 0x00000002
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_CUR_MASK 0x03000000
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_CUR_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_PAM_CTRL_NEW */
/* DESCRIPTION: */
/*   New pam controls sent to mfsm when called by interface fsm. Bit 0 = gray encoding, Bit 1 = pre-coding */
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_NEW_OFFSET 0x0000001A
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_NEW_BITWIDTH 0x00000002
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_NEW_MASK 0x0C000000
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_PAM_CTRL_NEW_RESET_VALUE 0x00000000

/* FIELD: RXMFSM_INSTR_NUM */
/* DESCRIPTION: */
/*   Instruction number sent to mfsm when called by interface fsm */
/*   0 = Reset */
/*   1 = State change */
/*   2 = Link evaluation reset */
/*   3 = Link evaluation init */
/*   4 = Link evaluation full */
/*   5 = Link evaluation eval only */
#define RXMFSM_STAT_RXMFSM_INSTR_NUM_OFFSET 0x0000001C
#define RXMFSM_STAT_RXMFSM_INSTR_NUM_BITWIDTH 0x00000004
#define RXMFSM_STAT_RXMFSM_INSTR_NUM_MASK 0xF0000000
#define RXMFSM_STAT_RXMFSM_INSTR_NUM_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STAT_RXMFSM_INSTR_NUM_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RXMFSM_STATE */
/* DESCRIPTION: */
/*   Configuration and observability for the RX Master Controller. */
/* ------------------------------------- */
#define RXMFSM_STATE_ADDR 0x02000804
#define RXMFSM_STATE_SIZE 32

/* FIELD: RXMFSM_STATE */
/* DESCRIPTION: */
/*   MFSM state register. For debug purposes only. */
#define RXMFSM_STATE_RXMFSM_STATE_OFFSET 0x00000000
#define RXMFSM_STATE_RXMFSM_STATE_BITWIDTH 0x00000009
#define RXMFSM_STATE_RXMFSM_STATE_MASK 0x000001FF
#define RXMFSM_STATE_RXMFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define RXMFSM_STATE_RXMFSM_STATE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_ADAPT */
/* DESCRIPTION: */
/*   Configuration for background adaptation. */
/* ------------------------------------- */
#define SEQ_CNTRL_ADAPT_ADDR 0x02000808
#define SEQ_CNTRL_ADAPT_SIZE 32

/* FIELD: BACKGROUND_SEL_ENA_A */
/* DESCRIPTION: */
/*   When this bit is set to 1, all Equalization related FSMs are configured to use their background_mu and background_watchdog configurations. */
/*   0 - normal adaptation     */
/*   1  use background mu / watchdog settings */
#define SEQ_CNTRL_ADAPT_BACKGROUND_SEL_ENA_A_OFFSET 0x00000000
#define SEQ_CNTRL_ADAPT_BACKGROUND_SEL_ENA_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_ADAPT_BACKGROUND_SEL_ENA_A_MASK 0x00000001
#define SEQ_CNTRL_ADAPT_BACKGROUND_SEL_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_ADAPT_BACKGROUND_SEL_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_RX */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define SEQ_CNTRL_RX_ADDR 0x0200080C
#define SEQ_CNTRL_RX_SIZE 32

/* FIELD: ITR_DPLL_AFE_ADAPT_START_NT */
/* DESCRIPTION: */
/*   Signals the TED and DLPF to start adapting */
#define SEQ_CNTRL_RX_ITR_DPLL_AFE_ADAPT_START_NT_OFFSET 0x00000000
#define SEQ_CNTRL_RX_ITR_DPLL_AFE_ADAPT_START_NT_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_ITR_DPLL_AFE_ADAPT_START_NT_MASK 0x00000001
#define SEQ_CNTRL_RX_ITR_DPLL_AFE_ADAPT_START_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_ITR_DPLL_AFE_ADAPT_START_NT_RESET_VALUE 0x00000000

/* FIELD: ACTIVE_BRANCH_NT */
/* DESCRIPTION: */
/*   Number of ADC branches turned on: */
/*     b'000 - 4 */
/*     b'001 -8 */
/*     b'010 - 16 */
/*     b'011 - 32 */
/*     b'100 - 64 */
#define SEQ_CNTRL_RX_ACTIVE_BRANCH_NT_OFFSET 0x00000001
#define SEQ_CNTRL_RX_ACTIVE_BRANCH_NT_BITWIDTH 0x00000003
#define SEQ_CNTRL_RX_ACTIVE_BRANCH_NT_MASK 0x0000000E
#define SEQ_CNTRL_RX_ACTIVE_BRANCH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_ACTIVE_BRANCH_NT_RESET_VALUE 0x00000001

/* FIELD: ITR_TED_CLASSB_ENABLE_A */
/* DESCRIPTION: */
/*   Enable Class B Mode for TED */
/*   0 - Class A Enabled */
/*   1 - Class B Enabled */
#define SEQ_CNTRL_RX_ITR_TED_CLASSB_ENABLE_A_OFFSET 0x00000004
#define SEQ_CNTRL_RX_ITR_TED_CLASSB_ENABLE_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_ITR_TED_CLASSB_ENABLE_A_MASK 0x00000010
#define SEQ_CNTRL_RX_ITR_TED_CLASSB_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_ITR_TED_CLASSB_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: OVERSAMPLE_MODE_A */
/* DESCRIPTION: */
/*   2X oversampling mode */
/*   0 - Normal mode  */
/*   1 - 2X oversampling mode Enabled */
#define SEQ_CNTRL_RX_OVERSAMPLE_MODE_A_OFFSET 0x00000005
#define SEQ_CNTRL_RX_OVERSAMPLE_MODE_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_OVERSAMPLE_MODE_A_MASK 0x00000020
#define SEQ_CNTRL_RX_OVERSAMPLE_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_OVERSAMPLE_MODE_A_RESET_VALUE 0x00000001

/* FIELD: GB_FIFO_FIFO_ENABLE_A */
/* DESCRIPTION: */
/*   1: Enable the fifo 0: disable the fifo */
#define SEQ_CNTRL_RX_GB_FIFO_FIFO_ENABLE_A_OFFSET 0x00000006
#define SEQ_CNTRL_RX_GB_FIFO_FIFO_ENABLE_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_GB_FIFO_FIFO_ENABLE_A_MASK 0x00000040
#define SEQ_CNTRL_RX_GB_FIFO_FIFO_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_GB_FIFO_FIFO_ENABLE_A_RESET_VALUE 0x00000001

/* FIELD: DS_SYNTH_DIV_READY_A */
/* DESCRIPTION: */
/*   RX synthesizer divider ration is latched-in on the rising edge of this signal.  */
#define SEQ_CNTRL_RX_DS_SYNTH_DIV_READY_A_OFFSET 0x00000007
#define SEQ_CNTRL_RX_DS_SYNTH_DIV_READY_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_DS_SYNTH_DIV_READY_A_MASK 0x00000080
#define SEQ_CNTRL_RX_DS_SYNTH_DIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_DS_SYNTH_DIV_READY_A_RESET_VALUE 0x00000001

/* FIELD: POSTDIV_READY_A */
/* DESCRIPTION: */
/*   Positive edge latches in the bits for the associated control signal ictl_afe_rx_postdiv_a */
#define SEQ_CNTRL_RX_POSTDIV_READY_A_OFFSET 0x00000008
#define SEQ_CNTRL_RX_POSTDIV_READY_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_POSTDIV_READY_A_MASK 0x00000100
#define SEQ_CNTRL_RX_POSTDIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_POSTDIV_READY_A_RESET_VALUE 0x00000001

/* FIELD: GB_FIFO_MODE_NT */
/* DESCRIPTION: */
/*   0: 8:20  1: 4:20  2: 8:40  3: 2:20  4: 4:40 5: 64:32 */
#define SEQ_CNTRL_RX_GB_FIFO_MODE_NT_OFFSET 0x00000009
#define SEQ_CNTRL_RX_GB_FIFO_MODE_NT_BITWIDTH 0x00000003
#define SEQ_CNTRL_RX_GB_FIFO_MODE_NT_MASK 0x00000E00
#define SEQ_CNTRL_RX_GB_FIFO_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_GB_FIFO_MODE_NT_RESET_VALUE 0x00000001

/* FIELD: GB_FIFO_DELAY_ADJ_NT */
/* DESCRIPTION: */
/*    0 - 15 Read cycles delay */
#define SEQ_CNTRL_RX_GB_FIFO_DELAY_ADJ_NT_OFFSET 0x0000000C
#define SEQ_CNTRL_RX_GB_FIFO_DELAY_ADJ_NT_BITWIDTH 0x00000004
#define SEQ_CNTRL_RX_GB_FIFO_DELAY_ADJ_NT_MASK 0x0000F000
#define SEQ_CNTRL_RX_GB_FIFO_DELAY_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_GB_FIFO_DELAY_ADJ_NT_RESET_VALUE 0x00000003

/* FIELD: CK_SEL_NT */
/* DESCRIPTION: */
/*   0: bypass  1: div2  2: div4 3: div8  4: 10b 5: 10b_div2  6:  10b_div4  7: 10b_div8  8:  ck_tx_block_soc */
#define SEQ_CNTRL_RX_CK_SEL_NT_OFFSET 0x00000010
#define SEQ_CNTRL_RX_CK_SEL_NT_BITWIDTH 0x00000004
#define SEQ_CNTRL_RX_CK_SEL_NT_MASK 0x000F0000
#define SEQ_CNTRL_RX_CK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_CK_SEL_NT_RESET_VALUE 0x00000006

/* FIELD: PACKED_MODE_NT */
/* DESCRIPTION: */
/*   0: 64->128  1: 32->64  2: 32->128 3: 16->32  4: 16->64  5:  16->128  6: 8->16  7:  8->32  8:  4->16  9:  4->32  10:  2->16 */
#define SEQ_CNTRL_RX_PACKED_MODE_NT_OFFSET 0x00000014
#define SEQ_CNTRL_RX_PACKED_MODE_NT_BITWIDTH 0x00000004
#define SEQ_CNTRL_RX_PACKED_MODE_NT_MASK 0x00F00000
#define SEQ_CNTRL_RX_PACKED_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_PACKED_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: DATA_SEL_NT */
/* DESCRIPTION: */
/*   0: bypass  1: 1:2 1:4 1:8  2: 2:5 1:5 1:10  2:1  3:  nep loopback */
#define SEQ_CNTRL_RX_DATA_SEL_NT_OFFSET 0x00000018
#define SEQ_CNTRL_RX_DATA_SEL_NT_BITWIDTH 0x00000002
#define SEQ_CNTRL_RX_DATA_SEL_NT_MASK 0x03000000
#define SEQ_CNTRL_RX_DATA_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_DATA_SEL_NT_RESET_VALUE 0x00000002

/* FIELD: LOCAL_HSREF_CTRL_NT */
/* DESCRIPTION: */
/*   Local hsref regulator powerdown control. 0 - Common controls hsref regulator. 1 - Local registers control hsref regulator */
#define SEQ_CNTRL_RX_LOCAL_HSREF_CTRL_NT_OFFSET 0x0000001A
#define SEQ_CNTRL_RX_LOCAL_HSREF_CTRL_NT_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_LOCAL_HSREF_CTRL_NT_MASK 0x04000000
#define SEQ_CNTRL_RX_LOCAL_HSREF_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_LOCAL_HSREF_CTRL_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK_VALID_A */
/* DESCRIPTION: */
/*   Register control of octl_rx_block_valid-a port */
#define SEQ_CNTRL_RX_BLOCK_VALID_A_OFFSET 0x0000001B
#define SEQ_CNTRL_RX_BLOCK_VALID_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_BLOCK_VALID_A_MASK 0x08000000
#define SEQ_CNTRL_RX_BLOCK_VALID_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_BLOCK_VALID_A_RESET_VALUE 0x00000000

/* FIELD: DIV_VALID_A */
/* DESCRIPTION: */
/*   Register control of octl_rx_div_valid_a port */
#define SEQ_CNTRL_RX_DIV_VALID_A_OFFSET 0x0000001C
#define SEQ_CNTRL_RX_DIV_VALID_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_DIV_VALID_A_MASK 0x10000000
#define SEQ_CNTRL_RX_DIV_VALID_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_DIV_VALID_A_RESET_VALUE 0x00000000

/* FIELD: DIV8_MODE_NT */
/* DESCRIPTION: */
/*   Div8 mode override. 0 = div16, 1 = div8 */
#define SEQ_CNTRL_RX_DIV8_MODE_NT_OFFSET 0x0000001D
#define SEQ_CNTRL_RX_DIV8_MODE_NT_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_DIV8_MODE_NT_MASK 0x20000000
#define SEQ_CNTRL_RX_DIV8_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_RX_DIV8_MODE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_RX_RDREG */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define SEQ_CNTRL_RX_RDREG_ADDR 0x02000810
#define SEQ_CNTRL_RX_RDREG_SIZE 32

/* FIELD: ITR_DPLL_AFE_LOCK_NT */
/* DESCRIPTION: */
/*   Status: CDR has locked */
#define SEQ_CNTRL_RX_RDREG_ITR_DPLL_AFE_LOCK_NT_OFFSET 0x00000000
#define SEQ_CNTRL_RX_RDREG_ITR_DPLL_AFE_LOCK_NT_BITWIDTH 0x00000001
#define SEQ_CNTRL_RX_RDREG_ITR_DPLL_AFE_LOCK_NT_MASK 0x00000001
#define SEQ_CNTRL_RX_RDREG_ITR_DPLL_AFE_LOCK_NT_ACCESS JUPITER_CSR_READ_ONLY
#define SEQ_CNTRL_RX_RDREG_ITR_DPLL_AFE_LOCK_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_TED1 */
/* DESCRIPTION: */
/*   Configuration and overrides for the timing error detector. */
/* ------------------------------------- */
#define SEQ_CNTRL_TED1_ADDR 0x02000814
#define SEQ_CNTRL_TED1_SIZE 32

/* FIELD: MM_DISABLE_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_ovr_ena_nt is set to 1. */
/*   0 - normal function */
/*   1  disable branch contribution to CDR calculation */
/*   If branch_group_select_nt=0: bit0=branch0  bit15=branch15 */
/*   If branch_group_select_nt=1: bit0=branch16  bit15=branch31 */
/*   If branch_group_select_nt=2: bit0=branch32  bit15=branch47 */
/*   If branch_group_select_nt=3: bit0=branch48  bit15=branch64 */
#define SEQ_CNTRL_TED1_MM_DISABLE_NT_OFFSET 0x00000000
#define SEQ_CNTRL_TED1_MM_DISABLE_NT_BITWIDTH 0x00000010
#define SEQ_CNTRL_TED1_MM_DISABLE_NT_MASK 0x0000FFFF
#define SEQ_CNTRL_TED1_MM_DISABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED1_MM_DISABLE_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_MM_DISABLE_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_init_ovr_ena_nt is set to 1. */
/*   0 - normal function */
/*   1  disable branch contribution to CDR calculation */
/*   If init_branch_group_select_nt=0: bit0=branch0  bit15=branch15 */
/*   If init_branch_group_select_nt=1: bit0=branch16  bit15=branch31 */
/*   If init_branch_group_select_nt=2: bit0=branch32  bit15=branch47 */
/*   If init_branch_group_select_nt=3: bit0=branch48  bit15=branch63 */
#define SEQ_CNTRL_TED1_INIT_MM_DISABLE_NT_OFFSET 0x00000010
#define SEQ_CNTRL_TED1_INIT_MM_DISABLE_NT_BITWIDTH 0x00000010
#define SEQ_CNTRL_TED1_INIT_MM_DISABLE_NT_MASK 0xFFFF0000
#define SEQ_CNTRL_TED1_INIT_MM_DISABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED1_INIT_MM_DISABLE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_TED2 */
/* DESCRIPTION: */
/*   Configuration and overrides for the timing error detector. */
/* ------------------------------------- */
#define SEQ_CNTRL_TED2_ADDR 0x02000818
#define SEQ_CNTRL_TED2_SIZE 32

/* FIELD: BRANCH_GROUP_SELECT_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_ovr_ena_nt is set to 1. */
/*   0 - branches 0~15 */
/*   1  branches 16~31  */
/*   2  branches 32~47    */
/*   3  branches 48~63 */
#define SEQ_CNTRL_TED2_BRANCH_GROUP_SELECT_NT_OFFSET 0x00000000
#define SEQ_CNTRL_TED2_BRANCH_GROUP_SELECT_NT_BITWIDTH 0x00000002
#define SEQ_CNTRL_TED2_BRANCH_GROUP_SELECT_NT_MASK 0x00000003
#define SEQ_CNTRL_TED2_BRANCH_GROUP_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED2_BRANCH_GROUP_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_BRANCH_GROUP_SELECT_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_disable_init_ovr_ena_nt is set to 1. */
/*   0 - branches 0~15 */
/*   1  branches 16~31  */
/*   2  branches 32~47    */
/*   3  branches 48~63 */
#define SEQ_CNTRL_TED2_INIT_BRANCH_GROUP_SELECT_NT_OFFSET 0x00000002
#define SEQ_CNTRL_TED2_INIT_BRANCH_GROUP_SELECT_NT_BITWIDTH 0x00000002
#define SEQ_CNTRL_TED2_INIT_BRANCH_GROUP_SELECT_NT_MASK 0x0000000C
#define SEQ_CNTRL_TED2_INIT_BRANCH_GROUP_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED2_INIT_BRANCH_GROUP_SELECT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_TED3 */
/* DESCRIPTION: */
/*   Configuration and overrides for the timing error detector. */
/* ------------------------------------- */
#define SEQ_CNTRL_TED3_ADDR 0x0200081C
#define SEQ_CNTRL_TED3_SIZE 32

/* FIELD: MM_FREQDET_DISABLE_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_freqdet_disable_ovr_ena_nt is set to 1. */
/*   0 - normal function */
/*   1 - disable branch contribution to frequency detector */
/*   Bit0 - branch0    ... bit31 - branch31 */
#define SEQ_CNTRL_TED3_MM_FREQDET_DISABLE_NT_OFFSET 0x00000000
#define SEQ_CNTRL_TED3_MM_FREQDET_DISABLE_NT_BITWIDTH 0x00000020
#define SEQ_CNTRL_TED3_MM_FREQDET_DISABLE_NT_MASK 0xFFFFFFFF
#define SEQ_CNTRL_TED3_MM_FREQDET_DISABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED3_MM_FREQDET_DISABLE_NT_RESET_VALUE 0xFFFFFFF0

/* ------------------------------------- */
/* REG: SEQ_CNTRL_TED4 */
/* DESCRIPTION: */
/*   Configuration and overrides for the timing error detector. */
/* ------------------------------------- */
#define SEQ_CNTRL_TED4_ADDR 0x02000820
#define SEQ_CNTRL_TED4_SIZE 32

/* FIELD: MM_FREQDET_DISABLE_NT */
/* DESCRIPTION: */
/*   Active when rx_mm_freqdet_disable_ovr_ena_nt is set to 1. */
/*   0 - normal function */
/*   1 - disable branch contribution to frequency detector */
/*   Bit0 - branch32    ... bit31 - branch63 */
#define SEQ_CNTRL_TED4_MM_FREQDET_DISABLE_NT_OFFSET 0x00000000
#define SEQ_CNTRL_TED4_MM_FREQDET_DISABLE_NT_BITWIDTH 0x00000020
#define SEQ_CNTRL_TED4_MM_FREQDET_DISABLE_NT_MASK 0xFFFFFFFF
#define SEQ_CNTRL_TED4_MM_FREQDET_DISABLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TED4_MM_FREQDET_DISABLE_NT_RESET_VALUE 0xFFFFFFFF

/* ------------------------------------- */
/* REG: STS_DBE_TRACE_BUFFER */
/* DESCRIPTION: */
/*   Status register of DBE trace buffer */
/* ------------------------------------- */
#define STS_DBE_TRACE_BUFFER_ADDR 0x02000824
#define STS_DBE_TRACE_BUFFER_SIZE 32

/* FIELD: FULL */
/* DESCRIPTION: */
/*   Indicates if Trace Buffer is full */
/*   0 - Not full */
/*   1 - Full */
#define STS_DBE_TRACE_BUFFER_FULL_OFFSET 0x00000000
#define STS_DBE_TRACE_BUFFER_FULL_BITWIDTH 0x00000001
#define STS_DBE_TRACE_BUFFER_FULL_MASK 0x00000001
#define STS_DBE_TRACE_BUFFER_FULL_ACCESS JUPITER_CSR_READ_ONLY
#define STS_DBE_TRACE_BUFFER_FULL_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SWITCHCLK_DBE_RX */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define SWITCHCLK_DBE_RX_ADDR 0x02000828
#define SWITCHCLK_DBE_RX_SIZE 32

/* FIELD: BLOCK_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - RX clock is selected */
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_SEL_NT_OFFSET 0x00000000
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_SEL_NT_MASK 0x00000001
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK_CLOCK_OUT_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - RX clock is selected */
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_OUT_SEL_NT_OFFSET 0x00000001
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_OUT_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_OUT_SEL_NT_MASK 0x00000002
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_OUT_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_BLOCK_CLOCK_OUT_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: REF_DIV_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - RX Ref Div clock is selected */
#define SWITCHCLK_DBE_RX_REF_DIV_CLOCK_SEL_NT_OFFSET 0x00000002
#define SWITCHCLK_DBE_RX_REF_DIV_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_RX_REF_DIV_CLOCK_SEL_NT_MASK 0x00000004
#define SWITCHCLK_DBE_RX_REF_DIV_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_REF_DIV_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - RX Synth Div clock is selected */
#define SWITCHCLK_DBE_RX_SYNTH_DIV_CLOCK_SEL_NT_OFFSET 0x00000003
#define SWITCHCLK_DBE_RX_SYNTH_DIV_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_RX_SYNTH_DIV_CLOCK_SEL_NT_MASK 0x00000008
#define SWITCHCLK_DBE_RX_SYNTH_DIV_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_SYNTH_DIV_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: PPM_MEAS_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to ppm measure block. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_RX_PPM_MEAS_DIV_NT_OFFSET 0x00000004
#define SWITCHCLK_DBE_RX_PPM_MEAS_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_RX_PPM_MEAS_DIV_NT_MASK 0x00000030
#define SWITCHCLK_DBE_RX_PPM_MEAS_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_PPM_MEAS_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to vco adapt measure block. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_RX_VCO_ADAPT_DIV_NT_OFFSET 0x00000006
#define SWITCHCLK_DBE_RX_VCO_ADAPT_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_RX_VCO_ADAPT_DIV_NT_MASK 0x000000C0
#define SWITCHCLK_DBE_RX_VCO_ADAPT_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_VCO_ADAPT_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_OUT_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - RX Synth Div clock is selected */
#define SWITCHCLK_DBE_RX_SYNTH_DIV_OUT_CLOCK_SEL_NT_OFFSET 0x00000008
#define SWITCHCLK_DBE_RX_SYNTH_DIV_OUT_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_RX_SYNTH_DIV_OUT_CLOCK_SEL_NT_MASK 0x00000100
#define SWITCHCLK_DBE_RX_SYNTH_DIV_OUT_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_SYNTH_DIV_OUT_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to ock_rx_div clock. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_RX_OUT_DIV_NT_OFFSET 0x00000009
#define SWITCHCLK_DBE_RX_OUT_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_RX_OUT_DIV_NT_MASK 0x00000600
#define SWITCHCLK_DBE_RX_OUT_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_RX_OUT_DIV_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_OCTERM_TX */
/* DESCRIPTION: */
/*   Override for Tx termination codes. Controlled by termination calibration state machine in normal operation. */
/* ------------------------------------- */
#define AFE_OCTERM_TX_ADDR 0x02800000
#define AFE_OCTERM_TX_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Overrides TX termincal calibration control */
#define AFE_OCTERM_TX_BYPASS_ENA_A_OFFSET 0x00000000
#define AFE_OCTERM_TX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define AFE_OCTERM_TX_BYPASS_ENA_A_MASK 0x00000001
#define AFE_OCTERM_TX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_TX_BYPASS_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SLICE_ENA_NT */
/* DESCRIPTION: */
/*   d'0 to d'8 are termination control settings values > d'8 unused.  */
/*   -d'0 - max impedance */
/*   -d'8 - min impedance */
#define AFE_OCTERM_TX_SLICE_ENA_NT_OFFSET 0x00000001
#define AFE_OCTERM_TX_SLICE_ENA_NT_BITWIDTH 0x00000006
#define AFE_OCTERM_TX_SLICE_ENA_NT_MASK 0x0000007E
#define AFE_OCTERM_TX_SLICE_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_TX_SLICE_ENA_NT_RESET_VALUE 0x0000003F

/* FIELD: REF_RES_NT */
/* DESCRIPTION: */
/*   TX Reference Resistor calibration code. */
#define AFE_OCTERM_TX_REF_RES_NT_OFFSET 0x00000007
#define AFE_OCTERM_TX_REF_RES_NT_BITWIDTH 0x00000006
#define AFE_OCTERM_TX_REF_RES_NT_MASK 0x00001F80
#define AFE_OCTERM_TX_REF_RES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_TX_REF_RES_NT_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_CHOP_NT */
/* DESCRIPTION: */
/*   Chopping signal to allow calibration with both comparator polarities. */
/*   1 - Standard Polarity */
/*   0 - Inverted Polarity */
#define AFE_OCTERM_TX_TERMCAL_CHOP_NT_OFFSET 0x0000000D
#define AFE_OCTERM_TX_TERMCAL_CHOP_NT_BITWIDTH 0x00000001
#define AFE_OCTERM_TX_TERMCAL_CHOP_NT_MASK 0x00002000
#define AFE_OCTERM_TX_TERMCAL_CHOP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define AFE_OCTERM_TX_TERMCAL_CHOP_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: AFE_OCTERM_TX_RDREG */
/* DESCRIPTION: */
/*   Observability for the Tx termination calibration error term. */
/* ------------------------------------- */
#define AFE_OCTERM_TX_RDREG_ADDR 0x02800004
#define AFE_OCTERM_TX_RDREG_SIZE 32

/* FIELD: TERMCAL_ERROR_NT */
/* DESCRIPTION: */
/*   Error signal from the tx slice impedance calibration */
#define AFE_OCTERM_TX_RDREG_TERMCAL_ERROR_NT_OFFSET 0x00000000
#define AFE_OCTERM_TX_RDREG_TERMCAL_ERROR_NT_BITWIDTH 0x00000001
#define AFE_OCTERM_TX_RDREG_TERMCAL_ERROR_NT_MASK 0x00000001
#define AFE_OCTERM_TX_RDREG_TERMCAL_ERROR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define AFE_OCTERM_TX_RDREG_TERMCAL_ERROR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_PLLCHARZ */
/* DESCRIPTION: */
/*   Debug bus / trace buffer */
/* ------------------------------------- */
#define CTL_DBE_PLLCHARZ_ADDR 0x02800008
#define CTL_DBE_PLLCHARZ_SIZE 32

/* FIELD: TX_ENA_A */
/* DESCRIPTION: */
/*   Enable clock observation output to be seen in TX bump */
/*   0 - TX in normal operation */
/*   1 - TX is used to observe internal clocks */
#define CTL_DBE_PLLCHARZ_TX_ENA_A_OFFSET 0x00000000
#define CTL_DBE_PLLCHARZ_TX_ENA_A_BITWIDTH 0x00000001
#define CTL_DBE_PLLCHARZ_TX_ENA_A_MASK 0x00000001
#define CTL_DBE_PLLCHARZ_TX_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_PLLCHARZ_TX_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ATEST_ENA_A */
/* DESCRIPTION: */
/*   Enable analog observation output to be seen in TX bump */
/*   0 - TX in normal operation */
/*   1 - TX is used to observe internal analog signals */
#define CTL_DBE_PLLCHARZ_ATEST_ENA_A_OFFSET 0x00000001
#define CTL_DBE_PLLCHARZ_ATEST_ENA_A_BITWIDTH 0x00000001
#define CTL_DBE_PLLCHARZ_ATEST_ENA_A_MASK 0x00000002
#define CTL_DBE_PLLCHARZ_ATEST_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_PLLCHARZ_ATEST_ENA_A_RESET_VALUE 0x00000000

/* FIELD: CLKSEL_A */
/* DESCRIPTION: */
/*   Clock selection for clock observation */
#define CTL_DBE_PLLCHARZ_CLKSEL_A_OFFSET 0x00000002
#define CTL_DBE_PLLCHARZ_CLKSEL_A_BITWIDTH 0x00000004
#define CTL_DBE_PLLCHARZ_CLKSEL_A_MASK 0x0000003C
#define CTL_DBE_PLLCHARZ_CLKSEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_PLLCHARZ_CLKSEL_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TBUS */
/* DESCRIPTION: */
/*   On rising edge of this signal, the internal debug counter will be reset. */
/* ------------------------------------- */
#define CTL_DBE_TBUS_ADDR 0x0280000C
#define CTL_DBE_TBUS_SIZE 32

/* FIELD: TX_ENA_A */
/* DESCRIPTION: */
/*   TX Enable */
#define CTL_DBE_TBUS_TX_ENA_A_OFFSET 0x00000000
#define CTL_DBE_TBUS_TX_ENA_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_TX_ENA_A_MASK 0x00000001
#define CTL_DBE_TBUS_TX_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_TX_ENA_A_RESET_VALUE 0x00000000

/* FIELD: TX_BIT_ID_A */
/* DESCRIPTION: */
/*   TX Bit Select */
#define CTL_DBE_TBUS_TX_BIT_ID_A_OFFSET 0x00000001
#define CTL_DBE_TBUS_TX_BIT_ID_A_BITWIDTH 0x00000005
#define CTL_DBE_TBUS_TX_BIT_ID_A_MASK 0x0000003E
#define CTL_DBE_TBUS_TX_BIT_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_TX_BIT_ID_A_RESET_VALUE 0x00000000

/* FIELD: ATEST_ENA_A */
/* DESCRIPTION: */
/*   ATEST Bit Select */
#define CTL_DBE_TBUS_ATEST_ENA_A_OFFSET 0x00000006
#define CTL_DBE_TBUS_ATEST_ENA_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_ATEST_ENA_A_MASK 0x00000040
#define CTL_DBE_TBUS_ATEST_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_ATEST_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ATEST_BIT_ID_A */
/* DESCRIPTION: */
/*   ATEST Bit Select */
#define CTL_DBE_TBUS_ATEST_BIT_ID_A_OFFSET 0x00000007
#define CTL_DBE_TBUS_ATEST_BIT_ID_A_BITWIDTH 0x00000005
#define CTL_DBE_TBUS_ATEST_BIT_ID_A_MASK 0x00000F80
#define CTL_DBE_TBUS_ATEST_BIT_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_ATEST_BIT_ID_A_RESET_VALUE 0x00000000

/* FIELD: TX_CLIENT_SEL_A */
/* DESCRIPTION: */
/*   TX Client Select */
#define CTL_DBE_TBUS_TX_CLIENT_SEL_A_OFFSET 0x0000000C
#define CTL_DBE_TBUS_TX_CLIENT_SEL_A_BITWIDTH 0x00000004
#define CTL_DBE_TBUS_TX_CLIENT_SEL_A_MASK 0x0000F000
#define CTL_DBE_TBUS_TX_CLIENT_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_TX_CLIENT_SEL_A_RESET_VALUE 0x00000000

/* FIELD: ATEST_CLIENT_SEL_A */
/* DESCRIPTION: */
/*   ATEST client select */
#define CTL_DBE_TBUS_ATEST_CLIENT_SEL_A_OFFSET 0x00000010
#define CTL_DBE_TBUS_ATEST_CLIENT_SEL_A_BITWIDTH 0x00000004
#define CTL_DBE_TBUS_ATEST_CLIENT_SEL_A_MASK 0x000F0000
#define CTL_DBE_TBUS_ATEST_CLIENT_SEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_ATEST_CLIENT_SEL_A_RESET_VALUE 0x00000000

/* FIELD: DEBUG_COUNTER_ENABLE_A */
/* DESCRIPTION: */
/*   Tom */
#define CTL_DBE_TBUS_DEBUG_COUNTER_ENABLE_A_OFFSET 0x00000014
#define CTL_DBE_TBUS_DEBUG_COUNTER_ENABLE_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_DEBUG_COUNTER_ENABLE_A_MASK 0x00100000
#define CTL_DBE_TBUS_DEBUG_COUNTER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_DEBUG_COUNTER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: DEBUG_COUNTER_RESET_A */
/* DESCRIPTION: */
/*   Tom */
#define CTL_DBE_TBUS_DEBUG_COUNTER_RESET_A_OFFSET 0x00000015
#define CTL_DBE_TBUS_DEBUG_COUNTER_RESET_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_DEBUG_COUNTER_RESET_A_MASK 0x00200000
#define CTL_DBE_TBUS_DEBUG_COUNTER_RESET_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_DEBUG_COUNTER_RESET_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TBUS_CLIENT0 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_DBE_TBUS_CLIENT0_ADDR 0x02800010
#define CTL_DBE_TBUS_CLIENT0_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_DBE_TBUS_CLIENT0_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_DBE_TBUS_CLIENT0_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT0_BLOCK_ID_A_MASK 0x000000FF
#define CTL_DBE_TBUS_CLIENT0_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT0_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_DBE_TBUS_CLIENT0_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_DBE_TBUS_CLIENT0_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT0_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_DBE_TBUS_CLIENT0_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT0_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_DBE_TBUS_CLIENT0_TRIGGER_A_OFFSET 0x00000010
#define CTL_DBE_TBUS_CLIENT0_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT0_TRIGGER_A_MASK 0x00010000
#define CTL_DBE_TBUS_CLIENT0_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT0_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_DBE_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_DBE_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_DBE_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT0_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TBUS_CLIENT1 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_DBE_TBUS_CLIENT1_ADDR 0x02800014
#define CTL_DBE_TBUS_CLIENT1_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_DBE_TBUS_CLIENT1_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_DBE_TBUS_CLIENT1_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT1_BLOCK_ID_A_MASK 0x000000FF
#define CTL_DBE_TBUS_CLIENT1_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT1_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_DBE_TBUS_CLIENT1_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_DBE_TBUS_CLIENT1_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT1_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_DBE_TBUS_CLIENT1_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT1_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_DBE_TBUS_CLIENT1_TRIGGER_A_OFFSET 0x00000010
#define CTL_DBE_TBUS_CLIENT1_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT1_TRIGGER_A_MASK 0x00010000
#define CTL_DBE_TBUS_CLIENT1_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT1_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_DBE_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_DBE_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_DBE_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT1_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TBUS_CLIENT2 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_DBE_TBUS_CLIENT2_ADDR 0x02800018
#define CTL_DBE_TBUS_CLIENT2_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_DBE_TBUS_CLIENT2_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_DBE_TBUS_CLIENT2_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT2_BLOCK_ID_A_MASK 0x000000FF
#define CTL_DBE_TBUS_CLIENT2_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT2_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_DBE_TBUS_CLIENT2_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_DBE_TBUS_CLIENT2_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT2_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_DBE_TBUS_CLIENT2_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT2_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_DBE_TBUS_CLIENT2_TRIGGER_A_OFFSET 0x00000010
#define CTL_DBE_TBUS_CLIENT2_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT2_TRIGGER_A_MASK 0x00010000
#define CTL_DBE_TBUS_CLIENT2_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT2_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_DBE_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_DBE_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_DBE_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT2_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: CTL_DBE_TBUS_CLIENT3 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define CTL_DBE_TBUS_CLIENT3_ADDR 0x0280001C
#define CTL_DBE_TBUS_CLIENT3_SIZE 32

/* FIELD: BLOCK_ID_A */
/* DESCRIPTION: */
/*   Block Select */
#define CTL_DBE_TBUS_CLIENT3_BLOCK_ID_A_OFFSET 0x00000000
#define CTL_DBE_TBUS_CLIENT3_BLOCK_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT3_BLOCK_ID_A_MASK 0x000000FF
#define CTL_DBE_TBUS_CLIENT3_BLOCK_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT3_BLOCK_ID_A_RESET_VALUE 0x00000000

/* FIELD: SIGNAL_ID_A */
/* DESCRIPTION: */
/*   Signal Select */
#define CTL_DBE_TBUS_CLIENT3_SIGNAL_ID_A_OFFSET 0x00000008
#define CTL_DBE_TBUS_CLIENT3_SIGNAL_ID_A_BITWIDTH 0x00000008
#define CTL_DBE_TBUS_CLIENT3_SIGNAL_ID_A_MASK 0x0000FF00
#define CTL_DBE_TBUS_CLIENT3_SIGNAL_ID_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT3_SIGNAL_ID_A_RESET_VALUE 0x00000000

/* FIELD: TRIGGER_A */
/* DESCRIPTION: */
/*   Trigger for TBUS */
/*   0 - TBUS does not capture data */
/*   1 - TBUS capture data */
#define CTL_DBE_TBUS_CLIENT3_TRIGGER_A_OFFSET 0x00000010
#define CTL_DBE_TBUS_CLIENT3_TRIGGER_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT3_TRIGGER_A_MASK 0x00010000
#define CTL_DBE_TBUS_CLIENT3_TRIGGER_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT3_TRIGGER_A_RESET_VALUE 0x00000000

/* FIELD: CONTINUOUS_SAMPLE_A */
/* DESCRIPTION: */
/*   Enable continuos sampling for TBUS */
/*   0 - Discrete sampling is selecte */
/*   1 - Samples are taken every cycle after trigger */
#define CTL_DBE_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_OFFSET 0x00000011
#define CTL_DBE_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_BITWIDTH 0x00000001
#define CTL_DBE_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_MASK 0x00020000
#define CTL_DBE_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define CTL_DBE_TBUS_CLIENT3_CONTINUOUS_SAMPLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TBUS */
/* DESCRIPTION: */
/*   Debug counter value */
/* ------------------------------------- */
#define DAT_DBE_TBUS_ADDR 0x02800020
#define DAT_DBE_TBUS_SIZE 32

/* FIELD: DEBUG_COUNTER_VAL */
/* DESCRIPTION: */
/*   Tom */
#define DAT_DBE_TBUS_DEBUG_COUNTER_VAL_OFFSET 0x00000000
#define DAT_DBE_TBUS_DEBUG_COUNTER_VAL_BITWIDTH 0x00000020
#define DAT_DBE_TBUS_DEBUG_COUNTER_VAL_MASK 0xFFFFFFFF
#define DAT_DBE_TBUS_DEBUG_COUNTER_VAL_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TBUS_DEBUG_COUNTER_VAL_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TBUS_CLIENT0 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_DBE_TBUS_CLIENT0_ADDR 0x02800024
#define DAT_DBE_TBUS_CLIENT0_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_DBE_TBUS_CLIENT0_RDDATA_A_OFFSET 0x00000000
#define DAT_DBE_TBUS_CLIENT0_RDDATA_A_BITWIDTH 0x00000020
#define DAT_DBE_TBUS_CLIENT0_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_DBE_TBUS_CLIENT0_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TBUS_CLIENT0_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TBUS_CLIENT1 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_DBE_TBUS_CLIENT1_ADDR 0x02800028
#define DAT_DBE_TBUS_CLIENT1_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_DBE_TBUS_CLIENT1_RDDATA_A_OFFSET 0x00000000
#define DAT_DBE_TBUS_CLIENT1_RDDATA_A_BITWIDTH 0x00000020
#define DAT_DBE_TBUS_CLIENT1_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_DBE_TBUS_CLIENT1_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TBUS_CLIENT1_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TBUS_CLIENT2 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_DBE_TBUS_CLIENT2_ADDR 0x0280002C
#define DAT_DBE_TBUS_CLIENT2_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_DBE_TBUS_CLIENT2_RDDATA_A_OFFSET 0x00000000
#define DAT_DBE_TBUS_CLIENT2_RDDATA_A_BITWIDTH 0x00000020
#define DAT_DBE_TBUS_CLIENT2_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_DBE_TBUS_CLIENT2_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TBUS_CLIENT2_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DAT_DBE_TBUS_CLIENT3 */
/* DESCRIPTION: */
/*   Configuration and Observability for Trace Bus */
/* ------------------------------------- */
#define DAT_DBE_TBUS_CLIENT3_ADDR 0x02800030
#define DAT_DBE_TBUS_CLIENT3_SIZE 32

/* FIELD: RDDATA_A */
/* DESCRIPTION: */
/*   TBUS read data */
#define DAT_DBE_TBUS_CLIENT3_RDDATA_A_OFFSET 0x00000000
#define DAT_DBE_TBUS_CLIENT3_RDDATA_A_BITWIDTH 0x00000020
#define DAT_DBE_TBUS_CLIENT3_RDDATA_A_MASK 0xFFFFFFFF
#define DAT_DBE_TBUS_CLIENT3_RDDATA_A_ACCESS JUPITER_CSR_READ_ONLY
#define DAT_DBE_TBUS_CLIENT3_RDDATA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_ANLT_CTRL */
/* DESCRIPTION: */
/*   Ethernet auto-negotiation and link training control register. */
/* ------------------------------------- */
#define ETH_ANLT_CTRL_ADDR 0x02800034
#define ETH_ANLT_CTRL_SIZE 32

/* FIELD: ANLT_MS_PER_CK */
/* DESCRIPTION: */
/*   Number of reference clock cycles in 1ms. Should be set to 1 less than the desired number. */
#define ETH_ANLT_CTRL_ANLT_MS_PER_CK_OFFSET 0x00000000
#define ETH_ANLT_CTRL_ANLT_MS_PER_CK_BITWIDTH 0x00000014
#define ETH_ANLT_CTRL_ANLT_MS_PER_CK_MASK 0x000FFFFF
#define ETH_ANLT_CTRL_ANLT_MS_PER_CK_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_ANLT_CTRL_ANLT_MS_PER_CK_RESET_VALUE 0x00000000

/* FIELD: MAP_EN_NT */
/* DESCRIPTION: */
/*   Enables mapping of different RX to TX lanes */
#define ETH_ANLT_CTRL_MAP_EN_NT_OFFSET 0x00000014
#define ETH_ANLT_CTRL_MAP_EN_NT_BITWIDTH 0x00000001
#define ETH_ANLT_CTRL_MAP_EN_NT_MASK 0x00100000
#define ETH_ANLT_CTRL_MAP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_ANLT_CTRL_MAP_EN_NT_RESET_VALUE 0x00000000

/* FIELD: SIGDET_CTRL_NT */
/* DESCRIPTION: */
/*   Unused */
#define ETH_ANLT_CTRL_SIGDET_CTRL_NT_OFFSET 0x0000001F
#define ETH_ANLT_CTRL_SIGDET_CTRL_NT_BITWIDTH 0x00000001
#define ETH_ANLT_CTRL_SIGDET_CTRL_NT_MASK 0x80000000
#define ETH_ANLT_CTRL_SIGDET_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_ANLT_CTRL_SIGDET_CTRL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_ANLT_STATE_REG2 */
/* DESCRIPTION: */
/*   Ethernet auto-negotiation debug register. */
/* ------------------------------------- */
#define ETH_ANLT_STATE_REG2_ADDR 0x02800038
#define ETH_ANLT_STATE_REG2_SIZE 32

/* FIELD: LT_STATE_CTRL_FSM */
/* DESCRIPTION: */
/*   Link training control FSM state register. For debug purposes only */
#define ETH_ANLT_STATE_REG2_LT_STATE_CTRL_FSM_OFFSET 0x00000000
#define ETH_ANLT_STATE_REG2_LT_STATE_CTRL_FSM_BITWIDTH 0x00000004
#define ETH_ANLT_STATE_REG2_LT_STATE_CTRL_FSM_MASK 0x0000000F
#define ETH_ANLT_STATE_REG2_LT_STATE_CTRL_FSM_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_CTRL_FSM_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_TRAIN */
/* DESCRIPTION: */
/*   Link training block state register. For debug purposes only */
#define ETH_ANLT_STATE_REG2_LT_STATE_TRAIN_OFFSET 0x00000004
#define ETH_ANLT_STATE_REG2_LT_STATE_TRAIN_BITWIDTH 0x00000004
#define ETH_ANLT_STATE_REG2_LT_STATE_TRAIN_MASK 0x000000F0
#define ETH_ANLT_STATE_REG2_LT_STATE_TRAIN_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_TRAIN_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_TX2_COEFF */
/* DESCRIPTION: */
/*   Link training local TX control (Clause 136) block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_TX2_COEFF_OFFSET 0x00000008
#define ETH_ANLT_STATE_REG2_LT_STATE_TX2_COEFF_BITWIDTH 0x00000004
#define ETH_ANLT_STATE_REG2_LT_STATE_TX2_COEFF_MASK 0x00000F00
#define ETH_ANLT_STATE_REG2_LT_STATE_TX2_COEFF_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_TX2_COEFF_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_RX2_PROC */
/* DESCRIPTION: */
/*   Link training RX processing (Clause 136) block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_RX2_PROC_OFFSET 0x0000000C
#define ETH_ANLT_STATE_REG2_LT_STATE_RX2_PROC_BITWIDTH 0x00000004
#define ETH_ANLT_STATE_REG2_LT_STATE_RX2_PROC_MASK 0x0000F000
#define ETH_ANLT_STATE_REG2_LT_STATE_RX2_PROC_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_RX2_PROC_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_TX_P1COEFF */
/* DESCRIPTION: */
/*   Link training local TX coefficient (+1) control block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_P1COEFF_OFFSET 0x00000010
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_P1COEFF_BITWIDTH 0x00000003
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_P1COEFF_MASK 0x00070000
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_P1COEFF_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_P1COEFF_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_TX_0COEFF */
/* DESCRIPTION: */
/*   Link training local TX coefficient (0) control block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_0COEFF_OFFSET 0x00000013
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_0COEFF_BITWIDTH 0x00000003
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_0COEFF_MASK 0x00380000
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_0COEFF_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_0COEFF_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_TX_M1COEFF */
/* DESCRIPTION: */
/*   Link training local TX coefficient (-1) control block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_M1COEFF_OFFSET 0x00000016
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_M1COEFF_BITWIDTH 0x00000003
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_M1COEFF_MASK 0x01C00000
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_M1COEFF_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_TX_M1COEFF_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_RX */
/* DESCRIPTION: */
/*   Link training RX block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_OFFSET 0x00000019
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_BITWIDTH 0x00000002
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_MASK 0x06000000
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_RESET_VALUE 0x00000000

/* FIELD: LT_STATE_RX_PROC */
/* DESCRIPTION: */
/*   Link training RX processing (Clause 72/92) block state register. For debug purposes only. */
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_PROC_OFFSET 0x0000001B
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_PROC_BITWIDTH 0x00000003
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_PROC_MASK 0x38000000
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_PROC_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATE_REG2_LT_STATE_RX_PROC_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_ANLT_STATUS */
/* DESCRIPTION: */
/*   Status register for Ethernet auto-negotiation and link training. */
/* ------------------------------------- */
#define ETH_ANLT_STATUS_ADDR 0x0280003C
#define ETH_ANLT_STATUS_SIZE 32

/* FIELD: LT_DONE */
/* DESCRIPTION: */
/*   Link training done indicator. */
/*   0 - Link training not complete */
/*   1 - Link training complete */
#define ETH_ANLT_STATUS_LT_DONE_OFFSET 0x00000002
#define ETH_ANLT_STATUS_LT_DONE_BITWIDTH 0x00000001
#define ETH_ANLT_STATUS_LT_DONE_MASK 0x00000004
#define ETH_ANLT_STATUS_LT_DONE_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_ANLT_STATUS_LT_DONE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_COEFF_PRESET */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 136) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_COEFF_PRESET_ADDR 0x02800040
#define ETH_LT_COEFF_PRESET_SIZE 32

/* FIELD: LT_CP1_PRESET */
/* DESCRIPTION: */
/*   Link training coefficient (+1) preset value. PMA TX coefficient (+1) (via octl_pma_tx_fir)  will be set to this value when link partner asserts the preset control field in the training frame. Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_COEFF_PRESET_LT_CP1_PRESET_OFFSET 0x00000000
#define ETH_LT_COEFF_PRESET_LT_CP1_PRESET_BITWIDTH 0x00000006
#define ETH_LT_COEFF_PRESET_LT_CP1_PRESET_MASK 0x0000003F
#define ETH_LT_COEFF_PRESET_LT_CP1_PRESET_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_PRESET_LT_CP1_PRESET_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_PRESET */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset value. PMA TX coefficient (0) (via octl_pma_tx_fir)  will be set to this value when link partner asserts the preset control field in the training frame. Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_COEFF_PRESET_LT_CP0_PRESET_OFFSET 0x00000006
#define ETH_LT_COEFF_PRESET_LT_CP0_PRESET_BITWIDTH 0x00000006
#define ETH_LT_COEFF_PRESET_LT_CP0_PRESET_MASK 0x00000FC0
#define ETH_LT_COEFF_PRESET_LT_CP0_PRESET_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_PRESET_LT_CP0_PRESET_RESET_VALUE 0x0000003C

/* FIELD: LT_CM1_PRESET */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset value. PMA TX coefficient (-1) (via octl_pma_tx_fir)  will be set to this value when link partner asserts the preset control field in the training frame. Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_COEFF_PRESET_LT_CM1_PRESET_OFFSET 0x00000010
#define ETH_LT_COEFF_PRESET_LT_CM1_PRESET_BITWIDTH 0x00000006
#define ETH_LT_COEFF_PRESET_LT_CM1_PRESET_MASK 0x003F0000
#define ETH_LT_COEFF_PRESET_LT_CM1_PRESET_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_PRESET_LT_CM1_PRESET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_COEFF_ZERO */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training coefficient zero values. */
/* ------------------------------------- */
#define ETH_LT_COEFF_ZERO_ADDR 0x02800044
#define ETH_LT_COEFF_ZERO_SIZE 32

/* FIELD: ETH_ANLT_CP0_ZERO */
/* DESCRIPTION: */
/*   Link training coefficient (0) zero value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests this coefficient be set to the NOEQ value. Applicable only for technologies using Clause 136 training. */
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP0_ZERO_OFFSET 0x00000000
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP0_ZERO_BITWIDTH 0x00000006
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP0_ZERO_MASK 0x0000003F
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP0_ZERO_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP0_ZERO_RESET_VALUE 0x00000000

/* FIELD: ETH_ANLT_CP1_ZERO */
/* DESCRIPTION: */
/*   Link training coefficient (+1) zero value. PMA TX coefficient (+1) (via octl_pma_tx_fir) will be set to this value when link partner requests this coefficient be set to the NOEQ value. Applicable only for technologies using Clause 136 training. */
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP1_ZERO_OFFSET 0x00000006
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP1_ZERO_BITWIDTH 0x00000006
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP1_ZERO_MASK 0x00000FC0
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP1_ZERO_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CP1_ZERO_RESET_VALUE 0x00000000

/* FIELD: ETH_ANLT_CM1_ZERO */
/* DESCRIPTION: */
/*   Link training coefficient (-1) zero value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests this coefficient be set to the NOEQ value. Applicable only for technologies using Clause 136 training. */
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CM1_ZERO_OFFSET 0x00000010
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CM1_ZERO_BITWIDTH 0x00000006
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CM1_ZERO_MASK 0x003F0000
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CM1_ZERO_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_ZERO_ETH_ANLT_CM1_ZERO_RESET_VALUE 0x00000000

/* FIELD: LT_CM2_ZERO */
/* DESCRIPTION: */
/*   Link training coefficient (-2) zero value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value during Clause 72/92 training. Coefficient will be set to this value when link partner requests this coefficient be set to the NOEQ value during Clause 136 training. */
#define ETH_LT_COEFF_ZERO_LT_CM2_ZERO_OFFSET 0x00000016
#define ETH_LT_COEFF_ZERO_LT_CM2_ZERO_BITWIDTH 0x00000003
#define ETH_LT_COEFF_ZERO_LT_CM2_ZERO_MASK 0x01C00000
#define ETH_LT_COEFF_ZERO_LT_CM2_ZERO_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_ZERO_LT_CM2_ZERO_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_ZERO */
/* DESCRIPTION: */
/*   Link training coefficient (-3) zero value. PMA TX coefficient (-3) (via octl_pma_tx_m3fir) will be set to this value during Clause 72/92 training. Coefficient will be set to this value when link partner requests this coefficient be set to the NOEQ value during Clause 136 training. */
#define ETH_LT_COEFF_ZERO_LT_CM3_ZERO_OFFSET 0x00000019
#define ETH_LT_COEFF_ZERO_LT_CM3_ZERO_BITWIDTH 0x00000003
#define ETH_LT_COEFF_ZERO_LT_CM3_ZERO_MASK 0x0E000000
#define ETH_LT_COEFF_ZERO_LT_CM3_ZERO_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_COEFF_ZERO_LT_CM3_ZERO_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_CTRL */
/* DESCRIPTION: */
/*   Ethernet link training control register. */
/* ------------------------------------- */
#define ETH_LT_CTRL_ADDR 0x02800048
#define ETH_LT_CTRL_SIZE 32

/* FIELD: LT_MR_RESTART_TRAINING */
/* DESCRIPTION: */
/*   Link training restart signal. */
/*   0 - Normal operation. */
/*   1 - Link training is reset, and arbitration FSM is placed into INITIALIZE state. */
/*   Transitions may take some time, as FSMs cannot switch while PMA is busy (state transition, RX evaluation, etc.) */
#define ETH_LT_CTRL_LT_MR_RESTART_TRAINING_OFFSET 0x00000000
#define ETH_LT_CTRL_LT_MR_RESTART_TRAINING_BITWIDTH 0x00000001
#define ETH_LT_CTRL_LT_MR_RESTART_TRAINING_MASK 0x00000001
#define ETH_LT_CTRL_LT_MR_RESTART_TRAINING_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_CTRL_LT_MR_RESTART_TRAINING_RESET_VALUE 0x00000000

/* FIELD: LT_MR_TRAINING_ENABLE */
/* DESCRIPTION: */
/*   Link training enable signal. */
/*   0 - Link training disabled. Control FSM will transition immediately from INITIALIZE to SEND_DATA state, without performing any local or remote TX equalization. */
/*   1 - Normal operation */
#define ETH_LT_CTRL_LT_MR_TRAINING_ENABLE_OFFSET 0x00000001
#define ETH_LT_CTRL_LT_MR_TRAINING_ENABLE_BITWIDTH 0x00000001
#define ETH_LT_CTRL_LT_MR_TRAINING_ENABLE_MASK 0x00000002
#define ETH_LT_CTRL_LT_MR_TRAINING_ENABLE_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_CTRL_LT_MR_TRAINING_ENABLE_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: ETH_LT_PRBS */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training PRBS seeds. */
/* ------------------------------------- */
#define ETH_LT_PRBS_ADDR 0x0280004C
#define ETH_LT_PRBS_SIZE 32

/* FIELD: LT_SEED_11B */
/* DESCRIPTION: */
/*   Link training frame PRBS seed, for technologies using Clause 72/92 training.  */
#define ETH_LT_PRBS_LT_SEED_11B_OFFSET 0x00000000
#define ETH_LT_PRBS_LT_SEED_11B_BITWIDTH 0x0000000B
#define ETH_LT_PRBS_LT_SEED_11B_MASK 0x000007FF
#define ETH_LT_PRBS_LT_SEED_11B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_PRBS_LT_SEED_11B_RESET_VALUE 0x0000057E

/* FIELD: LT_POLYNOMIAL_SEL_C92 */
/* DESCRIPTION: */
/*   Polynomial select for technologies using clause 92 training. Should be set to the lane number by default. */
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C92_OFFSET 0x0000000B
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C92_BITWIDTH 0x00000002
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C92_MASK 0x00001800
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C92_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C92_RESET_VALUE 0x00000000

/* FIELD: LT_POLYNOMIAL_SEL_C136 */
/* DESCRIPTION: */
/*   Polynomial select for technologies using clause 136 training. Should be set to the lane number by default. */
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C136_OFFSET 0x0000000D
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C136_BITWIDTH 0x00000002
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C136_MASK 0x00006000
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_PRBS_LT_POLYNOMIAL_SEL_C136_RESET_VALUE 0x00000000

/* FIELD: LT_SEED_13B */
/* DESCRIPTION: */
/*   Link training frame PRBS seed, for technologies using Clause 136 training.  */
#define ETH_LT_PRBS_LT_SEED_13B_OFFSET 0x00000010
#define ETH_LT_PRBS_LT_SEED_13B_BITWIDTH 0x0000000D
#define ETH_LT_PRBS_LT_SEED_13B_MASK 0x1FFF0000
#define ETH_LT_PRBS_LT_SEED_13B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_PRBS_LT_SEED_13B_RESET_VALUE 0x000000AB

/* ------------------------------------- */
/* REG: ETH_LT_RXFRAME_REG1 */
/* DESCRIPTION: */
/*   Received Ethernet link training frame register. */
/* ------------------------------------- */
#define ETH_LT_RXFRAME_REG1_ADDR 0x02800050
#define ETH_LT_RXFRAME_REG1_SIZE 32

/* FIELD: LT_RX_CTL_COEFF_REQ */
/* DESCRIPTION: */
/*   Received coefficient request control field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - Hold */
/*   1 - Increment */
/*   2 - Decrement */
/*   3 - No equalization */
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_REQ_OFFSET 0x00000000
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_REQ_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_REQ_MASK 0x00000003
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_REQ_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_REQ_RESET_VALUE 0x00000000

/* FIELD: LT_RX_CTL_COEFF_SEL */
/* DESCRIPTION: */
/*   Received coefficient select control field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training */
/*   0 - c(0) */
/*   1 - c(1) */
/*   6 - c(-1) */
/*   7 - c(-2) */
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_SEL_OFFSET 0x00000002
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_SEL_BITWIDTH 0x00000003
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_SEL_MASK 0x0000001C
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_SEL_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_COEFF_SEL_RESET_VALUE 0x00000000

/* FIELD: LT_RX_CTL_MOD_PRE */
/* DESCRIPTION: */
/*   Received modulation and precoding request control field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 with precoding */
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_MOD_PRE_OFFSET 0x00000008
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_MOD_PRE_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_MOD_PRE_MASK 0x00000300
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_MOD_PRE_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_MOD_PRE_RESET_VALUE 0x00000000

/* FIELD: LT_RX_CTL_INIT_COND */
/* DESCRIPTION: */
/*   Received initial condition request control field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - Individual coefficient control */
/*   1 - Preset 1 */
/*   2 - Preset 2 */
/*   3 - Preset 3 */
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_INIT_COND_OFFSET 0x0000000B
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_INIT_COND_BITWIDTH 0x00000003
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_INIT_COND_MASK 0x00003800
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_INIT_COND_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG1_LT_RX_CTL_INIT_COND_RESET_VALUE 0x00000000

/* FIELD: LT_RX_NEWFRAME_C136 */
/* DESCRIPTION: */
/*   RX new frame received. When asserted, indicates a new link training frame has been received, and associated registers are valid. Cleared upon read. Only applicable for technologies using Clause 136 training. */
#define ETH_LT_RXFRAME_REG1_LT_RX_NEWFRAME_C136_OFFSET 0x00000010
#define ETH_LT_RXFRAME_REG1_LT_RX_NEWFRAME_C136_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG1_LT_RX_NEWFRAME_C136_MASK 0x00010000
#define ETH_LT_RXFRAME_REG1_LT_RX_NEWFRAME_C136_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG1_LT_RX_NEWFRAME_C136_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_RXFRAME_REG2 */
/* DESCRIPTION: */
/*   Received Ethernet link training frame register. */
/* ------------------------------------- */
#define ETH_LT_RXFRAME_REG2_ADDR 0x02800054
#define ETH_LT_RXFRAME_REG2_SIZE 32

/* FIELD: LT_RX_STAT_COEFF */
/* DESCRIPTION: */
/*   Received coefficient status field portion of training frame. Valid with eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - Not updated */
/*   1 - Updated */
/*   2 - Coefficient at limit */
/*   3 - Coefficient not supported */
/*   4 - Equalization limit */
/*   5 - Reserved */
/*   6 - Coefficient at limit and equalization limit */
/*   7 - Reserved */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_OFFSET 0x00000000
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_BITWIDTH 0x00000003
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_MASK 0x00000007
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_COEFF_SEL_ECHO */
/* DESCRIPTION: */
/*   Received coefficient select echo field portion of training frame. Valid with eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - c(0) */
/*   1 - c(1) */
/*   6 - c(-1) */
/*   7 - c(-2) */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_SEL_ECHO_OFFSET 0x00000003
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_SEL_ECHO_BITWIDTH 0x00000003
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_SEL_ECHO_MASK 0x00000038
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_SEL_ECHO_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_COEFF_SEL_ECHO_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_INIT_COND */
/* DESCRIPTION: */
/*   Received initial condition status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - Not updated */
/*   1 - Updated */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_INIT_COND_OFFSET 0x00000008
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_INIT_COND_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_INIT_COND_MASK 0x00000100
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_INIT_COND_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_INIT_COND_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_RX_FLOCK */
/* DESCRIPTION: */
/*   Received receiver frame lock status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - Frame boundaries not identified */
/*   1 - Frame boundaries identified */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_FLOCK_OFFSET 0x00000009
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_FLOCK_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_FLOCK_MASK 0x00000200
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_FLOCK_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_FLOCK_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_MOD_PRE */
/* DESCRIPTION: */
/*   Received modulcation and precoding status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 with precoding */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_MOD_PRE_OFFSET 0x0000000A
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_MOD_PRE_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_MOD_PRE_MASK 0x00000C00
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_MOD_PRE_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_MOD_PRE_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_RX_READY_C136 */
/* DESCRIPTION: */
/*   Received RX ready status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 136 training. */
/*   0 - The local receiver is requesting that training continue. */
/*   1 - The local receiver has determined that training is complete and is prepared to receive data. */
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_READY_C136_OFFSET 0x0000000F
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_READY_C136_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_READY_C136_MASK 0x00008000
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_READY_C136_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG2_LT_RX_STAT_RX_READY_C136_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_RXFRAME_REG3 */
/* DESCRIPTION: */
/*   Received Ethernet link training frame register. */
/* ------------------------------------- */
#define ETH_LT_RXFRAME_REG3_ADDR 0x02800058
#define ETH_LT_RXFRAME_REG3_SIZE 32

/* FIELD: LT_RX_UPD_M1C */
/* DESCRIPTION: */
/*   Received coefficient (-1) update field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - hold */
/*   1 - increment */
/*   2 - decrement */
/*   3 - reserved */
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_M1C_OFFSET 0x00000000
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_M1C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_M1C_MASK 0x00000003
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_M1C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_M1C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_UPD_0C */
/* DESCRIPTION: */
/*   Received coefficient (0) update field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - hold */
/*   1 - increment */
/*   2 - decrement */
/*   3 - reserved */
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_0C_OFFSET 0x00000002
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_0C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_0C_MASK 0x0000000C
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_0C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_0C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_UPD_P1C */
/* DESCRIPTION: */
/*   Received coefficient (+1) update field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - hold */
/*   1 - increment */
/*   2 - decrement */
/*   3 - reserved */
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_P1C_OFFSET 0x00000004
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_P1C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_P1C_MASK 0x00000030
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_P1C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_P1C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_UPD_INITIALIZE */
/* DESCRIPTION: */
/*   Received initialize update field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - Normal operation */
/*   1 - Initialize coefficients */
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_INITIALIZE_OFFSET 0x0000000C
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_INITIALIZE_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_INITIALIZE_MASK 0x00001000
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_INITIALIZE_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_INITIALIZE_RESET_VALUE 0x00000000

/* FIELD: LT_RX_UPD_PRESET */
/* DESCRIPTION: */
/*   Received initialize preset field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - Normal operation */
/*   1 - Preset coefficients */
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_PRESET_OFFSET 0x0000000D
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_PRESET_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_PRESET_MASK 0x00002000
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_PRESET_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_UPD_PRESET_RESET_VALUE 0x00000000

/* FIELD: LT_RX_NEWFRAME_C72 */
/* DESCRIPTION: */
/*   RX new frame received. When asserted, indicates a new link training frame has been received, and associated registers are valid. Cleared upon read. Only applicable for technologies using Clause 72/92 training. */
#define ETH_LT_RXFRAME_REG3_LT_RX_NEWFRAME_C72_OFFSET 0x00000010
#define ETH_LT_RXFRAME_REG3_LT_RX_NEWFRAME_C72_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG3_LT_RX_NEWFRAME_C72_MASK 0x00010000
#define ETH_LT_RXFRAME_REG3_LT_RX_NEWFRAME_C72_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG3_LT_RX_NEWFRAME_C72_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_RXFRAME_REG4 */
/* DESCRIPTION: */
/*   Received Ethernet link training frame register. */
/* ------------------------------------- */
#define ETH_LT_RXFRAME_REG4_ADDR 0x0280005C
#define ETH_LT_RXFRAME_REG4_SIZE 32

/* FIELD: LT_RX_STAT_M1C */
/* DESCRIPTION: */
/*   Received coefficient (-1) status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_M1C_OFFSET 0x00000000
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_M1C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_M1C_MASK 0x00000003
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_M1C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_M1C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_0C */
/* DESCRIPTION: */
/*   Received coefficient (0) status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_0C_OFFSET 0x00000002
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_0C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_0C_MASK 0x0000000C
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_0C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_0C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_P1C */
/* DESCRIPTION: */
/*   Received coefficient (+1) status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_P1C_OFFSET 0x00000004
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_P1C_BITWIDTH 0x00000002
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_P1C_MASK 0x00000030
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_P1C_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_P1C_RESET_VALUE 0x00000000

/* FIELD: LT_RX_STAT_RX_READY_C72 */
/* DESCRIPTION: */
/*   Received RX ready status field portion of training frame. Valid when eth_lt_newframe asserted. Only applicable for technologies using Clause 72/92 training. */
/*   0 - The local receiver is requesting that training continue. */
/*   1 - The local receiver has determined that training is complete and is prepared to receive data. */
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_RX_READY_C72_OFFSET 0x0000000F
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_RX_READY_C72_BITWIDTH 0x00000001
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_RX_READY_C72_MASK 0x00008000
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_RX_READY_C72_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_RXFRAME_REG4_LT_RX_STAT_RX_READY_C72_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_SETTINGS */
/* DESCRIPTION: */
/*   Configuration for Ethernet link training. */
/* ------------------------------------- */
#define ETH_LT_SETTINGS_ADDR 0x02800060
#define ETH_LT_SETTINGS_SIZE 32

/* FIELD: LT_TRAIN_FINAL_EQTYPE_C136 */
/* DESCRIPTION: */
/*   Determines final PMA RX equalization run, for technologies using clause 136 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C136_OFFSET 0x00000000
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C136_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C136_MASK 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C136_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_FINAL_EQTYPE_C72 */
/* DESCRIPTION: */
/*   Determines final PMA RX equalization run, for technologies using clause 72/92 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C72_OFFSET 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C72_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C72_MASK 0x00000002
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_FINAL_EQTYPE_C72_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_MID_EQTYPE_C136 */
/* DESCRIPTION: */
/*   Determines middle (not during preset checks) PMA RX equalization run, for technologies using clause 136 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C136_OFFSET 0x00000002
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C136_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C136_MASK 0x00000004
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C136_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_MID_EQTYPE_C72 */
/* DESCRIPTION: */
/*   Determines middle (not during preset checks) PMA RX equalization run, for technologies using clause 72/92 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C72_OFFSET 0x00000003
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C72_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C72_MASK 0x00000008
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_MID_EQTYPE_C72_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_PRESET_CHECK_C136 */
/* DESCRIPTION: */
/*   Preset check enable, for technologies using clause 136 negotiation. Bit 0 corresponds to preset2, bit 1 corresponds to preset3. Preset1 is always checked */
/*   0 - Preset disabled. Training block will not request/check preset prior to running individual coefficient request/checks */
/*   1 - Preset enabled. Training block will request/check preset prior to running individual coefficient request/checks */
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C136_OFFSET 0x00000004
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C136_BITWIDTH 0x00000002
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C136_MASK 0x00000030
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C136_RESET_VALUE 0x00000003

/* FIELD: LT_TRAIN_PRESET_CHECK_C72 */
/* DESCRIPTION: */
/*   Preset check enable, for technologies using clause 72/92 negotiation. Initialization value is always checked. */
/*   0 - Preset disabled. Training block will not request/check preset prior to running individual coefficient request/checks */
/*   1 - Preset enabled. Training block will request/check preset prior to running individual coefficient request/checks */
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C72_OFFSET 0x00000006
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C72_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C72_MASK 0x00000040
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_CHECK_C72_RESET_VALUE 0x00000001

/* FIELD: LT_TRAIN_PRESET_EQTYPE_C136 */
/* DESCRIPTION: */
/*   Determines preset (excluding preset1, which always performs link evaluation and RX equalization) PMA RX equalization run, for technologies using clause 136 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C136_OFFSET 0x00000007
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C136_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C136_MASK 0x00000080
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C136_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_PRESET_EQTYPE_C72 */
/* DESCRIPTION: */
/*   Determines preset PMA RX equalization run, for technologies using clause 72/92 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C72_OFFSET 0x00000008
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C72_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C72_MASK 0x00000100
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_TRAIN_PRESET_EQTYPE_C72_RESET_VALUE 0x00000000

/* FIELD: LT_REG_FINAL_MOD */
/* DESCRIPTION: */
/*   Link partner TX / local RX modulation / precoding to set after link training complete, for technologies using Clause 136 training. This determines the encoding used by the link partner TX when transmitting regular data. */
/*   0 - PAM4 */
/*   1 - PAM4 w/precoding */
#define ETH_LT_SETTINGS_LT_REG_FINAL_MOD_OFFSET 0x00000009
#define ETH_LT_SETTINGS_LT_REG_FINAL_MOD_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_REG_FINAL_MOD_MASK 0x00000200
#define ETH_LT_SETTINGS_LT_REG_FINAL_MOD_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_REG_FINAL_MOD_RESET_VALUE 0x00000001

/* FIELD: LT_REG_TRAINING_MOD */
/* DESCRIPTION: */
/*   Link partner TX / local RX modulation / precoding to use during link training, for technologies using Clause 136 training */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 w/precoding */
#define ETH_LT_SETTINGS_LT_REG_TRAINING_MOD_OFFSET 0x0000000A
#define ETH_LT_SETTINGS_LT_REG_TRAINING_MOD_BITWIDTH 0x00000002
#define ETH_LT_SETTINGS_LT_REG_TRAINING_MOD_MASK 0x00000C00
#define ETH_LT_SETTINGS_LT_REG_TRAINING_MOD_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_REG_TRAINING_MOD_RESET_VALUE 0x00000000

/* FIELD: LT_MAX_WAIT_DISABLE_C72 */
/* DESCRIPTION: */
/*   Disable LT max time check, for technologies using clause 72/92 training */
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C72_OFFSET 0x0000000C
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C72_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C72_MASK 0x00001000
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C72_RESET_VALUE 0x00000000

/* FIELD: LT_MAX_WAIT_DISABLE_C136 */
/* DESCRIPTION: */
/*   Disable LT max time check, for technologies using clause 136 training */
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136_OFFSET 0x0000000D
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136_MASK 0x00002000
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136_RESET_VALUE 0x00000000

/* FIELD: LT_COEFF_DISABLE_C72 */
/* DESCRIPTION: */
/*   Remote TX coefficient disable, for technologies using Clause 72 training. When disabled, FSM will not attempt to change associated remote TX coefficient. */
/*   Bit 0 - Disable C(-2) */
/*   Bit 1 - Disable C(-1) */
/*   Bit 2 - Disable C(0) */
/*   Bit 3 - Disable C(+1) */
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C72_OFFSET 0x00000010
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C72_BITWIDTH 0x00000004
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C72_MASK 0x000F0000
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C72_RESET_VALUE 0x00000000

/* FIELD: LT_COEFF_DISABLE_C136 */
/* DESCRIPTION: */
/*   Remote TX coefficient disable, for technologies using Clause 136 training. When disabled, FSM will not attempt to change associated remote TX coefficient. */
/*   Bit 0 - Disable C(-2) */
/*   Bit 1 - Disable C(-1) */
/*   Bit 2 - Disable C(0) */
/*   Bit 3 - Disable C(+1) */
/*   Bit 4 - Disable C(-3) */
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136_OFFSET 0x00000014
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136_BITWIDTH 0x00000005
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136_MASK 0x01F00000
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136_RESET_VALUE 0x00000010

/* FIELD: LT_COEFF_DISABLE_C136B */
/* DESCRIPTION: */
/*   Remote TX coefficient disable, for technologies using Clause 136 training. When disabled, FSM will not attempt to change associated remote TX coefficient. */
/*   Bit 0 - Disable C(-2) */
/*   Bit 1 - Disable C(-1) */
/*   Bit 2 - Disable C(0) */
/*   Bit 3 - Disable C(+1) */
/*   Bit 4 - Disable C(-3) */
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136B_OFFSET 0x00000019
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136B_BITWIDTH 0x00000005
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136B_MASK 0x3E000000
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_COEFF_DISABLE_C136B_RESET_VALUE 0x00000000

/* FIELD: LT_MAX_WAIT_DISABLE_C136B */
/* DESCRIPTION: */
/*   Disable LT max time check, for technologies using clause 162 training */
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136B_OFFSET 0x0000001E
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136B_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136B_MASK 0x40000000
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_MAX_WAIT_DISABLE_C136B_RESET_VALUE 0x00000000

/* FIELD: LT_C162_INIT_3BITS */
/* DESCRIPTION: */
/*   Clause 162 Training frame style */
/*   0  Old style (preset1-3) */
/*   1  New style (preset1-5) */
#define ETH_LT_SETTINGS_LT_C162_INIT_3BITS_OFFSET 0x0000001F
#define ETH_LT_SETTINGS_LT_C162_INIT_3BITS_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS_LT_C162_INIT_3BITS_MASK 0x80000000
#define ETH_LT_SETTINGS_LT_C162_INIT_3BITS_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS_LT_C162_INIT_3BITS_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_SETTINGS2 */
/* DESCRIPTION: */
/*   Configuration for Ethernet link training. */
/* ------------------------------------- */
#define ETH_LT_SETTINGS2_ADDR 0x02800064
#define ETH_LT_SETTINGS2_SIZE 32

/* FIELD: LT_REG_TRAINING_SWEEP_MOD */
/* DESCRIPTION: */
/*   Link partner TX / local RX modulation / precoding to use during link training, for technologies using Clause 136 training */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 w/precoding */
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_SWEEP_MOD_OFFSET 0x00000000
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_SWEEP_MOD_BITWIDTH 0x00000002
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_SWEEP_MOD_MASK 0x00000003
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_SWEEP_MOD_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_SWEEP_MOD_RESET_VALUE 0x00000000

/* FIELD: LT_REG_TRAINING_INIT_MOD */
/* DESCRIPTION: */
/*   Link partner TX / local RX modulation / precoding to use during link training, for technologies using Clause 136 training */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 w/precoding */
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_INIT_MOD_OFFSET 0x00000002
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_INIT_MOD_BITWIDTH 0x00000002
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_INIT_MOD_MASK 0x0000000C
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_INIT_MOD_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_REG_TRAINING_INIT_MOD_RESET_VALUE 0x00000000

/* FIELD: LT_DMETEST_CTRL_C136 */
/* DESCRIPTION: */
/*   Controls DME control frame error checking for technologies using clause 136/162 */
/*   Bit 0 - Enable transition count check */
/*   Bit 1 - Enable clock transition check */
/*   Bit 2 - Enable 010 or 101 check */
/*   Bit 3 - Enable 0110 or 1001 check */
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C136_OFFSET 0x00000004
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C136_BITWIDTH 0x00000005
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C136_MASK 0x000001F0
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C136_RESET_VALUE 0x00000000

/* FIELD: LT_DMETEST_CTRL_C72 */
/* DESCRIPTION: */
/*   Controls DME control frame error checking for technologies using clause 72/92 */
/*   Bit 0 - Enable transition count check */
/*   Bit 1 - Enable clock transition check */
/*   Bit 2 - Enable 010 or 101 check */
/*   Bit 3 - Enable 0110 or 1001 check */
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C72_OFFSET 0x00000009
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C72_BITWIDTH 0x00000004
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C72_MASK 0x00001E00
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_DMETEST_CTRL_C72_RESET_VALUE 0x00000000

/* FIELD: LT_LOCK_CTRL */
/* DESCRIPTION: */
/*   LT lock control */
/*   Bit 0 - Strict marker check (0 = strict, 1 = loose) */
/*   Bit 1 - Unused */
#define ETH_LT_SETTINGS2_LT_LOCK_CTRL_OFFSET 0x0000000D
#define ETH_LT_SETTINGS2_LT_LOCK_CTRL_BITWIDTH 0x00000002
#define ETH_LT_SETTINGS2_LT_LOCK_CTRL_MASK 0x00006000
#define ETH_LT_SETTINGS2_LT_LOCK_CTRL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_LOCK_CTRL_RESET_VALUE 0x00000000

/* FIELD: LT_SCAN_DURING_EQ */
/* DESCRIPTION: */
/*   Disabled */
#define ETH_LT_SETTINGS2_LT_SCAN_DURING_EQ_OFFSET 0x0000000F
#define ETH_LT_SETTINGS2_LT_SCAN_DURING_EQ_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS2_LT_SCAN_DURING_EQ_MASK 0x00008000
#define ETH_LT_SETTINGS2_LT_SCAN_DURING_EQ_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_SCAN_DURING_EQ_RESET_VALUE 0x00000000

/* FIELD: LT_NOFINALFLOCKCHECK */
/* DESCRIPTION: */
/*   Controls final local frame lock check when training */
/*   0 - Double-check local frame lock before exiting TRAIN_LOCAL/TRAIN_REMOTE */
/*   1 - Ignore local frame lock when exiting TRAIN_LOCAL/TRAIN_REMOTE */
#define ETH_LT_SETTINGS2_LT_NOFINALFLOCKCHECK_OFFSET 0x00000010
#define ETH_LT_SETTINGS2_LT_NOFINALFLOCKCHECK_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS2_LT_NOFINALFLOCKCHECK_MASK 0x00010000
#define ETH_LT_SETTINGS2_LT_NOFINALFLOCKCHECK_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_NOFINALFLOCKCHECK_RESET_VALUE 0x00000000

/* FIELD: LT_PAM4_SWAP */
/* DESCRIPTION: */
/*   Controls bit order when in PAM4 */
/*   0 - {A,B} */
/*   1 - {B,A} */
#define ETH_LT_SETTINGS2_LT_PAM4_SWAP_OFFSET 0x00000011
#define ETH_LT_SETTINGS2_LT_PAM4_SWAP_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS2_LT_PAM4_SWAP_MASK 0x00020000
#define ETH_LT_SETTINGS2_LT_PAM4_SWAP_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_PAM4_SWAP_RESET_VALUE 0x00000000

/* FIELD: LT_RXDURINGEQ */
/* DESCRIPTION: */
/*   Enable scan for control frames during EQ */
/*   0 = Disabled */
/*   1 = Enabled */
#define ETH_LT_SETTINGS2_LT_RXDURINGEQ_OFFSET 0x00000012
#define ETH_LT_SETTINGS2_LT_RXDURINGEQ_BITWIDTH 0x00000001
#define ETH_LT_SETTINGS2_LT_RXDURINGEQ_MASK 0x00040000
#define ETH_LT_SETTINGS2_LT_RXDURINGEQ_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS2_LT_RXDURINGEQ_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_SETTINGS3 */
/* DESCRIPTION: */
/*   Configuration for Ethernet link training. */
/* ------------------------------------- */
#define ETH_LT_SETTINGS3_ADDR 0x02800068
#define ETH_LT_SETTINGS3_SIZE 32

/* FIELD: LT_MARKER_RANGE_C72 */
/* DESCRIPTION: */
/*   Specifies the range (in number of clock cycles) where a link training marker is allowed to appear, for technologies using C72. */
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C72_OFFSET 0x00000000
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C72_BITWIDTH 0x00000008
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C72_MASK 0x000000FF
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C72_RESET_VALUE 0x00000002

/* FIELD: LT_MARKER_RANGE_C136 */
/* DESCRIPTION: */
/*   Specifies the range (in number of clock cycles) where a link training marker is allowed to appear, for technologies using C136. */
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C136_OFFSET 0x00000008
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C136_BITWIDTH 0x00000008
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C136_MASK 0x0000FF00
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS3_LT_MARKER_RANGE_C136_RESET_VALUE 0x00000002

/* FIELD: LT_TRAIN_PRESET_CHECK_C162 */
/* DESCRIPTION: */
/*   Determines final PMA RX equalization run, for technologies using clause 162 negotiation. */
/*   0 - Link evaluation only */
/*   1 - Link evaluation and RX equalization */
#define ETH_LT_SETTINGS3_LT_TRAIN_PRESET_CHECK_C162_OFFSET 0x00000013
#define ETH_LT_SETTINGS3_LT_TRAIN_PRESET_CHECK_C162_BITWIDTH 0x00000004
#define ETH_LT_SETTINGS3_LT_TRAIN_PRESET_CHECK_C162_MASK 0x00780000
#define ETH_LT_SETTINGS3_LT_TRAIN_PRESET_CHECK_C162_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SETTINGS3_LT_TRAIN_PRESET_CHECK_C162_RESET_VALUE 0x00000003

/* ------------------------------------- */
/* REG: ETH_LT_SOFT_CTRL_REG1 */
/* DESCRIPTION: */
/*   Control register for Ethernet link training in software mode. */
/* ------------------------------------- */
#define ETH_LT_SOFT_CTRL_REG1_ADDR 0x0280006C
#define ETH_LT_SOFT_CTRL_REG1_SIZE 32

/* FIELD: LT_SOFT_TX_UPD_M1C */
/* DESCRIPTION: */
/*   Link training software control coefficient (-1) update request.  Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 72/92 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_M1C_OFFSET 0x00000000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_M1C_BITWIDTH 0x00000002
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_M1C_MASK 0x00000003
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_M1C_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_M1C_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_UPD_0C */
/* DESCRIPTION: */
/*   Link training software control coefficient (0) update request.  Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 72/92 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_0C_OFFSET 0x00000002
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_0C_BITWIDTH 0x00000002
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_0C_MASK 0x0000000C
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_0C_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_0C_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_UPD_P1C */
/* DESCRIPTION: */
/*   Link training software control coefficient (+1) update request.  Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 72/92 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - not_updated */
/*   1 - updated */
/*   2 - minimum */
/*   3 - maximum */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_P1C_OFFSET 0x00000004
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_P1C_BITWIDTH 0x00000002
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_P1C_MASK 0x00000030
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_P1C_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_P1C_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_UPD_INITIALIZE */
/* DESCRIPTION: */
/*   Link training software control initialize request. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 72/92 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - Normal operation */
/*   1 - Initialize coefficients */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_INITIALIZE_OFFSET 0x0000000C
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_INITIALIZE_BITWIDTH 0x00000001
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_INITIALIZE_MASK 0x00001000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_INITIALIZE_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_INITIALIZE_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_UPD_PRESET */
/* DESCRIPTION: */
/*   Link training software control request. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 72/92 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - Normal operation */
/*   1 - Preset coefficients */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_PRESET_OFFSET 0x0000000D
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_PRESET_BITWIDTH 0x00000001
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_PRESET_MASK 0x00002000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_PRESET_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_UPD_PRESET_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_EN */
/* DESCRIPTION: */
/*   Link training software control enable. Allows external software control of local RX / remote TX training. */
/*   0 - Use internal local RX / remote TX training FSM. */
/*   1 - Disable internal local RX / remote TX training FSM, and use eth_lt_soft* registers to fill out the control section of the training frames. */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_EN_OFFSET 0x00000010
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_EN_BITWIDTH 0x00000001
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_EN_MASK 0x00010000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_EN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_EN_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_NEWFRAME */
/* DESCRIPTION: */
/*   Link training software control new frame indicator. When a 1 is written to this register, the eth_lt_soft_tx* registers will be read and all following link training TX frames will use the specified values in the control fields. When read, will return 0 */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_NEWFRAME_OFFSET 0x00000011
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_NEWFRAME_BITWIDTH 0x00000001
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_NEWFRAME_MASK 0x00020000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_NEWFRAME_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_TX_NEWFRAME_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_RX_TRAINED */
/* DESCRIPTION: */
/*   Link training software control RX trained indicator. When asserted, informs the link training FSM that local training is complete and the FSM can proceed. */
/*   0 - Software link training incomplete */
/*   1 - Software link training complete */
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_RX_TRAINED_OFFSET 0x00000012
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_RX_TRAINED_BITWIDTH 0x00000001
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_RX_TRAINED_MASK 0x00040000
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_RX_TRAINED_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG1_LT_SOFT_RX_TRAINED_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_SOFT_CTRL_REG2 */
/* DESCRIPTION: */
/*   Control register for Ethernet link training in software mode. */
/* ------------------------------------- */
#define ETH_LT_SOFT_CTRL_REG2_ADDR 0x02800070
#define ETH_LT_SOFT_CTRL_REG2_SIZE 32

/* FIELD: LT_SOFT_TX_CTL_COEFF_REQ */
/* DESCRIPTION: */
/*   Link training software control coefficient request. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 136 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - Hold */
/*   1 - Increment */
/*   2 - Decrement */
/*   3 - No equalization */
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_REQ_OFFSET 0x00000000
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_REQ_BITWIDTH 0x00000002
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_REQ_MASK 0x00000003
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_REQ_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_REQ_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_CTL_COEFF_SEL */
/* DESCRIPTION: */
/*   Link training software control coefficient select. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 136 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - c(0) */
/*   1 - c(1) */
/*   6 - c(-2) */
/*   7 - c(-1) */
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_SEL_OFFSET 0x00000002
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_SEL_BITWIDTH 0x00000003
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_SEL_MASK 0x0000001C
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_SEL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_COEFF_SEL_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_CTL_MOD_PRE */
/* DESCRIPTION: */
/*   Link training software control modulation and precoding request. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 136 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - PAM2 */
/*   1 - Reserved */
/*   2 - PAM4 */
/*   3 - PAM4 with precoding */
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_MOD_PRE_OFFSET 0x00000008
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_MOD_PRE_BITWIDTH 0x00000002
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_MOD_PRE_MASK 0x00000300
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_MOD_PRE_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_MOD_PRE_RESET_VALUE 0x00000000

/* FIELD: LT_SOFT_TX_CTL_INIT_COND */
/* DESCRIPTION: */
/*   Link training software control initial condition request. Used when eth_lt_soft_en is asserted. Applicable only for technologies using Clause 136 training. Read by the system when a 1 is written to eth_lt_soft_tx_newframe. */
/*   0 - Individual coefficient control */
/*   1 - Preset 1 */
/*   2 - Preset 2 */
/*   3 - Preset 3 */
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_INIT_COND_OFFSET 0x0000000B
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_INIT_COND_BITWIDTH 0x00000003
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_INIT_COND_MASK 0x00003800
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_INIT_COND_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_SOFT_CTRL_REG2_LT_SOFT_TX_CTL_INIT_COND_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_STAT */
/* DESCRIPTION: */
/*   Ethernet link training status register. */
/* ------------------------------------- */
#define ETH_LT_STAT_ADDR 0x02800074
#define ETH_LT_STAT_SIZE 32

/* FIELD: LT_RX_FRAME_LOCK */
/* DESCRIPTION: */
/*   RX frame lock indicator. Valid when eth_lt_newframe asserted.  */
/*   0 - RX link training block has not attained frame lock */
/*   1 - RX link training block has attained frame lock */
#define ETH_LT_STAT_LT_RX_FRAME_LOCK_OFFSET 0x00000001
#define ETH_LT_STAT_LT_RX_FRAME_LOCK_BITWIDTH 0x00000001
#define ETH_LT_STAT_LT_RX_FRAME_LOCK_MASK 0x00000002
#define ETH_LT_STAT_LT_RX_FRAME_LOCK_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_STAT_LT_RX_FRAME_LOCK_RESET_VALUE 0x00000000

/* FIELD: LT_TRAINING_FAILURE */
/* DESCRIPTION: */
/*   Link training failure indicator. */
/*   0 - Link training has not failed. */
/*   1 - Link training has failed and control FSM is in TRAINING_FAILED state. */
#define ETH_LT_STAT_LT_TRAINING_FAILURE_OFFSET 0x00000003
#define ETH_LT_STAT_LT_TRAINING_FAILURE_BITWIDTH 0x00000001
#define ETH_LT_STAT_LT_TRAINING_FAILURE_MASK 0x00000008
#define ETH_LT_STAT_LT_TRAINING_FAILURE_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_STAT_LT_TRAINING_FAILURE_RESET_VALUE 0x00000000

/* FIELD: LT_RUNNING */
/* DESCRIPTION: */
/*   Link training running indicator. */
/*   0 - Link training not running */
/*   1 - Link training running */
#define ETH_LT_STAT_LT_RUNNING_OFFSET 0x0000000B
#define ETH_LT_STAT_LT_RUNNING_BITWIDTH 0x00000001
#define ETH_LT_STAT_LT_RUNNING_MASK 0x00000800
#define ETH_LT_STAT_LT_RUNNING_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_STAT_LT_RUNNING_RESET_VALUE 0x00000000

/* FIELD: LT_RX_READY */
/* DESCRIPTION: */
/*   Local RX / remote TX trained indicator. */
/*   0 - Local RX / remote TX have not been trained */
/*   1 - Local RX / remote TX have been trained */
#define ETH_LT_STAT_LT_RX_READY_OFFSET 0x0000000D
#define ETH_LT_STAT_LT_RX_READY_BITWIDTH 0x00000001
#define ETH_LT_STAT_LT_RX_READY_MASK 0x00002000
#define ETH_LT_STAT_LT_RX_READY_ACCESS JUPITER_CSR_READ_ONLY
#define ETH_LT_STAT_LT_RX_READY_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG1 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG1_ADDR 0x02800078
#define ETH_LT_TIMER_REG1_SIZE 32

/* FIELD: LT_MAX_WAIT_C136 */
/* DESCRIPTION: */
/*   Max wait timer value. Sets the limit for how long the link training procedure is allowed to operate, in ms. Must be set to 1 less than desired value. Applicable only for technologies using clause 136 training. Legal values are 3000ms +/- 2% */
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C136_OFFSET 0x00000000
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C136_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C136_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C136_RESET_VALUE 0x00000BB7

/* FIELD: LT_MAX_WAIT_C72 */
/* DESCRIPTION: */
/*   Max wait timer value. Sets the limit for how long the link training procedure is allowed to operate, in ms. Must be set to 1 less than desired value. Applicable only for technologies using clause 72/92 training. Legal values are 500ms +/- 1% */
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C72_OFFSET 0x00000010
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C72_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C72_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG1_LT_MAX_WAIT_C72_RESET_VALUE 0x000001F3

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG2 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG2_ADDR 0x0280007C
#define ETH_LT_TIMER_REG2_SIZE 32

/* FIELD: LT_READY_TIMER_C136 */
/* DESCRIPTION: */
/*   Max ready timer value, in number of training frames. Sets the number of extra training frames that are sent in the LINK_READY state prior to entering SEND_DATA. Must be set to 1 less than the desired value. Applicable only for technologies using Clause 136 training. Legal values are 40 to 200 frames. */
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C136_OFFSET 0x00000000
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C136_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C136_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C136_RESET_VALUE 0x00000063

/* FIELD: LT_READY_TIMER_C72 */
/* DESCRIPTION: */
/*   Max ready timer value, in number of training frames. Sets the number of extra training frames that are sent in the LINK_READY state prior to entering SEND_DATA. Must be set to 1 less than the desired value. Applicable only for technologies using Clause 72/92 training. Legal values are 100 to 300 frames. */
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C72_OFFSET 0x00000010
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C72_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C72_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG2_LT_READY_TIMER_C72_RESET_VALUE 0x000000C7

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG3 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG3_ADDR 0x02800080
#define ETH_LT_TIMER_REG3_SIZE 32

/* FIELD: LT_HOLDOFF_C136 */
/* DESCRIPTION: */
/*   Holdoff timer value. Sets the amount of time link control FSM remains in the TIMEOUT state, in ms. Applicable only for technologies using clause 136 training. Should be set to 1 less than the desired value. Legal values are 80ms +/- 2%. */
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136_OFFSET 0x00000000
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136_RESET_VALUE 0x00000031

/* FIELD: LT_HOLDOFF_C136B */
/* DESCRIPTION: */
/*   Holdoff timer value. Sets the amount of time link control FSM remains in the TIMEOUT state, in ms. Applicable only for technologies using clause 162 training. Should be set to 1 less than the desired value. Legal values are 80ms +/- 2%. */
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136B_OFFSET 0x00000010
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136B_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136B_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG3_LT_HOLDOFF_C136B_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG4 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG4_ADDR 0x02800084
#define ETH_LT_TIMER_REG4_SIZE 32

/* FIELD: LT_TRAIN_ITER_COUNT_C136 */
/* DESCRIPTION: */
/*   Iteration count, for technologies using clause 136 negotiation. Internal training block will perform the individual coefficient update/ link evaluation routine 1+this number of times, then indicate RX ready. Setting this value to 0 will disable the individual coefficient update /link evaluation portion of the training. This number must be set so that the entire training occurs in less than 3s. */
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C136_OFFSET 0x00000000
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C136_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C136_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C136_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_ITER_COUNT_C72 */
/* DESCRIPTION: */
/*   Iteration count, for technologies using clause 72/92 negotiation. Internal training block will perform the individual coefficient update/ link evaluation routine 1+this number of times, then indicate RX ready. Setting this value to 0 will disable the individual coefficient update /link evaluation of the training. This number must be set so that the entire training occurs in less than 500ms. */
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C72_OFFSET 0x00000010
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C72_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C72_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C72_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG4_LT_TRAIN_ITER_COUNT_C72_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG5 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG5_ADDR 0x02800088
#define ETH_LT_TIMER_REG5_SIZE 32

/* FIELD: LT_MAX_WAIT_C136B */
/* DESCRIPTION: */
/*   Max wait timer value. Sets the limit for how long the link training procedure is allowed to operate, in ms. Must be set to 1 less than desired value. Applicable only for technologies using clause 162 training. Legal values are 12s +/- 2% */
#define ETH_LT_TIMER_REG5_LT_MAX_WAIT_C136B_OFFSET 0x00000000
#define ETH_LT_TIMER_REG5_LT_MAX_WAIT_C136B_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG5_LT_MAX_WAIT_C136B_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG5_LT_MAX_WAIT_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG5_LT_MAX_WAIT_C136B_RESET_VALUE 0x00000000

/* FIELD: LT_READY_TIMER_C136B */
/* DESCRIPTION: */
/*   Max ready timer value, in number of training frames. Sets the number of extra training frames that are sent in the LINK_READY state prior to entering SEND_DATA. Must be set to 1 less than the desired value. Applicable only for technologies using Clause 162 training. Legal values are 40 to 200 frames. */
#define ETH_LT_TIMER_REG5_LT_READY_TIMER_C136B_OFFSET 0x00000010
#define ETH_LT_TIMER_REG5_LT_READY_TIMER_C136B_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG5_LT_READY_TIMER_C136B_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG5_LT_READY_TIMER_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG5_LT_READY_TIMER_C136B_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TIMER_REG6 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training timer settings. */
/* ------------------------------------- */
#define ETH_LT_TIMER_REG6_ADDR 0x0280008C
#define ETH_LT_TIMER_REG6_SIZE 32

/* FIELD: LT_TRAIN_ITER_COUNT_C136B */
/* DESCRIPTION: */
/*   Iteration count, for technologies using clause 162 negotiation. Internal training block will perform the individual coefficient update/ link evaluation routine 1+this number of times, then indicate RX ready. Setting this value to 0 will disable the individual coefficient update /link evaluation portion of the training. This number must be set so that the entire training occurs in less than 12s. */
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_COUNT_C136B_OFFSET 0x00000000
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_COUNT_C136B_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_COUNT_C136B_MASK 0x0000FFFF
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_COUNT_C136B_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_COUNT_C136B_RESET_VALUE 0x00000000

/* FIELD: LT_TRAIN_ITER_INIT_C136 */
/* DESCRIPTION: */
/*   Unused */
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_INIT_C136_OFFSET 0x00000010
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_INIT_C136_BITWIDTH 0x00000010
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_INIT_C136_MASK 0xFFFF0000
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_INIT_C136_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TIMER_REG6_LT_TRAIN_ITER_INIT_C136_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_C162_PRESET1 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 162) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_C162_PRESET1_ADDR 0x02800090
#define ETH_LT_TXCOEFF_C162_PRESET1_SIZE 32

/* FIELD: LT_CP1_C162_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (1) preset1 value. PMA TX coefficient (1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP1_C162_PRESET1_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP1_C162_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP1_C162_PRESET1_MASK 0x0000003F
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP1_C162_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP1_C162_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_C162_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset1 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP0_C162_PRESET1_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP0_C162_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP0_C162_PRESET1_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP0_C162_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CP0_C162_PRESET1_RESET_VALUE 0x0000003C

/* FIELD: LT_CM1_C162_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset1 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM1_C162_PRESET1_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM1_C162_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM1_C162_PRESET1_MASK 0x003F0000
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM1_C162_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM1_C162_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CM2_C162_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset1 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM2_C162_PRESET1_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM2_C162_PRESET1_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM2_C162_PRESET1_MASK 0x07000000
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM2_C162_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM2_C162_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_C162_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset1 value. PMA TX coefficient (-3) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM3_C162_PRESET1_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM3_C162_PRESET1_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM3_C162_PRESET1_MASK 0x38000000
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM3_C162_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET1_LT_CM3_C162_PRESET1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_C162_PRESET2 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 162) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_C162_PRESET2_ADDR 0x02800094
#define ETH_LT_TXCOEFF_C162_PRESET2_SIZE 32

/* FIELD: LT_CP1_C162_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (1) preset2 value. PMA TX coefficient (1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP1_C162_PRESET2_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP1_C162_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP1_C162_PRESET2_MASK 0x0000003F
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP1_C162_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP1_C162_PRESET2_RESET_VALUE 0x00000006

/* FIELD: LT_CP0_C162_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset2 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP0_C162_PRESET2_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP0_C162_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP0_C162_PRESET2_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP0_C162_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CP0_C162_PRESET2_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_C162_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset2 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM1_C162_PRESET2_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM1_C162_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM1_C162_PRESET2_MASK 0x003F0000
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM1_C162_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM1_C162_PRESET2_RESET_VALUE 0x00000009

/* FIELD: LT_CM2_C162_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset2 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM2_C162_PRESET2_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM2_C162_PRESET2_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM2_C162_PRESET2_MASK 0x07000000
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM2_C162_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM2_C162_PRESET2_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_C162_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset2 value. PMA TX coefficient (-3) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM3_C162_PRESET2_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM3_C162_PRESET2_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM3_C162_PRESET2_MASK 0x38000000
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM3_C162_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET2_LT_CM3_C162_PRESET2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_C162_PRESET3 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 162) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_C162_PRESET3_ADDR 0x02800098
#define ETH_LT_TXCOEFF_C162_PRESET3_SIZE 32

/* FIELD: LT_CP1_C162_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (1) preset3 value. PMA TX coefficient (1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP1_C162_PRESET3_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP1_C162_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP1_C162_PRESET3_MASK 0x0000003F
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP1_C162_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP1_C162_PRESET3_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_C162_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset3 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP0_C162_PRESET3_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP0_C162_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP0_C162_PRESET3_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP0_C162_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CP0_C162_PRESET3_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_C162_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset3 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM1_C162_PRESET3_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM1_C162_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM1_C162_PRESET3_MASK 0x003F0000
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM1_C162_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM1_C162_PRESET3_RESET_VALUE 0x0000000F

/* FIELD: LT_CM2_C162_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset3 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM2_C162_PRESET3_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM2_C162_PRESET3_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM2_C162_PRESET3_MASK 0x07000000
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM2_C162_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM2_C162_PRESET3_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_C162_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset3 value. PMA TX coefficient (-3) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM3_C162_PRESET3_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM3_C162_PRESET3_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM3_C162_PRESET3_MASK 0x38000000
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM3_C162_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET3_LT_CM3_C162_PRESET3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_C162_PRESET4 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 162) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_C162_PRESET4_ADDR 0x0280009C
#define ETH_LT_TXCOEFF_C162_PRESET4_SIZE 32

/* FIELD: LT_CP1_C162_PRESET4 */
/* DESCRIPTION: */
/*   Link training coefficient (1) preset4 value. PMA TX coefficient (1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset4 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP1_C162_PRESET4_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP1_C162_PRESET4_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP1_C162_PRESET4_MASK 0x0000003F
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP1_C162_PRESET4_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP1_C162_PRESET4_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_C162_PRESET4 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset4 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset4 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP0_C162_PRESET4_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP0_C162_PRESET4_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP0_C162_PRESET4_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP0_C162_PRESET4_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CP0_C162_PRESET4_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_C162_PRESET4 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset4 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset4 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM1_C162_PRESET4_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM1_C162_PRESET4_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM1_C162_PRESET4_MASK 0x003F0000
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM1_C162_PRESET4_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM1_C162_PRESET4_RESET_VALUE 0x0000000F

/* FIELD: LT_CM2_C162_PRESET4 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset4 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset4 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM2_C162_PRESET4_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM2_C162_PRESET4_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM2_C162_PRESET4_MASK 0x07000000
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM2_C162_PRESET4_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM2_C162_PRESET4_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_C162_PRESET4 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset4 value. PMA TX coefficient (-3) (via octl_pma_tx_fir) will be set to this value when link partner requests preset4 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM3_C162_PRESET4_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM3_C162_PRESET4_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM3_C162_PRESET4_MASK 0x38000000
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM3_C162_PRESET4_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET4_LT_CM3_C162_PRESET4_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_C162_PRESET5 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 162) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_C162_PRESET5_ADDR 0x028000A0
#define ETH_LT_TXCOEFF_C162_PRESET5_SIZE 32

/* FIELD: LT_CP1_C162_PRESET5 */
/* DESCRIPTION: */
/*   Link training coefficient (1) preset5 value. PMA TX coefficient (1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset5 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP1_C162_PRESET5_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP1_C162_PRESET5_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP1_C162_PRESET5_MASK 0x0000003F
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP1_C162_PRESET5_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP1_C162_PRESET5_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_C162_PRESET5 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset5 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset5 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP0_C162_PRESET5_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP0_C162_PRESET5_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP0_C162_PRESET5_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP0_C162_PRESET5_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CP0_C162_PRESET5_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_C162_PRESET5 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset5 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset5 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM1_C162_PRESET5_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM1_C162_PRESET5_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM1_C162_PRESET5_MASK 0x003F0000
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM1_C162_PRESET5_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM1_C162_PRESET5_RESET_VALUE 0x0000000F

/* FIELD: LT_CM2_C162_PRESET5 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset5 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset5 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM2_C162_PRESET5_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM2_C162_PRESET5_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM2_C162_PRESET5_MASK 0x07000000
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM2_C162_PRESET5_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM2_C162_PRESET5_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_C162_PRESET5 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset5 value. PMA TX coefficient (-3) (via octl_pma_tx_fir) will be set to this value when link partner requests preset5 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 162 training. */
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM3_C162_PRESET5_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM3_C162_PRESET5_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM3_C162_PRESET5_MASK 0x38000000
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM3_C162_PRESET5_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_C162_PRESET5_LT_CM3_C162_PRESET5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_INC_POL */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training coefficient increment/decrement values. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_INC_POL_ADDR 0x028000A4
#define ETH_LT_TXCOEFF_INC_POL_SIZE 32

/* FIELD: LT_CP1_INC */
/* DESCRIPTION: */
/*   Link training coefficient (+1) increment value. PMA TX coefficient (+1) (via octl_pma_tx_fir) will be increased by this value when link partner requests this coefficient be increased via the appropriate field(s) in the training frame. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_INC_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_INC_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_INC_MASK 0x0000003F
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_INC_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_INC_RESET_VALUE 0x00000001

/* FIELD: LT_CP0_INC */
/* DESCRIPTION: */
/*   Link training coefficient (0) increment value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be increased by this value when link partner requests this coefficient be increased via the appropriate field(s) in the training frame. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_INC_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_INC_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_INC_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_INC_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_INC_RESET_VALUE 0x00000001

/* FIELD: LT_CM3_INC */
/* DESCRIPTION: */
/*   Link training coefficient (-3) increment value. PMA TX coefficient (-3) (via octl_pma_tx_m3fir) will be increased by this value when link partner requests this coefficient be increased via the appropriate field(s) in the training frame. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_INC_OFFSET 0x0000000C
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_INC_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_INC_MASK 0x00007000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_INC_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_INC_RESET_VALUE 0x00000001

/* FIELD: LT_CM1_INC */
/* DESCRIPTION: */
/*   Link training coefficient (-1) increment value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be increased by this value when link partner requests this coefficient be increased via the appropriate field(s) in the training frame. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_INC_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_INC_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_INC_MASK 0x003F0000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_INC_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_INC_RESET_VALUE 0x00000001

/* FIELD: LT_CM2_INC */
/* DESCRIPTION: */
/*   Link training coefficient (-2) increment value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be increased by this value when link partner requests this coefficient be increased via the appropriate field(s) in the training frame. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_INC_OFFSET 0x00000016
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_INC_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_INC_MASK 0x01C00000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_INC_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_INC_RESET_VALUE 0x00000001

/* FIELD: LT_CP1_POL */
/* DESCRIPTION: */
/*   Local TX coefficient (+1) polarity.  */
/*   0 - Normal polarity. Coefficient increase request from link partner will result in local TX coefficient (+1) being increased by eth_lt_cp1_inc. Coefficient decrease request will in it being decremented by eth_lt_cp1_inc. */
/*   1 - Reversed polarity. Coefficient increase request from link partner will result in local TX coefficient (+1) being decremented by eth_lt_cp1_inc. Coefficient decrease request will in it being incremented by eth_lt_cp1_inc. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_POL_OFFSET 0x00000019
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_POL_BITWIDTH 0x00000001
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_POL_MASK 0x02000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_POL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CP1_POL_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_POL */
/* DESCRIPTION: */
/*   Local TX coefficient (0) polarity.  */
/*   0 - Normal polarity. Coefficient increase request from link partner will result in local TX coefficient (0) being increased by eth_lt_cp0_inc. Coefficient decrease request will in it being decremented by eth_lt_cp0_inc. */
/*   1 - Reversed polarity. Coefficient increase request from link partner will result in local TX coefficient (0) being decremented by eth_lt_cp0_inc. Coefficient decrease request will in it being incremented by eth_lt_cp0_inc. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_POL_OFFSET 0x0000001A
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_POL_BITWIDTH 0x00000001
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_POL_MASK 0x04000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_POL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CP0_POL_RESET_VALUE 0x00000000

/* FIELD: LT_CM1_POL */
/* DESCRIPTION: */
/*   Local TX coefficient (-1) polarity.  */
/*   0 - Normal polarity. Coefficient increase request from link partner will result in local TX coefficient (-1) being increased by eth_lt_cm1_inc. Coefficient decrease request will in it being decremented by eth_lt_cm1_inc. */
/*   1 - Reversed polarity. Coefficient increase request from link partner will result in local TX coefficient (-1) being decremented by eth_lt_cm1_inc. Coefficient decrease request will in it being incremented by eth_lt_cm1_inc. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_POL_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_POL_BITWIDTH 0x00000001
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_POL_MASK 0x08000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_POL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM1_POL_RESET_VALUE 0x00000000

/* FIELD: LT_CM2_POL */
/* DESCRIPTION: */
/*   Local TX coefficient (-2) polarity.  */
/*   0 - Normal polarity. Coefficient increase request from link partner will result in local TX coefficient (-2) being increased by eth_lt_cm2_inc. Coefficient decrease request will in it being decremented by eth_lt_cm2_inc. */
/*   1 - Reversed polarity. Coefficient increase request from link partner will result in local TX coefficient (-2) being decremented by eth_lt_cm2_inc. Coefficient decrease request will in it being incremented by eth_lt_cm2_inc. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_POL_OFFSET 0x0000001C
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_POL_BITWIDTH 0x00000001
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_POL_MASK 0x10000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_POL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM2_POL_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_POL */
/* DESCRIPTION: */
/*   Local TX coefficient (-3) polarity.  */
/*   0 - Normal polarity. Coefficient increase request from link partner will result in local TX coefficient (-3) being increased by eth_lt_cm3_inc. Coefficient decrease request will in it being decremented by eth_lt_cm3_inc. */
/*   1 - Reversed polarity. Coefficient increase request from link partner will result in local TX coefficient (-3) being decremented by eth_lt_cm2_inc. Coefficient decrease request will in it being incremented by eth_lt_cm2_inc. */
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_POL_OFFSET 0x0000001D
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_POL_BITWIDTH 0x00000001
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_POL_MASK 0x20000000
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_POL_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INC_POL_LT_CM3_POL_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_INIT */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clauses 72/92) init coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_INIT_ADDR 0x028000A8
#define ETH_LT_TXCOEFF_INIT_SIZE 32

/* FIELD: LT_CP1_INIT */
/* DESCRIPTION: */
/*   Link training coefficient (+1) initialization value. PMA TX coefficient (-1) will be set to this value when link partner asserts the initialization control field in the training frame.  Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_TXCOEFF_INIT_LT_CP1_INIT_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_INIT_LT_CP1_INIT_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INIT_LT_CP1_INIT_MASK 0x0000003F
#define ETH_LT_TXCOEFF_INIT_LT_CP1_INIT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INIT_LT_CP1_INIT_RESET_VALUE 0x00000010

/* FIELD: LT_CP0_INIT */
/* DESCRIPTION: */
/*   Link training coefficient (0) initialization value. PMA TX coefficient (0) (via octl_pma_tx_fir)  will be set to this value when link partner asserts the initialization control field in the training frame.  Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_TXCOEFF_INIT_LT_CP0_INIT_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_INIT_LT_CP0_INIT_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INIT_LT_CP0_INIT_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_INIT_LT_CP0_INIT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INIT_LT_CP0_INIT_RESET_VALUE 0x00000029

/* FIELD: LT_CM1_INIT */
/* DESCRIPTION: */
/*   Link training coefficient (-1) initialization value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner asserts the initialization control field in the training frame. Applicable only for technologies using Clause 72/92 training. */
#define ETH_LT_TXCOEFF_INIT_LT_CM1_INIT_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_INIT_LT_CM1_INIT_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_INIT_LT_CM1_INIT_MASK 0x003F0000
#define ETH_LT_TXCOEFF_INIT_LT_CM1_INIT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_INIT_LT_CM1_INIT_RESET_VALUE 0x00000003

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_MAX_REG1 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training coefficient maximum values. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_MAX_REG1_ADDR 0x028000AC
#define ETH_LT_TXCOEFF_MAX_REG1_SIZE 32

/* FIELD: LT_CP1_MAX */
/* DESCRIPTION: */
/*   Link training coefficient (+1) maximum value. */
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP1_MAX_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP1_MAX_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP1_MAX_MASK 0x0000003F
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP1_MAX_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP1_MAX_RESET_VALUE 0x00000018

/* FIELD: LT_CP0_MAX */
/* DESCRIPTION: */
/*   Link training coefficient (0) maximum value. */
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP0_MAX_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP0_MAX_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP0_MAX_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP0_MAX_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CP0_MAX_RESET_VALUE 0x0000003C

/* FIELD: LT_CM1_MAX */
/* DESCRIPTION: */
/*   Link training coefficient (-1) maximum value. */
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM1_MAX_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM1_MAX_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM1_MAX_MASK 0x003F0000
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM1_MAX_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM1_MAX_RESET_VALUE 0x00000018

/* FIELD: LT_CM2_MAX */
/* DESCRIPTION: */
/*   Link training coefficient (-2) maximum value. */
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM2_MAX_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM2_MAX_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM2_MAX_MASK 0x07000000
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM2_MAX_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM2_MAX_RESET_VALUE 0x00000007

/* FIELD: LT_CM3_MAX */
/* DESCRIPTION: */
/*   Link training coefficient (-3) maximum value. */
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM3_MAX_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM3_MAX_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM3_MAX_MASK 0x38000000
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM3_MAX_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG1_LT_CM3_MAX_RESET_VALUE 0x00000007

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_MAX_REG2 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training coefficient maximum values. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_MAX_REG2_ADDR 0x028000B0
#define ETH_LT_TXCOEFF_MAX_REG2_SIZE 32

/* FIELD: LT_EQLIMIT */
/* DESCRIPTION: */
/*   Clause 136 training EQ limit. Local TX coefficient block will return "EQUALIZATION LIMIT" if the requested coefficient change results in C(+1) + C(0) + C(-1) + C(-2) > this value. */
#define ETH_LT_TXCOEFF_MAX_REG2_LT_EQLIMIT_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_MAX_REG2_LT_EQLIMIT_BITWIDTH 0x00000008
#define ETH_LT_TXCOEFF_MAX_REG2_LT_EQLIMIT_MASK 0x000000FF
#define ETH_LT_TXCOEFF_MAX_REG2_LT_EQLIMIT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MAX_REG2_LT_EQLIMIT_RESET_VALUE 0x0000003C

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_MIN */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training coefficient minimum values. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_MIN_ADDR 0x028000B4
#define ETH_LT_TXCOEFF_MIN_SIZE 32

/* FIELD: LT_CP1_MIN */
/* DESCRIPTION: */
/*   Link training coefficient (+1) minimum value. */
#define ETH_LT_TXCOEFF_MIN_LT_CP1_MIN_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_MIN_LT_CP1_MIN_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MIN_LT_CP1_MIN_MASK 0x0000003F
#define ETH_LT_TXCOEFF_MIN_LT_CP1_MIN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MIN_LT_CP1_MIN_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_MIN */
/* DESCRIPTION: */
/*   Link training coefficient (0) minimum value. */
#define ETH_LT_TXCOEFF_MIN_LT_CP0_MIN_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_MIN_LT_CP0_MIN_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MIN_LT_CP0_MIN_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_MIN_LT_CP0_MIN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MIN_LT_CP0_MIN_RESET_VALUE 0x00000000

/* FIELD: LT_CM1_MIN */
/* DESCRIPTION: */
/*   Link training coefficient (-1) minimum value. */
#define ETH_LT_TXCOEFF_MIN_LT_CM1_MIN_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_MIN_LT_CM1_MIN_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_MIN_LT_CM1_MIN_MASK 0x003F0000
#define ETH_LT_TXCOEFF_MIN_LT_CM1_MIN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MIN_LT_CM1_MIN_RESET_VALUE 0x00000000

/* FIELD: LT_CM2_MIN */
/* DESCRIPTION: */
/*   Link training coefficient (-2) minimum value. */
#define ETH_LT_TXCOEFF_MIN_LT_CM2_MIN_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_MIN_LT_CM2_MIN_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_MIN_LT_CM2_MIN_MASK 0x07000000
#define ETH_LT_TXCOEFF_MIN_LT_CM2_MIN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MIN_LT_CM2_MIN_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_MIN */
/* DESCRIPTION: */
/*   Link training coefficient (-3) minimum value. */
#define ETH_LT_TXCOEFF_MIN_LT_CM3_MIN_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_MIN_LT_CM3_MIN_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_MIN_LT_CM3_MIN_MASK 0x38000000
#define ETH_LT_TXCOEFF_MIN_LT_CM3_MIN_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_MIN_LT_CM3_MIN_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_PRESET1 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 136) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_PRESET1_ADDR 0x028000B8
#define ETH_LT_TXCOEFF_PRESET1_SIZE 32

/* FIELD: LT_CP1_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (+1) preset1 value. PMA TX coefficient (+1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET1_LT_CP1_PRESET1_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_PRESET1_LT_CP1_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET1_LT_CP1_PRESET1_MASK 0x0000003F
#define ETH_LT_TXCOEFF_PRESET1_LT_CP1_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET1_LT_CP1_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset1 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET1_LT_CP0_PRESET1_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_PRESET1_LT_CP0_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET1_LT_CP0_PRESET1_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_PRESET1_LT_CP0_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET1_LT_CP0_PRESET1_RESET_VALUE 0x0000003C

/* FIELD: LT_CM1_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset1 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET1_LT_CM1_PRESET1_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_PRESET1_LT_CM1_PRESET1_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET1_LT_CM1_PRESET1_MASK 0x003F0000
#define ETH_LT_TXCOEFF_PRESET1_LT_CM1_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET1_LT_CM1_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CM2_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset1 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET1_LT_CM2_PRESET1_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_PRESET1_LT_CM2_PRESET1_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET1_LT_CM2_PRESET1_MASK 0x07000000
#define ETH_LT_TXCOEFF_PRESET1_LT_CM2_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET1_LT_CM2_PRESET1_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_PRESET1 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset1 value. PMA TX coefficient (-3) (via octl_pma_tx_m3fir) will be set to this value when link partner requests preset1 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET1_LT_CM3_PRESET1_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_PRESET1_LT_CM3_PRESET1_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET1_LT_CM3_PRESET1_MASK 0x38000000
#define ETH_LT_TXCOEFF_PRESET1_LT_CM3_PRESET1_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET1_LT_CM3_PRESET1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_PRESET2 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 136) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_PRESET2_ADDR 0x028000BC
#define ETH_LT_TXCOEFF_PRESET2_SIZE 32

/* FIELD: LT_CP1_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (+1) preset2 value. PMA TX coefficient (+1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET2_LT_CP1_PRESET2_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_PRESET2_LT_CP1_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET2_LT_CP1_PRESET2_MASK 0x0000003F
#define ETH_LT_TXCOEFF_PRESET2_LT_CP1_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET2_LT_CP1_PRESET2_RESET_VALUE 0x00000006

/* FIELD: LT_CP0_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset2 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET2_LT_CP0_PRESET2_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_PRESET2_LT_CP0_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET2_LT_CP0_PRESET2_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_PRESET2_LT_CP0_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET2_LT_CP0_PRESET2_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset2 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET2_LT_CM1_PRESET2_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_PRESET2_LT_CM1_PRESET2_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET2_LT_CM1_PRESET2_MASK 0x003F0000
#define ETH_LT_TXCOEFF_PRESET2_LT_CM1_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET2_LT_CM1_PRESET2_RESET_VALUE 0x00000009

/* FIELD: LT_CM2_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset2 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET2_LT_CM2_PRESET2_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_PRESET2_LT_CM2_PRESET2_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET2_LT_CM2_PRESET2_MASK 0x07000000
#define ETH_LT_TXCOEFF_PRESET2_LT_CM2_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET2_LT_CM2_PRESET2_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_PRESET2 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset2 value. PMA TX coefficient (-3) (via octl_pma_tx_m3fir) will be set to this value when link partner requests preset2 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET2_LT_CM3_PRESET2_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_PRESET2_LT_CM3_PRESET2_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET2_LT_CM3_PRESET2_MASK 0x38000000
#define ETH_LT_TXCOEFF_PRESET2_LT_CM3_PRESET2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET2_LT_CM3_PRESET2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_LT_TXCOEFF_PRESET3 */
/* DESCRIPTION: */
/*   Configuration register for Ethernet link training (Clause 136) preset coefficient settings. */
/* ------------------------------------- */
#define ETH_LT_TXCOEFF_PRESET3_ADDR 0x028000C0
#define ETH_LT_TXCOEFF_PRESET3_SIZE 32

/* FIELD: LT_CP1_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (+1) preset3 value. PMA TX coefficient (+1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET3_LT_CP1_PRESET3_OFFSET 0x00000000
#define ETH_LT_TXCOEFF_PRESET3_LT_CP1_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET3_LT_CP1_PRESET3_MASK 0x0000003F
#define ETH_LT_TXCOEFF_PRESET3_LT_CP1_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET3_LT_CP1_PRESET3_RESET_VALUE 0x00000000

/* FIELD: LT_CP0_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (0) preset3 value. PMA TX coefficient (0) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET3_LT_CP0_PRESET3_OFFSET 0x00000006
#define ETH_LT_TXCOEFF_PRESET3_LT_CP0_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET3_LT_CP0_PRESET3_MASK 0x00000FC0
#define ETH_LT_TXCOEFF_PRESET3_LT_CP0_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET3_LT_CP0_PRESET3_RESET_VALUE 0x0000002D

/* FIELD: LT_CM1_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-1) preset3 value. PMA TX coefficient (-1) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET3_LT_CM1_PRESET3_OFFSET 0x00000010
#define ETH_LT_TXCOEFF_PRESET3_LT_CM1_PRESET3_BITWIDTH 0x00000006
#define ETH_LT_TXCOEFF_PRESET3_LT_CM1_PRESET3_MASK 0x003F0000
#define ETH_LT_TXCOEFF_PRESET3_LT_CM1_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET3_LT_CM1_PRESET3_RESET_VALUE 0x0000000F

/* FIELD: LT_CM2_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-2) preset3 value. PMA TX coefficient (-2) (via octl_pma_tx_fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET3_LT_CM2_PRESET3_OFFSET 0x00000018
#define ETH_LT_TXCOEFF_PRESET3_LT_CM2_PRESET3_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET3_LT_CM2_PRESET3_MASK 0x07000000
#define ETH_LT_TXCOEFF_PRESET3_LT_CM2_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET3_LT_CM2_PRESET3_RESET_VALUE 0x00000000

/* FIELD: LT_CM3_PRESET3 */
/* DESCRIPTION: */
/*   Link training coefficient (-3) preset3 value. PMA TX coefficient (-3) (via octl_pma_tx_m3fir) will be set to this value when link partner requests preset3 via the initial condition request field in the training frame.  Applicable only for technologies using Clause 136 training. */
#define ETH_LT_TXCOEFF_PRESET3_LT_CM3_PRESET3_OFFSET 0x0000001B
#define ETH_LT_TXCOEFF_PRESET3_LT_CM3_PRESET3_BITWIDTH 0x00000003
#define ETH_LT_TXCOEFF_PRESET3_LT_CM3_PRESET3_MASK 0x38000000
#define ETH_LT_TXCOEFF_PRESET3_LT_CM3_PRESET3_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_LT_TXCOEFF_PRESET3_LT_CM3_PRESET3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_MAP */
/* DESCRIPTION: */
/*   Link training RX to TX mapping control */
/* ------------------------------------- */
#define ETH_MAP_ADDR 0x028000C4
#define ETH_MAP_SIZE 32

/* FIELD: RXSEL_NT */
/* DESCRIPTION: */
/*   Selects which physical RX lane to use with this lanes TX */
/*   Must be enabled with eth_anlt_ctrl[map_en_nt] */
#define ETH_MAP_RXSEL_NT_OFFSET 0x00000000
#define ETH_MAP_RXSEL_NT_BITWIDTH 0x00000003
#define ETH_MAP_RXSEL_NT_MASK 0x00000007
#define ETH_MAP_RXSEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_MAP_RXSEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: FIR */
/* DESCRIPTION: */
/*   Override for the AFE Tx driver FIR settings. Can be used for Tx driver configuration instead of the MSS/SOC interface pins. */
/* ------------------------------------- */
#define FIR_ADDR 0x028000C8
#define FIR_SIZE 32

/* FIELD: VAL_A */
/* DESCRIPTION: */
/*   Override for TX fir tap coefficients */
/*   C(1) [20:16] */
/*   C(0) [15:10] */
/*   C(-1)  [9:6] */
/*   C(-2) [5:3] */
/*   C(-3) [2:0] */
#define FIR_VAL_A_OFFSET 0x00000000
#define FIR_VAL_A_BITWIDTH 0x00000016
#define FIR_VAL_A_MASK 0x003FFFFF
#define FIR_VAL_A_ACCESS JUPITER_CSR_READ_WRITE
#define FIR_VAL_A_RESET_VALUE 0x00000000

/* FIELD: OVR_EN_A */
/* DESCRIPTION: */
/*   AFE signal override enable. 0 - Normal operation. 1 - Override signals enabled */
#define FIR_OVR_EN_A_OFFSET 0x00000016
#define FIR_OVR_EN_A_BITWIDTH 0x00000001
#define FIR_OVR_EN_A_MASK 0x00400000
#define FIR_OVR_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define FIR_OVR_EN_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: LOOPBACK_CNTRL */
/* DESCRIPTION: */
/*   Overrides for the AFE/DBE loopback control signals. */
/* ------------------------------------- */
#define LOOPBACK_CNTRL_ADDR 0x028000CC
#define LOOPBACK_CNTRL_SIZE 32

/* FIELD: TX_BITCK_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   1 - rx_bitck looped back to TX of the same lane. */
/*   0 - normal operation */
#define LOOPBACK_CNTRL_TX_BITCK_LOOPBACK_ENA_NT_OFFSET 0x00000000
#define LOOPBACK_CNTRL_TX_BITCK_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_TX_BITCK_LOOPBACK_ENA_NT_MASK 0x00000001
#define LOOPBACK_CNTRL_TX_BITCK_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_TX_BITCK_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: TX_FES_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   Enables the far-end serial loopback for low speed testing. */
#define LOOPBACK_CNTRL_TX_FES_LOOPBACK_ENA_NT_OFFSET 0x00000001
#define LOOPBACK_CNTRL_TX_FES_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_TX_FES_LOOPBACK_ENA_NT_MASK 0x00000002
#define LOOPBACK_CNTRL_TX_FES_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_TX_FES_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: TX_NES_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   Enables the near-end serial loopback for maximum on-chip test coverage */
#define LOOPBACK_CNTRL_TX_NES_LOOPBACK_ENA_NT_OFFSET 0x00000002
#define LOOPBACK_CNTRL_TX_NES_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_TX_NES_LOOPBACK_ENA_NT_MASK 0x00000004
#define LOOPBACK_CNTRL_TX_NES_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_TX_NES_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_BITCK_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   1 - rx_bitck looped back to TX of the same lane. */
/*   0 - normal operation */
#define LOOPBACK_CNTRL_RX_BITCK_LOOPBACK_ENA_NT_OFFSET 0x00000003
#define LOOPBACK_CNTRL_RX_BITCK_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_RX_BITCK_LOOPBACK_ENA_NT_MASK 0x00000008
#define LOOPBACK_CNTRL_RX_BITCK_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_RX_BITCK_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_FES_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   1 - far-end serial loopback engaged */
/*   0 - normal operation */
#define LOOPBACK_CNTRL_RX_FES_LOOPBACK_ENA_NT_OFFSET 0x00000004
#define LOOPBACK_CNTRL_RX_FES_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_RX_FES_LOOPBACK_ENA_NT_MASK 0x00000010
#define LOOPBACK_CNTRL_RX_FES_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_RX_FES_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: RX_NES_LOOPBACK_ENA_NT */
/* DESCRIPTION: */
/*   1 - near-end serial loopback engaged */
/*   0 - normal operation */
#define LOOPBACK_CNTRL_RX_NES_LOOPBACK_ENA_NT_OFFSET 0x00000005
#define LOOPBACK_CNTRL_RX_NES_LOOPBACK_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_RX_NES_LOOPBACK_ENA_NT_MASK 0x00000020
#define LOOPBACK_CNTRL_RX_NES_LOOPBACK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_RX_NES_LOOPBACK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: ENA_NT */
/* DESCRIPTION: */
/*   Loopback override enable. 0  normal operation, 1  override controls enabled */
#define LOOPBACK_CNTRL_ENA_NT_OFFSET 0x00000006
#define LOOPBACK_CNTRL_ENA_NT_BITWIDTH 0x00000001
#define LOOPBACK_CNTRL_ENA_NT_MASK 0x00000040
#define LOOPBACK_CNTRL_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define LOOPBACK_CNTRL_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: PD_AFE_TX */
/* DESCRIPTION: */
/*   Overrides for the AFE Tx power down signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define PD_AFE_TX_ADDR 0x028000D0
#define PD_AFE_TX_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Register bypass enabled */
/*   0 - Logic drives signals */
/*   1 - Register override used */
#define PD_AFE_TX_BYPASS_ENA_A_OFFSET 0x00000000
#define PD_AFE_TX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define PD_AFE_TX_BYPASS_ENA_A_MASK 0x00000001
#define PD_AFE_TX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: BIAS_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx bias powered down */
#define PD_AFE_TX_BIAS_BA_OFFSET 0x00000001
#define PD_AFE_TX_BIAS_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_BIAS_BA_MASK 0x00000002
#define PD_AFE_TX_BIAS_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_BIAS_BA_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_BA */
/* DESCRIPTION: */
/*   Power down register override for TX Clock IQ/DCD */
/*   0 - Block is power down */
/*   1 - Block is power up */
#define PD_AFE_TX_DCDIQ_BA_OFFSET 0x00000002
#define PD_AFE_TX_DCDIQ_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_DCDIQ_BA_MASK 0x00000004
#define PD_AFE_TX_DCDIQ_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_DCDIQ_BA_RESET_VALUE 0x00000000

/* FIELD: DRIVER_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx driver powered down */
#define PD_AFE_TX_DRIVER_BA_OFFSET 0x00000003
#define PD_AFE_TX_DRIVER_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_DRIVER_BA_MASK 0x00000008
#define PD_AFE_TX_DRIVER_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_DRIVER_BA_RESET_VALUE 0x00000000

/* FIELD: DRIVER_BIAS_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx driver bias powered down */
#define PD_AFE_TX_DRIVER_BIAS_BA_OFFSET 0x00000004
#define PD_AFE_TX_DRIVER_BIAS_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_DRIVER_BIAS_BA_MASK 0x00000010
#define PD_AFE_TX_DRIVER_BIAS_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_DRIVER_BIAS_BA_RESET_VALUE 0x00000001

/* FIELD: DS_DIRECT_SYNTH_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx direct synth powered down */
#define PD_AFE_TX_DS_DIRECT_SYNTH_BA_OFFSET 0x00000005
#define PD_AFE_TX_DS_DIRECT_SYNTH_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_DS_DIRECT_SYNTH_BA_MASK 0x00000020
#define PD_AFE_TX_DS_DIRECT_SYNTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_DS_DIRECT_SYNTH_BA_RESET_VALUE 0x00000000

/* FIELD: HSREFMUX_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx high speed reference mux powered down */
#define PD_AFE_TX_HSREFMUX_BA_OFFSET 0x00000006
#define PD_AFE_TX_HSREFMUX_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_HSREFMUX_BA_MASK 0x00000040
#define PD_AFE_TX_HSREFMUX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_HSREFMUX_BA_RESET_VALUE 0x00000000

/* FIELD: P2S_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx parallel to serial powered down */
#define PD_AFE_TX_P2S_BA_OFFSET 0x00000007
#define PD_AFE_TX_P2S_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_P2S_BA_MASK 0x00000080
#define PD_AFE_TX_P2S_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_P2S_BA_RESET_VALUE 0x00000000

/* FIELD: REG_BITCK_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx bitck regulator powered down */
#define PD_AFE_TX_REG_BITCK_BA_OFFSET 0x00000008
#define PD_AFE_TX_REG_BITCK_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_REG_BITCK_BA_MASK 0x00000100
#define PD_AFE_TX_REG_BITCK_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_REG_BITCK_BA_RESET_VALUE 0x00000000

/* FIELD: REG_HSREF_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx high speed reference regulator powered down */
#define PD_AFE_TX_REG_HSREF_BA_OFFSET 0x00000009
#define PD_AFE_TX_REG_HSREF_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_REG_HSREF_BA_MASK 0x00000200
#define PD_AFE_TX_REG_HSREF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_REG_HSREF_BA_RESET_VALUE 0x00000000

/* FIELD: TERMCAL_BA */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe tx driver termination calibration powered down */
#define PD_AFE_TX_TERMCAL_BA_OFFSET 0x0000000A
#define PD_AFE_TX_TERMCAL_BA_BITWIDTH 0x00000001
#define PD_AFE_TX_TERMCAL_BA_MASK 0x00000400
#define PD_AFE_TX_TERMCAL_BA_ACCESS JUPITER_CSR_READ_WRITE
#define PD_AFE_TX_TERMCAL_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: POWER_CNTRL_TX */
/* DESCRIPTION: */
/*   Overrides for the AFE Tx regulator signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define POWER_CNTRL_TX_ADDR 0x028000D4
#define POWER_CNTRL_TX_SIZE 32

/* FIELD: VREG_BLEED_BITCK_ENA_NT */
/* DESCRIPTION: */
/*   1 - TX Bitck Regulator bleed current is on */
/*   0 - TX Bitck Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_TX_VREG_BLEED_BITCK_ENA_NT_OFFSET 0x00000000
#define POWER_CNTRL_TX_VREG_BLEED_BITCK_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_TX_VREG_BLEED_BITCK_ENA_NT_MASK 0x00000001
#define POWER_CNTRL_TX_VREG_BLEED_BITCK_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_TX_VREG_BLEED_BITCK_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: VREG_BLEED_HSREF_ENA_NT */
/* DESCRIPTION: */
/*   1 - TX Hsref Regulator bleed current is on */
/*   0 - TX Hsref Regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_TX_VREG_BLEED_HSREF_ENA_NT_OFFSET 0x00000001
#define POWER_CNTRL_TX_VREG_BLEED_HSREF_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_TX_VREG_BLEED_HSREF_ENA_NT_MASK 0x00000002
#define POWER_CNTRL_TX_VREG_BLEED_HSREF_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_TX_VREG_BLEED_HSREF_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: DS_DCOREG_BLEED_ENA_NT */
/* DESCRIPTION: */
/*   1 - TX DCO regulator bleed current is on */
/*   0 - TX DCO regulator bleed current is off */
/*   Note: 1->0 transition is controlled within the analog block to keep the current transient within the bandwidth of the regulator opamp.  */
#define POWER_CNTRL_TX_DS_DCOREG_BLEED_ENA_NT_OFFSET 0x00000002
#define POWER_CNTRL_TX_DS_DCOREG_BLEED_ENA_NT_BITWIDTH 0x00000001
#define POWER_CNTRL_TX_DS_DCOREG_BLEED_ENA_NT_MASK 0x00000004
#define POWER_CNTRL_TX_DS_DCOREG_BLEED_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define POWER_CNTRL_TX_DS_DCOREG_BLEED_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RATE_CNTRL_TX */
/* DESCRIPTION: */
/*   Overrides for the AFE Tx postdiv signals. These are controlled by the rate control state machine in normal operation. */
/* ------------------------------------- */
#define RATE_CNTRL_TX_ADDR 0x028000D8
#define RATE_CNTRL_TX_SIZE 32

/* FIELD: POSTDIV_NT */
/* DESCRIPTION: */
/*   TX Post Divider */
/*   111 - Reserved */
/*   110 - RX bit clock loopback, full rate */
/*   101 - HSREF/2 clock used to drive TX (test/debug only) */
/*   100 - TX bitclock/RX bitclock loopback divided by 16 */
/*   011 - TX bitclock/RX bitclock loopback divided by 8 */
/*   010 - TX bitclock/RX bitclock loopback divided by 4 */
/*   001 - TX bitclock/RX bitclock loopback divided by 2 */
/*   000 - TX bitclock divided by 1 */
#define RATE_CNTRL_TX_POSTDIV_NT_OFFSET 0x00000000
#define RATE_CNTRL_TX_POSTDIV_NT_BITWIDTH 0x00000003
#define RATE_CNTRL_TX_POSTDIV_NT_MASK 0x00000007
#define RATE_CNTRL_TX_POSTDIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define RATE_CNTRL_TX_POSTDIV_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: RST_AFE_TX */
/* DESCRIPTION: */
/*   Overrides for the AFE Tx reset signals. These are controlled by the power control state machine in normal operation. */
/* ------------------------------------- */
#define RST_AFE_TX_ADDR 0x028000DC
#define RST_AFE_TX_SIZE 32

/* FIELD: DCDIQ_BA */
/* DESCRIPTION: */
/*   TX bit clock IQ/DCD sensor reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_DCDIQ_BA_OFFSET 0x00000000
#define RST_AFE_TX_DCDIQ_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_DCDIQ_BA_MASK 0x00000001
#define RST_AFE_TX_DCDIQ_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_DCDIQ_BA_RESET_VALUE 0x00000000

/* FIELD: DRIVER_BA */
/* DESCRIPTION: */
/*   TX driver reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_DRIVER_BA_OFFSET 0x00000001
#define RST_AFE_TX_DRIVER_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_DRIVER_BA_MASK 0x00000002
#define RST_AFE_TX_DRIVER_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_DRIVER_BA_RESET_VALUE 0x00000000

/* FIELD: DS_DCO_BA */
/* DESCRIPTION: */
/*   TX direct synthesizer dco reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_DS_DCO_BA_OFFSET 0x00000002
#define RST_AFE_TX_DS_DCO_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_DS_DCO_BA_MASK 0x00000004
#define RST_AFE_TX_DS_DCO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_DS_DCO_BA_RESET_VALUE 0x00000000

/* FIELD: DS_DIRECT_SYNTH_BA */
/* DESCRIPTION: */
/*   TX direct synthesizer reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_DS_DIRECT_SYNTH_BA_OFFSET 0x00000003
#define RST_AFE_TX_DS_DIRECT_SYNTH_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_DS_DIRECT_SYNTH_BA_MASK 0x00000008
#define RST_AFE_TX_DS_DIRECT_SYNTH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_DS_DIRECT_SYNTH_BA_RESET_VALUE 0x00000000

/* FIELD: POSTDIV_BA */
/* DESCRIPTION: */
/*   TX post divider reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_POSTDIV_BA_OFFSET 0x00000004
#define RST_AFE_TX_POSTDIV_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_POSTDIV_BA_MASK 0x00000010
#define RST_AFE_TX_POSTDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_POSTDIV_BA_RESET_VALUE 0x00000000

/* FIELD: P2S_BA */
/* DESCRIPTION: */
/*   Resets the entire P2S block including the circuitry that generates ock_tx_block_local. Must be de-asserted in advance of any lane synchronization activities.  */
#define RST_AFE_TX_P2S_BA_OFFSET 0x00000005
#define RST_AFE_TX_P2S_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_P2S_BA_MASK 0x00000020
#define RST_AFE_TX_P2S_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_P2S_BA_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_BA */
/* DESCRIPTION: */
/*   TX clockgen divider that generates divided synthesizer output.  */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_SYNTH_DIV_BA_OFFSET 0x00000006
#define RST_AFE_TX_SYNTH_DIV_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_SYNTH_DIV_BA_MASK 0x00000040
#define RST_AFE_TX_SYNTH_DIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_SYNTH_DIV_BA_RESET_VALUE 0x00000000

/* FIELD: TXDETECTRX_BA */
/* DESCRIPTION: */
/*   TX txdetectrx reset */
/*   1 - Normal operation */
/*   0 - Reset */
#define RST_AFE_TX_TXDETECTRX_BA_OFFSET 0x00000007
#define RST_AFE_TX_TXDETECTRX_BA_BITWIDTH 0x00000001
#define RST_AFE_TX_TXDETECTRX_BA_MASK 0x00000080
#define RST_AFE_TX_TXDETECTRX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_AFE_TX_TXDETECTRX_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: RST_DBE_TX */
/* DESCRIPTION: */
/*   Overrides for the DBE Tx reset signals. These are controlled by the master control state machine in normal operation. */
/* ------------------------------------- */
#define RST_DBE_TX_ADDR 0x028000E0
#define RST_DBE_TX_SIZE 32

/* FIELD: SYNC_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_SYNC_BA_OFFSET 0x00000000
#define RST_DBE_TX_SYNC_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_SYNC_BA_MASK 0x00000001
#define RST_DBE_TX_SYNC_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_SYNC_BA_RESET_VALUE 0x00000000

/* FIELD: RXDET_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_RXDET_BA_OFFSET 0x00000001
#define RST_DBE_TX_RXDET_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_RXDET_BA_MASK 0x00000002
#define RST_DBE_TX_RXDET_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_RXDET_BA_RESET_VALUE 0x00000000

/* FIELD: DATAPATH_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_DATAPATH_BA_OFFSET 0x00000002
#define RST_DBE_TX_DATAPATH_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_DATAPATH_BA_MASK 0x00000004
#define RST_DBE_TX_DATAPATH_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_DATAPATH_BA_RESET_VALUE 0x00000000

/* FIELD: SSCM_DLPF_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_SSCM_DLPF_BA_OFFSET 0x00000003
#define RST_DBE_TX_SSCM_DLPF_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_SSCM_DLPF_BA_MASK 0x00000008
#define RST_DBE_TX_SSCM_DLPF_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_SSCM_DLPF_BA_RESET_VALUE 0x00000000

/* FIELD: SSCM_FRACDIV_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_SSCM_FRACDIV_BA_OFFSET 0x00000004
#define RST_DBE_TX_SSCM_FRACDIV_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_SSCM_FRACDIV_BA_MASK 0x00000010
#define RST_DBE_TX_SSCM_FRACDIV_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_SSCM_FRACDIV_BA_RESET_VALUE 0x00000000

/* FIELD: PFELB_FIFO_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_PFELB_FIFO_BA_OFFSET 0x00000005
#define RST_DBE_TX_PFELB_FIFO_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_PFELB_FIFO_BA_MASK 0x00000020
#define RST_DBE_TX_PFELB_FIFO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_PFELB_FIFO_BA_RESET_VALUE 0x00000000

/* FIELD: PHASE_FIFO_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_PHASE_FIFO_BA_OFFSET 0x00000006
#define RST_DBE_TX_PHASE_FIFO_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_PHASE_FIFO_BA_MASK 0x00000040
#define RST_DBE_TX_PHASE_FIFO_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_PHASE_FIFO_BA_RESET_VALUE 0x00000000

/* FIELD: PHASE_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_PHASE_ADAPT_BA_OFFSET 0x00000007
#define RST_DBE_TX_PHASE_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_PHASE_ADAPT_BA_MASK 0x00000080
#define RST_DBE_TX_PHASE_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_PHASE_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_VCO_ADAPT_BA_OFFSET 0x00000008
#define RST_DBE_TX_VCO_ADAPT_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_VCO_ADAPT_BA_MASK 0x00000100
#define RST_DBE_TX_VCO_ADAPT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_VCO_ADAPT_BA_RESET_VALUE 0x00000000

/* FIELD: PPM_LOCK_DETECT_BA */
/* DESCRIPTION: */
/*   Reset override for block */
/*   0 - Block in reset */
/*   1 - Block out of reset */
#define RST_DBE_TX_PPM_LOCK_DETECT_BA_OFFSET 0x00000009
#define RST_DBE_TX_PPM_LOCK_DETECT_BA_BITWIDTH 0x00000001
#define RST_DBE_TX_PPM_LOCK_DETECT_BA_MASK 0x00000200
#define RST_DBE_TX_PPM_LOCK_DETECT_BA_ACCESS JUPITER_CSR_READ_WRITE
#define RST_DBE_TX_PPM_LOCK_DETECT_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SEQ_CNTRL_TX */
/* DESCRIPTION: */
/*   TX sequencing control */
/* ------------------------------------- */
#define SEQ_CNTRL_TX_ADDR 0x028000E4
#define SEQ_CNTRL_TX_SIZE 32

/* FIELD: POSTDIV_READY_A */
/* DESCRIPTION: */
/*   Updates to ictl_afe_tx_postdiv_a are latched in on the rising edge of this signal.  */
#define SEQ_CNTRL_TX_POSTDIV_READY_A_OFFSET 0x00000000
#define SEQ_CNTRL_TX_POSTDIV_READY_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_TX_POSTDIV_READY_A_MASK 0x00000001
#define SEQ_CNTRL_TX_POSTDIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TX_POSTDIV_READY_A_RESET_VALUE 0x00000001

/* FIELD: DS_SYNTH_DIV_READY_A */
/* DESCRIPTION: */
/*   TX synthesizer divider ration is latched-in on the rising edge of this signal.  */
#define SEQ_CNTRL_TX_DS_SYNTH_DIV_READY_A_OFFSET 0x00000001
#define SEQ_CNTRL_TX_DS_SYNTH_DIV_READY_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_TX_DS_SYNTH_DIV_READY_A_MASK 0x00000002
#define SEQ_CNTRL_TX_DS_SYNTH_DIV_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TX_DS_SYNTH_DIV_READY_A_RESET_VALUE 0x00000001

/* FIELD: BLOCK_VALID_A */
/* DESCRIPTION: */
/*   Register control for octl_tx_block_valid_a signal */
#define SEQ_CNTRL_TX_BLOCK_VALID_A_OFFSET 0x00000002
#define SEQ_CNTRL_TX_BLOCK_VALID_A_BITWIDTH 0x00000001
#define SEQ_CNTRL_TX_BLOCK_VALID_A_MASK 0x00000004
#define SEQ_CNTRL_TX_BLOCK_VALID_A_ACCESS JUPITER_CSR_READ_WRITE
#define SEQ_CNTRL_TX_BLOCK_VALID_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: SWITCHCLK_DBE_TX */
/* DESCRIPTION: */
/*   Overrides for sequencing controls. */
/* ------------------------------------- */
#define SWITCHCLK_DBE_TX_ADDR 0x028000E8
#define SWITCHCLK_DBE_TX_SIZE 32

/* FIELD: SOC_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - TX SOC clock is selected */
#define SWITCHCLK_DBE_TX_SOC_CLOCK_SEL_NT_OFFSET 0x00000000
#define SWITCHCLK_DBE_TX_SOC_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_TX_SOC_CLOCK_SEL_NT_MASK 0x00000001
#define SWITCHCLK_DBE_TX_SOC_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_SOC_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: BLOCK_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - TX Block clock is selected */
#define SWITCHCLK_DBE_TX_BLOCK_CLOCK_SEL_NT_OFFSET 0x00000001
#define SWITCHCLK_DBE_TX_BLOCK_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_TX_BLOCK_CLOCK_SEL_NT_MASK 0x00000002
#define SWITCHCLK_DBE_TX_BLOCK_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_BLOCK_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: REF_DIV_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - TX Ref Div clock is selected */
#define SWITCHCLK_DBE_TX_REF_DIV_CLOCK_SEL_NT_OFFSET 0x00000002
#define SWITCHCLK_DBE_TX_REF_DIV_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_TX_REF_DIV_CLOCK_SEL_NT_MASK 0x00000004
#define SWITCHCLK_DBE_TX_REF_DIV_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_REF_DIV_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - TX Synth Div clock is selected */
#define SWITCHCLK_DBE_TX_SYNTH_DIV_CLOCK_SEL_NT_OFFSET 0x00000003
#define SWITCHCLK_DBE_TX_SYNTH_DIV_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_TX_SYNTH_DIV_CLOCK_SEL_NT_MASK 0x00000008
#define SWITCHCLK_DBE_TX_SYNTH_DIV_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_SYNTH_DIV_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: PPM_MEAS_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to ppm measure block. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_TX_PPM_MEAS_DIV_NT_OFFSET 0x00000004
#define SWITCHCLK_DBE_TX_PPM_MEAS_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_TX_PPM_MEAS_DIV_NT_MASK 0x00000030
#define SWITCHCLK_DBE_TX_PPM_MEAS_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_PPM_MEAS_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_ADAPT_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to vco adapt measure block. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_TX_VCO_ADAPT_DIV_NT_OFFSET 0x00000006
#define SWITCHCLK_DBE_TX_VCO_ADAPT_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_TX_VCO_ADAPT_DIV_NT_MASK 0x000000C0
#define SWITCHCLK_DBE_TX_VCO_ADAPT_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_VCO_ADAPT_DIV_NT_RESET_VALUE 0x00000000

/* FIELD: SYNTH_DIV_OUT_CLOCK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selector register override */
/*   0 - Hearbeat clock is selected */
/*   1 - TX Synth Div clock is selected */
#define SWITCHCLK_DBE_TX_SYNTH_DIV_OUT_CLOCK_SEL_NT_OFFSET 0x00000008
#define SWITCHCLK_DBE_TX_SYNTH_DIV_OUT_CLOCK_SEL_NT_BITWIDTH 0x00000001
#define SWITCHCLK_DBE_TX_SYNTH_DIV_OUT_CLOCK_SEL_NT_MASK 0x00000100
#define SWITCHCLK_DBE_TX_SYNTH_DIV_OUT_CLOCK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_SYNTH_DIV_OUT_CLOCK_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_DIV_NT */
/* DESCRIPTION: */
/*   Controls division ratio of clock to ock_tx_div clock. 0 - Div1, 1 - Div2, 2 - Div4, 3 - Div8 */
#define SWITCHCLK_DBE_TX_OUT_DIV_NT_OFFSET 0x00000009
#define SWITCHCLK_DBE_TX_OUT_DIV_NT_BITWIDTH 0x00000002
#define SWITCHCLK_DBE_TX_OUT_DIV_NT_MASK 0x00000600
#define SWITCHCLK_DBE_TX_OUT_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define SWITCHCLK_DBE_TX_OUT_DIV_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX */
/* DESCRIPTION: */
/*   Reserved */
/* ------------------------------------- */
#define TX_ADDR 0x028000EC
#define TX_SIZE 32

/* FIELD: SLEW_NT */
/* DESCRIPTION: */
/*   Reserved */
#define TX_SLEW_NT_OFFSET 0x00000000
#define TX_SLEW_NT_BITWIDTH 0x00000002
#define TX_SLEW_NT_MASK 0x00000003
#define TX_SLEW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SLEW_NT_RESET_VALUE 0x00000000

/* FIELD: NES_LOOPBACK_FIR_A */
/* DESCRIPTION: */
/*   Specifies FIR used in nes loopback */
#define TX_NES_LOOPBACK_FIR_A_OFFSET 0x00000002
#define TX_NES_LOOPBACK_FIR_A_BITWIDTH 0x00000008
#define TX_NES_LOOPBACK_FIR_A_MASK 0x000003FC
#define TX_NES_LOOPBACK_FIR_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_NES_LOOPBACK_FIR_A_RESET_VALUE 0x00000000

/* FIELD: SPARE_NT */
/* DESCRIPTION: */
/*   Spare registers */
#define TX_SPARE_NT_OFFSET 0x0000000A
#define TX_SPARE_NT_BITWIDTH 0x00000002
#define TX_SPARE_NT_MASK 0x00000C00
#define TX_SPARE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SPARE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_ATEST */
/* DESCRIPTION: */
/*   Configuration registers for the Rx AFE analog test mux address. */
/* ------------------------------------- */
#define TX_ATEST_ADDR 0x028000F0
#define TX_ATEST_SIZE 32

/* FIELD: ADDR_BIN_NT */
/* DESCRIPTION: */
/*   Address space for the tx atest.  */
/*   00000 - High-Z */
/*   00001 to 11111 valid atest addresses */
#define TX_ATEST_ADDR_BIN_NT_OFFSET 0x00000000
#define TX_ATEST_ADDR_BIN_NT_BITWIDTH 0x00000005
#define TX_ATEST_ADDR_BIN_NT_MASK 0x0000001F
#define TX_ATEST_ADDR_BIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_ATEST_ADDR_BIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_BK_PHASE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Configuration of background duty cycle */
/* ------------------------------------- */
#define TX_BK_PHASE_ADAPT_REG1_ADDR 0x028000F4
#define TX_BK_PHASE_ADAPT_REG1_SIZE 32

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Background enable */
#define TX_BK_PHASE_ADAPT_REG1_EN_A_OFFSET 0x00000000
#define TX_BK_PHASE_ADAPT_REG1_EN_A_BITWIDTH 0x00000001
#define TX_BK_PHASE_ADAPT_REG1_EN_A_MASK 0x00000001
#define TX_BK_PHASE_ADAPT_REG1_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG1_EN_A_RESET_VALUE 0x00000000

/* FIELD: CTRL_NT */
/* DESCRIPTION: */
/*   When background is enabled, controls which duty cycle(s) to run. Bit 0 = d90, bit 1 = d0, bit 2 = iq */
#define TX_BK_PHASE_ADAPT_REG1_CTRL_NT_OFFSET 0x00000001
#define TX_BK_PHASE_ADAPT_REG1_CTRL_NT_BITWIDTH 0x00000003
#define TX_BK_PHASE_ADAPT_REG1_CTRL_NT_MASK 0x0000000E
#define TX_BK_PHASE_ADAPT_REG1_CTRL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG1_CTRL_NT_RESET_VALUE 0x00000007

/* FIELD: LMS_MU_NT */
/* DESCRIPTION: */
/*   Mu value used in background */
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_OFFSET 0x00000008
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_BITWIDTH 0x00000005
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_MASK 0x00001F00
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_NT_RESET_VALUE 0x00000001

/* FIELD: LMS_MU_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in background */
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_OFFSET 0x0000000D
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_BITWIDTH 0x00000001
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_MASK 0x00002000
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG1_LMS_MU_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run in background, per duty cycle */
#define TX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_OFFSET 0x00000010
#define TX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_BITWIDTH 0x00000010
#define TX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_MASK 0xFFFF0000
#define TX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG1_MAX_ITER_NT_RESET_VALUE 0x00000032

/* ------------------------------------- */
/* REG: TX_BK_PHASE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Configuration of background duty cycle */
/* ------------------------------------- */
#define TX_BK_PHASE_ADAPT_REG2_ADDR 0x028000F8
#define TX_BK_PHASE_ADAPT_REG2_SIZE 32

/* FIELD: TIMER_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait between calibration runs. */
#define TX_BK_PHASE_ADAPT_REG2_TIMER_NT_OFFSET 0x00000000
#define TX_BK_PHASE_ADAPT_REG2_TIMER_NT_BITWIDTH 0x00000016
#define TX_BK_PHASE_ADAPT_REG2_TIMER_NT_MASK 0x003FFFFF
#define TX_BK_PHASE_ADAPT_REG2_TIMER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG2_TIMER_NT_RESET_VALUE 0x00000000

/* FIELD: RANGE_NT */
/* DESCRIPTION: */
/*   Determines allowable range during background adaptation */
#define TX_BK_PHASE_ADAPT_REG2_RANGE_NT_OFFSET 0x00000016
#define TX_BK_PHASE_ADAPT_REG2_RANGE_NT_BITWIDTH 0x00000003
#define TX_BK_PHASE_ADAPT_REG2_RANGE_NT_MASK 0x01C00000
#define TX_BK_PHASE_ADAPT_REG2_RANGE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_BK_PHASE_ADAPT_REG2_RANGE_NT_RESET_VALUE 0x00000002

/* ------------------------------------- */
/* REG: TX_CCG */
/* DESCRIPTION: */
/*   Clock gating enable for CSRS */
/* ------------------------------------- */
#define TX_CCG_ADDR 0x028000FC
#define TX_CCG_SIZE 32

/* FIELD: DATAPATH_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_DATAPATH_ENA_A_OFFSET 0x00000000
#define TX_CCG_DATAPATH_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_DATAPATH_ENA_A_MASK 0x00000001
#define TX_CCG_DATAPATH_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_DATAPATH_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PFELB_FIFO_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_PFELB_FIFO_ENA_A_OFFSET 0x00000001
#define TX_CCG_PFELB_FIFO_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_PFELB_FIFO_ENA_A_MASK 0x00000002
#define TX_CCG_PFELB_FIFO_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_PFELB_FIFO_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PHASE_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_PHASE_ADAPT_ENA_A_OFFSET 0x00000002
#define TX_CCG_PHASE_ADAPT_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_PHASE_ADAPT_ENA_A_MASK 0x00000004
#define TX_CCG_PHASE_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_PHASE_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PHASE_FIFO_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_PHASE_FIFO_ENA_A_OFFSET 0x00000003
#define TX_CCG_PHASE_FIFO_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_PHASE_FIFO_ENA_A_MASK 0x00000008
#define TX_CCG_PHASE_FIFO_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_PHASE_FIFO_ENA_A_RESET_VALUE 0x00000001

/* FIELD: PPM_LOCK_DETECT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_PPM_LOCK_DETECT_ENA_A_OFFSET 0x00000004
#define TX_CCG_PPM_LOCK_DETECT_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_PPM_LOCK_DETECT_ENA_A_MASK 0x00000010
#define TX_CCG_PPM_LOCK_DETECT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_PPM_LOCK_DETECT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: RXDET_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_RXDET_ENA_A_OFFSET 0x00000005
#define TX_CCG_RXDET_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_RXDET_ENA_A_MASK 0x00000020
#define TX_CCG_RXDET_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_RXDET_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SSCM_DLPF_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_SSCM_DLPF_ENA_A_OFFSET 0x00000006
#define TX_CCG_SSCM_DLPF_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_SSCM_DLPF_ENA_A_MASK 0x00000040
#define TX_CCG_SSCM_DLPF_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_SSCM_DLPF_ENA_A_RESET_VALUE 0x00000001

/* FIELD: SSCM_FRACDIV_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_SSCM_FRACDIV_ENA_A_OFFSET 0x00000007
#define TX_CCG_SSCM_FRACDIV_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_SSCM_FRACDIV_ENA_A_MASK 0x00000080
#define TX_CCG_SSCM_FRACDIV_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_SSCM_FRACDIV_ENA_A_RESET_VALUE 0x00000001

/* FIELD: VCO_ADAPT_ENA_A */
/* DESCRIPTION: */
/*   Clock gating control. 0 - clock disabled. 1 - clock enabled */
#define TX_CCG_VCO_ADAPT_ENA_A_OFFSET 0x00000008
#define TX_CCG_VCO_ADAPT_ENA_A_BITWIDTH 0x00000001
#define TX_CCG_VCO_ADAPT_ENA_A_MASK 0x00000100
#define TX_CCG_VCO_ADAPT_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_VCO_ADAPT_ENA_A_RESET_VALUE 0x00000001

/* FIELD: CSR_CLKGATE_ENA */
/* DESCRIPTION: */
/*   0  gating disabled 1  gating enabled */
#define TX_CCG_CSR_CLKGATE_ENA_OFFSET 0x00000009
#define TX_CCG_CSR_CLKGATE_ENA_BITWIDTH 0x00000001
#define TX_CCG_CSR_CLKGATE_ENA_MASK 0x00000200
#define TX_CCG_CSR_CLKGATE_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CCG_CSR_CLKGATE_ENA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE0 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE0_ADDR 0x02800100
#define TX_CFG_RATE0_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE0_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE0_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE0_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE0_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE0_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE0_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE0_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE0_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE0_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE0_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE0_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE0_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE0_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE0_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE0_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE0_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE0_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE0_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE0_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE0_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE1 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE1_ADDR 0x02800104
#define TX_CFG_RATE1_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE1_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE1_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE1_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE1_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE1_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE1_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE1_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE1_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE1_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE1_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE1_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE1_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE1_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE1_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE1_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE1_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE1_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE1_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE1_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE1_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE2 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE2_ADDR 0x02800108
#define TX_CFG_RATE2_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE2_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE2_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE2_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE2_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE2_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE2_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE2_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE2_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE2_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE2_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE2_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE2_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE2_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE2_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE2_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE2_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE2_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE2_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE2_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE2_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE3 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE3_ADDR 0x0280010C
#define TX_CFG_RATE3_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE3_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE3_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE3_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE3_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE3_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE3_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE3_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE3_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE3_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE3_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE3_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE3_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE3_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE3_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE3_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE3_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE3_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE3_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE3_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE3_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE4 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE4_ADDR 0x02800110
#define TX_CFG_RATE4_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE4_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE4_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE4_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE4_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE4_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE4_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE4_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE4_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE4_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE4_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE4_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE4_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE4_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE4_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE4_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE4_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE4_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE4_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE4_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE4_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE5 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE5_ADDR 0x02800114
#define TX_CFG_RATE5_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE5_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE5_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE5_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE5_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE5_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE5_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE5_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE5_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE5_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE5_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE5_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE5_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE5_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE5_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE5_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE5_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE5_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE5_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE5_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE5_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE6 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE6_ADDR 0x02800118
#define TX_CFG_RATE6_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE6_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE6_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE6_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE6_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE6_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE6_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE6_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE6_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE6_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE6_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE6_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE6_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE6_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE6_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE6_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE6_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE6_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE6_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE6_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE6_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_CFG_RATE7 */
/* DESCRIPTION: */
/*   Generic rate-dependent fields */
/* ------------------------------------- */
#define TX_CFG_RATE7_ADDR 0x0280011C
#define TX_CFG_RATE7_SIZE 32

/* FIELD: TX_CFG_FIELD0_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE7_TX_CFG_FIELD0_NT_OFFSET 0x00000000
#define TX_CFG_RATE7_TX_CFG_FIELD0_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE7_TX_CFG_FIELD0_NT_MASK 0x0000000F
#define TX_CFG_RATE7_TX_CFG_FIELD0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE7_TX_CFG_FIELD0_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD1_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE7_TX_CFG_FIELD1_NT_OFFSET 0x00000004
#define TX_CFG_RATE7_TX_CFG_FIELD1_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE7_TX_CFG_FIELD1_NT_MASK 0x000000F0
#define TX_CFG_RATE7_TX_CFG_FIELD1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE7_TX_CFG_FIELD1_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD2_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE7_TX_CFG_FIELD2_NT_OFFSET 0x00000008
#define TX_CFG_RATE7_TX_CFG_FIELD2_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE7_TX_CFG_FIELD2_NT_MASK 0x00000F00
#define TX_CFG_RATE7_TX_CFG_FIELD2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE7_TX_CFG_FIELD2_NT_RESET_VALUE 0x00000000

/* FIELD: TX_CFG_FIELD3_NT */
/* DESCRIPTION: */
/*   Generic rate-dependent TX register */
#define TX_CFG_RATE7_TX_CFG_FIELD3_NT_OFFSET 0x0000000C
#define TX_CFG_RATE7_TX_CFG_FIELD3_NT_BITWIDTH 0x00000004
#define TX_CFG_RATE7_TX_CFG_FIELD3_NT_MASK 0x0000F000
#define TX_CFG_RATE7_TX_CFG_FIELD3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_CFG_RATE7_TX_CFG_FIELD3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG1 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG1_ADDR 0x02800120
#define TX_DATAPATH_REG1_SIZE 32

/* FIELD: BIST_ENABLE_A */
/* DESCRIPTION: */
/*   Enable the bist */
#define TX_DATAPATH_REG1_BIST_ENABLE_A_OFFSET 0x00000000
#define TX_DATAPATH_REG1_BIST_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_BIST_ENABLE_A_MASK 0x00000001
#define TX_DATAPATH_REG1_BIST_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_BIST_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_SEEDS_A */
/* DESCRIPTION: */
/*   Write 1 to enable loading data into lfsr_seeds, write zero when finished */
#define TX_DATAPATH_REG1_LOAD_SEEDS_A_OFFSET 0x00000001
#define TX_DATAPATH_REG1_LOAD_SEEDS_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_LOAD_SEEDS_A_MASK 0x00000002
#define TX_DATAPATH_REG1_LOAD_SEEDS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_LOAD_SEEDS_A_RESET_VALUE 0x00000000

/* FIELD: FEP_LOOPBACK_ENABLE_A */
/* DESCRIPTION: */
/*   Write 1 to enable Far End Parallel loopback (FEP) */
#define TX_DATAPATH_REG1_FEP_LOOPBACK_ENABLE_A_OFFSET 0x00000002
#define TX_DATAPATH_REG1_FEP_LOOPBACK_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_FEP_LOOPBACK_ENABLE_A_MASK 0x00000004
#define TX_DATAPATH_REG1_FEP_LOOPBACK_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_FEP_LOOPBACK_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: TXDATA_ERROR_ENABLE_A */
/* DESCRIPTION: */
/*   Enable and hold while ireg_tx_datapath_txdata_error_rate_nt = 0 to introduce single tx data error. Enable and hold to produce error rate defined by ireg_tx_datapath_txdata_error_rate_nt */
#define TX_DATAPATH_REG1_TXDATA_ERROR_ENABLE_A_OFFSET 0x00000003
#define TX_DATAPATH_REG1_TXDATA_ERROR_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_TXDATA_ERROR_ENABLE_A_MASK 0x00000008
#define TX_DATAPATH_REG1_TXDATA_ERROR_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_TXDATA_ERROR_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: GRAY_CODE_ENABLE_A */
/* DESCRIPTION: */
/*   Enable gray code */
#define TX_DATAPATH_REG1_GRAY_CODE_ENABLE_A_OFFSET 0x00000004
#define TX_DATAPATH_REG1_GRAY_CODE_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_GRAY_CODE_ENABLE_A_MASK 0x00000010
#define TX_DATAPATH_REG1_GRAY_CODE_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_GRAY_CODE_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: PLUSD_ENABLE_A */
/* DESCRIPTION: */
/*   One plus d enable */
#define TX_DATAPATH_REG1_PLUSD_ENABLE_A_OFFSET 0x00000005
#define TX_DATAPATH_REG1_PLUSD_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_PLUSD_ENABLE_A_MASK 0x00000020
#define TX_DATAPATH_REG1_PLUSD_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_PLUSD_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: PAM4_MODE_A */
/* DESCRIPTION: */
/*   Write 1 to enable PAM4 or 0 to enable NRZ */
#define TX_DATAPATH_REG1_PAM4_MODE_A_OFFSET 0x00000006
#define TX_DATAPATH_REG1_PAM4_MODE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_PAM4_MODE_A_MASK 0x00000040
#define TX_DATAPATH_REG1_PAM4_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_PAM4_MODE_A_RESET_VALUE 0x00000000

/* FIELD: REVERSE_QPRBS13_LSB_MSB_NT */
/* DESCRIPTION: */
/*   Reverse QPRBS13 LSB and MSB */
#define TX_DATAPATH_REG1_REVERSE_QPRBS13_LSB_MSB_NT_OFFSET 0x00000007
#define TX_DATAPATH_REG1_REVERSE_QPRBS13_LSB_MSB_NT_BITWIDTH 0x00000001
#define TX_DATAPATH_REG1_REVERSE_QPRBS13_LSB_MSB_NT_MASK 0x00000080
#define TX_DATAPATH_REG1_REVERSE_QPRBS13_LSB_MSB_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_REVERSE_QPRBS13_LSB_MSB_NT_RESET_VALUE 0x00000000

/* FIELD: GRAY_CODE_MAPPING_NT */
/* DESCRIPTION: */
/*   Gray Code mapping for received values: */
/*     00:[1:0] */
/*     01:[3:2] */
/*     10:[5:4] */
/*     11:[7:6] */
#define TX_DATAPATH_REG1_GRAY_CODE_MAPPING_NT_OFFSET 0x00000008
#define TX_DATAPATH_REG1_GRAY_CODE_MAPPING_NT_BITWIDTH 0x00000008
#define TX_DATAPATH_REG1_GRAY_CODE_MAPPING_NT_MASK 0x0000FF00
#define TX_DATAPATH_REG1_GRAY_CODE_MAPPING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_GRAY_CODE_MAPPING_NT_RESET_VALUE 0x000000B4

/* FIELD: TXDATA_ERROR_RATE_NT */
/* DESCRIPTION: */
/*   The error rate to be introduced into the Tx datapath */
#define TX_DATAPATH_REG1_TXDATA_ERROR_RATE_NT_OFFSET 0x00000010
#define TX_DATAPATH_REG1_TXDATA_ERROR_RATE_NT_BITWIDTH 0x00000010
#define TX_DATAPATH_REG1_TXDATA_ERROR_RATE_NT_MASK 0xFFFF0000
#define TX_DATAPATH_REG1_TXDATA_ERROR_RATE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG1_TXDATA_ERROR_RATE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG10 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG10_ADDR 0x02800124
#define TX_DATAPATH_REG10_SIZE 32

/* FIELD: ERROR_PATTERN_63_32_NT */
/* DESCRIPTION: */
/*   error injection pattern */
#define TX_DATAPATH_REG10_ERROR_PATTERN_63_32_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG10_ERROR_PATTERN_63_32_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG10_ERROR_PATTERN_63_32_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG10_ERROR_PATTERN_63_32_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG10_ERROR_PATTERN_63_32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG11 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG11_ADDR 0x02800128
#define TX_DATAPATH_REG11_SIZE 32

/* FIELD: ERROR_PATTERN_95_64_NT */
/* DESCRIPTION: */
/*   error injection pattern */
#define TX_DATAPATH_REG11_ERROR_PATTERN_95_64_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG11_ERROR_PATTERN_95_64_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG11_ERROR_PATTERN_95_64_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG11_ERROR_PATTERN_95_64_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG11_ERROR_PATTERN_95_64_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG12 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG12_ADDR 0x0280012C
#define TX_DATAPATH_REG12_SIZE 32

/* FIELD: ERROR_PATTERN_127_96_NT */
/* DESCRIPTION: */
/*   error injection pattern */
#define TX_DATAPATH_REG12_ERROR_PATTERN_127_96_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG12_ERROR_PATTERN_127_96_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG12_ERROR_PATTERN_127_96_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG12_ERROR_PATTERN_127_96_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG12_ERROR_PATTERN_127_96_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG2 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG2_ADDR 0x02800130
#define TX_DATAPATH_REG2_SIZE 32

/* FIELD: DATA_WIDTH_NT */
/* DESCRIPTION: */
/*   Data width where available options are: */
/*     WIDTH8=d'0 */
/*     WIDTH10=d'1 */
/*     WIDTH16=d'2 */
/*     WIDTH20=d'3 */
/*     WIDTH32=d'4 */
/*     WIDTH40=d'5 */
/*     WIDTH64=d'6 */
/*     WIDTH128=d'7 */
#define TX_DATAPATH_REG2_DATA_WIDTH_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG2_DATA_WIDTH_NT_BITWIDTH 0x00000004
#define TX_DATAPATH_REG2_DATA_WIDTH_NT_MASK 0x0000000F
#define TX_DATAPATH_REG2_DATA_WIDTH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_DATA_WIDTH_NT_RESET_VALUE 0x00000003

/* FIELD: PATTERN_SEL_NT */
/* DESCRIPTION: */
/*   Pattern select where the applicable patterns are: */
/*     PRBS7=d'0 */
/*     PRBS9=d'1 */
/*     PRBS11=d'2 */
/*     PRBS13=d'3 */
/*     PRBS15=d'4 */
/*     PRBS23=d'5 */
/*     PRBS31=d'6 */
/*     QPRBS13=d'7 */
/*     JP03A=d'8 */
/*     JP03B=d'9 */
/*     TRANS_LINEARITY=d'10 */
/*     UDP=d'11 */
#define TX_DATAPATH_REG2_PATTERN_SEL_NT_OFFSET 0x00000004
#define TX_DATAPATH_REG2_PATTERN_SEL_NT_BITWIDTH 0x00000004
#define TX_DATAPATH_REG2_PATTERN_SEL_NT_MASK 0x000000F0
#define TX_DATAPATH_REG2_PATTERN_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_PATTERN_SEL_NT_RESET_VALUE 0x00000004

/* FIELD: WIDTH_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Enables TX width control override. 0 - Width controls handled by hardware lookup. 1 - Width controls handle via direct registers */
#define TX_DATAPATH_REG2_WIDTH_OVR_ENA_NT_OFFSET 0x00000008
#define TX_DATAPATH_REG2_WIDTH_OVR_ENA_NT_BITWIDTH 0x00000001
#define TX_DATAPATH_REG2_WIDTH_OVR_ENA_NT_MASK 0x00000100
#define TX_DATAPATH_REG2_WIDTH_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_WIDTH_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: INVERT_ENABLE_A */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - invert TX data per bits */
#define TX_DATAPATH_REG2_INVERT_ENABLE_A_OFFSET 0x00000009
#define TX_DATAPATH_REG2_INVERT_ENABLE_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG2_INVERT_ENABLE_A_MASK 0x00000200
#define TX_DATAPATH_REG2_INVERT_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_INVERT_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: PAMCODE_OVR_EN_A */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - plusd_enable / gray_enable registers enabled */
#define TX_DATAPATH_REG2_PAMCODE_OVR_EN_A_OFFSET 0x0000000A
#define TX_DATAPATH_REG2_PAMCODE_OVR_EN_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG2_PAMCODE_OVR_EN_A_MASK 0x00000400
#define TX_DATAPATH_REG2_PAMCODE_OVR_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_PAMCODE_OVR_EN_A_RESET_VALUE 0x00000000

/* FIELD: SOC_DATA_WIDTH_NT */
/* DESCRIPTION: */
/*   Data width where available options are: */
/*     WIDTH8=d'0 */
/*     WIDTH10=d'1 */
/*     WIDTH16=d'2 */
/*     WIDTH20=d'3 */
/*     WIDTH32=d'4 */
/*     WIDTH40=d'5 */
/*     WIDTH64=d'6 */
/*     WIDTH128=d'7 */
#define TX_DATAPATH_REG2_SOC_DATA_WIDTH_NT_OFFSET 0x0000000B
#define TX_DATAPATH_REG2_SOC_DATA_WIDTH_NT_BITWIDTH 0x00000004
#define TX_DATAPATH_REG2_SOC_DATA_WIDTH_NT_MASK 0x00007800
#define TX_DATAPATH_REG2_SOC_DATA_WIDTH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_SOC_DATA_WIDTH_NT_RESET_VALUE 0x00000003

/* FIELD: SWAP_MSB_LSB_A */
/* DESCRIPTION: */
/*   0 - Normal operation  1 - swap msb lsb for PAM4 TX bist data */
#define TX_DATAPATH_REG2_SWAP_MSB_LSB_A_OFFSET 0x0000000F
#define TX_DATAPATH_REG2_SWAP_MSB_LSB_A_BITWIDTH 0x00000001
#define TX_DATAPATH_REG2_SWAP_MSB_LSB_A_MASK 0x00008000
#define TX_DATAPATH_REG2_SWAP_MSB_LSB_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG2_SWAP_MSB_LSB_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG3 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG3_ADDR 0x02800134
#define TX_DATAPATH_REG3_SIZE 32

/* FIELD: LFSR_SEEDS_31_0_NT */
/* DESCRIPTION: */
/*   Write data into LFSR seeds while load_seeds is high */
#define TX_DATAPATH_REG3_LFSR_SEEDS_31_0_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG3_LFSR_SEEDS_31_0_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG3_LFSR_SEEDS_31_0_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG3_LFSR_SEEDS_31_0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG3_LFSR_SEEDS_31_0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG4 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG4_ADDR 0x02800138
#define TX_DATAPATH_REG4_SIZE 32

/* FIELD: LFSR_SEEDS_63_32_NT */
/* DESCRIPTION: */
/*   Write data into LFSR seeds while load_seeds is high */
#define TX_DATAPATH_REG4_LFSR_SEEDS_63_32_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG4_LFSR_SEEDS_63_32_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG4_LFSR_SEEDS_63_32_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG4_LFSR_SEEDS_63_32_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG4_LFSR_SEEDS_63_32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG5 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG5_ADDR 0x0280013C
#define TX_DATAPATH_REG5_SIZE 32

/* FIELD: LFSR_SEEDS_95_64_NT */
/* DESCRIPTION: */
/*   Write data into LFSR seeds while load_seeds is high */
#define TX_DATAPATH_REG5_LFSR_SEEDS_95_64_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG5_LFSR_SEEDS_95_64_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG5_LFSR_SEEDS_95_64_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG5_LFSR_SEEDS_95_64_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG5_LFSR_SEEDS_95_64_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG6 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG6_ADDR 0x02800140
#define TX_DATAPATH_REG6_SIZE 32

/* FIELD: LFSR_SEEDS_127_96_NT */
/* DESCRIPTION: */
/*   Write data into LFSR seeds while load_seeds is high */
#define TX_DATAPATH_REG6_LFSR_SEEDS_127_96_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG6_LFSR_SEEDS_127_96_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG6_LFSR_SEEDS_127_96_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG6_LFSR_SEEDS_127_96_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG6_LFSR_SEEDS_127_96_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG7 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG7_ADDR 0x02800144
#define TX_DATAPATH_REG7_SIZE 32

/* FIELD: UDP_PATTERN_31_0_NT */
/* DESCRIPTION: */
/*   User defined pattern, if using 8/16/32/64/128 bits then write bits [63:0], if using 10/20/40 bits then leave [63:40] as zero and write to bits [39:0] */
#define TX_DATAPATH_REG7_UDP_PATTERN_31_0_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG7_UDP_PATTERN_31_0_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG7_UDP_PATTERN_31_0_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG7_UDP_PATTERN_31_0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG7_UDP_PATTERN_31_0_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG8 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG8_ADDR 0x02800148
#define TX_DATAPATH_REG8_SIZE 32

/* FIELD: UDP_PATTERN_63_32_NT */
/* DESCRIPTION: */
/*   User defined pattern, if using 8/16/32/64/128 bits then write bits [63:0], if using 10/20/40 bits then leave [63:40] as zero and write to bits [39:0] */
#define TX_DATAPATH_REG8_UDP_PATTERN_63_32_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG8_UDP_PATTERN_63_32_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG8_UDP_PATTERN_63_32_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG8_UDP_PATTERN_63_32_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG8_UDP_PATTERN_63_32_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DATAPATH_REG9 */
/* DESCRIPTION: */
/*   Configuration registers for the DBE Tx data path and BIST. */
/* ------------------------------------- */
#define TX_DATAPATH_REG9_ADDR 0x0280014C
#define TX_DATAPATH_REG9_SIZE 32

/* FIELD: ERROR_PATTERN_31_0_NT */
/* DESCRIPTION: */
/*   error injection pattern */
#define TX_DATAPATH_REG9_ERROR_PATTERN_31_0_NT_OFFSET 0x00000000
#define TX_DATAPATH_REG9_ERROR_PATTERN_31_0_NT_BITWIDTH 0x00000020
#define TX_DATAPATH_REG9_ERROR_PATTERN_31_0_NT_MASK 0xFFFFFFFF
#define TX_DATAPATH_REG9_ERROR_PATTERN_31_0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DATAPATH_REG9_ERROR_PATTERN_31_0_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_DCDIQ */
/* DESCRIPTION: */
/*   Configuration registers for the AFE Tx IQ/DCD sensor. */
/* ------------------------------------- */
#define TX_DCDIQ_ADDR 0x02800150
#define TX_DCDIQ_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe tx tiadc dcd/iq sensor bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define TX_DCDIQ_BIAS_ADJ_NT_OFFSET 0x00000000
#define TX_DCDIQ_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define TX_DCDIQ_BIAS_ADJ_NT_MASK 0x00000003
#define TX_DCDIQ_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DCDIQ_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_DETECTRX_RDREG */
/* DESCRIPTION: */
/*   Observability for the TX Rx detect block */
/* ------------------------------------- */
#define TX_DETECTRX_RDREG_ADDR 0x02800154
#define TX_DETECTRX_RDREG_SIZE 32

/* FIELD: ACK_A */
/* DESCRIPTION: */
/*   Register version of ACK signal */
#define TX_DETECTRX_RDREG_ACK_A_OFFSET 0x00000000
#define TX_DETECTRX_RDREG_ACK_A_BITWIDTH 0x00000001
#define TX_DETECTRX_RDREG_ACK_A_MASK 0x00000001
#define TX_DETECTRX_RDREG_ACK_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_DETECTRX_RDREG_ACK_A_RESET_VALUE 0x00000000

/* FIELD: MRESULT_A */
/* DESCRIPTION: */
/*   Observation of AFE input signal */
#define TX_DETECTRX_RDREG_MRESULT_A_OFFSET 0x00000001
#define TX_DETECTRX_RDREG_MRESULT_A_BITWIDTH 0x00000001
#define TX_DETECTRX_RDREG_MRESULT_A_MASK 0x00000002
#define TX_DETECTRX_RDREG_MRESULT_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_DETECTRX_RDREG_MRESULT_A_RESET_VALUE 0x00000000

/* FIELD: PRESULT_A */
/* DESCRIPTION: */
/*   Observation of AFE input signal */
#define TX_DETECTRX_RDREG_PRESULT_A_OFFSET 0x00000002
#define TX_DETECTRX_RDREG_PRESULT_A_BITWIDTH 0x00000001
#define TX_DETECTRX_RDREG_PRESULT_A_MASK 0x00000004
#define TX_DETECTRX_RDREG_PRESULT_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_DETECTRX_RDREG_PRESULT_A_RESET_VALUE 0x00000000

/* FIELD: RESULT_A */
/* DESCRIPTION: */
/*   Register version of result signal */
#define TX_DETECTRX_RDREG_RESULT_A_OFFSET 0x00000003
#define TX_DETECTRX_RDREG_RESULT_A_BITWIDTH 0x00000001
#define TX_DETECTRX_RDREG_RESULT_A_MASK 0x00000008
#define TX_DETECTRX_RDREG_RESULT_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_DETECTRX_RDREG_RESULT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DETECTRX_REG1 */
/* DESCRIPTION: */
/*   Configuration for the TX Rx detect block */
/* ------------------------------------- */
#define TX_DETECTRX_REG1_ADDR 0x02800158
#define TX_DETECTRX_REG1_SIZE 32

/* FIELD: AFE_OVR_EN_A */
/* DESCRIPTION: */
/*   AFE signal override enable. 0 - Normal operation. 1 - Override signals enabled */
#define TX_DETECTRX_REG1_AFE_OVR_EN_A_OFFSET 0x00000000
#define TX_DETECTRX_REG1_AFE_OVR_EN_A_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_EN_A_MASK 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_OVR_EN_A_RESET_VALUE 0x00000000

/* FIELD: AFE_OVR_INJ_A */
/* DESCRIPTION: */
/*   Initiate the common mode pulse for tx detect rx */
#define TX_DETECTRX_REG1_AFE_OVR_INJ_A_OFFSET 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_INJ_A_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_INJ_A_MASK 0x00000002
#define TX_DETECTRX_REG1_AFE_OVR_INJ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_OVR_INJ_A_RESET_VALUE 0x00000000

/* FIELD: AFE_VAL_OVR_HB_SWING_VAL_NT */
/* DESCRIPTION: */
/*   AFE signal override value */
#define TX_DETECTRX_REG1_AFE_VAL_OVR_HB_SWING_VAL_NT_OFFSET 0x00000002
#define TX_DETECTRX_REG1_AFE_VAL_OVR_HB_SWING_VAL_NT_BITWIDTH 0x00000006
#define TX_DETECTRX_REG1_AFE_VAL_OVR_HB_SWING_VAL_NT_MASK 0x000000FC
#define TX_DETECTRX_REG1_AFE_VAL_OVR_HB_SWING_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_VAL_OVR_HB_SWING_VAL_NT_RESET_VALUE 0x00000000

/* FIELD: AFE_OVR_PD_B */
/* DESCRIPTION: */
/*   1 - Normal operation */
/*   0 - afe txdetectrx powered down */
#define TX_DETECTRX_REG1_AFE_OVR_PD_B_OFFSET 0x00000008
#define TX_DETECTRX_REG1_AFE_OVR_PD_B_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_PD_B_MASK 0x00000100
#define TX_DETECTRX_REG1_AFE_OVR_PD_B_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_OVR_PD_B_RESET_VALUE 0x00000000

/* FIELD: AFE_OVR_SAMPLE_A */
/* DESCRIPTION: */
/*   Sample the results of the tx detect rx */
#define TX_DETECTRX_REG1_AFE_OVR_SAMPLE_A_OFFSET 0x00000009
#define TX_DETECTRX_REG1_AFE_OVR_SAMPLE_A_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_AFE_OVR_SAMPLE_A_MASK 0x00000200
#define TX_DETECTRX_REG1_AFE_OVR_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_OVR_SAMPLE_A_RESET_VALUE 0x00000000

/* FIELD: AFE_VAL_OVR_SLICE_VAL_NT */
/* DESCRIPTION: */
/*   NOT_FOUND */
#define TX_DETECTRX_REG1_AFE_VAL_OVR_SLICE_VAL_NT_OFFSET 0x0000000A
#define TX_DETECTRX_REG1_AFE_VAL_OVR_SLICE_VAL_NT_BITWIDTH 0x00000006
#define TX_DETECTRX_REG1_AFE_VAL_OVR_SLICE_VAL_NT_MASK 0x0000FC00
#define TX_DETECTRX_REG1_AFE_VAL_OVR_SLICE_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_VAL_OVR_SLICE_VAL_NT_RESET_VALUE 0x00000000

/* FIELD: AFE_VAL_OVR_EN_NT */
/* DESCRIPTION: */
/*   Hbridge swing adjust */
/*   1111111 - Max */
/*   0000000 - Min */
#define TX_DETECTRX_REG1_AFE_VAL_OVR_EN_NT_OFFSET 0x00000010
#define TX_DETECTRX_REG1_AFE_VAL_OVR_EN_NT_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_AFE_VAL_OVR_EN_NT_MASK 0x00010000
#define TX_DETECTRX_REG1_AFE_VAL_OVR_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_AFE_VAL_OVR_EN_NT_RESET_VALUE 0x00000000

/* FIELD: OVR_EN_A */
/* DESCRIPTION: */
/*   Override enable control. 0 - Normal operation. 1 - Override signals enabled */
#define TX_DETECTRX_REG1_OVR_EN_A_OFFSET 0x00000011
#define TX_DETECTRX_REG1_OVR_EN_A_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_OVR_EN_A_MASK 0x00020000
#define TX_DETECTRX_REG1_OVR_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_OVR_EN_A_RESET_VALUE 0x00000000

/* FIELD: HB_SWING_NORMAL_VAL_NT */
/* DESCRIPTION: */
/*   AFE slice value to use during normal operation */
#define TX_DETECTRX_REG1_HB_SWING_NORMAL_VAL_NT_OFFSET 0x00000012
#define TX_DETECTRX_REG1_HB_SWING_NORMAL_VAL_NT_BITWIDTH 0x00000006
#define TX_DETECTRX_REG1_HB_SWING_NORMAL_VAL_NT_MASK 0x00FC0000
#define TX_DETECTRX_REG1_HB_SWING_NORMAL_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_HB_SWING_NORMAL_VAL_NT_RESET_VALUE 0x0000001B

/* FIELD: OVR_REQ_A */
/* DESCRIPTION: */
/*   Override signal */
#define TX_DETECTRX_REG1_OVR_REQ_A_OFFSET 0x00000018
#define TX_DETECTRX_REG1_OVR_REQ_A_BITWIDTH 0x00000001
#define TX_DETECTRX_REG1_OVR_REQ_A_MASK 0x01000000
#define TX_DETECTRX_REG1_OVR_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_OVR_REQ_A_RESET_VALUE 0x00000000

/* FIELD: HB_SWING_VAL_NT */
/* DESCRIPTION: */
/*   AFE slice value to use during txdetectrx operation */
#define TX_DETECTRX_REG1_HB_SWING_VAL_NT_OFFSET 0x00000019
#define TX_DETECTRX_REG1_HB_SWING_VAL_NT_BITWIDTH 0x00000006
#define TX_DETECTRX_REG1_HB_SWING_VAL_NT_MASK 0x7E000000
#define TX_DETECTRX_REG1_HB_SWING_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG1_HB_SWING_VAL_NT_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: TX_DETECTRX_REG2 */
/* DESCRIPTION: */
/*   Configuration for the TX Rx detect block */
/* ------------------------------------- */
#define TX_DETECTRX_REG2_ADDR 0x0280015C
#define TX_DETECTRX_REG2_SIZE 32

/* FIELD: INJECT_DELAY_NT */
/* DESCRIPTION: */
/*   Number of cycles to hold inject high */
#define TX_DETECTRX_REG2_INJECT_DELAY_NT_OFFSET 0x00000000
#define TX_DETECTRX_REG2_INJECT_DELAY_NT_BITWIDTH 0x0000000F
#define TX_DETECTRX_REG2_INJECT_DELAY_NT_MASK 0x00007FFF
#define TX_DETECTRX_REG2_INJECT_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG2_INJECT_DELAY_NT_RESET_VALUE 0x0000001E

/* FIELD: PDN_DELAY_NT */
/* DESCRIPTION: */
/*   Number of cycles to wait when powering down AFE txdetectrx block */
#define TX_DETECTRX_REG2_PDN_DELAY_NT_OFFSET 0x00000010
#define TX_DETECTRX_REG2_PDN_DELAY_NT_BITWIDTH 0x0000000F
#define TX_DETECTRX_REG2_PDN_DELAY_NT_MASK 0x7FFF0000
#define TX_DETECTRX_REG2_PDN_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG2_PDN_DELAY_NT_RESET_VALUE 0x000061A8

/* ------------------------------------- */
/* REG: TX_DETECTRX_REG3 */
/* DESCRIPTION: */
/*   Configuration for the TX Rx detect block */
/* ------------------------------------- */
#define TX_DETECTRX_REG3_ADDR 0x02800160
#define TX_DETECTRX_REG3_SIZE 32

/* FIELD: PUP_DELAY_NT */
/* DESCRIPTION: */
/*   Number of cycles to wait when powering up AFE txdetectrx block */
#define TX_DETECTRX_REG3_PUP_DELAY_NT_OFFSET 0x00000000
#define TX_DETECTRX_REG3_PUP_DELAY_NT_BITWIDTH 0x0000000F
#define TX_DETECTRX_REG3_PUP_DELAY_NT_MASK 0x00007FFF
#define TX_DETECTRX_REG3_PUP_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG3_PUP_DELAY_NT_RESET_VALUE 0x000061A8

/* FIELD: SAMPLE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of cycles to hold sample high */
#define TX_DETECTRX_REG3_SAMPLE_DELAY_NT_OFFSET 0x00000010
#define TX_DETECTRX_REG3_SAMPLE_DELAY_NT_BITWIDTH 0x0000000F
#define TX_DETECTRX_REG3_SAMPLE_DELAY_NT_MASK 0x7FFF0000
#define TX_DETECTRX_REG3_SAMPLE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG3_SAMPLE_DELAY_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: TX_DETECTRX_REG4 */
/* DESCRIPTION: */
/*   Configuration for the TX Rx detect block */
/* ------------------------------------- */
#define TX_DETECTRX_REG4_ADDR 0x02800164
#define TX_DETECTRX_REG4_SIZE 32

/* FIELD: SLICE_VAL_NT */
/* DESCRIPTION: */
/*   AFE slice value to use during txdetectrx operation */
#define TX_DETECTRX_REG4_SLICE_VAL_NT_OFFSET 0x00000000
#define TX_DETECTRX_REG4_SLICE_VAL_NT_BITWIDTH 0x00000006
#define TX_DETECTRX_REG4_SLICE_VAL_NT_MASK 0x0000003F
#define TX_DETECTRX_REG4_SLICE_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DETECTRX_REG4_SLICE_VAL_NT_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: TX_DRIVER */
/* DESCRIPTION: */
/*   TX Driver configuration */
/* ------------------------------------- */
#define TX_DRIVER_ADDR 0x02800168
#define TX_DRIVER_SIZE 32

/* FIELD: REPLICA_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Overrride enable for the switching activity in the replica bias */
/*   0 - Normal operation */
/*   1 - Direct control of replica bias switching  states */
#define TX_DRIVER_REPLICA_OVR_ENA_NT_OFFSET 0x00000000
#define TX_DRIVER_REPLICA_OVR_ENA_NT_BITWIDTH 0x00000001
#define TX_DRIVER_REPLICA_OVR_ENA_NT_MASK 0x00000001
#define TX_DRIVER_REPLICA_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DRIVER_REPLICA_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: REPLICA_OVR_NT */
/* DESCRIPTION: */
/*   Override values for switching activity in the replica bias.  */
/*   [3] - Freezes clock when set to 1 */
/*   [2] - Enables the PAM replica data override */
/*   [1:0] - Replica PAM override data.  */
#define TX_DRIVER_REPLICA_OVR_NT_OFFSET 0x00000001
#define TX_DRIVER_REPLICA_OVR_NT_BITWIDTH 0x00000004
#define TX_DRIVER_REPLICA_OVR_NT_MASK 0x0000001E
#define TX_DRIVER_REPLICA_OVR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DRIVER_REPLICA_OVR_NT_RESET_VALUE 0x00000000

/* FIELD: BIAS_RSTSHORT_ENA_NT */
/* DESCRIPTION: */
/*   Controls whether the RLM compensation circuit is shorted coming out of reset.  */
/*   1 - Circuit terminals shorted coming out of reset */
/*   0 - Default operation */
#define TX_DRIVER_BIAS_RSTSHORT_ENA_NT_OFFSET 0x00000005
#define TX_DRIVER_BIAS_RSTSHORT_ENA_NT_BITWIDTH 0x00000001
#define TX_DRIVER_BIAS_RSTSHORT_ENA_NT_MASK 0x00000020
#define TX_DRIVER_BIAS_RSTSHORT_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DRIVER_BIAS_RSTSHORT_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: REPLICA_SWING_NT */
/* DESCRIPTION: */
/*   Swing setpoint for replica bias */
/*   11 - Full swing setpoint */
/*   00 - Reduced swing setpoint */
#define TX_DRIVER_REPLICA_SWING_NT_OFFSET 0x00000006
#define TX_DRIVER_REPLICA_SWING_NT_BITWIDTH 0x00000002
#define TX_DRIVER_REPLICA_SWING_NT_MASK 0x000000C0
#define TX_DRIVER_REPLICA_SWING_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DRIVER_REPLICA_SWING_NT_RESET_VALUE 0x00000003

/* ------------------------------------- */
/* REG: TX_DS */
/* DESCRIPTION: */
/*   Configuration and Overrides associated with the TX direct synthesizer. */
/* ------------------------------------- */
#define TX_DS_ADDR 0x0280016C
#define TX_DS_SIZE 32

/* FIELD: INT_BW_NT */
/* DESCRIPTION: */
/*   Bandwidth of the TX Direct Synthesizer Integral Path */
/*   11 - Max */
/*   00 - Min */
#define TX_DS_INT_BW_NT_OFFSET 0x00000000
#define TX_DS_INT_BW_NT_BITWIDTH 0x00000002
#define TX_DS_INT_BW_NT_MASK 0x00000003
#define TX_DS_INT_BW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_INT_BW_NT_RESET_VALUE 0x00000002

/* FIELD: INT_GAIN_NT */
/* DESCRIPTION: */
/*   Analog Gain of the TX Direct Synthesizer Integral Path */
/*   11 - Max */
/*   00 - Min */
#define TX_DS_INT_GAIN_NT_OFFSET 0x00000002
#define TX_DS_INT_GAIN_NT_BITWIDTH 0x00000002
#define TX_DS_INT_GAIN_NT_MASK 0x0000000C
#define TX_DS_INT_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_INT_GAIN_NT_RESET_VALUE 0x00000001

/* FIELD: SYNTH_DIV_A */
/* DESCRIPTION: */
/*   TX synthesizer output divider setting (clock that is output to DBE) */
/*   7p2 representation of the fractional division of bit clock. Ratios between 16 and 127.75 supported. Examples: */
/*   1111111.11 - Div 127.75 */
/*   0001000.10 - Div 16.5 */
/*   0001000.00 - Div 16 */
#define TX_DS_SYNTH_DIV_A_OFFSET 0x00000004
#define TX_DS_SYNTH_DIV_A_BITWIDTH 0x00000009
#define TX_DS_SYNTH_DIV_A_MASK 0x00001FF0
#define TX_DS_SYNTH_DIV_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_SYNTH_DIV_A_RESET_VALUE 0x00000000

/* FIELD: DCOREG_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define TX_DS_DCOREG_SCBYPASS_NT_OFFSET 0x0000000D
#define TX_DS_DCOREG_SCBYPASS_NT_BITWIDTH 0x00000001
#define TX_DS_DCOREG_SCBYPASS_NT_MASK 0x00002000
#define TX_DS_DCOREG_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_DCOREG_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: PI_BYPASS_NT */
/* DESCRIPTION: */
/*   Bypasses the PI in the Direct Synthesizer. */
/*   0 - Normal operation, FracN supported */
/*   1 - Jitter optimized integer mode only.  */
#define TX_DS_PI_BYPASS_NT_OFFSET 0x0000000E
#define TX_DS_PI_BYPASS_NT_BITWIDTH 0x00000001
#define TX_DS_PI_BYPASS_NT_MASK 0x00004000
#define TX_DS_PI_BYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_PI_BYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: FRACN_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Override for the PI accumulator code.  */
/*   0 - Normal operation */
/*   1 - Override enabled. When asserted the PI phase is directly overriden to be the 7 MSB of ictl_afe_tx_ds_fracn[11:0] */
#define TX_DS_FRACN_OVR_ENA_NT_OFFSET 0x0000000F
#define TX_DS_FRACN_OVR_ENA_NT_BITWIDTH 0x00000001
#define TX_DS_FRACN_OVR_ENA_NT_MASK 0x00008000
#define TX_DS_FRACN_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_FRACN_OVR_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: DCOREG_NT */
/* DESCRIPTION: */
/*   TX DCO regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define TX_DS_DCOREG_NT_OFFSET 0x00000010
#define TX_DS_DCOREG_NT_BITWIDTH 0x00000004
#define TX_DS_DCOREG_NT_MASK 0x000F0000
#define TX_DS_DCOREG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_DCOREG_NT_RESET_VALUE 0x0000000E

/* FIELD: PROP_GAIN_NT */
/* DESCRIPTION: */
/*   Proportional gain granularity control */
/*   1 - Enable half steps.  */
/*   0 - Default mode */
#define TX_DS_PROP_GAIN_NT_OFFSET 0x00000014
#define TX_DS_PROP_GAIN_NT_BITWIDTH 0x00000001
#define TX_DS_PROP_GAIN_NT_MASK 0x00100000
#define TX_DS_PROP_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_PROP_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: REFDCD_A */
/* DESCRIPTION: */
/*   SSCM HSREF dcd calibration code */
#define TX_DS_REFDCD_A_OFFSET 0x00000015
#define TX_DS_REFDCD_A_BITWIDTH 0x00000007
#define TX_DS_REFDCD_A_MASK 0x0FE00000
#define TX_DS_REFDCD_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_REFDCD_A_RESET_VALUE 0x00000000

/* FIELD: REFDCD_READY_A */
/* DESCRIPTION: */
/*   SSCM HSREF dcd calibration code updates in AFE on positive edge of this signal */
#define TX_DS_REFDCD_READY_A_OFFSET 0x0000001C
#define TX_DS_REFDCD_READY_A_BITWIDTH 0x00000001
#define TX_DS_REFDCD_READY_A_MASK 0x10000000
#define TX_DS_REFDCD_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_REFDCD_READY_A_RESET_VALUE 0x00000000

/* FIELD: BBDET_DE_ENA_NT */
/* DESCRIPTION: */
/*   1  Enables HSREF dual edge functionality in SSCM. 0  Dual edge mode disabled */
#define TX_DS_BBDET_DE_ENA_NT_OFFSET 0x0000001D
#define TX_DS_BBDET_DE_ENA_NT_BITWIDTH 0x00000001
#define TX_DS_BBDET_DE_ENA_NT_MASK 0x20000000
#define TX_DS_BBDET_DE_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_BBDET_DE_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_DS_DCO */
/* DESCRIPTION: */
/*   Configuration and Overrides associated with the TX direct synthesizer. */
/* ------------------------------------- */
#define TX_DS_DCO_ADDR 0x02800170
#define TX_DS_DCO_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe tx direct synthesizer dco bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define TX_DS_DCO_BIAS_ADJ_NT_OFFSET 0x00000000
#define TX_DS_DCO_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define TX_DS_DCO_BIAS_ADJ_NT_MASK 0x00000003
#define TX_DS_DCO_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_DS_DCO_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_FEP_LOOPBACK_FIFO_TOP */
/* DESCRIPTION: */
/*   Configuration mode for the far end parallel loopback fifo. */
/* ------------------------------------- */
#define TX_FEP_LOOPBACK_FIFO_TOP_ADDR 0x02800174
#define TX_FEP_LOOPBACK_FIFO_TOP_SIZE 32

/* FIELD: MODE_NT */
/* DESCRIPTION: */
/*   mode=0: latency 1.5~2.5 cycles */
/*   mode=1: latency 2.5~3.5 cycles */

#define TX_FEP_LOOPBACK_FIFO_TOP_MODE_NT_OFFSET 0x00000000
#define TX_FEP_LOOPBACK_FIFO_TOP_MODE_NT_BITWIDTH 0x00000001
#define TX_FEP_LOOPBACK_FIFO_TOP_MODE_NT_MASK 0x00000001
#define TX_FEP_LOOPBACK_FIFO_TOP_MODE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FEP_LOOPBACK_FIFO_TOP_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: FIFO_ENABLE_A */
/* DESCRIPTION: */
/*   1: Enable the fifo 0: disable the fifo */
#define TX_FEP_LOOPBACK_FIFO_TOP_FIFO_ENABLE_A_OFFSET 0x00000001
#define TX_FEP_LOOPBACK_FIFO_TOP_FIFO_ENABLE_A_BITWIDTH 0x00000001
#define TX_FEP_LOOPBACK_FIFO_TOP_FIFO_ENABLE_A_MASK 0x00000002
#define TX_FEP_LOOPBACK_FIFO_TOP_FIFO_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FEP_LOOPBACK_FIFO_TOP_FIFO_ENABLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_FIR_RDREG */
/* DESCRIPTION: */
/*   Observability for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_RDREG_ADDR 0x02800178
#define TX_FIR_RDREG_SIZE 32

/* FIELD: AFE_VAL_NT */
/* DESCRIPTION: */
/*   Copy of fir value sent to afe */
#define TX_FIR_RDREG_AFE_VAL_NT_OFFSET 0x00000000
#define TX_FIR_RDREG_AFE_VAL_NT_BITWIDTH 0x00000016
#define TX_FIR_RDREG_AFE_VAL_NT_MASK 0x003FFFFF
#define TX_FIR_RDREG_AFE_VAL_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG_AFE_VAL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_FIR_RDREG2 */
/* DESCRIPTION: */
/*   Observability for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_RDREG2_ADDR 0x0280017C
#define TX_FIR_RDREG2_SIZE 32

/* FIELD: C1_NT */
/* DESCRIPTION: */
/*   Copy of current c(1) value */
#define TX_FIR_RDREG2_C1_NT_OFFSET 0x00000000
#define TX_FIR_RDREG2_C1_NT_BITWIDTH 0x00000006
#define TX_FIR_RDREG2_C1_NT_MASK 0x0000003F
#define TX_FIR_RDREG2_C1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG2_C1_NT_RESET_VALUE 0x00000001

/* FIELD: C0_NT */
/* DESCRIPTION: */
/*   Copy of current c(0) value */
#define TX_FIR_RDREG2_C0_NT_OFFSET 0x00000006
#define TX_FIR_RDREG2_C0_NT_BITWIDTH 0x00000006
#define TX_FIR_RDREG2_C0_NT_MASK 0x00000FC0
#define TX_FIR_RDREG2_C0_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG2_C0_NT_RESET_VALUE 0x00000002

/* FIELD: CM1_NT */
/* DESCRIPTION: */
/*   Copy of current c(-1) value */
#define TX_FIR_RDREG2_CM1_NT_OFFSET 0x0000000D
#define TX_FIR_RDREG2_CM1_NT_BITWIDTH 0x00000006
#define TX_FIR_RDREG2_CM1_NT_MASK 0x0007E000
#define TX_FIR_RDREG2_CM1_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG2_CM1_NT_RESET_VALUE 0x00000003

/* FIELD: CM2_NT */
/* DESCRIPTION: */
/*   Copy of current c(-2) value */
#define TX_FIR_RDREG2_CM2_NT_OFFSET 0x00000013
#define TX_FIR_RDREG2_CM2_NT_BITWIDTH 0x00000003
#define TX_FIR_RDREG2_CM2_NT_MASK 0x00380000
#define TX_FIR_RDREG2_CM2_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG2_CM2_NT_RESET_VALUE 0x00000004

/* FIELD: CM3_NT */
/* DESCRIPTION: */
/*   Copy of current c(-3) value */
#define TX_FIR_RDREG2_CM3_NT_OFFSET 0x00000016
#define TX_FIR_RDREG2_CM3_NT_BITWIDTH 0x00000003
#define TX_FIR_RDREG2_CM3_NT_MASK 0x01C00000
#define TX_FIR_RDREG2_CM3_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_FIR_RDREG2_CM3_NT_RESET_VALUE 0x00000005

/* ------------------------------------- */
/* REG: TX_FIR_REG1 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG1_ADDR 0x02800180
#define TX_FIR_REG1_SIZE 32

/* FIELD: C1_DEP0_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 0 */
#define TX_FIR_REG1_C1_DEP0_NT_OFFSET 0x00000000
#define TX_FIR_REG1_C1_DEP0_NT_BITWIDTH 0x00000006
#define TX_FIR_REG1_C1_DEP0_NT_MASK 0x0000003F
#define TX_FIR_REG1_C1_DEP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG1_C1_DEP0_NT_RESET_VALUE 0x00000000

/* FIELD: C1_DEP1_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 1 */
#define TX_FIR_REG1_C1_DEP1_NT_OFFSET 0x00000006
#define TX_FIR_REG1_C1_DEP1_NT_BITWIDTH 0x00000006
#define TX_FIR_REG1_C1_DEP1_NT_MASK 0x00000FC0
#define TX_FIR_REG1_C1_DEP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG1_C1_DEP1_NT_RESET_VALUE 0x00000001

/* FIELD: C1_DEP2_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 2 */
#define TX_FIR_REG1_C1_DEP2_NT_OFFSET 0x0000000C
#define TX_FIR_REG1_C1_DEP2_NT_BITWIDTH 0x00000006
#define TX_FIR_REG1_C1_DEP2_NT_MASK 0x0003F000
#define TX_FIR_REG1_C1_DEP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG1_C1_DEP2_NT_RESET_VALUE 0x00000002

/* FIELD: C1_DEP3_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 3 */
#define TX_FIR_REG1_C1_DEP3_NT_OFFSET 0x00000012
#define TX_FIR_REG1_C1_DEP3_NT_BITWIDTH 0x00000006
#define TX_FIR_REG1_C1_DEP3_NT_MASK 0x00FC0000
#define TX_FIR_REG1_C1_DEP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG1_C1_DEP3_NT_RESET_VALUE 0x00000003

/* FIELD: C1_DEP4_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 4 */
#define TX_FIR_REG1_C1_DEP4_NT_OFFSET 0x00000018
#define TX_FIR_REG1_C1_DEP4_NT_BITWIDTH 0x00000006
#define TX_FIR_REG1_C1_DEP4_NT_MASK 0x3F000000
#define TX_FIR_REG1_C1_DEP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG1_C1_DEP4_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: TX_FIR_REG10 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG10_ADDR 0x02800184
#define TX_FIR_REG10_SIZE 32

/* FIELD: CM1_DEP5_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 5 */
#define TX_FIR_REG10_CM1_DEP5_NT_OFFSET 0x00000000
#define TX_FIR_REG10_CM1_DEP5_NT_BITWIDTH 0x00000006
#define TX_FIR_REG10_CM1_DEP5_NT_MASK 0x0000003F
#define TX_FIR_REG10_CM1_DEP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG10_CM1_DEP5_NT_RESET_VALUE 0x0000000B

/* FIELD: CM1_DEP6_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 6 */
#define TX_FIR_REG10_CM1_DEP6_NT_OFFSET 0x00000006
#define TX_FIR_REG10_CM1_DEP6_NT_BITWIDTH 0x00000006
#define TX_FIR_REG10_CM1_DEP6_NT_MASK 0x00000FC0
#define TX_FIR_REG10_CM1_DEP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG10_CM1_DEP6_NT_RESET_VALUE 0x00000016

/* FIELD: CM1_DEP7_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 7 */
#define TX_FIR_REG10_CM1_DEP7_NT_OFFSET 0x0000000C
#define TX_FIR_REG10_CM1_DEP7_NT_BITWIDTH 0x00000006
#define TX_FIR_REG10_CM1_DEP7_NT_MASK 0x0003F000
#define TX_FIR_REG10_CM1_DEP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG10_CM1_DEP7_NT_RESET_VALUE 0x00000017

/* FIELD: CM1_DEP8_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 8 */
#define TX_FIR_REG10_CM1_DEP8_NT_OFFSET 0x00000012
#define TX_FIR_REG10_CM1_DEP8_NT_BITWIDTH 0x00000006
#define TX_FIR_REG10_CM1_DEP8_NT_MASK 0x00FC0000
#define TX_FIR_REG10_CM1_DEP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG10_CM1_DEP8_NT_RESET_VALUE 0x00000018

/* FIELD: CM1_DEP9_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 9 */
#define TX_FIR_REG10_CM1_DEP9_NT_OFFSET 0x00000018
#define TX_FIR_REG10_CM1_DEP9_NT_BITWIDTH 0x00000006
#define TX_FIR_REG10_CM1_DEP9_NT_MASK 0x3F000000
#define TX_FIR_REG10_CM1_DEP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG10_CM1_DEP9_NT_RESET_VALUE 0x00000019

/* ------------------------------------- */
/* REG: TX_FIR_REG11 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG11_ADDR 0x02800188
#define TX_FIR_REG11_SIZE 32

/* FIELD: CM1_DEP10_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 10 */
#define TX_FIR_REG11_CM1_DEP10_NT_OFFSET 0x00000000
#define TX_FIR_REG11_CM1_DEP10_NT_BITWIDTH 0x00000006
#define TX_FIR_REG11_CM1_DEP10_NT_MASK 0x0000003F
#define TX_FIR_REG11_CM1_DEP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG11_CM1_DEP10_NT_RESET_VALUE 0x0000001A

/* FIELD: CM1_DEP11_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 11 */
#define TX_FIR_REG11_CM1_DEP11_NT_OFFSET 0x00000006
#define TX_FIR_REG11_CM1_DEP11_NT_BITWIDTH 0x00000006
#define TX_FIR_REG11_CM1_DEP11_NT_MASK 0x00000FC0
#define TX_FIR_REG11_CM1_DEP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG11_CM1_DEP11_NT_RESET_VALUE 0x0000001B

/* FIELD: CM1_DEP12_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 12 */
#define TX_FIR_REG11_CM1_DEP12_NT_OFFSET 0x0000000C
#define TX_FIR_REG11_CM1_DEP12_NT_BITWIDTH 0x00000006
#define TX_FIR_REG11_CM1_DEP12_NT_MASK 0x0003F000
#define TX_FIR_REG11_CM1_DEP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG11_CM1_DEP12_NT_RESET_VALUE 0x00000026

/* FIELD: CM1_DEP13_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 13 */
#define TX_FIR_REG11_CM1_DEP13_NT_OFFSET 0x00000012
#define TX_FIR_REG11_CM1_DEP13_NT_BITWIDTH 0x00000006
#define TX_FIR_REG11_CM1_DEP13_NT_MASK 0x00FC0000
#define TX_FIR_REG11_CM1_DEP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG11_CM1_DEP13_NT_RESET_VALUE 0x00000027

/* FIELD: CM1_DEP14_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 14 */
#define TX_FIR_REG11_CM1_DEP14_NT_OFFSET 0x00000018
#define TX_FIR_REG11_CM1_DEP14_NT_BITWIDTH 0x00000006
#define TX_FIR_REG11_CM1_DEP14_NT_MASK 0x3F000000
#define TX_FIR_REG11_CM1_DEP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG11_CM1_DEP14_NT_RESET_VALUE 0x00000028

/* ------------------------------------- */
/* REG: TX_FIR_REG12 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG12_ADDR 0x0280018C
#define TX_FIR_REG12_SIZE 32

/* FIELD: CM1_DEP15_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 15 */
#define TX_FIR_REG12_CM1_DEP15_NT_OFFSET 0x00000000
#define TX_FIR_REG12_CM1_DEP15_NT_BITWIDTH 0x00000006
#define TX_FIR_REG12_CM1_DEP15_NT_MASK 0x0000003F
#define TX_FIR_REG12_CM1_DEP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG12_CM1_DEP15_NT_RESET_VALUE 0x00000029

/* FIELD: CM2_DEP0_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 0 */
#define TX_FIR_REG12_CM2_DEP0_NT_OFFSET 0x00000006
#define TX_FIR_REG12_CM2_DEP0_NT_BITWIDTH 0x00000006
#define TX_FIR_REG12_CM2_DEP0_NT_MASK 0x00000FC0
#define TX_FIR_REG12_CM2_DEP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG12_CM2_DEP0_NT_RESET_VALUE 0x0000000E

/* FIELD: CM2_DEP1_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 1 */
#define TX_FIR_REG12_CM2_DEP1_NT_OFFSET 0x0000000C
#define TX_FIR_REG12_CM2_DEP1_NT_BITWIDTH 0x00000006
#define TX_FIR_REG12_CM2_DEP1_NT_MASK 0x0003F000
#define TX_FIR_REG12_CM2_DEP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG12_CM2_DEP1_NT_RESET_VALUE 0x0000000F

/* FIELD: CM2_DEP2_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 2 */
#define TX_FIR_REG12_CM2_DEP2_NT_OFFSET 0x00000012
#define TX_FIR_REG12_CM2_DEP2_NT_BITWIDTH 0x00000006
#define TX_FIR_REG12_CM2_DEP2_NT_MASK 0x00FC0000
#define TX_FIR_REG12_CM2_DEP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG12_CM2_DEP2_NT_RESET_VALUE 0x0000001E

/* FIELD: CM2_DEP3_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 3 */
#define TX_FIR_REG12_CM2_DEP3_NT_OFFSET 0x00000018
#define TX_FIR_REG12_CM2_DEP3_NT_BITWIDTH 0x00000006
#define TX_FIR_REG12_CM2_DEP3_NT_MASK 0x3F000000
#define TX_FIR_REG12_CM2_DEP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG12_CM2_DEP3_NT_RESET_VALUE 0x0000001F

/* ------------------------------------- */
/* REG: TX_FIR_REG13 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG13_ADDR 0x02800190
#define TX_FIR_REG13_SIZE 32

/* FIELD: CM2_DEP4_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 4 */
#define TX_FIR_REG13_CM2_DEP4_NT_OFFSET 0x00000000
#define TX_FIR_REG13_CM2_DEP4_NT_BITWIDTH 0x00000006
#define TX_FIR_REG13_CM2_DEP4_NT_MASK 0x0000003F
#define TX_FIR_REG13_CM2_DEP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG13_CM2_DEP4_NT_RESET_VALUE 0x0000002C

/* FIELD: CM2_DEP5_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 5 */
#define TX_FIR_REG13_CM2_DEP5_NT_OFFSET 0x00000006
#define TX_FIR_REG13_CM2_DEP5_NT_BITWIDTH 0x00000006
#define TX_FIR_REG13_CM2_DEP5_NT_MASK 0x00000FC0
#define TX_FIR_REG13_CM2_DEP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG13_CM2_DEP5_NT_RESET_VALUE 0x0000002D

/* FIELD: CM2_DEP6_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 6 */
#define TX_FIR_REG13_CM2_DEP6_NT_OFFSET 0x0000000C
#define TX_FIR_REG13_CM2_DEP6_NT_BITWIDTH 0x00000006
#define TX_FIR_REG13_CM2_DEP6_NT_MASK 0x0003F000
#define TX_FIR_REG13_CM2_DEP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG13_CM2_DEP6_NT_RESET_VALUE 0x0000002E

/* FIELD: CM2_DEP7_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-2 dependency value 7 */
#define TX_FIR_REG13_CM2_DEP7_NT_OFFSET 0x00000012
#define TX_FIR_REG13_CM2_DEP7_NT_BITWIDTH 0x00000006
#define TX_FIR_REG13_CM2_DEP7_NT_MASK 0x00FC0000
#define TX_FIR_REG13_CM2_DEP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG13_CM2_DEP7_NT_RESET_VALUE 0x0000002F

/* ------------------------------------- */
/* REG: TX_FIR_REG14 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG14_ADDR 0x02800194
#define TX_FIR_REG14_SIZE 32

/* FIELD: DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait prior to asserting ack after fir value has been changed. */
#define TX_FIR_REG14_DELAY_NT_OFFSET 0x00000000
#define TX_FIR_REG14_DELAY_NT_BITWIDTH 0x00000004
#define TX_FIR_REG14_DELAY_NT_MASK 0x0000000F
#define TX_FIR_REG14_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG14_DELAY_NT_RESET_VALUE 0x00000006

/* FIELD: RESET_VAL_NT */
/* DESCRIPTION: */
/*   AFE fir reset value. This value will be sent to the AFE immediately after reset */
#define TX_FIR_REG14_RESET_VAL_NT_OFFSET 0x00000004
#define TX_FIR_REG14_RESET_VAL_NT_BITWIDTH 0x00000015
#define TX_FIR_REG14_RESET_VAL_NT_MASK 0x01FFFFF0
#define TX_FIR_REG14_RESET_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG14_RESET_VAL_NT_RESET_VALUE 0x00007800

/* FIELD: M3_RESET_VAL_NT */
/* DESCRIPTION: */
/*   AFE fir reset value. This value will be sent to the AFE immediately after reset */
#define TX_FIR_REG14_M3_RESET_VAL_NT_OFFSET 0x00000019
#define TX_FIR_REG14_M3_RESET_VAL_NT_BITWIDTH 0x00000003
#define TX_FIR_REG14_M3_RESET_VAL_NT_MASK 0x0E000000
#define TX_FIR_REG14_M3_RESET_VAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG14_M3_RESET_VAL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_FIR_REG15 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG15_ADDR 0x02800198
#define TX_FIR_REG15_SIZE 32

/* FIELD: CM1_DEP16_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 16 */
#define TX_FIR_REG15_CM1_DEP16_NT_OFFSET 0x00000000
#define TX_FIR_REG15_CM1_DEP16_NT_BITWIDTH 0x00000006
#define TX_FIR_REG15_CM1_DEP16_NT_MASK 0x0000003F
#define TX_FIR_REG15_CM1_DEP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG15_CM1_DEP16_NT_RESET_VALUE 0x0000002A

/* FIELD: CM1_DEP17_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 17 */
#define TX_FIR_REG15_CM1_DEP17_NT_OFFSET 0x00000006
#define TX_FIR_REG15_CM1_DEP17_NT_BITWIDTH 0x00000006
#define TX_FIR_REG15_CM1_DEP17_NT_MASK 0x00000FC0
#define TX_FIR_REG15_CM1_DEP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG15_CM1_DEP17_NT_RESET_VALUE 0x0000002B

/* FIELD: CM1_DEP18_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 18 */
#define TX_FIR_REG15_CM1_DEP18_NT_OFFSET 0x0000000C
#define TX_FIR_REG15_CM1_DEP18_NT_BITWIDTH 0x00000006
#define TX_FIR_REG15_CM1_DEP18_NT_MASK 0x0003F000
#define TX_FIR_REG15_CM1_DEP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG15_CM1_DEP18_NT_RESET_VALUE 0x00000036

/* FIELD: CM1_DEP19_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 19 */
#define TX_FIR_REG15_CM1_DEP19_NT_OFFSET 0x00000012
#define TX_FIR_REG15_CM1_DEP19_NT_BITWIDTH 0x00000006
#define TX_FIR_REG15_CM1_DEP19_NT_MASK 0x00FC0000
#define TX_FIR_REG15_CM1_DEP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG15_CM1_DEP19_NT_RESET_VALUE 0x00000037

/* FIELD: CM1_DEP20_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 20 */
#define TX_FIR_REG15_CM1_DEP20_NT_OFFSET 0x00000018
#define TX_FIR_REG15_CM1_DEP20_NT_BITWIDTH 0x00000006
#define TX_FIR_REG15_CM1_DEP20_NT_MASK 0x3F000000
#define TX_FIR_REG15_CM1_DEP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG15_CM1_DEP20_NT_RESET_VALUE 0x00000038

/* ------------------------------------- */
/* REG: TX_FIR_REG16 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG16_ADDR 0x0280019C
#define TX_FIR_REG16_SIZE 32

/* FIELD: CM1_DEP21_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 21 */
#define TX_FIR_REG16_CM1_DEP21_NT_OFFSET 0x00000000
#define TX_FIR_REG16_CM1_DEP21_NT_BITWIDTH 0x00000006
#define TX_FIR_REG16_CM1_DEP21_NT_MASK 0x0000003F
#define TX_FIR_REG16_CM1_DEP21_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG16_CM1_DEP21_NT_RESET_VALUE 0x00000039

/* FIELD: CM1_DEP22_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 22 */
#define TX_FIR_REG16_CM1_DEP22_NT_OFFSET 0x00000006
#define TX_FIR_REG16_CM1_DEP22_NT_BITWIDTH 0x00000006
#define TX_FIR_REG16_CM1_DEP22_NT_MASK 0x00000FC0
#define TX_FIR_REG16_CM1_DEP22_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG16_CM1_DEP22_NT_RESET_VALUE 0x0000003A

/* FIELD: CM1_DEP23_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 23 */
#define TX_FIR_REG16_CM1_DEP23_NT_OFFSET 0x0000000C
#define TX_FIR_REG16_CM1_DEP23_NT_BITWIDTH 0x00000006
#define TX_FIR_REG16_CM1_DEP23_NT_MASK 0x0003F000
#define TX_FIR_REG16_CM1_DEP23_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG16_CM1_DEP23_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP24_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 24 */
#define TX_FIR_REG16_CM1_DEP24_NT_OFFSET 0x00000012
#define TX_FIR_REG16_CM1_DEP24_NT_BITWIDTH 0x00000006
#define TX_FIR_REG16_CM1_DEP24_NT_MASK 0x00FC0000
#define TX_FIR_REG16_CM1_DEP24_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG16_CM1_DEP24_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP25_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 25 */
#define TX_FIR_REG16_CM1_DEP25_NT_OFFSET 0x00000018
#define TX_FIR_REG16_CM1_DEP25_NT_BITWIDTH 0x00000006
#define TX_FIR_REG16_CM1_DEP25_NT_MASK 0x3F000000
#define TX_FIR_REG16_CM1_DEP25_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG16_CM1_DEP25_NT_RESET_VALUE 0x0000003B

/* ------------------------------------- */
/* REG: TX_FIR_REG17 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG17_ADDR 0x028001A0
#define TX_FIR_REG17_SIZE 32

/* FIELD: CM1_DEP26_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 26 */
#define TX_FIR_REG17_CM1_DEP26_NT_OFFSET 0x00000000
#define TX_FIR_REG17_CM1_DEP26_NT_BITWIDTH 0x00000006
#define TX_FIR_REG17_CM1_DEP26_NT_MASK 0x0000003F
#define TX_FIR_REG17_CM1_DEP26_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG17_CM1_DEP26_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP27_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 27 */
#define TX_FIR_REG17_CM1_DEP27_NT_OFFSET 0x00000006
#define TX_FIR_REG17_CM1_DEP27_NT_BITWIDTH 0x00000006
#define TX_FIR_REG17_CM1_DEP27_NT_MASK 0x00000FC0
#define TX_FIR_REG17_CM1_DEP27_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG17_CM1_DEP27_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP28_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 28 */
#define TX_FIR_REG17_CM1_DEP28_NT_OFFSET 0x0000000C
#define TX_FIR_REG17_CM1_DEP28_NT_BITWIDTH 0x00000006
#define TX_FIR_REG17_CM1_DEP28_NT_MASK 0x0003F000
#define TX_FIR_REG17_CM1_DEP28_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG17_CM1_DEP28_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP29_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 29 */
#define TX_FIR_REG17_CM1_DEP29_NT_OFFSET 0x00000012
#define TX_FIR_REG17_CM1_DEP29_NT_BITWIDTH 0x00000006
#define TX_FIR_REG17_CM1_DEP29_NT_MASK 0x00FC0000
#define TX_FIR_REG17_CM1_DEP29_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG17_CM1_DEP29_NT_RESET_VALUE 0x0000003B

/* FIELD: CM1_DEP30_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 30 */
#define TX_FIR_REG17_CM1_DEP30_NT_OFFSET 0x00000018
#define TX_FIR_REG17_CM1_DEP30_NT_BITWIDTH 0x00000006
#define TX_FIR_REG17_CM1_DEP30_NT_MASK 0x3F000000
#define TX_FIR_REG17_CM1_DEP30_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG17_CM1_DEP30_NT_RESET_VALUE 0x0000003B

/* ------------------------------------- */
/* REG: TX_FIR_REG18 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG18_ADDR 0x028001A4
#define TX_FIR_REG18_SIZE 32

/* FIELD: CM1_DEP31_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 31 */
#define TX_FIR_REG18_CM1_DEP31_NT_OFFSET 0x00000000
#define TX_FIR_REG18_CM1_DEP31_NT_BITWIDTH 0x00000006
#define TX_FIR_REG18_CM1_DEP31_NT_MASK 0x0000003F
#define TX_FIR_REG18_CM1_DEP31_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG18_CM1_DEP31_NT_RESET_VALUE 0x0000003B

/* ------------------------------------- */
/* REG: TX_FIR_REG2 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG2_ADDR 0x028001A8
#define TX_FIR_REG2_SIZE 32

/* FIELD: C1_DEP5_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 5 */
#define TX_FIR_REG2_C1_DEP5_NT_OFFSET 0x00000000
#define TX_FIR_REG2_C1_DEP5_NT_BITWIDTH 0x00000006
#define TX_FIR_REG2_C1_DEP5_NT_MASK 0x0000003F
#define TX_FIR_REG2_C1_DEP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG2_C1_DEP5_NT_RESET_VALUE 0x00000005

/* FIELD: C1_DEP6_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 6 */
#define TX_FIR_REG2_C1_DEP6_NT_OFFSET 0x00000006
#define TX_FIR_REG2_C1_DEP6_NT_BITWIDTH 0x00000006
#define TX_FIR_REG2_C1_DEP6_NT_MASK 0x00000FC0
#define TX_FIR_REG2_C1_DEP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG2_C1_DEP6_NT_RESET_VALUE 0x00000010

/* FIELD: C1_DEP7_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 7 */
#define TX_FIR_REG2_C1_DEP7_NT_OFFSET 0x0000000C
#define TX_FIR_REG2_C1_DEP7_NT_BITWIDTH 0x00000006
#define TX_FIR_REG2_C1_DEP7_NT_MASK 0x0003F000
#define TX_FIR_REG2_C1_DEP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG2_C1_DEP7_NT_RESET_VALUE 0x00000011

/* FIELD: C1_DEP8_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 8 */
#define TX_FIR_REG2_C1_DEP8_NT_OFFSET 0x00000012
#define TX_FIR_REG2_C1_DEP8_NT_BITWIDTH 0x00000006
#define TX_FIR_REG2_C1_DEP8_NT_MASK 0x00FC0000
#define TX_FIR_REG2_C1_DEP8_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG2_C1_DEP8_NT_RESET_VALUE 0x00000012

/* FIELD: C1_DEP9_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 9 */
#define TX_FIR_REG2_C1_DEP9_NT_OFFSET 0x00000018
#define TX_FIR_REG2_C1_DEP9_NT_BITWIDTH 0x00000006
#define TX_FIR_REG2_C1_DEP9_NT_MASK 0x3F000000
#define TX_FIR_REG2_C1_DEP9_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG2_C1_DEP9_NT_RESET_VALUE 0x00000013

/* ------------------------------------- */
/* REG: TX_FIR_REG3 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG3_ADDR 0x028001AC
#define TX_FIR_REG3_SIZE 32

/* FIELD: C1_DEP10_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 10 */
#define TX_FIR_REG3_C1_DEP10_NT_OFFSET 0x00000000
#define TX_FIR_REG3_C1_DEP10_NT_BITWIDTH 0x00000006
#define TX_FIR_REG3_C1_DEP10_NT_MASK 0x0000003F
#define TX_FIR_REG3_C1_DEP10_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG3_C1_DEP10_NT_RESET_VALUE 0x00000014

/* FIELD: C1_DEP11_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 11 */
#define TX_FIR_REG3_C1_DEP11_NT_OFFSET 0x00000006
#define TX_FIR_REG3_C1_DEP11_NT_BITWIDTH 0x00000006
#define TX_FIR_REG3_C1_DEP11_NT_MASK 0x00000FC0
#define TX_FIR_REG3_C1_DEP11_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG3_C1_DEP11_NT_RESET_VALUE 0x00000015

/* FIELD: C1_DEP12_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 12 */
#define TX_FIR_REG3_C1_DEP12_NT_OFFSET 0x0000000C
#define TX_FIR_REG3_C1_DEP12_NT_BITWIDTH 0x00000006
#define TX_FIR_REG3_C1_DEP12_NT_MASK 0x0003F000
#define TX_FIR_REG3_C1_DEP12_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG3_C1_DEP12_NT_RESET_VALUE 0x00000020

/* FIELD: C1_DEP13_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 13 */
#define TX_FIR_REG3_C1_DEP13_NT_OFFSET 0x00000012
#define TX_FIR_REG3_C1_DEP13_NT_BITWIDTH 0x00000006
#define TX_FIR_REG3_C1_DEP13_NT_MASK 0x00FC0000
#define TX_FIR_REG3_C1_DEP13_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG3_C1_DEP13_NT_RESET_VALUE 0x00000021

/* FIELD: C1_DEP14_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 14 */
#define TX_FIR_REG3_C1_DEP14_NT_OFFSET 0x00000018
#define TX_FIR_REG3_C1_DEP14_NT_BITWIDTH 0x00000006
#define TX_FIR_REG3_C1_DEP14_NT_MASK 0x3F000000
#define TX_FIR_REG3_C1_DEP14_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG3_C1_DEP14_NT_RESET_VALUE 0x00000022

/* ------------------------------------- */
/* REG: TX_FIR_REG4 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG4_ADDR 0x028001B0
#define TX_FIR_REG4_SIZE 32

/* FIELD: C1_DEP15_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 15 */
#define TX_FIR_REG4_C1_DEP15_NT_OFFSET 0x00000000
#define TX_FIR_REG4_C1_DEP15_NT_BITWIDTH 0x00000006
#define TX_FIR_REG4_C1_DEP15_NT_MASK 0x0000003F
#define TX_FIR_REG4_C1_DEP15_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG4_C1_DEP15_NT_RESET_VALUE 0x00000023

/* FIELD: C1_DEP16_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 16 */
#define TX_FIR_REG4_C1_DEP16_NT_OFFSET 0x00000006
#define TX_FIR_REG4_C1_DEP16_NT_BITWIDTH 0x00000006
#define TX_FIR_REG4_C1_DEP16_NT_MASK 0x00000FC0
#define TX_FIR_REG4_C1_DEP16_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG4_C1_DEP16_NT_RESET_VALUE 0x00000024

/* FIELD: C1_DEP17_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 17 */
#define TX_FIR_REG4_C1_DEP17_NT_OFFSET 0x0000000C
#define TX_FIR_REG4_C1_DEP17_NT_BITWIDTH 0x00000006
#define TX_FIR_REG4_C1_DEP17_NT_MASK 0x0003F000
#define TX_FIR_REG4_C1_DEP17_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG4_C1_DEP17_NT_RESET_VALUE 0x00000025

/* FIELD: C1_DEP18_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 18 */
#define TX_FIR_REG4_C1_DEP18_NT_OFFSET 0x00000012
#define TX_FIR_REG4_C1_DEP18_NT_BITWIDTH 0x00000006
#define TX_FIR_REG4_C1_DEP18_NT_MASK 0x00FC0000
#define TX_FIR_REG4_C1_DEP18_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG4_C1_DEP18_NT_RESET_VALUE 0x00000030

/* FIELD: C1_DEP19_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 19 */
#define TX_FIR_REG4_C1_DEP19_NT_OFFSET 0x00000018
#define TX_FIR_REG4_C1_DEP19_NT_BITWIDTH 0x00000006
#define TX_FIR_REG4_C1_DEP19_NT_MASK 0x3F000000
#define TX_FIR_REG4_C1_DEP19_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG4_C1_DEP19_NT_RESET_VALUE 0x00000031

/* ------------------------------------- */
/* REG: TX_FIR_REG5 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG5_ADDR 0x028001B4
#define TX_FIR_REG5_SIZE 32

/* FIELD: C1_DEP20_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 20 */
#define TX_FIR_REG5_C1_DEP20_NT_OFFSET 0x00000000
#define TX_FIR_REG5_C1_DEP20_NT_BITWIDTH 0x00000006
#define TX_FIR_REG5_C1_DEP20_NT_MASK 0x0000003F
#define TX_FIR_REG5_C1_DEP20_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG5_C1_DEP20_NT_RESET_VALUE 0x00000032

/* FIELD: C1_DEP21_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 21 */
#define TX_FIR_REG5_C1_DEP21_NT_OFFSET 0x00000006
#define TX_FIR_REG5_C1_DEP21_NT_BITWIDTH 0x00000006
#define TX_FIR_REG5_C1_DEP21_NT_MASK 0x00000FC0
#define TX_FIR_REG5_C1_DEP21_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG5_C1_DEP21_NT_RESET_VALUE 0x00000033

/* FIELD: C1_DEP22_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 22 */
#define TX_FIR_REG5_C1_DEP22_NT_OFFSET 0x0000000C
#define TX_FIR_REG5_C1_DEP22_NT_BITWIDTH 0x00000006
#define TX_FIR_REG5_C1_DEP22_NT_MASK 0x0003F000
#define TX_FIR_REG5_C1_DEP22_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG5_C1_DEP22_NT_RESET_VALUE 0x00000034

/* FIELD: C1_DEP23_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 23 */
#define TX_FIR_REG5_C1_DEP23_NT_OFFSET 0x00000012
#define TX_FIR_REG5_C1_DEP23_NT_BITWIDTH 0x00000006
#define TX_FIR_REG5_C1_DEP23_NT_MASK 0x00FC0000
#define TX_FIR_REG5_C1_DEP23_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG5_C1_DEP23_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP24_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 24 */
#define TX_FIR_REG5_C1_DEP24_NT_OFFSET 0x00000018
#define TX_FIR_REG5_C1_DEP24_NT_BITWIDTH 0x00000006
#define TX_FIR_REG5_C1_DEP24_NT_MASK 0x3F000000
#define TX_FIR_REG5_C1_DEP24_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG5_C1_DEP24_NT_RESET_VALUE 0x00000035

/* ------------------------------------- */
/* REG: TX_FIR_REG6 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG6_ADDR 0x028001B8
#define TX_FIR_REG6_SIZE 32

/* FIELD: C1_DEP25_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 25 */
#define TX_FIR_REG6_C1_DEP25_NT_OFFSET 0x00000000
#define TX_FIR_REG6_C1_DEP25_NT_BITWIDTH 0x00000006
#define TX_FIR_REG6_C1_DEP25_NT_MASK 0x0000003F
#define TX_FIR_REG6_C1_DEP25_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG6_C1_DEP25_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP26_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 26 */
#define TX_FIR_REG6_C1_DEP26_NT_OFFSET 0x00000006
#define TX_FIR_REG6_C1_DEP26_NT_BITWIDTH 0x00000006
#define TX_FIR_REG6_C1_DEP26_NT_MASK 0x00000FC0
#define TX_FIR_REG6_C1_DEP26_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG6_C1_DEP26_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP27_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 27 */
#define TX_FIR_REG6_C1_DEP27_NT_OFFSET 0x0000000C
#define TX_FIR_REG6_C1_DEP27_NT_BITWIDTH 0x00000006
#define TX_FIR_REG6_C1_DEP27_NT_MASK 0x0003F000
#define TX_FIR_REG6_C1_DEP27_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG6_C1_DEP27_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP28_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 28 */
#define TX_FIR_REG6_C1_DEP28_NT_OFFSET 0x00000012
#define TX_FIR_REG6_C1_DEP28_NT_BITWIDTH 0x00000006
#define TX_FIR_REG6_C1_DEP28_NT_MASK 0x00FC0000
#define TX_FIR_REG6_C1_DEP28_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG6_C1_DEP28_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP29_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 29 */
#define TX_FIR_REG6_C1_DEP29_NT_OFFSET 0x00000018
#define TX_FIR_REG6_C1_DEP29_NT_BITWIDTH 0x00000006
#define TX_FIR_REG6_C1_DEP29_NT_MASK 0x3F000000
#define TX_FIR_REG6_C1_DEP29_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG6_C1_DEP29_NT_RESET_VALUE 0x00000035

/* ------------------------------------- */
/* REG: TX_FIR_REG7 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG7_ADDR 0x028001BC
#define TX_FIR_REG7_SIZE 32

/* FIELD: C1_DEP30_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 30 */
#define TX_FIR_REG7_C1_DEP30_NT_OFFSET 0x00000000
#define TX_FIR_REG7_C1_DEP30_NT_BITWIDTH 0x00000006
#define TX_FIR_REG7_C1_DEP30_NT_MASK 0x0000003F
#define TX_FIR_REG7_C1_DEP30_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG7_C1_DEP30_NT_RESET_VALUE 0x00000035

/* FIELD: C1_DEP31_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C1 dependency value 31 */
#define TX_FIR_REG7_C1_DEP31_NT_OFFSET 0x00000006
#define TX_FIR_REG7_C1_DEP31_NT_BITWIDTH 0x00000006
#define TX_FIR_REG7_C1_DEP31_NT_MASK 0x00000FC0
#define TX_FIR_REG7_C1_DEP31_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG7_C1_DEP31_NT_RESET_VALUE 0x00000035

/* FIELD: CM3_DEP0_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 0 */
#define TX_FIR_REG7_CM3_DEP0_NT_OFFSET 0x0000000C
#define TX_FIR_REG7_CM3_DEP0_NT_BITWIDTH 0x00000006
#define TX_FIR_REG7_CM3_DEP0_NT_MASK 0x0003F000
#define TX_FIR_REG7_CM3_DEP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG7_CM3_DEP0_NT_RESET_VALUE 0x0000000C

/* FIELD: CM3_DEP1_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 1 */
#define TX_FIR_REG7_CM3_DEP1_NT_OFFSET 0x00000012
#define TX_FIR_REG7_CM3_DEP1_NT_BITWIDTH 0x00000006
#define TX_FIR_REG7_CM3_DEP1_NT_MASK 0x00FC0000
#define TX_FIR_REG7_CM3_DEP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG7_CM3_DEP1_NT_RESET_VALUE 0x0000000D

/* FIELD: CM3_DEP2_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 2 */
#define TX_FIR_REG7_CM3_DEP2_NT_OFFSET 0x00000018
#define TX_FIR_REG7_CM3_DEP2_NT_BITWIDTH 0x00000006
#define TX_FIR_REG7_CM3_DEP2_NT_MASK 0x3F000000
#define TX_FIR_REG7_CM3_DEP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG7_CM3_DEP2_NT_RESET_VALUE 0x0000001C

/* ------------------------------------- */
/* REG: TX_FIR_REG8 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG8_ADDR 0x028001C0
#define TX_FIR_REG8_SIZE 32

/* FIELD: CM3_DEP3_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 3 */
#define TX_FIR_REG8_CM3_DEP3_NT_OFFSET 0x00000000
#define TX_FIR_REG8_CM3_DEP3_NT_BITWIDTH 0x00000006
#define TX_FIR_REG8_CM3_DEP3_NT_MASK 0x0000003F
#define TX_FIR_REG8_CM3_DEP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG8_CM3_DEP3_NT_RESET_VALUE 0x0000001D

/* FIELD: CM3_DEP4_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 4 */
#define TX_FIR_REG8_CM3_DEP4_NT_OFFSET 0x00000006
#define TX_FIR_REG8_CM3_DEP4_NT_BITWIDTH 0x00000006
#define TX_FIR_REG8_CM3_DEP4_NT_MASK 0x00000FC0
#define TX_FIR_REG8_CM3_DEP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG8_CM3_DEP4_NT_RESET_VALUE 0x0000003C

/* FIELD: CM3_DEP5_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 5 */
#define TX_FIR_REG8_CM3_DEP5_NT_OFFSET 0x0000000C
#define TX_FIR_REG8_CM3_DEP5_NT_BITWIDTH 0x00000006
#define TX_FIR_REG8_CM3_DEP5_NT_MASK 0x0003F000
#define TX_FIR_REG8_CM3_DEP5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG8_CM3_DEP5_NT_RESET_VALUE 0x0000003D

/* FIELD: CM3_DEP6_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 6 */
#define TX_FIR_REG8_CM3_DEP6_NT_OFFSET 0x00000012
#define TX_FIR_REG8_CM3_DEP6_NT_BITWIDTH 0x00000006
#define TX_FIR_REG8_CM3_DEP6_NT_MASK 0x00FC0000
#define TX_FIR_REG8_CM3_DEP6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG8_CM3_DEP6_NT_RESET_VALUE 0x0000003E

/* FIELD: CM3_DEP7_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C2 dependency value 7 */
#define TX_FIR_REG8_CM3_DEP7_NT_OFFSET 0x00000018
#define TX_FIR_REG8_CM3_DEP7_NT_BITWIDTH 0x00000006
#define TX_FIR_REG8_CM3_DEP7_NT_MASK 0x3F000000
#define TX_FIR_REG8_CM3_DEP7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG8_CM3_DEP7_NT_RESET_VALUE 0x0000003F

/* ------------------------------------- */
/* REG: TX_FIR_REG9 */
/* DESCRIPTION: */
/*   Configuration for the TX FIR block */
/* ------------------------------------- */
#define TX_FIR_REG9_ADDR 0x028001C4
#define TX_FIR_REG9_SIZE 32

/* FIELD: CM1_DEP0_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 0 */
#define TX_FIR_REG9_CM1_DEP0_NT_OFFSET 0x00000000
#define TX_FIR_REG9_CM1_DEP0_NT_BITWIDTH 0x00000006
#define TX_FIR_REG9_CM1_DEP0_NT_MASK 0x0000003F
#define TX_FIR_REG9_CM1_DEP0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG9_CM1_DEP0_NT_RESET_VALUE 0x00000006

/* FIELD: CM1_DEP1_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 1 */
#define TX_FIR_REG9_CM1_DEP1_NT_OFFSET 0x00000006
#define TX_FIR_REG9_CM1_DEP1_NT_BITWIDTH 0x00000006
#define TX_FIR_REG9_CM1_DEP1_NT_MASK 0x00000FC0
#define TX_FIR_REG9_CM1_DEP1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG9_CM1_DEP1_NT_RESET_VALUE 0x00000007

/* FIELD: CM1_DEP2_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 2 */
#define TX_FIR_REG9_CM1_DEP2_NT_OFFSET 0x0000000C
#define TX_FIR_REG9_CM1_DEP2_NT_BITWIDTH 0x00000006
#define TX_FIR_REG9_CM1_DEP2_NT_MASK 0x0003F000
#define TX_FIR_REG9_CM1_DEP2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG9_CM1_DEP2_NT_RESET_VALUE 0x00000008

/* FIELD: CM1_DEP3_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 3 */
#define TX_FIR_REG9_CM1_DEP3_NT_OFFSET 0x00000012
#define TX_FIR_REG9_CM1_DEP3_NT_BITWIDTH 0x00000006
#define TX_FIR_REG9_CM1_DEP3_NT_MASK 0x00FC0000
#define TX_FIR_REG9_CM1_DEP3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG9_CM1_DEP3_NT_RESET_VALUE 0x00000009

/* FIELD: CM1_DEP4_NT */
/* DESCRIPTION: */
/*   AFE TX FIR C-1 dependency value 4 */
#define TX_FIR_REG9_CM1_DEP4_NT_OFFSET 0x00000018
#define TX_FIR_REG9_CM1_DEP4_NT_BITWIDTH 0x00000006
#define TX_FIR_REG9_CM1_DEP4_NT_MASK 0x3F000000
#define TX_FIR_REG9_CM1_DEP4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_FIR_REG9_CM1_DEP4_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: TX_HBRIDGE */
/* DESCRIPTION: */
/*   Configuration register for the Tx driver h-bridge. */
/* ------------------------------------- */
#define TX_HBRIDGE_ADDR 0x028001C8
#define TX_HBRIDGE_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe tx driver h-bridge bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define TX_HBRIDGE_BIAS_ADJ_NT_OFFSET 0x00000000
#define TX_HBRIDGE_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define TX_HBRIDGE_BIAS_ADJ_NT_MASK 0x00000003
#define TX_HBRIDGE_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HBRIDGE_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: LSB_OVR_NT */
/* DESCRIPTION: */
/*   Programming bits for the override of the LSB bit size.  */
#define TX_HBRIDGE_LSB_OVR_NT_OFFSET 0x00000002
#define TX_HBRIDGE_LSB_OVR_NT_BITWIDTH 0x00000006
#define TX_HBRIDGE_LSB_OVR_NT_MASK 0x000000FC
#define TX_HBRIDGE_LSB_OVR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HBRIDGE_LSB_OVR_NT_RESET_VALUE 0x0000003F

/* FIELD: LSB_OVR_ENA_NT */
/* DESCRIPTION: */
/*   Enable override of the H-bridge LSB bit size */
/*   0 - Normal operation */
/*   1 - Override RLM tracking bias.  */
#define TX_HBRIDGE_LSB_OVR_ENA_NT_OFFSET 0x00000008
#define TX_HBRIDGE_LSB_OVR_ENA_NT_BITWIDTH 0x00000001
#define TX_HBRIDGE_LSB_OVR_ENA_NT_MASK 0x00000100
#define TX_HBRIDGE_LSB_OVR_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HBRIDGE_LSB_OVR_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_HSREFMUX */
/* DESCRIPTION: */
/*   Configuration of the AFE Tx high-speed reference clock mux. */
/* ------------------------------------- */
#define TX_HSREFMUX_ADDR 0x028001CC
#define TX_HSREFMUX_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe tx high speed reference mux bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define TX_HSREFMUX_BIAS_ADJ_NT_OFFSET 0x00000000
#define TX_HSREFMUX_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define TX_HSREFMUX_BIAS_ADJ_NT_MASK 0x00000003
#define TX_HSREFMUX_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HSREFMUX_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* FIELD: SEL_NT */
/* DESCRIPTION: */
/*   Select which hsref is used by the TX direct synthesizer */
/*   11 - Looptime hsref */
/*   10 - hsref1 */
/*   01 - hsref0 */
/*   00 - local hsref */
#define TX_HSREFMUX_SEL_NT_OFFSET 0x00000002
#define TX_HSREFMUX_SEL_NT_BITWIDTH 0x00000002
#define TX_HSREFMUX_SEL_NT_MASK 0x0000000C
#define TX_HSREFMUX_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HSREFMUX_SEL_NT_RESET_VALUE 0x00000000

/* FIELD: TERM_ENA_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Lane specific transmission line termination enabled.  */
#define TX_HSREFMUX_TERM_ENA_NT_OFFSET 0x00000004
#define TX_HSREFMUX_TERM_ENA_NT_BITWIDTH 0x00000001
#define TX_HSREFMUX_TERM_ENA_NT_MASK 0x00000010
#define TX_HSREFMUX_TERM_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_HSREFMUX_TERM_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_LEVEL_REG1 */
/* DESCRIPTION: */
/*   Configuration for the TX level block */
/* ------------------------------------- */
#define TX_LEVEL_REG1_ADDR 0x028001D0
#define TX_LEVEL_REG1_SIZE 32

/* FIELD: SUB0_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 0 */
#define TX_LEVEL_REG1_SUB0_NT_OFFSET 0x00000000
#define TX_LEVEL_REG1_SUB0_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG1_SUB0_NT_MASK 0x0000003F
#define TX_LEVEL_REG1_SUB0_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG1_SUB0_NT_RESET_VALUE 0x00000000

/* FIELD: SUB1_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 1 */
#define TX_LEVEL_REG1_SUB1_NT_OFFSET 0x00000008
#define TX_LEVEL_REG1_SUB1_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG1_SUB1_NT_MASK 0x00003F00
#define TX_LEVEL_REG1_SUB1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG1_SUB1_NT_RESET_VALUE 0x00000000

/* FIELD: SUB2_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 2 */
#define TX_LEVEL_REG1_SUB2_NT_OFFSET 0x00000010
#define TX_LEVEL_REG1_SUB2_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG1_SUB2_NT_MASK 0x003F0000
#define TX_LEVEL_REG1_SUB2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG1_SUB2_NT_RESET_VALUE 0x00000000

/* FIELD: SUB3_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 3 */
#define TX_LEVEL_REG1_SUB3_NT_OFFSET 0x00000018
#define TX_LEVEL_REG1_SUB3_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG1_SUB3_NT_MASK 0x3F000000
#define TX_LEVEL_REG1_SUB3_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG1_SUB3_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_LEVEL_REG2 */
/* DESCRIPTION: */
/*   Configuration for the TX level block */
/* ------------------------------------- */
#define TX_LEVEL_REG2_ADDR 0x028001D4
#define TX_LEVEL_REG2_SIZE 32

/* FIELD: SUB4_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 4 */
#define TX_LEVEL_REG2_SUB4_NT_OFFSET 0x00000000
#define TX_LEVEL_REG2_SUB4_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG2_SUB4_NT_MASK 0x0000003F
#define TX_LEVEL_REG2_SUB4_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG2_SUB4_NT_RESET_VALUE 0x00000000

/* FIELD: SUB5_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 5 */
#define TX_LEVEL_REG2_SUB5_NT_OFFSET 0x00000008
#define TX_LEVEL_REG2_SUB5_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG2_SUB5_NT_MASK 0x00003F00
#define TX_LEVEL_REG2_SUB5_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG2_SUB5_NT_RESET_VALUE 0x00000000

/* FIELD: SUB6_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 6 */
#define TX_LEVEL_REG2_SUB6_NT_OFFSET 0x00000010
#define TX_LEVEL_REG2_SUB6_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG2_SUB6_NT_MASK 0x003F0000
#define TX_LEVEL_REG2_SUB6_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG2_SUB6_NT_RESET_VALUE 0x00000000

/* FIELD: SUB7_NT */
/* DESCRIPTION: */
/*   Subtraction value to use when ictl_pcie_tx_level_margin is 7 */
#define TX_LEVEL_REG2_SUB7_NT_OFFSET 0x00000018
#define TX_LEVEL_REG2_SUB7_NT_BITWIDTH 0x00000006
#define TX_LEVEL_REG2_SUB7_NT_MASK 0x3F000000
#define TX_LEVEL_REG2_SUB7_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LEVEL_REG2_SUB7_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_LOOPBACK_CNTRL */
/* DESCRIPTION: */
/*   Loopback interface FSM control/observation */
/* ------------------------------------- */
#define TX_LOOPBACK_CNTRL_ADDR 0x028001D8
#define TX_LOOPBACK_CNTRL_SIZE 32

/* FIELD: ENA_NT */
/* DESCRIPTION: */
/*   FEP Loopback override enable. 0 - FEP loopback controlled via interface FSM. 1 - Loopback controlled via registers: */
/*   tx_loopback_cntrl[postdiv_loopback_ena_nt] */
/*   tx_fep_loopback_fifo_top[fifo_enable_a] */
/*   tx_datapath[fep_loopback_enable_a] */
#define TX_LOOPBACK_CNTRL_ENA_NT_OFFSET 0x00000000
#define TX_LOOPBACK_CNTRL_ENA_NT_BITWIDTH 0x00000001
#define TX_LOOPBACK_CNTRL_ENA_NT_MASK 0x00000001
#define TX_LOOPBACK_CNTRL_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LOOPBACK_CNTRL_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: POSTDIV_LOOPBACK_ENA_A */
/* DESCRIPTION: */
/*   Enables RX to TX bitclock loopback. 0 - Normal operation. 1 - Loopback enabled */
#define TX_LOOPBACK_CNTRL_POSTDIV_LOOPBACK_ENA_A_OFFSET 0x00000001
#define TX_LOOPBACK_CNTRL_POSTDIV_LOOPBACK_ENA_A_BITWIDTH 0x00000001
#define TX_LOOPBACK_CNTRL_POSTDIV_LOOPBACK_ENA_A_MASK 0x00000002
#define TX_LOOPBACK_CNTRL_POSTDIV_LOOPBACK_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_LOOPBACK_CNTRL_POSTDIV_LOOPBACK_ENA_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_LOOPBACK_CNTRL_RDREG */
/* DESCRIPTION: */
/*   Loopback interface FSM control/observation */
/* ------------------------------------- */
#define TX_LOOPBACK_CNTRL_RDREG_ADDR 0x028001DC
#define TX_LOOPBACK_CNTRL_RDREG_SIZE 32

/* FIELD: STAT_A */
/* DESCRIPTION: */
/*   Asserted when FEP loopback enabled. */
#define TX_LOOPBACK_CNTRL_RDREG_STAT_A_OFFSET 0x00000000
#define TX_LOOPBACK_CNTRL_RDREG_STAT_A_BITWIDTH 0x00000001
#define TX_LOOPBACK_CNTRL_RDREG_STAT_A_MASK 0x00000001
#define TX_LOOPBACK_CNTRL_RDREG_STAT_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_LOOPBACK_CNTRL_RDREG_STAT_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_OVRD_ENABLE */
/* DESCRIPTION: */
/*   Override enables for interface ports */
/* ------------------------------------- */
#define TX_OVRD_ENABLE_ADDR 0x028001E0
#define TX_OVRD_ENABLE_SIZE 32

/* FIELD: ELECIDLE_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_tx_elecidle_a] */
#define TX_OVRD_ENABLE_ELECIDLE_A_OFFSET 0x00000000
#define TX_OVRD_ENABLE_ELECIDLE_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_ELECIDLE_A_MASK 0x00000001
#define TX_OVRD_ENABLE_ELECIDLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_ELECIDLE_A_RESET_VALUE 0x00000000

/* FIELD: SUBSAMPLE_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_pcie_tx_subsample_a] */
#define TX_OVRD_ENABLE_SUBSAMPLE_A_OFFSET 0x00000001
#define TX_OVRD_ENABLE_SUBSAMPLE_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_SUBSAMPLE_A_MASK 0x00000002
#define TX_OVRD_ENABLE_SUBSAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_SUBSAMPLE_A_RESET_VALUE 0x00000001

/* FIELD: BEACON_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_tx_beacon_ena_a] */
#define TX_OVRD_ENABLE_BEACON_A_OFFSET 0x00000002
#define TX_OVRD_ENABLE_BEACON_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_BEACON_A_MASK 0x00000004
#define TX_OVRD_ENABLE_BEACON_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_BEACON_A_RESET_VALUE 0x00000001

/* FIELD: FIR_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_tx_fir*] */
#define TX_OVRD_ENABLE_FIR_A_OFFSET 0x00000003
#define TX_OVRD_ENABLE_FIR_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_FIR_A_MASK 0x00000008
#define TX_OVRD_ENABLE_FIR_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_FIR_A_RESET_VALUE 0x00000000

/* FIELD: LOOPBACK_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_loopback*] */
#define TX_OVRD_ENABLE_LOOPBACK_A_OFFSET 0x00000004
#define TX_OVRD_ENABLE_LOOPBACK_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_LOOPBACK_A_MASK 0x00000010
#define TX_OVRD_ENABLE_LOOPBACK_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_LOOPBACK_A_RESET_VALUE 0x00000001

/* FIELD: PCIE_LEVEL_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_pcie_tx_level*] */
#define TX_OVRD_ENABLE_PCIE_LEVEL_A_OFFSET 0x00000005
#define TX_OVRD_ENABLE_PCIE_LEVEL_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_PCIE_LEVEL_A_MASK 0x00000020
#define TX_OVRD_ENABLE_PCIE_LEVEL_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_PCIE_LEVEL_A_RESET_VALUE 0x00000001

/* FIELD: PCIE_RXDET_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_pcie_tx_rxdet_req_a] */
#define TX_OVRD_ENABLE_PCIE_RXDET_A_OFFSET 0x00000006
#define TX_OVRD_ENABLE_PCIE_RXDET_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_PCIE_RXDET_A_MASK 0x00000040
#define TX_OVRD_ENABLE_PCIE_RXDET_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_PCIE_RXDET_A_RESET_VALUE 0x00000001

/* FIELD: RST_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[irst_tx_ba] */
#define TX_OVRD_ENABLE_RST_A_OFFSET 0x00000007
#define TX_OVRD_ENABLE_RST_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_RST_A_MASK 0x00000080
#define TX_OVRD_ENABLE_RST_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_RST_A_RESET_VALUE 0x00000000

/* FIELD: STATE_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_tx_state*] and tx_ovrd_reg[ictl_tx_training_mode_a] */
#define TX_OVRD_ENABLE_STATE_A_OFFSET 0x00000008
#define TX_OVRD_ENABLE_STATE_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_STATE_A_MASK 0x00000100
#define TX_OVRD_ENABLE_STATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_STATE_A_RESET_VALUE 0x00000000

/* FIELD: TX_BLOCK_DATA_ENA_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_ck_tx_block_data_ena_a] */
#define TX_OVRD_ENABLE_TX_BLOCK_DATA_ENA_A_OFFSET 0x00000009
#define TX_OVRD_ENABLE_TX_BLOCK_DATA_ENA_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_TX_BLOCK_DATA_ENA_A_MASK 0x00000200
#define TX_OVRD_ENABLE_TX_BLOCK_DATA_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_TX_BLOCK_DATA_ENA_A_RESET_VALUE 0x00000001

/* FIELD: TX_BYPASS_A */
/* DESCRIPTION: */
/*   Unused */
#define TX_OVRD_ENABLE_TX_BYPASS_A_OFFSET 0x0000000A
#define TX_OVRD_ENABLE_TX_BYPASS_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_TX_BYPASS_A_MASK 0x00000400
#define TX_OVRD_ENABLE_TX_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_TX_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: PCIE_ASYNC_A */
/* DESCRIPTION: */
/*   Enable for tx_ovrd_reg[ictl_pcie_tx_commonmode_disable_a] */
#define TX_OVRD_ENABLE_PCIE_ASYNC_A_OFFSET 0x0000000B
#define TX_OVRD_ENABLE_PCIE_ASYNC_A_BITWIDTH 0x00000001
#define TX_OVRD_ENABLE_PCIE_ASYNC_A_MASK 0x00000800
#define TX_OVRD_ENABLE_PCIE_ASYNC_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_ENABLE_PCIE_ASYNC_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_OVRD_REG1 */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define TX_OVRD_REG1_ADDR 0x028001E4
#define TX_OVRD_REG1_SIZE 32

/* FIELD: IRST_TX_BA */
/* DESCRIPTION: */
/*   Register override of irst_tx_ba */
#define TX_OVRD_REG1_IRST_TX_BA_OFFSET 0x00000000
#define TX_OVRD_REG1_IRST_TX_BA_BITWIDTH 0x00000001
#define TX_OVRD_REG1_IRST_TX_BA_MASK 0x00000001
#define TX_OVRD_REG1_IRST_TX_BA_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_IRST_TX_BA_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_STATE_POWER_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_state_power */
#define TX_OVRD_REG1_ICTL_TX_STATE_POWER_A_OFFSET 0x00000001
#define TX_OVRD_REG1_ICTL_TX_STATE_POWER_A_BITWIDTH 0x00000003
#define TX_OVRD_REG1_ICTL_TX_STATE_POWER_A_MASK 0x0000000E
#define TX_OVRD_REG1_ICTL_TX_STATE_POWER_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_STATE_POWER_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_STATE_RATE_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_state_rate */
#define TX_OVRD_REG1_ICTL_TX_STATE_RATE_A_OFFSET 0x00000004
#define TX_OVRD_REG1_ICTL_TX_STATE_RATE_A_BITWIDTH 0x00000004
#define TX_OVRD_REG1_ICTL_TX_STATE_RATE_A_MASK 0x000000F0
#define TX_OVRD_REG1_ICTL_TX_STATE_RATE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_STATE_RATE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_STATE_WIDTH_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_state_width */
#define TX_OVRD_REG1_ICTL_TX_STATE_WIDTH_A_OFFSET 0x00000008
#define TX_OVRD_REG1_ICTL_TX_STATE_WIDTH_A_BITWIDTH 0x00000004
#define TX_OVRD_REG1_ICTL_TX_STATE_WIDTH_A_MASK 0x00000F00
#define TX_OVRD_REG1_ICTL_TX_STATE_WIDTH_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_STATE_WIDTH_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_TRAINING_MODE_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_training_mode_a */
#define TX_OVRD_REG1_ICTL_TX_TRAINING_MODE_A_OFFSET 0x0000000C
#define TX_OVRD_REG1_ICTL_TX_TRAINING_MODE_A_BITWIDTH 0x00000003
#define TX_OVRD_REG1_ICTL_TX_TRAINING_MODE_A_MASK 0x00007000
#define TX_OVRD_REG1_ICTL_TX_TRAINING_MODE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_TRAINING_MODE_A_RESET_VALUE 0x00000000

/* FIELD: TXCHNG_PEDGE_A */
/* DESCRIPTION: */
/*   When toggled, register override values for TX clock synchronous signals */
/*   (subsample, elecidle) take effect */
#define TX_OVRD_REG1_TXCHNG_PEDGE_A_OFFSET 0x0000000F
#define TX_OVRD_REG1_TXCHNG_PEDGE_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_TXCHNG_PEDGE_A_MASK 0x00008000
#define TX_OVRD_REG1_TXCHNG_PEDGE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_TXCHNG_PEDGE_A_RESET_VALUE 0x00000000

/* FIELD: TXSOC_CLK_A */
/* DESCRIPTION: */
/*   Isolation mode control for TX clock */
/*   0 - Normal operation */
/*   1 - ock_tx_block looped internally to ick_tx_block_soc */
#define TX_OVRD_REG1_TXSOC_CLK_A_OFFSET 0x00000010
#define TX_OVRD_REG1_TXSOC_CLK_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_TXSOC_CLK_A_MASK 0x00010000
#define TX_OVRD_REG1_TXSOC_CLK_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_TXSOC_CLK_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_ELECIDLE_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_elecidle */
#define TX_OVRD_REG1_ICTL_TX_ELECIDLE_A_OFFSET 0x00000011
#define TX_OVRD_REG1_ICTL_TX_ELECIDLE_A_BITWIDTH 0x00000004
#define TX_OVRD_REG1_ICTL_TX_ELECIDLE_A_MASK 0x001E0000
#define TX_OVRD_REG1_ICTL_TX_ELECIDLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_ELECIDLE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_CK_TX_BLOCK_DATA_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_ck_tx_block_data_ena_a */
#define TX_OVRD_REG1_ICTL_CK_TX_BLOCK_DATA_ENA_A_OFFSET 0x00000015
#define TX_OVRD_REG1_ICTL_CK_TX_BLOCK_DATA_ENA_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_ICTL_CK_TX_BLOCK_DATA_ENA_A_MASK 0x00200000
#define TX_OVRD_REG1_ICTL_CK_TX_BLOCK_DATA_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_CK_TX_BLOCK_DATA_ENA_A_RESET_VALUE 0x00000001

/* FIELD: ICTL_TX_BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_bypass_ena */
#define TX_OVRD_REG1_ICTL_TX_BYPASS_ENA_A_OFFSET 0x00000016
#define TX_OVRD_REG1_ICTL_TX_BYPASS_ENA_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_ICTL_TX_BYPASS_ENA_A_MASK 0x00400000
#define TX_OVRD_REG1_ICTL_TX_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: IDAT_TX_BYPASS_A */
/* DESCRIPTION: */
/*   Register override of idat_tx_bypass_ena */
#define TX_OVRD_REG1_IDAT_TX_BYPASS_A_OFFSET 0x00000017
#define TX_OVRD_REG1_IDAT_TX_BYPASS_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_IDAT_TX_BYPASS_A_MASK 0x00800000
#define TX_OVRD_REG1_IDAT_TX_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_IDAT_TX_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_BEACON_ENA_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_beacon_ena */
#define TX_OVRD_REG1_ICTL_TX_BEACON_ENA_A_OFFSET 0x00000018
#define TX_OVRD_REG1_ICTL_TX_BEACON_ENA_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_ICTL_TX_BEACON_ENA_A_MASK 0x01000000
#define TX_OVRD_REG1_ICTL_TX_BEACON_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_TX_BEACON_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_LOOPBACK_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_loopback_req */
#define TX_OVRD_REG1_ICTL_LOOPBACK_REQ_A_OFFSET 0x00000019
#define TX_OVRD_REG1_ICTL_LOOPBACK_REQ_A_BITWIDTH 0x00000001
#define TX_OVRD_REG1_ICTL_LOOPBACK_REQ_A_MASK 0x02000000
#define TX_OVRD_REG1_ICTL_LOOPBACK_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_LOOPBACK_REQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_LOOPBACK_TYPE_A */
/* DESCRIPTION: */
/*   Register override of ictl_loopback_type */
#define TX_OVRD_REG1_ICTL_LOOPBACK_TYPE_A_OFFSET 0x0000001A
#define TX_OVRD_REG1_ICTL_LOOPBACK_TYPE_A_BITWIDTH 0x00000002
#define TX_OVRD_REG1_ICTL_LOOPBACK_TYPE_A_MASK 0x0C000000
#define TX_OVRD_REG1_ICTL_LOOPBACK_TYPE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG1_ICTL_LOOPBACK_TYPE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_OVRD_REG2 */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define TX_OVRD_REG2_ADDR 0x028001E8
#define TX_OVRD_REG2_SIZE 32

/* FIELD: ICTL_TX_FIR_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_fir (post LT block) */
#define TX_OVRD_REG2_ICTL_TX_FIR_A_OFFSET 0x00000000
#define TX_OVRD_REG2_ICTL_TX_FIR_A_BITWIDTH 0x00000015
#define TX_OVRD_REG2_ICTL_TX_FIR_A_MASK 0x001FFFFF
#define TX_OVRD_REG2_ICTL_TX_FIR_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG2_ICTL_TX_FIR_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_FIR_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_fir_req (post LT block) */
#define TX_OVRD_REG2_ICTL_TX_FIR_REQ_A_OFFSET 0x00000015
#define TX_OVRD_REG2_ICTL_TX_FIR_REQ_A_BITWIDTH 0x00000001
#define TX_OVRD_REG2_ICTL_TX_FIR_REQ_A_MASK 0x00200000
#define TX_OVRD_REG2_ICTL_TX_FIR_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG2_ICTL_TX_FIR_REQ_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_OVRD_REG3 */
/* DESCRIPTION: */
/*   Overrides for interface ports */
/* ------------------------------------- */
#define TX_OVRD_REG3_ADDR 0x028001EC
#define TX_OVRD_REG3_SIZE 32

/* FIELD: ICTL_PCIE_TX_SUBSAMPLE_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_subsample */
#define TX_OVRD_REG3_ICTL_PCIE_TX_SUBSAMPLE_A_OFFSET 0x00000000
#define TX_OVRD_REG3_ICTL_PCIE_TX_SUBSAMPLE_A_BITWIDTH 0x00000003
#define TX_OVRD_REG3_ICTL_PCIE_TX_SUBSAMPLE_A_MASK 0x00000007
#define TX_OVRD_REG3_ICTL_PCIE_TX_SUBSAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_SUBSAMPLE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_TX_RXDET_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_rxdet_req */
#define TX_OVRD_REG3_ICTL_PCIE_TX_RXDET_REQ_A_OFFSET 0x00000003
#define TX_OVRD_REG3_ICTL_PCIE_TX_RXDET_REQ_A_BITWIDTH 0x00000001
#define TX_OVRD_REG3_ICTL_PCIE_TX_RXDET_REQ_A_MASK 0x00000008
#define TX_OVRD_REG3_ICTL_PCIE_TX_RXDET_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_RXDET_REQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_TX_LEVEL_MARGIN_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_level_margin_a */
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_MARGIN_A_OFFSET 0x00000004
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_MARGIN_A_BITWIDTH 0x00000003
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_MARGIN_A_MASK 0x00000070
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_MARGIN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_MARGIN_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_TX_LEVEL_REQ_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_level_req_a */
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_REQ_A_OFFSET 0x00000007
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_REQ_A_BITWIDTH 0x00000001
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_REQ_A_MASK 0x00000080
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_REQ_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_TX_LEVEL_SWING_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_level_swing_a */
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_SWING_A_OFFSET 0x00000008
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_SWING_A_BITWIDTH 0x00000001
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_SWING_A_MASK 0x00000100
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_SWING_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_LEVEL_SWING_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_PCIE_TX_COMMONMODE_DISABLE_A */
/* DESCRIPTION: */
/*   Register override of ictl_pcie_tx_commonmode_disable_a */
#define TX_OVRD_REG3_ICTL_PCIE_TX_COMMONMODE_DISABLE_A_OFFSET 0x00000009
#define TX_OVRD_REG3_ICTL_PCIE_TX_COMMONMODE_DISABLE_A_BITWIDTH 0x00000001
#define TX_OVRD_REG3_ICTL_PCIE_TX_COMMONMODE_DISABLE_A_MASK 0x00000200
#define TX_OVRD_REG3_ICTL_PCIE_TX_COMMONMODE_DISABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_PCIE_TX_COMMONMODE_DISABLE_A_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_M3FIR_A */
/* DESCRIPTION: */
/*   Register override of ictl_tx_m3fir_a (post LT block) */
#define TX_OVRD_REG3_ICTL_TX_M3FIR_A_OFFSET 0x0000000A
#define TX_OVRD_REG3_ICTL_TX_M3FIR_A_BITWIDTH 0x00000003
#define TX_OVRD_REG3_ICTL_TX_M3FIR_A_MASK 0x00001C00
#define TX_OVRD_REG3_ICTL_TX_M3FIR_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_ICTL_TX_M3FIR_A_RESET_VALUE 0x00000000

/* FIELD: EXTRA_RESET_B */
/* DESCRIPTION: */
/*   Reserved */
#define TX_OVRD_REG3_EXTRA_RESET_B_OFFSET 0x0000000D
#define TX_OVRD_REG3_EXTRA_RESET_B_BITWIDTH 0x00000001
#define TX_OVRD_REG3_EXTRA_RESET_B_MASK 0x00002000
#define TX_OVRD_REG3_EXTRA_RESET_B_ACCESS JUPITER_CSR_READ_WRITE
#define TX_OVRD_REG3_EXTRA_RESET_B_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_P2S */
/* DESCRIPTION: */
/*   Configuration of the AFE Tx parallel to serial. */
/* ------------------------------------- */
#define TX_P2S_ADDR 0x028001F0
#define TX_P2S_SIZE 32

/* FIELD: DIV_NT */
/* DESCRIPTION: */
/*   ireg_afe_tx_p2s_div_nt */
/*   111 - Unused */
/*   110 - 40 bit wide interface (NRZ), 80 bit wide interface (PAM) */
/*   101 - Unused */
/*   100 - 20bit wide interface NRZ, 40 bit wide interface PAM */
/*   011 - 64bit wide interface NRZ, 128 bit wide interface PAM */
/*   010 - 32bit wide interface NRZ, 64 bit wide interface PAM */
/*   001 - 64bit wide interface NRZ, with 2X ock_afe_tx_block (1GHz) for PCI-Express Gen5 */
/*   000 - 16 bit wide interface NRZ, 32 bit wide PAM */
#define TX_P2S_DIV_NT_OFFSET 0x00000000
#define TX_P2S_DIV_NT_BITWIDTH 0x00000003
#define TX_P2S_DIV_NT_MASK 0x00000007
#define TX_P2S_DIV_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_P2S_DIV_NT_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_RDREG */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_RDREG_ADDR 0x028001F4
#define TX_PHASE_ADAPT_RDREG_SIZE 32

/* FIELD: D90_DCD_A */
/* DESCRIPTION: */
/*   Calibration output signal */
#define TX_PHASE_ADAPT_RDREG_D90_DCD_A_OFFSET 0x00000000
#define TX_PHASE_ADAPT_RDREG_D90_DCD_A_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_RDREG_D90_DCD_A_MASK 0x0000007F
#define TX_PHASE_ADAPT_RDREG_D90_DCD_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PHASE_ADAPT_RDREG_D90_DCD_A_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_A */
/* DESCRIPTION: */
/*   Calibration output signal */
#define TX_PHASE_ADAPT_RDREG_D0_DCD_A_OFFSET 0x00000007
#define TX_PHASE_ADAPT_RDREG_D0_DCD_A_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_RDREG_D0_DCD_A_MASK 0x00003F80
#define TX_PHASE_ADAPT_RDREG_D0_DCD_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PHASE_ADAPT_RDREG_D0_DCD_A_RESET_VALUE 0x00000000

/* FIELD: IQ_A */
/* DESCRIPTION: */
/*   Calibration output signal */
#define TX_PHASE_ADAPT_RDREG_IQ_A_OFFSET 0x0000000E
#define TX_PHASE_ADAPT_RDREG_IQ_A_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_RDREG_IQ_A_MASK 0x001FC000
#define TX_PHASE_ADAPT_RDREG_IQ_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PHASE_ADAPT_RDREG_IQ_A_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   Calibration ack signal */
#define TX_PHASE_ADAPT_RDREG_ACK_OFFSET 0x00000015
#define TX_PHASE_ADAPT_RDREG_ACK_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_RDREG_ACK_MASK 0x00200000
#define TX_PHASE_ADAPT_RDREG_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PHASE_ADAPT_RDREG_ACK_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_ERROR_NT */
/* DESCRIPTION: */
/*   IQ error signal */
#define TX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_OFFSET 0x00000016
#define TX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_MASK 0x00400000
#define TX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PHASE_ADAPT_RDREG_DCDIQ_ERROR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Overrides for the AFE Tx IQ/DCD calibration signals. */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG1_ADDR 0x028001F8
#define TX_PHASE_ADAPT_REG1_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   D90 tx bitclock DCD correction code */
/*   1111111 - Max positive dcd correction */
/*   1000000 - No correction */
/*   0000000 - Min negative dcd correction */
#define TX_PHASE_ADAPT_REG1_D90_DCD_NT_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG1_D90_DCD_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG1_D90_DCD_NT_MASK 0x0000007F
#define TX_PHASE_ADAPT_REG1_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_D90_DCD_NT_RESET_VALUE 0x0000003F

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   D0 tx bitclock DCD correction code */
/*   1111111 - Max positive dcd correction */
/*   1000000 - No correction */
/*   0000000 - Min negative dcd correction */
#define TX_PHASE_ADAPT_REG1_D0_DCD_NT_OFFSET 0x00000008
#define TX_PHASE_ADAPT_REG1_D0_DCD_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG1_D0_DCD_NT_MASK 0x00007F00
#define TX_PHASE_ADAPT_REG1_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_D0_DCD_NT_RESET_VALUE 0x0000003F

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   1111111 - Max positive iq correction */
/*   1000000 - No correction */
/*   0000000 - Min negative iq correction */
#define TX_PHASE_ADAPT_REG1_IQ_NT_OFFSET 0x00000010
#define TX_PHASE_ADAPT_REG1_IQ_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG1_IQ_NT_MASK 0x007F0000
#define TX_PHASE_ADAPT_REG1_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_IQ_NT_RESET_VALUE 0x0000003F

/* FIELD: DCDIQ_SAMPLE_A */
/* DESCRIPTION: */
/*   Rising edge of this signal triggers the comparator that produces odat_afe_tx_dcdiq_error_a. */
/*   Measurement filter requires 200ns to settle after IQ/DCD DAC update. */
/*   Error signal is valid 20ns after rising edge.  */
/*   Comparator must be held in (0) arming state for at least 20ns prior to sampling.  */
/*   1 - Previous comparator result is held odat_afe_rx_dcdiq_error_a is valid.  */
/*   0 - Comparator is arming in preparation for next sampling.  */
#define TX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_OFFSET 0x00000018
#define TX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_MASK 0x01000000
#define TX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_DCDIQ_SAMPLE_A_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_SELECT_NT */
/* DESCRIPTION: */
/*   Select tx bitclk to calibrate for DCD */
/*   11 - unused */
/*   10 - calibrate IQ */
/*   01 - calibrate DCD d0 */
/*   00 - calibrate DCD d90 */
#define TX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_OFFSET 0x00000019
#define TX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_BITWIDTH 0x00000002
#define TX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_MASK 0x06000000
#define TX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_DCDIQ_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: DCDIQ_READY_A */
/* DESCRIPTION: */
/*   IQ, DCD codes are updated on positive edge of this signal and must be stable while it is high.  Allows synchronized update of codes for background adaption.   */
#define TX_PHASE_ADAPT_REG1_DCDIQ_READY_A_OFFSET 0x0000001B
#define TX_PHASE_ADAPT_REG1_DCDIQ_READY_A_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG1_DCDIQ_READY_A_MASK 0x08000000
#define TX_PHASE_ADAPT_REG1_DCDIQ_READY_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_DCDIQ_READY_A_RESET_VALUE 0x00000001

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable bypass of tx IQ/DCD control signals. */
#define TX_PHASE_ADAPT_REG1_BYPASS_ENA_A_OFFSET 0x0000001F
#define TX_PHASE_ADAPT_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG1_BYPASS_ENA_A_MASK 0x80000000
#define TX_PHASE_ADAPT_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG2_ADDR 0x028001FC
#define TX_PHASE_ADAPT_REG2_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define TX_PHASE_ADAPT_REG2_REQ_A_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG2_REQ_A_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG2_REQ_A_MASK 0x00000001
#define TX_PHASE_ADAPT_REG2_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define TX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_OFFSET 0x00000001
#define TX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_MASK 0x00000002
#define TX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define TX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_OFFSET 0x00000002
#define TX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define TX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_MASK 0x0000007C
#define TX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define TX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_OFFSET 0x00000007
#define TX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define TX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_MASK 0x00000780
#define TX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity. Bit0= d90, Bit1 = d0, Bit2 = iq */
#define TX_PHASE_ADAPT_REG2_POLARITY_NT_OFFSET 0x0000000B
#define TX_PHASE_ADAPT_REG2_POLARITY_NT_BITWIDTH 0x00000003
#define TX_PHASE_ADAPT_REG2_POLARITY_NT_MASK 0x00003800
#define TX_PHASE_ADAPT_REG2_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_POLARITY_NT_RESET_VALUE 0x00000007

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define TX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_OFFSET 0x0000000E
#define TX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_MASK 0x00004000
#define TX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define TX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_OFFSET 0x0000000F
#define TX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_MASK 0x00008000
#define TX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define TX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_OFFSET 0x00000010
#define TX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_MASK 0x00010000
#define TX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: TYPE_NT */
/* DESCRIPTION: */
/*   Type select. 0 = d90, 1 = d0, 2 = iq */
#define TX_PHASE_ADAPT_REG2_TYPE_NT_OFFSET 0x00000011
#define TX_PHASE_ADAPT_REG2_TYPE_NT_BITWIDTH 0x00000002
#define TX_PHASE_ADAPT_REG2_TYPE_NT_MASK 0x00060000
#define TX_PHASE_ADAPT_REG2_TYPE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_TYPE_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define TX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x00000013
#define TX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define TX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_MASK 0x00F80000
#define TX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: SAMPLE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will when asserting sample */
#define TX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_OFFSET 0x00000018
#define TX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_BITWIDTH 0x00000006
#define TX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_MASK 0x3F000000
#define TX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG2_SAMPLE_DELAY_NT_RESET_VALUE 0x0000001F

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG3_ADDR 0x02800200
#define TX_PHASE_ADAPT_REG3_SIZE 32

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define TX_PHASE_ADAPT_REG3_START_VALUE_NT_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG3_START_VALUE_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG3_START_VALUE_NT_MASK 0x0000007F
#define TX_PHASE_ADAPT_REG3_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG3_START_VALUE_NT_RESET_VALUE 0x0000003F

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. Multiplied/divided by mu1 */
#define TX_PHASE_ADAPT_REG3_INIT_STEP_NT_OFFSET 0x00000007
#define TX_PHASE_ADAPT_REG3_INIT_STEP_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG3_INIT_STEP_NT_MASK 0x00003F80
#define TX_PHASE_ADAPT_REG3_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG3_INIT_STEP_NT_RESET_VALUE 0x00000006

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define TX_PHASE_ADAPT_REG3_MAX_NT_OFFSET 0x0000000E
#define TX_PHASE_ADAPT_REG3_MAX_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG3_MAX_NT_MASK 0x001FC000
#define TX_PHASE_ADAPT_REG3_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG3_MAX_NT_RESET_VALUE 0x0000007F

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define TX_PHASE_ADAPT_REG3_MIN_NT_OFFSET 0x00000015
#define TX_PHASE_ADAPT_REG3_MIN_NT_BITWIDTH 0x00000007
#define TX_PHASE_ADAPT_REG3_MIN_NT_MASK 0x0FE00000
#define TX_PHASE_ADAPT_REG3_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG3_MIN_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define TX_PHASE_ADAPT_REG3_STOP_HI_NT_OFFSET 0x0000001C
#define TX_PHASE_ADAPT_REG3_STOP_HI_NT_BITWIDTH 0x00000002
#define TX_PHASE_ADAPT_REG3_STOP_HI_NT_MASK 0x30000000
#define TX_PHASE_ADAPT_REG3_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG3_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG4_ADDR 0x02800204
#define TX_PHASE_ADAPT_REG4_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define TX_PHASE_ADAPT_REG4_MAX_ITER_NT_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG4_MAX_ITER_NT_BITWIDTH 0x00000010
#define TX_PHASE_ADAPT_REG4_MAX_ITER_NT_MASK 0x0000FFFF
#define TX_PHASE_ADAPT_REG4_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG4_MAX_ITER_NT_RESET_VALUE 0x00000064

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define TX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_OFFSET 0x00000010
#define TX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define TX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define TX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG4_UPDATE_DELAY_NT_RESET_VALUE 0x000000AF

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG5_ADDR 0x02800208
#define TX_PHASE_ADAPT_REG5_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define TX_PHASE_ADAPT_REG5_LMS_MU1_NT_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG5_LMS_MU1_NT_BITWIDTH 0x00000005
#define TX_PHASE_ADAPT_REG5_LMS_MU1_NT_MASK 0x0000001F
#define TX_PHASE_ADAPT_REG5_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG5_LMS_MU1_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define TX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define TX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_MASK 0x00000020
#define TX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG5_LMS_MU1_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define TX_PHASE_ADAPT_REG5_LMS_MU2_NT_OFFSET 0x00000008
#define TX_PHASE_ADAPT_REG5_LMS_MU2_NT_BITWIDTH 0x00000005
#define TX_PHASE_ADAPT_REG5_LMS_MU2_NT_MASK 0x00001F00
#define TX_PHASE_ADAPT_REG5_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG5_LMS_MU2_NT_RESET_VALUE 0x00000000

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define TX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define TX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define TX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_MASK 0x00002000
#define TX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG5_LMS_MU2_DIR_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consecutive direction changes that need to occur for lock to occur */
#define TX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_OFFSET 0x00000010
#define TX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define TX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_MASK 0x001F0000
#define TX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG5_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PHASE_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Control / observability registers for the phase adapt calibration block */
/* ------------------------------------- */
#define TX_PHASE_ADAPT_REG6_ADDR 0x0280020C
#define TX_PHASE_ADAPT_REG6_SIZE 32

/* FIELD: SETUP_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after changing output before asserting ready  */
#define TX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_OFFSET 0x00000000
#define TX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_BITWIDTH 0x00000010
#define TX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_MASK 0x0000FFFF
#define TX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG6_SETUP_DELAY_NT_RESET_VALUE 0x00000005

/* FIELD: HOLD_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after deasserting ready signal before changing output */
#define TX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_OFFSET 0x00000010
#define TX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_BITWIDTH 0x00000010
#define TX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_MASK 0xFFFF0000
#define TX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_ADAPT_REG6_HOLD_DELAY_NT_RESET_VALUE 0x00000005

/* ------------------------------------- */
/* REG: TX_PHASE_FIFO */
/* DESCRIPTION: */
/*   TX data path control */
/* ------------------------------------- */
#define TX_PHASE_FIFO_ADDR 0x02800210
#define TX_PHASE_FIFO_SIZE 32

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   Enable bypass of the electrical idle function */
#define TX_PHASE_FIFO_BYPASS_ENA_A_OFFSET 0x00000000
#define TX_PHASE_FIFO_BYPASS_ENA_A_BITWIDTH 0x00000001
#define TX_PHASE_FIFO_BYPASS_ENA_A_MASK 0x00000001
#define TX_PHASE_FIFO_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: ELECIDLE_NT */
/* DESCRIPTION: */
/*   Override control of the transmit electrical idle function */
/*   11 - transmitter placed into electrical idle */
/*   10 - transmitter in normal operating mode */
/*   01 - transmitter in normal operating mode */
/*   00 - transmitter in normal operating mode */
/*   This bit is kept timing aligned with the txdata through tx fifo and into afe.  */
#define TX_PHASE_FIFO_ELECIDLE_NT_OFFSET 0x00000001
#define TX_PHASE_FIFO_ELECIDLE_NT_BITWIDTH 0x00000004
#define TX_PHASE_FIFO_ELECIDLE_NT_MASK 0x0000001E
#define TX_PHASE_FIFO_ELECIDLE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_ELECIDLE_NT_RESET_VALUE 0x00000000

/* FIELD: P2S_SYNC_OVR_ENA_A */
/* DESCRIPTION: */
/*   Enabled p2s_sync_ovr. 0 - Normal operation. 1 - p2s_sync_ovr enabled */
#define TX_PHASE_FIFO_P2S_SYNC_OVR_ENA_A_OFFSET 0x00000005
#define TX_PHASE_FIFO_P2S_SYNC_OVR_ENA_A_BITWIDTH 0x00000001
#define TX_PHASE_FIFO_P2S_SYNC_OVR_ENA_A_MASK 0x00000020
#define TX_PHASE_FIFO_P2S_SYNC_OVR_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_P2S_SYNC_OVR_ENA_A_RESET_VALUE 0x00000000

/* FIELD: P2S_SYNC_OVR_NT */
/* DESCRIPTION: */
/*   Used to align the ock_tx_block_local clocks across multiple lanes. Acts as a reset for all portions of the p2s except that which generates the ock_tx_block clock.  */
#define TX_PHASE_FIFO_P2S_SYNC_OVR_NT_OFFSET 0x00000006
#define TX_PHASE_FIFO_P2S_SYNC_OVR_NT_BITWIDTH 0x00000001
#define TX_PHASE_FIFO_P2S_SYNC_OVR_NT_MASK 0x00000040
#define TX_PHASE_FIFO_P2S_SYNC_OVR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_P2S_SYNC_OVR_NT_RESET_VALUE 0x00000000

/* FIELD: START_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait after TX FIFO has been enabled before asserting read enable. */
#define TX_PHASE_FIFO_START_DELAY_NT_OFFSET 0x00000007
#define TX_PHASE_FIFO_START_DELAY_NT_BITWIDTH 0x00000002
#define TX_PHASE_FIFO_START_DELAY_NT_MASK 0x00000180
#define TX_PHASE_FIFO_START_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_START_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: BITSTUFF2X_NT */
/* DESCRIPTION: */
/*   Controls if TX bitstuffs. 0 - Normal operation. 1 - Data bitstuffed. Each bit is repeated twice to the AFE, effectively halving the data rate */
#define TX_PHASE_FIFO_BITSTUFF2X_NT_OFFSET 0x00000009
#define TX_PHASE_FIFO_BITSTUFF2X_NT_BITWIDTH 0x00000001
#define TX_PHASE_FIFO_BITSTUFF2X_NT_MASK 0x00000200
#define TX_PHASE_FIFO_BITSTUFF2X_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_BITSTUFF2X_NT_RESET_VALUE 0x00000000

/* FIELD: P2S_32T64_NT */
/* DESCRIPTION: */
/*   Enabled 32 to 64 bit mode. 0 - Normal operation. 1 - 32 to 64 bit mode enabled. Should be enabled when input data is 32 bits, but AFE expects 64 */
#define TX_PHASE_FIFO_P2S_32T64_NT_OFFSET 0x0000000A
#define TX_PHASE_FIFO_P2S_32T64_NT_BITWIDTH 0x00000001
#define TX_PHASE_FIFO_P2S_32T64_NT_MASK 0x00000400
#define TX_PHASE_FIFO_P2S_32T64_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PHASE_FIFO_P2S_32T64_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PPM_LOCK_DETECT_RDREG */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define TX_PPM_LOCK_DETECT_RDREG_ADDR 0x02800214
#define TX_PPM_LOCK_DETECT_RDREG_SIZE 32

/* FIELD: MEAS_RESULT */
/* DESCRIPTION: */
/*   PPM internal measurement block result */
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_OFFSET 0x00000000
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_BITWIDTH 0x00000010
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_MASK 0x0000FFFF
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_RESULT_RESET_VALUE 0x00000000

/* FIELD: LOCK_A */
/* DESCRIPTION: */
/*   PPM lock indicator */
#define TX_PPM_LOCK_DETECT_RDREG_LOCK_A_OFFSET 0x00000010
#define TX_PPM_LOCK_DETECT_RDREG_LOCK_A_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_RDREG_LOCK_A_MASK 0x00010000
#define TX_PPM_LOCK_DETECT_RDREG_LOCK_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PPM_LOCK_DETECT_RDREG_LOCK_A_RESET_VALUE 0x00000000

/* FIELD: MEAS_ACK_A */
/* DESCRIPTION: */
/*   PPM internal measurement block ack indicator */
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_OFFSET 0x00000011
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_MASK 0x00020000
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_ACCESS JUPITER_CSR_READ_ONLY
#define TX_PPM_LOCK_DETECT_RDREG_MEAS_ACK_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PPM_LOCK_DETECT_REG1 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define TX_PPM_LOCK_DETECT_REG1_ADDR 0x02800218
#define TX_PPM_LOCK_DETECT_REG1_SIZE 32

/* FIELD: EN_A */
/* DESCRIPTION: */
/*   Enable for block */
#define TX_PPM_LOCK_DETECT_REG1_EN_A_OFFSET 0x00000000
#define TX_PPM_LOCK_DETECT_REG1_EN_A_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_EN_A_MASK 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_EN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_EN_A_RESET_VALUE 0x00000000

/* FIELD: FREEZE_A */
/* DESCRIPTION: */
/*   When asserted, freezes the block */
#define TX_PPM_LOCK_DETECT_REG1_FREEZE_A_OFFSET 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_FREEZE_A_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_FREEZE_A_MASK 0x00000002
#define TX_PPM_LOCK_DETECT_REG1_FREEZE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_FREEZE_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_EN_NT */
/* DESCRIPTION: */
/*   When asserted, allows the ppm detect block to attempt to recover after a ppm error. */
#define TX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_OFFSET 0x00000002
#define TX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_MASK 0x00000004
#define TX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_RECOVER_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_RESET_EN_B_NT */
/* DESCRIPTION: */
/*   When asserted (active low) allows the ppm detect block to reset the dlpf */
#define TX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_OFFSET 0x00000003
#define TX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_MASK 0x00000008
#define TX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_DLPF_RESET_EN_B_NT_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block timing window */
#define TX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_OFFSET 0x00000004
#define TX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define TX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_MASK 0x000000F0
#define TX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_TIMING_WINDOW_NT_RESET_VALUE 0x00000000

/* FIELD: FREQ_LOCK_THRESHOLD_NT */
/* DESCRIPTION: */
/*   Value that specifies lock for ppm. Absolute measurement value must be less than this value to lock. */
#define TX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_OFFSET 0x00000010
#define TX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_BITWIDTH 0x00000010
#define TX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_MASK 0xFFFF0000
#define TX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG1_FREQ_LOCK_THRESHOLD_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PPM_LOCK_DETECT_REG2 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define TX_PPM_LOCK_DETECT_REG2_ADDR 0x0280021C
#define TX_PPM_LOCK_DETECT_REG2_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   PPM internal measurement block frequency target */
#define TX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_OFFSET 0x00000000
#define TX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define TX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_MASK 0x0000FFFF
#define TX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG2_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait when block enabled prior to measuring ppm error */
#define TX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_OFFSET 0x00000010
#define TX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_BITWIDTH 0x0000000F
#define TX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_MASK 0x7FFF0000
#define TX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG2_INIT_DELAY_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_PPM_LOCK_DETECT_REG3 */
/* DESCRIPTION: */
/*   Configuration/observability for PPM lock detector */
/* ------------------------------------- */
#define TX_PPM_LOCK_DETECT_REG3_ADDR 0x02800220
#define TX_PPM_LOCK_DETECT_REG3_SIZE 32

/* FIELD: LOCK_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait between measurement runs when locked */
#define TX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_OFFSET 0x00000000
#define TX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_BITWIDTH 0x0000000F
#define TX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_MASK 0x00007FFF
#define TX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG3_LOCK_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: MEAS_REQ_A */
/* DESCRIPTION: */
/*   PPM internal measurement block request */
#define TX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_OFFSET 0x0000000F
#define TX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_MASK 0x00008000
#define TX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG3_MEAS_REQ_A_RESET_VALUE 0x00000000

/* FIELD: RECOVER_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles to wait while asserting dlpf reset during recovery */
#define TX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_OFFSET 0x00000010
#define TX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_BITWIDTH 0x0000000F
#define TX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_MASK 0x7FFF0000
#define TX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG3_RECOVER_DELAY_NT_RESET_VALUE 0x00000000

/* FIELD: CLK_SEL_NT */
/* DESCRIPTION: */
/*   Clock selection for ppm detector block. 0 - vcodiv 1 - pclk */
#define TX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_OFFSET 0x0000001F
#define TX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_BITWIDTH 0x00000001
#define TX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_MASK 0x80000000
#define TX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_PPM_LOCK_DETECT_REG3_CLK_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_RDREG1 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_RDREG1_ADDR 0x02800224
#define TX_SSCM_DLPF_RDREG1_SIZE 32

/* FIELD: DLPF_INTEGRAL_ACCUMULATOR_NT */
/* DESCRIPTION: */
/*   DLPF integral accumlator value */
#define TX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_OFFSET 0x00000000
#define TX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_BITWIDTH 0x00000016
#define TX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_MASK 0x003FFFFF
#define TX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_DLPF_RDREG1_DLPF_INTEGRAL_ACCUMULATOR_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_RDREG2 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_RDREG2_ADDR 0x02800228
#define TX_SSCM_DLPF_RDREG2_SIZE 32

/* FIELD: CTL_AFE_DS_OSC_INT_NT */
/* DESCRIPTION: */
/*   AFE OSC integral control value */
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_OFFSET 0x00000000
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_BITWIDTH 0x00000008
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_MASK 0x000000FF
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_OSC_INT_NT_RESET_VALUE 0x00000000

/* FIELD: CTL_AFE_DS_PROP_ADJ_NT */
/* DESCRIPTION: */
/*   AFE proportional gain value */
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_OFFSET 0x00000008
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_MASK 0x00000F00
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_DLPF_RDREG2_CTL_AFE_DS_PROP_ADJ_NT_RESET_VALUE 0x00000000

/* FIELD: PROP_ADJ_ACCUMULATOR_NT */
/* DESCRIPTION: */
/*   proportional gain accumulator value */
#define TX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_OFFSET 0x0000000C
#define TX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_MASK 0x0000F000
#define TX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_DLPF_RDREG2_PROP_ADJ_ACCUMULATOR_NT_RESET_VALUE 0x00000000

/* FIELD: IIR_LPF_NT */
/* DESCRIPTION: */
/*   IIR LPF value */
#define TX_SSCM_DLPF_RDREG2_IIR_LPF_NT_OFFSET 0x00000010
#define TX_SSCM_DLPF_RDREG2_IIR_LPF_NT_BITWIDTH 0x0000000C
#define TX_SSCM_DLPF_RDREG2_IIR_LPF_NT_MASK 0x0FFF0000
#define TX_SSCM_DLPF_RDREG2_IIR_LPF_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_DLPF_RDREG2_IIR_LPF_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_REG1 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_REG1_ADDR 0x0280022C
#define TX_SSCM_DLPF_REG1_SIZE 32

/* FIELD: DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A */
/* DESCRIPTION: */
/*   1: frozen the integral accumulator */

#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_OFFSET 0x00000000
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_MASK 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_ACCUMULATOR_FROZEN_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_INTEGRAL_POLARITY_INVERT_NT */
/* DESCRIPTION: */
/*   invert the integral accumulator increase/decrease function */
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_OFFSET 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_MASK 0x00000002
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_POLARITY_INVERT_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_CHANGE_MAGNITUDE_NT */
/* DESCRIPTION: */
/*   dlpf change magnitude control */
/*   0 - 1 */
/*   1 - 2 */
/*   2 - 4 */
/*   3 - 8 */
/*   4 - 16 */
/*   5 - 32 */
/*   6 - 64 */
/*   7 - 128 */
/*   8 - 256 */
/*   9 - 512 */
/*   10 - 1024 */
/*   11 - 2048 */
/*   12 to 15 - 4096 */
#define TX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_OFFSET 0x00000002
#define TX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_MASK 0x0000003C
#define TX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_CHANGE_MAGNITUDE_NT_RESET_VALUE 0x00000007

/* FIELD: DLPF_INTEGRAL_GAIN_LOAD_A */
/* DESCRIPTION: */
/*   1: load the integral path gain */
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_OFFSET 0x00000006
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_MASK 0x00000040
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_INTEGRAL_GAIN_LOAD_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_ENABLE_A */
/* DESCRIPTION: */
/*   enable the integral path function */
#define TX_SSCM_DLPF_REG1_DLPF_ENABLE_A_OFFSET 0x00000007
#define TX_SSCM_DLPF_REG1_DLPF_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_ENABLE_A_MASK 0x00000080
#define TX_SSCM_DLPF_REG1_DLPF_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_PROP_POLARITY_INVERT_NT */
/* DESCRIPTION: */
/*   proportional gain control */
#define TX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_OFFSET 0x00000008
#define TX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_MASK 0x00000100
#define TX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_PROP_POLARITY_INVERT_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_OSC_INT_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable the integral path function */
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_OFFSET 0x00000009
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_MASK 0x00000200
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: DLPF_OSC_INT_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   8bit output of the TX syntesizer delta sigma modulated integral path. */
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_OFFSET 0x00000010
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_BITWIDTH 0x00000008
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_MASK 0x00FF0000
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG1_DLPF_OSC_INT_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_REG2 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_REG2_ADDR 0x02800230
#define TX_SSCM_DLPF_REG2_SIZE 32

/* FIELD: PROP_IIR_LPF_FEEDFORWARD_GAIN_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control */
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_OFFSET 0x00000000
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_MASK 0x0000000F
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_FEEDFORWARD_GAIN_NT_RESET_VALUE 0x00000004

/* FIELD: PROP_ADJ_MINIMUM_NT */
/* DESCRIPTION: */
/*   proportional gain control */
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_OFFSET 0x00000004
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_MASK 0x000000F0
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MINIMUM_NT_RESET_VALUE 0x00000001

/* FIELD: PROP_ADJ_MAXIMUM_NT */
/* DESCRIPTION: */
/*   proportional gain control */
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_OFFSET 0x00000008
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_MASK 0x00000F00
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_ADJ_MAXIMUM_NT_RESET_VALUE 0x00000001

/* FIELD: PROP_ADJ_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   bypass value for proportional gain control */
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_OFFSET 0x0000000C
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_BITWIDTH 0x00000004
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_MASK 0x0000F000
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_VALUE_NT_RESET_VALUE 0x00000001

/* FIELD: PROP_ADJ_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable proportional gain control */
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_OFFSET 0x00000010
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_MASK 0x00010000
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_ADJ_BYPASS_A_RESET_VALUE 0x00000001

/* FIELD: PROP_IIR_LPF_LOW_THRESHOLD_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control */
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_OFFSET 0x00000011
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_BITWIDTH 0x00000007
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_MASK 0x00FE0000
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_LOW_THRESHOLD_NT_RESET_VALUE 0x0000000A

/* FIELD: PROP_IIR_LPF_HIGH_THRESHOLD_NT */
/* DESCRIPTION: */
/*   proportional gain IIR filter control */
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_OFFSET 0x00000018
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_BITWIDTH 0x00000007
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_MASK 0x7F000000
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG2_PROP_IIR_LPF_HIGH_THRESHOLD_NT_RESET_VALUE 0x00000025

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_REG3 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_REG3_ADDR 0x02800234
#define TX_SSCM_DLPF_REG3_SIZE 32

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   enable dither function */
#define TX_SSCM_DLPF_REG3_DITHER_ENABLE_A_OFFSET 0x00000000
#define TX_SSCM_DLPF_REG3_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG3_DITHER_ENABLE_A_MASK 0x00000001
#define TX_SSCM_DLPF_REG3_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG3_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   capture the RO data */
#define TX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_OFFSET 0x00000001
#define TX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_MASK 0x00000002
#define TX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG3_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   enable cycling function */
#define TX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_OFFSET 0x00000002
#define TX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_MASK 0x00000004
#define TX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG3_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count */
#define TX_SSCM_DLPF_REG3_CYCLING_MAX_NT_OFFSET 0x00000003
#define TX_SSCM_DLPF_REG3_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define TX_SSCM_DLPF_REG3_CYCLING_MAX_NT_MASK 0x000003F8
#define TX_SSCM_DLPF_REG3_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG3_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count */
#define TX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_OFFSET 0x0000000A
#define TX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define TX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_MASK 0x0001FC00
#define TX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG3_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_DLPF_REG4 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_DLPF_REG4_ADDR 0x02800238
#define TX_SSCM_DLPF_REG4_SIZE 32

/* FIELD: DLPF_ACCUM_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   bypass value for the integral path accumulator */
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_OFFSET 0x00000000
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_BITWIDTH 0x00000016
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_MASK 0x003FFFFF
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: DLPF_ACCUM_BYPASS_A */
/* DESCRIPTION: */
/*   bypass enable the integral path accumulator */
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_OFFSET 0x00000016
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_BITWIDTH 0x00000001
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_MASK 0x00400000
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_DLPF_REG4_DLPF_ACCUM_BYPASS_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG1 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG1_ADDR 0x0280023C
#define TX_SSCM_FRACDIV_REG1_SIZE 32

/* FIELD: FRACN_VALUE_NT */
/* DESCRIPTION: */
/*   FracnN configuration value */
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_BITWIDTH 0x0000001A
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_MASK 0x03FFFFFF
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: FRACN_ENABLE_A */
/* DESCRIPTION: */
/*   FrancN enable */
#define TX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_OFFSET 0x0000001A
#define TX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_MASK 0x04000000
#define TX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG1_FRACN_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: FRACN_VALUE_LOAD_A */
/* DESCRIPTION: */
/*   FrancN value load enable */
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_OFFSET 0x0000001B
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_MASK 0x08000000
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG1_FRACN_VALUE_LOAD_A_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG2 */
/* DESCRIPTION: */
/*   Observability registers for the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG2_ADDR 0x02800240
#define TX_SSCM_FRACDIV_REG2_SIZE 32

/* FIELD: DITHER_ENABLE_A */
/* DESCRIPTION: */
/*   enable dither function */
#define TX_SSCM_FRACDIV_REG2_DITHER_ENABLE_A_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG2_DITHER_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG2_DITHER_ENABLE_A_MASK 0x00000001
#define TX_SSCM_FRACDIV_REG2_DITHER_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG2_DITHER_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: RO_CSR_CAPTURE_A */
/* DESCRIPTION: */
/*   Capture the RO data */
#define TX_SSCM_FRACDIV_REG2_RO_CSR_CAPTURE_A_OFFSET 0x00000001
#define TX_SSCM_FRACDIV_REG2_RO_CSR_CAPTURE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG2_RO_CSR_CAPTURE_A_MASK 0x00000002
#define TX_SSCM_FRACDIV_REG2_RO_CSR_CAPTURE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG2_RO_CSR_CAPTURE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_ENABLE_A */
/* DESCRIPTION: */
/*   enable cycling function */
#define TX_SSCM_FRACDIV_REG2_CYCLING_ENABLE_A_OFFSET 0x00000002
#define TX_SSCM_FRACDIV_REG2_CYCLING_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG2_CYCLING_ENABLE_A_MASK 0x00000004
#define TX_SSCM_FRACDIV_REG2_CYCLING_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG2_CYCLING_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: CYCLING_MAX_NT */
/* DESCRIPTION: */
/*   cycling max count */
#define TX_SSCM_FRACDIV_REG2_CYCLING_MAX_NT_OFFSET 0x00000003
#define TX_SSCM_FRACDIV_REG2_CYCLING_MAX_NT_BITWIDTH 0x00000007
#define TX_SSCM_FRACDIV_REG2_CYCLING_MAX_NT_MASK 0x000003F8
#define TX_SSCM_FRACDIV_REG2_CYCLING_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG2_CYCLING_MAX_NT_RESET_VALUE 0x00000000

/* FIELD: CYCLING_SEQ_NT */
/* DESCRIPTION: */
/*   cycling seq count */
#define TX_SSCM_FRACDIV_REG2_CYCLING_SEQ_NT_OFFSET 0x0000000A
#define TX_SSCM_FRACDIV_REG2_CYCLING_SEQ_NT_BITWIDTH 0x00000007
#define TX_SSCM_FRACDIV_REG2_CYCLING_SEQ_NT_MASK 0x0001FC00
#define TX_SSCM_FRACDIV_REG2_CYCLING_SEQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG2_CYCLING_SEQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG3 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG3_ADDR 0x02800244
#define TX_SSCM_FRACDIV_REG3_SIZE 32

/* FIELD: FRACN_DSM_OUT_NT */
/* DESCRIPTION: */
/*   DSM output */
#define TX_SSCM_FRACDIV_REG3_FRACN_DSM_OUT_NT_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG3_FRACN_DSM_OUT_NT_BITWIDTH 0x0000000C
#define TX_SSCM_FRACDIV_REG3_FRACN_DSM_OUT_NT_MASK 0x00000FFF
#define TX_SSCM_FRACDIV_REG3_FRACN_DSM_OUT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_FRACDIV_REG3_FRACN_DSM_OUT_NT_RESET_VALUE 0x00000000

/* FIELD: SSCM_FRACN_NT */
/* DESCRIPTION: */
/*   FracN control value to AFE */
#define TX_SSCM_FRACDIV_REG3_SSCM_FRACN_NT_OFFSET 0x00000010
#define TX_SSCM_FRACDIV_REG3_SSCM_FRACN_NT_BITWIDTH 0x0000000C
#define TX_SSCM_FRACDIV_REG3_SSCM_FRACN_NT_MASK 0x0FFF0000
#define TX_SSCM_FRACDIV_REG3_SSCM_FRACN_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_SSCM_FRACDIV_REG3_SSCM_FRACN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG4 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG4_ADDR 0x02800248
#define TX_SSCM_FRACDIV_REG4_SIZE 32

/* FIELD: FRACN_BYPASS_A */
/* DESCRIPTION: */
/*   FrancN bypass enable */
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_A_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_A_MASK 0x00000001
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_A_RESET_VALUE 0x00000000

/* FIELD: FRACN_BYPASS_VALUE_NT */
/* DESCRIPTION: */
/*   12bit PI accumulator update code. 3x+ higher frequency clock in the AFE to manage asynchronous tranistion.  */
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_VALUE_NT_OFFSET 0x00000001
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_VALUE_NT_BITWIDTH 0x0000000C
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_VALUE_NT_MASK 0x00001FFE
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG4_FRACN_BYPASS_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG5 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG5_ADDR 0x0280024C
#define TX_SSCM_FRACDIV_REG5_SIZE 32

/* FIELD: SSC_MAX_VALUE_NT */
/* DESCRIPTION: */
/*   ssc max configuration value */
#define TX_SSCM_FRACDIV_REG5_SSC_MAX_VALUE_NT_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG5_SSC_MAX_VALUE_NT_BITWIDTH 0x0000001A
#define TX_SSCM_FRACDIV_REG5_SSC_MAX_VALUE_NT_MASK 0x03FFFFFF
#define TX_SSCM_FRACDIV_REG5_SSC_MAX_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG5_SSC_MAX_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG6 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG6_ADDR 0x02800250
#define TX_SSCM_FRACDIV_REG6_SIZE 32

/* FIELD: SSC_MIN_VALUE_NT */
/* DESCRIPTION: */
/*   ssc min configuration value */
#define TX_SSCM_FRACDIV_REG6_SSC_MIN_VALUE_NT_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG6_SSC_MIN_VALUE_NT_BITWIDTH 0x0000001A
#define TX_SSCM_FRACDIV_REG6_SSC_MIN_VALUE_NT_MASK 0x03FFFFFF
#define TX_SSCM_FRACDIV_REG6_SSC_MIN_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG6_SSC_MIN_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG7 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG7_ADDR 0x02800254
#define TX_SSCM_FRACDIV_REG7_SIZE 32

/* FIELD: SSC_STEP_VALUE_NT */
/* DESCRIPTION: */
/*   ssc step configuration value */
#define TX_SSCM_FRACDIV_REG7_SSC_STEP_VALUE_NT_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG7_SSC_STEP_VALUE_NT_BITWIDTH 0x0000001A
#define TX_SSCM_FRACDIV_REG7_SSC_STEP_VALUE_NT_MASK 0x03FFFFFF
#define TX_SSCM_FRACDIV_REG7_SSC_STEP_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG7_SSC_STEP_VALUE_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG8 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG8_ADDR 0x02800258
#define TX_SSCM_FRACDIV_REG8_SIZE 32

/* FIELD: SSC_ENABLE_A */
/* DESCRIPTION: */
/*   ssc max configuration value */
#define TX_SSCM_FRACDIV_REG8_SSC_ENABLE_A_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG8_SSC_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG8_SSC_ENABLE_A_MASK 0x00000001
#define TX_SSCM_FRACDIV_REG8_SSC_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG8_SSC_ENABLE_A_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_SSCM_FRACDIV_REG9 */
/* DESCRIPTION: */
/*   Configuration of the sub-sampling clock multiplier DBE loop filter. */
/* ------------------------------------- */
#define TX_SSCM_FRACDIV_REG9_ADDR 0x0280025C
#define TX_SSCM_FRACDIV_REG9_SIZE 32

/* FIELD: BIT_SLIP_ENABLE_A */
/* DESCRIPTION: */
/*   bit slip enable */
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_ENABLE_A_OFFSET 0x00000000
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_ENABLE_A_BITWIDTH 0x00000001
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_ENABLE_A_MASK 0x00000001
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_ENABLE_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_ENABLE_A_RESET_VALUE 0x00000000

/* FIELD: BIT_SLIP_VALUE_NT */
/* DESCRIPTION: */
/*   bit slip value */
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_VALUE_NT_OFFSET 0x00000001
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_VALUE_NT_BITWIDTH 0x0000000D
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_VALUE_NT_MASK 0x00003FFE
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: BIT_SLIP_CYCLES_NT */
/* DESCRIPTION: */
/*   bit slip cycles */
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_CYCLES_NT_OFFSET 0x0000000E
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_CYCLES_NT_BITWIDTH 0x00000005
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_CYCLES_NT_MASK 0x0007C000
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_CYCLES_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_SSCM_FRACDIV_REG9_BIT_SLIP_CYCLES_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_STAT */
/* DESCRIPTION: */
/*   Observability register for interface */
/* ------------------------------------- */
#define TX_STAT_ADDR 0x02800260
#define TX_STAT_SIZE 32

/* FIELD: OCTL_CK_TX_BLOCK_DATA_ENA */
/* DESCRIPTION: */
/*   Register copy of octl_ck_tx_block_data_ena */
#define TX_STAT_OCTL_CK_TX_BLOCK_DATA_ENA_OFFSET 0x00000000
#define TX_STAT_OCTL_CK_TX_BLOCK_DATA_ENA_BITWIDTH 0x00000001
#define TX_STAT_OCTL_CK_TX_BLOCK_DATA_ENA_MASK 0x00000001
#define TX_STAT_OCTL_CK_TX_BLOCK_DATA_ENA_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_CK_TX_BLOCK_DATA_ENA_RESET_VALUE 0x00000000

/* FIELD: OCTL_TX_FIR_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_tx_fir_ack */
#define TX_STAT_OCTL_TX_FIR_ACK_OFFSET 0x00000001
#define TX_STAT_OCTL_TX_FIR_ACK_BITWIDTH 0x00000001
#define TX_STAT_OCTL_TX_FIR_ACK_MASK 0x00000002
#define TX_STAT_OCTL_TX_FIR_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_TX_FIR_ACK_RESET_VALUE 0x00000000

/* FIELD: OCTL_LOOPBACK_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_loopback_ack */
#define TX_STAT_OCTL_LOOPBACK_ACK_OFFSET 0x00000002
#define TX_STAT_OCTL_LOOPBACK_ACK_BITWIDTH 0x00000001
#define TX_STAT_OCTL_LOOPBACK_ACK_MASK 0x00000004
#define TX_STAT_OCTL_LOOPBACK_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_LOOPBACK_ACK_RESET_VALUE 0x00000000

/* FIELD: OCTL_PCIE_TX_RXDET_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_pcie_tx_rxdet_ack */
#define TX_STAT_OCTL_PCIE_TX_RXDET_ACK_OFFSET 0x00000003
#define TX_STAT_OCTL_PCIE_TX_RXDET_ACK_BITWIDTH 0x00000001
#define TX_STAT_OCTL_PCIE_TX_RXDET_ACK_MASK 0x00000008
#define TX_STAT_OCTL_PCIE_TX_RXDET_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_PCIE_TX_RXDET_ACK_RESET_VALUE 0x00000000

/* FIELD: OCTL_PCIE_TX_RXDET_RESULT */
/* DESCRIPTION: */
/*   Register copy of octl_pcie_tx_rxdet_result */
#define TX_STAT_OCTL_PCIE_TX_RXDET_RESULT_OFFSET 0x00000004
#define TX_STAT_OCTL_PCIE_TX_RXDET_RESULT_BITWIDTH 0x00000001
#define TX_STAT_OCTL_PCIE_TX_RXDET_RESULT_MASK 0x00000010
#define TX_STAT_OCTL_PCIE_TX_RXDET_RESULT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_PCIE_TX_RXDET_RESULT_RESET_VALUE 0x00000000

/* FIELD: OCTL_PCIE_TX_LEVEL_ACK */
/* DESCRIPTION: */
/*   Register copy of octl_pcie_tx_level_ack */
#define TX_STAT_OCTL_PCIE_TX_LEVEL_ACK_OFFSET 0x00000005
#define TX_STAT_OCTL_PCIE_TX_LEVEL_ACK_BITWIDTH 0x00000001
#define TX_STAT_OCTL_PCIE_TX_LEVEL_ACK_MASK 0x00000020
#define TX_STAT_OCTL_PCIE_TX_LEVEL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_OCTL_PCIE_TX_LEVEL_ACK_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_STATE_RATE_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_tx_state_rate_nt */
#define TX_STAT_ICTL_TX_STATE_RATE_NT_OFFSET 0x00000006
#define TX_STAT_ICTL_TX_STATE_RATE_NT_BITWIDTH 0x00000003
#define TX_STAT_ICTL_TX_STATE_RATE_NT_MASK 0x000001C0
#define TX_STAT_ICTL_TX_STATE_RATE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_ICTL_TX_STATE_RATE_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_TRAINING_MODE_NT */
/* DESCRIPTION: */
/*   Register copy of ictl_tx_training_mode_nt */
#define TX_STAT_ICTL_TX_TRAINING_MODE_NT_OFFSET 0x00000009
#define TX_STAT_ICTL_TX_TRAINING_MODE_NT_BITWIDTH 0x00000003
#define TX_STAT_ICTL_TX_TRAINING_MODE_NT_MASK 0x00000E00
#define TX_STAT_ICTL_TX_TRAINING_MODE_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_ICTL_TX_TRAINING_MODE_NT_RESET_VALUE 0x00000000

/* FIELD: ICTL_TX_BYPASS_ENA */
/* DESCRIPTION: */
/*   Register copy of ictl_tx_bypass_ena */
#define TX_STAT_ICTL_TX_BYPASS_ENA_OFFSET 0x0000000C
#define TX_STAT_ICTL_TX_BYPASS_ENA_BITWIDTH 0x00000001
#define TX_STAT_ICTL_TX_BYPASS_ENA_MASK 0x00001000
#define TX_STAT_ICTL_TX_BYPASS_ENA_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_ICTL_TX_BYPASS_ENA_RESET_VALUE 0x00000000

/* FIELD: IRST_TX_BA */
/* DESCRIPTION: */
/*   Register copy of irst_tx_ba */
#define TX_STAT_IRST_TX_BA_OFFSET 0x0000000D
#define TX_STAT_IRST_TX_BA_BITWIDTH 0x00000001
#define TX_STAT_IRST_TX_BA_MASK 0x00002000
#define TX_STAT_IRST_TX_BA_ACCESS JUPITER_CSR_READ_ONLY
#define TX_STAT_IRST_TX_BA_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_TERMCAL */
/* DESCRIPTION: */
/*   Configuration of AFE Tx driver termination calibration bias. */
/* ------------------------------------- */
#define TX_TERMCAL_ADDR 0x02800264
#define TX_TERMCAL_SIZE 32

/* FIELD: BIAS_ADJ_NT */
/* DESCRIPTION: */
/*   afe tx termination calibration bias adj */
/*   11 - +25% */
/*   10 - +12.5% */
/*   01 - Nominal */
/*   00 - -12.5% */
#define TX_TERMCAL_BIAS_ADJ_NT_OFFSET 0x00000000
#define TX_TERMCAL_BIAS_ADJ_NT_BITWIDTH 0x00000002
#define TX_TERMCAL_BIAS_ADJ_NT_MASK 0x00000003
#define TX_TERMCAL_BIAS_ADJ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_TERMCAL_BIAS_ADJ_NT_RESET_VALUE 0x00000001

/* ------------------------------------- */
/* REG: TX_TXDETECTRX */
/* DESCRIPTION: */
/*   Configuration and Overrides associated with the AFE Tx driver Tx detect Rx functionality. */
/* ------------------------------------- */
#define TX_TXDETECTRX_ADDR 0x02800268
#define TX_TXDETECTRX_SIZE 32

/* FIELD: THRESH_NT */
/* DESCRIPTION: */
/*   programs the threshold level fot the tx detect rx functionality.  */
/*   11 - Max threshold */
/*   00 - Min threshold */
#define TX_TXDETECTRX_THRESH_NT_OFFSET 0x00000000
#define TX_TXDETECTRX_THRESH_NT_BITWIDTH 0x00000003
#define TX_TXDETECTRX_THRESH_NT_MASK 0x00000007
#define TX_TXDETECTRX_THRESH_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_TXDETECTRX_THRESH_NT_RESET_VALUE 0x00000005

/* ------------------------------------- */
/* REG: TX_VCO */
/* DESCRIPTION: */
/*   Fast simulation control */
/* ------------------------------------- */
#define TX_VCO_ADDR 0x0280026C
#define TX_VCO_SIZE 32

/* FIELD: FREQ_NT */
/* DESCRIPTION: */
/*   Specifies frequency for TX PLL in fast sim mode.  */
#define TX_VCO_FREQ_NT_OFFSET 0x00000000
#define TX_VCO_FREQ_NT_BITWIDTH 0x00000010
#define TX_VCO_FREQ_NT_MASK 0x0000FFFF
#define TX_VCO_FREQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_FREQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_RDREG1 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_RDREG1_ADDR 0x02800270
#define TX_VCO_ADAPT_RDREG1_SIZE 32

/* FIELD: REF_COUNTER_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration reference clock counter */
#define TX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_MASK 0x0000FFFF
#define TX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG1_REF_COUNTER_NT_RESET_VALUE 0x00000000

/* FIELD: VCO_COUNTER_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration target clock counter */
#define TX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_MASK 0xFFFF0000
#define TX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG1_VCO_COUNTER_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_RDREG2 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_RDREG2_ADDR 0x02800274
#define TX_VCO_ADAPT_RDREG2_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX VCO oscillator calibrated value */
#define TX_VCO_ADAPT_RDREG2_DS_OSC_CAL_OFFSET 0x00000000
#define TX_VCO_ADAPT_RDREG2_DS_OSC_CAL_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_RDREG2_DS_OSC_CAL_MASK 0x000000FF
#define TX_VCO_ADAPT_RDREG2_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG2_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_ACK_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration acknowledge */
/*   0: no ACK */
/*   1: finished */
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_OFFSET 0x00000008
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_MASK 0x00000100
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_ACK_NT_RESET_VALUE 0x00000000

/* FIELD: ACK */
/* DESCRIPTION: */
/*   Calibration FSM done indicator */
#define TX_VCO_ADAPT_RDREG2_ACK_OFFSET 0x00000009
#define TX_VCO_ADAPT_RDREG2_ACK_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_RDREG2_ACK_MASK 0x00000200
#define TX_VCO_ADAPT_RDREG2_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG2_ACK_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_RESULT_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration resut. Format Q4.12 */
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_MASK 0xFFFF0000
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_ACCESS JUPITER_CSR_READ_ONLY
#define TX_VCO_ADAPT_RDREG2_FREQ_MEASURE_RESULT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG1 */
/* DESCRIPTION: */
/*   Overrides for the TX direct synthesizer. */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG1_ADDR 0x02800278
#define TX_VCO_ADAPT_REG1_SIZE 32

/* FIELD: DS_OSC_CAL_NT */
/* DESCRIPTION: */
/*   8bit TX direct synthesizer center frequency calibration code */
/*   11111111 - Max center frequency */
/*   00000000 - Min center frequency */
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_MASK 0x000000FF
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_NT_RESET_VALUE 0x00000000

/* FIELD: BYPASS_ENA_A */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - bypass the TX VCO frequency calibration */
#define TX_VCO_ADAPT_REG1_BYPASS_ENA_A_OFFSET 0x00000008
#define TX_VCO_ADAPT_REG1_BYPASS_ENA_A_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG1_BYPASS_ENA_A_MASK 0x00000100
#define TX_VCO_ADAPT_REG1_BYPASS_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG1_BYPASS_ENA_A_RESET_VALUE 0x00000000

/* FIELD: DS_OSC_CAL_CAP_NT */
/* DESCRIPTION: */
/*   4bit TX direct synthesizer cap center frequency calibration code */
/*   1111 - Max center frequency */
/*   0000 - Min center frequency */
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_OFFSET 0x00000009
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_BITWIDTH 0x00000003
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_MASK 0x00000E00
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_CAP_NT_RESET_VALUE 0x00000000

/* FIELD: DS_OSC_CAL_ENA_NT */
/* DESCRIPTION: */
/*   Enables TX direct synthesizer calibration mode in the oscillator.  */
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_OFFSET 0x0000000C
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_MASK 0x00001000
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG1_DS_OSC_CAL_ENA_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG2 */
/* DESCRIPTION: */
/*   Overrides for the TX direct synthesizer. */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG2_ADDR 0x0280027C
#define TX_VCO_ADAPT_REG2_SIZE 32

/* FIELD: FREQ_TARGET_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration target. Format Q4.12 */
#define TX_VCO_ADAPT_REG2_FREQ_TARGET_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG2_FREQ_TARGET_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_REG2_FREQ_TARGET_NT_MASK 0x0000FFFF
#define TX_VCO_ADAPT_REG2_FREQ_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG2_FREQ_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: FREQ_MEASURE_REQ_A */
/* DESCRIPTION: */
/*   TX VCO frequency calibration request */
/*   0: no request */
/*   1: requst */
#define TX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_OFFSET 0x00000010
#define TX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_MASK 0x00010000
#define TX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG2_FREQ_MEASURE_REQ_A_RESET_VALUE 0x00000000

/* FIELD: TIMING_WINDOW_NT */
/* DESCRIPTION: */
/*   TX VCO frequency calibration timing window */
/*   15: 32768 cycles */
/*   ... */
/*   1: 2 cycles */
/*   0: 1 cycle */
#define TX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_OFFSET 0x00000011
#define TX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_BITWIDTH 0x00000004
#define TX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_MASK 0x001E0000
#define TX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG2_TIMING_WINDOW_NT_RESET_VALUE 0x00000009

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG3 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG3_ADDR 0x02800280
#define TX_VCO_ADAPT_REG3_SIZE 32

/* FIELD: REQ_A */
/* DESCRIPTION: */
/*   Calibration start request signal */
#define TX_VCO_ADAPT_REG3_REQ_A_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG3_REQ_A_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_REQ_A_MASK 0x00000001
#define TX_VCO_ADAPT_REG3_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_REQ_A_RESET_VALUE 0x00000000

/* FIELD: LOAD_ONLY_NT */
/* DESCRIPTION: */
/*   Load only indicator. If asserted when calibration is run, will load the start value to the output and complete without performing calibration */
#define TX_VCO_ADAPT_REG3_LOAD_ONLY_NT_OFFSET 0x00000001
#define TX_VCO_ADAPT_REG3_LOAD_ONLY_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_LOAD_ONLY_NT_MASK 0x00000002
#define TX_VCO_ADAPT_REG3_LOAD_ONLY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_LOAD_ONLY_NT_RESET_VALUE 0x00000000

/* FIELD: CHOP_EN_NT */
/* DESCRIPTION: */
/*   Chop enable. 0 - Chopping not enabled. 1 - Chopping enabled. FSM will run twice, asserting chop signal second time, and output the average between the two runs */
#define TX_VCO_ADAPT_REG3_CHOP_EN_NT_OFFSET 0x00000002
#define TX_VCO_ADAPT_REG3_CHOP_EN_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_CHOP_EN_NT_MASK 0x00000004
#define TX_VCO_ADAPT_REG3_CHOP_EN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_CHOP_EN_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_TARGET_NT */
/* DESCRIPTION: */
/*   Deriv target for minima detector */
#define TX_VCO_ADAPT_REG3_DERIV_TARGET_NT_OFFSET 0x00000003
#define TX_VCO_ADAPT_REG3_DERIV_TARGET_NT_BITWIDTH 0x00000005
#define TX_VCO_ADAPT_REG3_DERIV_TARGET_NT_MASK 0x000000F8
#define TX_VCO_ADAPT_REG3_DERIV_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_DERIV_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_GAIN_NT */
/* DESCRIPTION: */
/*   Deriv gain for minima detector */
#define TX_VCO_ADAPT_REG3_DERIV_GAIN_NT_OFFSET 0x00000008
#define TX_VCO_ADAPT_REG3_DERIV_GAIN_NT_BITWIDTH 0x00000004
#define TX_VCO_ADAPT_REG3_DERIV_GAIN_NT_MASK 0x00000F00
#define TX_VCO_ADAPT_REG3_DERIV_GAIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_DERIV_GAIN_NT_RESET_VALUE 0x00000000

/* FIELD: NOCHANGE_DECAY_ENA_NT */
/* DESCRIPTION: */
/*   Nochange decay enable for minima detector */
#define TX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_OFFSET 0x0000000C
#define TX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_MASK 0x00001000
#define TX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_NOCHANGE_DECAY_ENA_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGN_MAG_NT */
/* DESCRIPTION: */
/*   Output signed control. If signed, 0 - 2's complement, 1 - sign and magnitude */
#define TX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_OFFSET 0x0000000D
#define TX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_MASK 0x00002000
#define TX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_OUT_SIGN_MAG_NT_RESET_VALUE 0x00000000

/* FIELD: OUT_SIGNED_NT */
/* DESCRIPTION: */
/*   Output signed/unsigned select. 0 - Unsigned, 1 - Signed */
#define TX_VCO_ADAPT_REG3_OUT_SIGNED_NT_OFFSET 0x0000000E
#define TX_VCO_ADAPT_REG3_OUT_SIGNED_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_OUT_SIGNED_NT_MASK 0x00004000
#define TX_VCO_ADAPT_REG3_OUT_SIGNED_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_OUT_SIGNED_NT_RESET_VALUE 0x00000000

/* FIELD: POLARITY_NT */
/* DESCRIPTION: */
/*   Input error signal polarity control. 0 - Normal polarity, 1 - Inverted polarity. Bit0= d90, Bit1 = d0, Bit2 = iq */
#define TX_VCO_ADAPT_REG3_POLARITY_NT_OFFSET 0x0000000F
#define TX_VCO_ADAPT_REG3_POLARITY_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG3_POLARITY_NT_MASK 0x00008000
#define TX_VCO_ADAPT_REG3_POLARITY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_POLARITY_NT_RESET_VALUE 0x00000000

/* FIELD: DERIV_NUM_CROSS_TARGET_NT */
/* DESCRIPTION: */
/*   Num cross target value for minimum detector */
#define TX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_BITWIDTH 0x00000005
#define TX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_MASK 0x001F0000
#define TX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_DERIV_NUM_CROSS_TARGET_NT_RESET_VALUE 0x00000000

/* FIELD: STOP_HI_NT */
/* DESCRIPTION: */
/*   When asserted, FSM will increment the output value if the last direction change was negative */
#define TX_VCO_ADAPT_REG3_STOP_HI_NT_OFFSET 0x00000015
#define TX_VCO_ADAPT_REG3_STOP_HI_NT_BITWIDTH 0x00000002
#define TX_VCO_ADAPT_REG3_STOP_HI_NT_MASK 0x00600000
#define TX_VCO_ADAPT_REG3_STOP_HI_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG3_STOP_HI_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG4 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG4_ADDR 0x02800284
#define TX_VCO_ADAPT_REG4_SIZE 32

/* FIELD: START_VALUE_NT */
/* DESCRIPTION: */
/*   Starting value for output value */
#define TX_VCO_ADAPT_REG4_START_VALUE_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG4_START_VALUE_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG4_START_VALUE_NT_MASK 0x000000FF
#define TX_VCO_ADAPT_REG4_START_VALUE_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG4_START_VALUE_NT_RESET_VALUE 0x00000000

/* FIELD: INIT_STEP_NT */
/* DESCRIPTION: */
/*   Initial step size to use in coarse mode. */
#define TX_VCO_ADAPT_REG4_INIT_STEP_NT_OFFSET 0x00000008
#define TX_VCO_ADAPT_REG4_INIT_STEP_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG4_INIT_STEP_NT_MASK 0x0000FF00
#define TX_VCO_ADAPT_REG4_INIT_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG4_INIT_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: MAX_NT */
/* DESCRIPTION: */
/*   Output value maximum */
#define TX_VCO_ADAPT_REG4_MAX_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_REG4_MAX_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG4_MAX_NT_MASK 0x00FF0000
#define TX_VCO_ADAPT_REG4_MAX_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG4_MAX_NT_RESET_VALUE 0x000000FF

/* FIELD: MIN_NT */
/* DESCRIPTION: */
/*   Output value minimum */
#define TX_VCO_ADAPT_REG4_MIN_NT_OFFSET 0x00000018
#define TX_VCO_ADAPT_REG4_MIN_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG4_MIN_NT_MASK 0xFF000000
#define TX_VCO_ADAPT_REG4_MIN_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG4_MIN_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG5 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG5_ADDR 0x02800288
#define TX_VCO_ADAPT_REG5_SIZE 32

/* FIELD: MAX_ITER_NT */
/* DESCRIPTION: */
/*   Maximum number of iterations FSM will run. If this number is reached, FSM will report done */
#define TX_VCO_ADAPT_REG5_MAX_ITER_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG5_MAX_ITER_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_REG5_MAX_ITER_NT_MASK 0x0000FFFF
#define TX_VCO_ADAPT_REG5_MAX_ITER_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG5_MAX_ITER_NT_RESET_VALUE 0x00000064

/* FIELD: UPDATE_DELAY_NT */
/* DESCRIPTION: */
/*   Number of clock cycles FSM will wait after updating AFE value */
#define TX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_BITWIDTH 0x00000010
#define TX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_MASK 0xFFFF0000
#define TX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG5_UPDATE_DELAY_NT_RESET_VALUE 0x0000000A

/* ------------------------------------- */
/* REG: TX_VCO_ADAPT_REG6 */
/* DESCRIPTION: */
/*   Control / Observability registers for the VCO adapt calibration block */
/* ------------------------------------- */
#define TX_VCO_ADAPT_REG6_ADDR 0x0280028C
#define TX_VCO_ADAPT_REG6_SIZE 32

/* FIELD: LMS_MU1_NT */
/* DESCRIPTION: */
/*   Mu value used in coarse mode */
#define TX_VCO_ADAPT_REG6_LMS_MU1_NT_OFFSET 0x00000000
#define TX_VCO_ADAPT_REG6_LMS_MU1_NT_BITWIDTH 0x00000005
#define TX_VCO_ADAPT_REG6_LMS_MU1_NT_MASK 0x0000001F
#define TX_VCO_ADAPT_REG6_LMS_MU1_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_LMS_MU1_NT_RESET_VALUE 0x00000006

/* FIELD: LMS_MU1_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in coarse mode */
#define TX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_OFFSET 0x00000005
#define TX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_MASK 0x00000020
#define TX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_LMS_MU1_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: LMS_MU2_NT */
/* DESCRIPTION: */
/*   Mu value used in fine mode */
#define TX_VCO_ADAPT_REG6_LMS_MU2_NT_OFFSET 0x00000008
#define TX_VCO_ADAPT_REG6_LMS_MU2_NT_BITWIDTH 0x00000005
#define TX_VCO_ADAPT_REG6_LMS_MU2_NT_MASK 0x00001F00
#define TX_VCO_ADAPT_REG6_LMS_MU2_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_LMS_MU2_NT_RESET_VALUE 0x00000003

/* FIELD: LMS_MU2_DIR_NT */
/* DESCRIPTION: */
/*   Mu direction used in fine mode */
#define TX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_OFFSET 0x0000000D
#define TX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_BITWIDTH 0x00000001
#define TX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_MASK 0x00002000
#define TX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_LMS_MU2_DIR_NT_RESET_VALUE 0x00000001

/* FIELD: STEP_NT */
/* DESCRIPTION: */
/*   Step size to use in fine mode. */
#define TX_VCO_ADAPT_REG6_STEP_NT_OFFSET 0x00000010
#define TX_VCO_ADAPT_REG6_STEP_NT_BITWIDTH 0x00000008
#define TX_VCO_ADAPT_REG6_STEP_NT_MASK 0x00FF0000
#define TX_VCO_ADAPT_REG6_STEP_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_STEP_NT_RESET_VALUE 0x00000000

/* FIELD: BOUNCE_TARGET_NT */
/* DESCRIPTION: */
/*   Number of consecutive direction changes that need to occur for lock to occur */
#define TX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_OFFSET 0x00000018
#define TX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_BITWIDTH 0x00000005
#define TX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_MASK 0x1F000000
#define TX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VCO_ADAPT_REG6_BOUNCE_TARGET_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VREF */
/* DESCRIPTION: */
/*   Configuration register associated with the AFE Tx reference voltage generator. */
/* ------------------------------------- */
#define TX_VREF_ADDR 0x02800290
#define TX_VREF_SIZE 32

/* FIELD: SELECT_NT */
/* DESCRIPTION: */
/*   Selects voltage reference for the tx bias and regulators */
/*   1 - Supply voltage reference */
/*   0 - Central bandgap reference */
#define TX_VREF_SELECT_NT_OFFSET 0x00000000
#define TX_VREF_SELECT_NT_BITWIDTH 0x00000001
#define TX_VREF_SELECT_NT_MASK 0x00000001
#define TX_VREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREF_SELECT_NT_RESET_VALUE 0x00000000

/* FIELD: BITCK_SELECT_NT */
/* DESCRIPTION: */
/*   Select whether regulator is slaved to vddl supply or bias */
/*   1 - Referenced to pa_vddl */
/*   0 - Referenced to the bandgap */
#define TX_VREF_BITCK_SELECT_NT_OFFSET 0x00000001
#define TX_VREF_BITCK_SELECT_NT_BITWIDTH 0x00000001
#define TX_VREF_BITCK_SELECT_NT_MASK 0x00000002
#define TX_VREF_BITCK_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREF_BITCK_SELECT_NT_RESET_VALUE 0x00000001

/* FIELD: HSREF_SELECT_NT */
/* DESCRIPTION: */
/*   Select whether regulator is slaved to vddl supply or bias */
/*   1 - Referenced to pa_vddl */
/*   0 - Referenced to the bandgap */
#define TX_VREF_HSREF_SELECT_NT_OFFSET 0x00000002
#define TX_VREF_HSREF_SELECT_NT_BITWIDTH 0x00000001
#define TX_VREF_HSREF_SELECT_NT_MASK 0x00000004
#define TX_VREF_HSREF_SELECT_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREF_HSREF_SELECT_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TX_VREG */
/* DESCRIPTION: */
/*   Configuration register associated with the voltage regulators in the AFE Tx partition. */
/* ------------------------------------- */
#define TX_VREG_ADDR 0x02800294
#define TX_VREG_SIZE 32

/* FIELD: BITCK_NT */
/* DESCRIPTION: */
/*   Bitck regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define TX_VREG_BITCK_NT_OFFSET 0x00000000
#define TX_VREG_BITCK_NT_BITWIDTH 0x00000004
#define TX_VREG_BITCK_NT_MASK 0x0000000F
#define TX_VREG_BITCK_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREG_BITCK_NT_RESET_VALUE 0x00000006

/* FIELD: HSREF_NT */
/* DESCRIPTION: */
/*   Hsref regulator set point */
/*   1111 - 950mV nominal */
/*   0000 - 650mV nominal */
#define TX_VREG_HSREF_NT_OFFSET 0x00000004
#define TX_VREG_HSREF_NT_BITWIDTH 0x00000004
#define TX_VREG_HSREF_NT_MASK 0x000000F0
#define TX_VREG_HSREF_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREG_HSREF_NT_RESET_VALUE 0x00000006

/* FIELD: HSREF_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define TX_VREG_HSREF_SCBYPASS_NT_OFFSET 0x00000008
#define TX_VREG_HSREF_SCBYPASS_NT_BITWIDTH 0x00000001
#define TX_VREG_HSREF_SCBYPASS_NT_MASK 0x00000100
#define TX_VREG_HSREF_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREG_HSREF_SCBYPASS_NT_RESET_VALUE 0x00000000

/* FIELD: BITCK_SCBYPASS_NT */
/* DESCRIPTION: */
/*   0 - Normal operation */
/*   1 - Bypass the switched capacitor voltage boost */
#define TX_VREG_BITCK_SCBYPASS_NT_OFFSET 0x00000009
#define TX_VREG_BITCK_SCBYPASS_NT_BITWIDTH 0x00000001
#define TX_VREG_BITCK_SCBYPASS_NT_MASK 0x00000200
#define TX_VREG_BITCK_SCBYPASS_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TX_VREG_BITCK_SCBYPASS_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE0 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE0_ADDR 0x02800298
#define TXCALSTORE0_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE0_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE0_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE0_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE0_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE0_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE0_VALID_OFFSET 0x00000008
#define TXCALSTORE0_VALID_BITWIDTH 0x00000001
#define TXCALSTORE0_VALID_MASK 0x00000100
#define TXCALSTORE0_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE0_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE0_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE0_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE0_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE0_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE0_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE1 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE1_ADDR 0x0280029C
#define TXCALSTORE1_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE1_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE1_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE1_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE1_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE1_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE1_VALID_OFFSET 0x00000008
#define TXCALSTORE1_VALID_BITWIDTH 0x00000001
#define TXCALSTORE1_VALID_MASK 0x00000100
#define TXCALSTORE1_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE1_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE1_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE1_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE1_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE1_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE1_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE2 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE2_ADDR 0x028002A0
#define TXCALSTORE2_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE2_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE2_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE2_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE2_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE2_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE2_VALID_OFFSET 0x00000008
#define TXCALSTORE2_VALID_BITWIDTH 0x00000001
#define TXCALSTORE2_VALID_MASK 0x00000100
#define TXCALSTORE2_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE2_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE2_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE2_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE2_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE2_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE2_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE3 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE3_ADDR 0x028002A4
#define TXCALSTORE3_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE3_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE3_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE3_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE3_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE3_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE3_VALID_OFFSET 0x00000008
#define TXCALSTORE3_VALID_BITWIDTH 0x00000001
#define TXCALSTORE3_VALID_MASK 0x00000100
#define TXCALSTORE3_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE3_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE3_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE3_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE3_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE3_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE3_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE4 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE4_ADDR 0x028002A8
#define TXCALSTORE4_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE4_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE4_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE4_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE4_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE4_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE4_VALID_OFFSET 0x00000008
#define TXCALSTORE4_VALID_BITWIDTH 0x00000001
#define TXCALSTORE4_VALID_MASK 0x00000100
#define TXCALSTORE4_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE4_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE4_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE4_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE4_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE4_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE4_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE5 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE5_ADDR 0x028002AC
#define TXCALSTORE5_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE5_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE5_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE5_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE5_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE5_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE5_VALID_OFFSET 0x00000008
#define TXCALSTORE5_VALID_BITWIDTH 0x00000001
#define TXCALSTORE5_VALID_MASK 0x00000100
#define TXCALSTORE5_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE5_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE5_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE5_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE5_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE5_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE5_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE6 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE6_ADDR 0x028002B0
#define TXCALSTORE6_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE6_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE6_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE6_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE6_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE6_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE6_VALID_OFFSET 0x00000008
#define TXCALSTORE6_VALID_BITWIDTH 0x00000001
#define TXCALSTORE6_VALID_MASK 0x00000100
#define TXCALSTORE6_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE6_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE6_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE6_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE6_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE6_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE6_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTORE7 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTORE7_ADDR 0x028002B4
#define TXCALSTORE7_SIZE 32

/* FIELD: DS_OSC_CAL */
/* DESCRIPTION: */
/*   TX oscillator coarse calibrated value */
#define TXCALSTORE7_DS_OSC_CAL_OFFSET 0x00000000
#define TXCALSTORE7_DS_OSC_CAL_BITWIDTH 0x00000008
#define TXCALSTORE7_DS_OSC_CAL_MASK 0x000000FF
#define TXCALSTORE7_DS_OSC_CAL_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE7_DS_OSC_CAL_RESET_VALUE 0x00000000

/* FIELD: VALID */
/* DESCRIPTION: */
/*   Calibrated value valid indicator */
#define TXCALSTORE7_VALID_OFFSET 0x00000008
#define TXCALSTORE7_VALID_BITWIDTH 0x00000001
#define TXCALSTORE7_VALID_MASK 0x00000100
#define TXCALSTORE7_VALID_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE7_VALID_RESET_VALUE 0x00000000

/* FIELD: OSC_CAL_FINE */
/* DESCRIPTION: */
/*   TX oscillator fine calibrated value */
#define TXCALSTORE7_OSC_CAL_FINE_OFFSET 0x00000009
#define TXCALSTORE7_OSC_CAL_FINE_BITWIDTH 0x00000003
#define TXCALSTORE7_OSC_CAL_FINE_MASK 0x00000E00
#define TXCALSTORE7_OSC_CAL_FINE_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTORE7_OSC_CAL_FINE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB0 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB0_ADDR 0x028002B8
#define TXCALSTOREB0_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB0_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB0_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB0_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB0_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB0_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB0_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB0_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB0_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB0_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB0_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB0_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB0_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB0_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB0_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB0_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB1 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB1_ADDR 0x028002BC
#define TXCALSTOREB1_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB1_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB1_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB1_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB1_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB1_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB1_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB1_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB1_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB1_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB1_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB1_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB1_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB1_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB1_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB1_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB2 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB2_ADDR 0x028002C0
#define TXCALSTOREB2_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB2_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB2_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB2_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB2_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB2_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB2_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB2_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB2_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB2_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB2_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB2_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB2_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB2_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB2_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB2_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB3 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB3_ADDR 0x028002C4
#define TXCALSTOREB3_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB3_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB3_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB3_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB3_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB3_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB3_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB3_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB3_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB3_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB3_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB3_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB3_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB3_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB3_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB3_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB4 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB4_ADDR 0x028002C8
#define TXCALSTOREB4_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB4_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB4_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB4_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB4_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB4_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB4_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB4_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB4_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB4_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB4_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB4_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB4_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB4_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB4_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB4_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB5 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB5_ADDR 0x028002CC
#define TXCALSTOREB5_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB5_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB5_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB5_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB5_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB5_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB5_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB5_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB5_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB5_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB5_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB5_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB5_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB5_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB5_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB5_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB6 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB6_ADDR 0x028002D0
#define TXCALSTOREB6_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB6_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB6_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB6_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB6_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB6_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB6_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB6_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB6_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB6_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB6_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB6_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB6_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB6_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB6_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB6_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCALSTOREB7 */
/* DESCRIPTION: */
/*   Calibration value storage register */
/* ------------------------------------- */
#define TXCALSTOREB7_ADDR 0x028002D4
#define TXCALSTOREB7_SIZE 32

/* FIELD: D90_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d90 calibrated value */
#define TXCALSTOREB7_D90_DCD_NT_OFFSET 0x00000000
#define TXCALSTOREB7_D90_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB7_D90_DCD_NT_MASK 0x0000007F
#define TXCALSTOREB7_D90_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB7_D90_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: D0_DCD_NT */
/* DESCRIPTION: */
/*   Duty cycle d0 calibrated value */
#define TXCALSTOREB7_D0_DCD_NT_OFFSET 0x00000007
#define TXCALSTOREB7_D0_DCD_NT_BITWIDTH 0x00000007
#define TXCALSTOREB7_D0_DCD_NT_MASK 0x00003F80
#define TXCALSTOREB7_D0_DCD_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB7_D0_DCD_NT_RESET_VALUE 0x00000000

/* FIELD: IQ_NT */
/* DESCRIPTION: */
/*   Duty cycle iq calibrated value. */
#define TXCALSTOREB7_IQ_NT_OFFSET 0x0000000E
#define TXCALSTOREB7_IQ_NT_BITWIDTH 0x00000007
#define TXCALSTOREB7_IQ_NT_MASK 0x001FC000
#define TXCALSTOREB7_IQ_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCALSTOREB7_IQ_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXCLOCKCTRL */
/* DESCRIPTION: */
/*   Transmitter clock signal control */
/* ------------------------------------- */
#define TXCLOCKCTRL_ADDR 0x028002D8
#define TXCLOCKCTRL_SIZE 32

/* FIELD: SEL_NT */
/* DESCRIPTION: */
/*   Selects the source of the TX clock enable signal. Should match the source of the TX clock. */
#define TXCLOCKCTRL_SEL_NT_OFFSET 0x00000000
#define TXCLOCKCTRL_SEL_NT_BITWIDTH 0x00000003
#define TXCLOCKCTRL_SEL_NT_MASK 0x00000007
#define TXCLOCKCTRL_SEL_NT_ACCESS JUPITER_CSR_READ_WRITE
#define TXCLOCKCTRL_SEL_NT_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXIFFSM_CTRL */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXIFFSM_CTRL_ADDR 0x028002DC
#define TXIFFSM_CTRL_SIZE 32

/* FIELD: TXIFFSM_CMN_PUP_POWER_STATE */
/* DESCRIPTION: */
/*   Common power up state. IF fsm will power up the common prior to calling the mfsm if the target power state is greater than or equal to this value. Common will be powered down after mfsm call if target power state is less than this value. */
#define TXIFFSM_CTRL_TXIFFSM_CMN_PUP_POWER_STATE_OFFSET 0x00000000
#define TXIFFSM_CTRL_TXIFFSM_CMN_PUP_POWER_STATE_BITWIDTH 0x00000003
#define TXIFFSM_CTRL_TXIFFSM_CMN_PUP_POWER_STATE_MASK 0x00000007
#define TXIFFSM_CTRL_TXIFFSM_CMN_PUP_POWER_STATE_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_CMN_PUP_POWER_STATE_RESET_VALUE 0x00000003

/* FIELD: TXIFFSM_L1CTRL */
/* DESCRIPTION: */
/*   L1 control, each bit representing a power state. If bit is asserted, IF fsm will assert the L1 control bit prior to calling mfsm. If deasserted, IF fsm will deassert the L1 control bit after calling mfsm. */
#define TXIFFSM_CTRL_TXIFFSM_L1CTRL_OFFSET 0x00000003
#define TXIFFSM_CTRL_TXIFFSM_L1CTRL_BITWIDTH 0x00000008
#define TXIFFSM_CTRL_TXIFFSM_L1CTRL_MASK 0x000007F8
#define TXIFFSM_CTRL_TXIFFSM_L1CTRL_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_L1CTRL_RESET_VALUE 0x00000060

/* FIELD: TXIFFSM_INIT_RATE */
/* DESCRIPTION: */
/*   Current rate setting for the first state  transition when txiffsm_init is set */
#define TXIFFSM_CTRL_TXIFFSM_INIT_RATE_OFFSET 0x0000000B
#define TXIFFSM_CTRL_TXIFFSM_INIT_RATE_BITWIDTH 0x00000003
#define TXIFFSM_CTRL_TXIFFSM_INIT_RATE_MASK 0x00003800
#define TXIFFSM_CTRL_TXIFFSM_INIT_RATE_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_INIT_RATE_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_INIT_WIDTH */
/* DESCRIPTION: */
/*   Current width setting for the first state transition when txiffsm_init is set */
#define TXIFFSM_CTRL_TXIFFSM_INIT_WIDTH_OFFSET 0x00000010
#define TXIFFSM_CTRL_TXIFFSM_INIT_WIDTH_BITWIDTH 0x00000004
#define TXIFFSM_CTRL_TXIFFSM_INIT_WIDTH_MASK 0x000F0000
#define TXIFFSM_CTRL_TXIFFSM_INIT_WIDTH_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_INIT_WIDTH_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_INIT_PAM */
/* DESCRIPTION: */
/*   Current pam setting for the first state transition when txiffsm_init is set */
#define TXIFFSM_CTRL_TXIFFSM_INIT_PAM_OFFSET 0x00000014
#define TXIFFSM_CTRL_TXIFFSM_INIT_PAM_BITWIDTH 0x00000001
#define TXIFFSM_CTRL_TXIFFSM_INIT_PAM_MASK 0x00100000
#define TXIFFSM_CTRL_TXIFFSM_INIT_PAM_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_INIT_PAM_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_INIT */
/* DESCRIPTION: */
/*   Controls whether txiffsm_init_* signals are read on a state transition. Automatically cleared after those values are read. This setting is used to inform the IFFSM the current state (rate/width/etc) after a reset. */
#define TXIFFSM_CTRL_TXIFFSM_INIT_OFFSET 0x00000015
#define TXIFFSM_CTRL_TXIFFSM_INIT_BITWIDTH 0x00000001
#define TXIFFSM_CTRL_TXIFFSM_INIT_MASK 0x00200000
#define TXIFFSM_CTRL_TXIFFSM_INIT_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_INIT_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_GENERAL_REQ_A */
/* DESCRIPTION: */
/*   Request signal for TX MFSM general instruction. Part of a req/ack interface with txiffsm_general_ack */
#define TXIFFSM_CTRL_TXIFFSM_GENERAL_REQ_A_OFFSET 0x00000016
#define TXIFFSM_CTRL_TXIFFSM_GENERAL_REQ_A_BITWIDTH 0x00000001
#define TXIFFSM_CTRL_TXIFFSM_GENERAL_REQ_A_MASK 0x00400000
#define TXIFFSM_CTRL_TXIFFSM_GENERAL_REQ_A_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_GENERAL_REQ_A_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_RCHNG_AFTER_RESET */
/* DESCRIPTION: */
/*   Asserting this signal will result in the MFSM always performing a rate change operation prior to powering up when exiting reset */
#define TXIFFSM_CTRL_TXIFFSM_RCHNG_AFTER_RESET_OFFSET 0x00000017
#define TXIFFSM_CTRL_TXIFFSM_RCHNG_AFTER_RESET_BITWIDTH 0x00000001
#define TXIFFSM_CTRL_TXIFFSM_RCHNG_AFTER_RESET_MASK 0x00800000
#define TXIFFSM_CTRL_TXIFFSM_RCHNG_AFTER_RESET_ACCESS JUPITER_CSR_READ_WRITE
#define TXIFFSM_CTRL_TXIFFSM_RCHNG_AFTER_RESET_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXIFFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXIFFSM_STAT_ADDR 0x028002E0
#define TXIFFSM_STAT_SIZE 32

/* FIELD: TXIFFSM_STATE */
/* DESCRIPTION: */
/*   Interface FSM state */
#define TXIFFSM_STAT_TXIFFSM_STATE_OFFSET 0x00000000
#define TXIFFSM_STAT_TXIFFSM_STATE_BITWIDTH 0x00000006
#define TXIFFSM_STAT_TXIFFSM_STATE_MASK 0x0000003F
#define TXIFFSM_STAT_TXIFFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define TXIFFSM_STAT_TXIFFSM_STATE_RESET_VALUE 0x00000000

/* FIELD: TXIFFSM_GENERAL_ACK */
/* DESCRIPTION: */
/*   Ack signal for TX MFSM general instruction. Part of a req/ack interface with txiffsm_general_req */
#define TXIFFSM_STAT_TXIFFSM_GENERAL_ACK_OFFSET 0x00000006
#define TXIFFSM_STAT_TXIFFSM_GENERAL_ACK_BITWIDTH 0x00000001
#define TXIFFSM_STAT_TXIFFSM_GENERAL_ACK_MASK 0x00000040
#define TXIFFSM_STAT_TXIFFSM_GENERAL_ACK_ACCESS JUPITER_CSR_READ_ONLY
#define TXIFFSM_STAT_TXIFFSM_GENERAL_ACK_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_ADDR_OFFSET_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDR_OFFSET_REG1_ADDR 0x028002E4
#define TXMFSM_ADDR_OFFSET_REG1_SIZE 32

/* FIELD: TXMFSM_ADDR_OFFSET_R0 */
/* DESCRIPTION: */
/*   Address offset for rate 0, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R0_OFFSET 0x00000000
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R0_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R0_MASK 0x0000FFFF
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R0_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R0_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_ADDR_OFFSET_R1 */
/* DESCRIPTION: */
/*   Address offset for rate 1, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R1_OFFSET 0x00000010
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R1_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R1_MASK 0xFFFF0000
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R1_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG1_TXMFSM_ADDR_OFFSET_R1_RESET_VALUE 0x00000004

/* ------------------------------------- */
/* REG: TXMFSM_ADDR_OFFSET_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDR_OFFSET_REG2_ADDR 0x028002E8
#define TXMFSM_ADDR_OFFSET_REG2_SIZE 32

/* FIELD: TXMFSM_ADDR_OFFSET_R2 */
/* DESCRIPTION: */
/*   Address offset for rate 2, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R2_OFFSET 0x00000000
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R2_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R2_MASK 0x0000FFFF
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R2_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R2_RESET_VALUE 0x00000008

/* FIELD: TXMFSM_ADDR_OFFSET_R3 */
/* DESCRIPTION: */
/*   Address offset for rate 3, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R3_OFFSET 0x00000010
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R3_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R3_MASK 0xFFFF0000
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R3_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG2_TXMFSM_ADDR_OFFSET_R3_RESET_VALUE 0x0000000C

/* ------------------------------------- */
/* REG: TXMFSM_ADDR_OFFSET_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDR_OFFSET_REG3_ADDR 0x028002EC
#define TXMFSM_ADDR_OFFSET_REG3_SIZE 32

/* FIELD: TXMFSM_ADDR_OFFSET_R4 */
/* DESCRIPTION: */
/*   Address offset for rate 4, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R4_OFFSET 0x00000000
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R4_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R4_MASK 0x0000FFFF
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R4_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R4_RESET_VALUE 0x00000010

/* FIELD: TXMFSM_ADDR_OFFSET_R5 */
/* DESCRIPTION: */
/*   Address offset for rate 5, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R5_OFFSET 0x00000010
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R5_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R5_MASK 0xFFFF0000
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R5_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG3_TXMFSM_ADDR_OFFSET_R5_RESET_VALUE 0x00000014

/* ------------------------------------- */
/* REG: TXMFSM_ADDR_OFFSET_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDR_OFFSET_REG4_ADDR 0x028002F0
#define TXMFSM_ADDR_OFFSET_REG4_SIZE 32

/* FIELD: TXMFSM_ADDR_OFFSET_R6 */
/* DESCRIPTION: */
/*   Address offset for rate 6, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R6_OFFSET 0x00000000
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R6_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R6_MASK 0x0000FFFF
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R6_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R6_RESET_VALUE 0x00000018

/* FIELD: TXMFSM_ADDR_OFFSET_R7 */
/* DESCRIPTION: */
/*   Address offset for rate 7, used during CSR read/writes where rate dependency is enabled */
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R7_OFFSET 0x00000010
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R7_BITWIDTH 0x00000010
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R7_MASK 0xFFFF0000
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R7_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDR_OFFSET_REG4_TXMFSM_ADDR_OFFSET_R7_RESET_VALUE 0x0000001C

/* ------------------------------------- */
/* REG: TXMFSM_ADDRESS_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDRESS_REG1_ADDR 0x028002F4
#define TXMFSM_ADDRESS_REG1_SIZE 32

/* FIELD: TXMFSM_CSR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all CSR operations performed by the mfsm */
#define TXMFSM_ADDRESS_REG1_TXMFSM_CSR_ADDRESS_START_OFFSET 0x00000000
#define TXMFSM_ADDRESS_REG1_TXMFSM_CSR_ADDRESS_START_BITWIDTH 0x00000010
#define TXMFSM_ADDRESS_REG1_TXMFSM_CSR_ADDRESS_START_MASK 0x0000FFFF
#define TXMFSM_ADDRESS_REG1_TXMFSM_CSR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDRESS_REG1_TXMFSM_CSR_ADDRESS_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_INSTR_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all instructions read by the mfsm */
#define TXMFSM_ADDRESS_REG1_TXMFSM_INSTR_ADDRESS_START_OFFSET 0x00000010
#define TXMFSM_ADDRESS_REG1_TXMFSM_INSTR_ADDRESS_START_BITWIDTH 0x00000010
#define TXMFSM_ADDRESS_REG1_TXMFSM_INSTR_ADDRESS_START_MASK 0xFFFF0000
#define TXMFSM_ADDRESS_REG1_TXMFSM_INSTR_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDRESS_REG1_TXMFSM_INSTR_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_ADDRESS_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_ADDRESS_REG2_ADDR 0x028002F8
#define TXMFSM_ADDRESS_REG2_SIZE 32

/* FIELD: TXMFSM_SRAM_ADDRESS_START */
/* DESCRIPTION: */
/*   Starting address for all SRAM read/writes by the mfsm */
#define TXMFSM_ADDRESS_REG2_TXMFSM_SRAM_ADDRESS_START_OFFSET 0x00000000
#define TXMFSM_ADDRESS_REG2_TXMFSM_SRAM_ADDRESS_START_BITWIDTH 0x00000010
#define TXMFSM_ADDRESS_REG2_TXMFSM_SRAM_ADDRESS_START_MASK 0x0000FFFF
#define TXMFSM_ADDRESS_REG2_TXMFSM_SRAM_ADDRESS_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_ADDRESS_REG2_TXMFSM_SRAM_ADDRESS_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_CTRL */
/* DESCRIPTION: */
/*   MFSM logging control */
/* ------------------------------------- */
#define TXMFSM_LOG_CTRL_ADDR 0x028002FC
#define TXMFSM_LOG_CTRL_SIZE 32

/* FIELD: EN */
/* DESCRIPTION: */
/*   MFSM logging enable. 0 = disabled, 1 = enabled. */
#define TXMFSM_LOG_CTRL_EN_OFFSET 0x00000000
#define TXMFSM_LOG_CTRL_EN_BITWIDTH 0x00000001
#define TXMFSM_LOG_CTRL_EN_MASK 0x00000001
#define TXMFSM_LOG_CTRL_EN_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_LOG_CTRL_EN_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_RDREG1 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define TXMFSM_LOG_RDREG1_ADDR 0x02800300
#define TXMFSM_LOG_RDREG1_SIZE 32

/* FIELD: LOG0 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG1_LOG0_OFFSET 0x00000000
#define TXMFSM_LOG_RDREG1_LOG0_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG1_LOG0_MASK 0x0000FFFF
#define TXMFSM_LOG_RDREG1_LOG0_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG1_LOG0_RESET_VALUE 0x00000000

/* FIELD: LOG1 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG1_LOG1_OFFSET 0x00000010
#define TXMFSM_LOG_RDREG1_LOG1_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG1_LOG1_MASK 0xFFFF0000
#define TXMFSM_LOG_RDREG1_LOG1_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG1_LOG1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_RDREG2 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define TXMFSM_LOG_RDREG2_ADDR 0x02800304
#define TXMFSM_LOG_RDREG2_SIZE 32

/* FIELD: LOG2 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG2_LOG2_OFFSET 0x00000000
#define TXMFSM_LOG_RDREG2_LOG2_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG2_LOG2_MASK 0x0000FFFF
#define TXMFSM_LOG_RDREG2_LOG2_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG2_LOG2_RESET_VALUE 0x00000000

/* FIELD: LOG3 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG2_LOG3_OFFSET 0x00000010
#define TXMFSM_LOG_RDREG2_LOG3_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG2_LOG3_MASK 0xFFFF0000
#define TXMFSM_LOG_RDREG2_LOG3_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG2_LOG3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_RDREG3 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define TXMFSM_LOG_RDREG3_ADDR 0x02800308
#define TXMFSM_LOG_RDREG3_SIZE 32

/* FIELD: LOG4 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG3_LOG4_OFFSET 0x00000000
#define TXMFSM_LOG_RDREG3_LOG4_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG3_LOG4_MASK 0x0000FFFF
#define TXMFSM_LOG_RDREG3_LOG4_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG3_LOG4_RESET_VALUE 0x00000000

/* FIELD: LOG5 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG3_LOG5_OFFSET 0x00000010
#define TXMFSM_LOG_RDREG3_LOG5_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG3_LOG5_MASK 0xFFFF0000
#define TXMFSM_LOG_RDREG3_LOG5_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG3_LOG5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_RDREG4 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define TXMFSM_LOG_RDREG4_ADDR 0x0280030C
#define TXMFSM_LOG_RDREG4_SIZE 32

/* FIELD: LOG6 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG4_LOG6_OFFSET 0x00000000
#define TXMFSM_LOG_RDREG4_LOG6_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG4_LOG6_MASK 0x0000FFFF
#define TXMFSM_LOG_RDREG4_LOG6_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG4_LOG6_RESET_VALUE 0x00000000

/* FIELD: LOG7 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG4_LOG7_OFFSET 0x00000010
#define TXMFSM_LOG_RDREG4_LOG7_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG4_LOG7_MASK 0xFFFF0000
#define TXMFSM_LOG_RDREG4_LOG7_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG4_LOG7_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_LOG_RDREG5 */
/* DESCRIPTION: */
/*   MFSM log */
/* ------------------------------------- */
#define TXMFSM_LOG_RDREG5_ADDR 0x02800310
#define TXMFSM_LOG_RDREG5_SIZE 32

/* FIELD: LOG8 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG5_LOG8_OFFSET 0x00000000
#define TXMFSM_LOG_RDREG5_LOG8_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG5_LOG8_MASK 0x0000FFFF
#define TXMFSM_LOG_RDREG5_LOG8_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG5_LOG8_RESET_VALUE 0x00000000

/* FIELD: LOG9 */
/* DESCRIPTION: */
/*   MFSM recently requested SRAM address log. Log0 = most recent */
#define TXMFSM_LOG_RDREG5_LOG9_OFFSET 0x00000010
#define TXMFSM_LOG_RDREG5_LOG9_BITWIDTH 0x00000010
#define TXMFSM_LOG_RDREG5_LOG9_MASK 0xFFFF0000
#define TXMFSM_LOG_RDREG5_LOG9_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_LOG_RDREG5_LOG9_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_OVR */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_OVR_ADDR 0x02800314
#define TXMFSM_OVR_SIZE 32

/* FIELD: TXMFSM_OVR_ENA */
/* DESCRIPTION: */
/*   Override enable for signals from mfsm to interface fsm. */
/*   0 = Normal operation */
/*   1 = Override enabled */
#define TXMFSM_OVR_TXMFSM_OVR_ENA_OFFSET 0x00000000
#define TXMFSM_OVR_TXMFSM_OVR_ENA_BITWIDTH 0x00000001
#define TXMFSM_OVR_TXMFSM_OVR_ENA_MASK 0x00000001
#define TXMFSM_OVR_TXMFSM_OVR_ENA_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_TXMFSM_OVR_ENA_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_ACK_OVR */
/* DESCRIPTION: */
/*   Override for ack signal from mfsm to interface fsm. */
#define TXMFSM_OVR_TXMFSM_ACK_OVR_OFFSET 0x00000001
#define TXMFSM_OVR_TXMFSM_ACK_OVR_BITWIDTH 0x00000001
#define TXMFSM_OVR_TXMFSM_ACK_OVR_MASK 0x00000002
#define TXMFSM_OVR_TXMFSM_ACK_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_TXMFSM_ACK_OVR_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RUNNING_OVR */
/* DESCRIPTION: */
/*   Override for running signal from mfsm to interface fsm. */
#define TXMFSM_OVR_TXMFSM_RUNNING_OVR_OFFSET 0x00000002
#define TXMFSM_OVR_TXMFSM_RUNNING_OVR_BITWIDTH 0x00000001
#define TXMFSM_OVR_TXMFSM_RUNNING_OVR_MASK 0x00000004
#define TXMFSM_OVR_TXMFSM_RUNNING_OVR_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_TXMFSM_RUNNING_OVR_RESET_VALUE 0x00000000

/* FIELD: LT_RUN_OVR_ENA_A */
/* DESCRIPTION: */
/*   Enable for txmfsm_ovr[lt_run_ovr_a] */
#define TXMFSM_OVR_LT_RUN_OVR_ENA_A_OFFSET 0x00000003
#define TXMFSM_OVR_LT_RUN_OVR_ENA_A_BITWIDTH 0x00000001
#define TXMFSM_OVR_LT_RUN_OVR_ENA_A_MASK 0x00000008
#define TXMFSM_OVR_LT_RUN_OVR_ENA_A_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_LT_RUN_OVR_ENA_A_RESET_VALUE 0x00000000

/* FIELD: LT_RUN_OVR_A */
/* DESCRIPTION: */
/*   Register control of lt_run signal from master controller FSM */
#define TXMFSM_OVR_LT_RUN_OVR_A_OFFSET 0x00000004
#define TXMFSM_OVR_LT_RUN_OVR_A_BITWIDTH 0x00000001
#define TXMFSM_OVR_LT_RUN_OVR_A_MASK 0x00000010
#define TXMFSM_OVR_LT_RUN_OVR_A_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_LT_RUN_OVR_A_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_CSR_DISABLE */
/* DESCRIPTION: */
/*   When asserted, disables csr access from the mfsm */
#define TXMFSM_OVR_TXMFSM_CSR_DISABLE_OFFSET 0x00000005
#define TXMFSM_OVR_TXMFSM_CSR_DISABLE_BITWIDTH 0x00000001
#define TXMFSM_OVR_TXMFSM_CSR_DISABLE_MASK 0x00000020
#define TXMFSM_OVR_TXMFSM_CSR_DISABLE_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_OVR_TXMFSM_CSR_DISABLE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_GENERAL */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_GENERAL_ADDR 0x02800318
#define TXMFSM_PTR_GENERAL_SIZE 32

/* FIELD: TXMFSM_GENERAL_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for general function */
#define TXMFSM_PTR_GENERAL_TXMFSM_GENERAL_START_OFFSET 0x00000000
#define TXMFSM_PTR_GENERAL_TXMFSM_GENERAL_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_GENERAL_TXMFSM_GENERAL_START_MASK 0x0000FFFF
#define TXMFSM_PTR_GENERAL_TXMFSM_GENERAL_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_GENERAL_TXMFSM_GENERAL_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_PDN_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_PDN_RATE_REG1_ADDR 0x0280031C
#define TXMFSM_PTR_PDN_RATE_REG1_SIZE 32

/* FIELD: TXMFSM_PDN_RATEA_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power down section during rate change for A type rates */
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_START_OFFSET 0x00000000
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_START_MASK 0x0000FFFF
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PDN_RATEA_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power down section during rate change for A type rates */
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_END_OFFSET 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_END_BITWIDTH 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_END_MASK 0xFFFF0000
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_END_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PDN_RATE_REG1_TXMFSM_PDN_RATEA_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_PDN_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_PDN_RATE_REG2_ADDR 0x02800320
#define TXMFSM_PTR_PDN_RATE_REG2_SIZE 32

/* FIELD: TXMFSM_PDN_RATEB_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power down section during rate change for B type rates */
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_START_OFFSET 0x00000000
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_START_MASK 0x0000FFFF
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PDN_RATEB_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power down section during rate change for B type rates */
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_END_OFFSET 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_END_BITWIDTH 0x00000010
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_END_MASK 0xFFFF0000
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_END_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PDN_RATE_REG2_TXMFSM_PDN_RATEB_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_POWER_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_POWER_REG1_ADDR 0x02800324
#define TXMFSM_PTR_POWER_REG1_SIZE 32

/* FIELD: TXMFSM_PUP_P4_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p4 */
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P4_START_OFFSET 0x00000000
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P4_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P4_START_MASK 0x0000FFFF
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P4_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P4_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PUP_P3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p3 */
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P3_START_OFFSET 0x00000010
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P3_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P3_START_MASK 0xFFFF0000
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P3_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG1_TXMFSM_PUP_P3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_POWER_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_POWER_REG2_ADDR 0x02800328
#define TXMFSM_PTR_POWER_REG2_SIZE 32

/* FIELD: TXMFSM_PUP_P2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p2 */
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P2_START_OFFSET 0x00000000
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P2_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P2_START_MASK 0x0000FFFF
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P2_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P2_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PUP_P1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power ups starting at p1 */
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P1_START_OFFSET 0x00000010
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P1_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P1_START_MASK 0xFFFF0000
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P1_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG2_TXMFSM_PUP_P1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_POWER_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_POWER_REG3_ADDR 0x0280032C
#define TXMFSM_PTR_POWER_REG3_SIZE 32

/* FIELD: TXMFSM_PDN_P0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p0 */
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P0_START_OFFSET 0x00000000
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P0_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P0_START_MASK 0x0000FFFF
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P0_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P0_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PDN_P1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p1 */
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P1_START_OFFSET 0x00000010
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P1_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P1_START_MASK 0xFFFF0000
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P1_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG3_TXMFSM_PDN_P1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_POWER_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_POWER_REG4_ADDR 0x02800330
#define TXMFSM_PTR_POWER_REG4_SIZE 32

/* FIELD: TXMFSM_PDN_P2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p2 */
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P2_START_OFFSET 0x00000000
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P2_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P2_START_MASK 0x0000FFFF
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P2_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P2_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PDN_P3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power downs starting at p3 */
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P3_START_OFFSET 0x00000010
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P3_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P3_START_MASK 0xFFFF0000
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P3_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG4_TXMFSM_PDN_P3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_POWER_REG5 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_POWER_REG5_ADDR 0x02800334
#define TXMFSM_PTR_POWER_REG5_SIZE 32

/* FIELD: TXMFSM_PDN_P4_END */
/* DESCRIPTION: */
/*   End instruction pointer for power downs ending at p4 */
#define TXMFSM_PTR_POWER_REG5_TXMFSM_PDN_P4_END_OFFSET 0x00000000
#define TXMFSM_PTR_POWER_REG5_TXMFSM_PDN_P4_END_BITWIDTH 0x00000010
#define TXMFSM_PTR_POWER_REG5_TXMFSM_PDN_P4_END_MASK 0x0000FFFF
#define TXMFSM_PTR_POWER_REG5_TXMFSM_PDN_P4_END_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_POWER_REG5_TXMFSM_PDN_P4_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_PUP_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_PUP_RATE_REG1_ADDR 0x02800338
#define TXMFSM_PTR_PUP_RATE_REG1_SIZE 32

/* FIELD: TXMFSM_PUP_RATEA_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power up section during rate change for A type rates */
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_START_OFFSET 0x00000000
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_START_MASK 0x0000FFFF
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PUP_RATEA_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power up section during rate change for A type rates */
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_END_OFFSET 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_END_BITWIDTH 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_END_MASK 0xFFFF0000
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_END_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PUP_RATE_REG1_TXMFSM_PUP_RATEA_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_PUP_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_PUP_RATE_REG2_ADDR 0x0280033C
#define TXMFSM_PTR_PUP_RATE_REG2_SIZE 32

/* FIELD: TXMFSM_PUP_RATEB_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for power up section during rate change for B type rates */
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_START_OFFSET 0x00000000
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_START_MASK 0x0000FFFF
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PUP_RATEB_END */
/* DESCRIPTION: */
/*   Ending instruction pointer for power up section during rate change for B type rates */
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_END_OFFSET 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_END_BITWIDTH 0x00000010
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_END_MASK 0xFFFF0000
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_END_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_PUP_RATE_REG2_TXMFSM_PUP_RATEB_END_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_RATE_REG1 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_RATE_REG1_ADDR 0x02800340
#define TXMFSM_PTR_RATE_REG1_SIZE 32

/* FIELD: TXMFSM_RATE0_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 0 */
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE0_START_OFFSET 0x00000000
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE0_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE0_START_MASK 0x0000FFFF
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE0_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE0_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RATE1_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 1 */
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE1_START_OFFSET 0x00000010
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE1_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE1_START_MASK 0xFFFF0000
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE1_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG1_TXMFSM_RATE1_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_RATE_REG2 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_RATE_REG2_ADDR 0x02800344
#define TXMFSM_PTR_RATE_REG2_SIZE 32

/* FIELD: TXMFSM_RATE2_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 2 */
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE2_START_OFFSET 0x00000000
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE2_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE2_START_MASK 0x0000FFFF
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE2_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE2_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RATE3_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 3 */
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE3_START_OFFSET 0x00000010
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE3_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE3_START_MASK 0xFFFF0000
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE3_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG2_TXMFSM_RATE3_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_RATE_REG3 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_RATE_REG3_ADDR 0x02800348
#define TXMFSM_PTR_RATE_REG3_SIZE 32

/* FIELD: TXMFSM_RATE4_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 4 */
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE4_START_OFFSET 0x00000000
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE4_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE4_START_MASK 0x0000FFFF
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE4_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE4_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RATE5_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 5 */
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE5_START_OFFSET 0x00000010
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE5_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE5_START_MASK 0xFFFF0000
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE5_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG3_TXMFSM_RATE5_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_RATE_REG4 */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_RATE_REG4_ADDR 0x0280034C
#define TXMFSM_PTR_RATE_REG4_SIZE 32

/* FIELD: TXMFSM_RATE6_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 6 */
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE6_START_OFFSET 0x00000000
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE6_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE6_START_MASK 0x0000FFFF
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE6_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE6_START_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RATE7_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for rate changes where the target rate is 7 */
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE7_START_OFFSET 0x00000010
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE7_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE7_START_MASK 0xFFFF0000
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE7_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RATE_REG4_TXMFSM_RATE7_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_PTR_RESET */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_PTR_RESET_ADDR 0x02800350
#define TXMFSM_PTR_RESET_SIZE 32

/* FIELD: TXMFSM_RESET_START */
/* DESCRIPTION: */
/*   Starting instruction pointer for reset block */
#define TXMFSM_PTR_RESET_TXMFSM_RESET_START_OFFSET 0x00000000
#define TXMFSM_PTR_RESET_TXMFSM_RESET_START_BITWIDTH 0x00000010
#define TXMFSM_PTR_RESET_TXMFSM_RESET_START_MASK 0x0000FFFF
#define TXMFSM_PTR_RESET_TXMFSM_RESET_START_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_PTR_RESET_TXMFSM_RESET_START_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_RCHANGE */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_RCHANGE_ADDR 0x02800354
#define TXMFSM_RCHANGE_SIZE 32

/* FIELD: TXMFSM_RCHANGE_TYPE */
/* DESCRIPTION: */
/*   Rate change type. Each bit represents a possible transition. */
/*   00 - 0 to / from 1     07 - 1 to / from 2     14 - 2 to / from 4     21 - 3 to / from 7 */
/*   01 - 0 to / from 2     08 - 1 to / from 3     15 - 2 to / from 5     22 - 4 to / from 5 */
/*   02 - 0 to / from 3     09 - 1 to / from 4     16 - 2 to / from 6     23 - 4 to / from 6 */
/*   03 - 0 to / from 4     10 - 1 to / from 5     17 - 2 to / from 7     24 - 4 to / from 7 */
/*   04 - 0 to / from 5     11 - 1 to / from 6     18 - 3 to / from 4     25 - 5 to / from 6 */
/*   05 - 0 to / from 6     12 - 1 to / from 7     19 - 3 to / from 5     26 - 5 to / from 7 */
/*   06 - 0 to / from 7     13 - 2 to / from 3     20 - 3 to / from 6     27 - 6 to / from 7 */
#define TXMFSM_RCHANGE_TXMFSM_RCHANGE_TYPE_OFFSET 0x00000000
#define TXMFSM_RCHANGE_TXMFSM_RCHANGE_TYPE_BITWIDTH 0x0000001C
#define TXMFSM_RCHANGE_TXMFSM_RCHANGE_TYPE_MASK 0x0FFFFFFF
#define TXMFSM_RCHANGE_TXMFSM_RCHANGE_TYPE_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_RCHANGE_TXMFSM_RCHANGE_TYPE_RESET_VALUE 0x0FFFFFFF

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG1 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG1_ADDR 0x02800358
#define TXMFSM_SCRATCH_REG1_SIZE 32

/* FIELD: TXMFSM_SCRATCH1 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG1_TXMFSM_SCRATCH1_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG1_TXMFSM_SCRATCH1_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG1_TXMFSM_SCRATCH1_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG1_TXMFSM_SCRATCH1_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG1_TXMFSM_SCRATCH1_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG2 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG2_ADDR 0x0280035C
#define TXMFSM_SCRATCH_REG2_SIZE 32

/* FIELD: TXMFSM_SCRATCH2 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG2_TXMFSM_SCRATCH2_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG2_TXMFSM_SCRATCH2_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG2_TXMFSM_SCRATCH2_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG2_TXMFSM_SCRATCH2_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG2_TXMFSM_SCRATCH2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG3 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG3_ADDR 0x02800360
#define TXMFSM_SCRATCH_REG3_SIZE 32

/* FIELD: TXMFSM_SCRATCH3 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG3_TXMFSM_SCRATCH3_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG3_TXMFSM_SCRATCH3_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG3_TXMFSM_SCRATCH3_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG3_TXMFSM_SCRATCH3_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG3_TXMFSM_SCRATCH3_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG4 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG4_ADDR 0x02800364
#define TXMFSM_SCRATCH_REG4_SIZE 32

/* FIELD: TXMFSM_SCRATCH4 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG4_TXMFSM_SCRATCH4_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG4_TXMFSM_SCRATCH4_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG4_TXMFSM_SCRATCH4_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG4_TXMFSM_SCRATCH4_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG4_TXMFSM_SCRATCH4_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG5 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG5_ADDR 0x02800368
#define TXMFSM_SCRATCH_REG5_SIZE 32

/* FIELD: TXMFSM_SCRATCH5 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG5_TXMFSM_SCRATCH5_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG5_TXMFSM_SCRATCH5_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG5_TXMFSM_SCRATCH5_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG5_TXMFSM_SCRATCH5_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG5_TXMFSM_SCRATCH5_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG6 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG6_ADDR 0x0280036C
#define TXMFSM_SCRATCH_REG6_SIZE 32

/* FIELD: TXMFSM_SCRATCH6 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG6_TXMFSM_SCRATCH6_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG6_TXMFSM_SCRATCH6_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG6_TXMFSM_SCRATCH6_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG6_TXMFSM_SCRATCH6_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG6_TXMFSM_SCRATCH6_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG7 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG7_ADDR 0x02800370
#define TXMFSM_SCRATCH_REG7_SIZE 32

/* FIELD: TXMFSM_SCRATCH7 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG7_TXMFSM_SCRATCH7_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG7_TXMFSM_SCRATCH7_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG7_TXMFSM_SCRATCH7_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG7_TXMFSM_SCRATCH7_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG7_TXMFSM_SCRATCH7_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_SCRATCH_REG8 */
/* DESCRIPTION: */
/*   Scratch pad register for tx Master Controller. */
/* ------------------------------------- */
#define TXMFSM_SCRATCH_REG8_ADDR 0x02800374
#define TXMFSM_SCRATCH_REG8_SIZE 32

/* FIELD: TXMFSM_SCRATCH8 */
/* DESCRIPTION: */
/*   Scratch pad register. */
#define TXMFSM_SCRATCH_REG8_TXMFSM_SCRATCH8_OFFSET 0x00000000
#define TXMFSM_SCRATCH_REG8_TXMFSM_SCRATCH8_BITWIDTH 0x00000020
#define TXMFSM_SCRATCH_REG8_TXMFSM_SCRATCH8_MASK 0xFFFFFFFF
#define TXMFSM_SCRATCH_REG8_TXMFSM_SCRATCH8_ACCESS JUPITER_CSR_READ_WRITE
#define TXMFSM_SCRATCH_REG8_TXMFSM_SCRATCH8_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_STAT */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_STAT_ADDR 0x02800378
#define TXMFSM_STAT_SIZE 32

/* FIELD: TXMFSM_RATE_CUR */
/* DESCRIPTION: */
/*   Current rate sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_RATE_CUR_OFFSET 0x00000000
#define TXMFSM_STAT_TXMFSM_RATE_CUR_BITWIDTH 0x00000003
#define TXMFSM_STAT_TXMFSM_RATE_CUR_MASK 0x00000007
#define TXMFSM_STAT_TXMFSM_RATE_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_RATE_CUR_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_RATE_NEW */
/* DESCRIPTION: */
/*   New rate sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_RATE_NEW_OFFSET 0x00000003
#define TXMFSM_STAT_TXMFSM_RATE_NEW_BITWIDTH 0x00000003
#define TXMFSM_STAT_TXMFSM_RATE_NEW_MASK 0x00000038
#define TXMFSM_STAT_TXMFSM_RATE_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_RATE_NEW_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_WIDTH_CUR */
/* DESCRIPTION: */
/*   Current width sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_WIDTH_CUR_OFFSET 0x00000006
#define TXMFSM_STAT_TXMFSM_WIDTH_CUR_BITWIDTH 0x00000004
#define TXMFSM_STAT_TXMFSM_WIDTH_CUR_MASK 0x000003C0
#define TXMFSM_STAT_TXMFSM_WIDTH_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_WIDTH_CUR_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_WIDTH_NEW */
/* DESCRIPTION: */
/*   New width sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_WIDTH_NEW_OFFSET 0x0000000A
#define TXMFSM_STAT_TXMFSM_WIDTH_NEW_BITWIDTH 0x00000004
#define TXMFSM_STAT_TXMFSM_WIDTH_NEW_MASK 0x00003C00
#define TXMFSM_STAT_TXMFSM_WIDTH_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_WIDTH_NEW_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_POWER_CUR */
/* DESCRIPTION: */
/*   Current power state sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_POWER_CUR_OFFSET 0x00000010
#define TXMFSM_STAT_TXMFSM_POWER_CUR_BITWIDTH 0x00000003
#define TXMFSM_STAT_TXMFSM_POWER_CUR_MASK 0x00070000
#define TXMFSM_STAT_TXMFSM_POWER_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_POWER_CUR_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_POWER_NEW */
/* DESCRIPTION: */
/*   New power state sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_POWER_NEW_OFFSET 0x00000014
#define TXMFSM_STAT_TXMFSM_POWER_NEW_BITWIDTH 0x00000003
#define TXMFSM_STAT_TXMFSM_POWER_NEW_MASK 0x00700000
#define TXMFSM_STAT_TXMFSM_POWER_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_POWER_NEW_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PAM_CUR */
/* DESCRIPTION: */
/*   Current pam state sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_PAM_CUR_OFFSET 0x00000017
#define TXMFSM_STAT_TXMFSM_PAM_CUR_BITWIDTH 0x00000001
#define TXMFSM_STAT_TXMFSM_PAM_CUR_MASK 0x00800000
#define TXMFSM_STAT_TXMFSM_PAM_CUR_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_PAM_CUR_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_PAM_NEW */
/* DESCRIPTION: */
/*   New pam state sent to mfsm when called by interface fsm */
#define TXMFSM_STAT_TXMFSM_PAM_NEW_OFFSET 0x00000018
#define TXMFSM_STAT_TXMFSM_PAM_NEW_BITWIDTH 0x00000001
#define TXMFSM_STAT_TXMFSM_PAM_NEW_MASK 0x01000000
#define TXMFSM_STAT_TXMFSM_PAM_NEW_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_PAM_NEW_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_INSTR_NUM */
/* DESCRIPTION: */
/*   Instruction number sent to mfsm when called by interface fsm */
/*   0 = Reset */
/*   1 = State change */
#define TXMFSM_STAT_TXMFSM_INSTR_NUM_OFFSET 0x00000019
#define TXMFSM_STAT_TXMFSM_INSTR_NUM_BITWIDTH 0x00000004
#define TXMFSM_STAT_TXMFSM_INSTR_NUM_MASK 0x1E000000
#define TXMFSM_STAT_TXMFSM_INSTR_NUM_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_INSTR_NUM_RESET_VALUE 0x00000000

/* FIELD: TXMFSM_REQ */
/* DESCRIPTION: */
/*   Copy of request signal sent to mfsm */
#define TXMFSM_STAT_TXMFSM_REQ_OFFSET 0x0000001D
#define TXMFSM_STAT_TXMFSM_REQ_BITWIDTH 0x00000001
#define TXMFSM_STAT_TXMFSM_REQ_MASK 0x20000000
#define TXMFSM_STAT_TXMFSM_REQ_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STAT_TXMFSM_REQ_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: TXMFSM_STATE */
/* DESCRIPTION: */
/*   Configuration and observability for the TX Master Controller. */
/* ------------------------------------- */
#define TXMFSM_STATE_ADDR 0x0280037C
#define TXMFSM_STATE_SIZE 32

/* FIELD: TXMFSM_STATE */
/* DESCRIPTION: */
/*   MFSM state register. For debug purposes only. */
#define TXMFSM_STATE_TXMFSM_STATE_OFFSET 0x00000000
#define TXMFSM_STATE_TXMFSM_STATE_BITWIDTH 0x00000009
#define TXMFSM_STATE_TXMFSM_STATE_MASK 0x000001FF
#define TXMFSM_STATE_TXMFSM_STATE_ACCESS JUPITER_CSR_READ_ONLY
#define TXMFSM_STATE_TXMFSM_STATE_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_DUMMY */
/* DESCRIPTION: */
/*   Dummy register */
/* ------------------------------------- */
#define ETH_DUMMY_ADDR 0x03000000
#define ETH_DUMMY_SIZE 32

/* FIELD: DUMMY */
/* DESCRIPTION: */
/*   Dummy field */
#define ETH_DUMMY_DUMMY_OFFSET 0x00000000
#define ETH_DUMMY_DUMMY_BITWIDTH 0x00000001
#define ETH_DUMMY_DUMMY_MASK 0x00000001
#define ETH_DUMMY_DUMMY_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_DUMMY_DUMMY_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: ETH_DUMMY2 */
/* DESCRIPTION: */
/*   Dummy register */
/* ------------------------------------- */
#define ETH_DUMMY2_ADDR 0x03000004
#define ETH_DUMMY2_SIZE 32

/* FIELD: DUMMY2 */
/* DESCRIPTION: */
/*   Dummy field */
#define ETH_DUMMY2_DUMMY2_OFFSET 0x00000000
#define ETH_DUMMY2_DUMMY2_BITWIDTH 0x00000001
#define ETH_DUMMY2_DUMMY2_MASK 0x00000001
#define ETH_DUMMY2_DUMMY2_ACCESS JUPITER_CSR_READ_WRITE
#define ETH_DUMMY2_DUMMY2_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DFX_DUMMY */
/* DESCRIPTION: */
/*   Dummy register */
/* ------------------------------------- */
#define DFX_DUMMY_ADDR 0x03800000
#define DFX_DUMMY_SIZE 32

/* FIELD: DUMMY */
/* DESCRIPTION: */
/*   Dummy field */
#define DFX_DUMMY_DUMMY_OFFSET 0x00000000
#define DFX_DUMMY_DUMMY_BITWIDTH 0x00000001
#define DFX_DUMMY_DUMMY_MASK 0x00000001
#define DFX_DUMMY_DUMMY_ACCESS JUPITER_CSR_READ_WRITE
#define DFX_DUMMY_DUMMY_RESET_VALUE 0x00000000

/* ------------------------------------- */
/* REG: DFX_DUMMY2 */
/* DESCRIPTION: */
/*   Dummy register */
/* ------------------------------------- */
#define DFX_DUMMY2_ADDR 0x03800004
#define DFX_DUMMY2_SIZE 32

/* FIELD: DUMMY */
/* DESCRIPTION: */
/*   Dummy field */
#define DFX_DUMMY2_DUMMY_OFFSET 0x00000000
#define DFX_DUMMY2_DUMMY_BITWIDTH 0x00000001
#define DFX_DUMMY2_DUMMY_MASK 0x00000001
#define DFX_DUMMY2_DUMMY_ACCESS JUPITER_CSR_READ_WRITE
#define DFX_DUMMY2_DUMMY_RESET_VALUE 0x00000000

#endif /* __jupiter_csr_defines */
