/** \file dnx_data_dnx2_arr.h
 * 
 * MODULE DATA INTERFACE - 
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_DNX2_ARR_H_
/*{*/
#define _DNX_DATA_DNX2_ARR_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <sal/limits.h>
#include <soc/property.h>
#include <shared/shrextend/shrextend_debug.h>
#include <shared/utilex/utilex_framework.h>
#include <soc/dnxc/dnxc_data/dnxc_data_utils.h>
#include <soc/dnxc/dnxc_data/dnxc_data_mgmt.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_dnx2_arr.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MODULE FUNCTIONS:
 * {
 */
/**
 * \brief Init default data structure - dnx_data_if_dnx2_arr
 * 
 * \param [in] unit - Unit #
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_if_dnx2_arr_init(
    int unit);

/*
 * }
 */

/*
 * SUBMODULE  - PREFIX:
 * ARR prefix table values
 * {
 */
/*
 * Table value structure
 */
/*
 * Feature enum
 */
/**
 * \brief 
 * Submodule features
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_dnx2_arr_prefix_feature_nof
} dnx_data_dnx2_arr_prefix_feature_e;

/*
 * Submodule functions typedefs
 */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef int(
    *dnx_data_dnx2_arr_prefix_feature_get_f) (
    int unit,
    dnx_data_dnx2_arr_prefix_feature_e feature);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_Empty'
 * prefix of format ETPP_ETPS_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding'
 * prefix of format ETPP_ETPS_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI'
 * prefix of format ETPP_ETPS_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command'
 * prefix of format ETPP_ETPS_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_Always_Last_Layer
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_Always_Last_Layer'
 * prefix of format ETPP_ETPS_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_Always_Last_Layer - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_Always_Last_Layer_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix'
 * prefix of format ETPP_ETPS_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI'
 * prefix of format ETPP_ETPS_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI'
 * prefix of format ETPP_ETPS_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only'
 * prefix of format ETPP_ETPS_FORMATS at index 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel'
 * prefix of format ETPP_ETPS_FORMATS at index 9
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1'
 * prefix of format ETPP_ETPS_FORMATS at index 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace'
 * prefix of format ETPP_ETPS_FORMATS at index 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI'
 * prefix of format ETPP_ETPS_FORMATS at index 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace'
 * prefix of format ETPP_ETPS_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS'
 * prefix of format ETPP_ETPS_FORMATS at index 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE'
 * prefix of format ETPP_ETPS_FORMATS at index 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_Empty'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT'
 * prefix of format IRPP_FEC_ENTRY_FORMAT at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty'
 * prefix of format IRPP_FEC_SUPER_ENTRY_FORMAT at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_Empty'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Empty'
 * prefix of format IRPP_IN_LIF_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix'
 * prefix of format IRPP_IN_LIF_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1'
 * prefix of format IRPP_IN_LIF_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1'
 * prefix of format IRPP_IN_LIF_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix'
 * prefix of format IRPP_IN_LIF_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Free
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Free'
 * prefix of format IRPP_IN_LIF_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Free - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Free_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found'
 * prefix of format IRPP_IN_LIF_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN'
 * prefix of format IRPP_IN_LIF_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF'
 * prefix of format IRPP_IN_LIF_FORMATS at index 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI'
 * prefix of format IRPP_IN_LIF_FORMATS at index 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS'
 * prefix of format IRPP_IN_LIF_FORMATS at index 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED'
 * prefix of format IRPP_IN_LIF_FORMATS at index 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS'
 * prefix of format IRPP_IN_LIF_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix'
 * prefix of format IRPP_IN_LIF_FORMATS at index 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding'
 * prefix of format IRPP_IN_LIF_FORMATS at index 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_Empty
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_Empty'
 * prefix of format IRPP_VSI_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_Empty - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Empty_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix
 * Module - 'dnx2_arr', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix'
 * prefix of format IRPP_VSI_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix_get_f) (
    int unit);

/*
 * SUBMODULE INTERFACE DNX_DATA_IF_DNX2_ARR - PREFIX:
 * {
 */
/**
 * \brief Interface for dnx2_arr prefix data
 */
typedef struct
{
    /**
     * get submodule feature - disabled/enabled
     */
    dnx_data_dnx2_arr_prefix_feature_get_f feature_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_Empty_get_f ETPP_ETPS_FORMATS___prefix_Empty_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding_get_f ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_Encoding_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI_get_f ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_IDX_MPLS_FHEI_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command_get_f ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPvX_TUNNEL_ESEM_Command_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_Always_Last_Layer
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_Always_Last_Layer_get_f ETPP_ETPS_FORMATS___prefix_Always_Last_Layer_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix_get_f ETPP_ETPS_FORMATS___prefix_LIF_AHP_MPLS_Prefix_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI_get_f ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_MODEL_MPLS_FHEI_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI_get_f ETPP_ETPS_FORMATS___prefix_ENCAP_QOS_IDX_MPLS_FHEI_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only_get_f ETPP_ETPS_FORMATS___prefix_OutLIF_Profile_Orientation_Only_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel_get_f ETPP_ETPS_FORMATS___prefix_FORWARD_DOMAIN_VRF_IPvX_Tunnel_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1_get_f ETPP_ETPS_FORMATS___prefix_QOS_MODEL_1_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace_get_f ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv6_TUNNELS_FODO_Namespace_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI_get_f ETPP_ETPS_FORMATS___prefix_ENCAP_TTL_MODEL_MPLS_FHEI_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace_get_f ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_IPv4_VxLAN_OR_VXLAN_GPE_FODO_Namespace_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS_get_f ETPP_ETPS_FORMATS___prefix_FORWARD_QOS_MODEL_NWK_QOS_get;
    /**
     * returns define data of ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE
     */
    dnx_data_dnx2_arr_prefix_ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE_get_f ETPP_ETPS_FORMATS___prefix_ESEM_COMMAND_PWE_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_Empty_get_f IRPP_FEC_ENTRY_FORMAT___prefix_Empty_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF_get_f IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_OUTLIF_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF_get_f IRPP_FEC_ENTRY_FORMAT___prefix_OUTLIF_ETH_RIF_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command_get_f IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_POP_Command_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command_get_f IRPP_FEC_ENTRY_FORMAT___prefix_EEI_W_SWAP_Command_get;
    /**
     * returns define data of IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT_get_f IRPP_FEC_ENTRY_FORMAT___prefix_MC_RPF_MODE_MC_RPF_MODE_EXPLICIT_get;
    /**
     * returns define data of IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty_get_f IRPP_FEC_SUPER_ENTRY_FORMAT___prefix_Empty_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_Empty_get_f IRPP_FWD_STAGE_FORMATS___prefix_Empty_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b11_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0001_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0010_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0011_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0100_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b0101_get;
    /**
     * returns define data of IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111
     */
    dnx_data_dnx2_arr_prefix_IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111_get_f IRPP_FWD_STAGE_FORMATS___prefix_msb_with_b01111_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Empty_get_f IRPP_IN_LIF_FORMATS___prefix_Empty_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix_get_f IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_W_Learning_Prefix_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1_get_f IRPP_IN_LIF_FORMATS___prefix_Parser_Context_Eth_B1_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1_get_f IRPP_IN_LIF_FORMATS___prefix_Parser_Context_IPvX_DEMUX_B1_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix_get_f IRPP_IN_LIF_FORMATS___prefix_Service_Type_P2P_Prefix_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Free
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Free_get_f IRPP_IN_LIF_FORMATS___prefix_Free_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found_get_f IRPP_IN_LIF_FORMATS___prefix_VRF_VSI_Not_Found_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN_get_f IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_Assignment_Mode_LIF_or_VLAN_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF_get_f IRPP_IN_LIF_FORMATS___prefix_Forward_Domain_VRF_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI_get_f IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_TNIorVNI_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS_get_f IRPP_IN_LIF_FORMATS___prefix_NEXT_LAYER_NETWORK_DOMAIN_PWE_WO_SD_TAGS_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED_get_f IRPP_IN_LIF_FORMATS___prefix_LEARN_PAYLOAD_CONTEXT_SYMMETRIC_LIF_OPTIMIZED_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS_get_f IRPP_IN_LIF_FORMATS___prefix_VSI_P2P_MSBS_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix_get_f IRPP_IN_LIF_FORMATS___prefix_QoS_Profile_short_Prefix_get;
    /**
     * returns define data of IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding
     */
    dnx_data_dnx2_arr_prefix_IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding_get_f IRPP_IN_LIF_FORMATS___prefix_Learn_info_destination_port_encoding_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_Empty
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Empty_get_f IRPP_VSI_FORMATS___prefix_Empty_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix_get_f IRPP_VSI_FORMATS___prefix_VSI_Profile_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix_get_f IRPP_VSI_FORMATS___prefix_Dest_MC_ID_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix_get_f IRPP_VSI_FORMATS___prefix_Dest_FEC_Port_Trap_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix_get_f IRPP_VSI_FORMATS___prefix_Topology_ID_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix_get_f IRPP_VSI_FORMATS___prefix_QOS_Profile_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix_get_f IRPP_VSI_FORMATS___prefix_My_Mac_Prefix_Prefix_get;
    /**
     * returns define data of IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix
     */
    dnx_data_dnx2_arr_prefix_IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix_get_f IRPP_VSI_FORMATS___prefix_VSI_Stat_Obj_Cmd_Prefix_get;
} dnx_data_if_dnx2_arr_prefix_t;

/*
 * }
 */

/*
 * SUBMODULE  - MAX_NOF_ENTRIES:
 * ARR max_nof_entries values
 * {
 */
/*
 * Table value structure
 */
/*
 * Feature enum
 */
/**
 * \brief 
 * Submodule features
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_dnx2_arr_max_nof_entries_feature_nof
} dnx_data_dnx2_arr_max_nof_entries_feature_e;

/*
 * Submodule functions typedefs
 */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef int(
    *dnx_data_dnx2_arr_max_nof_entries_feature_get_f) (
    int unit,
    dnx_data_dnx2_arr_max_nof_entries_feature_e feature);

/**
 * \brief returns define data of AGE_PROFILE_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'AGE_PROFILE_ARR'
 * max_nof_entries of AGE_PROFILE_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     AGE_PROFILE_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_AGE_PROFILE_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_1_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_1_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_1_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_1_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_1_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_2_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_2_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_2_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_2_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_2_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_3_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_3_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_3_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_3_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_3_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_4_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_4_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_4_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_4_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_4_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_5_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_5_ARR_ToS'
 * max_nof_entries of ETPP_ENCAP_5_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_5_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_5_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_ENCAP_ARR_ToS_plus_2
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_ENCAP_ARR_ToS_plus_2'
 * max_nof_entries of ETPP_ENCAP_ARR_ToS_plus_2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ENCAP_ARR_ToS_plus_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_ARR_ToS_plus_2_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_FWD_ARR_ToS
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_FWD_ARR_ToS'
 * max_nof_entries of ETPP_FWD_ARR_ToS
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_FWD_ARR_ToS - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_FWD_ARR_ToS_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_FWD_ARR_ToS_plus_1
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_FWD_ARR_ToS_plus_1'
 * max_nof_entries of ETPP_FWD_ARR_ToS_plus_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_FWD_ARR_ToS_plus_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_FWD_ARR_ToS_plus_1_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_Preprocessing_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_Preprocessing_ARR'
 * max_nof_entries of ETPP_Preprocessing_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Preprocessing_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_Preprocessing_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_Termination_1_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_Termination_1_ARR'
 * max_nof_entries of ETPP_Termination_1_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Termination_1_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_Termination_1_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of ETPP_Termination_2_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ETPP_Termination_2_ARR'
 * max_nof_entries of ETPP_Termination_2_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_Termination_2_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ETPP_Termination_2_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IPPB_ACCEPTED_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IPPB_ACCEPTED_ARR'
 * max_nof_entries of IPPB_ACCEPTED_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_ACCEPTED_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IPPB_ACCEPTED_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR'
 * max_nof_entries of IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IPPB_EXPECTED_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IPPB_EXPECTED_ARR'
 * max_nof_entries of IPPB_EXPECTED_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IPPB_EXPECTED_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IPPB_EXPECTED_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FEC_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_FEC_ARR'
 * max_nof_entries of IRPP_FEC_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FEC_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_FEC_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD1_FWD_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_FWD1_FWD_ARR'
 * max_nof_entries of IRPP_FWD1_FWD_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD1_FWD_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_FWD1_FWD_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_FWD1_RPF_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_FWD1_RPF_ARR'
 * max_nof_entries of IRPP_FWD1_RPF_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD1_RPF_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_FWD1_RPF_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_SUPER_FEC_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_SUPER_FEC_ARR'
 * max_nof_entries of IRPP_SUPER_FEC_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_SUPER_FEC_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_SUPER_FEC_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VSI_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_VSI_ARR'
 * max_nof_entries of IRPP_VSI_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_VSI_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of IRPP_VTT_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'IRPP_VTT_ARR'
 * max_nof_entries of IRPP_VTT_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VTT_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_IRPP_VTT_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of ITPP_MACT_LEARN_JR1_TRANSLATE_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'ITPP_MACT_LEARN_JR1_TRANSLATE_ARR'
 * max_nof_entries of ITPP_MACT_LEARN_JR1_TRANSLATE_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ITPP_MACT_LEARN_JR1_TRANSLATE_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_ITPP_MACT_LEARN_JR1_TRANSLATE_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of PPMC_ERPP_ARR
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'PPMC_ERPP_ARR'
 * max_nof_entries of PPMC_ERPP_ARR
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     PPMC_ERPP_ARR - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_PPMC_ERPP_ARR_get_f) (
    int unit);

/**
 * \brief returns define data of USER_ALLOCATION
 * Module - 'dnx2_arr', Submodule - 'max_nof_entries', data - 'USER_ALLOCATION'
 * max_nof_entries of USER_ALLOCATION
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     USER_ALLOCATION - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_arr_max_nof_entries_USER_ALLOCATION_get_f) (
    int unit);

/*
 * SUBMODULE INTERFACE DNX_DATA_IF_DNX2_ARR - MAX_NOF_ENTRIES:
 * {
 */
/**
 * \brief Interface for dnx2_arr max_nof_entries data
 */
typedef struct
{
    /**
     * get submodule feature - disabled/enabled
     */
    dnx_data_dnx2_arr_max_nof_entries_feature_get_f feature_get;
    /**
     * returns define data of AGE_PROFILE_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_AGE_PROFILE_ARR_get_f AGE_PROFILE_ARR_get;
    /**
     * returns define data of ETPP_ENCAP_1_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_1_ARR_ToS_get_f ETPP_ENCAP_1_ARR_ToS_get;
    /**
     * returns define data of ETPP_ENCAP_2_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_2_ARR_ToS_get_f ETPP_ENCAP_2_ARR_ToS_get;
    /**
     * returns define data of ETPP_ENCAP_3_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_3_ARR_ToS_get_f ETPP_ENCAP_3_ARR_ToS_get;
    /**
     * returns define data of ETPP_ENCAP_4_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_4_ARR_ToS_get_f ETPP_ENCAP_4_ARR_ToS_get;
    /**
     * returns define data of ETPP_ENCAP_5_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_5_ARR_ToS_get_f ETPP_ENCAP_5_ARR_ToS_get;
    /**
     * returns define data of ETPP_ENCAP_ARR_ToS_plus_2
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_ENCAP_ARR_ToS_plus_2_get_f ETPP_ENCAP_ARR_ToS_plus_2_get;
    /**
     * returns define data of ETPP_FWD_ARR_ToS
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_FWD_ARR_ToS_get_f ETPP_FWD_ARR_ToS_get;
    /**
     * returns define data of ETPP_FWD_ARR_ToS_plus_1
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_FWD_ARR_ToS_plus_1_get_f ETPP_FWD_ARR_ToS_plus_1_get;
    /**
     * returns define data of ETPP_Preprocessing_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_Preprocessing_ARR_get_f ETPP_Preprocessing_ARR_get;
    /**
     * returns define data of ETPP_Termination_1_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_Termination_1_ARR_get_f ETPP_Termination_1_ARR_get;
    /**
     * returns define data of ETPP_Termination_2_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_ETPP_Termination_2_ARR_get_f ETPP_Termination_2_ARR_get;
    /**
     * returns define data of IPPB_ACCEPTED_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IPPB_ACCEPTED_ARR_get_f IPPB_ACCEPTED_ARR_get;
    /**
     * returns define data of IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR_get_f IPPB_EXPECTED_ACCEPTED_STRENGTH_ARR_get;
    /**
     * returns define data of IPPB_EXPECTED_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IPPB_EXPECTED_ARR_get_f IPPB_EXPECTED_ARR_get;
    /**
     * returns define data of IRPP_FEC_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_FEC_ARR_get_f IRPP_FEC_ARR_get;
    /**
     * returns define data of IRPP_FWD1_FWD_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_FWD1_FWD_ARR_get_f IRPP_FWD1_FWD_ARR_get;
    /**
     * returns define data of IRPP_FWD1_RPF_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_FWD1_RPF_ARR_get_f IRPP_FWD1_RPF_ARR_get;
    /**
     * returns define data of IRPP_SUPER_FEC_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_SUPER_FEC_ARR_get_f IRPP_SUPER_FEC_ARR_get;
    /**
     * returns define data of IRPP_VSI_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_VSI_ARR_get_f IRPP_VSI_ARR_get;
    /**
     * returns define data of IRPP_VTT_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_IRPP_VTT_ARR_get_f IRPP_VTT_ARR_get;
    /**
     * returns define data of ITPP_MACT_LEARN_JR1_TRANSLATE_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_ITPP_MACT_LEARN_JR1_TRANSLATE_ARR_get_f ITPP_MACT_LEARN_JR1_TRANSLATE_ARR_get;
    /**
     * returns define data of PPMC_ERPP_ARR
     */
    dnx_data_dnx2_arr_max_nof_entries_PPMC_ERPP_ARR_get_f PPMC_ERPP_ARR_get;
    /**
     * returns define data of USER_ALLOCATION
     */
    dnx_data_dnx2_arr_max_nof_entries_USER_ALLOCATION_get_f USER_ALLOCATION_get;
} dnx_data_if_dnx2_arr_max_nof_entries_t;

/*
 * }
 */

/*
 * SUBMODULE  - FORMATS:
 * ARR formats table values
 * {
 */
/*
 * Table value structure
 */
/**
 * \brief Holds values of submodule formats table files
 * Table info:
 * file locations
 */
typedef struct
{
    /**
     * location of arr formats xml file
     */
    char *arr_formats_file;
} dnx_data_dnx2_arr_formats_files_t;

/**
 * \brief Holds values of submodule formats table MACT_AGE_PROFILE_ARR_CFG
 * Table info:
 * MACT_AGE_PROFILE_ARR_CFG
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * AGE_PROFILE
     */
    uint32 AGE_PROFILE;
    /**
     * AGE_PROFILE_valid
     */
    uint32 AGE_PROFILE_valid;
} dnx_data_dnx2_arr_formats_MACT_AGE_PROFILE_ARR_CFG_t;

/**
 * \brief Holds values of submodule formats table ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DUAL_HOMING_CONFIG
     */
    uint32 DUAL_HOMING_CONFIG;
    /**
     * DUAL_HOMING_CONFIG_valid
     */
    uint32 DUAL_HOMING_CONFIG_valid;
    /**
     * EGRESS_LAST_LAYER_CONFIG
     */
    uint32 EGRESS_LAST_LAYER_CONFIG;
    /**
     * EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * SOURCE_IDX_CONFIG
     */
    uint32 SOURCE_IDX_CONFIG;
    /**
     * SOURCE_IDX_CONFIG_valid
     */
    uint32 SOURCE_IDX_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * TTL_IDX_CONFIG
     */
    uint32 TTL_IDX_CONFIG;
    /**
     * TTL_IDX_CONFIG_valid
     */
    uint32 TTL_IDX_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DUAL_HOMING_CONFIG
     */
    uint32 DUAL_HOMING_CONFIG;
    /**
     * DUAL_HOMING_CONFIG_valid
     */
    uint32 DUAL_HOMING_CONFIG_valid;
    /**
     * EGRESS_LAST_LAYER_CONFIG
     */
    uint32 EGRESS_LAST_LAYER_CONFIG;
    /**
     * EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * SOURCE_IDX_CONFIG
     */
    uint32 SOURCE_IDX_CONFIG;
    /**
     * SOURCE_IDX_CONFIG_valid
     */
    uint32 SOURCE_IDX_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * TTL_IDX_CONFIG
     */
    uint32 TTL_IDX_CONFIG;
    /**
     * TTL_IDX_CONFIG_valid
     */
    uint32 TTL_IDX_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DUAL_HOMING_CONFIG
     */
    uint32 DUAL_HOMING_CONFIG;
    /**
     * DUAL_HOMING_CONFIG_valid
     */
    uint32 DUAL_HOMING_CONFIG_valid;
    /**
     * EGRESS_LAST_LAYER_CONFIG
     */
    uint32 EGRESS_LAST_LAYER_CONFIG;
    /**
     * EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * SOURCE_IDX_CONFIG
     */
    uint32 SOURCE_IDX_CONFIG;
    /**
     * SOURCE_IDX_CONFIG_valid
     */
    uint32 SOURCE_IDX_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * TTL_IDX_CONFIG
     */
    uint32 TTL_IDX_CONFIG;
    /**
     * TTL_IDX_CONFIG_valid
     */
    uint32 TTL_IDX_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DUAL_HOMING_CONFIG
     */
    uint32 DUAL_HOMING_CONFIG;
    /**
     * DUAL_HOMING_CONFIG_valid
     */
    uint32 DUAL_HOMING_CONFIG_valid;
    /**
     * EGRESS_LAST_LAYER_CONFIG
     */
    uint32 EGRESS_LAST_LAYER_CONFIG;
    /**
     * EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * SOURCE_IDX_CONFIG
     */
    uint32 SOURCE_IDX_CONFIG;
    /**
     * SOURCE_IDX_CONFIG_valid
     */
    uint32 SOURCE_IDX_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * TTL_IDX_CONFIG
     */
    uint32 TTL_IDX_CONFIG;
    /**
     * TTL_IDX_CONFIG_valid
     */
    uint32 TTL_IDX_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DUAL_HOMING_CONFIG
     */
    uint32 DUAL_HOMING_CONFIG;
    /**
     * DUAL_HOMING_CONFIG_valid
     */
    uint32 DUAL_HOMING_CONFIG_valid;
    /**
     * EGRESS_LAST_LAYER_CONFIG
     */
    uint32 EGRESS_LAST_LAYER_CONFIG;
    /**
     * EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG;
    /**
     * FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_NETWORK_NAME_CONFIG_valid;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG;
    /**
     * LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid
     */
    uint32 LIF_ADDITIONAL_HEADERS_PROFILE_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * SOURCE_IDX_CONFIG
     */
    uint32 SOURCE_IDX_CONFIG;
    /**
     * SOURCE_IDX_CONFIG_valid
     */
    uint32 SOURCE_IDX_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * TTL_IDX_CONFIG
     */
    uint32 TTL_IDX_CONFIG;
    /**
     * TTL_IDX_CONFIG_valid
     */
    uint32 TTL_IDX_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 * Table info:
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ETHERNET_EGRESS_LAST_LAYER_CONFIG
     */
    uint32 ETHERNET_EGRESS_LAST_LAYER_CONFIG;
    /**
     * ETHERNET_EGRESS_LAST_LAYER_CONFIG_valid
     */
    uint32 ETHERNET_EGRESS_LAST_LAYER_CONFIG_valid;
    /**
     * ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * FORWARDING_DOMAIN_CONFIG
     */
    uint32 FORWARDING_DOMAIN_CONFIG;
    /**
     * FORWARDING_DOMAIN_CONFIG_valid
     */
    uint32 FORWARDING_DOMAIN_CONFIG_valid;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * MTU_PROFILE_CONFIG
     */
    uint32 MTU_PROFILE_CONFIG;
    /**
     * MTU_PROFILE_CONFIG_valid
     */
    uint32 MTU_PROFILE_CONFIG_valid;
    /**
     * NWK_QOS_INDEX_CONFIG
     */
    uint32 NWK_QOS_INDEX_CONFIG;
    /**
     * NWK_QOS_INDEX_CONFIG_valid
     */
    uint32 NWK_QOS_INDEX_CONFIG_valid;
    /**
     * ETHERNET_OUTLIF_PROFILE_CONFIG
     */
    uint32 ETHERNET_OUTLIF_PROFILE_CONFIG;
    /**
     * ETHERNET_OUTLIF_PROFILE_CONFIG_valid
     */
    uint32 ETHERNET_OUTLIF_PROFILE_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_COMMAND_CONFIG_valid;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG;
    /**
     * LIF_STATISTICS_OBJECT_ID_CONFIG_valid
     */
    uint32 LIF_STATISTICS_OBJECT_ID_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
    /**
     * ETHERNET_EGRESS_VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 ETHERNET_EGRESS_VLAN_EDIT_PROFILE_CONFIG;
    /**
     * ETHERNET_EGRESS_VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 ETHERNET_EGRESS_VLAN_EDIT_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_t;

/**
 * \brief Holds values of submodule formats table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 * Table info:
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG
     */
    uint32 ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG;
    /**
     * ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid
     */
    uint32 ETHERNET_EGRESS_VLAN_MEMBERSHIP_INTERFACE_CONFIG_valid;
    /**
     * ENCAP_DESTINATION_CONFIG
     */
    uint32 ENCAP_DESTINATION_CONFIG;
    /**
     * ENCAP_DESTINATION_CONFIG_valid
     */
    uint32 ENCAP_DESTINATION_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_t;

/**
 * \brief Holds values of submodule formats table ETPPA_PRP_EES_ARR_CONFIGURATION
 * Table info:
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * LLVP_PROFILE_CONFIG
     */
    uint32 LLVP_PROFILE_CONFIG;
    /**
     * LLVP_PROFILE_CONFIG_valid
     */
    uint32 LLVP_PROFILE_CONFIG_valid;
    /**
     * EM_ACCESS_CMD_CONFIG
     */
    uint32 EM_ACCESS_CMD_CONFIG;
    /**
     * EM_ACCESS_CMD_CONFIG_valid
     */
    uint32 EM_ACCESS_CMD_CONFIG_valid;
    /**
     * NAME_SPACE_CONFIG
     */
    uint32 NAME_SPACE_CONFIG;
    /**
     * NAME_SPACE_CONFIG_valid
     */
    uint32 NAME_SPACE_CONFIG_valid;
    /**
     * FWD_DOMAIN_CONFIG
     */
    uint32 FWD_DOMAIN_CONFIG;
    /**
     * FWD_DOMAIN_CONFIG_valid
     */
    uint32 FWD_DOMAIN_CONFIG_valid;
    /**
     * OAM_LIF_SET_CONFIG
     */
    uint32 OAM_LIF_SET_CONFIG;
    /**
     * OAM_LIF_SET_CONFIG_valid
     */
    uint32 OAM_LIF_SET_CONFIG_valid;
    /**
     * OUTLIF_PROFILE_CONFIG
     */
    uint32 OUTLIF_PROFILE_CONFIG;
    /**
     * OUTLIF_PROFILE_CONFIG_valid
     */
    uint32 OUTLIF_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_t;

/**
 * \brief Holds values of submodule formats table ETPPA_PRP_EES_ARR_CONFIGURATION___array
 * Table info:
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * LLVP_PROFILE_CONFIG
     */
    uint32 LLVP_PROFILE_CONFIG;
    /**
     * LLVP_PROFILE_CONFIG_valid
     */
    uint32 LLVP_PROFILE_CONFIG_valid;
    /**
     * EM_ACCESS_CMD_CONFIG
     */
    uint32 EM_ACCESS_CMD_CONFIG;
    /**
     * EM_ACCESS_CMD_CONFIG_valid
     */
    uint32 EM_ACCESS_CMD_CONFIG_valid;
    /**
     * NAME_SPACE_CONFIG
     */
    uint32 NAME_SPACE_CONFIG;
    /**
     * NAME_SPACE_CONFIG_valid
     */
    uint32 NAME_SPACE_CONFIG_valid;
    /**
     * FWD_DOMAIN_CONFIG
     */
    uint32 FWD_DOMAIN_CONFIG;
    /**
     * FWD_DOMAIN_CONFIG_valid
     */
    uint32 FWD_DOMAIN_CONFIG_valid;
    /**
     * OAM_LIF_SET_CONFIG
     */
    uint32 OAM_LIF_SET_CONFIG;
    /**
     * OAM_LIF_SET_CONFIG_valid
     */
    uint32 OAM_LIF_SET_CONFIG_valid;
    /**
     * OUTLIF_PROFILE_CONFIG
     */
    uint32 OUTLIF_PROFILE_CONFIG;
    /**
     * OUTLIF_PROFILE_CONFIG_valid
     */
    uint32 OUTLIF_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_t;

/**
 * \brief Holds values of submodule formats table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * Table info:
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ACTION_PROFILE_CONFIG
     */
    uint32 ACTION_PROFILE_CONFIG;
    /**
     * ACTION_PROFILE_CONFIG_valid
     */
    uint32 ACTION_PROFILE_CONFIG_valid;
    /**
     * PROTECTION_PATH_CONFIG
     */
    uint32 PROTECTION_PATH_CONFIG;
    /**
     * PROTECTION_PATH_CONFIG_valid
     */
    uint32 PROTECTION_PATH_CONFIG_valid;
    /**
     * PROTECTION_PTR_CONFIG
     */
    uint32 PROTECTION_PTR_CONFIG;
    /**
     * PROTECTION_PTR_CONFIG_valid
     */
    uint32 PROTECTION_PTR_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_t;

/**
 * \brief Holds values of submodule formats table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array
 * Table info:
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ACTION_PROFILE_CONFIG
     */
    uint32 ACTION_PROFILE_CONFIG;
    /**
     * ACTION_PROFILE_CONFIG_valid
     */
    uint32 ACTION_PROFILE_CONFIG_valid;
    /**
     * PROTECTION_PATH_CONFIG
     */
    uint32 PROTECTION_PATH_CONFIG;
    /**
     * PROTECTION_PATH_CONFIG_valid
     */
    uint32 PROTECTION_PATH_CONFIG_valid;
    /**
     * PROTECTION_PTR_CONFIG
     */
    uint32 PROTECTION_PTR_CONFIG;
    /**
     * PROTECTION_PTR_CONFIG_valid
     */
    uint32 PROTECTION_PTR_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_t;

/**
 * \brief Holds values of submodule formats table ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 * Table info:
 * ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * QOS_MODEL_CONFIG
     */
    uint32 QOS_MODEL_CONFIG;
    /**
     * QOS_MODEL_CONFIG_valid
     */
    uint32 QOS_MODEL_CONFIG_valid;
    /**
     * NWK_QOS_IDX_CONFIG
     */
    uint32 NWK_QOS_IDX_CONFIG;
    /**
     * NWK_QOS_IDX_CONFIG_valid
     */
    uint32 NWK_QOS_IDX_CONFIG_valid;
    /**
     * OUTLIF_PROFILE_CONFIG
     */
    uint32 OUTLIF_PROFILE_CONFIG;
    /**
     * OUTLIF_PROFILE_CONFIG_valid
     */
    uint32 OUTLIF_PROFILE_CONFIG_valid;
    /**
     * REMARK_PROFILE_CONFIG
     */
    uint32 REMARK_PROFILE_CONFIG;
    /**
     * REMARK_PROFILE_CONFIG_valid
     */
    uint32 REMARK_PROFILE_CONFIG_valid;
    /**
     * TTL_MODEL_CONFIG
     */
    uint32 TTL_MODEL_CONFIG;
    /**
     * TTL_MODEL_CONFIG_valid
     */
    uint32 TTL_MODEL_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_t;

/**
 * \brief Holds values of submodule formats table IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 * Table info:
 * IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DATA_1
     */
    uint32 DATA_1;
    /**
     * DATA_1_valid
     */
    uint32 DATA_1_valid;
    /**
     * DATA_2
     */
    uint32 DATA_2;
    /**
     * DATA_2_valid
     */
    uint32 DATA_2_valid;
    /**
     * TYPE
     */
    uint32 TYPE;
    /**
     * TYPE_valid
     */
    uint32 TYPE_valid;
    /**
     * DESTINATION
     */
    uint32 DESTINATION;
    /**
     * DESTINATION_valid
     */
    uint32 DESTINATION_valid;
    /**
     * STRENGTH
     */
    uint32 STRENGTH;
    /**
     * STRENGTH_valid
     */
    uint32 STRENGTH_valid;
} dnx_data_dnx2_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_t;

/**
 * \brief Holds values of submodule formats table MACT_MRQ_ARR_CFG
 * Table info:
 * MACT_MRQ_ARR_CFG
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * STRENGTH
     */
    uint32 STRENGTH;
    /**
     * STRENGTH_valid
     */
    uint32 STRENGTH_valid;
} dnx_data_dnx2_arr_formats_MACT_MRQ_ARR_CFG_t;

/**
 * \brief Holds values of submodule formats table IPPB_EXPECTED_ARR_FORMAT_CONFIG
 * Table info:
 * IPPB_EXPECTED_ARR_FORMAT_CONFIG
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION
     */
    uint32 DESTINATION;
    /**
     * DESTINATION_valid
     */
    uint32 DESTINATION_valid;
    /**
     * DATA_1
     */
    uint32 DATA_1;
    /**
     * DATA_1_valid
     */
    uint32 DATA_1_valid;
    /**
     * DATA_2
     */
    uint32 DATA_2;
    /**
     * DATA_2_valid
     */
    uint32 DATA_2_valid;
    /**
     * TYPE
     */
    uint32 TYPE;
    /**
     * TYPE_valid
     */
    uint32 TYPE_valid;
    /**
     * STRENGTH
     */
    uint32 STRENGTH;
    /**
     * STRENGTH_valid
     */
    uint32 STRENGTH_valid;
} dnx_data_dnx2_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_t;

/**
 * \brief Holds values of submodule formats table IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPD_FEC_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * OUT_LIF_0_CONFIG
     */
    uint32 OUT_LIF_0_CONFIG;
    /**
     * OUT_LIF_0_CONFIG_valid
     */
    uint32 OUT_LIF_0_CONFIG_valid;
    /**
     * OUT_LIF_1_CONFIG
     */
    uint32 OUT_LIF_1_CONFIG;
    /**
     * OUT_LIF_1_CONFIG_valid
     */
    uint32 OUT_LIF_1_CONFIG_valid;
    /**
     * WEAK_TM_FLOW_CONFIG
     */
    uint32 WEAK_TM_FLOW_CONFIG;
    /**
     * WEAK_TM_FLOW_CONFIG_valid
     */
    uint32 WEAK_TM_FLOW_CONFIG_valid;
    /**
     * MC_RPF_MODE_CONFIG
     */
    uint32 MC_RPF_MODE_CONFIG;
    /**
     * MC_RPF_MODE_CONFIG_valid
     */
    uint32 MC_RPF_MODE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * OUTLIF_0_CONFIG
     */
    uint32 OUTLIF_0_CONFIG;
    /**
     * OUTLIF_0_CONFIG_valid
     */
    uint32 OUTLIF_0_CONFIG_valid;
    /**
     * OUTLIF_1_CONFIG
     */
    uint32 OUTLIF_1_CONFIG;
    /**
     * OUTLIF_1_CONFIG_valid
     */
    uint32 OUTLIF_1_CONFIG_valid;
    /**
     * IRPP_FWD_RAW_DATA
     */
    uint32 IRPP_FWD_RAW_DATA;
    /**
     * IRPP_FWD_RAW_DATA_valid
     */
    uint32 IRPP_FWD_RAW_DATA_valid;
    /**
     * DEFAULT_CONFIG
     */
    uint32 DEFAULT_CONFIG;
    /**
     * DEFAULT_CONFIG_valid
     */
    uint32 DEFAULT_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * OUTLIF_0_CONFIG
     */
    uint32 OUTLIF_0_CONFIG;
    /**
     * OUTLIF_0_CONFIG_valid
     */
    uint32 OUTLIF_0_CONFIG_valid;
    /**
     * DEFAULT_CONFIG
     */
    uint32 DEFAULT_CONFIG;
    /**
     * DEFAULT_CONFIG_valid
     */
    uint32 DEFAULT_CONFIG_valid;
    /**
     * SA_DROP_CONFIG
     */
    uint32 SA_DROP_CONFIG;
    /**
     * SA_DROP_CONFIG_valid
     */
    uint32 SA_DROP_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * LEFT_CONFIG
     */
    uint32 LEFT_CONFIG;
    /**
     * LEFT_CONFIG_valid
     */
    uint32 LEFT_CONFIG_valid;
    /**
     * LEFT_STAT_OBJECT_CMD_CONFIG
     */
    uint32 LEFT_STAT_OBJECT_CMD_CONFIG;
    /**
     * LEFT_STAT_OBJECT_CMD_CONFIG_valid
     */
    uint32 LEFT_STAT_OBJECT_CMD_CONFIG_valid;
    /**
     * LEFT_STAT_OBJECT_ID_CONFIG
     */
    uint32 LEFT_STAT_OBJECT_ID_CONFIG;
    /**
     * LEFT_STAT_OBJECT_ID_CONFIG_valid
     */
    uint32 LEFT_STAT_OBJECT_ID_CONFIG_valid;
    /**
     * PROTECTION_PTR_CONFIG
     */
    uint32 PROTECTION_PTR_CONFIG;
    /**
     * PROTECTION_PTR_CONFIG_valid
     */
    uint32 PROTECTION_PTR_CONFIG_valid;
    /**
     * RIGHT_CONFIG
     */
    uint32 RIGHT_CONFIG;
    /**
     * RIGHT_CONFIG_valid
     */
    uint32 RIGHT_CONFIG_valid;
    /**
     * RIGHT_STAT_OBJECT_CMD_CONFIG
     */
    uint32 RIGHT_STAT_OBJECT_CMD_CONFIG;
    /**
     * RIGHT_STAT_OBJECT_CMD_CONFIG_valid
     */
    uint32 RIGHT_STAT_OBJECT_CMD_CONFIG_valid;
    /**
     * RIGHT_STAT_OBJECT_ID_CONFIG
     */
    uint32 RIGHT_STAT_OBJECT_ID_CONFIG;
    /**
     * RIGHT_STAT_OBJECT_ID_CONFIG_valid
     */
    uint32 RIGHT_STAT_OBJECT_ID_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 * Table info:
 * IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DA_NOT_FOUND_DESTINATION_CONFIG
     */
    uint32 DA_NOT_FOUND_DESTINATION_CONFIG;
    /**
     * DA_NOT_FOUND_DESTINATION_CONFIG_valid
     */
    uint32 DA_NOT_FOUND_DESTINATION_CONFIG_valid;
    /**
     * ECN_MAPPING_PROFILE_CONFIG
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG;
    /**
     * ECN_MAPPING_PROFILE_CONFIG_valid
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG_valid;
    /**
     * MY_MAC_CONFIG
     */
    uint32 MY_MAC_CONFIG;
    /**
     * MY_MAC_CONFIG_valid
     */
    uint32 MY_MAC_CONFIG_valid;
    /**
     * MY_MAC_PREFIX_CONFIG
     */
    uint32 MY_MAC_PREFIX_CONFIG;
    /**
     * MY_MAC_PREFIX_CONFIG_valid
     */
    uint32 MY_MAC_PREFIX_CONFIG_valid;
    /**
     * PROPAGATION_PROFILE_CONFIG
     */
    uint32 PROPAGATION_PROFILE_CONFIG;
    /**
     * PROPAGATION_PROFILE_CONFIG_valid
     */
    uint32 PROPAGATION_PROFILE_CONFIG_valid;
    /**
     * QOS_PROFILE_CONFIG
     */
    uint32 QOS_PROFILE_CONFIG;
    /**
     * QOS_PROFILE_CONFIG_valid
     */
    uint32 QOS_PROFILE_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
    /**
     * TOPOLOGY_ID_CONFIG
     */
    uint32 TOPOLOGY_ID_CONFIG;
    /**
     * TOPOLOGY_ID_CONFIG_valid
     */
    uint32 TOPOLOGY_ID_CONFIG_valid;
    /**
     * VRF_CONFIG
     */
    uint32 VRF_CONFIG;
    /**
     * VRF_CONFIG_valid
     */
    uint32 VRF_CONFIG_valid;
    /**
     * VRID_BITMAP_CONFIG
     */
    uint32 VRID_BITMAP_CONFIG;
    /**
     * VRID_BITMAP_CONFIG_valid
     */
    uint32 VRID_BITMAP_CONFIG_valid;
    /**
     * VSI_PROFILE_CONFIG
     */
    uint32 VSI_PROFILE_CONFIG;
    /**
     * VSI_PROFILE_CONFIG_valid
     */
    uint32 VSI_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_t;

/**
 * \brief Holds values of submodule formats table IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 * Table info:
 * IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DA_NOT_FOUND_DESTINATION_CONFIG
     */
    uint32 DA_NOT_FOUND_DESTINATION_CONFIG;
    /**
     * DA_NOT_FOUND_DESTINATION_CONFIG_valid
     */
    uint32 DA_NOT_FOUND_DESTINATION_CONFIG_valid;
    /**
     * ECN_MAPPING_PROFILE_CONFIG
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG;
    /**
     * ECN_MAPPING_PROFILE_CONFIG_valid
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG_valid;
    /**
     * MY_MAC_CONFIG
     */
    uint32 MY_MAC_CONFIG;
    /**
     * MY_MAC_CONFIG_valid
     */
    uint32 MY_MAC_CONFIG_valid;
    /**
     * MY_MAC_PREFIX_CONFIG
     */
    uint32 MY_MAC_PREFIX_CONFIG;
    /**
     * MY_MAC_PREFIX_CONFIG_valid
     */
    uint32 MY_MAC_PREFIX_CONFIG_valid;
    /**
     * PROPAGATION_PROFILE_CONFIG
     */
    uint32 PROPAGATION_PROFILE_CONFIG;
    /**
     * PROPAGATION_PROFILE_CONFIG_valid
     */
    uint32 PROPAGATION_PROFILE_CONFIG_valid;
    /**
     * QOS_PROFILE_CONFIG
     */
    uint32 QOS_PROFILE_CONFIG;
    /**
     * QOS_PROFILE_CONFIG_valid
     */
    uint32 QOS_PROFILE_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
    /**
     * TOPOLOGY_ID_CONFIG
     */
    uint32 TOPOLOGY_ID_CONFIG;
    /**
     * TOPOLOGY_ID_CONFIG_valid
     */
    uint32 TOPOLOGY_ID_CONFIG_valid;
    /**
     * VRF_CONFIG
     */
    uint32 VRF_CONFIG;
    /**
     * VRF_CONFIG_valid
     */
    uint32 VRF_CONFIG_valid;
    /**
     * VRID_BITMAP_CONFIG
     */
    uint32 VRID_BITMAP_CONFIG;
    /**
     * VRID_BITMAP_CONFIG_valid
     */
    uint32 VRID_BITMAP_CONFIG_valid;
    /**
     * VSI_PROFILE_CONFIG
     */
    uint32 VSI_PROFILE_CONFIG;
    /**
     * VSI_PROFILE_CONFIG_valid
     */
    uint32 VSI_PROFILE_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPA_VTT_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ACTION_PROFILE_IDX_CONFIG
     */
    uint32 ACTION_PROFILE_IDX_CONFIG;
    /**
     * ACTION_PROFILE_IDX_CONFIG_valid
     */
    uint32 ACTION_PROFILE_IDX_CONFIG_valid;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * ECN_MAPPING_PROFILE_CONFIG
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG;
    /**
     * ECN_MAPPING_PROFILE_CONFIG_valid
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG
     */
    uint32 FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG;
    /**
     * FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG_valid;
    /**
     * SYS_INLIF_CONFIG
     */
    uint32 SYS_INLIF_CONFIG;
    /**
     * SYS_INLIF_CONFIG_valid
     */
    uint32 SYS_INLIF_CONFIG_valid;
    /**
     * OUT_LIF_CONFIG
     */
    uint32 OUT_LIF_CONFIG;
    /**
     * OUT_LIF_CONFIG_valid
     */
    uint32 OUT_LIF_CONFIG_valid;
    /**
     * LIF_PROFILE_CONFIG
     */
    uint32 LIF_PROFILE_CONFIG;
    /**
     * LIF_PROFILE_CONFIG_valid
     */
    uint32 LIF_PROFILE_CONFIG_valid;
    /**
     * LEARN_EN_CONFIG
     */
    uint32 LEARN_EN_CONFIG;
    /**
     * LEARN_EN_CONFIG_valid
     */
    uint32 LEARN_EN_CONFIG_valid;
    /**
     * LEARN_INFO_CONFIG
     */
    uint32 LEARN_INFO_CONFIG;
    /**
     * LEARN_INFO_CONFIG_valid
     */
    uint32 LEARN_INFO_CONFIG_valid;
    /**
     * LEARN_PAYLOAD_CONTEXT_CONFIG
     */
    uint32 LEARN_PAYLOAD_CONTEXT_CONFIG;
    /**
     * LEARN_PAYLOAD_CONTEXT_CONFIG_valid
     */
    uint32 LEARN_PAYLOAD_CONTEXT_CONFIG_valid;
    /**
     * LIF_GENERIC_DATA_0_CONFIG
     */
    uint32 LIF_GENERIC_DATA_0_CONFIG;
    /**
     * LIF_GENERIC_DATA_0_CONFIG_valid
     */
    uint32 LIF_GENERIC_DATA_0_CONFIG_valid;
    /**
     * LIF_GENERIC_DATA_1_CONFIG
     */
    uint32 LIF_GENERIC_DATA_1_CONFIG;
    /**
     * LIF_GENERIC_DATA_1_CONFIG_valid
     */
    uint32 LIF_GENERIC_DATA_1_CONFIG_valid;
    /**
     * PROTECTION_PTR_CONFIG
     */
    uint32 PROTECTION_PTR_CONFIG;
    /**
     * PROTECTION_PTR_CONFIG_valid
     */
    uint32 PROTECTION_PTR_CONFIG_valid;
    /**
     * NEXT_LAYER_NETWORK_DOMAIN_CONFIG
     */
    uint32 NEXT_LAYER_NETWORK_DOMAIN_CONFIG;
    /**
     * NEXT_LAYER_NETWORK_DOMAIN_CONFIG_valid
     */
    uint32 NEXT_LAYER_NETWORK_DOMAIN_CONFIG_valid;
    /**
     * NEXT_PARSER_CONTEXT_CONFIG
     */
    uint32 NEXT_PARSER_CONTEXT_CONFIG;
    /**
     * NEXT_PARSER_CONTEXT_CONFIG_valid
     */
    uint32 NEXT_PARSER_CONTEXT_CONFIG_valid;
    /**
     * OAM_LIF_SET_CONFIG
     */
    uint32 OAM_LIF_SET_CONFIG;
    /**
     * OAM_LIF_SET_CONFIG_valid
     */
    uint32 OAM_LIF_SET_CONFIG_valid;
    /**
     * PROPAGATION_PROFILE_CONFIG
     */
    uint32 PROPAGATION_PROFILE_CONFIG;
    /**
     * PROPAGATION_PROFILE_CONFIG_valid
     */
    uint32 PROPAGATION_PROFILE_CONFIG_valid;
    /**
     * PROTECTION_PATH_CONFIG
     */
    uint32 PROTECTION_PATH_CONFIG;
    /**
     * PROTECTION_PATH_CONFIG_valid
     */
    uint32 PROTECTION_PATH_CONFIG_valid;
    /**
     * QOS_PROFILE_CONFIG
     */
    uint32 QOS_PROFILE_CONFIG;
    /**
     * QOS_PROFILE_CONFIG_valid
     */
    uint32 QOS_PROFILE_CONFIG_valid;
    /**
     * SERVICE_TYPE_CONFIG
     */
    uint32 SERVICE_TYPE_CONFIG;
    /**
     * SERVICE_TYPE_CONFIG_valid
     */
    uint32 SERVICE_TYPE_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
    /**
     * TERMINATION_TYPE_CONFIG
     */
    uint32 TERMINATION_TYPE_CONFIG;
    /**
     * TERMINATION_TYPE_CONFIG_valid
     */
    uint32 TERMINATION_TYPE_CONFIG_valid;
    /**
     * VLAN_EDIT_PCP_DEI_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PCP_DEI_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PCP_DEI_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PCP_DEI_PROFILE_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
    /**
     * VLAN_EDIT_VID_1_CONFIG
     */
    uint32 VLAN_EDIT_VID_1_CONFIG;
    /**
     * VLAN_EDIT_VID_1_CONFIG_valid
     */
    uint32 VLAN_EDIT_VID_1_CONFIG_valid;
    /**
     * VLAN_EDIT_VID_2_CONFIG
     */
    uint32 VLAN_EDIT_VID_2_CONFIG;
    /**
     * VLAN_EDIT_VID_2_CONFIG_valid
     */
    uint32 VLAN_EDIT_VID_2_CONFIG_valid;
    /**
     * VLAN_MEMBER_IF_CONFIG
     */
    uint32 VLAN_MEMBER_IF_CONFIG;
    /**
     * VLAN_MEMBER_IF_CONFIG_valid
     */
    uint32 VLAN_MEMBER_IF_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array
 * Table info:
 * IPPF_VTT_FORMAT_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ACTION_PROFILE_IDX_CONFIG
     */
    uint32 ACTION_PROFILE_IDX_CONFIG;
    /**
     * ACTION_PROFILE_IDX_CONFIG_valid
     */
    uint32 ACTION_PROFILE_IDX_CONFIG_valid;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * ECN_MAPPING_PROFILE_CONFIG
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG;
    /**
     * ECN_MAPPING_PROFILE_CONFIG_valid
     */
    uint32 ECN_MAPPING_PROFILE_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_CONFIG
     */
    uint32 FORWARD_DOMAIN_CONFIG;
    /**
     * FORWARD_DOMAIN_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_CONFIG_valid;
    /**
     * FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG
     */
    uint32 FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG;
    /**
     * FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG_valid
     */
    uint32 FORWARD_DOMAIN_ASSIGNMENT_MODE_CONFIG_valid;
    /**
     * SYS_INLIF_CONFIG
     */
    uint32 SYS_INLIF_CONFIG;
    /**
     * SYS_INLIF_CONFIG_valid
     */
    uint32 SYS_INLIF_CONFIG_valid;
    /**
     * OUT_LIF_CONFIG
     */
    uint32 OUT_LIF_CONFIG;
    /**
     * OUT_LIF_CONFIG_valid
     */
    uint32 OUT_LIF_CONFIG_valid;
    /**
     * LIF_PROFILE_CONFIG
     */
    uint32 LIF_PROFILE_CONFIG;
    /**
     * LIF_PROFILE_CONFIG_valid
     */
    uint32 LIF_PROFILE_CONFIG_valid;
    /**
     * LEARN_EN_CONFIG
     */
    uint32 LEARN_EN_CONFIG;
    /**
     * LEARN_EN_CONFIG_valid
     */
    uint32 LEARN_EN_CONFIG_valid;
    /**
     * LEARN_INFO_CONFIG
     */
    uint32 LEARN_INFO_CONFIG;
    /**
     * LEARN_INFO_CONFIG_valid
     */
    uint32 LEARN_INFO_CONFIG_valid;
    /**
     * LEARN_PAYLOAD_CONTEXT_CONFIG
     */
    uint32 LEARN_PAYLOAD_CONTEXT_CONFIG;
    /**
     * LEARN_PAYLOAD_CONTEXT_CONFIG_valid
     */
    uint32 LEARN_PAYLOAD_CONTEXT_CONFIG_valid;
    /**
     * LIF_GENERIC_DATA_0_CONFIG
     */
    uint32 LIF_GENERIC_DATA_0_CONFIG;
    /**
     * LIF_GENERIC_DATA_0_CONFIG_valid
     */
    uint32 LIF_GENERIC_DATA_0_CONFIG_valid;
    /**
     * LIF_GENERIC_DATA_1_CONFIG
     */
    uint32 LIF_GENERIC_DATA_1_CONFIG;
    /**
     * LIF_GENERIC_DATA_1_CONFIG_valid
     */
    uint32 LIF_GENERIC_DATA_1_CONFIG_valid;
    /**
     * PROTECTION_PTR_CONFIG
     */
    uint32 PROTECTION_PTR_CONFIG;
    /**
     * PROTECTION_PTR_CONFIG_valid
     */
    uint32 PROTECTION_PTR_CONFIG_valid;
    /**
     * NEXT_LAYER_NETWORK_DOMAIN_CONFIG
     */
    uint32 NEXT_LAYER_NETWORK_DOMAIN_CONFIG;
    /**
     * NEXT_LAYER_NETWORK_DOMAIN_CONFIG_valid
     */
    uint32 NEXT_LAYER_NETWORK_DOMAIN_CONFIG_valid;
    /**
     * NEXT_PARSER_CONTEXT_CONFIG
     */
    uint32 NEXT_PARSER_CONTEXT_CONFIG;
    /**
     * NEXT_PARSER_CONTEXT_CONFIG_valid
     */
    uint32 NEXT_PARSER_CONTEXT_CONFIG_valid;
    /**
     * OAM_LIF_SET_CONFIG
     */
    uint32 OAM_LIF_SET_CONFIG;
    /**
     * OAM_LIF_SET_CONFIG_valid
     */
    uint32 OAM_LIF_SET_CONFIG_valid;
    /**
     * PROPAGATION_PROFILE_CONFIG
     */
    uint32 PROPAGATION_PROFILE_CONFIG;
    /**
     * PROPAGATION_PROFILE_CONFIG_valid
     */
    uint32 PROPAGATION_PROFILE_CONFIG_valid;
    /**
     * PROTECTION_PATH_CONFIG
     */
    uint32 PROTECTION_PATH_CONFIG;
    /**
     * PROTECTION_PATH_CONFIG_valid
     */
    uint32 PROTECTION_PATH_CONFIG_valid;
    /**
     * QOS_PROFILE_CONFIG
     */
    uint32 QOS_PROFILE_CONFIG;
    /**
     * QOS_PROFILE_CONFIG_valid
     */
    uint32 QOS_PROFILE_CONFIG_valid;
    /**
     * SERVICE_TYPE_CONFIG
     */
    uint32 SERVICE_TYPE_CONFIG;
    /**
     * SERVICE_TYPE_CONFIG_valid
     */
    uint32 SERVICE_TYPE_CONFIG_valid;
    /**
     * STAT_OBJ_CMD_CONFIG
     */
    uint32 STAT_OBJ_CMD_CONFIG;
    /**
     * STAT_OBJ_CMD_CONFIG_valid
     */
    uint32 STAT_OBJ_CMD_CONFIG_valid;
    /**
     * STAT_OBJ_ID_CONFIG
     */
    uint32 STAT_OBJ_ID_CONFIG;
    /**
     * STAT_OBJ_ID_CONFIG_valid
     */
    uint32 STAT_OBJ_ID_CONFIG_valid;
    /**
     * TERMINATION_TYPE_CONFIG
     */
    uint32 TERMINATION_TYPE_CONFIG;
    /**
     * TERMINATION_TYPE_CONFIG_valid
     */
    uint32 TERMINATION_TYPE_CONFIG_valid;
    /**
     * VLAN_EDIT_PCP_DEI_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PCP_DEI_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PCP_DEI_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PCP_DEI_PROFILE_CONFIG_valid;
    /**
     * VLAN_EDIT_PROFILE_CONFIG
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG;
    /**
     * VLAN_EDIT_PROFILE_CONFIG_valid
     */
    uint32 VLAN_EDIT_PROFILE_CONFIG_valid;
    /**
     * VLAN_EDIT_VID_1_CONFIG
     */
    uint32 VLAN_EDIT_VID_1_CONFIG;
    /**
     * VLAN_EDIT_VID_1_CONFIG_valid
     */
    uint32 VLAN_EDIT_VID_1_CONFIG_valid;
    /**
     * VLAN_EDIT_VID_2_CONFIG
     */
    uint32 VLAN_EDIT_VID_2_CONFIG;
    /**
     * VLAN_EDIT_VID_2_CONFIG_valid
     */
    uint32 VLAN_EDIT_VID_2_CONFIG_valid;
    /**
     * VLAN_MEMBER_IF_CONFIG
     */
    uint32 VLAN_MEMBER_IF_CONFIG;
    /**
     * VLAN_MEMBER_IF_CONFIG_valid
     */
    uint32 VLAN_MEMBER_IF_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_t;

/**
 * \brief Holds values of submodule formats table IPPD_LEARN_ARR_CONFIGURATION_TABLE
 * Table info:
 * IPPD_LEARN_ARR_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * OUTLIF_CONFIG
     */
    uint32 OUTLIF_CONFIG;
    /**
     * OUTLIF_CONFIG_valid
     */
    uint32 OUTLIF_CONFIG_valid;
} dnx_data_dnx2_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table OLP_LEARN_ARR_CONFIGURATION_TABLE
 * Table info:
 * OLP_LEARN_ARR_CONFIGURATION_TABLE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * DESTINATION_CONFIG
     */
    uint32 DESTINATION_CONFIG;
    /**
     * DESTINATION_CONFIG_valid
     */
    uint32 DESTINATION_CONFIG_valid;
    /**
     * EEI_CONFIG
     */
    uint32 EEI_CONFIG;
    /**
     * EEI_CONFIG_valid
     */
    uint32 EEI_CONFIG_valid;
    /**
     * OUTLIF_CONFIG
     */
    uint32 OUTLIF_CONFIG;
    /**
     * OUTLIF_CONFIG_valid
     */
    uint32 OUTLIF_CONFIG_valid;
} dnx_data_dnx2_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_t;

/**
 * \brief Holds values of submodule formats table ERPP_EGRESS_MCDB_FORMAT_CFG
 * Table info:
 * ERPP_EGRESS_MCDB_FORMAT_CFG
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * MCDB_OUTLIF_0_CONFIG
     */
    uint32 MCDB_OUTLIF_0_CONFIG;
    /**
     * MCDB_OUTLIF_0_CONFIG_valid
     */
    uint32 MCDB_OUTLIF_0_CONFIG_valid;
    /**
     * MCDB_OUTLIF_1_CONFIG
     */
    uint32 MCDB_OUTLIF_1_CONFIG;
    /**
     * MCDB_OUTLIF_1_CONFIG_valid
     */
    uint32 MCDB_OUTLIF_1_CONFIG_valid;
    /**
     * MCDB_OUTLIF_2_CONFIG
     */
    uint32 MCDB_OUTLIF_2_CONFIG;
    /**
     * MCDB_OUTLIF_2_CONFIG_valid
     */
    uint32 MCDB_OUTLIF_2_CONFIG_valid;
} dnx_data_dnx2_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_t;

/*
 * Feature enum
 */
/**
 * \brief 
 * Submodule features
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_dnx2_arr_formats_feature_nof
} dnx_data_dnx2_arr_formats_feature_e;

/*
 * Submodule functions typedefs
 */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef int(
    *dnx_data_dnx2_arr_formats_feature_get_f) (
    int unit,
    dnx_data_dnx2_arr_formats_feature_e feature);

/**
 * \brief get table files entry 
 * file locations
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     files - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_files_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_files_t *(
    *dnx_data_dnx2_arr_formats_files_get_f) (
    int unit);

/**
 * \brief get table MACT_AGE_PROFILE_ARR_CFG entry 
 * MACT_AGE_PROFILE_ARR_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MACT_AGE_PROFILE_ARR_CFG - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_MACT_AGE_PROFILE_ARR_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_MACT_AGE_PROFILE_ARR_CFG_t *(
    *dnx_data_dnx2_arr_formats_MACT_AGE_PROFILE_ARR_CFG_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
 * ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 entry 
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 entry 
 * ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPA_PRP_EES_ARR_CONFIGURATION entry 
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_t *(
    *dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPA_PRP_EES_ARR_CONFIGURATION___array entry 
 * ETPPA_PRP_EES_ARR_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPA_PRP_EES_ARR_CONFIGURATION___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_t *(
    *dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION entry 
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_get_f) (
    int unit,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array entry 
 * ETPPC_TERM_ETPS_ARR_1_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table ETPPC_TERM_ETPS_ARR_2_CONFIGURATION entry 
 * ETPPC_TERM_ETPS_ARR_2_CONFIGURATION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ETPPC_TERM_ETPS_ARR_2_CONFIGURATION - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_t *(
    *dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_get_f) (
    int unit,
    int index);

/**
 * \brief get table IPPB_ACCEPTED_ARR_FORMAT_CONFIG entry 
 * IPPB_ACCEPTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_ACCEPTED_ARR_FORMAT_CONFIG - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_t *(
    *dnx_data_dnx2_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_get_f) (
    int unit,
    int index);

/**
 * \brief get table MACT_MRQ_ARR_CFG entry 
 * MACT_MRQ_ARR_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MACT_MRQ_ARR_CFG - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_MACT_MRQ_ARR_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_MACT_MRQ_ARR_CFG_t *(
    *dnx_data_dnx2_arr_formats_MACT_MRQ_ARR_CFG_get_f) (
    int unit,
    int index);

/**
 * \brief get table IPPB_EXPECTED_ARR_FORMAT_CONFIG entry 
 * IPPB_EXPECTED_ARR_FORMAT_CONFIG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_EXPECTED_ARR_FORMAT_CONFIG - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_t *(
    *dnx_data_dnx2_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_get_f) (
    int unit,
    int index);

/**
 * \brief get table IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPD_FEC_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 entry 
 * IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_t *(
    *dnx_data_dnx2_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_get_f) (
    int unit,
    int index);

/**
 * \brief get table IPPF_VSI_FORMAT_CONFIGURATION_TABLE entry 
 * IPPF_VSI_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPF_VSI_FORMAT_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPA_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
 * IPPF_VTT_FORMAT_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] table_index - table index
 * \param [in] index - entry index
 * 
 * \return
 *     IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_t *(
    *dnx_data_dnx2_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_get_f) (
    int unit,
    int table_index,
    int index);

/**
 * \brief get table IPPD_LEARN_ARR_CONFIGURATION_TABLE entry 
 * IPPD_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     IPPD_LEARN_ARR_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table OLP_LEARN_ARR_CONFIGURATION_TABLE entry 
 * OLP_LEARN_ARR_CONFIGURATION_TABLE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     OLP_LEARN_ARR_CONFIGURATION_TABLE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_t *(
    *dnx_data_dnx2_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_get_f) (
    int unit,
    int index);

/**
 * \brief get table ERPP_EGRESS_MCDB_FORMAT_CFG entry 
 * ERPP_EGRESS_MCDB_FORMAT_CFG
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ERPP_EGRESS_MCDB_FORMAT_CFG - returns the relevant entry values grouped in struct - see dnx_data_dnx2_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_t *(
    *dnx_data_dnx2_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_get_f) (
    int unit,
    int index);

/*
 * SUBMODULE INTERFACE DNX_DATA_IF_DNX2_ARR - FORMATS:
 * {
 */
/**
 * \brief Interface for dnx2_arr formats data
 */
typedef struct
{
    /**
     * get submodule feature - disabled/enabled
     */
    dnx_data_dnx2_arr_formats_feature_get_f feature_get;
    /**
     * get table files entry 
     */
    dnx_data_dnx2_arr_formats_files_get_f files_get;
    /**
     * get general info table about table (for example key size)files info
     */
    dnxc_data_table_info_get_f files_info_get;
    /**
     * get table MACT_AGE_PROFILE_ARR_CFG entry 
     */
    dnx_data_dnx2_arr_formats_MACT_AGE_PROFILE_ARR_CFG_get_f MACT_AGE_PROFILE_ARR_CFG_get;
    /**
     * get general info table about table (for example key size)MACT_AGE_PROFILE_ARR_CFG info
     */
    dnxc_data_table_info_get_f MACT_AGE_PROFILE_ARR_CFG_info_get;
    /**
     * get table ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPC_ENC_1_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_2_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_3_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_4_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_5_ARR_0_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPC_ENC_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_get_f ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPC_ENC_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPC_ENC_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_2_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_3_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_4_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPB_ENC_5_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_get_f ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f ETPPC_ENC_1_ARR_1_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_get_f ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_get;
    /**
     * get general info table about table (for example key size)ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0 info
     */
    dnxc_data_table_info_get_f ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_0_info_get;
    /**
     * get table ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_get_f ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_get;
    /**
     * get general info table about table (for example key size)ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1 info
     */
    dnxc_data_table_info_get_f ETPPC_FORWARDING_FORMAT_CONFIGURATION_TABLE_1_info_get;
    /**
     * get table ETPPA_PRP_EES_ARR_CONFIGURATION entry 
     */
    dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION_get_f ETPPA_PRP_EES_ARR_CONFIGURATION_get;
    /**
     * get general info table about table (for example key size)ETPPA_PRP_EES_ARR_CONFIGURATION info
     */
    dnxc_data_table_info_get_f ETPPA_PRP_EES_ARR_CONFIGURATION_info_get;
    /**
     * get table ETPPA_PRP_EES_ARR_CONFIGURATION___array entry 
     */
    dnx_data_dnx2_arr_formats_ETPPA_PRP_EES_ARR_CONFIGURATION___array_get_f ETPPA_PRP_EES_ARR_CONFIGURATION___array_get;
    /**
     * get general info table about table (for example key size)ETPPA_PRP_EES_ARR_CONFIGURATION___array info
     */
    dnxc_data_table_info_get_f ETPPA_PRP_EES_ARR_CONFIGURATION___array_info_get;
    /**
     * get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_get_f ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_get;
    /**
     * get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_1_CONFIGURATION info
     */
    dnxc_data_table_info_get_f ETPPC_TERM_ETPS_ARR_1_CONFIGURATION_info_get;
    /**
     * get table ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_get_f ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_get;
    /**
     * get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array info
     */
    dnxc_data_table_info_get_f ETPPC_TERM_ETPS_ARR_1_CONFIGURATION___array_info_get;
    /**
     * get table ETPPC_TERM_ETPS_ARR_2_CONFIGURATION entry 
     */
    dnx_data_dnx2_arr_formats_ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_get_f ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_get;
    /**
     * get general info table about table (for example key size)ETPPC_TERM_ETPS_ARR_2_CONFIGURATION info
     */
    dnxc_data_table_info_get_f ETPPC_TERM_ETPS_ARR_2_CONFIGURATION_info_get;
    /**
     * get table IPPB_ACCEPTED_ARR_FORMAT_CONFIG entry 
     */
    dnx_data_dnx2_arr_formats_IPPB_ACCEPTED_ARR_FORMAT_CONFIG_get_f IPPB_ACCEPTED_ARR_FORMAT_CONFIG_get;
    /**
     * get general info table about table (for example key size)IPPB_ACCEPTED_ARR_FORMAT_CONFIG info
     */
    dnxc_data_table_info_get_f IPPB_ACCEPTED_ARR_FORMAT_CONFIG_info_get;
    /**
     * get table MACT_MRQ_ARR_CFG entry 
     */
    dnx_data_dnx2_arr_formats_MACT_MRQ_ARR_CFG_get_f MACT_MRQ_ARR_CFG_get;
    /**
     * get general info table about table (for example key size)MACT_MRQ_ARR_CFG info
     */
    dnxc_data_table_info_get_f MACT_MRQ_ARR_CFG_info_get;
    /**
     * get table IPPB_EXPECTED_ARR_FORMAT_CONFIG entry 
     */
    dnx_data_dnx2_arr_formats_IPPB_EXPECTED_ARR_FORMAT_CONFIG_get_f IPPB_EXPECTED_ARR_FORMAT_CONFIG_get;
    /**
     * get general info table about table (for example key size)IPPB_EXPECTED_ARR_FORMAT_CONFIG info
     */
    dnxc_data_table_info_get_f IPPB_EXPECTED_ARR_FORMAT_CONFIG_info_get;
    /**
     * get table IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_get_f IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPD_FEC_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_get_f IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPB_FLP_FWD_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_get_f IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPB_FLP_RPF_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_get_f IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPD_SUPER_ARR_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 entry 
     */
    dnx_data_dnx2_arr_formats_IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_get_f IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_get;
    /**
     * get general info table about table (for example key size)IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1 info
     */
    dnxc_data_table_info_get_f IPPA_VSI_FORMAT_CONFIGURATION_TABLE_1_info_get;
    /**
     * get table IPPF_VSI_FORMAT_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_IPPF_VSI_FORMAT_CONFIGURATION_TABLE_get_f IPPF_VSI_FORMAT_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)IPPF_VSI_FORMAT_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f IPPF_VSI_FORMAT_CONFIGURATION_TABLE_info_get;
    /**
     * get table IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_get_f IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPA_VTT_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array entry 
     */
    dnx_data_dnx2_arr_formats_IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_get_f IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_get;
    /**
     * get general info table about table (for example key size)IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array info
     */
    dnxc_data_table_info_get_f IPPF_VTT_FORMAT_CONFIGURATION_TABLE___array_info_get;
    /**
     * get table IPPD_LEARN_ARR_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_IPPD_LEARN_ARR_CONFIGURATION_TABLE_get_f IPPD_LEARN_ARR_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)IPPD_LEARN_ARR_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f IPPD_LEARN_ARR_CONFIGURATION_TABLE_info_get;
    /**
     * get table OLP_LEARN_ARR_CONFIGURATION_TABLE entry 
     */
    dnx_data_dnx2_arr_formats_OLP_LEARN_ARR_CONFIGURATION_TABLE_get_f OLP_LEARN_ARR_CONFIGURATION_TABLE_get;
    /**
     * get general info table about table (for example key size)OLP_LEARN_ARR_CONFIGURATION_TABLE info
     */
    dnxc_data_table_info_get_f OLP_LEARN_ARR_CONFIGURATION_TABLE_info_get;
    /**
     * get table ERPP_EGRESS_MCDB_FORMAT_CFG entry 
     */
    dnx_data_dnx2_arr_formats_ERPP_EGRESS_MCDB_FORMAT_CFG_get_f ERPP_EGRESS_MCDB_FORMAT_CFG_get;
    /**
     * get general info table about table (for example key size)ERPP_EGRESS_MCDB_FORMAT_CFG info
     */
    dnxc_data_table_info_get_f ERPP_EGRESS_MCDB_FORMAT_CFG_info_get;
} dnx_data_if_dnx2_arr_formats_t;

/*
 * }
 */

/*
 * MODULE INTERFACE DNX_DATA_IF_DNX2_ARR:
 * {
 */
/**
 * \brief Interface for dnx2_arr data
 */
typedef struct
{
    /**
     * Interface for dnx2_arr prefix data
     */
    dnx_data_if_dnx2_arr_prefix_t prefix;
    /**
     * Interface for dnx2_arr max_nof_entries data
     */
    dnx_data_if_dnx2_arr_max_nof_entries_t max_nof_entries;
    /**
     * Interface for dnx2_arr formats data
     */
    dnx_data_if_dnx2_arr_formats_t formats;
} dnx_data_if_dnx2_arr_t;

/*
 * }
 */
/*
 * Extern:
 * {
 */
/**
 * \brief
 * Module structured interface - used to get the required data stored in dnx data
 */
extern dnx_data_if_dnx2_arr_t dnx_data_dnx2_arr;
/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_DNX2_ARR_H_*/
/* *INDENT-ON* */
