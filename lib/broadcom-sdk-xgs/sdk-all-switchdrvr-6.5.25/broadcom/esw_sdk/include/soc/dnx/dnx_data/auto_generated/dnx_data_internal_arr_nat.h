/** \file dnx_data_internal_arr_nat.h
 * 
 * MODULE DEVICE DATA - DNX_DATA
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_INTERNAL_ARR_NAT_H_
/*{*/
#define _DNX_DATA_INTERNAL_ARR_NAT_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <soc/dnx/dnx_data/auto_generated/dnx_data_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_arr_nat.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * TYPEDEFS:
 * {
 */
/**
 * \brief 
 * Submodule enum
 */
typedef enum
{
    dnx_data_arr_nat_submodule_prefix,

    /**
     * Must be last one!
     */
    _dnx_data_arr_nat_submodule_nof
} dnx_data_arr_nat_submodule_e;

/*
 * }
 */

/*
 * SUBMODULE PREFIX:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_arr_nat_prefix_feature_get(
    int unit,
    dnx_data_arr_nat_prefix_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{
    dnx_data_arr_nat_prefix_define_IRPP_VSI_FORMATS___prefix_0,
    dnx_data_arr_nat_prefix_define_IRPP_VSI_FORMATS___prefix_1,
    dnx_data_arr_nat_prefix_define_IRPP_VSI_FORMATS___prefix_2,
    dnx_data_arr_nat_prefix_define_IRPP_VSI_FORMATS___prefix_4,
    dnx_data_arr_nat_prefix_define_IRPP_VSI_FORMATS___prefix_5,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_0,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_1,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_2,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_3,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_4,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_5,
    dnx_data_arr_nat_prefix_define_IRPP_FWD_STAGE_FORMATS___prefix_6,
    dnx_data_arr_nat_prefix_define_IRPP_IN_LIF_FORMATS___prefix_0,
    dnx_data_arr_nat_prefix_define_IRPP_IN_LIF_FORMATS___prefix_13,
    dnx_data_arr_nat_prefix_define_IRPP_IN_LIF_FORMATS___prefix_7,
    dnx_data_arr_nat_prefix_define_ETPP_ETPS_FORMATS___prefix_0,
    dnx_data_arr_nat_prefix_define_ETPP_ETPS_FORMATS___prefix_13,
    dnx_data_arr_nat_prefix_define_ETPP_ETPS_FORMATS___prefix_14,

    /**
     * Must be last one!
     */
    _dnx_data_arr_nat_prefix_define_nof
} dnx_data_arr_nat_prefix_define_e;

/* Get Data */
/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_0
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_0'
 * prefix of format IRPP_VSI_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_VSI_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_1
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_1'
 * prefix of format IRPP_VSI_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_VSI_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_2
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_2'
 * prefix of format IRPP_VSI_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_VSI_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_4
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_4'
 * prefix of format IRPP_VSI_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_VSI_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_VSI_FORMATS___prefix_5
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_VSI_FORMATS___prefix_5'
 * prefix of format IRPP_VSI_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_VSI_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_VSI_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_0
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_0'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_1
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_1'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_1_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_2
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_2'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_2_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_3
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_3'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_3_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_4
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_4'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_4_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_5
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_5'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_5_get(
    int unit);

/**
 * \brief returns define data of IRPP_FWD_STAGE_FORMATS___prefix_6
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_FWD_STAGE_FORMATS___prefix_6'
 * prefix of format IRPP_FWD_STAGE_FORMATS at index 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_FWD_STAGE_FORMATS___prefix_6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_FWD_STAGE_FORMATS___prefix_6_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_0
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_0'
 * prefix of format IRPP_IN_LIF_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_IN_LIF_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_13
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_13'
 * prefix of format IRPP_IN_LIF_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_13 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_IN_LIF_FORMATS___prefix_13_get(
    int unit);

/**
 * \brief returns define data of IRPP_IN_LIF_FORMATS___prefix_7
 * Module - 'arr_nat', Submodule - 'prefix', data - 'IRPP_IN_LIF_FORMATS___prefix_7'
 * prefix of format IRPP_IN_LIF_FORMATS at index 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     IRPP_IN_LIF_FORMATS___prefix_7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_IRPP_IN_LIF_FORMATS___prefix_7_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_0
 * Module - 'arr_nat', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_0'
 * prefix of format ETPP_ETPS_FORMATS at index 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_ETPP_ETPS_FORMATS___prefix_0_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_13
 * Module - 'arr_nat', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_13'
 * prefix of format ETPP_ETPS_FORMATS at index 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_13 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_ETPP_ETPS_FORMATS___prefix_13_get(
    int unit);

/**
 * \brief returns define data of ETPP_ETPS_FORMATS___prefix_14
 * Module - 'arr_nat', Submodule - 'prefix', data - 'ETPP_ETPS_FORMATS___prefix_14'
 * prefix of format ETPP_ETPS_FORMATS at index 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_ETPS_FORMATS___prefix_14 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_arr_nat_prefix_ETPP_ETPS_FORMATS___prefix_14_get(
    int unit);

/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_arr_nat_prefix_table_nof
} dnx_data_arr_nat_prefix_table_e;

/* Get Data */
/* Get Value Str */
/* Get Table info */
/*
 * FUNCTIONS:
 * {
 */
/**
 * \brief Init module
 * 
 * \param [in] unit - Unit #
 * \param [out] module_data - pointer to module data
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_arr_nat_init(
    int unit,
    dnxc_data_module_t *module_data);

/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_INTERNAL_ARR_NAT_H_*/
/* *INDENT-ON* */
