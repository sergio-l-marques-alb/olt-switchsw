/** \file dnx/swstate/auto_generated/types/dnx_field_range_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_FIELD_RANGE_TYPES_H__
#define __DNX_FIELD_RANGE_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
/*
 * ENUMs
 */

/**
 * Enum for all available field range types
 */
typedef enum {
    /**
     * Invalid Field Range Type
     */
    DNX_FIELD_RANGE_TYPE_INVALID = -1,
    /**
     * First element, used for iteration
     */
    DNX_FIELD_RANGE_TYPE_FIRST = 0,
    /**
     * L4 Source Port Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_L4_SRC_PORT = DNX_FIELD_RANGE_TYPE_FIRST,
    /**
     * L4 Destination Port Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_L4_DST_PORT,
    /**
     * Egress Virtual Port (Out Lif) Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_OUT_LIF,
    /**
     * Packet Header Size Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_PKT_HDR_SIZE,
    /**
     * Packet Header Size Range Qualifier for Extended L4 OPS
     */
    DNX_FIELD_RANGE_TYPE_L4OPS_PKT_HDR_SIZE,
    /**
     * In_TTL Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_IN_TTL,
    /**
     * FFC 1 Low Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_FFC1_LOW,
    /**
     * FFC 1 High Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_FFC1_HIGH,
    /**
     * FFC 2 Low Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_FFC2_LOW,
    /**
     * FFC 2 High Range Qualifier
     */
    DNX_FIELD_RANGE_TYPE_FFC2_HIGH,
    /**
     * Number of range types in dnx_field_range_type_e
     */
    DNX_FIELD_RANGE_TYPE_NOF
} dnx_field_range_type_e;

/*
 * STRUCTs
 */

/**
 * This structure contains the info needed to config a range FFC
 */
typedef struct {
    /**
     * The DNX qualifier
     */
    dnx_field_qual_t dnx_qual;
    /**
     * Indicate how to read the relevant qualifier from PBUS
     */
    dnx_field_qual_attach_info_t qual_info;
} dnx_field_range_type_qual_info_t;

/**
 * Sw State DB for Field Ranges
 */
typedef struct {
    /**
     * Holds the range type of each extended L4 OPs range index
     */
    dnx_field_range_type_e ext_l4_ops_range_types[DNX_DATA_MAX_FIELD_L4_OPS_NOF_EXT_TYPES];
    /**
     * Holds DNX qualifier information (type, attach_info) for each L4 OPS FFC
     */
    dnx_field_range_type_qual_info_t ext_l4_ops_ffc_quals[DNX_DATA_MAX_FIELD_L4_OPS_NOF_CONFIGURABLE_RANGES];
} dnx_field_range_sw_db_t;


#endif /* __DNX_FIELD_RANGE_TYPES_H__ */
