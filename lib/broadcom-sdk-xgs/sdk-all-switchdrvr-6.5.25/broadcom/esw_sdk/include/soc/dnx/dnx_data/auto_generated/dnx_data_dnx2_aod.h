/** \file dnx_data_dnx2_aod.h
 * 
 * MODULE DATA INTERFACE - 
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_DNX2_AOD_H_
/*{*/
#define _DNX_DATA_DNX2_AOD_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <sal/limits.h>
#include <soc/property.h>
#include <shared/shrextend/shrextend_debug.h>
#include <shared/utilex/utilex_framework.h>
#include <soc/dnxc/dnxc_data/dnxc_data_utils.h>
#include <soc/dnxc/dnxc_data/dnxc_data_mgmt.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_dnx2_aod.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MODULE FUNCTIONS:
 * {
 */
/**
 * \brief Init default data structure - dnx_data_if_dnx2_aod
 * 
 * \param [in] unit - Unit #
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_if_dnx2_aod_init(
    int unit);

/*
 * }
 */

/*
 * SUBMODULE  - TABLES:
 * AOD tables
 * {
 */
/*
 * Table value structure
 */
/**
 * \brief Holds values of submodule tables table ERPP_FWD_CONTEXT_FILTER___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER___image_t;

/**
 * \brief Holds values of submodule tables table ERPP_FWD_CONTEXT_FILTER
 * Table info:
 * ERPP_FWD_CONTEXT_FILTER
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * Egress_FWD_Code
     */
    char *Egress_FWD_Code;
    /**
     * Egress_FWD_Code_mask
     */
    uint32 Egress_FWD_Code_mask;
    /**
     * Egress_FWD_Code_valid
     */
    uint32 Egress_FWD_Code_valid;
    /**
     * DSS_Stacking
     */
    uint32 DSS_Stacking;
    /**
     * DSS_Stacking_valid
     */
    uint32 DSS_Stacking_valid;
    /**
     * Exclude_Source
     */
    uint32 Exclude_Source;
    /**
     * Exclude_Source_valid
     */
    uint32 Exclude_Source_valid;
    /**
     * GLEM_PP_or_NON_PP
     */
    uint32 GLEM_PP_or_NON_PP;
    /**
     * GLEM_PP_or_NON_PP_valid
     */
    uint32 GLEM_PP_or_NON_PP_valid;
    /**
     * Hairpin_or_Same_Interface
     */
    uint32 Hairpin_or_Same_Interface;
    /**
     * Hairpin_or_Same_Interface_valid
     */
    uint32 Hairpin_or_Same_Interface_valid;
    /**
     * IPv4_Filters
     */
    uint32 IPv4_Filters;
    /**
     * IPv4_Filters_valid
     */
    uint32 IPv4_Filters_valid;
    /**
     * IPv4_Filters_Dip_Zero
     */
    uint32 IPv4_Filters_Dip_Zero;
    /**
     * IPv4_Filters_Dip_Zero_valid
     */
    uint32 IPv4_Filters_Dip_Zero_valid;
    /**
     * IPv4_Filters_Header_Checksum
     */
    uint32 IPv4_Filters_Header_Checksum;
    /**
     * IPv4_Filters_Header_Checksum_valid
     */
    uint32 IPv4_Filters_Header_Checksum_valid;
    /**
     * IPv4_Filters_Header_Length
     */
    uint32 IPv4_Filters_Header_Length;
    /**
     * IPv4_Filters_Header_Length_valid
     */
    uint32 IPv4_Filters_Header_Length_valid;
    /**
     * IPv4_Filters_Options
     */
    uint32 IPv4_Filters_Options;
    /**
     * IPv4_Filters_Options_valid
     */
    uint32 IPv4_Filters_Options_valid;
    /**
     * IPv4_Filters_Sip_Equal_Dip
     */
    uint32 IPv4_Filters_Sip_Equal_Dip;
    /**
     * IPv4_Filters_Sip_Equal_Dip_valid
     */
    uint32 IPv4_Filters_Sip_Equal_Dip_valid;
    /**
     * IPv4_Filters_Sip_Multicast
     */
    uint32 IPv4_Filters_Sip_Multicast;
    /**
     * IPv4_Filters_Sip_Multicast_valid
     */
    uint32 IPv4_Filters_Sip_Multicast_valid;
    /**
     * IPv4_Filters_Total_Length
     */
    uint32 IPv4_Filters_Total_Length;
    /**
     * IPv4_Filters_Total_Length_valid
     */
    uint32 IPv4_Filters_Total_Length_valid;
    /**
     * IPv4_Filters_Version
     */
    uint32 IPv4_Filters_Version;
    /**
     * IPv4_Filters_Version_valid
     */
    uint32 IPv4_Filters_Version_valid;
    /**
     * IPv6_Filters
     */
    uint32 IPv6_Filters;
    /**
     * IPv6_Filters_valid
     */
    uint32 IPv6_Filters_valid;
    /**
     * IPv6_Filters_Dip_Is_All
     */
    uint32 IPv6_Filters_Dip_Is_All;
    /**
     * IPv6_Filters_Dip_Is_All_valid
     */
    uint32 IPv6_Filters_Dip_Is_All_valid;
    /**
     * IPv6_Filters_Ipv4_Cmp_Dst
     */
    uint32 IPv6_Filters_Ipv4_Cmp_Dst;
    /**
     * IPv6_Filters_Ipv4_Cmp_Dst_valid
     */
    uint32 IPv6_Filters_Ipv4_Cmp_Dst_valid;
    /**
     * IPv6_Filters_Ipv4_Mapped_Dst
     */
    uint32 IPv6_Filters_Ipv4_Mapped_Dst;
    /**
     * IPv6_Filters_Ipv4_Mapped_Dst_valid
     */
    uint32 IPv6_Filters_Ipv4_Mapped_Dst_valid;
    /**
     * IPv6_Filters_Link_Local_Dst
     */
    uint32 IPv6_Filters_Link_Local_Dst;
    /**
     * IPv6_Filters_Link_Local_Dst_valid
     */
    uint32 IPv6_Filters_Link_Local_Dst_valid;
    /**
     * IPv6_Filters_Link_Local_Src
     */
    uint32 IPv6_Filters_Link_Local_Src;
    /**
     * IPv6_Filters_Link_Local_Src_valid
     */
    uint32 IPv6_Filters_Link_Local_Src_valid;
    /**
     * IPv6_Filters_Loopback
     */
    uint32 IPv6_Filters_Loopback;
    /**
     * IPv6_Filters_Loopback_valid
     */
    uint32 IPv6_Filters_Loopback_valid;
    /**
     * IPv6_Filters_Mc_Dst
     */
    uint32 IPv6_Filters_Mc_Dst;
    /**
     * IPv6_Filters_Mc_Dst_valid
     */
    uint32 IPv6_Filters_Mc_Dst_valid;
    /**
     * IPv6_Filters_Next_Header_Is_Zeros
     */
    uint32 IPv6_Filters_Next_Header_Is_Zeros;
    /**
     * IPv6_Filters_Next_Header_Is_Zeros_valid
     */
    uint32 IPv6_Filters_Next_Header_Is_Zeros_valid;
    /**
     * IPv6_Filters_Sip_Is_All
     */
    uint32 IPv6_Filters_Sip_Is_All;
    /**
     * IPv6_Filters_Sip_Is_All_valid
     */
    uint32 IPv6_Filters_Sip_Is_All_valid;
    /**
     * IPv6_Filters_Sip_Is_Mc
     */
    uint32 IPv6_Filters_Sip_Is_Mc;
    /**
     * IPv6_Filters_Sip_Is_Mc_valid
     */
    uint32 IPv6_Filters_Sip_Is_Mc_valid;
    /**
     * IPv6_Filters_Site_Local_Dst
     */
    uint32 IPv6_Filters_Site_Local_Dst;
    /**
     * IPv6_Filters_Site_Local_Dst_valid
     */
    uint32 IPv6_Filters_Site_Local_Dst_valid;
    /**
     * IPv6_Filters_Site_Local_Src
     */
    uint32 IPv6_Filters_Site_Local_Src;
    /**
     * IPv6_Filters_Site_Local_Src_valid
     */
    uint32 IPv6_Filters_Site_Local_Src_valid;
    /**
     * IPv6_Filters_Version
     */
    uint32 IPv6_Filters_Version;
    /**
     * IPv6_Filters_Version_valid
     */
    uint32 IPv6_Filters_Version_valid;
    /**
     * Invalid_OTM
     */
    uint32 Invalid_OTM;
    /**
     * Invalid_OTM_valid
     */
    uint32 Invalid_OTM_valid;
    /**
     * L4_Filters
     */
    uint32 L4_Filters;
    /**
     * L4_Filters_valid
     */
    uint32 L4_Filters_valid;
    /**
     * L4_Filters_Tcp_Fragment_Incomplete_Hdr
     */
    uint32 L4_Filters_Tcp_Fragment_Incomplete_Hdr;
    /**
     * L4_Filters_Tcp_Fragment_Incomplete_Hdr_valid
     */
    uint32 L4_Filters_Tcp_Fragment_Incomplete_Hdr_valid;
    /**
     * L4_Filters_Tcp_Fragment_Offset_Less_Than_8
     */
    uint32 L4_Filters_Tcp_Fragment_Offset_Less_Than_8;
    /**
     * L4_Filters_Tcp_Fragment_Offset_Less_Than_8_valid
     */
    uint32 L4_Filters_Tcp_Fragment_Offset_Less_Than_8_valid;
    /**
     * L4_Filters_Tcp_Seq_Num_Zero_Flags_Set
     */
    uint32 L4_Filters_Tcp_Seq_Num_Zero_Flags_Set;
    /**
     * L4_Filters_Tcp_Seq_Num_Zero_Flags_Set_valid
     */
    uint32 L4_Filters_Tcp_Seq_Num_Zero_Flags_Set_valid;
    /**
     * L4_Filters_Tcp_Seq_Num_Zero_Flags_Zero
     */
    uint32 L4_Filters_Tcp_Seq_Num_Zero_Flags_Zero;
    /**
     * L4_Filters_Tcp_Seq_Num_Zero_Flags_Zero_valid
     */
    uint32 L4_Filters_Tcp_Seq_Num_Zero_Flags_Zero_valid;
    /**
     * L4_Filters_Tcp_Src_Port_Equals_Dst_Port
     */
    uint32 L4_Filters_Tcp_Src_Port_Equals_Dst_Port;
    /**
     * L4_Filters_Tcp_Src_Port_Equals_Dst_Port_valid
     */
    uint32 L4_Filters_Tcp_Src_Port_Equals_Dst_Port_valid;
    /**
     * L4_Filters_Tcp_Syn_And_Fin_Are_Set
     */
    uint32 L4_Filters_Tcp_Syn_And_Fin_Are_Set;
    /**
     * L4_Filters_Tcp_Syn_And_Fin_Are_Set_valid
     */
    uint32 L4_Filters_Tcp_Syn_And_Fin_Are_Set_valid;
    /**
     * L4_Filters_Udp_Src_Port_Equals_Dst_Port
     */
    uint32 L4_Filters_Udp_Src_Port_Equals_Dst_Port;
    /**
     * L4_Filters_Udp_Src_Port_Equals_Dst_Port_valid
     */
    uint32 L4_Filters_Udp_Src_Port_Equals_Dst_Port_valid;
    /**
     * LAG_Multicast
     */
    uint32 LAG_Multicast;
    /**
     * LAG_Multicast_valid
     */
    uint32 LAG_Multicast_valid;
    /**
     * MTU
     */
    uint32 MTU;
    /**
     * MTU_valid
     */
    uint32 MTU_valid;
    /**
     * RQP_Discard
     */
    uint32 RQP_Discard;
    /**
     * RQP_Discard_valid
     */
    uint32 RQP_Discard_valid;
    /**
     * Split_Horizon
     */
    uint32 Split_Horizon;
    /**
     * Split_Horizon_valid
     */
    uint32 Split_Horizon_valid;
    /**
     * TDM_Indication
     */
    uint32 TDM_Indication;
    /**
     * TDM_Indication_valid
     */
    uint32 TDM_Indication_valid;
    /**
     * TTL_Scoping
     */
    uint32 TTL_Scoping;
    /**
     * TTL_Scoping_valid
     */
    uint32 TTL_Scoping_valid;
    /**
     * TTL_eq_0
     */
    uint32 TTL_eq_0;
    /**
     * TTL_eq_0_valid
     */
    uint32 TTL_eq_0_valid;
    /**
     * TTL_eq_1
     */
    uint32 TTL_eq_1;
    /**
     * TTL_eq_1_valid
     */
    uint32 TTL_eq_1_valid;
    /**
     * Unacceptable_Frame_Types
     */
    uint32 Unacceptable_Frame_Types;
    /**
     * Unacceptable_Frame_Types_valid
     */
    uint32 Unacceptable_Frame_Types_valid;
    /**
     * Unknown_DA
     */
    uint32 Unknown_DA;
    /**
     * Unknown_DA_valid
     */
    uint32 Unknown_DA_valid;
} dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PER_FORWARD_CODE___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE___image_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PER_FORWARD_CODE
 * Table info:
 * EGRESS_PER_FORWARD_CODE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * Egress_FWD_Code
     */
    char *Egress_FWD_Code;
    /**
     * Egress_FWD_Code_mask
     */
    uint32 Egress_FWD_Code_mask;
    /**
     * Egress_FWD_Code_valid
     */
    uint32 Egress_FWD_Code_valid;
    /**
     * Acceptable_Frame_Type_Enable
     */
    uint32 Acceptable_Frame_Type_Enable;
    /**
     * Acceptable_Frame_Type_Enable_valid
     */
    uint32 Acceptable_Frame_Type_Enable_valid;
    /**
     * FWD_Context_is_PP_Enable
     */
    uint32 FWD_Context_is_PP_Enable;
    /**
     * FWD_Context_is_PP_Enable_valid
     */
    uint32 FWD_Context_is_PP_Enable_valid;
    /**
     * Forward_Code_IPv4_or_IPv6
     */
    uint32 Forward_Code_IPv4_or_IPv6;
    /**
     * Forward_Code_IPv4_or_IPv6_valid
     */
    uint32 Forward_Code_IPv4_or_IPv6_valid;
    /**
     * Learn_Enable
     */
    uint32 Learn_Enable;
    /**
     * Learn_Enable_valid
     */
    uint32 Learn_Enable_valid;
    /**
     * Protocol_Ethernet_Enable
     */
    uint32 Protocol_Ethernet_Enable;
    /**
     * Protocol_Ethernet_Enable_valid
     */
    uint32 Protocol_Ethernet_Enable_valid;
    /**
     * Protocol_IPv4_MC_Enable
     */
    uint32 Protocol_IPv4_MC_Enable;
    /**
     * Protocol_IPv4_MC_Enable_valid
     */
    uint32 Protocol_IPv4_MC_Enable_valid;
    /**
     * Protocol_IPv4_UC_Enable
     */
    uint32 Protocol_IPv4_UC_Enable;
    /**
     * Protocol_IPv4_UC_Enable_valid
     */
    uint32 Protocol_IPv4_UC_Enable_valid;
    /**
     * Protocol_IPv6_MC_Enable
     */
    uint32 Protocol_IPv6_MC_Enable;
    /**
     * Protocol_IPv6_MC_Enable_valid
     */
    uint32 Protocol_IPv6_MC_Enable_valid;
    /**
     * Protocol_IPv6_UC_Enable
     */
    uint32 Protocol_IPv6_UC_Enable;
    /**
     * Protocol_IPv6_UC_Enable_valid
     */
    uint32 Protocol_IPv6_UC_Enable_valid;
    /**
     * Protocol_MPLS_Enable
     */
    uint32 Protocol_MPLS_Enable;
    /**
     * Protocol_MPLS_Enable_valid
     */
    uint32 Protocol_MPLS_Enable_valid;
    /**
     * STP_Enable
     */
    uint32 STP_Enable;
    /**
     * STP_Enable_valid
     */
    uint32 STP_Enable_valid;
    /**
     * Split_Horizon_Enable
     */
    uint32 Split_Horizon_Enable;
    /**
     * Split_Horizon_Enable_valid
     */
    uint32 Split_Horizon_Enable_valid;
    /**
     * Termination_Enable
     */
    uint32 Termination_Enable;
    /**
     * Termination_Enable_valid
     */
    uint32 Termination_Enable_valid;
    /**
     * Vlan_Membership_Enable
     */
    uint32 Vlan_Membership_Enable;
    /**
     * Vlan_Membership_Enable_valid
     */
    uint32 Vlan_Membership_Enable_valid;
} dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE_t;

/**
 * \brief Holds values of submodule tables table ERPP_FORWARD_CODE_SELECTION___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION___image_t;

/**
 * \brief Holds values of submodule tables table ERPP_FORWARD_CODE_SELECTION
 * Table info:
 * ERPP_FORWARD_CODE_SELECTION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * FAI
     */
    uint32 FAI;
    /**
     * FAI_mask
     */
    uint32 FAI_mask;
    /**
     * FAI_valid
     */
    uint32 FAI_valid;
    /**
     * FWD_Layer_Qualifier
     */
    uint32 FWD_Layer_Qualifier;
    /**
     * FWD_Layer_Qualifier_mask
     */
    uint32 FWD_Layer_Qualifier_mask;
    /**
     * FWD_Layer_Qualifier_valid
     */
    uint32 FWD_Layer_Qualifier_valid;
    /**
     * FWD_Layer_Type
     */
    char *FWD_Layer_Type;
    /**
     * FWD_Layer_Type_mask
     */
    uint32 FWD_Layer_Type_mask;
    /**
     * FWD_Layer_Type_valid
     */
    uint32 FWD_Layer_Type_valid;
    /**
     * FWD_code_port_profile
     */
    char *FWD_code_port_profile;
    /**
     * FWD_code_port_profile_mask
     */
    uint32 FWD_code_port_profile_mask;
    /**
     * FWD_code_port_profile_valid
     */
    uint32 FWD_code_port_profile_valid;
    /**
     * TM_Action_Type
     */
    uint32 TM_Action_Type;
    /**
     * TM_Action_Type_mask
     */
    uint32 TM_Action_Type_mask;
    /**
     * TM_Action_Type_valid
     */
    uint32 TM_Action_Type_valid;
    /**
     * ingress_trapped
     */
    uint32 ingress_trapped;
    /**
     * ingress_trapped_mask
     */
    uint32 ingress_trapped_mask;
    /**
     * ingress_trapped_valid
     */
    uint32 ingress_trapped_valid;
    /**
     * is_Applet
     */
    uint32 is_Applet;
    /**
     * is_Applet_mask
     */
    uint32 is_Applet_mask;
    /**
     * is_Applet_valid
     */
    uint32 is_Applet_valid;
    /**
     * is_TDM
     */
    uint32 is_TDM;
    /**
     * is_TDM_mask
     */
    uint32 is_TDM_mask;
    /**
     * is_TDM_valid
     */
    uint32 is_TDM_valid;
    /**
     * Egress_FWD_Code
     */
    char *Egress_FWD_Code;
    /**
     * Egress_FWD_Code_valid
     */
    uint32 Egress_FWD_Code_valid;
} dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION_t;

/**
 * \brief Holds values of submodule tables table ETPP_FORWARD_CODE_SELECTION___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION___image_t;

/**
 * \brief Holds values of submodule tables table ETPP_FORWARD_CODE_SELECTION
 * Table info:
 * ETPP_FORWARD_CODE_SELECTION
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * ACE_Value
     */
    char *ACE_Value;
    /**
     * ACE_Value_mask
     */
    uint32 ACE_Value_mask;
    /**
     * ACE_Value_valid
     */
    uint32 ACE_Value_valid;
    /**
     * FAI
     */
    uint32 FAI;
    /**
     * FAI_mask
     */
    uint32 FAI_mask;
    /**
     * FAI_valid
     */
    uint32 FAI_valid;
    /**
     * FWD_Layer_Qualifier
     */
    uint32 FWD_Layer_Qualifier;
    /**
     * FWD_Layer_Qualifier_mask
     */
    uint32 FWD_Layer_Qualifier_mask;
    /**
     * FWD_Layer_Qualifier_valid
     */
    uint32 FWD_Layer_Qualifier_valid;
    /**
     * FWD_Layer_Type
     */
    char *FWD_Layer_Type;
    /**
     * FWD_Layer_Type_mask
     */
    uint32 FWD_Layer_Type_mask;
    /**
     * FWD_Layer_Type_valid
     */
    uint32 FWD_Layer_Type_valid;
    /**
     * FWD_code_port_profile
     */
    char *FWD_code_port_profile;
    /**
     * FWD_code_port_profile_mask
     */
    uint32 FWD_code_port_profile_mask;
    /**
     * FWD_code_port_profile_valid
     */
    uint32 FWD_code_port_profile_valid;
    /**
     * TM_Action_Type
     */
    uint32 TM_Action_Type;
    /**
     * TM_Action_Type_mask
     */
    uint32 TM_Action_Type_mask;
    /**
     * TM_Action_Type_valid
     */
    uint32 TM_Action_Type_valid;
    /**
     * ingress_trapped
     */
    uint32 ingress_trapped;
    /**
     * ingress_trapped_mask
     */
    uint32 ingress_trapped_mask;
    /**
     * ingress_trapped_valid
     */
    uint32 ingress_trapped_valid;
    /**
     * is_Applet
     */
    uint32 is_Applet;
    /**
     * is_Applet_mask
     */
    uint32 is_Applet_mask;
    /**
     * is_Applet_valid
     */
    uint32 is_Applet_valid;
    /**
     * is_TDM
     */
    uint32 is_TDM;
    /**
     * is_TDM_mask
     */
    uint32 is_TDM_mask;
    /**
     * is_TDM_valid
     */
    uint32 is_TDM_valid;
    /**
     * Egress_FWD_Code
     */
    char *Egress_FWD_Code;
    /**
     * Egress_FWD_Code_valid
     */
    uint32 Egress_FWD_Code_valid;
} dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PARSING_START_TYPE_CONTEXT___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT___image_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PARSING_START_TYPE_CONTEXT
 * Table info:
 * EGRESS_PARSING_START_TYPE_CONTEXT
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * Parsing_Start_Type
     */
    char *Parsing_Start_Type;
    /**
     * Parsing_Start_Type_mask
     */
    uint32 Parsing_Start_Type_mask;
    /**
     * Parsing_Start_Type_valid
     */
    uint32 Parsing_Start_Type_valid;
    /**
     * Egress_1st_Parser_Parser_Context
     */
    char *Egress_1st_Parser_Parser_Context;
    /**
     * Egress_1st_Parser_Parser_Context_valid
     */
    uint32 Egress_1st_Parser_Parser_Context_valid;
} dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_t;

/**
 * \brief Holds values of submodule tables table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE
 * Table info:
 * EGRESS_PARSING_CONTEXT_MAP_JR1_MODE
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * JR_FWD_CODE
     */
    char *JR_FWD_CODE;
    /**
     * JR_FWD_CODE_mask
     */
    uint32 JR_FWD_CODE_mask;
    /**
     * JR_FWD_CODE_valid
     */
    uint32 JR_FWD_CODE_valid;
    /**
     * Egress_1st_Parser_Parser_Context
     */
    char *Egress_1st_Parser_Parser_Context;
    /**
     * Egress_1st_Parser_Parser_Context_valid
     */
    uint32 Egress_1st_Parser_Parser_Context_valid;
} dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_t;

/**
 * \brief Holds values of submodule tables table FER_FILTERS_PER_FWD_CONTEXT___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT___image_t;

/**
 * \brief Holds values of submodule tables table FER_FILTERS_PER_FWD_CONTEXT
 * Table info:
 * FER_FILTERS_PER_FWD_CONTEXT
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * CTX_FWD2
     */
    char *CTX_FWD2;
    /**
     * CTX_FWD2_mask
     */
    uint32 CTX_FWD2_mask;
    /**
     * CTX_FWD2_valid
     */
    uint32 CTX_FWD2_valid;
    /**
     * FACILITY_INVALID
     */
    uint32 FACILITY_INVALID;
    /**
     * FACILITY_INVALID_valid
     */
    uint32 FACILITY_INVALID_valid;
    /**
     * FER_TRAP_SAME_INTERFACE_FILTER_PROFILE
     */
    char *FER_TRAP_SAME_INTERFACE_FILTER_PROFILE;
    /**
     * FER_TRAP_SAME_INTERFACE_FILTER_PROFILE_valid
     */
    uint32 FER_TRAP_SAME_INTERFACE_FILTER_PROFILE_valid;
    /**
     * MC_EXPLICIT_RPF
     */
    uint32 MC_EXPLICIT_RPF;
    /**
     * MC_EXPLICIT_RPF_valid
     */
    uint32 MC_EXPLICIT_RPF_valid;
    /**
     * MC_EXPLICIT_RPF_ECMP
     */
    uint32 MC_EXPLICIT_RPF_ECMP;
    /**
     * MC_EXPLICIT_RPF_ECMP_valid
     */
    uint32 MC_EXPLICIT_RPF_ECMP_valid;
    /**
     * MC_SIP_BASED_RPF
     */
    uint32 MC_SIP_BASED_RPF;
    /**
     * MC_SIP_BASED_RPF_valid
     */
    uint32 MC_SIP_BASED_RPF_valid;
    /**
     * OUTLIF_OVER_FLOW
     */
    uint32 OUTLIF_OVER_FLOW;
    /**
     * OUTLIF_OVER_FLOW_valid
     */
    uint32 OUTLIF_OVER_FLOW_valid;
    /**
     * SAME_INTERFACE
     */
    uint32 SAME_INTERFACE;
    /**
     * SAME_INTERFACE_valid
     */
    uint32 SAME_INTERFACE_valid;
    /**
     * SIP_TRANSPLANT_DETECTION
     */
    uint32 SIP_TRANSPLANT_DETECTION;
    /**
     * SIP_TRANSPLANT_DETECTION_valid
     */
    uint32 SIP_TRANSPLANT_DETECTION_valid;
    /**
     * UC_LOOSE_RPF
     */
    uint32 UC_LOOSE_RPF;
    /**
     * UC_LOOSE_RPF_valid
     */
    uint32 UC_LOOSE_RPF_valid;
    /**
     * UC_STRICT_RPF
     */
    uint32 UC_STRICT_RPF;
    /**
     * UC_STRICT_RPF_valid
     */
    uint32 UC_STRICT_RPF_valid;
} dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT_t;

/**
 * \brief Holds values of submodule tables table MPLS_SPECIAL_LABEL_PROFILE_MAP___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP___image_t;

/**
 * \brief Holds values of submodule tables table MPLS_SPECIAL_LABEL_PROFILE_MAP
 * Table info:
 * MPLS_SPECIAL_LABEL_PROFILE_MAP
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * BOS
     */
    uint32 BOS;
    /**
     * BOS_mask
     */
    uint32 BOS_mask;
    /**
     * BOS_valid
     */
    uint32 BOS_valid;
    /**
     * MPLS_Special_Label_Nibble
     */
    char *MPLS_Special_Label_Nibble;
    /**
     * MPLS_Special_Label_Nibble_mask
     */
    uint32 MPLS_Special_Label_Nibble_mask;
    /**
     * MPLS_Special_Label_Nibble_valid
     */
    uint32 MPLS_Special_Label_Nibble_valid;
    /**
     * MPLS_Special_Label_Profile
     */
    char *MPLS_Special_Label_Profile;
    /**
     * MPLS_Special_Label_Profile_valid
     */
    uint32 MPLS_Special_Label_Profile_valid;
} dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP_t;

/**
 * \brief Holds values of submodule tables table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image
 * Table info:
 * table related image
 */
typedef struct
{
    /**
     * related image name
     */
    char *image;
} dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_t;

/**
 * \brief Holds values of submodule tables table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES
 * Table info:
 * MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES
 */
typedef struct
{
    /**
     * indicates whether entry is valid
     */
    uint32 valid;
    /**
     * entry documentation
     */
    char *doc;
    /**
     * VTT_MPLS_Special_Label_Profile
     */
    char *VTT_MPLS_Special_Label_Profile;
    /**
     * VTT_MPLS_Special_Label_Profile_mask
     */
    uint32 VTT_MPLS_Special_Label_Profile_mask;
    /**
     * VTT_MPLS_Special_Label_Profile_valid
     */
    uint32 VTT_MPLS_Special_Label_Profile_valid;
    /**
     * Check_Bos
     */
    uint32 Check_Bos;
    /**
     * Check_Bos_valid
     */
    uint32 Check_Bos_valid;
    /**
     * ECN_Compare_Strength
     */
    uint32 ECN_Compare_Strength;
    /**
     * ECN_Compare_Strength_valid
     */
    uint32 ECN_Compare_Strength_valid;
    /**
     * ECN_Mapping_Profile
     */
    uint32 ECN_Mapping_Profile;
    /**
     * ECN_Mapping_Profile_valid
     */
    uint32 ECN_Mapping_Profile_valid;
    /**
     * ECN_Propagation_Strength
     */
    uint32 ECN_Propagation_Strength;
    /**
     * ECN_Propagation_Strength_valid
     */
    uint32 ECN_Propagation_Strength_valid;
    /**
     * Expected_Bos
     */
    uint32 Expected_Bos;
    /**
     * Expected_Bos_valid
     */
    uint32 Expected_Bos_valid;
    /**
     * Force_Has_CW
     */
    uint32 Force_Has_CW;
    /**
     * Force_Has_CW_valid
     */
    uint32 Force_Has_CW_valid;
    /**
     * Force_Is_OAM
     */
    uint32 Force_Is_OAM;
    /**
     * Force_Is_OAM_valid
     */
    uint32 Force_Is_OAM_valid;
    /**
     * Force_Parser_Context
     */
    uint32 Force_Parser_Context;
    /**
     * Force_Parser_Context_valid
     */
    uint32 Force_Parser_Context_valid;
    /**
     * Force_Parser_Context_Value
     */
    char *Force_Parser_Context_Value;
    /**
     * Force_Parser_Context_Value_valid
     */
    uint32 Force_Parser_Context_Value_valid;
    /**
     * Labels_To_Terminate
     */
    uint32 Labels_To_Terminate;
    /**
     * Labels_To_Terminate_valid
     */
    uint32 Labels_To_Terminate_valid;
    /**
     * PHB_Compare_Strength
     */
    uint32 PHB_Compare_Strength;
    /**
     * PHB_Compare_Strength_valid
     */
    uint32 PHB_Compare_Strength_valid;
    /**
     * PHB_Propagation_Strength
     */
    uint32 PHB_Propagation_Strength;
    /**
     * PHB_Propagation_Strength_valid
     */
    uint32 PHB_Propagation_Strength_valid;
    /**
     * Qos_Mapping_Profile
     */
    uint32 Qos_Mapping_Profile;
    /**
     * Qos_Mapping_Profile_valid
     */
    uint32 Qos_Mapping_Profile_valid;
    /**
     * Remark_Compare_Strength
     */
    uint32 Remark_Compare_Strength;
    /**
     * Remark_Compare_Strength_valid
     */
    uint32 Remark_Compare_Strength_valid;
    /**
     * Remark_Propagation_Strength
     */
    uint32 Remark_Propagation_Strength;
    /**
     * Remark_Propagation_Strength_valid
     */
    uint32 Remark_Propagation_Strength_valid;
    /**
     * Special_After_Tunnel
     */
    uint32 Special_After_Tunnel;
    /**
     * Special_After_Tunnel_valid
     */
    uint32 Special_After_Tunnel_valid;
    /**
     * Special_Before_Tunnel
     */
    uint32 Special_Before_Tunnel;
    /**
     * Special_Before_Tunnel_valid
     */
    uint32 Special_Before_Tunnel_valid;
    /**
     * TTL_Compare_Strength
     */
    uint32 TTL_Compare_Strength;
    /**
     * TTL_Compare_Strength_valid
     */
    uint32 TTL_Compare_Strength_valid;
    /**
     * TTL_Propagation_Strength
     */
    uint32 TTL_Propagation_Strength;
    /**
     * TTL_Propagation_Strength_valid
     */
    uint32 TTL_Propagation_Strength_valid;
} dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_t;

/*
 * Feature enum
 */
/**
 * \brief 
 * Submodule features
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_dnx2_aod_tables_feature_nof
} dnx_data_dnx2_aod_tables_feature_e;

/*
 * Submodule functions typedefs
 */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef int(
    *dnx_data_dnx2_aod_tables_feature_get_f) (
    int unit,
    dnx_data_dnx2_aod_tables_feature_e feature);

/**
 * \brief get table ERPP_FWD_CONTEXT_FILTER___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ERPP_FWD_CONTEXT_FILTER___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER___image_t *(
    *dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER___image_get_f) (
    int unit);

/**
 * \brief get table ERPP_FWD_CONTEXT_FILTER entry 
 * ERPP_FWD_CONTEXT_FILTER
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     ERPP_FWD_CONTEXT_FILTER - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER_t *(
    *dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER_get_f) (
    int unit,
    int index);

/**
 * \brief get table EGRESS_PER_FORWARD_CODE___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     EGRESS_PER_FORWARD_CODE___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE___image_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE___image_get_f) (
    int unit);

/**
 * \brief get table EGRESS_PER_FORWARD_CODE entry 
 * EGRESS_PER_FORWARD_CODE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * \param [in] soc_value - soc property value
 * 
 * \return
 *     EGRESS_PER_FORWARD_CODE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE_get_f) (
    int unit,
    int index,
    int soc_value);

/**
 * \brief get table ERPP_FORWARD_CODE_SELECTION___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ERPP_FORWARD_CODE_SELECTION___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION___image_t *(
    *dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION___image_get_f) (
    int unit);

/**
 * \brief get table ERPP_FORWARD_CODE_SELECTION entry 
 * ERPP_FORWARD_CODE_SELECTION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * \param [in] soc_value - soc property value
 * 
 * \return
 *     ERPP_FORWARD_CODE_SELECTION - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION_t *(
    *dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION_get_f) (
    int unit,
    int index,
    int soc_value);

/**
 * \brief get table ETPP_FORWARD_CODE_SELECTION___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     ETPP_FORWARD_CODE_SELECTION___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION___image_t *(
    *dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION___image_get_f) (
    int unit);

/**
 * \brief get table ETPP_FORWARD_CODE_SELECTION entry 
 * ETPP_FORWARD_CODE_SELECTION
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * \param [in] soc_value - soc property value
 * 
 * \return
 *     ETPP_FORWARD_CODE_SELECTION - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION_t *(
    *dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION_get_f) (
    int unit,
    int index,
    int soc_value);

/**
 * \brief get table EGRESS_PARSING_START_TYPE_CONTEXT___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     EGRESS_PARSING_START_TYPE_CONTEXT___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT___image_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT___image_get_f) (
    int unit);

/**
 * \brief get table EGRESS_PARSING_START_TYPE_CONTEXT entry 
 * EGRESS_PARSING_START_TYPE_CONTEXT
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * \param [in] soc_value - soc property value
 * 
 * \return
 *     EGRESS_PARSING_START_TYPE_CONTEXT - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT_get_f) (
    int unit,
    int index,
    int soc_value);

/**
 * \brief get table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_get_f) (
    int unit);

/**
 * \brief get table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE entry 
 * EGRESS_PARSING_CONTEXT_MAP_JR1_MODE
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * \param [in] soc_value - soc property value
 * 
 * \return
 *     EGRESS_PARSING_CONTEXT_MAP_JR1_MODE - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_t *(
    *dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_get_f) (
    int unit,
    int index,
    int soc_value);

/**
 * \brief get table FER_FILTERS_PER_FWD_CONTEXT___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     FER_FILTERS_PER_FWD_CONTEXT___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT___image_t *(
    *dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT___image_get_f) (
    int unit);

/**
 * \brief get table FER_FILTERS_PER_FWD_CONTEXT entry 
 * FER_FILTERS_PER_FWD_CONTEXT
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     FER_FILTERS_PER_FWD_CONTEXT - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT_t *(
    *dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT_get_f) (
    int unit,
    int index);

/**
 * \brief get table MPLS_SPECIAL_LABEL_PROFILE_MAP___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     MPLS_SPECIAL_LABEL_PROFILE_MAP___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP___image_t *(
    *dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP___image_get_f) (
    int unit);

/**
 * \brief get table MPLS_SPECIAL_LABEL_PROFILE_MAP entry 
 * MPLS_SPECIAL_LABEL_PROFILE_MAP
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MPLS_SPECIAL_LABEL_PROFILE_MAP - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP_t *(
    *dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP_get_f) (
    int unit,
    int index);

/**
 * \brief get table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image entry 
 * table related image
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_t *(
    *dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_get_f) (
    int unit);

/**
 * \brief get table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES entry 
 * MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES
 * 
 * \param [in] unit - unit #
 * \param [in] index - entry index
 * 
 * \return
 *     MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES - returns the relevant entry values grouped in struct - see dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef const dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_t *(
    *dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_get_f) (
    int unit,
    int index);

/*
 * SUBMODULE INTERFACE DNX_DATA_IF_DNX2_AOD - TABLES:
 * {
 */
/**
 * \brief Interface for dnx2_aod tables data
 */
typedef struct
{
    /**
     * get submodule feature - disabled/enabled
     */
    dnx_data_dnx2_aod_tables_feature_get_f feature_get;
    /**
     * get table ERPP_FWD_CONTEXT_FILTER___image entry 
     */
    dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER___image_get_f ERPP_FWD_CONTEXT_FILTER___image_get;
    /**
     * get general info table about table (for example key size)ERPP_FWD_CONTEXT_FILTER___image info
     */
    dnxc_data_table_info_get_f ERPP_FWD_CONTEXT_FILTER___image_info_get;
    /**
     * get table ERPP_FWD_CONTEXT_FILTER entry 
     */
    dnx_data_dnx2_aod_tables_ERPP_FWD_CONTEXT_FILTER_get_f ERPP_FWD_CONTEXT_FILTER_get;
    /**
     * get general info table about table (for example key size)ERPP_FWD_CONTEXT_FILTER info
     */
    dnxc_data_table_info_get_f ERPP_FWD_CONTEXT_FILTER_info_get;
    /**
     * get table EGRESS_PER_FORWARD_CODE___image entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE___image_get_f EGRESS_PER_FORWARD_CODE___image_get;
    /**
     * get general info table about table (for example key size)EGRESS_PER_FORWARD_CODE___image info
     */
    dnxc_data_table_info_get_f EGRESS_PER_FORWARD_CODE___image_info_get;
    /**
     * get table EGRESS_PER_FORWARD_CODE entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PER_FORWARD_CODE_get_f EGRESS_PER_FORWARD_CODE_get;
    /**
     * get general info table about table (for example key size)EGRESS_PER_FORWARD_CODE info
     */
    dnxc_data_table_info_get_f EGRESS_PER_FORWARD_CODE_info_get;
    /**
     * get table ERPP_FORWARD_CODE_SELECTION___image entry 
     */
    dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION___image_get_f ERPP_FORWARD_CODE_SELECTION___image_get;
    /**
     * get general info table about table (for example key size)ERPP_FORWARD_CODE_SELECTION___image info
     */
    dnxc_data_table_info_get_f ERPP_FORWARD_CODE_SELECTION___image_info_get;
    /**
     * get table ERPP_FORWARD_CODE_SELECTION entry 
     */
    dnx_data_dnx2_aod_tables_ERPP_FORWARD_CODE_SELECTION_get_f ERPP_FORWARD_CODE_SELECTION_get;
    /**
     * get general info table about table (for example key size)ERPP_FORWARD_CODE_SELECTION info
     */
    dnxc_data_table_info_get_f ERPP_FORWARD_CODE_SELECTION_info_get;
    /**
     * get table ETPP_FORWARD_CODE_SELECTION___image entry 
     */
    dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION___image_get_f ETPP_FORWARD_CODE_SELECTION___image_get;
    /**
     * get general info table about table (for example key size)ETPP_FORWARD_CODE_SELECTION___image info
     */
    dnxc_data_table_info_get_f ETPP_FORWARD_CODE_SELECTION___image_info_get;
    /**
     * get table ETPP_FORWARD_CODE_SELECTION entry 
     */
    dnx_data_dnx2_aod_tables_ETPP_FORWARD_CODE_SELECTION_get_f ETPP_FORWARD_CODE_SELECTION_get;
    /**
     * get general info table about table (for example key size)ETPP_FORWARD_CODE_SELECTION info
     */
    dnxc_data_table_info_get_f ETPP_FORWARD_CODE_SELECTION_info_get;
    /**
     * get table EGRESS_PARSING_START_TYPE_CONTEXT___image entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT___image_get_f EGRESS_PARSING_START_TYPE_CONTEXT___image_get;
    /**
     * get general info table about table (for example key size)EGRESS_PARSING_START_TYPE_CONTEXT___image info
     */
    dnxc_data_table_info_get_f EGRESS_PARSING_START_TYPE_CONTEXT___image_info_get;
    /**
     * get table EGRESS_PARSING_START_TYPE_CONTEXT entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PARSING_START_TYPE_CONTEXT_get_f EGRESS_PARSING_START_TYPE_CONTEXT_get;
    /**
     * get general info table about table (for example key size)EGRESS_PARSING_START_TYPE_CONTEXT info
     */
    dnxc_data_table_info_get_f EGRESS_PARSING_START_TYPE_CONTEXT_info_get;
    /**
     * get table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_get_f EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_get;
    /**
     * get general info table about table (for example key size)EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image info
     */
    dnxc_data_table_info_get_f EGRESS_PARSING_CONTEXT_MAP_JR1_MODE___image_info_get;
    /**
     * get table EGRESS_PARSING_CONTEXT_MAP_JR1_MODE entry 
     */
    dnx_data_dnx2_aod_tables_EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_get_f EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_get;
    /**
     * get general info table about table (for example key size)EGRESS_PARSING_CONTEXT_MAP_JR1_MODE info
     */
    dnxc_data_table_info_get_f EGRESS_PARSING_CONTEXT_MAP_JR1_MODE_info_get;
    /**
     * get table FER_FILTERS_PER_FWD_CONTEXT___image entry 
     */
    dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT___image_get_f FER_FILTERS_PER_FWD_CONTEXT___image_get;
    /**
     * get general info table about table (for example key size)FER_FILTERS_PER_FWD_CONTEXT___image info
     */
    dnxc_data_table_info_get_f FER_FILTERS_PER_FWD_CONTEXT___image_info_get;
    /**
     * get table FER_FILTERS_PER_FWD_CONTEXT entry 
     */
    dnx_data_dnx2_aod_tables_FER_FILTERS_PER_FWD_CONTEXT_get_f FER_FILTERS_PER_FWD_CONTEXT_get;
    /**
     * get general info table about table (for example key size)FER_FILTERS_PER_FWD_CONTEXT info
     */
    dnxc_data_table_info_get_f FER_FILTERS_PER_FWD_CONTEXT_info_get;
    /**
     * get table MPLS_SPECIAL_LABEL_PROFILE_MAP___image entry 
     */
    dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP___image_get_f MPLS_SPECIAL_LABEL_PROFILE_MAP___image_get;
    /**
     * get general info table about table (for example key size)MPLS_SPECIAL_LABEL_PROFILE_MAP___image info
     */
    dnxc_data_table_info_get_f MPLS_SPECIAL_LABEL_PROFILE_MAP___image_info_get;
    /**
     * get table MPLS_SPECIAL_LABEL_PROFILE_MAP entry 
     */
    dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_MAP_get_f MPLS_SPECIAL_LABEL_PROFILE_MAP_get;
    /**
     * get general info table about table (for example key size)MPLS_SPECIAL_LABEL_PROFILE_MAP info
     */
    dnxc_data_table_info_get_f MPLS_SPECIAL_LABEL_PROFILE_MAP_info_get;
    /**
     * get table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image entry 
     */
    dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_get_f MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_get;
    /**
     * get general info table about table (for example key size)MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image info
     */
    dnxc_data_table_info_get_f MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES___image_info_get;
    /**
     * get table MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES entry 
     */
    dnx_data_dnx2_aod_tables_MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_get_f MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_get;
    /**
     * get general info table about table (for example key size)MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES info
     */
    dnxc_data_table_info_get_f MPLS_SPECIAL_LABEL_PROFILE_ATTRIBUTES_info_get;
} dnx_data_if_dnx2_aod_tables_t;

/*
 * }
 */

/*
 * MODULE INTERFACE DNX_DATA_IF_DNX2_AOD:
 * {
 */
/**
 * \brief Interface for dnx2_aod data
 */
typedef struct
{
    /**
     * Interface for dnx2_aod tables data
     */
    dnx_data_if_dnx2_aod_tables_t tables;
} dnx_data_if_dnx2_aod_t;

/*
 * }
 */
/*
 * Extern:
 * {
 */
/**
 * \brief
 * Module structured interface - used to get the required data stored in dnx data
 */
extern dnx_data_if_dnx2_aod_t dnx_data_dnx2_aod;
/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_DNX2_AOD_H_*/
/* *INDENT-ON* */
