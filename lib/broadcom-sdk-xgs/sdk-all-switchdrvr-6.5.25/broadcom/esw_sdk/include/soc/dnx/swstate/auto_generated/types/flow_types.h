/** \file dnx/swstate/auto_generated/types/flow_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __FLOW_TYPES_H__
#define __FLOW_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <include/bcm/types.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
/*
 * STRUCTs
 */

/**
 * These fields hold the application dbal table + encap access, to be mapped to possible result types
 */
typedef struct {
    /**
     * dbal table id
     */
    dbal_tables_e dbal_table;
    /**
     * encap access phase
     */
    uint8 encap_access;
} flow_app_encap_info_t;

/**
 * Common configuration for flow applications
 */
typedef struct {
    /**
     * Disable verification on application
     */
    uint8 is_verify_disabled;
    /**
     * Disable error recovery on application.
     */
    uint8 is_error_recovery_disabled;
} dnx_flow_app_common_config_t;

/**
 * sw state for the flow LIF
 */
typedef struct {
    /**
     * Flow applications common configuration
     */
    dnx_flow_app_common_config_t* flow_application_info;
    sw_state_htbl_t valid_phases_per_dbal_table;
    sw_state_htbl_t dbal_table_to_valid_result_types;
} flow_sw_state_t;


#endif /* __FLOW_TYPES_H__ */
