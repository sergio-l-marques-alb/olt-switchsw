/** \file dnx_data_dnx2_mdb_app_db.h
 * 
 * MODULE DATA INTERFACE - 
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_DNX2_MDB_APP_DB_H_
/*{*/
#define _DNX_DATA_DNX2_MDB_APP_DB_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <sal/limits.h>
#include <soc/property.h>
#include <shared/shrextend/shrextend_debug.h>
#include <shared/utilex/utilex_framework.h>
#include <soc/dnxc/dnxc_data/dnxc_data_utils.h>
#include <soc/dnxc/dnxc_data/dnxc_data_mgmt.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_dnx2_mdb_app_db.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MODULE FUNCTIONS:
 * {
 */
/**
 * \brief Init default data structure - dnx_data_if_dnx2_mdb_app_db
 * 
 * \param [in] unit - Unit #
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_if_dnx2_mdb_app_db_init(
    int unit);

/*
 * }
 */

/*
 * SUBMODULE  - FIELDS:
 * MDB modified fields
 * {
 */
/*
 * Table value structure
 */
/*
 * Feature enum
 */
/**
 * \brief 
 * Submodule features
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_dnx2_mdb_app_db_fields_feature_nof
} dnx_data_dnx2_mdb_app_db_fields_feature_e;

/*
 * Submodule functions typedefs
 */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef int(
    *dnx_data_dnx2_mdb_app_db_fields_feature_get_f) (
    int unit,
    dnx_data_dnx2_mdb_app_db_fields_feature_e feature);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3'
 * configures field size of numeric numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid'
 * configures field validity of numeric numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA'
 * configures field size of numeric numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING'
 * configures field size of numeric numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG'
 * configures field size of numeric numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid'
 * configures field validity of numeric numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF'
 * configures field size of numeric numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid'
 * configures field validity of numeric numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE'
 * configures field size of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid'
 * configures field validity of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE'
 * configures field size of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid'
 * configures field validity of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE'
 * configures field size of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid'
 * configures field validity of numeric numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN'
 * configures field size of numeric numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT'
 * configures field size of numeric numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid'
 * configures field validity of numeric numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC'
 * configures field size of numeric numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid'
 * configures field validity of numeric numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING'
 * configures field size of numeric numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid'
 * configures field validity of numeric numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN'
 * configures field size of numeric numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid'
 * configures field validity of numeric numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___0
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___0'
 * configures field size of numeric 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___0 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___0_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___0___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___0___valid'
 * configures field validity of numeric 0
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___0___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___0___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___1
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___1'
 * configures field size of numeric 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___1 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___1_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___1___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___1___valid'
 * configures field validity of numeric 1
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___1___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___1___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___2
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___2'
 * configures field size of numeric 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___2 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___2_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___2___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___2___valid'
 * configures field validity of numeric 2
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___2___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___2___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___3
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___3'
 * configures field size of numeric 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___3 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___3_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___3___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___3___valid'
 * configures field validity of numeric 3
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___3___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___3___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___4
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___4'
 * configures field size of numeric 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___4 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___4_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___4___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___4___valid'
 * configures field validity of numeric 4
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___4___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___4___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___5
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___5'
 * configures field size of numeric 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___5 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___5_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___5___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___5___valid'
 * configures field validity of numeric 5
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___5___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___5___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___6
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___6'
 * configures field size of numeric 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___6 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___6_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___6___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___6___valid'
 * configures field validity of numeric 6
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___6___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___6___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___7
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___7'
 * configures field size of numeric 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___7 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___7_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___7___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___7___valid'
 * configures field validity of numeric 7
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___7___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___7___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___8
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___8'
 * configures field size of numeric 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___8 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___8_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___8___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___8___valid'
 * configures field validity of numeric 8
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___8___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___8___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___9
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___9'
 * configures field size of numeric 9
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___9 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___9_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___9___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___9___valid'
 * configures field validity of numeric 9
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___9___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___9___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___10
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___10'
 * configures field size of numeric 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___10 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___10_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___10___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___10___valid'
 * configures field validity of numeric 10
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___10___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___10___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___11
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___11'
 * configures field size of numeric 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___11 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___11_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___11___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___11___valid'
 * configures field validity of numeric 11
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___11___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___11___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___12
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___12'
 * configures field size of numeric 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___12 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___12_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___12___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___12___valid'
 * configures field validity of numeric 12
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___12___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___12___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___13
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___13'
 * configures field size of numeric 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___13 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___13_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___13___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___13___valid'
 * configures field validity of numeric 13
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___13___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___13___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___14
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___14'
 * configures field size of numeric 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___14 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___14_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___14___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___14___valid'
 * configures field validity of numeric 14
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___14___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___14___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___15
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___15'
 * configures field size of numeric 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___15 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___15_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___15___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___15___valid'
 * configures field validity of numeric 15
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___15___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___15___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___16
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___16'
 * configures field size of numeric 16
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___16 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___16_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___16___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___16___valid'
 * configures field validity of numeric 16
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___16___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___16___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___17
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___17'
 * configures field size of numeric 17
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___17 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___17_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___17___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___17___valid'
 * configures field validity of numeric 17
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___17___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___17___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___18
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___18'
 * configures field size of numeric 18
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___18 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___18_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___18___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___18___valid'
 * configures field validity of numeric 18
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___18___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___18___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___19
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___19'
 * configures field size of numeric 19
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___19 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___19_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___19___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___19___valid'
 * configures field validity of numeric 19
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___19___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___19___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___20
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___20'
 * configures field size of numeric 20
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___20 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___20_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___20___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___20___valid'
 * configures field validity of numeric 20
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___20___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___20___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___21
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___21'
 * configures field size of numeric 21
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___21 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___21_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___21___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___21___valid'
 * configures field validity of numeric 21
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___21___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___21___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___22
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___22'
 * configures field size of numeric 22
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___22 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___22_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___22___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___22___valid'
 * configures field validity of numeric 22
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___22___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___22___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___23
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___23'
 * configures field size of numeric 23
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___23 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___23_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___23___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___23___valid'
 * configures field validity of numeric 23
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___23___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___23___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___24
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___24'
 * configures field size of numeric 24
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___24 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___24_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___24___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___24___valid'
 * configures field validity of numeric 24
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___24___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___24___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___25
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___25'
 * configures field size of numeric 25
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___25 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___25_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___25___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___25___valid'
 * configures field validity of numeric 25
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___25___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___25___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___26
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___26'
 * configures field size of numeric 26
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___26 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___26_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___26___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___26___valid'
 * configures field validity of numeric 26
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___26___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___26___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___27
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___27'
 * configures field size of numeric 27
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___27 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___27_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___27___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___27___valid'
 * configures field validity of numeric 27
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___27___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___27___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___28
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___28'
 * configures field size of numeric 28
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___28 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___28_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___28___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___28___valid'
 * configures field validity of numeric 28
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___28___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___28___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___29
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___29'
 * configures field size of numeric 29
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___29 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___29_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___29___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___29___valid'
 * configures field validity of numeric 29
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___29___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___29___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___30
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___30'
 * configures field size of numeric 30
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___30 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___30_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___30___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___30___valid'
 * configures field validity of numeric 30
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___30___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___30___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___31
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___31'
 * configures field size of numeric 31
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___31 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___31_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___31___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___31___valid'
 * configures field validity of numeric 31
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___31___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___31___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___32
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___32'
 * configures field size of numeric 32
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___32 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___32_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___32___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___32___valid'
 * configures field validity of numeric 32
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___32___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___32___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___33
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___33'
 * configures field size of numeric 33
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___33 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___33_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___33___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___33___valid'
 * configures field validity of numeric 33
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___33___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___33___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___34
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___34'
 * configures field size of numeric 34
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___34 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___34_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___34___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___34___valid'
 * configures field validity of numeric 34
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___34___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___34___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___35
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___35'
 * configures field size of numeric 35
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___35 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___35_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___35___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___35___valid'
 * configures field validity of numeric 35
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___35___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___35___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___36
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___36'
 * configures field size of numeric 36
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___36 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___36_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___36___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___36___valid'
 * configures field validity of numeric 36
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___36___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___36___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___37
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___37'
 * configures field size of numeric 37
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___37 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___37_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___37___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___37___valid'
 * configures field validity of numeric 37
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___37___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___37___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___38
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___38'
 * configures field size of numeric 38
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___38 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___38_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___38___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___38___valid'
 * configures field validity of numeric 38
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___38___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___38___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___39
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___39'
 * configures field size of numeric 39
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___39 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___39_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___39___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___39___valid'
 * configures field validity of numeric 39
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___39___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___39___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___40
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___40'
 * configures field size of numeric 40
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___40 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___40_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___40___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___40___valid'
 * configures field validity of numeric 40
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___40___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___40___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___41
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___41'
 * configures field size of numeric 41
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___41 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___41_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___41___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___41___valid'
 * configures field validity of numeric 41
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___41___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___41___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___42
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___42'
 * configures field size of numeric 42
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___42 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___42_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___42___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___42___valid'
 * configures field validity of numeric 42
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___42___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___42___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___43
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___43'
 * configures field size of numeric 43
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___43 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___43_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___43___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___43___valid'
 * configures field validity of numeric 43
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___43___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___43___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___44
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___44'
 * configures field size of numeric 44
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___44 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___44_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___44___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___44___valid'
 * configures field validity of numeric 44
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___44___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___44___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___45
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___45'
 * configures field size of numeric 45
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___45 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___45_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___45___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___45___valid'
 * configures field validity of numeric 45
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___45___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___45___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___46
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___46'
 * configures field size of numeric 46
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___46 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___46_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___46___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___46___valid'
 * configures field validity of numeric 46
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___46___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___46___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___47
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___47'
 * configures field size of numeric 47
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___47 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___47_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___47___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___47___valid'
 * configures field validity of numeric 47
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___47___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___47___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___48
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___48'
 * configures field size of numeric 48
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___48 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___48_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___48___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___48___valid'
 * configures field validity of numeric 48
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___48___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___48___valid_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___49
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___49'
 * configures field size of numeric 49
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___49 - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___49_get_f) (
    int unit);

/**
 * \brief returns numeric data of numeric_mdb_field___49___valid
 * Module - 'dnx2_mdb_app_db', Submodule - 'fields', data - 'numeric_mdb_field___49___valid'
 * configures field validity of numeric 49
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     numeric_mdb_field___49___valid - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
typedef uint32(
    *dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___49___valid_get_f) (
    int unit);

/*
 * SUBMODULE INTERFACE DNX_DATA_IF_DNX2_MDB_APP_DB - FIELDS:
 * {
 */
/**
 * \brief Interface for dnx2_mdb_app_db fields data
 */
typedef struct
{
    /**
     * get submodule feature - disabled/enabled
     */
    dnx_data_dnx2_mdb_app_db_fields_feature_get_f feature_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BFD_IPV4_EXTRA_SIP___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_BASE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_ETH_RIF___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_COPY_INNER___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_GRE_GENEVE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_1_AH___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_1_AH___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_2_AH___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_2_3_AH___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_FHEI_Plus___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_MPLS_IFIT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid_get_f numeric_mdb_field___ARR_INDEX___ETPP_ETPS_FORMATS___ETPS_SVTAG___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3_get_f numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3_get;
    /**
     * returns numeric data of numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid_get_f numeric_mdb_field___ARR_INDEX___IRPP_IN_LIF_FORMATS___IN_LIF_IPvX_3___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___BFER_2ND_PASS_TERMINATION_WO_BFIR___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC_1TAG_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_AC___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___DUAL_HOMING___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_Custom___STAT_OBJECT_ID___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP_SA_tunneling___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ARP___ETPS_ARP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_BASE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_BIER___ETPS_BIER_NON_MPLS_INITIAL_4BYTES___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI_Plus___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_FHEI___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_DUMMY_TABLE_NOT_TO_USE___ETPS_MPLS_PHP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv2___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_ERSPAN___ETPS_ERSPANv3___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_IML___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_EVPN___ETPS_MPLS_1___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE_get_f numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_GTP___ETPS_GTPv1U___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPFIX_PSAMP___ETPS_IPFIX_PSAMP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_BFD_IPV4_EXTRA_SIP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_COPY_INNER___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_DOUBLE_UDP_VXLAN___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_GRE_GENEVE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_UDP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE_ECN___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL_VXLAN_GPE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV4_TUNNEL___ETPS_IPV4_TUNNEL___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GENEVE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_GRE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_RAW___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_Scale___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_UDP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN_ECN___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_IPV6_TUNNEL___ETPS_IPV6_TUNNEL_VXLAN___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE_get_f numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_L2TP___ETPS_L2TPv2___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE_get_f numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_LAWFUL_INTERCEPT___ETPS_DATA_VAR_SIZE_DATA___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE_get_f numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid_get_f numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_IFIT___ETPS_MPLS_IFIT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1_TANDEM___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_1___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_1_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_2_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_3_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2_TANDEM___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_2___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_MPLS_TUNNEL___ETPS_MPLS_PHP_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE_get_f numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_NULL___ETPS_NULL___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE_get_f numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_OAM_REFLECTOR___ETPS_REFLECTOR_OAM___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION_NON_EM_BUSTER___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_STAT_PROTECTION___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_OUT_AC___ETPS_AC_TRIPLE_TAG___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE_get_f numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_PPPOE___ETPS_PPPOE___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_AH___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_PWE___ETPS_MPLS_1___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE_get_f numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_RCH___ETPS_RCHv2___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE_get_f numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR_L2_MC___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE_get_f numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_REFLECTOR___ETPS_REFLECTOR___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE_get_f numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE_get_f numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_RIF_BASIC___ETPS_ETH_RIF___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_RSPAN___ETPS_RSPAN___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_first___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_EXT_second___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_DP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SFLOW___ETPS_SFLOW_HDR_SAMP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6_NO_SIDS___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_SRV6___ETPS_SRV6___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA_get_f numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid_get_f numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___EEDB_LL_EXTRA_DATA___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE_get_f numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid_get_f numeric_mdb_field___EEDB_TWAMP___ETPS_REFLECTOR_TWAMP___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_AC_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_DEFAULT_RESULT_TABLE___ETPS_NULL___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_DUAL_HOMING_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN_get_f numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___ESEM_DUAL_HOMING_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_DUAL_HOMING_PER_INTERFACE_NAMESPACE_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO_VLANS___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ETPS_L3_FODO___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_DB___ZERO_PADDING___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_DEVICE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___REMARK_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_FORWARD_DOMAIN_MAPPING_PER_INTERFACE_NAMESPACE_DB___ETPS_L2_FODO___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_AC_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___ETPS_DUAL_HOMING___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___ESEM_PORT_BASED_SOURCE_ADDRESS_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE_get_f numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_PORT_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT_get_f numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid_get_f numeric_mdb_field___ESEM_PORT_SVTAG___OUT_TM_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING_get_f numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid_get_f numeric_mdb_field___ESEM_PORT_SVTAG___ZERO_PADDING___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE_get_f numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get_f numeric_mdb_field___ESEM_TUNNEL_SVTAG___ETPS_SVTAG___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG_get_f numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG_get;
    /**
     * returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid_get_f numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_SVTAG_ENABLE___ETPS_SVTAG___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF_get_f numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF_get;
    /**
     * returns numeric data of numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid_get_f numeric_mdb_field___ETPS_TYPE_ARR_INDEX___EEDB_TYPE_VSD_ENABLE___ETPS_ETH_RIF___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM3_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM3_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___EXEM_IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PER_PORT_IGNORE_MAC___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PER_PORT_MY_MAC___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___EXEM_PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___GTP_CLASSIFICATION___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_0_VLANS___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_1_VLANS___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid_get_f numeric_mdb_field___INNER_ETHERNET_VLAN_CLASSIFICATION_NETWORK_SCOPED_VLAN_2_VLANS___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_C_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_S_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_S_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_AC_TCAM_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get_f numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___IN_AC_UNTAGGED_DB___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_BR_E_C_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___IN_BR_E_S_VLAN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get_f numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___IN_BR_E_VLAN_DB___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___EGRESS_LLVP_PROFILE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___ESEM_NAME_SPACE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE_get;
    /**
     * returns numeric data of numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get_f numeric_mdb_field___JR1_MPLS_PUSH_COMMAND___ETPS_MPLS_1_STAT___RESULT_TYPE___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___L2TPV2_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___L2TPV3_DATA_MESSAGE_TT___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT_get_f numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___MAC_IN_MAC_LEARN_INFO___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT_get_f numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___MIM_TUNNEL_EM___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN_get_f numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid_get_f numeric_mdb_field___MPLS_TERMINATION_SINGLE_LABEL_WITH_NETWORK_DOMAIN_DB___VLAN_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_DTC_C_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_DTC_S_C_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_DTC_S_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_S_TAG_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_UNMATCHED_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get_f numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT_get;
    /**
     * returns numeric data of numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get_f numeric_mdb_field___PON_UNTAGGED_CLASSIFICATION___MAPPED_PP_PORT___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___TNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___TNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC_get_f numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC_get;
    /**
     * returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid_get_f numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONPTC___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING_get_f numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING_get;
    /**
     * returns numeric data of numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid_get_f numeric_mdb_field___VIRT_TCAM___PRTTCAM_KEY_VP_PONZERO_PADDING___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___VNI2VRF___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get_f numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN_get;
    /**
     * returns numeric data of numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get_f numeric_mdb_field___VNI2VSI___NEXT_LAYER_NETWORK_DOMAIN___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___0
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___0_get_f numeric_mdb_field___0_get;
    /**
     * returns numeric data of numeric_mdb_field___0___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___0___valid_get_f numeric_mdb_field___0___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___1
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___1_get_f numeric_mdb_field___1_get;
    /**
     * returns numeric data of numeric_mdb_field___1___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___1___valid_get_f numeric_mdb_field___1___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___2
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___2_get_f numeric_mdb_field___2_get;
    /**
     * returns numeric data of numeric_mdb_field___2___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___2___valid_get_f numeric_mdb_field___2___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___3
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___3_get_f numeric_mdb_field___3_get;
    /**
     * returns numeric data of numeric_mdb_field___3___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___3___valid_get_f numeric_mdb_field___3___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___4
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___4_get_f numeric_mdb_field___4_get;
    /**
     * returns numeric data of numeric_mdb_field___4___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___4___valid_get_f numeric_mdb_field___4___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___5
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___5_get_f numeric_mdb_field___5_get;
    /**
     * returns numeric data of numeric_mdb_field___5___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___5___valid_get_f numeric_mdb_field___5___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___6
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___6_get_f numeric_mdb_field___6_get;
    /**
     * returns numeric data of numeric_mdb_field___6___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___6___valid_get_f numeric_mdb_field___6___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___7
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___7_get_f numeric_mdb_field___7_get;
    /**
     * returns numeric data of numeric_mdb_field___7___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___7___valid_get_f numeric_mdb_field___7___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___8
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___8_get_f numeric_mdb_field___8_get;
    /**
     * returns numeric data of numeric_mdb_field___8___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___8___valid_get_f numeric_mdb_field___8___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___9
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___9_get_f numeric_mdb_field___9_get;
    /**
     * returns numeric data of numeric_mdb_field___9___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___9___valid_get_f numeric_mdb_field___9___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___10
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___10_get_f numeric_mdb_field___10_get;
    /**
     * returns numeric data of numeric_mdb_field___10___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___10___valid_get_f numeric_mdb_field___10___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___11
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___11_get_f numeric_mdb_field___11_get;
    /**
     * returns numeric data of numeric_mdb_field___11___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___11___valid_get_f numeric_mdb_field___11___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___12
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___12_get_f numeric_mdb_field___12_get;
    /**
     * returns numeric data of numeric_mdb_field___12___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___12___valid_get_f numeric_mdb_field___12___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___13
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___13_get_f numeric_mdb_field___13_get;
    /**
     * returns numeric data of numeric_mdb_field___13___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___13___valid_get_f numeric_mdb_field___13___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___14
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___14_get_f numeric_mdb_field___14_get;
    /**
     * returns numeric data of numeric_mdb_field___14___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___14___valid_get_f numeric_mdb_field___14___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___15
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___15_get_f numeric_mdb_field___15_get;
    /**
     * returns numeric data of numeric_mdb_field___15___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___15___valid_get_f numeric_mdb_field___15___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___16
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___16_get_f numeric_mdb_field___16_get;
    /**
     * returns numeric data of numeric_mdb_field___16___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___16___valid_get_f numeric_mdb_field___16___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___17
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___17_get_f numeric_mdb_field___17_get;
    /**
     * returns numeric data of numeric_mdb_field___17___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___17___valid_get_f numeric_mdb_field___17___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___18
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___18_get_f numeric_mdb_field___18_get;
    /**
     * returns numeric data of numeric_mdb_field___18___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___18___valid_get_f numeric_mdb_field___18___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___19
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___19_get_f numeric_mdb_field___19_get;
    /**
     * returns numeric data of numeric_mdb_field___19___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___19___valid_get_f numeric_mdb_field___19___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___20
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___20_get_f numeric_mdb_field___20_get;
    /**
     * returns numeric data of numeric_mdb_field___20___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___20___valid_get_f numeric_mdb_field___20___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___21
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___21_get_f numeric_mdb_field___21_get;
    /**
     * returns numeric data of numeric_mdb_field___21___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___21___valid_get_f numeric_mdb_field___21___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___22
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___22_get_f numeric_mdb_field___22_get;
    /**
     * returns numeric data of numeric_mdb_field___22___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___22___valid_get_f numeric_mdb_field___22___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___23
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___23_get_f numeric_mdb_field___23_get;
    /**
     * returns numeric data of numeric_mdb_field___23___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___23___valid_get_f numeric_mdb_field___23___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___24
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___24_get_f numeric_mdb_field___24_get;
    /**
     * returns numeric data of numeric_mdb_field___24___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___24___valid_get_f numeric_mdb_field___24___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___25
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___25_get_f numeric_mdb_field___25_get;
    /**
     * returns numeric data of numeric_mdb_field___25___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___25___valid_get_f numeric_mdb_field___25___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___26
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___26_get_f numeric_mdb_field___26_get;
    /**
     * returns numeric data of numeric_mdb_field___26___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___26___valid_get_f numeric_mdb_field___26___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___27
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___27_get_f numeric_mdb_field___27_get;
    /**
     * returns numeric data of numeric_mdb_field___27___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___27___valid_get_f numeric_mdb_field___27___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___28
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___28_get_f numeric_mdb_field___28_get;
    /**
     * returns numeric data of numeric_mdb_field___28___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___28___valid_get_f numeric_mdb_field___28___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___29
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___29_get_f numeric_mdb_field___29_get;
    /**
     * returns numeric data of numeric_mdb_field___29___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___29___valid_get_f numeric_mdb_field___29___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___30
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___30_get_f numeric_mdb_field___30_get;
    /**
     * returns numeric data of numeric_mdb_field___30___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___30___valid_get_f numeric_mdb_field___30___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___31
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___31_get_f numeric_mdb_field___31_get;
    /**
     * returns numeric data of numeric_mdb_field___31___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___31___valid_get_f numeric_mdb_field___31___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___32
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___32_get_f numeric_mdb_field___32_get;
    /**
     * returns numeric data of numeric_mdb_field___32___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___32___valid_get_f numeric_mdb_field___32___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___33
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___33_get_f numeric_mdb_field___33_get;
    /**
     * returns numeric data of numeric_mdb_field___33___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___33___valid_get_f numeric_mdb_field___33___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___34
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___34_get_f numeric_mdb_field___34_get;
    /**
     * returns numeric data of numeric_mdb_field___34___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___34___valid_get_f numeric_mdb_field___34___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___35
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___35_get_f numeric_mdb_field___35_get;
    /**
     * returns numeric data of numeric_mdb_field___35___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___35___valid_get_f numeric_mdb_field___35___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___36
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___36_get_f numeric_mdb_field___36_get;
    /**
     * returns numeric data of numeric_mdb_field___36___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___36___valid_get_f numeric_mdb_field___36___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___37
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___37_get_f numeric_mdb_field___37_get;
    /**
     * returns numeric data of numeric_mdb_field___37___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___37___valid_get_f numeric_mdb_field___37___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___38
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___38_get_f numeric_mdb_field___38_get;
    /**
     * returns numeric data of numeric_mdb_field___38___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___38___valid_get_f numeric_mdb_field___38___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___39
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___39_get_f numeric_mdb_field___39_get;
    /**
     * returns numeric data of numeric_mdb_field___39___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___39___valid_get_f numeric_mdb_field___39___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___40
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___40_get_f numeric_mdb_field___40_get;
    /**
     * returns numeric data of numeric_mdb_field___40___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___40___valid_get_f numeric_mdb_field___40___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___41
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___41_get_f numeric_mdb_field___41_get;
    /**
     * returns numeric data of numeric_mdb_field___41___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___41___valid_get_f numeric_mdb_field___41___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___42
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___42_get_f numeric_mdb_field___42_get;
    /**
     * returns numeric data of numeric_mdb_field___42___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___42___valid_get_f numeric_mdb_field___42___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___43
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___43_get_f numeric_mdb_field___43_get;
    /**
     * returns numeric data of numeric_mdb_field___43___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___43___valid_get_f numeric_mdb_field___43___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___44
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___44_get_f numeric_mdb_field___44_get;
    /**
     * returns numeric data of numeric_mdb_field___44___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___44___valid_get_f numeric_mdb_field___44___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___45
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___45_get_f numeric_mdb_field___45_get;
    /**
     * returns numeric data of numeric_mdb_field___45___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___45___valid_get_f numeric_mdb_field___45___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___46
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___46_get_f numeric_mdb_field___46_get;
    /**
     * returns numeric data of numeric_mdb_field___46___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___46___valid_get_f numeric_mdb_field___46___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___47
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___47_get_f numeric_mdb_field___47_get;
    /**
     * returns numeric data of numeric_mdb_field___47___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___47___valid_get_f numeric_mdb_field___47___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___48
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___48_get_f numeric_mdb_field___48_get;
    /**
     * returns numeric data of numeric_mdb_field___48___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___48___valid_get_f numeric_mdb_field___48___valid_get;
    /**
     * returns numeric data of numeric_mdb_field___49
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___49_get_f numeric_mdb_field___49_get;
    /**
     * returns numeric data of numeric_mdb_field___49___valid
     */
    dnx_data_dnx2_mdb_app_db_fields_numeric_mdb_field___49___valid_get_f numeric_mdb_field___49___valid_get;
} dnx_data_if_dnx2_mdb_app_db_fields_t;

/*
 * }
 */

/*
 * MODULE INTERFACE DNX_DATA_IF_DNX2_MDB_APP_DB:
 * {
 */
/**
 * \brief Interface for dnx2_mdb_app_db data
 */
typedef struct
{
    /**
     * Interface for dnx2_mdb_app_db fields data
     */
    dnx_data_if_dnx2_mdb_app_db_fields_t fields;
} dnx_data_if_dnx2_mdb_app_db_t;

/*
 * }
 */
/*
 * Extern:
 * {
 */
/**
 * \brief
 * Module structured interface - used to get the required data stored in dnx data
 */
extern dnx_data_if_dnx2_mdb_app_db_t dnx_data_dnx2_mdb_app_db;
/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_DNX2_MDB_APP_DB_H_*/
/* *INDENT-ON* */
