/** \file dnx/swstate/auto_generated/types/dnx_port_nif_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_PORT_NIF_TYPES_H__
#define __DNX_PORT_NIF_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
/*
 * STRUCTs
 */

typedef struct {
    int head;
    int tail;
    int size;
} dnx_port_nif_db_list_info_t;

typedef struct {
    int next_section;
} dnx_port_nif_db_linking_info_t;

typedef struct {
    /**
     * DB for general link list meta data.
     */
    dnx_port_nif_db_list_info_t list_info;
    /**
     * DB for all the sections next pointer.
     */
    dnx_port_nif_db_linking_info_t* linking_info;
    /**
     * Number of sections which allocated per client.
     */
    uint32* nof_sections_allocated;
} dnx_port_nif_db_link_list_t;

typedef struct {
    /**
     * DB for OFR free lists handling.
     */
    dnx_port_nif_db_list_info_t* list_info;
    /**
     * DB for all the sections next pointer.
     */
    dnx_port_nif_db_linking_info_t** linking_info;
    /**
     * Number of sections which allocated per client.
     */
    uint32** nof_sections_allocated;
} dnx_port_nif_db_double_priority_link_list_t;

/**
 * DB for handling nif blocks
 */
typedef struct {
    /**
     * DB for arbiter link list handling.
     */
    dnx_port_nif_db_link_list_t arb_link_list;
    /**
     * DB for OFT link list handling.
     */
    dnx_port_nif_db_link_list_t oft_link_list;
    /**
     * DB for OFR link list handling.
     */
    dnx_port_nif_db_double_priority_link_list_t ofr_link_list;
} dnx_port_nif_db_t;


#endif /* __DNX_PORT_NIF_TYPES_H__ */
