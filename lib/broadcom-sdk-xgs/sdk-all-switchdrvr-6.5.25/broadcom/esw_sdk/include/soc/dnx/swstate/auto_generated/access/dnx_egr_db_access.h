/** \file dnx/swstate/auto_generated/access/dnx_egr_db_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_EGR_DB_ACCESS_H__
#define __DNX_EGR_DB_ACCESS_H__

#include <soc/dnx/swstate/auto_generated/types/dnx_egr_db_types.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_device.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_egr_queuing.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_egr_db_is_init
 */
typedef int (*dnx_egr_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_egr_db_init
 */
typedef int (*dnx_egr_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_egr_db_ps_allocation_bmap_set
 */
typedef int (*dnx_egr_db_ps_allocation_bmap_set_cb)(
    int unit, uint32 allocation_bmap_idx_0, uint32 allocation_bmap_idx_1, uint32 allocation_bmap);

/**
 * implemented by: dnx_egr_db_ps_allocation_bmap_get
 */
typedef int (*dnx_egr_db_ps_allocation_bmap_get_cb)(
    int unit, uint32 allocation_bmap_idx_0, uint32 allocation_bmap_idx_1, uint32 *allocation_bmap);

/**
 * implemented by: dnx_egr_db_ps_prio_mode_set
 */
typedef int (*dnx_egr_db_ps_prio_mode_set_cb)(
    int unit, uint32 prio_mode_idx_0, uint32 prio_mode_idx_1, uint32 prio_mode);

/**
 * implemented by: dnx_egr_db_ps_prio_mode_get
 */
typedef int (*dnx_egr_db_ps_prio_mode_get_cb)(
    int unit, uint32 prio_mode_idx_0, uint32 prio_mode_idx_1, uint32 *prio_mode);

/**
 * implemented by: dnx_egr_db_ps_if_idx_set
 */
typedef int (*dnx_egr_db_ps_if_idx_set_cb)(
    int unit, uint32 if_idx_idx_0, uint32 if_idx_idx_1, int if_idx);

/**
 * implemented by: dnx_egr_db_ps_if_idx_get
 */
typedef int (*dnx_egr_db_ps_if_idx_get_cb)(
    int unit, uint32 if_idx_idx_0, uint32 if_idx_idx_1, int *if_idx);

/**
 * implemented by: dnx_egr_db_interface_occ_set
 */
typedef int (*dnx_egr_db_interface_occ_set_cb)(
    int unit, uint32 interface_occ_idx_0, uint32 interface_occ_idx_1, int interface_occ);

/**
 * implemented by: dnx_egr_db_interface_occ_get
 */
typedef int (*dnx_egr_db_interface_occ_get_cb)(
    int unit, uint32 interface_occ_idx_0, uint32 interface_occ_idx_1, int *interface_occ);

/**
 * implemented by: dnx_egr_db_total_egr_if_credits_set
 */
typedef int (*dnx_egr_db_total_egr_if_credits_set_cb)(
    int unit, uint32 total_egr_if_credits_idx_0, int total_egr_if_credits);

/**
 * implemented by: dnx_egr_db_total_egr_if_credits_get
 */
typedef int (*dnx_egr_db_total_egr_if_credits_get_cb)(
    int unit, uint32 total_egr_if_credits_idx_0, int *total_egr_if_credits);

/**
 * implemented by: dnx_egr_db_egr_if_credits_configured_set
 */
typedef int (*dnx_egr_db_egr_if_credits_configured_set_cb)(
    int unit, uint32 egr_if_credits_configured_idx_0, uint32 egr_if_credits_configured_idx_1, uint8 egr_if_credits_configured);

/**
 * implemented by: dnx_egr_db_egr_if_credits_configured_get
 */
typedef int (*dnx_egr_db_egr_if_credits_configured_get_cb)(
    int unit, uint32 egr_if_credits_configured_idx_0, uint32 egr_if_credits_configured_idx_1, uint8 *egr_if_credits_configured);

/**
 * implemented by: dnx_egr_db_total_esb_queues_allocated_set
 */
typedef int (*dnx_egr_db_total_esb_queues_allocated_set_cb)(
    int unit, uint32 total_esb_queues_allocated_idx_0, int total_esb_queues_allocated);

/**
 * implemented by: dnx_egr_db_total_esb_queues_allocated_get
 */
typedef int (*dnx_egr_db_total_esb_queues_allocated_get_cb)(
    int unit, uint32 total_esb_queues_allocated_idx_0, int *total_esb_queues_allocated);

/**
 * implemented by: dnx_egr_db_nof_negative_compensation_ports_set
 */
typedef int (*dnx_egr_db_nof_negative_compensation_ports_set_cb)(
    int unit, uint32 nof_negative_compensation_ports_idx_0, int nof_negative_compensation_ports);

/**
 * implemented by: dnx_egr_db_nof_negative_compensation_ports_get
 */
typedef int (*dnx_egr_db_nof_negative_compensation_ports_get_cb)(
    int unit, uint32 nof_negative_compensation_ports_idx_0, int *nof_negative_compensation_ports);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable allocation_bmap
 */
typedef struct {
    dnx_egr_db_ps_allocation_bmap_set_cb set;
    dnx_egr_db_ps_allocation_bmap_get_cb get;
} dnx_egr_db_ps_allocation_bmap_cbs;

/**
 * This structure holds the access functions for the variable prio_mode
 */
typedef struct {
    dnx_egr_db_ps_prio_mode_set_cb set;
    dnx_egr_db_ps_prio_mode_get_cb get;
} dnx_egr_db_ps_prio_mode_cbs;

/**
 * This structure holds the access functions for the variable if_idx
 */
typedef struct {
    dnx_egr_db_ps_if_idx_set_cb set;
    dnx_egr_db_ps_if_idx_get_cb get;
} dnx_egr_db_ps_if_idx_cbs;

/**
 * This structure holds the access functions for the variable dnx_ps_db_t
 */
typedef struct {
    /**
     * Access struct for allocation_bmap
     */
    dnx_egr_db_ps_allocation_bmap_cbs allocation_bmap;
    /**
     * Access struct for prio_mode
     */
    dnx_egr_db_ps_prio_mode_cbs prio_mode;
    /**
     * Access struct for if_idx
     */
    dnx_egr_db_ps_if_idx_cbs if_idx;
} dnx_egr_db_ps_cbs;

/**
 * This structure holds the access functions for the variable interface_occ
 */
typedef struct {
    dnx_egr_db_interface_occ_set_cb set;
    dnx_egr_db_interface_occ_get_cb get;
} dnx_egr_db_interface_occ_cbs;

/**
 * This structure holds the access functions for the variable total_egr_if_credits
 */
typedef struct {
    dnx_egr_db_total_egr_if_credits_set_cb set;
    dnx_egr_db_total_egr_if_credits_get_cb get;
} dnx_egr_db_total_egr_if_credits_cbs;

/**
 * This structure holds the access functions for the variable egr_if_credits_configured
 */
typedef struct {
    dnx_egr_db_egr_if_credits_configured_set_cb set;
    dnx_egr_db_egr_if_credits_configured_get_cb get;
} dnx_egr_db_egr_if_credits_configured_cbs;

/**
 * This structure holds the access functions for the variable total_esb_queues_allocated
 */
typedef struct {
    dnx_egr_db_total_esb_queues_allocated_set_cb set;
    dnx_egr_db_total_esb_queues_allocated_get_cb get;
} dnx_egr_db_total_esb_queues_allocated_cbs;

/**
 * This structure holds the access functions for the variable nof_negative_compensation_ports
 */
typedef struct {
    dnx_egr_db_nof_negative_compensation_ports_set_cb set;
    dnx_egr_db_nof_negative_compensation_ports_get_cb get;
} dnx_egr_db_nof_negative_compensation_ports_cbs;

/**
 * This structure holds the access functions for the variable dnx_egr_db_t
 */
typedef struct {
    dnx_egr_db_is_init_cb is_init;
    dnx_egr_db_init_cb init;
    /**
     * Access struct for ps
     */
    dnx_egr_db_ps_cbs ps;
    /**
     * Access struct for interface_occ
     */
    dnx_egr_db_interface_occ_cbs interface_occ;
    /**
     * Access struct for total_egr_if_credits
     */
    dnx_egr_db_total_egr_if_credits_cbs total_egr_if_credits;
    /**
     * Access struct for egr_if_credits_configured
     */
    dnx_egr_db_egr_if_credits_configured_cbs egr_if_credits_configured;
    /**
     * Access struct for total_esb_queues_allocated
     */
    dnx_egr_db_total_esb_queues_allocated_cbs total_esb_queues_allocated;
    /**
     * Access struct for nof_negative_compensation_ports
     */
    dnx_egr_db_nof_negative_compensation_ports_cbs nof_negative_compensation_ports;
} dnx_egr_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_egr_db_cbs dnx_egr_db;

#endif /* __DNX_EGR_DB_ACCESS_H__ */
