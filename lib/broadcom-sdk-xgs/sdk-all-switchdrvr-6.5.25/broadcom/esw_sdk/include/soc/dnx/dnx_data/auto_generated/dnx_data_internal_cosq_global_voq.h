/** \file dnx_data_internal_cosq_global_voq.h
 * 
 * MODULE DEVICE DATA - DNX_DATA
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_INTERNAL_COSQ_GLOBAL_VOQ_H_
/*{*/
#define _DNX_DATA_INTERNAL_COSQ_GLOBAL_VOQ_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <soc/dnx/dnx_data/auto_generated/dnx_data_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_cosq_global_voq.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * TYPEDEFS:
 * {
 */
/**
 * \brief 
 * Submodule enum
 */
typedef enum
{
    dnx_data_cosq_global_voq_submodule_general,
    dnx_data_cosq_global_voq_submodule_dbal,

    /**
     * Must be last one!
     */
    _dnx_data_cosq_global_voq_submodule_nof
} dnx_data_cosq_global_voq_submodule_e;

/*
 * }
 */

/*
 * SUBMODULE GENERAL:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_cosq_global_voq_general_feature_get(
    int unit,
    dnx_data_cosq_global_voq_general_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{
    dnx_data_cosq_global_voq_general_define_min_refresh_interval,

    /**
     * Must be last one!
     */
    _dnx_data_cosq_global_voq_general_define_nof
} dnx_data_cosq_global_voq_general_define_e;

/* Get Data */
/**
 * \brief returns define data of min_refresh_interval
 * Module - 'cosq_global_voq', Submodule - 'general', data - 'min_refresh_interval'
 * Minimal time interval (in nanosec) between each VOQ sample
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     min_refresh_interval - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_general_min_refresh_interval_get(
    int unit);

/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{
    dnx_data_cosq_global_voq_general_table_valid_quanta_sizes,

    /**
     * Must be last one!
     */
    _dnx_data_cosq_global_voq_general_table_nof
} dnx_data_cosq_global_voq_general_table_e;

/* Get Data */
/**
 * \brief get table valid_quanta_sizes entry 
 * supported quanta sizes
 * 
 * \param [in] unit - unit #
 * \param [in] index - table entry index
 * 
 * \return
 *     valid_quanta_sizes - returns the relevant entry values grouped in struct - see dnx_data_cosq_global_voq_general_valid_quanta_sizes_t
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnx_data_cosq_global_voq_general_valid_quanta_sizes_t * dnx_data_cosq_global_voq_general_valid_quanta_sizes_get(
    int unit,
    int index);

/* Get Value Str */
/**
 * \brief Get table value as string
 * Module - 'cosq_global_voq', Submodule - 'general', table - 'valid_quanta_sizes'
 * supported quanta sizes
 * 
 * \param [in] unit - Unit #
 * \param [out] buffer - buffer for the value
 * \param [in] key0 - key #0 index - 0 if not used
 * \param [in] key1 - key #1 index - 0 if not used
 * \param [in] value_index - value index to get - the index is alligned with values array in table structure
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_cosq_global_voq_general_valid_quanta_sizes_entry_str_get(
    int unit,
    char *buffer,
    int key0,
    int key1,
    int value_index);

/* Get Table info */
/**
 * \brief get general info table about table (for example key size)valid_quanta_sizes info
 * supported quanta sizes
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     valid_quanta_sizes - returns table info
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
const dnxc_data_table_info_t * dnx_data_cosq_global_voq_general_valid_quanta_sizes_info_get(
    int unit);

/*
 * SUBMODULE DBAL:
 * {
 */
/*
 * Features
 */
/* Feature enum - placed in if header (should be exposed to component user */
/* Get Data */
/**
 * \brief get submodule feature - disabled/enabled
 * 
 * \param [in] unit - Unit #
 * \param [in] feature - feature to get (see enum definition for more details
 * 
 * \return
 *     is_supported - returns 1 if and only if supported and 0 otherwise
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
int dnx_data_cosq_global_voq_dbal_feature_get(
    int unit,
    dnx_data_cosq_global_voq_dbal_feature_e feature);

/*
 * Defines
 */
/**
 * \brief 
 * Define enum
 */
typedef enum
{
    dnx_data_cosq_global_voq_dbal_define_quanta_words_shift_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_refresh_period_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_phase_transition_timeout_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_phase_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_phase_period_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_phase_start_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_consecutive_down_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_tc_profile_nof,
    dnx_data_cosq_global_voq_dbal_define_tc_index_nof,
    dnx_data_cosq_global_voq_dbal_define_bin_profile_nof,
    dnx_data_cosq_global_voq_dbal_define_bin_index_nof,
    dnx_data_cosq_global_voq_dbal_define_bin_interval_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_base_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_tc_profile_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_tc_index_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_bin_profile_nof_bits,
    dnx_data_cosq_global_voq_dbal_define_bin_index_nof_bits,

    /**
     * Must be last one!
     */
    _dnx_data_cosq_global_voq_dbal_define_nof
} dnx_data_cosq_global_voq_dbal_define_e;

/* Get Data */
/**
 * \brief returns define data of quanta_words_shift_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'quanta_words_shift_nof_bits'
 * Number of bits in quanta word shift field
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     quanta_words_shift_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_quanta_words_shift_nof_bits_get(
    int unit);

/**
 * \brief returns define data of refresh_period_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'refresh_period_nof_bits'
 * Number of bits in refresh period field
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     refresh_period_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_refresh_period_nof_bits_get(
    int unit);

/**
 * \brief returns define data of phase_transition_timeout_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'phase_transition_timeout_nof_bits'
 * Number of bits in phase transition timeout
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     phase_transition_timeout_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_phase_transition_timeout_nof_bits_get(
    int unit);

/**
 * \brief returns define data of phase_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'phase_nof_bits'
 * Number of bits in phase value
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     phase_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_phase_nof_bits_get(
    int unit);

/**
 * \brief returns define data of phase_period_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'phase_period_nof_bits'
 * Number of bits in phase period, interval in nano
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     phase_period_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_phase_period_nof_bits_get(
    int unit);

/**
 * \brief returns define data of phase_start_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'phase_start_nof_bits'
 * Number of bits in phase start, time of day
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     phase_start_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_phase_start_nof_bits_get(
    int unit);

/**
 * \brief returns define data of consecutive_down_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'consecutive_down_nof_bits'
 * Number of bits in consqutive down
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     consecutive_down_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_consecutive_down_nof_bits_get(
    int unit);

/**
 * \brief returns define data of tc_profile_nof
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'tc_profile_nof'
 * Number of tc profiles
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     tc_profile_nof - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_tc_profile_nof_get(
    int unit);

/**
 * \brief returns define data of tc_index_nof
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'tc_index_nof'
 * Number of tc indexes
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     tc_index_nof - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_tc_index_nof_get(
    int unit);

/**
 * \brief returns define data of bin_profile_nof
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'bin_profile_nof'
 * Number of bin profiles
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     bin_profile_nof - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_bin_profile_nof_get(
    int unit);

/**
 * \brief returns define data of bin_index_nof
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'bin_index_nof'
 * Number of bin indexes
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     bin_index_nof - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_bin_index_nof_get(
    int unit);

/**
 * \brief returns define data of bin_interval_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'bin_interval_nof_bits'
 * Number of bits in bin interval
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     bin_interval_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_bin_interval_nof_bits_get(
    int unit);

/**
 * \brief returns define data of base_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'base_nof_bits'
 * Number of bits in 'Global VOQ-ID'
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     base_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_base_nof_bits_get(
    int unit);

/**
 * \brief returns numeric data of tc_profile_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'tc_profile_nof_bits'
 * Number of bits in tc profile
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     tc_profile_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_tc_profile_nof_bits_get(
    int unit);

/**
 * \brief returns numeric data of tc_index_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'tc_index_nof_bits'
 * Number of bits in tc index
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     tc_index_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_tc_index_nof_bits_get(
    int unit);

/**
 * \brief returns numeric data of bin_profile_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'bin_profile_nof_bits'
 * Number of bits in bin profile
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     bin_profile_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_bin_profile_nof_bits_get(
    int unit);

/**
 * \brief returns numeric data of bin_index_nof_bits
 * Module - 'cosq_global_voq', Submodule - 'dbal', data - 'bin_index_nof_bits'
 * Number of bits in bin index
 * 
 * \param [in] unit - unit #
 * 
 * \return
 *     bin_index_nof_bits - the required data value
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
uint32 dnx_data_cosq_global_voq_dbal_bin_index_nof_bits_get(
    int unit);

/*
 * Tables
 */
/**
 * \brief 
 * Table enum
 */
typedef enum
{

    /**
     * Must be last one!
     */
    _dnx_data_cosq_global_voq_dbal_table_nof
} dnx_data_cosq_global_voq_dbal_table_e;

/* Get Data */
/* Get Value Str */
/* Get Table info */
/*
 * FUNCTIONS:
 * {
 */
/**
 * \brief Init module
 * 
 * \param [in] unit - Unit #
 * \param [out] module_data - pointer to module data
 * 
 * \return
 *     rv - see 'shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnx_data_cosq_global_voq_init(
    int unit,
    dnxc_data_module_t *module_data);

/*
 * }
 */
/*}*/
#endif /*_DNX_DATA_INTERNAL_COSQ_GLOBAL_VOQ_H_*/
/* *INDENT-ON* */
