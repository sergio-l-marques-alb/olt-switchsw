/** \file dnx/swstate/auto_generated/access/dnx_field_kbp_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_FIELD_KBP_ACCESS_H__
#define __DNX_FIELD_KBP_ACCESS_H__

#ifdef BCM_DNX_SUPPORT
#if defined(INCLUDE_KBP)
#include <soc/dnx/swstate/auto_generated/types/dnx_field_kbp_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_field_kbp_sw_is_init
 */
typedef int (*dnx_field_kbp_sw_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_field_kbp_sw_init
 */
typedef int (*dnx_field_kbp_sw_init_cb)(
    int unit);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_set_cb)(
    int unit, uint32 opcode_info_idx_0, CONST dnx_field_kbp_opcode_info_t *opcode_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_get_cb)(
    int unit, uint32 opcode_info_idx_0, dnx_field_kbp_opcode_info_t *opcode_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_alloc
 */
typedef int (*dnx_field_kbp_sw_opcode_info_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_set_cb)(
    int unit, uint32 opcode_info_idx_0, CONST dnx_field_kbp_master_key_info_t *master_key_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_get_cb)(
    int unit, uint32 opcode_info_idx_0, dnx_field_kbp_master_key_info_t *master_key_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_set_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, CONST dnx_field_kbp_segment_info_t *segment_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_get_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, dnx_field_kbp_segment_info_t *segment_info);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_set_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, uint32 qual_idx_idx_0, uint8 qual_idx);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_get_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, uint32 qual_idx_idx_0, uint8 *qual_idx);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_set_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, dnx_field_group_t fg_id);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_get_cb)(
    int unit, uint32 opcode_info_idx_0, uint32 segment_info_idx_0, dnx_field_group_t *fg_id);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_set_cb)(
    int unit, uint32 opcode_info_idx_0, uint8 nof_fwd_segments);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_get_cb)(
    int unit, uint32 opcode_info_idx_0, uint8 *nof_fwd_segments);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_is_valid_set
 */
typedef int (*dnx_field_kbp_sw_opcode_info_is_valid_set_cb)(
    int unit, uint32 opcode_info_idx_0, uint8 is_valid);

/**
 * implemented by: dnx_field_kbp_sw_opcode_info_is_valid_get
 */
typedef int (*dnx_field_kbp_sw_opcode_info_is_valid_get_cb)(
    int unit, uint32 opcode_info_idx_0, uint8 *is_valid);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable qual_idx
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_set_cb set;
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_get_cb get;
} dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_cbs;

/**
 * This structure holds the access functions for the variable fg_id
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_set_cb set;
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_get_cb get;
} dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_kbp_segment_info_t
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_set_cb set;
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_get_cb get;
    /**
     * Access struct for qual_idx
     */
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_qual_idx_cbs qual_idx;
    /**
     * Access struct for fg_id
     */
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_fg_id_cbs fg_id;
} dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_cbs;

/**
 * This structure holds the access functions for the variable nof_fwd_segments
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_set_cb set;
    dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_get_cb get;
} dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_kbp_master_key_info_t
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_master_key_info_set_cb set;
    dnx_field_kbp_sw_opcode_info_master_key_info_get_cb get;
    /**
     * Access struct for segment_info
     */
    dnx_field_kbp_sw_opcode_info_master_key_info_segment_info_cbs segment_info;
    /**
     * Access struct for nof_fwd_segments
     */
    dnx_field_kbp_sw_opcode_info_master_key_info_nof_fwd_segments_cbs nof_fwd_segments;
} dnx_field_kbp_sw_opcode_info_master_key_info_cbs;

/**
 * This structure holds the access functions for the variable is_valid
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_is_valid_set_cb set;
    dnx_field_kbp_sw_opcode_info_is_valid_get_cb get;
} dnx_field_kbp_sw_opcode_info_is_valid_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_kbp_opcode_info_t
 */
typedef struct {
    dnx_field_kbp_sw_opcode_info_set_cb set;
    dnx_field_kbp_sw_opcode_info_get_cb get;
    dnx_field_kbp_sw_opcode_info_alloc_cb alloc;
    /**
     * Access struct for master_key_info
     */
    dnx_field_kbp_sw_opcode_info_master_key_info_cbs master_key_info;
    /**
     * Access struct for is_valid
     */
    dnx_field_kbp_sw_opcode_info_is_valid_cbs is_valid;
} dnx_field_kbp_sw_opcode_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_kbp_sw_t
 */
typedef struct {
    dnx_field_kbp_sw_is_init_cb is_init;
    dnx_field_kbp_sw_init_cb init;
    /**
     * Access struct for opcode_info
     */
    dnx_field_kbp_sw_opcode_info_cbs opcode_info;
} dnx_field_kbp_sw_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_field_kbp_sw_cbs dnx_field_kbp_sw;
#endif /* defined(INCLUDE_KBP)*/ 
#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_FIELD_KBP_ACCESS_H__ */
