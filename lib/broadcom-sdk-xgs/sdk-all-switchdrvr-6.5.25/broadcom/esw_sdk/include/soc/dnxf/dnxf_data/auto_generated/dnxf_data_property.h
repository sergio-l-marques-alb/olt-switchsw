/** \file dnxf_data_property.h
 * 
 * MODULE DATA CUSTOME PROPRTY - 
 * Includes all custom functions signatures
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNXF_DATA_PROPERTY_H_
/*{*/
#define _DNXF_DATA_PROPERTY_H_
/*
 * INCLUDE FILES:
 * {
 */
#include <soc/dnxf/dnxf_data/auto_generated/dnxf_data.h>
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNXF_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MODULE: PORT:
 * {
 */
/*
 * submodule general
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'general', data - 'fw_load_method'
 * The method of the firmware load.
 * 
 * \param [in] unit - Unit #
 * \param [out] fw_load_method - data already set to default and should be modifeid according to property
 * 
 * \return
 *     err - see shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_port_general_fw_load_method_read(
    int unit,
    uint32 *fw_load_method);

/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'general', data - 'fw_crc_check'
 * Enable firmware CRC check.
 * 
 * \param [in] unit - Unit #
 * \param [out] fw_crc_check - data already set to default and should be modifeid according to property
 * 
 * \return
 *     err - see shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_port_general_fw_crc_check_read(
    int unit,
    uint32 *fw_crc_check);

/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'general', data - 'fw_load_verify'
 * Enable firmware load verification.
 * 
 * \param [in] unit - Unit #
 * \param [out] fw_load_verify - data already set to default and should be modifeid according to property
 * 
 * \return
 *     err - see shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_port_general_fw_load_verify_read(
    int unit,
    uint32 *fw_load_verify);

/*
 * submodule stat
 */
/*
 * submodule static_add
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'static_add', table - 'serdes_tx_taps'
 * TX FIR parameters
 * 
 * \param [in] unit - Unit #
 * \param [in] port - Link ID.
 * \param [out] serdes_tx_taps - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_port_static_add_serdes_tx_taps_read(
    int unit,
    int port,
    dnxf_data_port_static_add_serdes_tx_taps_t *serdes_tx_taps);

/*
 * submodule lane_map
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'port', Submodule - 'lane_map', table - 'info'
 * Shows the DB for the mapping between the lanes and the serdeses.
 * 
 * \param [in] unit - Unit #
 * \param [in] lane - Use lane as a key to return its serdes mapping values
 * \param [out] info - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_port_lane_map_info_read(
    int unit,
    int lane,
    dnxf_data_port_lane_map_info_t *info);

/*
 * submodule pll
 */
/*
 * submodule synce
 */
/*
 * submodule retimer
 */
/*
 * submodule regression
 */
/*
 * }
 */

/*
 * MODULE: DEV_INIT:
 * {
 */
/*
 * submodule time
 */
/*
 * submodule shadow
 */
/*
 * submodule ha
 */
/*
 * }
 */

/*
 * MODULE: DEVICE:
 * {
 */
/*
 * submodule general
 */
/*
 * submodule access
 */
/*
 * submodule blocks
 */
/*
 * submodule interrupts
 */
/*
 * submodule custom_features
 */
/*
 * submodule properties
 */
/*
 * submodule emulation
 */
/*
 * }
 */

/*
 * MODULE: FABRIC:
 * {
 */
/*
 * submodule general
 */
/*
 * submodule pipes
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'fabric', Submodule - 'pipes', table - 'map'
 * map traffic cast X priority to fabric pipe
 * 
 * \param [in] unit - Unit #
 * \param [out] map - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_fabric_pipes_map_read(
    int unit,
    dnxf_data_fabric_pipes_map_t *map);

/*
 * submodule multicast
 */
/*
 * submodule fifos
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'fabric', Submodule - 'fifos', table - 'rx_depth_per_pipe'
 * RX FIFO depth per pipe
 * 
 * \param [in] unit - Unit #
 * \param [in] pipe_id - Pipe ID.
 * \param [out] rx_depth_per_pipe - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_fabric_fifos_rx_depth_per_pipe_read(
    int unit,
    int pipe_id,
    dnxf_data_fabric_fifos_rx_depth_per_pipe_t *rx_depth_per_pipe);

/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'fabric', Submodule - 'fifos', table - 'mid_depth_per_pipe'
 * Middle FIFO depth per pipe
 * 
 * \param [in] unit - Unit #
 * \param [in] pipe_id - Pipe ID.
 * \param [out] mid_depth_per_pipe - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_fabric_fifos_mid_depth_per_pipe_read(
    int unit,
    int pipe_id,
    dnxf_data_fabric_fifos_mid_depth_per_pipe_t *mid_depth_per_pipe);

/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'fabric', Submodule - 'fifos', table - 'tx_depth_per_pipe'
 * TX FIFO depth per pipe
 * 
 * \param [in] unit - Unit #
 * \param [in] pipe_id - Pipe ID.
 * \param [out] tx_depth_per_pipe - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_fabric_fifos_tx_depth_per_pipe_read(
    int unit,
    int pipe_id,
    dnxf_data_fabric_fifos_tx_depth_per_pipe_t *tx_depth_per_pipe);

/*
 * submodule congestion
 */
/*
 * submodule cell
 */
/*
 * submodule topology
 */
/*
 * submodule gpd
 */
/*
 * submodule reachability
 */
/*
 * submodule hw_snake
 */
/*
 * submodule system_upgrade
 */
/*
 * submodule regression
 */
/*
 * }
 */

/*
 * MODULE: INTR:
 * {
 */
/*
 * submodule general
 */
/*
 * submodule ser
 */
/*
 * }
 */

/*
 * MODULE: LINKSCAN:
 * {
 */
/*
 * submodule general
 */
/*
 * }
 */

/*
 * MODULE: MODULE_TESTING:
 * {
 */
/*
 * submodule unsupported
 */
/*
 * submodule types
 */
/*
 * submodule property_methods
 */
/**
 * \brief Function which read the SoC property and modify the data to the required value
 * Module - 'module_testing', Submodule - 'property_methods', table - 'custom'
 * test prop custom method types
 * 
 * \param [in] unit - Unit #
 * \param [in] link - link id
 * \param [in] pipe - pipe id
 * \param [out] val - data type already set to default and should be modified according to property
 * 
 * \return
 *     err - See shr_error_e
 * \remark
 *   * Auto-generated using device data autocoder
 * \see
 *   * None
 */
shr_error_e dnxf_data_property_module_testing_property_methods_custom_val_read(
    int unit,
    int link,
    int pipe,
    uint32 *val);

/*
 * }
 */

/*}*/
#endif /*_DNXF_DATA_PROPERTY_H_*/
/* *INDENT-ON* */
