/** \file dnxc/swstate/auto_generated/types/dnxc_module_ids_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2021 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNXC_MODULE_IDS_TYPES_H__
#define __DNXC_MODULE_IDS_TYPES_H__

/*
 * ENUMs
 */

/**
 * Defines module id for each dnx sw state module
 */
typedef enum {
    /**
     * Invalid module id
     */
    INVALID_MODULE_ID = -1,
    /**
     * Used by internal sw state mechanisms, reserved
     */
    SWSTATE_INTERNAL_MODULE_ID = 0,
    /**
     * algo_bfd module id
     */
    ALGO_BFD_MODULE_ID = 1,
    /**
     * algo_consistent_hashing module id
     */
    ALGO_CONSISTENT_HASHING_MODULE_ID = 2,
    /**
     * algo_ecgm module id
     */
    ALGO_ECGM_MODULE_ID = 3,
    /**
     * algo_failover module id
     */
    ALGO_FAILOVER_MODULE_ID = 4,
    /**
     * dnx_algo_field module id
     */
    DNX_ALGO_FIELD_MODULE_ID = 5,
    /**
     * dnx_algo_field_key_alloc module id
     */
    DNX_ALGO_FIELD_KEY_ALLOC_MODULE_ID = 6,
    /**
     * dnx_algo_flexe_core module id
     */
    DNX_ALGO_FLEXE_CORE_MODULE_ID = 7,
#ifdef BCM_DNX_SUPPORT
    /**
     * dnx_algo_flexe_general module id
     */
    DNX_ALGO_FLEXE_GENERAL_MODULE_ID = 8,
#endif /* BCM_DNX_SUPPORT*/ 
    /**
     * algo_l2 module id
     */
    ALGO_L2_MODULE_ID = 10,
    /**
     * algo_l3 module id
     */
    ALGO_L3_MODULE_ID = 11,
    /**
     * algo_lif_profile module id
     */
    ALGO_LIF_PROFILE_MODULE_ID = 12,
    /**
     * algo_mpls module id
     */
    ALGO_MPLS_MODULE_ID = 13,
    /**
     * algo_oam module id
     */
    ALGO_OAM_MODULE_ID = 14,
    /**
     * algo_oamp module id
     */
    ALGO_OAMP_MODULE_ID = 15,
    /**
     * dnx_algo_port module id
     */
    DNX_ALGO_PORT_MODULE_ID = 17,
    /**
     * dnx_algo_port_imb module id
     */
    DNX_ALGO_PORT_IMB_MODULE_ID = 18,
    /**
     * algo_port_pp module id
     */
    ALGO_PORT_PP_MODULE_ID = 19,
    /**
     * ppmc module id
     */
    PPMC_MODULE_ID = 20,
    /**
     * algo_ptp module id
     */
    ALGO_PTP_MODULE_ID = 21,
    /**
     * algo_qos module id
     */
    ALGO_QOS_MODULE_ID = 22,
    /**
     * algo_rx module id
     */
    ALGO_RX_MODULE_ID = 23,
    /**
     * algo_sat module id
     */
    ALGO_SAT_MODULE_ID = 24,
    /**
     * algo_stat_pp module id
     */
    ALGO_STAT_PP_MODULE_ID = 25,
    /**
     * algo_stg module id
     */
    ALGO_STG_MODULE_ID = 26,
    /**
     * algo_tdm module id
     */
    ALGO_TDM_MODULE_ID = 27,
    /**
     * algo_trunk module id
     */
    ALGO_TRUNK_MODULE_ID = 28,
    /**
     * algo_tunnel module id
     */
    ALGO_TUNNEL_MODULE_ID = 29,
    /**
     * cosq_aqm module id
     */
    COSQ_AQM_MODULE_ID = 30,
    /**
     * cosq_global_voq module id
     */
    COSQ_GLOBAL_VOQ_MODULE_ID = 31,
    /**
     * cosq_latency module id
     */
    COSQ_LATENCY_MODULE_ID = 32,
    /**
     * crps module id
     */
    CRPS_MODULE_ID = 33,
    /**
     * crps_eviction module id
     */
    CRPS_EVICTION_MODULE_ID = 34,
    /**
     * ecmp module id
     */
    ECMP_MODULE_ID = 36,
    /**
     * dnx_egq_am module id
     */
    DNX_EGQ_AM_MODULE_ID = 37,
    /**
     * example_res_mngr module id
     */
    EXAMPLE_RES_MNGR_MODULE_ID = 38,
    /**
     * example_temp_mngr module id
     */
    EXAMPLE_TEMP_MNGR_MODULE_ID = 39,
    /**
     * flow_control module id
     */
    FLOW_CONTROL_MODULE_ID = 40,
    /**
     * ingress_compensation module id
     */
    INGRESS_COMPENSATION_MODULE_ID = 41,
    /**
     * dnx_ingress_congestion module id
     */
    DNX_INGRESS_CONGESTION_MODULE_ID = 42,
    /**
     * dnx_ingress_reassembly module id
     */
    DNX_INGRESS_REASSEMBLY_MODULE_ID = 44,
    /**
     * instru module id
     */
    INSTRU_MODULE_ID = 45,
    /**
     * dnx_ipq_alloc_mngr module id
     */
    DNX_IPQ_ALLOC_MNGR_MODULE_ID = 46,
    /**
     * lif_mngr module id
     */
    LIF_MNGR_MODULE_ID = 47,
    /**
     * lif_table_mngr module id
     */
    LIF_TABLE_MNGR_MODULE_ID = 48,
    /**
     * meter module id
     */
    METER_MODULE_ID = 50,
    /**
     * dnx_mirror module id
     */
    DNX_MIRROR_MODULE_ID = 51,
    /**
     * multicast module id
     */
    MULTICAST_MODULE_ID = 52,
#ifdef BCM_DNX_SUPPORT
    /**
     * phantom_queues module id
     */
    PHANTOM_QUEUES_MODULE_ID = 53,
#endif /* BCM_DNX_SUPPORT*/ 
    /**
     * port_tpid module id
     */
    PORT_TPID_MODULE_ID = 54,
    /**
     * dnx_sch_alloc_mngr module id
     */
    DNX_SCH_ALLOC_MNGR_MODULE_ID = 55,
    /**
     * sec module id
     */
    SEC_MODULE_ID = 56,
    /**
     * vlan module id
     */
    VLAN_MODULE_ID = 57,
    /**
     * dnx_algo_field_action module id
     */
    DNX_ALGO_FIELD_ACTION_MODULE_ID = 58,
    /**
     * dnx_algo_lane_map module id
     */
    DNX_ALGO_LANE_MAP_MODULE_ID = 59,
    /**
     * algo_lif module id
     */
    ALGO_LIF_MODULE_ID = 60,
    /**
     * dnx_algo_synce module id
     */
    DNX_ALGO_SYNCE_MODULE_ID = 61,
    /**
     * dnx_cosq_ingress module id
     */
    DNX_COSQ_INGRESS_MODULE_ID = 62,
    /**
     * dbal module id
     */
    DBAL_MODULE_ID = 63,
    /**
     * dnx_bier_db module id
     */
    DNX_BIER_DB_MODULE_ID = 64,
    /**
     * dnx_egr_db module id
     */
    DNX_EGR_DB_MODULE_ID = 65,
    /**
     * dnx_fifodma module id
     */
    DNX_FIFODMA_MODULE_ID = 66,
    /**
     * dnx_ire_packet_generator module id
     */
    DNX_IRE_PACKET_GENERATOR_MODULE_ID = 67,
    /**
     * dnx_ofp_rate module id
     */
    DNX_OFP_RATE_MODULE_ID = 68,
    /**
     * dnx_rx module id
     */
    DNX_RX_MODULE_ID = 69,
    /**
     * dnx_time_sw_state module id
     */
    DNX_TIME_SW_STATE_MODULE_ID = 70,
    /**
     * dnx_visibility module id
     */
    DNX_VISIBILITY_MODULE_ID = 71,
    /**
     * dnx_dram module id
     */
    DNX_DRAM_MODULE_ID = 72,
    /**
     * dnx_ecgm module id
     */
    DNX_ECGM_MODULE_ID = 73,
    /**
     * edk module id
     */
    EDK_MODULE_ID = 74,
#if defined(INCLUDE_CTEST)
    /**
     * example module id
     */
    EXAMPLE_MODULE_ID = 75,
#endif /* defined(INCLUDE_CTEST)*/ 
    /**
     * dnx_fabric module id
     */
    DNX_FABRIC_MODULE_ID = 76,
    /**
     * dnx_field module id
     */
    DNX_FIELD_MODULE_ID = 77,
    /**
     * dnx_field_actions module id
     */
    DNX_FIELD_ACTIONS_MODULE_ID = 78,
    /**
     * dnx_field_apptype module id
     */
    DNX_FIELD_APPTYPE_MODULE_ID = 79,
    /**
     * dnx_field_context module id
     */
    DNX_FIELD_CONTEXT_MODULE_ID = 80,
    /**
     * dnx_field_group module id
     */
    DNX_FIELD_GROUP_MODULE_ID = 81,
#ifdef BCM_DNX_SUPPORT
#if defined(INCLUDE_KBP)
    /**
     * dnx_field_kbp module id
     */
    DNX_FIELD_KBP_MODULE_ID = 82,
#endif /* defined(INCLUDE_KBP)*/ 
#endif /* BCM_DNX_SUPPORT*/ 
    /**
     * dnx_field_key module id
     */
    DNX_FIELD_KEY_MODULE_ID = 83,
    /**
     * dnx_field_qualifier module id
     */
    DNX_FIELD_QUALIFIER_MODULE_ID = 84,
    /**
     * dnx_field_range module id
     */
    DNX_FIELD_RANGE_MODULE_ID = 85,
    /**
     * dnx_field_tcam_access module id
     */
    DNX_FIELD_TCAM_ACCESS_MODULE_ID = 86,
    /**
     * dnx_field_tcam_access_mapper module id
     */
    DNX_FIELD_TCAM_ACCESS_MAPPER_MODULE_ID = 87,
    /**
     * dnx_field_tcam_access_profile module id
     */
    DNX_FIELD_TCAM_ACCESS_PROFILE_MODULE_ID = 88,
    /**
     * dnx_field_tcam_bank module id
     */
    DNX_FIELD_TCAM_BANK_MODULE_ID = 89,
    /**
     * dnx_field_tcam_cache module id
     */
    DNX_FIELD_TCAM_CACHE_MODULE_ID = 90,
    /**
     * dnx_field_tcam_hit_indication module id
     */
    DNX_FIELD_TCAM_HIT_INDICATION_MODULE_ID = 91,
    /**
     * dnx_field_tcam_location module id
     */
    DNX_FIELD_TCAM_LOCATION_MODULE_ID = 92,
    /**
     * dnx_field_tcam_manager module id
     */
    DNX_FIELD_TCAM_MANAGER_MODULE_ID = 93,
    /**
     * dnx_field_tcam_prefix module id
     */
    DNX_FIELD_TCAM_PREFIX_MODULE_ID = 94,
    /**
     * flow module id
     */
    FLOW_MODULE_ID = 96,
    /**
     * flush module id
     */
    FLUSH_MODULE_ID = 97,
    /**
     * dnx_hard_reset module id
     */
    DNX_HARD_RESET_MODULE_ID = 98,
    /**
     * instru_counters module id
     */
    INSTRU_COUNTERS_MODULE_ID = 99,
    /**
     * interrupt module id
     */
    INTERRUPT_MODULE_ID = 100,
    /**
     * dnx_ipq module id
     */
    DNX_IPQ_MODULE_ID = 101,
    /**
     * dnx_iqs module id
     */
    DNX_IQS_MODULE_ID = 102,
#ifdef BCM_DNX_SUPPORT
#if defined(INCLUDE_KBP)
    /**
     * kbp module id
     */
    KBP_MODULE_ID = 103,
#endif /* defined(INCLUDE_KBP)*/ 
#endif /* BCM_DNX_SUPPORT*/ 
#if defined(INCLUDE_KBP)
    /**
     * kbp_fwd_tcam_access_mapper module id
     */
    KBP_FWD_TCAM_ACCESS_MAPPER_MODULE_ID = 104,
#endif /* defined(INCLUDE_KBP)*/ 
    /**
     * l2 module id
     */
    L2_MODULE_ID = 105,
    /**
     * mdb module id
     */
    MDB_MODULE_ID = 106,
    /**
     * mdb_em module id
     */
    MDB_EM_MODULE_ID = 108,
    /**
     * mdb_kaps module id
     */
    MDB_KAPS_MODULE_ID = 110,
    /**
     * oam module id
     */
    OAM_MODULE_ID = 111,
    /**
     * dnx_port_imb module id
     */
    DNX_PORT_IMB_MODULE_ID = 113,
    /**
     * dnx_port_nif module id
     */
    DNX_PORT_NIF_MODULE_ID = 114,
    /**
     * reflector module id
     */
    REFLECTOR_MODULE_ID = 115,
    /**
     * sat module id
     */
    SAT_MODULE_ID = 116,
    /**
     * dnx_sch_config module id
     */
    DNX_SCH_CONFIG_MODULE_ID = 117,
    /**
     * dnx_scheduler module id
     */
    DNX_SCHEDULER_MODULE_ID = 118,
    /**
     * srv6 module id
     */
    SRV6_MODULE_ID = 119,
    /**
     * stif module id
     */
    STIF_MODULE_ID = 120,
#ifdef BCM_DNX_SUPPORT
    /**
     * dnx_stk_sys module id
     */
    DNX_STK_SYS_MODULE_ID = 121,
#endif /* BCM_DNX_SUPPORT*/ 
    /**
     * switch module id
     */
    SWITCH_MODULE_ID = 122,
    /**
     * tdm module id
     */
    TDM_MODULE_ID = 123,
    /**
     * trunk module id
     */
    TRUNK_MODULE_ID = 124,
#ifdef BCM_DNX_SUPPORT
    /**
     * dnx_sw_state_defragmented_chunk module id
     */
    DNX_SW_STATE_DEFRAGMENTED_CHUNK_MODULE_ID = 127,
#endif /* BCM_DNX_SUPPORT*/ 
    /**
     * dnx_sw_state_hash_table module id
     */
    DNX_SW_STATE_HASH_TABLE_MODULE_ID = 128,
    /**
     * dnx_sw_state_sorted_list module id
     */
    DNX_SW_STATE_SORTED_LIST_MODULE_ID = 129,
    /**
     * dnxc module id
     */
    DNXC_MODULE_ID = 130,
    /**
     * adapter module id
     */
    ADAPTER_MODULE_ID = 131,
    /**
     * multithread_analyzer module id
     */
    MULTITHREAD_ANALYZER_MODULE_ID = 132,
#if defined(BCM_DNX_SUPPORT) || defined(BCM_DNXF_SUPPORT)
    /**
     * wb_engine module id
     */
    WB_ENGINE_MODULE_ID = 133,
#endif /* defined(BCM_DNX_SUPPORT) || defined(BCM_DNXF_SUPPORT)*/ 
    /**
     * dnxf module id
     */
    DNXF_MODULE_ID = 134,
    /**
     * Number of elements in enum
     */
    NOF_MODULE_ID = 135
} dnxc_module_id_e;


#endif /* __DNXC_MODULE_IDS_TYPES_H__ */
