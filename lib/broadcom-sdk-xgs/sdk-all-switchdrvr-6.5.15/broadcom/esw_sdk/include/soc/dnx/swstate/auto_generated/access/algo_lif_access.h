/** \file dnx/swstate/auto_generated/access/algo_lif_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __ALGO_LIF_ACCESS_H__
#define __ALGO_LIF_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/algo_lif_types.h>
#include <soc/dnx/dbal/auto_generated/dbal_defines_tables.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: local_outlif_info_is_init
 */
typedef int (*local_outlif_info_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: local_outlif_info_init
 */
typedef int (*local_outlif_info_init_cb)(
    int unit);

/**
 * implemented by: local_outlif_info_disable_mdb_clusters_set
 */
typedef int (*local_outlif_info_disable_mdb_clusters_set_cb)(
    int unit, uint8 disable_mdb_clusters);

/**
 * implemented by: local_outlif_info_disable_mdb_clusters_get
 */
typedef int (*local_outlif_info_disable_mdb_clusters_get_cb)(
    int unit, uint8 *disable_mdb_clusters);

/**
 * implemented by: local_outlif_info_outlif_bank_info_alloc
 */
typedef int (*local_outlif_info_outlif_bank_info_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: local_outlif_info_outlif_bank_info_assigned_set
 */
typedef int (*local_outlif_info_outlif_bank_info_assigned_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 assigned);

/**
 * implemented by: local_outlif_info_outlif_bank_info_assigned_get
 */
typedef int (*local_outlif_info_outlif_bank_info_assigned_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 *assigned);

/**
 * implemented by: local_outlif_info_outlif_bank_info_in_use_set
 */
typedef int (*local_outlif_info_outlif_bank_info_in_use_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 in_use);

/**
 * implemented by: local_outlif_info_outlif_bank_info_in_use_get
 */
typedef int (*local_outlif_info_outlif_bank_info_in_use_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 *in_use);

/**
 * implemented by: local_outlif_info_outlif_bank_info_used_logical_phase_set
 */
typedef int (*local_outlif_info_outlif_bank_info_used_logical_phase_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 used_logical_phase);

/**
 * implemented by: local_outlif_info_outlif_bank_info_used_logical_phase_get
 */
typedef int (*local_outlif_info_outlif_bank_info_used_logical_phase_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 *used_logical_phase);

/**
 * implemented by: local_outlif_info_outlif_bank_info_ll_in_use_set
 */
typedef int (*local_outlif_info_outlif_bank_info_ll_in_use_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 ll_in_use);

/**
 * implemented by: local_outlif_info_outlif_bank_info_ll_in_use_get
 */
typedef int (*local_outlif_info_outlif_bank_info_ll_in_use_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 *ll_in_use);

/**
 * implemented by: local_outlif_info_outlif_bank_info_ll_index_set
 */
typedef int (*local_outlif_info_outlif_bank_info_ll_index_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 ll_index);

/**
 * implemented by: local_outlif_info_outlif_bank_info_ll_index_get
 */
typedef int (*local_outlif_info_outlif_bank_info_ll_index_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint8 *ll_index);

/**
 * implemented by: local_outlif_info_outlif_bank_info_eedb_data_banks_set
 */
typedef int (*local_outlif_info_outlif_bank_info_eedb_data_banks_set_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint32 eedb_data_banks_idx_0, uint8 eedb_data_banks);

/**
 * implemented by: local_outlif_info_outlif_bank_info_eedb_data_banks_get
 */
typedef int (*local_outlif_info_outlif_bank_info_eedb_data_banks_get_cb)(
    int unit, uint32 outlif_bank_info_idx_0, uint32 eedb_data_banks_idx_0, uint8 *eedb_data_banks);

/**
 * implemented by: local_outlif_info_logical_phase_info_alloc
 */
typedef int (*local_outlif_info_logical_phase_info_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: local_outlif_info_logical_phase_info_physical_phase_set
 */
typedef int (*local_outlif_info_logical_phase_info_physical_phase_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 physical_phase);

/**
 * implemented by: local_outlif_info_logical_phase_info_physical_phase_get
 */
typedef int (*local_outlif_info_logical_phase_info_physical_phase_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 *physical_phase);

/**
 * implemented by: local_outlif_info_logical_phase_info_address_granularity_set
 */
typedef int (*local_outlif_info_logical_phase_info_address_granularity_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 address_granularity);

/**
 * implemented by: local_outlif_info_logical_phase_info_address_granularity_get
 */
typedef int (*local_outlif_info_logical_phase_info_address_granularity_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 *address_granularity);

/**
 * implemented by: local_outlif_info_logical_phase_info_first_bank_set
 */
typedef int (*local_outlif_info_logical_phase_info_first_bank_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 first_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_first_bank_get
 */
typedef int (*local_outlif_info_logical_phase_info_first_bank_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 *first_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_last_bank_set
 */
typedef int (*local_outlif_info_logical_phase_info_last_bank_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 last_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_last_bank_get
 */
typedef int (*local_outlif_info_logical_phase_info_last_bank_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 *last_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_first_ll_bank_set
 */
typedef int (*local_outlif_info_logical_phase_info_first_ll_bank_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 first_ll_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_first_ll_bank_get
 */
typedef int (*local_outlif_info_logical_phase_info_first_ll_bank_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 *first_ll_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_last_ll_bank_set
 */
typedef int (*local_outlif_info_logical_phase_info_last_ll_bank_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 last_ll_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_last_ll_bank_get
 */
typedef int (*local_outlif_info_logical_phase_info_last_ll_bank_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint8 *last_ll_bank);

/**
 * implemented by: local_outlif_info_logical_phase_info_dbal_valid_combinations_alloc
 */
typedef int (*local_outlif_info_logical_phase_info_dbal_valid_combinations_alloc_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_set
 */
typedef int (*local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 dbal_valid_combinations_idx_0, dbal_tables_e dbal_table);

/**
 * implemented by: local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_get
 */
typedef int (*local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 dbal_valid_combinations_idx_0, dbal_tables_e *dbal_table);

/**
 * implemented by: local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_set
 */
typedef int (*local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_set_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 dbal_valid_combinations_idx_0, uint8 dbal_result_type);

/**
 * implemented by: local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_get
 */
typedef int (*local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_get_cb)(
    int unit, uint32 logical_phase_info_idx_0, uint32 dbal_valid_combinations_idx_0, uint8 *dbal_result_type);

/**
 * implemented by: local_outlif_info_physical_phase_to_logical_phase_map_set
 */
typedef int (*local_outlif_info_physical_phase_to_logical_phase_map_set_cb)(
    int unit, uint32 physical_phase_to_logical_phase_map_idx_0, uint8 physical_phase_to_logical_phase_map);

/**
 * implemented by: local_outlif_info_physical_phase_to_logical_phase_map_get
 */
typedef int (*local_outlif_info_physical_phase_to_logical_phase_map_get_cb)(
    int unit, uint32 physical_phase_to_logical_phase_map_idx_0, uint8 *physical_phase_to_logical_phase_map);

/**
 * implemented by: local_outlif_info_physical_phase_to_logical_phase_map_alloc
 */
typedef int (*local_outlif_info_physical_phase_to_logical_phase_map_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: local_outlif_info_eedb_banks_info_bank_occupation_bitmap_alloc_bitmap
 */
typedef int (*local_outlif_info_eedb_banks_info_bank_occupation_bitmap_alloc_bitmap_cb)(
    int unit, uint32 _nof_bits_to_alloc);

/**
 * implemented by: local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_set
 */
typedef int (*local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_set_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_clear
 */
typedef int (*local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_clear_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_get
 */
typedef int (*local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

/**
 * implemented by: local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_range_count
 */
typedef int (*local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_range_count_cb)(
    int unit, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_alloc_bitmap
 */
typedef int (*local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_alloc_bitmap_cb)(
    int unit, uint32 _nof_bits_to_alloc);

/**
 * implemented by: local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_set
 */
typedef int (*local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_set_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_clear
 */
typedef int (*local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_clear_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_get
 */
typedef int (*local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_create_empty
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_create_empty_cb)(
    int unit, sw_state_ll_init_info_t *init_info);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_nof_elements
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_nof_elements_cb)(
    int unit, uint32 ll_head_index, uint32 *nof_elements);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_value
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_value_cb)(
    int unit, sw_state_ll_node_t node, uint8 *value);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_update
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_update_cb)(
    int unit, sw_state_ll_node_t node, const uint8 *value);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_next_node
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_next_node_cb)(
    int unit, uint32 ll_head_index, sw_state_ll_node_t node, sw_state_ll_node_t *next_node);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_previous_node
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_previous_node_cb)(
    int unit, uint32 ll_head_index, sw_state_ll_node_t node, sw_state_ll_node_t *prev_node);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_first
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_first_cb)(
    int unit, uint32 ll_head_index, const uint8 *value);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_last
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_last_cb)(
    int unit, uint32 ll_head_index, const uint8 *value);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_remove_node
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_remove_node_cb)(
    int unit, uint32 ll_head_index, sw_state_ll_node_t node);

/**
 * implemented by: local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_get_first
 */
typedef int (*local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_get_first_cb)(
    int unit, uint32 ll_head_index, sw_state_ll_node_t *node);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable disable_mdb_clusters
 */
typedef struct {
    local_outlif_info_disable_mdb_clusters_set_cb set;
    local_outlif_info_disable_mdb_clusters_get_cb get;
} local_outlif_info_disable_mdb_clusters_cbs;

/**
 * This structure holds the access functions for the variable assigned
 */
typedef struct {
    local_outlif_info_outlif_bank_info_assigned_set_cb set;
    local_outlif_info_outlif_bank_info_assigned_get_cb get;
} local_outlif_info_outlif_bank_info_assigned_cbs;

/**
 * This structure holds the access functions for the variable in_use
 */
typedef struct {
    local_outlif_info_outlif_bank_info_in_use_set_cb set;
    local_outlif_info_outlif_bank_info_in_use_get_cb get;
} local_outlif_info_outlif_bank_info_in_use_cbs;

/**
 * This structure holds the access functions for the variable used_logical_phase
 */
typedef struct {
    local_outlif_info_outlif_bank_info_used_logical_phase_set_cb set;
    local_outlif_info_outlif_bank_info_used_logical_phase_get_cb get;
} local_outlif_info_outlif_bank_info_used_logical_phase_cbs;

/**
 * This structure holds the access functions for the variable ll_in_use
 */
typedef struct {
    local_outlif_info_outlif_bank_info_ll_in_use_set_cb set;
    local_outlif_info_outlif_bank_info_ll_in_use_get_cb get;
} local_outlif_info_outlif_bank_info_ll_in_use_cbs;

/**
 * This structure holds the access functions for the variable ll_index
 */
typedef struct {
    local_outlif_info_outlif_bank_info_ll_index_set_cb set;
    local_outlif_info_outlif_bank_info_ll_index_get_cb get;
} local_outlif_info_outlif_bank_info_ll_index_cbs;

/**
 * This structure holds the access functions for the variable eedb_data_banks
 */
typedef struct {
    local_outlif_info_outlif_bank_info_eedb_data_banks_set_cb set;
    local_outlif_info_outlif_bank_info_eedb_data_banks_get_cb get;
} local_outlif_info_outlif_bank_info_eedb_data_banks_cbs;

/**
 * This structure holds the access functions for the variable local_outlif_bank_info_t
 */
typedef struct {
    local_outlif_info_outlif_bank_info_alloc_cb alloc;
    /**
     * Access struct for assigned
     */
    local_outlif_info_outlif_bank_info_assigned_cbs assigned;
    /**
     * Access struct for in_use
     */
    local_outlif_info_outlif_bank_info_in_use_cbs in_use;
    /**
     * Access struct for used_logical_phase
     */
    local_outlif_info_outlif_bank_info_used_logical_phase_cbs used_logical_phase;
    /**
     * Access struct for ll_in_use
     */
    local_outlif_info_outlif_bank_info_ll_in_use_cbs ll_in_use;
    /**
     * Access struct for ll_index
     */
    local_outlif_info_outlif_bank_info_ll_index_cbs ll_index;
    /**
     * Access struct for eedb_data_banks
     */
    local_outlif_info_outlif_bank_info_eedb_data_banks_cbs eedb_data_banks;
} local_outlif_info_outlif_bank_info_cbs;

/**
 * This structure holds the access functions for the variable physical_phase
 */
typedef struct {
    local_outlif_info_logical_phase_info_physical_phase_set_cb set;
    local_outlif_info_logical_phase_info_physical_phase_get_cb get;
} local_outlif_info_logical_phase_info_physical_phase_cbs;

/**
 * This structure holds the access functions for the variable address_granularity
 */
typedef struct {
    local_outlif_info_logical_phase_info_address_granularity_set_cb set;
    local_outlif_info_logical_phase_info_address_granularity_get_cb get;
} local_outlif_info_logical_phase_info_address_granularity_cbs;

/**
 * This structure holds the access functions for the variable first_bank
 */
typedef struct {
    local_outlif_info_logical_phase_info_first_bank_set_cb set;
    local_outlif_info_logical_phase_info_first_bank_get_cb get;
} local_outlif_info_logical_phase_info_first_bank_cbs;

/**
 * This structure holds the access functions for the variable last_bank
 */
typedef struct {
    local_outlif_info_logical_phase_info_last_bank_set_cb set;
    local_outlif_info_logical_phase_info_last_bank_get_cb get;
} local_outlif_info_logical_phase_info_last_bank_cbs;

/**
 * This structure holds the access functions for the variable first_ll_bank
 */
typedef struct {
    local_outlif_info_logical_phase_info_first_ll_bank_set_cb set;
    local_outlif_info_logical_phase_info_first_ll_bank_get_cb get;
} local_outlif_info_logical_phase_info_first_ll_bank_cbs;

/**
 * This structure holds the access functions for the variable last_ll_bank
 */
typedef struct {
    local_outlif_info_logical_phase_info_last_ll_bank_set_cb set;
    local_outlif_info_logical_phase_info_last_ll_bank_get_cb get;
} local_outlif_info_logical_phase_info_last_ll_bank_cbs;

/**
 * This structure holds the access functions for the variable dbal_table
 */
typedef struct {
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_set_cb set;
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_get_cb get;
} local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_cbs;

/**
 * This structure holds the access functions for the variable dbal_result_type
 */
typedef struct {
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_set_cb set;
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_get_cb get;
} local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_cbs;

/**
 * This structure holds the access functions for the variable dbal_to_phase_info_t
 */
typedef struct {
    local_outlif_info_logical_phase_info_dbal_valid_combinations_alloc_cb alloc;
    /**
     * Access struct for dbal_table
     */
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_table_cbs dbal_table;
    /**
     * Access struct for dbal_result_type
     */
    local_outlif_info_logical_phase_info_dbal_valid_combinations_dbal_result_type_cbs dbal_result_type;
} local_outlif_info_logical_phase_info_dbal_valid_combinations_cbs;

/**
 * This structure holds the access functions for the variable outlif_logical_phase_info_t
 */
typedef struct {
    local_outlif_info_logical_phase_info_alloc_cb alloc;
    /**
     * Access struct for physical_phase
     */
    local_outlif_info_logical_phase_info_physical_phase_cbs physical_phase;
    /**
     * Access struct for address_granularity
     */
    local_outlif_info_logical_phase_info_address_granularity_cbs address_granularity;
    /**
     * Access struct for first_bank
     */
    local_outlif_info_logical_phase_info_first_bank_cbs first_bank;
    /**
     * Access struct for last_bank
     */
    local_outlif_info_logical_phase_info_last_bank_cbs last_bank;
    /**
     * Access struct for first_ll_bank
     */
    local_outlif_info_logical_phase_info_first_ll_bank_cbs first_ll_bank;
    /**
     * Access struct for last_ll_bank
     */
    local_outlif_info_logical_phase_info_last_ll_bank_cbs last_ll_bank;
    /**
     * Access struct for dbal_valid_combinations
     */
    local_outlif_info_logical_phase_info_dbal_valid_combinations_cbs dbal_valid_combinations;
} local_outlif_info_logical_phase_info_cbs;

/**
 * This structure holds the access functions for the variable physical_phase_to_logical_phase_map
 */
typedef struct {
    local_outlif_info_physical_phase_to_logical_phase_map_set_cb set;
    local_outlif_info_physical_phase_to_logical_phase_map_get_cb get;
    local_outlif_info_physical_phase_to_logical_phase_map_alloc_cb alloc;
} local_outlif_info_physical_phase_to_logical_phase_map_cbs;

/**
 * This structure holds the access functions for the variable bank_occupation_bitmap
 */
typedef struct {
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_alloc_bitmap_cb alloc_bitmap;
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_set_cb bit_set;
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_clear_cb bit_clear;
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_get_cb bit_get;
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_bit_range_count_cb bit_range_count;
} local_outlif_info_eedb_banks_info_bank_occupation_bitmap_cbs;

/**
 * This structure holds the access functions for the variable outlif_prefix_occupation_bitmap
 */
typedef struct {
    local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_alloc_bitmap_cb alloc_bitmap;
    local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_set_cb bit_set;
    local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_clear_cb bit_clear;
    local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_bit_get_cb bit_get;
} local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_cbs;

/**
 * This structure holds the access functions for the variable used_data_bank_per_logical_phase
 */
typedef struct {
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_create_empty_cb create_empty;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_nof_elements_cb nof_elements;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_value_cb node_value;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_node_update_cb node_update;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_next_node_cb next_node;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_previous_node_cb previous_node;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_first_cb add_first;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_add_last_cb add_last;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_remove_node_cb remove_node;
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_get_first_cb get_first;
} local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_cbs;

/**
 * This structure holds the access functions for the variable eedb_banks_info_t
 */
typedef struct {
    /**
     * Access struct for bank_occupation_bitmap
     */
    local_outlif_info_eedb_banks_info_bank_occupation_bitmap_cbs bank_occupation_bitmap;
    /**
     * Access struct for outlif_prefix_occupation_bitmap
     */
    local_outlif_info_eedb_banks_info_outlif_prefix_occupation_bitmap_cbs outlif_prefix_occupation_bitmap;
    /**
     * Access struct for used_data_bank_per_logical_phase
     */
    local_outlif_info_eedb_banks_info_used_data_bank_per_logical_phase_cbs used_data_bank_per_logical_phase;
} local_outlif_info_eedb_banks_info_cbs;

/**
 * This structure holds the access functions for the variable local_outlif_info_t
 */
typedef struct {
    local_outlif_info_is_init_cb is_init;
    local_outlif_info_init_cb init;
    /**
     * Access struct for disable_mdb_clusters
     */
    local_outlif_info_disable_mdb_clusters_cbs disable_mdb_clusters;
    /**
     * Access struct for outlif_bank_info
     */
    local_outlif_info_outlif_bank_info_cbs outlif_bank_info;
    /**
     * Access struct for logical_phase_info
     */
    local_outlif_info_logical_phase_info_cbs logical_phase_info;
    /**
     * Access struct for physical_phase_to_logical_phase_map
     */
    local_outlif_info_physical_phase_to_logical_phase_map_cbs physical_phase_to_logical_phase_map;
    /**
     * Access struct for eedb_banks_info
     */
    local_outlif_info_eedb_banks_info_cbs eedb_banks_info;
} local_outlif_info_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern local_outlif_info_cbs local_outlif_info;

#endif /* __ALGO_LIF_ACCESS_H__ */
