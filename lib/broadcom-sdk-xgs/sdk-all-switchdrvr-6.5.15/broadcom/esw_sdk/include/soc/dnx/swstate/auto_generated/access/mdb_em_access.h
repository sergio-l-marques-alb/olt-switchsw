/** \file dnx/swstate/auto_generated/access/mdb_em_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __MDB_EM_ACCESS_H__
#define __MDB_EM_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/mdb_em_types.h>
#include <soc/dnx/dbal/dbal_structures.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_mdb.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: mdb_em_db_is_init
 */
typedef int (*mdb_em_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: mdb_em_db_init
 */
typedef int (*mdb_em_db_init_cb)(
    int unit);

/**
 * implemented by: mdb_em_db_shadow_em_db_create
 */
typedef int (*mdb_em_db_shadow_em_db_create_cb)(
    int unit, uint32 shadow_em_db_idx_0, sw_state_htbl_init_info_t *init_info, int key_size, int value_size);

/**
 * implemented by: mdb_em_db_shadow_em_db_find
 */
typedef int (*mdb_em_db_shadow_em_db_find_cb)(
    int unit, uint32 shadow_em_db_idx_0, const void *key, void *value, uint8 *found);

/**
 * implemented by: mdb_em_db_shadow_em_db_insert
 */
typedef int (*mdb_em_db_shadow_em_db_insert_cb)(
    int unit, uint32 shadow_em_db_idx_0, const void *key, const void *value, uint8 *success);

/**
 * implemented by: mdb_em_db_shadow_em_db_get_next
 */
typedef int (*mdb_em_db_shadow_em_db_get_next_cb)(
    int unit, uint32 shadow_em_db_idx_0, SW_STATE_HASH_TABLE_ITER *iter, const void *key, const void *value);

/**
 * implemented by: mdb_em_db_shadow_em_db_clear
 */
typedef int (*mdb_em_db_shadow_em_db_clear_cb)(
    int unit, uint32 shadow_em_db_idx_0);

/**
 * implemented by: mdb_em_db_shadow_em_db_delete
 */
typedef int (*mdb_em_db_shadow_em_db_delete_cb)(
    int unit, uint32 shadow_em_db_idx_0, const void *key);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_set
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_set_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_clear
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_clear_cb)(
    int unit, uint32 _bit_num);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_get
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_read
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_read_cb)(
    int unit, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_write
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_write_cb)(
    int unit, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_and
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_and_cb)(
    int unit, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_or
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_or_cb)(
    int unit, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_xor
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_xor_cb)(
    int unit, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_remove
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_remove_cb)(
    int unit, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_negate
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_negate_cb)(
    int unit, uint32 _first, uint32 _count);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_clear
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_clear_cb)(
    int unit, uint32 _first, uint32 _count);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_set
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_set_cb)(
    int unit, uint32 _first, uint32 _count);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_null
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_null_cb)(
    int unit, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_test
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_test_cb)(
    int unit, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_eq
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: mdb_em_db_is_mact_lem_app_bit_range_count
 */
typedef int (*mdb_em_db_is_mact_lem_app_bit_range_count_cb)(
    int unit, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: mdb_em_db_vmv_info_value_set
 */
typedef int (*mdb_em_db_vmv_info_value_set_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 value_idx_0, uint8 value);

/**
 * implemented by: mdb_em_db_vmv_info_value_get
 */
typedef int (*mdb_em_db_vmv_info_value_get_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 value_idx_0, uint8 *value);

/**
 * implemented by: mdb_em_db_vmv_info_size_set
 */
typedef int (*mdb_em_db_vmv_info_size_set_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 size_idx_0, uint8 size);

/**
 * implemented by: mdb_em_db_vmv_info_size_get
 */
typedef int (*mdb_em_db_vmv_info_size_get_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 size_idx_0, uint8 *size);

/**
 * implemented by: mdb_em_db_vmv_info_encoding_map_encoding_set
 */
typedef int (*mdb_em_db_vmv_info_encoding_map_encoding_set_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 encoding_map_idx_0, uint8 encoding);

/**
 * implemented by: mdb_em_db_vmv_info_encoding_map_encoding_get
 */
typedef int (*mdb_em_db_vmv_info_encoding_map_encoding_get_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 encoding_map_idx_0, uint8 *encoding);

/**
 * implemented by: mdb_em_db_vmv_info_encoding_map_size_set
 */
typedef int (*mdb_em_db_vmv_info_encoding_map_size_set_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 encoding_map_idx_0, uint8 size);

/**
 * implemented by: mdb_em_db_vmv_info_encoding_map_size_get
 */
typedef int (*mdb_em_db_vmv_info_encoding_map_size_get_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 encoding_map_idx_0, uint8 *size);

/**
 * implemented by: mdb_em_db_vmv_info_app_id_size_set
 */
typedef int (*mdb_em_db_vmv_info_app_id_size_set_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 app_id_size_idx_0, uint8 app_id_size);

/**
 * implemented by: mdb_em_db_vmv_info_app_id_size_get
 */
typedef int (*mdb_em_db_vmv_info_app_id_size_get_cb)(
    int unit, uint32 vmv_info_idx_0, uint32 app_id_size_idx_0, uint8 *app_id_size);

/**
 * implemented by: mdb_em_db_shift_vmv_mapping_set
 */
typedef int (*mdb_em_db_shift_vmv_mapping_set_cb)(
    int unit, uint32 shift_vmv_mapping_idx_0, uint32 shift_vmv_mapping_idx_1, dbal_physical_tables_e shift_vmv_mapping);

/**
 * implemented by: mdb_em_db_shift_vmv_mapping_get
 */
typedef int (*mdb_em_db_shift_vmv_mapping_get_cb)(
    int unit, uint32 shift_vmv_mapping_idx_0, uint32 shift_vmv_mapping_idx_1, dbal_physical_tables_e *shift_vmv_mapping);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable shadow_em_db
 */
typedef struct {
    mdb_em_db_shadow_em_db_create_cb create;
    mdb_em_db_shadow_em_db_find_cb find;
    mdb_em_db_shadow_em_db_insert_cb insert;
    mdb_em_db_shadow_em_db_get_next_cb get_next;
    mdb_em_db_shadow_em_db_clear_cb clear;
    mdb_em_db_shadow_em_db_delete_cb delete;
} mdb_em_db_shadow_em_db_cbs;

/**
 * This structure holds the access functions for the variable is_mact_lem_app
 */
typedef struct {
    mdb_em_db_is_mact_lem_app_bit_set_cb bit_set;
    mdb_em_db_is_mact_lem_app_bit_clear_cb bit_clear;
    mdb_em_db_is_mact_lem_app_bit_get_cb bit_get;
    mdb_em_db_is_mact_lem_app_bit_range_read_cb bit_range_read;
    mdb_em_db_is_mact_lem_app_bit_range_write_cb bit_range_write;
    mdb_em_db_is_mact_lem_app_bit_range_and_cb bit_range_and;
    mdb_em_db_is_mact_lem_app_bit_range_or_cb bit_range_or;
    mdb_em_db_is_mact_lem_app_bit_range_xor_cb bit_range_xor;
    mdb_em_db_is_mact_lem_app_bit_range_remove_cb bit_range_remove;
    mdb_em_db_is_mact_lem_app_bit_range_negate_cb bit_range_negate;
    mdb_em_db_is_mact_lem_app_bit_range_clear_cb bit_range_clear;
    mdb_em_db_is_mact_lem_app_bit_range_set_cb bit_range_set;
    mdb_em_db_is_mact_lem_app_bit_range_null_cb bit_range_null;
    mdb_em_db_is_mact_lem_app_bit_range_test_cb bit_range_test;
    mdb_em_db_is_mact_lem_app_bit_range_eq_cb bit_range_eq;
    mdb_em_db_is_mact_lem_app_bit_range_count_cb bit_range_count;
} mdb_em_db_is_mact_lem_app_cbs;

/**
 * This structure holds the access functions for the variable value
 */
typedef struct {
    mdb_em_db_vmv_info_value_set_cb set;
    mdb_em_db_vmv_info_value_get_cb get;
} mdb_em_db_vmv_info_value_cbs;

/**
 * This structure holds the access functions for the variable size
 */
typedef struct {
    mdb_em_db_vmv_info_size_set_cb set;
    mdb_em_db_vmv_info_size_get_cb get;
} mdb_em_db_vmv_info_size_cbs;

/**
 * This structure holds the access functions for the variable encoding
 */
typedef struct {
    mdb_em_db_vmv_info_encoding_map_encoding_set_cb set;
    mdb_em_db_vmv_info_encoding_map_encoding_get_cb get;
} mdb_em_db_vmv_info_encoding_map_encoding_cbs;

/**
 * This structure holds the access functions for the variable size
 */
typedef struct {
    mdb_em_db_vmv_info_encoding_map_size_set_cb set;
    mdb_em_db_vmv_info_encoding_map_size_get_cb get;
} mdb_em_db_vmv_info_encoding_map_size_cbs;

/**
 * This structure holds the access functions for the variable vmv_value_parameters_t
 */
typedef struct {
    /**
     * Access struct for encoding
     */
    mdb_em_db_vmv_info_encoding_map_encoding_cbs encoding;
    /**
     * Access struct for size
     */
    mdb_em_db_vmv_info_encoding_map_size_cbs size;
} mdb_em_db_vmv_info_encoding_map_cbs;

/**
 * This structure holds the access functions for the variable app_id_size
 */
typedef struct {
    mdb_em_db_vmv_info_app_id_size_set_cb set;
    mdb_em_db_vmv_info_app_id_size_get_cb get;
} mdb_em_db_vmv_info_app_id_size_cbs;

/**
 * This structure holds the access functions for the variable vmv_info_t
 */
typedef struct {
    /**
     * Access struct for value
     */
    mdb_em_db_vmv_info_value_cbs value;
    /**
     * Access struct for size
     */
    mdb_em_db_vmv_info_size_cbs size;
    /**
     * Access struct for encoding_map
     */
    mdb_em_db_vmv_info_encoding_map_cbs encoding_map;
    /**
     * Access struct for app_id_size
     */
    mdb_em_db_vmv_info_app_id_size_cbs app_id_size;
} mdb_em_db_vmv_info_cbs;

/**
 * This structure holds the access functions for the variable shift_vmv_mapping
 */
typedef struct {
    mdb_em_db_shift_vmv_mapping_set_cb set;
    mdb_em_db_shift_vmv_mapping_get_cb get;
} mdb_em_db_shift_vmv_mapping_cbs;

/**
 * This structure holds the access functions for the variable mdb_em_sw_state_t
 */
typedef struct {
    mdb_em_db_is_init_cb is_init;
    mdb_em_db_init_cb init;
    /**
     * Access struct for shadow_em_db
     */
    mdb_em_db_shadow_em_db_cbs shadow_em_db;
    /**
     * Access struct for is_mact_lem_app
     */
    mdb_em_db_is_mact_lem_app_cbs is_mact_lem_app;
    /**
     * Access struct for vmv_info
     */
    mdb_em_db_vmv_info_cbs vmv_info;
    /**
     * Access struct for shift_vmv_mapping
     */
    mdb_em_db_shift_vmv_mapping_cbs shift_vmv_mapping;
} mdb_em_db_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type mdb_em_vmv_shift_blocks
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
mdb_em_vmv_shift_blocks_get_name(mdb_em_vmv_shift_blocks value);


/*
 * Global Variables
 */

extern mdb_em_db_cbs mdb_em_db;

#endif /* __MDB_EM_ACCESS_H__ */
