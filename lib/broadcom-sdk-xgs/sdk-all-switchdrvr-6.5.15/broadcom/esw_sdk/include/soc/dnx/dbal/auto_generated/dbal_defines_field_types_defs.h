/** \file dbal_defines_field_types_defs.h
 * Logical DB enums \n 
 * DO NOT EDIT THIS FILE!\n 
 * This file is auto-generated.\n 
 * Edits to this file will be lost when it is regenerated.\n 
 * \n 
 */
/*
 * $Id: $
 $Copyright: (c) 2018 Broadcom.
 Broadcom Proprietary and Confidential. All rights reserved.$
 * 
 */
#ifndef DBAL_DEFINES_FIELD_TYPES_DEFS_H_INCLUDED
/*
 * {
 */
#define DBAL_DEFINES_FIELD_TYPES_DEFS_H_INCLUDED

/**
 * \brief The BFD endpoint is BFD ECHO\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_BFD_ECHO (32)
/**
 * \brief The BFD endpoint is IPv6\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_BFD_IS_IPV6 (4)
/**
 * \brief Period is not remote_detect_mult * local_min_rx\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_EXPLICIT_DETECTION_TIME (16)
/**
 * \brief The BFD endpoint is accelerated\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_IS_ACCELERATED (1)
/**
 * \brief Endpoint local discriminator is zero\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_LOCAL_DISCR_IS_NULL (128)
/**
 * \brief The BFD endpoint is for multihop\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_MULTI_HOP_BFD (8)
/**
 * \brief Enable per opcode counting for this MEP\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_PER_OPCODE_STATISTICS (1024)
/**
 * \brief Enable RX statistics counting for this MEP\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_RX_STATISTICS (512)
/**
 * \brief Enable TX statistics counting for this MEP\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_TX_STATISTICS (256)
/**
 * \brief My-BFD-DIP-destination used, DIP profile irrelevant\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_USE_MY_BFD_DIP_DESTINATION (64)
/**
 * \brief The used profile is in OAMB\n 
 */
#define DBAL_DEFINE_BFD_ENDPOINT_SW_STATE_FLAGS_USE_OAMB_PROFILE (2)
/**
 * \brief Current Next Protocol BFD_MULTI_HOP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_BFD_MULTI_HOP (4784)
/**
 * \brief Current Next Protocol BFD_SINGLE_HOP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_BFD_SINGLE_HOP (3784)
/**
 * \brief Current Next Protocol ERSPAN_OVER_GRE\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_ERSPAN_OVER_GRE (35006)
/**
 * \brief Current Next Protocol ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_ETHERNET (3)
/**
 * \brief Current Next Protocol FCOE_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_FCOE_OVER_ETHERNET (35078)
/**
 * \brief Current Next Protocol GENEVE_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_GENEVE_OVER_UDP (6081)
/**
 * \brief Current Next Protocol GRE_OVER_IP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_GRE_OVER_IP (47)
/**
 * \brief Current Next Protocol GRE_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_GRE_OVER_UDP (4754)
/**
 * \brief Current Next Protocol IPV4\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV4 (4)
/**
 * \brief Current Next Protocol IPV4_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV4_OVER_ETHERNET (2048)
/**
 * \brief Current Next Protocol IPV4_OVER_PPPOE\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV4_OVER_PPPOE (33)
/**
 * \brief Current Next Protocol IPV4_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV4_OVER_UDP (0x6605)
/**
 * \brief Current Next Protocol IPV6\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV6 (2)
/**
 * \brief Current Next Protocol IPV6_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV6_OVER_ETHERNET (34525)
/**
 * \brief Current Next Protocol IPV6_OVER_IP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV6_OVER_IP (41)
/**
 * \brief Current Next Protocol IPV6_OVER_PPPOE\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV6_OVER_PPPOE (87)
/**
 * \brief Current Next Protocol IPV6_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_IPV6_OVER_UDP (0x6615)
/**
 * \brief Current Next Protocol LT2PV3_OVER_IP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_LT2PV3_OVER_IP (115)
/**
 * \brief Current Next Protocol LT2PV3_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_LT2PV3_OVER_UDP (1701)
/**
 * \brief Current Next Protocol MPLS\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS (1)
/**
 * \brief Current Next Protocol MPLS BOS\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_BOS (0)
/**
 * \brief Current Next Protocol MPLS_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_OVER_ETHERNET (34887)
/**
 * \brief Current Next Protocol MPLS_OVER_IP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_OVER_IP (137)
/**
 * \brief Current Next Protocol MPLS_OVER_PPPOE\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_OVER_PPPOE (641)
/**
 * \brief Current Next Protocol MPLS_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_OVER_UDP (0x6635)
/**
 * \brief Current Next Protocol MPLS_OVER_VXLAN\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_OVER_VXLAN (5)
/**
 * \brief Current Next Protocol MPLS_UA_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_UA_OVER_ETHERNET (34888)
/**
 * \brief Current Next Protocol MPLS_UA_OVER_PPPOE\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_MPLS_UA_OVER_PPPOE (643)
/**
 * \brief Current Next Protocol PPPOE_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_PPPOE_OVER_ETHERNET (34916)
/**
 * \brief Current Next Protocol PTP_EVENT\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_PTP_EVENT (319)
/**
 * \brief Current Next Protocol PTP_GENERAL\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_PTP_GENERAL (320)
/**
 * \brief Current Next Protocol PTP_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_PTP_OVER_ETHERNET (35063)
/**
 * \brief Current Next Protocol SRV6_OVER_IPV6\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_SRV6_OVER_IPV6 (43)
/**
 * \brief Current Next Protocol TCP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_TCP (6)
/**
 * \brief Current Next Protocol UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_UDP (17)
/**
 * \brief Current Next Protocol VXLAN_GPE_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_VXLAN_GPE_OVER_UDP (4790)
/**
 * \brief Current Next Protocol VXLAN_OVER_UDP\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_VXLAN_OVER_UDP (4789)
/**
 * \brief Current Next Protocol Y_1731_OVER_ETHERNET\n 
 */
#define DBAL_DEFINE_CURRENT_NEXT_PROTOCOL_Y_1731_OVER_ETHERNET (35074)
/**
 * \brief 2 MSBs for etps_type\n 
 */
#define DBAL_DEFINE_DATA_ENTRY_RESERVED_ETPS_TYPE_MSBS (3)
/**
 * \brief 1588(PTP) Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_1588 (35063)
/**
 * \brief FCOE Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_FCOE (35078)
/**
 * \brief Ipv4 Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_IPV4 (2048)
/**
 * \brief IPv6 Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_IPV6 (34525)
/**
 * \brief MPLS Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_MPLS (34887)
/**
 * \brief PPP Ethertype\n 
 */
#define DBAL_DEFINE_ETHERTYPE_PPP (34916)
/**
 * \brief Default value\n 
 */
#define DBAL_DEFINE_FIELD_DEFINE_EXAMPLE_DNX_DATA_EXAMPLE (dnx_data_module_testing.dbal.field_define_example_get(unit))
/**
 * \brief Invalid value\n 
 */
#define DBAL_DEFINE_FIELD_DEFINE_EXAMPLE_INVALID (65535)
/**
 * \brief First Key for KBP\n 
 */
#define DBAL_DEFINE_FWD12_KBR_ID_KBP_0 (4)
/**
 * \brief Second Key for KBP\n 
 */
#define DBAL_DEFINE_FWD12_KBR_ID_KBP_1 (5)
/**
 * \brief Third Key for KBP\n 
 */
#define DBAL_DEFINE_FWD12_KBR_ID_KBP_2 (16)
/**
 * \brief Fourth Key for KBP\n 
 */
#define DBAL_DEFINE_FWD12_KBR_ID_KBP_3 (17)
/**
 * \brief SRv6 Extension\n 
 */
#define DBAL_DEFINE_IPV6_EXTENSION_HEADER_TYPE_SRV6 (43)
/**
 * \brief Forwarding result\n 
 */
#define DBAL_DEFINE_KBP_RESULT_LOCATION_FWD (0)
/**
 * \brief RPF result\n 
 */
#define DBAL_DEFINE_KBP_RESULT_LOCATION_RPF (1)
/**
 * \brief Learn format index for MACT IVL\n 
 */
#define DBAL_DEFINE_MACT_APP_DB_IDX_IVL (1)
/**
 * \brief Learn format index for MACT SVL\n 
 */
#define DBAL_DEFINE_MACT_APP_DB_IDX_SVL (0)
/**
 * \brief Default FWD Action\n 
 */
#define DBAL_DEFINE_MC_ID_DROP (524287)
/**
 * \brief Next protocol after IP is ICMP\n 
 */
#define DBAL_DEFINE_NEXT_PROTOCOL_ICMP (1)
/**
 * \brief Next protocol after IP is ICMPv6\n 
 */
#define DBAL_DEFINE_NEXT_PROTOCOL_ICMPV6 (58)
/**
 * \brief Next protocol after IP is IGMP\n 
 */
#define DBAL_DEFINE_NEXT_PROTOCOL_IGMP (2)
/**
 * \brief PRD TDM Priority. (usually means priority 3 + TDM indication\n 
 */
#define DBAL_DEFINE_NIF_PRD_PRIORITY_TDM (4)
/**
 * \brief The MEP is ACCELERATED\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_ACCELERATED (8)
/**
 * \brief The MEP is defined as Down Mep Egress Injection\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_DOWN_EGRESS_INJECTION (256)
/**
 * \brief The MEP is MIP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_INTERMEDIATE (2)
/**
 * \brief The MEP is defined as PCP based LM counting\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_PCP_BASED (16)
/**
 * \brief Enable per opcode counting for this MEP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_PER_OPCODE_STATISTICS (128)
/**
 * \brief The MEP is REMOTE MEP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_REMOTE (4)
/**
 * \brief Enable RX statistics counting for this MEP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_RX_STATISTICS (64)
/**
 * \brief Enable TX statistics counting for this MEP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_TX_STATISTICS (32)
/**
 * \brief The MEP is defined as UP-MEP\n 
 */
#define DBAL_DEFINE_OAM_ENDPOINT_SW_STATE_FLAGS_UP_FACING (1)
/**
 * \brief Ethernet One Delay Measurment Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_1DM (45)
/**
 * \brief Ethernet Alarm Indication Signal\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_AIS (33)
/**
 * \brief Biderectional Fault Detection(BFD) or OAM Data Packets\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_BFD_OR_OAM_DATA (0)
/**
 * \brief Ethernet Continuity Check Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_CCM (1)
/**
 * \brief Ethernet Delay Measurment Message \n 
 */
#define DBAL_DEFINE_OAM_OPCODE_DMM (47)
/**
 * \brief Ethernet Delay Measurment Responce\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_DMR (46)
/**
 * \brief Ethernet Experimental OAM request PDU\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_EXM (49)
/**
 * \brief Ethernet Experimental OAM reply PDU\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_EXR (48)
/**
 * \brief Ethernet Loopback Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LBM (3)
/**
 * \brief Ethernet Loopback Responce\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LBR (2)
/**
 * \brief Ethernet Locked Signal\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LCK (35)
/**
 * \brief Ethernet Linear Automatic Protection Switching\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LINEAR_APS (39)
/**
 * \brief Ethernet Loss Measurment Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LMM (43)
/**
 * \brief Ethernet Loss Measurment Responce\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LMR (42)
/**
 * \brief Ethernet Link Trace Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LTM (5)
/**
 * \brief Ethernet Link Trace Responce\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_LTR (4)
/**
 * \brief Ethernet Syntetic Loss Measurment Message\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_SLM (55)
/**
 * \brief Ethernet Syntetic Loss Measurment Responce\n 
 */
#define DBAL_DEFINE_OAM_OPCODE_SLR (54)
/**
 * \brief Value used to indicate 2 character short MA format\n 
 */
#define DBAL_DEFINE_SHORT_ICC_INDEX_SHORT_FORMAT (15)
/**
 * \brief default tpid for 802.1BR:0x893F\n 
 */
#define DBAL_DEFINE_TPID_DOT1BR (35135)
/**
 * \brief mac in mac tpid :0x88E7\n 
 */
#define DBAL_DEFINE_TPID_MIM (35047)
/**
 * \brief Next protocol after UDP is BFD multi hop\n 
 */
#define DBAL_DEFINE_UDP_PORT_BFD_MULTI_HOP (4784)
/**
 * \brief Next protocol after UDP is BFD single hop\n 
 */
#define DBAL_DEFINE_UDP_PORT_BFD_SINGLE_HOP (3784)
/**
 * \brief Next protocol after UDP is ETH\n 
 */
#define DBAL_DEFINE_UDP_PORT_ETH (0)
/**
 * \brief Next protocol after UDP is GENEVE\n 
 */
#define DBAL_DEFINE_UDP_PORT_GENEVE (6081)
/**
 * \brief Next protocol after UDP is IPv4\n 
 */
#define DBAL_DEFINE_UDP_PORT_IPV4 (26117)
/**
 * \brief Next protocol after UDP is IPv6\n 
 */
#define DBAL_DEFINE_UDP_PORT_IPV6 (26133)
/**
 * \brief Next protocol after UDP is L2TPv3\n 
 */
#define DBAL_DEFINE_UDP_PORT_L2TP (1701)
/**
 * \brief Next protocol after UDP is MICROBFD\n 
 */
#define DBAL_DEFINE_UDP_PORT_MICROBFD (6784)
/**
 * \brief Next protocol after UDP is MPLS\n 
 */
#define DBAL_DEFINE_UDP_PORT_MPLS (6635)
/**
 * \brief Next protocol after UDP is PTP Event Msg\n 
 */
#define DBAL_DEFINE_UDP_PORT_PTP_EVENT_MSG (319)
/**
 * \brief Next protocol after UDP is PTP General Msg\n 
 */
#define DBAL_DEFINE_UDP_PORT_PTP_GENERAL_MSG (320)
/**
 * \brief Next protocol after UDP is VXLAN\n 
 */
#define DBAL_DEFINE_UDP_PORT_VXLAN (4789)
/**
 * \brief Next protocol after UDP is VXLAN GPE\n 
 */
#define DBAL_DEFINE_UDP_PORT_VXLAN_GPE (4790)
/**
 * \brief GACH channel type for Ipv4\n 
 */
#define DBAL_DEFINE_VCCV_CHANNEL_TYPE_IPV4 (33)
/**
 * \brief GACH channel type for Ipv6\n 
 */
#define DBAL_DEFINE_VCCV_CHANNEL_TYPE_IPV6 (87)
#define DBAL_NUM_OF_FIELD_INSTANCES (20)

/**
 * \brief enum for logical tables\n 
 */
typedef enum
{
    DBAL_FIELD_TYPE_DEF_EMPTY,
    /** An action to perform  */
    DBAL_FIELD_TYPE_DEF_ACCEPTABLE_FRAME_TYPE_ACTION,
    DBAL_FIELD_TYPE_DEF_ACCEPTABLE_FRAME_TYPE_FILTER_ACTION,
    DBAL_FIELD_TYPE_DEF_ACCEPTABLE_FRAME_TYPE_PROFILE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_ACCESS_INDEX,
    /** Accumulated far endpoint packet losses  */
    DBAL_FIELD_TYPE_DEF_ACC_LM_FAR,
    /** Accumulated near endpoint packet losses  */
    DBAL_FIELD_TYPE_DEF_ACC_LM_NEAR,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_ACC_MP_PROFILE,
    /** Possible action of ACE ACR  */
    DBAL_FIELD_TYPE_DEF_ACE_ACTION,
    /** List of actions for ACE  */
    DBAL_FIELD_TYPE_DEF_ACE_ACTIONS_CONTAINER,
    /** ACE Value  */
    DBAL_FIELD_TYPE_DEF_ACE_VALUE,
    /** Generic Assotiated channel header(G-ACH)  */
    DBAL_FIELD_TYPE_DEF_ACH_HEADER,
    /** Select one of 4 ACH  */
    DBAL_FIELD_TYPE_DEF_ACH_SEL,
    /** ACH Version  */
    DBAL_FIELD_TYPE_DEF_ACH_VER,
    DBAL_FIELD_TYPE_DEF_ACL_CONTEXT,
    DBAL_FIELD_TYPE_DEF_ACTION_PROFILE,
    /** Action Profile index  */
    DBAL_FIELD_TYPE_DEF_ACTION_PROFILE_IDX,
    /** Is bit active  */
    DBAL_FIELD_TYPE_DEF_ACTIVE,
    /** 
     * Specific Information for Control Word
     * Additional Header
     */
    DBAL_FIELD_TYPE_DEF_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    DBAL_FIELD_TYPE_DEF_ADMT_PROFILE,
    /** 
     * Profile describing which events are raised
     * in accordance to the age state
     */
    DBAL_FIELD_TYPE_DEF_AGE_PROFILE,
    DBAL_FIELD_TYPE_DEF_AGE_SCAN_STATUS,
    /** 
     * Number of seconds between each run of the
     * age machine.
     */
    DBAL_FIELD_TYPE_DEF_AGING_CYCLE,
    DBAL_FIELD_TYPE_DEF_ALL_ONES,
    /** ALU action select  */
    DBAL_FIELD_TYPE_DEF_ALU_ACT,
    /** where to store OP3 output  */
    DBAL_FIELD_TYPE_DEF_ALU_DST,
    /** APP_DB_ID  */
    DBAL_FIELD_TYPE_DEF_APP_DB_ID,
    /** 
     * ARP_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_ARP_TRAP_HANDLING_PROFILE,
    /** 
     * Array of words field type
     * 
     */
    DBAL_FIELD_TYPE_DEF_ARRAY32,
    /** 
     * Array of bytes field type
     * 
     */
    DBAL_FIELD_TYPE_DEF_ARRAY8,
    DBAL_FIELD_TYPE_DEF_BCM_API_VLAN_EDIT_PRIO_ACTION,
    DBAL_FIELD_TYPE_DEF_BCM_API_VLAN_EDIT_TPID_ACTION,
    DBAL_FIELD_TYPE_DEF_BCM_API_VLAN_EDIT_VID_ACTION,
    /** Types of BFD MEP tunneling  */
    DBAL_FIELD_TYPE_DEF_BCM_BFD_TUNNEL_TYPE,
    /** 
     * Spanning Tree group ID used in BCM API,
     * encoded with Topology ID
     */
    DBAL_FIELD_TYPE_DEF_BCM_STG_ID,
    /** 
     * States of Spanning Tree Group from
     * application
     */
    DBAL_FIELD_TYPE_DEF_BCM_STG_STP_STATE,
    /** Index of entry in BFD diag profile table.  */
    DBAL_FIELD_TYPE_DEF_BFD_DIAG_PROFILE,
    /** Index of Destination IP entry for BFD endpoints  */
    DBAL_FIELD_TYPE_DEF_BFD_DIP_PROFILE,
    /** Endpoint ID equivalent to bcm_bfd_endpoint_t  */
    DBAL_FIELD_TYPE_DEF_BFD_ENDPOINT_ID,
    /** BFD endpoint sw state flags  */
    DBAL_FIELD_TYPE_DEF_BFD_ENDPOINT_SW_STATE_FLAGS,
    /** Index of entry in BFD flags profile table  */
    DBAL_FIELD_TYPE_DEF_BFD_FLAGS_PROFILE,
    /** Part of key for OAMA or OAMB table for BFD endpoints  */
    DBAL_FIELD_TYPE_DEF_BFD_MEP_PROFILE,
    /** Pointer to a source IP address  */
    DBAL_FIELD_TYPE_DEF_BFD_SRC_IP_PROFILE,
    /** BFD session state  */
    DBAL_FIELD_TYPE_DEF_BFD_STATE,
    /** Rate of BFD packet transmission  */
    DBAL_FIELD_TYPE_DEF_BFD_TX_RATE_PROFILE,
    /** The upper limit for your-discriminator field in incoming BFD packets  */
    DBAL_FIELD_TYPE_DEF_BFD_YOUR_DISCR_RANGE_MAX,
    /** The lower limit for your-discriminator field in incoming BFD packets  */
    DBAL_FIELD_TYPE_DEF_BFD_YOUR_DISCR_RANGE_MIN,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_BFIR_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_BIER_BIT_STRING_LENGTH,
    /** BIER FODO identifier  */
    DBAL_FIELD_TYPE_DEF_BIER_FORWARDING_DOMAIN,
    /** BIER MPLS identifier  */
    DBAL_FIELD_TYPE_DEF_BIER_MPLS,
    /** BIER next protocol identifier  */
    DBAL_FIELD_TYPE_DEF_BIER_NEXT_PROTOCOL,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_BIER_SI,
    DBAL_FIELD_TYPE_DEF_BIER_STR_OFFSET,
    DBAL_FIELD_TYPE_DEF_BIER_STR_SIZE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_BIER_SUB_DOMAIN,
    /** Bitmap field type  */
    DBAL_FIELD_TYPE_DEF_BITMAP,
    /** Boolean field type  */
    DBAL_FIELD_TYPE_DEF_BOOL,
    /** 
     * Boolean field type with 'bitwise not'
     * encoding, means HW_value=~SW_value
     */
    DBAL_FIELD_TYPE_DEF_BOOL_INV,
    /** Bottom of Stack  */
    DBAL_FIELD_TYPE_DEF_BOS,
    /** number of bytes to concatenate from path 2 if MERGE is sel for CONCATENATE  */
    DBAL_FIELD_TYPE_DEF_BUFF2_SIZE,
    /** Where to take from the number of valid bytes written to output buffer  */
    DBAL_FIELD_TYPE_DEF_BUFF_SIZE_SRC,
    /** Indicates under which condition to allow MERGE output  */
    DBAL_FIELD_TYPE_DEF_BUFF_WR,
    /** Conditions to write EOP to buffer  */
    DBAL_FIELD_TYPE_DEF_BUF_EOP,
    DBAL_FIELD_TYPE_DEF_BYTES_TO_REMOVE,
    /** Identifier of calendar pair  */
    DBAL_FIELD_TYPE_DEF_CALENDAR_ID,
    /** Index to look up Tx rate in appropriate register.  Configured statistically via profile.  */
    DBAL_FIELD_TYPE_DEF_CCM_INTERVAL,
    /** 
     * CDU (400G unit) instance id.
     * 
     */
    DBAL_FIELD_TYPE_DEF_CDU_ID,
    /** Interface channel id  */
    DBAL_FIELD_TYPE_DEF_CHANNEL_ID,
    /** Channel type in PWE control word  */
    DBAL_FIELD_TYPE_DEF_CHANNEL_TYPE,
    /** CL modes  */
    DBAL_FIELD_TYPE_DEF_CL_ENHANCED_MODE,
    /** CL modes  */
    DBAL_FIELD_TYPE_DEF_CL_MODE,
    /** when CMP1/CMP2 should assert its output bit  */
    DBAL_FIELD_TYPE_DEF_CMP_ACT,
    DBAL_FIELD_TYPE_DEF_CMP_KEY_DECODED,
    /** 
     * Command that will be selected based on the
     * device
     */
    DBAL_FIELD_TYPE_DEF_COMMAND,
    DBAL_FIELD_TYPE_DEF_CONGESTION_INFO,
    /** 
     * NIF General Direction indication. For
     * configuratins where it is useful to configure RX side
     * separately from the TX side
     */
    DBAL_FIELD_TYPE_DEF_CONNECTION_DIRECTION,
    /** Context hash function values  */
    DBAL_FIELD_TYPE_DEF_CONTEXT_HASH_FUNCTION,
    DBAL_FIELD_TYPE_DEF_CONTEXT_KEY_GEN_VAR,
    /** Context MPLS Label ID  */
    DBAL_FIELD_TYPE_DEF_CONTEXT_LABEL,
    /** 
     * The context that is used.
     * 
     */
    DBAL_FIELD_TYPE_DEF_CONTEXT_PROFILE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_COOKIE,
    /** 
     * Device Core-ID, used in cases where it is
     * part of result or explicit field in key
     */
    DBAL_FIELD_TYPE_DEF_CORE,
    /** 
     * Device Core-ID, Special field can be used
     * only for Key, used for access according to core mode
     * 
     */
    DBAL_FIELD_TYPE_DEF_CORE_ID,
    /** CL Priority list definition  */
    DBAL_FIELD_TYPE_DEF_COS_CL,
    /** HR Priority list definition  */
    DBAL_FIELD_TYPE_DEF_COS_HR,
    /** COS Profile  */
    DBAL_FIELD_TYPE_DEF_COS_PROFILE,
    /** OAM LM counter base  */
    DBAL_FIELD_TYPE_DEF_COUNTER_BASE,
    /** OAM LM counter base  */
    DBAL_FIELD_TYPE_DEF_COUNTER_IF,
    /** The HW device that is supposed to access the counter  */
    DBAL_FIELD_TYPE_DEF_COUNTER_INTERFACE,
    /** OAM extension processing enabled (at the egress)  */
    DBAL_FIELD_TYPE_DEF_COUNTER_PTR_VALID,
    /** 16-bit CRC value to compare to automatic OAMP calculation for received packets  */
    DBAL_FIELD_TYPE_DEF_CRC16,
    /** 
     * counter format. what it count, the frmat and
     * the arithmetic operation it does
     */
    DBAL_FIELD_TYPE_DEF_CRPS_ENGINE_COUNTER_FORMAT,
    /** crps engine id  */
    DBAL_FIELD_TYPE_DEF_CRPS_ENGINE_ID,
    /** 
     * counter overflow mode: reset to 0, reset to
     * 1, etc
     */
    DBAL_FIELD_TYPE_DEF_CRPS_ENGINE_OVF_RESET_VALUE,
    /** 
     * scan mode: sequential,algorithmic etc
     * 
     */
    DBAL_FIELD_TYPE_DEF_CRPS_ENGINE_SCAN_MODE,
    /** 
     * etpp meta data has configurable format, this
     * enum holds the types that build it
     */
    DBAL_FIELD_TYPE_DEF_CRPS_ETPP_COUNTER_DATA_TYPE,
    /** 
     * Determines CS properties
     * 
     */
    DBAL_FIELD_TYPE_DEF_CS_IN_LIF_FWD_PROFILE,
    /** 
     * Determines CS properties
     * 
     */
    DBAL_FIELD_TYPE_DEF_CS_IN_LIF_VTT_PROFILE,
    DBAL_FIELD_TYPE_DEF_CTX_ADDITIONAL_HEADER_PROFILE,
    /** 
     * copy uniq data for multicast data
     * 
     */
    DBAL_FIELD_TYPE_DEF_CUD,
    /** Current Next Protocol  */
    DBAL_FIELD_TYPE_DEF_CURRENT_NEXT_PROTOCOL,
    /** 
     * Current Next Protocol Namespace
     * 
     */
    DBAL_FIELD_TYPE_DEF_CURRENT_NEXT_PROTOCOL_NAME_SPACE,
    DBAL_FIELD_TYPE_DEF_CURRENT_PROTOCOL_TYPE,
    /** 
     * Specific Information for Control Word
     * Additional Header
     */
    DBAL_FIELD_TYPE_DEF_CW_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Reserved value for EEDB_DATA_ENTRY. 2 MSBs
     * for etps_type.
     * VSD stack is built at egress according to ETPS type.
     * Must ensure that VSD enable is FALSE for EEDB_DATA_ENTRY etps type
     * (0x11XXXX = from 48 to 63)
     * 
     */
    DBAL_FIELD_TYPE_DEF_DATA_ENTRY_RESERVED,
    /** 
     * Action profile DA not found index. Taken
     * from the port's info.
     */
    DBAL_FIELD_TYPE_DEF_DA_NOT_FOUND_ACTION_PROFILE,
    /** 
     * DA not found destination profile from LIF
     * 
     */
    DBAL_FIELD_TYPE_DEF_DA_NOT_FOUND_DESTINATION_PROFILE,
    /** Destination address: 1-multicase 0-unicast  */
    DBAL_FIELD_TYPE_DEF_DA_UC_MC_TYPE,
    /** 
     * Print this field dump the table name
     * 
     */
    DBAL_FIELD_TYPE_DEF_DBAL_TABLE,
    /** Index for tables are double in size (2 calndars). The second half is for set 'B' calendars/shapers.  */
    DBAL_FIELD_TYPE_DEF_DCALENDAR,
    /** Debug mode  */
    DBAL_FIELD_TYPE_DEF_DEBUG_MODE,
    /** 
     * Default AC profile, used in case of no match
     * of AC
     */
    DBAL_FIELD_TYPE_DEF_DEFAULT_AC_PROF,
    /** DEI Field  */
    DBAL_FIELD_TYPE_DEF_DEI,
    /** Delay values for DMM/DMR packets  */
    DBAL_FIELD_TYPE_DEF_DELAY_DM,
    /** 
     * Forwarding physical destination FEC should
     * be last
     */
    DBAL_FIELD_TYPE_DEF_DESTINATION,
    /** 
     * DA distribution type. MC, BC or UC
     * 
     */
    DBAL_FIELD_TYPE_DEF_DESTINATION_DISTRIBUTION_TYPE,
    /** how the HW encode each destination type  */
    DBAL_FIELD_TYPE_DEF_DESTINATION_ENCODING,
    /** Detect multiplier.  Fail time=DM*Expected Tx Rate  */
    DBAL_FIELD_TYPE_DEF_DETECT_MULT,
    /** 
     * DHCP_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_DHCP_TRAP_HANDLING_PROFILE,
    /** 
     * DIP-IDX-Type(1):0x0: Intermediate-Result:
     * DIP hit is insufficient for IPv6 tunnel-termination (SIP is
     * mandatory)
     */
    DBAL_FIELD_TYPE_DEF_DIP_IDX_INTERMIDIATE,
    /** types of direct payloads sizes  */
    DBAL_FIELD_TYPE_DEF_DIRECT_PAYLOAD_SIZES,
    /** 
     * Routing Enablers profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_DISABLE_BIT,
    DBAL_FIELD_TYPE_DEF_DISCARD,
    /** All bits are taken from the DMA packet  */
    DBAL_FIELD_TYPE_DEF_DMA_PACKET_1,
    /** All bits are taken from the DMA packet  */
    DBAL_FIELD_TYPE_DEF_DMA_PACKET_2,
    /** The value to put in DS field of DM request  */
    DBAL_FIELD_TYPE_DEF_DM_DS_FIELD,
    /** Different DM time formats  */
    DBAL_FIELD_TYPE_DEF_DM_MODE,
    /** One way time stamp representation in OAMP  */
    DBAL_FIELD_TYPE_DEF_DM_ONE_WAY_TIMESTAMP_ENCODING,
    /** The value of Flags.T to put into DM request packet  */
    DBAL_FIELD_TYPE_DEF_DM_T_FLAG,
    /** 
     * one bit indicates general "done"
     * 
     */
    DBAL_FIELD_TYPE_DEF_DONE_INDICATION,
    /** Drop precedence  */
    DBAL_FIELD_TYPE_DEF_DP,
    DBAL_FIELD_TYPE_DEF_DP_IS_PRESERVE,
    DBAL_FIELD_TYPE_DEF_DP_METER_COMMAND,
    /** Returns if VOQ is in DRAM. All values but S2F means that VOQ is in DRAM  */
    DBAL_FIELD_TYPE_DEF_DRAM_BOUND_STATE,
    /** VOQ Rate Class DRAM usage mode  */
    DBAL_FIELD_TYPE_DEF_DRAM_USE_MODE,
    DBAL_FIELD_TYPE_DEF_DSP,
    DBAL_FIELD_TYPE_DEF_DSP_AGG,
    /** 
     * Dune special packet identifier.
     * 
     */
    DBAL_FIELD_TYPE_DEF_DSP_IDENTIFIER_ID,
    DBAL_FIELD_TYPE_DEF_DST_DATA,
    DBAL_FIELD_TYPE_DEF_DST_QUALIFIER,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_DUAL_HOMING,
    /** 
     * Dynamic threshold. Strength higher than the
     * threshold is considered static.
     */
    DBAL_FIELD_TYPE_DEF_DYNAMIC_STRENGTH_THRESHOLD,
    /** 
     * alpha indication for FADT thresholds.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECGM_ALPHA,
    /** 
     * Delete FIFO mode. The ecgm has 2 delete
     * FIFOs, that can be configured to these 2 different modes.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECGM_DELETE_FIFO_MODE,
    /** 
     * Delete FIFO type. Used to specify which type
     * of delete fifo is accessed.
     */
    DBAL_FIELD_TYPE_DEF_ECGM_DELETE_FIFO_TYPE,
    /** 
     * interface profile id (0-7).
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECGM_INTERFACE_PROFILE,
    /** 
     * packet descriptors threshold.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECGM_PD_THRESHOLD,
    /** port profile id (0-15).  */
    DBAL_FIELD_TYPE_DEF_ECGM_PORT_PROFILE,
    /** 
     * ETM interface priority (Low / High).
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECGM_PRIORITY,
    /** 
     * Profile index for the ECMP profile table.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECMP_GROUP_PROFILE,
    /** 
     * The index of the ECMP group
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECMP_ID,
    /** 
     * Pointer to the ECMP members table.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECMP_MEMBERS_BASE,
    /** 
     * The ECMP working mode, could be one of 3
     * consistent modes or a non-consistent one.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ECMP_MODE,
    /** The supported ECMP RPF modes.  */
    DBAL_FIELD_TYPE_DEF_ECMP_RPF_MODE,
    /** Egress is ECN eligible (1) otherwise (0)  */
    DBAL_FIELD_TYPE_DEF_ECN_IS_ELIGIBLE,
    /** ECN Mapping Profile  */
    DBAL_FIELD_TYPE_DEF_ECN_MAPPING_PROFILE,
    /** QOS profile is used for Mapping Logical Interface to QOS propertie  */
    DBAL_FIELD_TYPE_DEF_ECN_QOS_PROFILE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_EEDB_LL_EXTRA_DATA,
    DBAL_FIELD_TYPE_DEF_EEDB_LL_NEXT_POINTER,
    /** list of ETPS formats with EM_BUSTER flag  */
    DBAL_FIELD_TYPE_DEF_EEDB_TYPE_EM_BUSTER,
    /** list of ETPS formats with VSD Enable flag  */
    DBAL_FIELD_TYPE_DEF_EEDB_TYPE_VSD_ENABLE,
    /** 
     * EEI encoding in the IRPP pipeline
     * 
     */
    DBAL_FIELD_TYPE_DEF_EEI,
    /** 
     * EEI encoding in the IRPP pipeline,
     * encapsulation pointer
     */
    DBAL_FIELD_TYPE_DEF_EEI_ENCAPSULATION_POINTER,
    /** 
     * EEI identifier for EEI structure
     * 
     */
    DBAL_FIELD_TYPE_DEF_EEI_IDENTIFIER,
    /** 
     * EEI encoding in the IRPP pipeline, mpls pop
     * command
     */
    DBAL_FIELD_TYPE_DEF_EEI_MPLS_POP_COMMAND,
    /** 
     * EEI encoding in the IRPP pipeline,
     * used as push command, only under JR mode
     */
    DBAL_FIELD_TYPE_DEF_EEI_MPLS_PUSH_COMMAND,
    /** 
     * EEI encoding in the IRPP pipeline, mpls swap
     * command
     */
    DBAL_FIELD_TYPE_DEF_EEI_MPLS_SWAP_COMMAND,
    /** Ees Tos Type  */
    DBAL_FIELD_TYPE_DEF_EES_TYPE,
    /** Egress interface  */
    DBAL_FIELD_TYPE_DEF_EGQ_IF,
    /** 
     * Egress forwarding physical destination
     * 
     */
    DBAL_FIELD_TYPE_DEF_EGRESS_DESTINATION,
    DBAL_FIELD_TYPE_DEF_EGRESS_FWD_ACTION_PROFILE,
    DBAL_FIELD_TYPE_DEF_EGRESS_FWD_CODE,
    DBAL_FIELD_TYPE_DEF_EGRESS_FWD_CODE_PORT_PROFILE,
    DBAL_FIELD_TYPE_DEF_EGRESS_GLEM_FORMATS,
    DBAL_FIELD_TYPE_DEF_EGRESS_LAST_LAYER,
    /** Data type(Ingress) to be stamped on OAM Application Extension(oam_ts_data)  */
    DBAL_FIELD_TYPE_DEF_EGRESS_OAM_DATA_TYPE,
    DBAL_FIELD_TYPE_DEF_EGRESS_PARSING_INDEX,
    DBAL_FIELD_TYPE_DEF_EGRESS_PPMC_FORMATS,
    DBAL_FIELD_TYPE_DEF_EGRESS_VSI_FORMATS,
    DBAL_FIELD_TYPE_DEF_ELEPHANT_PAYLOAD,
    /** Routing Enablers Vector  */
    DBAL_FIELD_TYPE_DEF_ENABLERS_VECTOR,
    /** 
     * Routing Enablers profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_ENABLE_BIT,
    /** KAPS interfaces default enabled  */
    DBAL_FIELD_TYPE_DEF_ENABLE_KAPS_DEFAULT,
    /** 
     * Encapsulation Context Port Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_ENCAPSULATION_CONTEXT_PORT_PROFILE,
    /** Context Ids for ENCAP_1 Stage  */
    DBAL_FIELD_TYPE_DEF_ENCAP_1_CONTEXT_ID,
    /** Context Ids for ENCAP_2 Stage  */
    DBAL_FIELD_TYPE_DEF_ENCAP_2_CONTEXT_ID,
    /** Context Ids for ENCAP_3 Stage  */
    DBAL_FIELD_TYPE_DEF_ENCAP_3_CONTEXT_ID,
    /** Context Ids for ENCAP_4 Stage  */
    DBAL_FIELD_TYPE_DEF_ENCAP_4_CONTEXT_ID,
    /** Context Ids for ENCAP_5 Stage  */
    DBAL_FIELD_TYPE_DEF_ENCAP_5_CONTEXT_ID,
    DBAL_FIELD_TYPE_DEF_ENCAP_DEST,
    /** Encap destination  */
    DBAL_FIELD_TYPE_DEF_ENCAP_DESTINATION,
    /** qos model  */
    DBAL_FIELD_TYPE_DEF_ENCAP_QOS_MODEL,
    /** 
     * Pph End Of Packet Editing
     * 
     */
    DBAL_FIELD_TYPE_DEF_END_OF_PACKET_EDITING,
    DBAL_FIELD_TYPE_DEF_ENTRY_GROUPING,
    DBAL_FIELD_TYPE_DEF_ENUM_TEST,
    /** Possible action of EPMF BLOCK  */
    DBAL_FIELD_TYPE_DEF_EPMF_ACTION,
    /** List of actions for EPMF  */
    DBAL_FIELD_TYPE_DEF_EPMF_ACTIONS_CONTAINER,
    /** FFC instruction, key taken from header. EPMF stage  */
    DBAL_FIELD_TYPE_DEF_EPMF_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_EPMF_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. EPMF stage  */
    DBAL_FIELD_TYPE_DEF_EPMF_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. EPMF stage  */
    DBAL_FIELD_TYPE_DEF_EPMF_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. EPMF stage  */
    DBAL_FIELD_TYPE_DEF_EPMF_FFC_RELATIVE_HEADER,
    /** List of qualifiers for EPMF  */
    DBAL_FIELD_TYPE_DEF_EPMF_QUALIFIERS_CONTAINER,
    DBAL_FIELD_TYPE_DEF_ERPP_1ST_PARSER_PARSER_CONTEXT,
    /** ERPP trap id  */
    DBAL_FIELD_TYPE_DEF_ERPP_TRAP_ID,
    DBAL_FIELD_TYPE_DEF_ESEM1_DEFAULT_RESULT,
    DBAL_FIELD_TYPE_DEF_ESEM2_DEFAULT_RESULT,
    /** 
     * Per port ESEM access command, mapped to
     * access properties like default lookup result
     * 
     */
    DBAL_FIELD_TYPE_DEF_ESEM_ACCESS_CMD,
    /** 
     * app_db_id, indicating the key type for
     * accessing ESEM
     */
    DBAL_FIELD_TYPE_DEF_ESEM_APP_DB_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_ESEM_COMMAND,
    DBAL_FIELD_TYPE_DEF_ESEM_COMMAND_ATTRIBUTE,
    /** 
     * ESEM default entry index.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ESEM_DEFAULT_RESULT_PROFILE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_ESEM_NAME_SPACE,
    /** 
     * ESEM entry position in ETPS.
     * 
     */
    DBAL_FIELD_TYPE_DEF_ESEM_OFFSET,
    DBAL_FIELD_TYPE_DEF_ETHERNET_QUALIFIER_TPID_EXISTS,
    /** EtherType values  */
    DBAL_FIELD_TYPE_DEF_ETHERTYPE,
    /** Interface Type-Legth-Value(TLV) status  */
    DBAL_FIELD_TYPE_DEF_ETH_INTERFACE_STATE,
    /** Port Type-Legth-Value(TLV) status  */
    DBAL_FIELD_TYPE_DEF_ETH_PORT_STATE,
    DBAL_FIELD_TYPE_DEF_ETPP_1ST_PARSER_PARSER_CONTEXT,
    DBAL_FIELD_TYPE_DEF_ETPP_ADDITIONAL_HEADER_PROFILE_STACK_ATTRIBUTES,
    DBAL_FIELD_TYPE_DEF_ETPP_ENC1_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_ENC2_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_ENC3_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_ENC4_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_ENC5_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_ENCAPSULATION_MAIN_HEADER_TYPE,
    DBAL_FIELD_TYPE_DEF_ETPP_ETPS_FORMATS,
    DBAL_FIELD_TYPE_DEF_ETPP_FORWARDING_CANDIDATE_HEADER,
    DBAL_FIELD_TYPE_DEF_ETPP_FORWARD_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_FWD_CODE_ACE_CTXT_VALUE,
    DBAL_FIELD_TYPE_DEF_ETPP_NEXT_PROTOCOL_NAMESPACE,
    DBAL_FIELD_TYPE_DEF_ETPP_PROTOCOL_X_NEXT_PROTOCOL_NAMESPACE,
    DBAL_FIELD_TYPE_DEF_ETPP_PRP2_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_QOS_VAR_TYPE,
    DBAL_FIELD_TYPE_DEF_ETPP_TERMINATION_PORT_CS_VAR,
    DBAL_FIELD_TYPE_DEF_ETPP_TERM_ACE_CTXT_VALUE,
    DBAL_FIELD_TYPE_DEF_ETPP_TRAP_ACE_CTXT_VALUE,
    DBAL_FIELD_TYPE_DEF_ETPP_TRAP_CONTEXT_PORT_PROFILE,
    DBAL_FIELD_TYPE_DEF_ETPP_TRAP_FWD_RCY_CMD,
    /** ETPP trap id  */
    DBAL_FIELD_TYPE_DEF_ETPP_TRAP_ID,
    DBAL_FIELD_TYPE_DEF_ETPP_TRAP_RCY_CMD_MAP,
    /** ETPS Type  */
    DBAL_FIELD_TYPE_DEF_ETPS_TYPE,
    DBAL_FIELD_TYPE_DEF_EVENTOR,
    /** 
     * Profile describing the DSP distribution.
     * 
     */
    DBAL_FIELD_TYPE_DEF_EVENT_FORWARDING_PROFILE,
    /** TCAM keys for event packet type  */
    DBAL_FIELD_TYPE_DEF_EVENT_PACKET,
    /** 
     * Source for VID value for an EVE VLAN Edit
     * added Inner tag
     */
    DBAL_FIELD_TYPE_DEF_EVE_INNER_VID_SRC,
    /** 
     * Source for VID value for an EVE VLAN Edit
     * added Outer tag
     */
    DBAL_FIELD_TYPE_DEF_EVE_OUTER_VID_SRC,
    /** 
     * Source for PCP-DEI value for an EVE VLAN
     * Edit added tag
     */
    DBAL_FIELD_TYPE_DEF_EVE_PCP_DEI_SRC,
    DBAL_FIELD_TYPE_DEF_EXEM_DEFAULT_RESULT,
    /** MPLS Exp Value  */
    DBAL_FIELD_TYPE_DEF_EXP,
    /** 
     * ExtType= J2-Mode ?
     * Application_Specific_Ext.Type(4) : TSH47:46(OAM-Ext-Type)
     * 
     */
    DBAL_FIELD_TYPE_DEF_EXTENSION_TYPE,
    /** One fourth of the extra data bits  */
    DBAL_FIELD_TYPE_DEF_EXTRA_DATA_SEGMENT,
    /** Number of entries of extra data, including this one  */
    DBAL_FIELD_TYPE_DEF_EXT_DATA_LENGTH,
    DBAL_FIELD_TYPE_DEF_EXT_STATISTICS,
    DBAL_FIELD_TYPE_DEF_E_CID,
    /** Fabric context number  */
    DBAL_FIELD_TYPE_DEF_FABRIC_CONTEXT_ID,
    /** DTQ mode definition  */
    DBAL_FIELD_TYPE_DEF_FABRIC_DTQ_MODE,
    /** Fabric link id  */
    DBAL_FIELD_TYPE_DEF_FABRIC_LINK_ID,
    /** Packet Cell Packing mode  */
    DBAL_FIELD_TYPE_DEF_FABRIC_PCP_MODE,
    /** Fabric pipe number  */
    DBAL_FIELD_TYPE_DEF_FABRIC_PIPE_ID,
    /** Fabric cell priority  */
    DBAL_FIELD_TYPE_DEF_FABRIC_PRIORITY,
    /** 
     * SyncE reference clk block ID
     * 
     */
    DBAL_FIELD_TYPE_DEF_FABRIC_SYNCE_CLK_BLK_ID,
    /** WFQ FIFO  */
    DBAL_FIELD_TYPE_DEF_FABRIC_WFQ_FIFO,
    /** Device FAP ID. Note that each core has different FAP ID.  */
    DBAL_FIELD_TYPE_DEF_FAP_ID,
    DBAL_FIELD_TYPE_DEF_FCOE_QUALIFIER_FIRST_ADDITIONAL_HEADER_TYPE,
    /** 
     * Sourses of FC generation
     * 
     */
    DBAL_FIELD_TYPE_DEF_FC_GEN_SOURCE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_FC_ID,
    /** 
     * Sourses of FC generation
     * 
     */
    DBAL_FIELD_TYPE_DEF_FC_REC_SOURCE,
    /** 
     * Forwarding Equivalence Class
     * 
     */
    DBAL_FIELD_TYPE_DEF_FEC,
    /** 
     * FEC that can be used for default entries
     * 
     */
    DBAL_FIELD_TYPE_DEF_FEC_DEFAULT,
    /** 
     * Typical JR2 use cases:
     * (1)Unicast forwarding
     * Applicable to JR1 backward compatibility as well
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_LIF0,
    /** 
     * Typical JR2 use cases: (used only in SUPER_FEC_NO_PROTECTION/SUPER_FEC_W_PROTECTION)
     * (1) IPvX UC with RIF and ARP
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_LIF0_17BIT_LIF1,
    /** FEC_ENTRY_DESTINATION_LIF0 with Hierarchical TM Flow  */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_LIF0_HTM,
    /** 
     * Typical JR2 use cases: (used only in SUPER_FEC_NO_PROTECTION)
     * (1) MC forwarding into tunnel with Explicit RPF
     * Note that in this entry the "Forwarding OutLIF" is OUTLIF_1 and the "RPF OutLIF" is GLOBAL_OUT_LIF_0
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_LIF0_LIF1_MC_RPF,
    /** 
     * Typical JR2 use cases:
     * (1) Multicast (i.e. Destination is MC_Group) with "MC Explicit RPF"
     * Applicable to JR1 backward compatibility as well
     * (2) Multicast into tunnel (i.e. Destination is not MC_Group and GLOBAL_OUT_LIF_0 is used to indicate the tunnel)
     * Applicable to JR1 backward compatibility as well
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_LIF0_MC_RPF,
    /** 
     * Typical JR2 use Cases:
     * (1)FEC KAPS result enumeration (i.e. SUPER_FEC is SUPER_FEC_NO_PROTECTION_W_2_STAT FEC)
     * (2)Multicast into MC_Group with "MC SIP Based RPF" (i.e. destination is MC_Group)
     * Applicable to JR1 backward compatibility as well
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_MC_RPF,
    /** 
     * Typical JR2 use cases:
     * (1) JR2 MPLS POP
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_MPLS_POP,
    /** 
     * Typical JR2 use cases:
     * (1) JR2 MPLS POP
     */
    DBAL_FIELD_TYPE_DEF_FEC_DESTINATION_MPLS_SWAP,
    DBAL_FIELD_TYPE_DEF_FEC_ENTRY_NO_PROTECTION_NO_STATS,
    DBAL_FIELD_TYPE_DEF_FEC_ENTRY_NO_PROTECTION_W_2_STATS,
    DBAL_FIELD_TYPE_DEF_FEC_ENTRY_W_PROTECTION_NO_STATS,
    DBAL_FIELD_TYPE_DEF_FEC_ENTRY_W_PROTECTION_W_1_STATS,
    /** Field can be used as a destination FEC or Global OutLIF (pointer to EEDB table)  */
    DBAL_FIELD_TYPE_DEF_FEC_ID_OR_GLOB_OUT_LIF,
    /** 
     * JR1 use cases: (used only in SUPER_FEC_W_PROTECTION)
     * (1) Anything with EEI
     */
    DBAL_FIELD_TYPE_DEF_FEC_JR1_DESTINATION_EEI,
    /** 
     * JR1 use cases: (used only in SUPER_FEC_W_PROTECTION)
     * (1) IPvX Unicast Routing
     */
    DBAL_FIELD_TYPE_DEF_FEC_JR1_DESTINATION_ETH_RIF_ARP,
    /** 
     * Index of the first FEC/ECMP in the ECMP
     * group.
     */
    DBAL_FIELD_TYPE_DEF_FEC_POINTER_BASE,
    /** 
     * Tag for the FEC resource manager
     * 
     */
    DBAL_FIELD_TYPE_DEF_FEC_RESOURCE_TYPE,
    /** value to be used  */
    DBAL_FIELD_TYPE_DEF_FEM_CONST,
    /** offset for bit value  */
    DBAL_FIELD_TYPE_DEF_FEM_OFFSET,
    /** Indication whether to set bit with predefined value or use offset of input  */
    DBAL_FIELD_TYPE_DEF_FEM_OP,
    /** The offfset for start reading the field  */
    DBAL_FIELD_TYPE_DEF_FFC_FIELD_OFFSET,
    /** the of the data to take into key builder  */
    DBAL_FIELD_TYPE_DEF_FFC_FIELD_SIZE,
    /** Index in FFC instruction, used for choosing layer/header  */
    DBAL_FIELD_TYPE_DEF_FFC_INDEX,
    /** 
     * FFC structure field_offset(11bit)
     * opcode(2bit) field_size(2bit) idx(3bit) key_offset(4bit)
     * 
     */
    DBAL_FIELD_TYPE_DEF_FFC_INSTRUCTION,
    /** the offset in the key builder that the data is placed in  */
    DBAL_FIELD_TYPE_DEF_FFC_KEY_OFFSET,
    /** Fields for 5-byte FHEI following PPH header - JR1 structure  */
    DBAL_FIELD_TYPE_DEF_FHEI_5B_TRAP_JR1,
    /** Fields for 5-byte FHEI following PPH header - JR2 structure  */
    DBAL_FIELD_TYPE_DEF_FHEI_5B_TRAP_SNIFF,
    /** 
     * MPLS command in PPH FHEI header
     * 
     */
    DBAL_FIELD_TYPE_DEF_FHEI_MPLS_COMMAND,
    /** FHEI Size  */
    DBAL_FIELD_TYPE_DEF_FHEI_SIZE,
    /** Fhei Type  */
    DBAL_FIELD_TYPE_DEF_FHEI_TYPE,
    DBAL_FIELD_TYPE_DEF_FID,
    /** 
     * Field Access profile id for TCAM
     * 
     */
    DBAL_FIELD_TYPE_DEF_FIELD_ACCESS_PROFILE_ID,
    /** Result type of the ACE table, used as both group ID for PPMC table and context for ACE ACR EFES  */
    DBAL_FIELD_TYPE_DEF_FIELD_ACE_RESULT_TYPE,
    /** 
     * Example for define usage in field type
     * 
     */
    DBAL_FIELD_TYPE_DEF_FIELD_DEFINE_EXAMPLE,
    /** Possible Keys for Key update_second pass to update first pass keys  */
    DBAL_FIELD_TYPE_DEF_FIELD_E_PMF_FES_KEY_SELECT,
    /** Flag indicating whether pointed action is valid or not  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_ACTION_VALID,
    /** Condition as extracted from 'key select', corresponding to 'FEM id' and 'FEM program'  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_CONDITION,
    /** FEM Bit Select (MS bit of the 4 bits which form 'condition')  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_CONDITION_MS_BIT,
    /** ID of FEM  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_ID,
    /** Field Map Data  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_MAP_DATA,
    /** Index for selecting action for FEM  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_MAP_INDEX,
    /** ID of FEM Program  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_PGM_ID,
    /** FEM 'replace lsb' feature. Flag. If set then replace 16 lsb  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_REPLACE_LSB_FLAG,
    /** FEM 'replace 16 lsb' select: Which TCAM result to use (out of 8)  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_REPLACE_LSB_SELECT,
    /** The bit to modify on fem_action value  */
    DBAL_FIELD_TYPE_DEF_FIELD_FEM_SELECTED_BIT,
    /** Value of 'OR' MASK to apply to FES  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_ACTION_MASK,
    /** Select one of the 'masks' which will be applied as OR operation. Number of bits changes between PMF and ACE ACR EFES.  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_CHOSEN_MASK,
    /** ID of FES. The size of the field changes between different stages.  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_ID,
    /** ID of 'OR' MASK to apply to FES. Number of bits changes between PMF and ACE ACR EFES.  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_MASK_ID,
    /** ID of FES Program  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_PGM_ID,
    /** Control flag: If Type is '0' and this flag is the same as the LS bit of the shifted Action then Action is valid  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_POLARITY,
    /** Num. of bits to shift selected key before applying VALID_BITS mask. Size changes between PMF EFES and ACE ACR EFES.  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_SHIFT,
    /** Control flag: If '1' then Action is valid. Else it depends on Polarity  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_TYPE,
    /** Log2 of num. of bits to take from selected key to construct Action. This is an AND mask  */
    DBAL_FIELD_TYPE_DEF_FIELD_FES_VALID_BITS,
    /** Hash LB Key selector  */
    DBAL_FIELD_TYPE_DEF_FIELD_HASH_LB_KEY,
    /** 
     * Possible IO (input source) for PMF. See the
     * various 'KEY_SELECT'
     */
    DBAL_FIELD_TYPE_DEF_FIELD_IO,
    /** Possible Keys for PMF  */
    DBAL_FIELD_TYPE_DEF_FIELD_KEY,
    /** 
     * Possible Keys for Key update, second pass to
     * update first pass keys
     */
    DBAL_FIELD_TYPE_DEF_FIELD_KEY_UPDATE,
    /** Possible Keys for FEM in PMF A BLOCK  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_A_FEM_KEY_SELECT,
    /** Possible Keys for FES in PMF A BLOCK  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_A_FES_KEY_SELECT,
    /** Possible Keys for Key update_second pass to update first pass keys  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_B_FES_KEY_SELECT,
    /** ID of PMF program for Field module  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_CTX_ID,
    /** ID of the PMF program selected, result returned from CS Action table  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_CTX_ID_VALID,
    /** Matching value of 2MS bits of selected FES DATA (by FES_KEY_SELECT)  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_FES_DATA_2MSB,
    /** NAS ID, result returned from CS Action table  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_NAS_ID,
    /** NAS ID valid, result returned from CS Action table  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_NAS_ID_VALID,
    /** Preselector ID, line in context selection TCAM and Action tables  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_PRESEL_ID,
    /** ID of Range Qualifier for Field module  */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_RANGE_ID,
    /** 
     * Context param arg, specifies which parameter
     * argument for the context to set
     */
    DBAL_FIELD_TYPE_DEF_FIELD_PMF_STAGE,
    /** Field TCAM Bank ID  */
    DBAL_FIELD_TYPE_DEF_FIELD_TCAM_BANK_ID,
    /** 
     * Example for field type with illegal values
     * 
     */
    DBAL_FIELD_TYPE_DEF_FIELD_WITH_ILLEGAL_VALUES,
    /** 
     * index of the first ip nibble
     * 
     */
    DBAL_FIELD_TYPE_DEF_FIRST_NIBBLE_INDEX,
    DBAL_FIELD_TYPE_DEF_FLOW_ID,
    /** Slow status of a scheduler or flow  */
    DBAL_FIELD_TYPE_DEF_FLOW_SLOW_STATUS,
    /** 
     * When number of elements in the FLPB lookup
     * access FIFO exceeds this value, an indication is sent to the
     * ELK gateway to start producing errors.
     */
    DBAL_FIELD_TYPE_DEF_FLP_FULL_THRESHOLD,
    /** 
     * Flush group
     * 
     */
    DBAL_FIELD_TYPE_DEF_FLUSH_GROUP,
    /** Flush machine different status values  */
    DBAL_FIELD_TYPE_DEF_FLUSH_MACHINE_STATUS,
    /** FMAC BLK ID  */
    DBAL_FIELD_TYPE_DEF_FMAC_BLK_ID,
    /** 
     * Used for choosing Fabric Multicast Shaper
     * 
     */
    DBAL_FIELD_TYPE_DEF_FMC_SHAPER,
    /** Forwarding domain  */
    DBAL_FIELD_TYPE_DEF_FODO,
    /** how the HW encode FODO types  */
    DBAL_FIELD_TYPE_DEF_FODO_ENCODING,
    /** 
     * Forwarding domain, encoded only as VRF
     * 
     */
    DBAL_FIELD_TYPE_DEF_FODO_VRF,
    /** 
     * Forwarding domain, encoded only as VSI
     * 
     */
    DBAL_FIELD_TYPE_DEF_FODO_VSI,
    /** 
     * Forwarding Additional Information
     * 
     */
    DBAL_FIELD_TYPE_DEF_FORWARDING_ADDITIONAL_INFO,
    /** 
     * Forwarding Context Port Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_FORWARDING_CONTEXT_PORT_PROFILE,
    /** 
     * Forward Code Port Profile, extracted from
     * Per Port Table
     */
    DBAL_FIELD_TYPE_DEF_FORWARD_CODE_PORT_PROFILE,
    /** Forward Crop Packet  */
    DBAL_FIELD_TYPE_DEF_FORWARD_CROP_PACKET,
    DBAL_FIELD_TYPE_DEF_FORWARD_DOMAIN_ASSIGNMENT_MODE,
    /** qos model  */
    DBAL_FIELD_TYPE_DEF_FORWARD_QOS_MODEL,
    /** 
     * Application Specific Extension Type
     * 
     */
    DBAL_FIELD_TYPE_DEF_FTMH_APP_SPECIFIC_EXT_TYPE,
    /** ECN functionality enabled (1) otherwise (0)  */
    DBAL_FIELD_TYPE_DEF_FTMH_ECN_ELIGIBLE,
    /** 
     * Size of FTMH LB-Key extension
     * 
     */
    DBAL_FIELD_TYPE_DEF_FTMH_LB_KEY_EXT_SIZE,
    /** 
     * Size of FTMH stacking extension
     * 
     */
    DBAL_FIELD_TYPE_DEF_FTMH_STACKING_EXT_SIZE,
    /** Fields used for DM statistics  */
    DBAL_FIELD_TYPE_DEF_FULL_DELAY,
    /** FFC instruction, key taken from header. FWD12 stage  */
    DBAL_FIELD_TYPE_DEF_FWD12_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_FWD12_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. FWD12 stage  */
    DBAL_FIELD_TYPE_DEF_FWD12_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. FWD12 stage  */
    DBAL_FIELD_TYPE_DEF_FWD12_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. FWD12 stage  */
    DBAL_FIELD_TYPE_DEF_FWD12_FFC_RELATIVE_HEADER,
    /** Possible Keys for ELK  */
    DBAL_FIELD_TYPE_DEF_FWD12_KBR_ID,
    /** Context Ids for FWD1 Stage  */
    DBAL_FIELD_TYPE_DEF_FWD1_CONTEXT_ID,
    /** Context Ids for FWD2 Stage  */
    DBAL_FIELD_TYPE_DEF_FWD2_CONTEXT_ID,
    DBAL_FIELD_TYPE_DEF_FWD_CONTEXT,
    /** Context Ids for FWD Stage  */
    DBAL_FIELD_TYPE_DEF_FWD_CONTEXT_ID,
    /** Mapping from forwarding context to same intf filter  */
    DBAL_FIELD_TYPE_DEF_FWD_CONTEXT_SAME_INTERFACE_FILTER,
    DBAL_FIELD_TYPE_DEF_FWD_DATA,
    /** how the HW encode each destination type  */
    DBAL_FIELD_TYPE_DEF_FWD_DEST_ENCODING,
    DBAL_FIELD_TYPE_DEF_FWD_DOMAIN_PROFILE,
    DBAL_FIELD_TYPE_DEF_FWD_LAYER_INDEX,
    DBAL_FIELD_TYPE_DEF_FWD_PROFILE,
    /** 
     * Forwarding Recycle Priority
     * 
     */
    DBAL_FIELD_TYPE_DEF_FWD_RECYCLE_PRIORITY,
    DBAL_FIELD_TYPE_DEF_FWD_STRENGTH,
    /** G-ACH indication  */
    DBAL_FIELD_TYPE_DEF_GACH_INDICATION,
    /** 
     * Specific Information for GENEVE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_GENEVE_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Global recource types in the system
     * 
     */
    DBAL_FIELD_TYPE_DEF_GLB_RCS,
    DBAL_FIELD_TYPE_DEF_GLOB_IN_LIF,
    DBAL_FIELD_TYPE_DEF_GLOB_OUT_LIF,
    DBAL_FIELD_TYPE_DEF_GLOB_OUT_LIF_WITH_VALID,
    /** 
     * All logical gports - VLAN PORT, MPLS PORT,
     * EXTENDER, L2GRE, MIM, VXLAN
     */
    DBAL_FIELD_TYPE_DEF_GPORT,
    /** 
     * Active configuration of trunk in context of
     * graceful lag modification
     */
    DBAL_FIELD_TYPE_DEF_GRACEFUL_ACTIVE_CONFIGURATION,
    /** 
     * Specific Information for GRE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_GRE12_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Specific Information for GRE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_GRE4_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Specific Information for GRE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_GRE8K_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Specific Information for GRE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_GRE8SN_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** determines if mcdb entry used for ingress  */
    DBAL_FIELD_TYPE_DEF_GROUP_ID,
    /** G-Timer cycle period  */
    DBAL_FIELD_TYPE_DEF_GTIMER_CYCLE,
    /** G-Timer enable  */
    DBAL_FIELD_TYPE_DEF_GTIMER_ENABLE,
    /** 
     * G-Timer reset counters on trigger
     * 
     */
    DBAL_FIELD_TYPE_DEF_GTIMER_RESET_ON_TRIGGER,
    /** G-Timer trigger  */
    DBAL_FIELD_TYPE_DEF_GTIMER_TRIGGER,
    /** 
     * hbm dram mode register 0
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_0,
    /** 
     * hbm dram mode register 1
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_1,
    /** 
     * hbm dram mode register 15
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_15,
    /** 
     * hbm dram mode register 2
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_2,
    /** 
     * hbm dram mode register 3
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_3,
    /** 
     * hbm dram mode register 4
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_4,
    /** 
     * hbm dram mode register 5
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_5,
    /** 
     * hbm dram mode register 6
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_6,
    /** 
     * hbm dram mode register 7
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_7,
    /** 
     * hbm dram mode register 8
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_8,
    /** 
     * hbm dram mode register reserved
     * 
     */
    DBAL_FIELD_TYPE_DEF_HBM_MR_RESERVED,
    /** 
     * Possible Header profiles
     * 
     */
    DBAL_FIELD_TYPE_DEF_HEADER_PROFILE,
    DBAL_FIELD_TYPE_DEF_HEADER_SIZE,
    /** 
     * Hex decimal fielt type (default type)
     * 
     */
    DBAL_FIELD_TYPE_DEF_HEXA,
    /** 
     * Hierarchy level (1-3) of the FEC/ECMP.
     * 
     */
    DBAL_FIELD_TYPE_DEF_HIERARCHY_LEVEL,
    /** HR id  */
    DBAL_FIELD_TYPE_DEF_HR_ID,
    /** HR mode definition  */
    DBAL_FIELD_TYPE_DEF_HR_MODE,
    /** The Size was not specified in the ARCH file.  */
    DBAL_FIELD_TYPE_DEF_IANA_IP_PROTOCOL,
    /** ICC data of Y1731 OAM ICC based MAID - bytes 0:5 of MA name.  */
    DBAL_FIELD_TYPE_DEF_ICC_DATA,
    /** Index of ICC based MAID map data  */
    DBAL_FIELD_TYPE_DEF_ICC_MAP_INDEX,
    /** 
     * ICMPV4_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_ICMPV4_TRAP_HANDLING_PROFILE,
    /** 
     * ICMPV6_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_ICMPV6_TRAP_HANDLING_PROFILE,
    DBAL_FIELD_TYPE_DEF_IEEE1588_COMMAND,
    DBAL_FIELD_TYPE_DEF_IEEE1588_DATA,
    DBAL_FIELD_TYPE_DEF_IEEE1588_HEADER_OFFSET,
    /** List of qualifiers for IFWD2  */
    DBAL_FIELD_TYPE_DEF_IFWD2_QUALIFIERS_CONTAINER,
    /** 
     * IGMP_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_IGMP_TRAP_HANDLING_PROFILE,
    /** ILKN interface id.  */
    DBAL_FIELD_TYPE_DEF_ILKN_ID,
    DBAL_FIELD_TYPE_DEF_INCOMING_TAG_STRUCTURE,
    /** 
     * Ingress or egress learning
     * 
     */
    DBAL_FIELD_TYPE_DEF_INGRESS_LEARNING_MODE,
    DBAL_FIELD_TYPE_DEF_INGRESS_MPLS_RANGE,
    /** mapped fwd code to Nwk-Qos-type  */
    DBAL_FIELD_TYPE_DEF_INGRESS_NWK_QOS_TYPE,
    /** Data type(Ingress) to be stamped on OAM Application Extension(oam_ts_data)  */
    DBAL_FIELD_TYPE_DEF_INGRESS_OAM_DATA_TYPE,
    /** 
     * Pipe or opportunistic learning
     * 
     */
    DBAL_FIELD_TYPE_DEF_INGRESS_OPPORTUNISTIC_LEARNING,
    DBAL_FIELD_TYPE_DEF_INGRESS_PORT_TERMINATION_PROFILE,
    /** 
     * Indicates the name for the mapping table key fields of QOS_INT_MAP_ID mapping table.
     * For example: In case the mapping table is for L2 outer tag PCP, the naming will be
     * accordingly to reflect that the mapping key is PCP
     */
    DBAL_FIELD_TYPE_DEF_INGRESS_QOS_MAP_TYPE,
    /** ingress network valid (1) otherwise (0)  */
    DBAL_FIELD_TYPE_DEF_INGRESS_QOS_NETWORK_VALID,
    /** 
     * ingress TRAP: action index, snoop and trap
     * strength
     */
    DBAL_FIELD_TYPE_DEF_INGRESS_TRAP_DEST,
    /** 
     * HW mapping to index in the action trap table
     * 
     */
    DBAL_FIELD_TYPE_DEF_INGRESS_TRAP_ID,
    /** extend vlan edit pcp dei profile  */
    DBAL_FIELD_TYPE_DEF_INGRESS_VLAN_PCP_DEI_PROFILE,
    /** Ingress Transmit Shaper  */
    DBAL_FIELD_TYPE_DEF_ING_TRANSMIT_SHAPER,
    /** Inlif Decision 0  */
    DBAL_FIELD_TYPE_DEF_INLIF_DECISION_0,
    /** Inlif Decision 1  */
    DBAL_FIELD_TYPE_DEF_INLIF_DECISION_1,
    /** how the HW encode each LIF type  */
    DBAL_FIELD_TYPE_DEF_INLIF_ENCODING,
    /** how the next instruction should be chosen  */
    DBAL_FIELD_TYPE_DEF_INST_SRC,
    /** 0 - no interface status TLV  */
    DBAL_FIELD_TYPE_DEF_INTERFACE_STATUS_TLV_CODE,
    DBAL_FIELD_TYPE_DEF_INT_DATA,
    DBAL_FIELD_TYPE_DEF_INVALID,
    DBAL_FIELD_TYPE_DEF_INVALIDATE_NEXT,
    DBAL_FIELD_TYPE_DEF_IN_LIF,
    /** Size of InLif Extention  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_EXT_SIZE,
    /** IN_LIF ORIENTATION  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_ORIENTATION,
    DBAL_FIELD_TYPE_DEF_IN_LIF_PROFILE,
    /** IN_LIF Same interface  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_SAME_INTERFACE,
    /** Mapping from inlif profile to same intf filter  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_SAME_INTERFACE_FILTER,
    /** Most inner LIF has MEP with LM set  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_VALID_FOR_LM,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_VTEP_IDX_PAYLOAD_DATA,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_IN_LIF_VTEP_IDX_PAYLOAD_TYPE,
    /** 
     * Internal PP port mapped from Logical port
     * 
     */
    DBAL_FIELD_TYPE_DEF_IN_PORT,
    /** IN_PORT_KEY_GEN_VAR. Per in PP port data in ingress.  */
    DBAL_FIELD_TYPE_DEF_IN_PORT_PMF_DATA,
    /** Mapping from inlif profile to same intf filter  */
    DBAL_FIELD_TYPE_DEF_IN_PORT_SAME_INTERFACE_FILTER_PROFILE,
    DBAL_FIELD_TYPE_DEF_IN_TTL,
    /** Possible action of PMF A BLOCK  */
    DBAL_FIELD_TYPE_DEF_IPMF1_ACTION,
    /** List of actions for IPMF1  */
    DBAL_FIELD_TYPE_DEF_IPMF1_ACTIONS_CONTAINER,
    /** FFC instruction, key taken from header. IPMF1 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF1_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_IPMF1_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. IPMF1 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF1_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. IPMF1 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF1_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. IPMF1 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF1_FFC_RELATIVE_HEADER,
    /** List of qualifiers for IPMF1  */
    DBAL_FIELD_TYPE_DEF_IPMF1_QUALIFIERS_CONTAINER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_IPMF2_FFC_INSTRUCTION,
    /** FFC instruction, key taken from full pbus. IPMF2 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF2_FFC_LITERALLY,
    /** List of qualifiers for IPMF2  */
    DBAL_FIELD_TYPE_DEF_IPMF2_QUALIFIERS_CONTAINER,
    /** Possible action of PMF B BLOCK  */
    DBAL_FIELD_TYPE_DEF_IPMF3_ACTION,
    /** List of actions for IPMF3  */
    DBAL_FIELD_TYPE_DEF_IPMF3_ACTIONS_CONTAINER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_IPMF3_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. IPMF3 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF3_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. IPMF3 stage  */
    DBAL_FIELD_TYPE_DEF_IPMF3_FFC_LITERALLY,
    /** List of qualifiers for IPMF3  */
    DBAL_FIELD_TYPE_DEF_IPMF3_QUALIFIERS_CONTAINER,
    /** An Internet Protocol address (IP address) v4  */
    DBAL_FIELD_TYPE_DEF_IPV4,
    DBAL_FIELD_TYPE_DEF_IPV4_ADDITIONAL_HEADER,
    /** DSCP result  */
    DBAL_FIELD_TYPE_DEF_IPV4_DSCP,
    /** ECN result  */
    DBAL_FIELD_TYPE_DEF_IPV4_ECN,
    /** IPv4 Flags  */
    DBAL_FIELD_TYPE_DEF_IPV4_FLAGS,
    /** 
     * An Internet Protocol address (IP address)
     * v4, Multi-Cast Group
     */
    DBAL_FIELD_TYPE_DEF_IPV4_GROUP,
    /** Don't-fragment flag  */
    DBAL_FIELD_TYPE_DEF_IPV4_HEADER_DF_FLAG,
    /** Reserved flag  */
    DBAL_FIELD_TYPE_DEF_IPV4_HEADER_RESERVED_FLAG,
    DBAL_FIELD_TYPE_DEF_IPV4_QUALIFIER_TUNNEL_TYPE,
    /** IPV4 Type os Service  */
    DBAL_FIELD_TYPE_DEF_IPV4_TOS,
    /** An Internet Protocol address (IP address) v6  */
    DBAL_FIELD_TYPE_DEF_IPV6,
    DBAL_FIELD_TYPE_DEF_IPV6_ADDITIONAL_HEADER,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_IPV6_ADDRESS_MSBS_ID,
    DBAL_FIELD_TYPE_DEF_IPV6_DIP_IDX_TYPE,
    /** 
     * IPv6 Header extension values
     * 
     */
    DBAL_FIELD_TYPE_DEF_IPV6_EXTENSION_HEADER_TYPE,
    /** IPV6 Flow Label  */
    DBAL_FIELD_TYPE_DEF_IPV6_FLOW_LABEL,
    /** 
     * An Internet Protocol address (IP address)
     * v6, Multi-Cast Group
     */
    DBAL_FIELD_TYPE_DEF_IPV6_GROUP,
    /** IPV6 Hop Limit  */
    DBAL_FIELD_TYPE_DEF_IPV6_HOP_LIMIT,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_IPV6_MP_TUNNEL_IDX,
    /** IPV6 Type of Service  */
    DBAL_FIELD_TYPE_DEF_IPV6_TOS,
    DBAL_FIELD_TYPE_DEF_IPVX_QUALIFIER_UC_OR_MC,
    /** IP IANA Protocols  */
    DBAL_FIELD_TYPE_DEF_IP_PROTOCOL,
    /** For BFD one-hop, number of MSB's to check in received packets  */
    DBAL_FIELD_TYPE_DEF_IP_SUBNET_LEN,
    /** IPv4 Type of Service bits  */
    DBAL_FIELD_TYPE_DEF_IP_TTL_TOS_PROFILE,
    /** 
     * used for threshold per number of queues
     * 
     */
    DBAL_FIELD_TYPE_DEF_IQS_ACTIVE_QUEUES,
    /** 
     * Resolution in bytes of credit balance
     * maintained by the HW
     */
    DBAL_FIELD_TYPE_DEF_IQS_CREDIT_BALANCE_RESOLUTION,
    /** 
     * Enable / disable auto credit
     * 
     */
    DBAL_FIELD_TYPE_DEF_IQS_ENABLE_AUTO_CREDIT,
    /** 
     * number of watchdog cycles for retransmit
     * 
     */
    DBAL_FIELD_TYPE_DEF_IQS_WATCHDOG_CYCLES,
    DBAL_FIELD_TYPE_DEF_IRPP_1ST_PARSER_PARSER_CONTEXT,
    DBAL_FIELD_TYPE_DEF_IRPP_2ND_PARSER_PARSER_CONTEXT,
    /** 
     * DIP-IDX-Data(20) = DIP_IDX[19:0],
     * DIP-IDX-Type(4) = DIP_IDX[23:20]
     */
    DBAL_FIELD_TYPE_DEF_IRPP_CROSS_STAGE_VAR_2,
    DBAL_FIELD_TYPE_DEF_IRPP_FEC_ENTRY_FORMAT,
    DBAL_FIELD_TYPE_DEF_IRPP_FEC_SUPER_ENTRY_FORMAT,
    DBAL_FIELD_TYPE_DEF_IRPP_FWD_STAGE_FLOATING_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_FWD_STAGE_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_IN_LIF_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_ISEM_ACCESS_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_MY_MAC_EXEM_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_SYSTEM_HEADER_PROFILE,
    DBAL_FIELD_TYPE_DEF_IRPP_VSI_FORMATS,
    DBAL_FIELD_TYPE_DEF_IRPP_VTT_TCAM_ACCESS_FORMATS,
    /** 
     * A context flag that determines L3-LIF(IP) or
     * Other LIF
     */
    DBAL_FIELD_TYPE_DEF_IS_CONTEXT_L3_LIF,
    /** 
     * Indicated if ICMP version is ICMPv6,
     * otherwise ICMPv4
     */
    DBAL_FIELD_TYPE_DEF_IS_ICMP_V6,
    /** 
     * Determines whether Routing attributes should
     * result in a Termination
     */
    DBAL_FIELD_TYPE_DEF_IS_LAYER_TERMINATION,
    /** 
     * Designates when My-MAC was identified
     * 
     */
    DBAL_FIELD_TYPE_DEF_IS_MY_MAC,
    /** First LIF is OAM LIF  */
    DBAL_FIELD_TYPE_DEF_IS_OAM_LIF_0,
    /** Second LIF is OAM LIF  */
    DBAL_FIELD_TYPE_DEF_IS_OAM_LIF_1,
    /** Third LIF is OAM LIF  */
    DBAL_FIELD_TYPE_DEF_IS_OAM_LIF_2,
    /** 
     * Designates whether the Routing is Enabled
     * for the packet
     */
    DBAL_FIELD_TYPE_DEF_IS_ROUTING_ENABLE,
    /** ITMH base fields  */
    DBAL_FIELD_TYPE_DEF_ITMH_BASE,
    /** ITMH base fields for Jericho 1 format  */
    DBAL_FIELD_TYPE_DEF_ITMH_BASE_JR1,
    /** Packet priority - mapped ITMH TC/DP  */
    DBAL_FIELD_TYPE_DEF_ITMH_TC_DP_PROFILE,
    DBAL_FIELD_TYPE_DEF_ITPP_DELTA,
    DBAL_FIELD_TYPE_DEF_ITPP_DELTA_AND_VALID,
    /** 
     * Source for PCP-DEI value for an IVE VLAN
     * Edit added Inner tag
     */
    DBAL_FIELD_TYPE_DEF_IVE_INNER_PCP_DEI_SRC,
    /** 
     * Source for VID value for an IVE VLAN Edit
     * added Inner tag
     */
    DBAL_FIELD_TYPE_DEF_IVE_INNER_VID_SRC,
    /** 
     * Source for PCP-DEI value for an IVE VLAN
     * Edit added Outer tag
     */
    DBAL_FIELD_TYPE_DEF_IVE_OUTER_PCP_DEI_SRC,
    /** 
     * Source for VID value for an IVE VLAN Edit
     * added Outer tag
     */
    DBAL_FIELD_TYPE_DEF_IVE_OUTER_VID_SRC,
    /** JR2 OAMP event format.  */
    DBAL_FIELD_TYPE_DEF_JR2_OAMP_EVENT_FORMAT,
    DBAL_FIELD_TYPE_DEF_JR_FWD_CODE,
    /** 
     * JR PPH IN_LIF ORIENTATION
     * 
     */
    DBAL_FIELD_TYPE_DEF_JR_IN_LIF_ORIENTATION,
    DBAL_FIELD_TYPE_DEF_JR_MODE_IN_LIF_PROFILE,
    DBAL_FIELD_TYPE_DEF_JR_VSI_SRC,
    /** 
     * Strength of a KAPS entry.
     * 
     */
    DBAL_FIELD_TYPE_DEF_KAPS_ENTRY_STRENGTH,
    /** KAPS interface ID  */
    DBAL_FIELD_TYPE_DEF_KAPS_INTERFACE,
    /** 
     * Prefix length of a KAPS entry. Value can be
     * 0-160.
     */
    DBAL_FIELD_TYPE_DEF_KAPS_PREFIX_LENGTH,
    /** 
     * Payloads types supported by the KAPS.
     * 
     */
    DBAL_FIELD_TYPE_DEF_KAPS_RESULT,
    /** KBP device connect mode  */
    DBAL_FIELD_TYPE_DEF_KBP_DEVICE_MODE,
    /** KBP status of the device  */
    DBAL_FIELD_TYPE_DEF_KBP_DEVICE_STATUS,
    /** KBP forwarding opcodes  */
    DBAL_FIELD_TYPE_DEF_KBP_FWD_OPCODE,
    /** Padded GLOB_IN_LIF from size 24  */
    DBAL_FIELD_TYPE_DEF_KBP_GLOB_IN_LIF,
    /** Padded IPV4_GROUP from size 32  */
    DBAL_FIELD_TYPE_DEF_KBP_IPV4_GROUP,
    /** Index for the KBP Key  */
    DBAL_FIELD_TYPE_DEF_KBP_KBR_IDX,
    /** Possible key field types for KBP  */
    DBAL_FIELD_TYPE_DEF_KBP_KEY_FIELD_TYPE,
    /** KBP key segment information  */
    DBAL_FIELD_TYPE_DEF_KBP_KEY_SEGMENT,
    /** Type of the KBP lookup  */
    DBAL_FIELD_TYPE_DEF_KBP_LOOKUP_TYPE,
    /** KBP opcode  */
    DBAL_FIELD_TYPE_DEF_KBP_OPCODE_ID,
    /** Possible KBP result locations  */
    DBAL_FIELD_TYPE_DEF_KBP_RESULT_LOCATION,
    /** Egress is ECN eligible (1) otherwise (0)  */
    DBAL_FIELD_TYPE_DEF_KEEP_ECN_BITS,
    /** 
     * 
     * Stage A or B, select between the sub stage of a doube kleap stage.
     * FWD12: FWD1/FWD2, VT23: VT2/VT3, VT45: VT4/VT5
     * 
     */
    DBAL_FIELD_TYPE_DEF_KLEAP_STAGE_SELECTOR,
    /** MAC Address  */
    DBAL_FIELD_TYPE_DEF_L2_MAC,
    DBAL_FIELD_TYPE_DEF_L4OPS,
    /** L4 Destination Port  */
    DBAL_FIELD_TYPE_DEF_L4_DST_PORT,
    /** L4 Source Port  */
    DBAL_FIELD_TYPE_DEF_L4_SRC_PORT,
    /** 
     * Number of Labels to terminate
     * 
     */
    DBAL_FIELD_TYPE_DEF_LABELS_TO_TERMINATE,
    /** LAG-ID  */
    DBAL_FIELD_TYPE_DEF_LAG_ID,
    /** 
     * LAG LB key(trunk hash) for the copy
     * 
     */
    DBAL_FIELD_TYPE_DEF_LAG_LB_KEY,
    /** Used for OAMP flexible LM/DM packets  */
    DBAL_FIELD_TYPE_DEF_LAST_ENTRY,
    /** Last loss measurement value from far endpoint  */
    DBAL_FIELD_TYPE_DEF_LAST_LM_FAR,
    /** Last loss measurement value from near endpoint  */
    DBAL_FIELD_TYPE_DEF_LAST_LM_NEAR,
    /** variables of last packet  */
    DBAL_FIELD_TYPE_DEF_LAST_PKT_VARS,
    DBAL_FIELD_TYPE_DEF_LATENCY_FLOW,
    /** Layer1 Offset  */
    DBAL_FIELD_TYPE_DEF_LAYER_OFFSET,
    /** layer qualifier field  */
    DBAL_FIELD_TYPE_DEF_LAYER_QUALIFIER,
    DBAL_FIELD_TYPE_DEF_LAYER_TYPES,
    DBAL_FIELD_TYPE_DEF_LAYER_TYPES_ITMH,
    DBAL_FIELD_TYPE_DEF_LAYER_TYPES_ITMH_JR1,
    /** 
     * Identifier of the load-balancing client (user of a crc-function). Currently, there are 5 clients.
     * 
     */
    DBAL_FIELD_TYPE_DEF_LB_CLIENT,
    /** 
     * Identifier of CRC algorithm (one of 8) to apply for a load-balancing client
     * 
     */
    DBAL_FIELD_TYPE_DEF_LB_CRC_FUNCTION_INDEX,
    /** 
     * Value of seed to use for CRC algorithm (on one of 8 crc functions). Applied  for load-balancing
     * 
     */
    DBAL_FIELD_TYPE_DEF_LB_CRC_SEED,
    /** Enable Learning  */
    DBAL_FIELD_TYPE_DEF_LEARN_ENABLE,
    /** 
     * Resolution of the filter timer
     * 
     */
    DBAL_FIELD_TYPE_DEF_LEARN_FILTER_RES,
    DBAL_FIELD_TYPE_DEF_LEARN_FORMAT_INDEX,
    /** Learning information  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO,
    /** Learn information for asymmetric lif (basic and extended).  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO_ASYM_LIF_BASIC_EXT,
    /** Learn information for asymmetric lif using EEI.  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO_ASYM_LIF_EXT_EEI,
    /** Learn information for asymetric lif optimized  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO_ASYM_LIF_OPT,
    /** Learn information for no lif basic and symmetric lif basic  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO_NO_LIF_BASIC_SYM_LIF_BASIC,
    /** Learn information for no lif extended and symmetric lif extended  */
    DBAL_FIELD_TYPE_DEF_LEARN_INFO_NO_LIF_EXT_SYM_LIF_EXT,
    /** Learn key profile types  */
    DBAL_FIELD_TYPE_DEF_LEARN_KEY_CONTEXT,
    /** 
     * Limit to the number of entries in the LEM.
     * Limit is global for the MACT or per VSI or per in LIF.
     * 
     */
    DBAL_FIELD_TYPE_DEF_LEARN_LIMIT,
    DBAL_FIELD_TYPE_DEF_LEARN_PAYLOAD_CONTEXT,
    /** 
     * Additional global information that can be
     * added to the learn info
     */
    DBAL_FIELD_TYPE_DEF_LEARN_PAYLOAD_KEY_GEN_VAR,
    /** 
     * Identifier for a logical table in the LEM.
     * 
     */
    DBAL_FIELD_TYPE_DEF_LEM_APP_DB,
    DBAL_FIELD_TYPE_DEF_LIFETIME,
    /** Lifetime Resolution  */
    DBAL_FIELD_TYPE_DEF_LIFETIME_UNITS,
    DBAL_FIELD_TYPE_DEF_LIF_ADDITIONAL_HEADER_PROFILE,
    /** LIF extension type  */
    DBAL_FIELD_TYPE_DEF_LIF_EXTENSION_TYPE,
    DBAL_FIELD_TYPE_DEF_LIF_FWD1_CSP_1BIT_ETH_RIF_BRIDGE_FALLBACK_MODE,
    /** LIF Generic Data  */
    DBAL_FIELD_TYPE_DEF_LIF_GENERERIC_DATA,
    /** In-LIF General data  */
    DBAL_FIELD_TYPE_DEF_LIF_GENERIC_DATA,
    DBAL_FIELD_TYPE_DEF_LIF_VTT1_CSP_1BIT_MIM_NAMESPACE,
    DBAL_FIELD_TYPE_DEF_LIF_VTT4_CSP_1BIT_PWE_LEARN_NATIVE_AC_BUG_WA,
    DBAL_FIELD_TYPE_DEF_LIF_VTT4_CSP_1BIT_PWE_TAG_NAMESPACE,
    DBAL_FIELD_TYPE_DEF_LIF_VTT4_CSP_2BIT_PWE_NOF_SD_TAGS,
    DBAL_FIELD_TYPE_DEF_LIF_VTT5_CSP_1BIT_L3LIF_MC_DB_MODE,
    DBAL_FIELD_TYPE_DEF_LIF_VTT5_CSP_1BIT_L3LIF_UC_DB_MODE,
    DBAL_FIELD_TYPE_DEF_LIF_VTTX_CSP_1BIT_IPVX_GRE8_TNI_MODE,
    DBAL_FIELD_TYPE_DEF_LIF_XXXX_CSP_1BIT_L3LIF_MPLS_NAMESPACE,
    /** 
     * Context Ids for LLR Stage
     * 
     */
    DBAL_FIELD_TYPE_DEF_LLR_CONTEXT_ID,
    /** 
     * LLVP PROFILE, part of LLVP table key
     * 
     */
    DBAL_FIELD_TYPE_DEF_LLVP_PROFILE,
    /** Index of entry in OAMP_LMM_DA_NIC_TABLE  */
    DBAL_FIELD_TYPE_DEF_LMM_DA_LSB_PROFILE,
    /** Index to choose one of the 8 profiles in OAMP_LMM_DA_OUI register  */
    DBAL_FIELD_TYPE_DEF_LMM_DA_MSB_PROFILE,
    /** Should be initialized to 0, and then read only.  Will be set to 1 when first LMR packet recieved  */
    DBAL_FIELD_TYPE_DEF_LM_CNTRS_VALID,
    /** Which of the two CWs should be used for LM packet  */
    DBAL_FIELD_TYPE_DEF_LM_CW_CHOOSE,
    /** The value to put in DS field of LM request  */
    DBAL_FIELD_TYPE_DEF_LM_DS_FIELD,
    /** Different modes of Scan state updates  */
    DBAL_FIELD_TYPE_DEF_LM_MODE,
    /** Local LM count for recevied packets  */
    DBAL_FIELD_TYPE_DEF_LM_MY_RX,
    /** Local LM count for transmitted packets  */
    DBAL_FIELD_TYPE_DEF_LM_MY_TX,
    /** Remote LM count for recevied packets  */
    DBAL_FIELD_TYPE_DEF_LM_PEER_RX,
    /** Remote LM count for transmitted packets  */
    DBAL_FIELD_TYPE_DEF_LM_PEER_TX,
    /** The value of Flags.T to put into LM request packet  */
    DBAL_FIELD_TYPE_DEF_LM_T_FLAG,
    /** Loss of Continuty indication  */
    DBAL_FIELD_TYPE_DEF_LOC,
    /** Profile index of a system port for an OAM/BFD endpoint  */
    DBAL_FIELD_TYPE_DEF_LOCAL_PORT_2_SYSTEM_PORT_PROFILE,
    /** Loss of Continuty Clear mechanism enable  */
    DBAL_FIELD_TYPE_DEF_LOC_CLEAR_ENABLE,
    /** Number of packets should arrive within Lifetime for LoC clear event  */
    DBAL_FIELD_TYPE_DEF_LOC_CLEAR_LIMIT,
    /** Different states of LOC event  */
    DBAL_FIELD_TYPE_DEF_LOC_EVENT,
    /** 
     * L_2_CP_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_L_2_CP_TRAP_HANDLING_PROFILE,
    /** 
     * Learn format index types
     * 
     */
    DBAL_FIELD_TYPE_DEF_MACT_APP_DB_IDX,
    /** 
     * AppDB index options. Subset of the AppDB IDs
     * mapped to 2 bits range
     */
    DBAL_FIELD_TYPE_DEF_MACT_APP_DB_INDEX,
    /** 
     * Strength of the MAC entry for aging and transplant purposes
     * 
     */
    DBAL_FIELD_TYPE_DEF_MAC_STRENGTH,
    DBAL_FIELD_TYPE_DEF_MAC_TABLE_AGING_PROFILE,
    DBAL_FIELD_TYPE_DEF_MAC_TABLE_ENTRY_EVENT_FORWARDING_PROFILE,
    /** MAID for OAM packet (minimal)  */
    DBAL_FIELD_TYPE_DEF_MAID,
    /** 
     * The size of the Main Header in Bytes
     * 
     */
    DBAL_FIELD_TYPE_DEF_MAIN_HEADER_SIZE_IN_BYTES,
    /** 
     * Internal PP port mapped from Logical port
     * 
     */
    DBAL_FIELD_TYPE_DEF_MAPPED_PP_PORT,
    /** 
     * Maximum number of commands in DSP minus 1
     * 
     */
    DBAL_FIELD_TYPE_DEF_MAX_DSP_CMD,
    /** Highest number packet losses from a single far endpoint  */
    DBAL_FIELD_TYPE_DEF_MAX_LM_FAR,
    /** Highest number packet losses from a single near endpoint  */
    DBAL_FIELD_TYPE_DEF_MAX_LM_NEAR,
    /** Multicast-ID  */
    DBAL_FIELD_TYPE_DEF_MC_ID,
    /** 
     * The MC ID supported by the KAPS (only 17b)
     * 
     */
    DBAL_FIELD_TYPE_DEF_MC_ID_KAPS,
    /** 
     * MC_RPF_MODE (explicit,use_sip,explicit_ecmp,disable)
     * 
     */
    DBAL_FIELD_TYPE_DEF_MC_RPF_MODE,
    /** List of the available MDB macros block types.  */
    DBAL_FIELD_TYPE_DEF_MDB_BLOCK_TYPES,
    /** 
     * List of the different data bases types that
     * the MDB supports
     */
    DBAL_FIELD_TYPE_DEF_MDB_DB_TYPE,
    /** The MDB direct payload types.  */
    DBAL_FIELD_TYPE_DEF_MDB_DIRECT_PAYLOAD,
    /** The MDB EEDB phases.  */
    DBAL_FIELD_TYPE_DEF_MDB_EEDB_PHASE,
    /** The MDB tables that have an EMP(aging).  */
    DBAL_FIELD_TYPE_DEF_MDB_EMP_TABLE,
    /** 
     * The MDB physical tables.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MDB_PHYSICAL_TABLE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_MDL,
    /** Search result for OAM endpoints with a specific MDL in a LIF  */
    DBAL_FIELD_TYPE_DEF_MDL_MP_TYPE,
    /** 0 - Do not measure the next received SLR  */
    DBAL_FIELD_TYPE_DEF_MEASURE_NEXT_RECEIVED_SLR,
    DBAL_FIELD_TYPE_DEF_MEM_SOFT_ERR,
    /** Num of banks in MEP-DB.  */
    DBAL_FIELD_TYPE_DEF_MEP_DB_BANK,
    /** TCAM keys for MEP generated packet type  */
    DBAL_FIELD_TYPE_DEF_MEP_GENERATED,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_MEP_ID,
    /** MEP PE profile, may be used by OAMP-PE for program selection and other variables.  */
    DBAL_FIELD_TYPE_DEF_MEP_PE_PROFILE,
    /** alternate MEP_PE_PROFILE naming, used by outer modules  */
    DBAL_FIELD_TYPE_DEF_MEP_PE_PROFILE_SW,
    /** MEP profile, points to entry that contains more endpoint properties (most LM/DM).  */
    DBAL_FIELD_TYPE_DEF_MEP_PROFILE,
    /** TCAM keys for MEP generated packet type  */
    DBAL_FIELD_TYPE_DEF_MEP_RESPONSE,
    /** MERGE action  */
    DBAL_FIELD_TYPE_DEF_MERGE_INST,
    /** 
     * shared memory source types:
     * crps/ingressMeter/egressMeter
     */
    DBAL_FIELD_TYPE_DEF_METER_CRPS_SMEM_SRC_TYPES,
    /** Ingress meter DP profile  */
    DBAL_FIELD_TYPE_DEF_METER_DP_PROFILE,
    /** HW DP colors mapping  */
    DBAL_FIELD_TYPE_DEF_METER_INTERNAL_COLOR_MAPPING,
    /** 
     * Minimum size of a DSP. Pad with zeros if the
     * DSP is shorter.
     */
    DBAL_FIELD_TYPE_DEF_MIN_DSP_SIZE,
    /** Index of entry in BFD interval table  */
    DBAL_FIELD_TYPE_DEF_MIN_INTERVAL_PROFILE,
    /** MIP with a higher MDL than in OAM packet exists in LIF  */
    DBAL_FIELD_TYPE_DEF_MIP_ABOVE_MDL,
    DBAL_FIELD_TYPE_DEF_MIRROR_CODE,
    DBAL_FIELD_TYPE_DEF_MIRROR_DATA,
    DBAL_FIELD_TYPE_DEF_MIRROR_QUALIFIER,
    /** List of qualifiwers for IPMF1  */
    DBAL_FIELD_TYPE_DEF_MISC_FIELDS,
    /** qos model  */
    DBAL_FIELD_TYPE_DEF_MODEL_TYPE,
    /** 
     * Specific Information for MPLS Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_MPLS_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** 
     * Context in which processed label is lookep
     * up - lif or label
     */
    DBAL_FIELD_TYPE_DEF_MPLS_EXTENDED_FODO,
    DBAL_FIELD_TYPE_DEF_MPLS_EXTENDED_FORWARD_DOMAIN_TYPE,
    /** MPLS Header  */
    DBAL_FIELD_TYPE_DEF_MPLS_HEADER,
    /** MPLS Label ID  */
    DBAL_FIELD_TYPE_DEF_MPLS_LABEL,
    /** MPLS out label CMD  */
    DBAL_FIELD_TYPE_DEF_MPLS_OUT_CMD,
    /** 
     * MPLS/PWE push profile ID
     * 
     */
    DBAL_FIELD_TYPE_DEF_MPLS_PUSH_PROFILE,
    DBAL_FIELD_TYPE_DEF_MPLS_QUALIFIER_LABEL_RANGE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_MP_MAP,
    /** Output of OAM-LIF-DB, per LIF-DB-ACCESS  */
    DBAL_FIELD_TYPE_DEF_MP_PROFILE,
    /** If true, MP-Profile from OAM-LIF-DB result will be used for LIF-ACTION table. Otherwise, default MP-Profile will be used  */
    DBAL_FIELD_TYPE_DEF_MP_PROFILE_SEL,
    /** Type of the packet in relation to existing MEPs on most inner LIF  */
    DBAL_FIELD_TYPE_DEF_MP_TYPE,
    /** Mirror action profile  */
    DBAL_FIELD_TYPE_DEF_MRR_ACTION_PROFILE,
    /** packet opcode  */
    DBAL_FIELD_TYPE_DEF_MSG_TYPE,
    DBAL_FIELD_TYPE_DEF_MTU_PROFILE,
    /** Multicast priority  */
    DBAL_FIELD_TYPE_DEF_MULTICAST_PRIORITY,
    /** Mux input sources  */
    DBAL_FIELD_TYPE_DEF_MUX_SRC,
    /** Learning information  */
    DBAL_FIELD_TYPE_DEF_MY_CFM_MAC,
    /** 
     * This field maps a bit to a possible byte
     * value. 1/0 - valid/not valid
     */
    DBAL_FIELD_TYPE_DEF_MY_CFM_MAC_LSB_MAP,
    DBAL_FIELD_TYPE_DEF_MY_MAC,
    /** 
     * Enable the MyMac based EXEM.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MY_MAC_BASED_EXEM_ENABLE,
    /** 
     * Enable the MyMac based MC backbone.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MY_MAC_BASED_MC_BACKBONE_ENABLE,
    /** 
     * Enable the MyMac based UC backbone.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MY_MAC_BASED_UC_BACKBONE_ENABLE,
    /** 
     * Enable the MyMac based VRID.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MY_MAC_BASED_VRID_ENABLE,
    /** 
     * Enable the MyMac based VSI.
     * 
     */
    DBAL_FIELD_TYPE_DEF_MY_MAC_BASED_VSI_ENABLE,
    DBAL_FIELD_TYPE_DEF_MY_MAC_EXEM_DA_PROFILE,
    DBAL_FIELD_TYPE_DEF_MY_MAC_PREFIX,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_MY_MAC_TYPE,
    /** Nasid  */
    DBAL_FIELD_TYPE_DEF_NASID,
    /** ingress remarking network qos  */
    DBAL_FIELD_TYPE_DEF_NETWORK_QOS,
    /** which network qos input do we use. supprot JR2 / JR1 WA  */
    DBAL_FIELD_TYPE_DEF_NETWORK_QOS_INITIAL_SELECT,
    DBAL_FIELD_TYPE_DEF_NETWORK_QOS_IS_PRESERVE,
    /** network qos index  */
    DBAL_FIELD_TYPE_DEF_NETWORK_QOS_PIPE_PROFILE,
    /** 
     * In-LIF Next Layer Network Domain
     * 
     */
    DBAL_FIELD_TYPE_DEF_NEXT_LAYER_NETWORK_DOMAIN,
    /** 
     * next layer qualifier field
     * 
     */
    DBAL_FIELD_TYPE_DEF_NEXT_LAYER_QUALIFIER,
    /** IP next protocol  */
    DBAL_FIELD_TYPE_DEF_NEXT_PROTOCOL,
    /** 
     * ILKN over Fabric indication. specify whether
     * ILKN Phys are taken from NIF or Fabric.
     */
    DBAL_FIELD_TYPE_DEF_NIF_ILKN_FABRIC_NIF_SELECT,
    /** 
     * Select the amount of segements to use. Segments are a
     * resource shared between all ports of the ILKN core.
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_ILKN_SEGMENTS_NUMBER,
    /** 
     * Select which ILKN segements to use. Segments are a
     * resource shared between all ports of the ILKN core.
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_ILKN_SEGMENTS_SELECTION,
    /** MAC operation mode  */
    DBAL_FIELD_TYPE_DEF_NIF_MAC_MODE,
    /** 
     * NIF reverse logic specifically for PM lanes
     * power down
     */
    DBAL_FIELD_TYPE_DEF_NIF_PM_RESET_REVERSE_LOGIC,
    /** NIF Port  */
    DBAL_FIELD_TYPE_DEF_NIF_PORT,
    /** 
     * Priority Drop (PRD) port header type.
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_PRD_PORT_TYPE,
    /** 
     * NIF Priority-Drop (PRD) Priorities
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_PRD_PRIORITY,
    /** 
     * PRD Parser TCAM key offsets base.
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_PRD_TCAM_KEY_OFFSET_BASE,
    /** 
     * NIF reverse logic for reset
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_RESET_REVERSE_LOGIC,
    /** 
     * NIF Scheduler Priorities
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_SCH_PRIORITY,
    /** NIF Scheduler Weights  */
    DBAL_FIELD_TYPE_DEF_NIF_SCH_WEIGHT,
    /** 
     * SyncE reference clk block ID
     * 
     */
    DBAL_FIELD_TYPE_DEF_NIF_SYNCE_CLK_BLK_ID,
    /** 
     * Number of Entries in Layer to use
     * 
     */
    DBAL_FIELD_TYPE_DEF_NOF_ENTRIES_IN_LAYER,
    /** 
     * Number of Entries to Shift
     * 
     */
    DBAL_FIELD_TYPE_DEF_NOF_ENTRIES_TO_SHIFT,
    /** 
     * Number of ETPS Entries to Shift
     * 
     */
    DBAL_FIELD_TYPE_DEF_NOF_ETPS_TO_SHIFT,
    /** Number of MEPs with higher MDL than packet in LIF  */
    DBAL_FIELD_TYPE_DEF_NOF_MEP_ABOVE_MDL,
    /** Number of MEPs with lower MDL than packet in LIF  */
    DBAL_FIELD_TYPE_DEF_NOF_MEP_BELOW_MDL,
    /** Port scheduler priorities  */
    DBAL_FIELD_TYPE_DEF_NOF_PS_PRIORITIES,
    /** Number of LIFs with LM-MEP is set  */
    DBAL_FIELD_TYPE_DEF_NOF_VALID_LM_LIFS,
    /** Encapsulation profile.  0 - no VLAN tags  */
    DBAL_FIELD_TYPE_DEF_NOF_VLAN_TAGS,
    /** 
     * NON_AUTH_8021X_TRAP_HANDLING_PROFILE
     * 
     */
    DBAL_FIELD_TYPE_DEF_NON_AUTH_8021X_TRAP_HANDLING_PROFILE,
    /** 
     * Specific Information for GENEVE Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_NO_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    DBAL_FIELD_TYPE_DEF_NWK_HEADER_APPEND_SIZE,
    /** 
     * 
     * 
     */
    DBAL_FIELD_TYPE_DEF_NWK_LB_KEY,
    DBAL_FIELD_TYPE_DEF_NWK_QOS,
    DBAL_FIELD_TYPE_DEF_NWK_QOS_IDX,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_OAMP_DESTINATION,
    /** Index of quarter entry on OAMP MEP DB table.  The first 8 banks are accessed with OAM-ID.  */
    DBAL_FIELD_TYPE_DEF_OAMP_ENTRY_ID,
    /** Format of timestamp to use in Tx packet  */
    DBAL_FIELD_TYPE_DEF_OAMP_ERROR_TYPE,
    DBAL_FIELD_TYPE_DEF_OAMP_FORMATS,
    /** Index of OAMP MEP DB entry.Same is used to access UMC table as well  */
    DBAL_FIELD_TYPE_DEF_OAMP_MEP_DB_INDEX,
    /** The supported types of BFD/OAM in OAMP  */
    DBAL_FIELD_TYPE_DEF_OAMP_MEP_TYPE,
    /** Instruction address  */
    DBAL_FIELD_TYPE_DEF_OAMP_PE_INSTRUCT_INDEX,
    /** Program index  */
    DBAL_FIELD_TYPE_DEF_OAMP_PE_PROGRAM,
    /** PROGRAM naming  */
    DBAL_FIELD_TYPE_DEF_OAMP_PE_PROGRAM_ENUM,
    /** Context in which processed packet looks up the the program  */
    DBAL_FIELD_TYPE_DEF_OAMP_PE_PROG_TCAM,
    /** TCAM naming  */
    DBAL_FIELD_TYPE_DEF_OAMP_PE_PROG_TCAM_ENUM,
    DBAL_FIELD_TYPE_DEF_OAM_CLASSIFIER_FORMATS,
    /** Counter disable indication for OAM resolved counters  */
    DBAL_FIELD_TYPE_DEF_OAM_COUNTER_DISABLE,
    /** Counter Offset in OAM packets according start of OAM header  */
    DBAL_FIELD_TYPE_DEF_OAM_COUNTER_STAMP_OFFSET,
    DBAL_FIELD_TYPE_DEF_OAM_DATA,
    /** Signals MultiCast packet  */
    DBAL_FIELD_TYPE_DEF_OAM_DA_IS_MC,
    /** OAM sub-type  */
    DBAL_FIELD_TYPE_DEF_OAM_DIRECTION,
    /** OAM key base for OAM-LIF-DB accesses  */
    DBAL_FIELD_TYPE_DEF_OAM_EG_KEY_BASE_SELECT,
    /** Endpoint ID equivalent to bcm_oam_endpoint_t  */
    DBAL_FIELD_TYPE_DEF_OAM_ENDPOINT_ID,
    /** Convergence of all flags of endpoint(FLAGS,FLAGS2,OPCODE_FLAGS,LM_FLAGS)  */
    DBAL_FIELD_TYPE_DEF_OAM_ENDPOINT_SW_STATE_FLAGS,
    /** OAM format type used in OAM channel type table  */
    DBAL_FIELD_TYPE_DEF_OAM_FORMAT_TYPE,
    /** OAM group id  */
    DBAL_FIELD_TYPE_DEF_OAM_GROUP_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_ID,
    /** Disable Metering  */
    DBAL_FIELD_TYPE_DEF_OAM_INGRESS_METER_DISABLE,
    /** Signals that an UP-MEP was hit  */
    DBAL_FIELD_TYPE_DEF_OAM_INGRESS_UP_MEP,
    /** OAM key base for OAM-LIF-DB accesses  */
    DBAL_FIELD_TYPE_DEF_OAM_ING_KEY_BASE_SELECT,
    /** Signals that processed packet is injected packet  */
    DBAL_FIELD_TYPE_DEF_OAM_INJECT,
    /** OAM Internal Opcodes  */
    DBAL_FIELD_TYPE_DEF_OAM_INTERNAL_OPCODE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_KEY_BASE,
    /** OAM key prefix for OAM-LIF-DB accesses  */
    DBAL_FIELD_TYPE_DEF_OAM_KEY_PREFIX,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF,
    /** Access number to OAM-LIF-DB. Possible values: 0, 1, or 2  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF_DB_ACCESS,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF_PREFIX,
    DBAL_FIELD_TYPE_DEF_OAM_LIF_SET,
    /** First OAM LIF is valid for LM  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF_VALID_0,
    /** Second OAM LIF is valid for LM  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF_VALID_1,
    /** Third OAM LIF is valid for LM  */
    DBAL_FIELD_TYPE_DEF_OAM_LIF_VALID_2,
    /** Interface Index for counter read  */
    DBAL_FIELD_TYPE_DEF_OAM_LM_COUNTER_READ_IDX_SEL,
    /** Type of OAM Destination MAC  */
    DBAL_FIELD_TYPE_DEF_OAM_MAC_DA_TYPE,
    /** OAM Maintenance Association Identifier  */
    DBAL_FIELD_TYPE_DEF_OAM_MAID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_METER_DISABLE,
    /** Signals that MAC equals MEP's MAC  */
    DBAL_FIELD_TYPE_DEF_OAM_MY_CFM_MAC,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_OFFSET,
    /** OAM Y1731-Header opcode  */
    DBAL_FIELD_TYPE_DEF_OAM_OPCODE,
    /** Priority Map for Egress TC to OAM_PCP conversion  */
    DBAL_FIELD_TYPE_DEF_OAM_PRIORITY_MAP_PROFILE,
    /** OAM process action  */
    DBAL_FIELD_TYPE_DEF_OAM_PROCESS_ACTION,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_STAMP_OFFSET,
    DBAL_FIELD_TYPE_DEF_OAM_SUB_TYPE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_UP_MEP,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_OAM_YOUR_DISCR,
    DBAL_FIELD_TYPE_DEF_OBSERVATION_DOMAIN,
    /** Odd or Even composite  */
    DBAL_FIELD_TYPE_DEF_ODD_EVEN_MODE,
    /** OEM App DB Value  */
    DBAL_FIELD_TYPE_DEF_OEM_APP_DB_VAL,
    /** Different types of LM/DM offloaded OAM MEPs  */
    DBAL_FIELD_TYPE_DEF_OFFLOADED_MEP_TYPE_SUFFIX,
    /** OLP command types  */
    DBAL_FIELD_TYPE_DEF_OLP_COMMAND,
    /** OLP command types  */
    DBAL_FIELD_TYPE_DEF_OLP_COMMAND_DESTINATION,
    /** Jericho OLP command types  */
    DBAL_FIELD_TYPE_DEF_OLP_COMMAND_JR,
    /** 
     * Header wrapping the OLP DSP commands
     * 
     */
    DBAL_FIELD_TYPE_DEF_OLP_DSP_HEADER,
    /** OP3 MUX select signal  */
    DBAL_FIELD_TYPE_DEF_OP3_SEL,
    /** Bitmap defining which opcodes are prepended with the data entry  */
    DBAL_FIELD_TYPE_DEF_OPCODES_TO_PREPEND,
    /** OAM Opcode for count index  */
    DBAL_FIELD_TYPE_DEF_OPCODE_FOR_COUNT_INDEX,
    /** Y1731 opcode MDL to be added to OAMP_MEP_DB.mdl  */
    DBAL_FIELD_TYPE_DEF_OPCODE_MDL,
    /** Y1731 opcode transmission rate.  */
    DBAL_FIELD_TYPE_DEF_OPCODE_RATE,
    /** Types of configurable Opcodes  */
    DBAL_FIELD_TYPE_DEF_OPCODE_TYPE,
    /** Select signal for OP1/OP2 mux  */
    DBAL_FIELD_TYPE_DEF_OP_SEL,
    DBAL_FIELD_TYPE_DEF_OUT_LIF,
    /** 
     * Size of OutLif Extention
     * 
     */
    DBAL_FIELD_TYPE_DEF_OUT_LIF_EXT_SIZE,
    /** OUT_LIF ORIENTATION  */
    DBAL_FIELD_TYPE_DEF_OUT_LIF_ORIENTATION,
    DBAL_FIELD_TYPE_DEF_OUT_LIF_PROFILE,
    /** Mapping from outlif profile to same intf filter  */
    DBAL_FIELD_TYPE_DEF_OUT_LIF_SAME_INTERFACE_FILTER,
    /** PP_PMF_DATA. Per in PP port data in egress.  */
    DBAL_FIELD_TYPE_DEF_OUT_PP_PORT_PMF_DATA,
    DBAL_FIELD_TYPE_DEF_OUT_RIF,
    DBAL_FIELD_TYPE_DEF_PACKET_IS_APPLET,
    /** Incoming packet has BFD structure  */
    DBAL_FIELD_TYPE_DEF_PACKET_IS_BFD,
    DBAL_FIELD_TYPE_DEF_PACKET_IS_BIER,
    /** 
     * if set, packet_is_bier is set to zero
     * 
     */
    DBAL_FIELD_TYPE_DEF_PACKET_IS_BIER_INVALID,
    /** 
     * Designates when a Compatible MC procedure
     * found a match
     */
    DBAL_FIELD_TYPE_DEF_PACKET_IS_COMPATIBLE_MC,
    DBAL_FIELD_TYPE_DEF_PACKET_IS_IEEE1588,
    /** Is packet identified as an OAM packet  */
    DBAL_FIELD_TYPE_DEF_PACKET_IS_OAM,
    /** 
     * Packet Size compensation
     * 
     */
    DBAL_FIELD_TYPE_DEF_PACKET_SIZE_COMPENSATION,
    /** PCP field  */
    DBAL_FIELD_TYPE_DEF_PCP,
    /** VLAN tag pcp and dei  */
    DBAL_FIELD_TYPE_DEF_PCP_DEI,
    /** pcp dei mapping from from TC-DP/Nwk-QoS (0) or Explicit (1)  */
    DBAL_FIELD_TYPE_DEF_PCP_DEI_MAP_TYPE,
    /** ingress vlan edit pcp dei qos profile  */
    DBAL_FIELD_TYPE_DEF_PCP_DEI_QOS_PROFILE,
    /** PD result MSBs  */
    DBAL_FIELD_TYPE_DEF_PD_RESULT_TYPE,
    /** PEER_GPORT  */
    DBAL_FIELD_TYPE_DEF_PEER_GPORT,
    /** Pem Context Selection  */
    DBAL_FIELD_TYPE_DEF_PEM_CS_VAR,
    /** Select where to take the TC for PG mapping  */
    DBAL_FIELD_TYPE_DEF_PG_MAP_TC_SELECT,
    /** PLLs in the system  */
    DBAL_FIELD_TYPE_DEF_PLL1_ID,
    /** PLLs in the system  */
    DBAL_FIELD_TYPE_DEF_PLL3_ID,
    DBAL_FIELD_TYPE_DEF_PMF_COUNTER_PROFILE,
    DBAL_FIELD_TYPE_DEF_PMF_COUNTER_PTR,
    /** Lookup type (TCAM, Direct,EXEM,State-Table)  */
    DBAL_FIELD_TYPE_DEF_PMF_LOOKUP_TYPE,
    DBAL_FIELD_TYPE_DEF_PMF_OAM_ID,
    DBAL_FIELD_TYPE_DEF_PMF_PROFILE,
    /** PM ID  */
    DBAL_FIELD_TYPE_DEF_PM_ID,
    /** 
     * FHEI-Type MPLS, size 3B field
     * POP-Size-In-Bytes
     */
    DBAL_FIELD_TYPE_DEF_POP_SIZE_IN_BYTES,
    /** Number of core to which the local port belongs  */
    DBAL_FIELD_TYPE_DEF_PORT_CORE,
    DBAL_FIELD_TYPE_DEF_PORT_ID,
    /** Index to array of port schedulers (PS is a queue group of 8 Q-Pairs)  */
    DBAL_FIELD_TYPE_DEF_PORT_SCHEDULER,
    /** Enable port status TLV injection  */
    DBAL_FIELD_TYPE_DEF_PORT_STATUS_TLV_EN,
    /** Value of port status TLV  */
    DBAL_FIELD_TYPE_DEF_PORT_STATUS_TLV_VAL,
    /** 
     * Port Termination PTC Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_PORT_TERMINATION_PTC_PROFILE,
    /** 
     * POST EVEC - indicates whether to check VLAN
     * membership and use OUTER/INNER VLAN
     */
    DBAL_FIELD_TYPE_DEF_POST_EVE_VLAN_MEMBERSHIP,
    /** 
     * POST EVEC - indicates whether to execute
     * mirroring and push, or not
     */
    DBAL_FIELD_TYPE_DEF_POST_EVE_VLAN_MIRROR,
    /** Size of PPH BASE HEADER  */
    DBAL_FIELD_TYPE_DEF_PPH_BASE_SIZE,
    DBAL_FIELD_TYPE_DEF_PPH_RESERVED,
    /** PPH type  */
    DBAL_FIELD_TYPE_DEF_PPH_TYPE,
    DBAL_FIELD_TYPE_DEF_PPH_VALUE,
    /** 
     * PP Block ID
     * 
     */
    DBAL_FIELD_TYPE_DEF_PP_ASIC_BLOCK,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_PP_CUD,
    /** PP Drop Reason  */
    DBAL_FIELD_TYPE_DEF_PP_DROP_REASON,
    /** 
     * Internal PP port mapped from Logical port
     * 
     */
    DBAL_FIELD_TYPE_DEF_PP_PORT,
    /** Processed MPLS Label ID  */
    DBAL_FIELD_TYPE_DEF_PROCESSED_LABEL,
    /** Different modes of RX state updates  */
    DBAL_FIELD_TYPE_DEF_PROFILE_RX_STATE_UPDATE_EN,
    /** Different modes of Scan state updates  */
    DBAL_FIELD_TYPE_DEF_PROFILE_SCAN_STATE_UPDATE_EN,
    /** 
     * Bit values we need for
     * Disable/Match/Missmatch
     */
    DBAL_FIELD_TYPE_DEF_PROGRAMMABLE_TRAP_ENABLE,
    DBAL_FIELD_TYPE_DEF_PROPAGATION_PROF,
    /** Proprietary Header - JR2 format  */
    DBAL_FIELD_TYPE_DEF_PROPRIETARY_HEADER,
    /** Proprietary Header - JR1 format  */
    DBAL_FIELD_TYPE_DEF_PROPRIETARY_JR1_HEADER,
    /** 
     * Indicate protection of the ECMP/FEC.
     * 
     */
    DBAL_FIELD_TYPE_DEF_PROTECTION_ENABLE,
    /** 
     * Use primary or secondary path
     * 
     */
    DBAL_FIELD_TYPE_DEF_PROTECTION_PATH,
    /** Protection Pointer  */
    DBAL_FIELD_TYPE_DEF_PROTECTION_POINTER,
    /** Protocol trap arguments  */
    DBAL_FIELD_TYPE_DEF_PROTOCOL_TRAP_ARGS,
    /** 
     * Protocol trap handling profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_PROTOCOL_TRAP_PROFILE,
    /** 
     * Index to trap-handling-table for different
     * protocol trap types
     */
    DBAL_FIELD_TYPE_DEF_PROTOCOL_TYPE,
    /** Context Ids for PRP2 Stage  */
    DBAL_FIELD_TYPE_DEF_PRP2_CONTEXT_ID,
    /** 
     * PRP Context Port Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_PRP_CONTEXT_PORT_PROFILE,
    /** PRT Virtual for CoE  */
    DBAL_FIELD_TYPE_DEF_PRTTCAM_KEY_VP_COE,
    /** PRT Virtual for SPA  */
    DBAL_FIELD_TYPE_DEF_PRTTCAM_KEY_VP_SPA,
    DBAL_FIELD_TYPE_DEF_PRT_KBR_INFO_HALF,
    DBAL_FIELD_TYPE_DEF_PRT_QUALIFIER,
    /** PRT Recycle Profile  */
    DBAL_FIELD_TYPE_DEF_PRT_RECYCLE_PROFILE,
    /** PRT Selection Mode  */
    DBAL_FIELD_TYPE_DEF_PRT_SELECT_MODE,
    DBAL_FIELD_TYPE_DEF_PRT_VP_FORMATS,
    /** 
     * Port Termination Context
     * 
     */
    DBAL_FIELD_TYPE_DEF_PTC,
    /** PTCH 2 fields  */
    DBAL_FIELD_TYPE_DEF_PTCH_2,
    /** ITMH base fields  */
    DBAL_FIELD_TYPE_DEF_PTCH_HEADER,
    /** PTCH field that holds information on next header  */
    DBAL_FIELD_TYPE_DEF_PTCH_PARSER_PROGRAM_CONTROL,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_PTC_PROFILE,
    /** 
     * PTP 1588 TP command enum
     * 
     */
    DBAL_FIELD_TYPE_DEF_PTP_1588_MSG_TYPE,
    /** 
     * PTP 1588 TP command enum
     * 
     */
    DBAL_FIELD_TYPE_DEF_PTP_TP_COMMAND,
    /** Index of Punt Profile of Good packets  */
    DBAL_FIELD_TYPE_DEF_PUNT_GOOD_PROFILE,
    /** TCAM keys for PUNT packet type  */
    DBAL_FIELD_TYPE_DEF_PUNT_PACKET,
    /** Index of Punt Profile  */
    DBAL_FIELD_TYPE_DEF_PUNT_PROFILE,
    DBAL_FIELD_TYPE_DEF_QOS_ACTION,
    /** QOS Context selection cam priority  */
    DBAL_FIELD_TYPE_DEF_QOS_CAM_PRIORITY,
    /** 
     * QOS Context-Selection profile, mapped from QOS profile.
     * Used as indicator for some QOS priority mapping.
     * For example: In case L3 packet bridge, the profile can indicate if to select between L3
     * QOS properites (DSCP) or L2 QOS properties (PCP)
     */
    DBAL_FIELD_TYPE_DEF_QOS_CS_PROFILE,
    DBAL_FIELD_TYPE_DEF_QOS_CS_PROFILE_MASK,
    /** QOS propagation profile  */
    DBAL_FIELD_TYPE_DEF_QOS_DP_SELECT,
    DBAL_FIELD_TYPE_DEF_QOS_FIELD_OFFSET,
    DBAL_FIELD_TYPE_DEF_QOS_FIELD_SIZE,
    /** explicit-remark-profile  */
    DBAL_FIELD_TYPE_DEF_QOS_FWD_PLUS_ONE_EXPLICIT_REMARK_PROFILE,
    DBAL_FIELD_TYPE_DEF_QOS_INDEX,
    /** Indicates the ingress application type: PHB/REMARKING/ECN/TTL  */
    DBAL_FIELD_TYPE_DEF_QOS_INGRESS_APP_TYPE,
    /** 
     * The QOS internal MAP-ID. The internal MAP-ID is the ID of the mapping table between QOS
     * priority fields to QOS action fields. The decision of the ID is according to QOS-profile
     * (derive usually from logical-interface and mapping-type (derived usually from packet-header
     * and internal signals). For example, for the case of PHB, the internal map id is used as the
     * actual mapping table to map QOS priority header (e.g. TOS) to TC,DP
     */
    DBAL_FIELD_TYPE_DEF_QOS_INT_MAP_ID,
    DBAL_FIELD_TYPE_DEF_QOS_INT_MAP_KEY,
    /** 
     * Indicates the number of bits the QOS_INT_MAP_KEY. For example, in case the map key is PCP,
     * DEI then the key size should be 4
     */
    DBAL_FIELD_TYPE_DEF_QOS_INT_MAP_KEY_SIZE,
    DBAL_FIELD_TYPE_DEF_QOS_KEY_OFFSET,
    /** mapped fwd code to Nwk-Qos-type  */
    DBAL_FIELD_TYPE_DEF_QOS_LAYER_PROTOCOL,
    /** qos model  */
    DBAL_FIELD_TYPE_DEF_QOS_MODEL,
    DBAL_FIELD_TYPE_DEF_QOS_OPCODE,
    /** 
     * given packet-header (Parser information) and QOS profile properties (QOS CS profile).
     * The decision of packet type later decide which QOS field (in header or internal signal)
     * to use
     */
    DBAL_FIELD_TYPE_DEF_QOS_PACKET_TYPE,
    /** QOS profile is used for Mapping Logical Interface to QOS propertie  */
    DBAL_FIELD_TYPE_DEF_QOS_PROFILE,
    /** QOS Propagation strength  */
    DBAL_FIELD_TYPE_DEF_QOS_PROPAG_STRENGTH,
    /** 
     * Select the action resolution table from QOS mapping: Either to resolve the result
     * as an explicit value or from a mapped value
     */
    DBAL_FIELD_TYPE_DEF_QOS_RESOLUTION_MODE,
    /** 
     * QoS Var Type (will be deprecated - use
     * PF_ETPP_QOS_VAR_TYPE instead)
     */
    DBAL_FIELD_TYPE_DEF_QOS_VAR_TYPE,
    /** Egress Qpair  */
    DBAL_FIELD_TYPE_DEF_QPAIR,
    /** 
     * Quarantine reason for buffer in quarantine
     * FIFO
     */
    DBAL_FIELD_TYPE_DEF_QUARANTINE_REASON,
    /** Sub interface tag type.  */
    DBAL_FIELD_TYPE_DEF_QUEUE_CREDIT_REQUEST_STATE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_RCH_INLIF_BIFT_ID,
    /** RCI biasing mode definition  */
    DBAL_FIELD_TYPE_DEF_RCI_BIASING_MODE,
    DBAL_FIELD_TYPE_DEF_RCI_LEVEL,
    /** RDI generation Method  */
    DBAL_FIELD_TYPE_DEF_RDI_GEN_METHOD,
    /** Remote Defect Indication received  */
    DBAL_FIELD_TYPE_DEF_RDI_RECEIVED,
    /** Reassembly context  */
    DBAL_FIELD_TYPE_DEF_REASSEMBLY_CONTEXT,
    /** 
     * interface types for non NIF interfaces
     * 
     */
    DBAL_FIELD_TYPE_DEF_REASSEMBLY_SPECIAL_INTERFACE_TYPE,
    /** Recycle Command  */
    DBAL_FIELD_TYPE_DEF_RECYCLE_CMD,
    /** 
     * Recycle CMD Port Termination Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_RECYCLE_CMD_PRT_PROFILE,
    /** Recycle command id  */
    DBAL_FIELD_TYPE_DEF_RECYCLE_COMMAND_ID,
    /** Keeping the previous value (0) or changing it to the new QoS variable (1)  */
    DBAL_FIELD_TYPE_DEF_REMARK_OR_PRESERVE,
    DBAL_FIELD_TYPE_DEF_REMARK_PROFILE,
    /** Remark Profile Index  */
    DBAL_FIELD_TYPE_DEF_REMARK_PROFILE_INDEX,
    /** Report Mode  */
    DBAL_FIELD_TYPE_DEF_REPORT_MODE,
    /** 
     * Special field that used for identification
     * between multiple results types in table
     */
    DBAL_FIELD_TYPE_DEF_RESULT_TYPE,
    /** 
     * RIF profile is the VSI profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_RIF_PROFILE,
    /** Number of bit of remote endpoints  */
    DBAL_FIELD_TYPE_DEF_RMEP_INDEX,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_RMEP_STATIC_DATA,
    /** ROP PACKET type, response or request  */
    DBAL_FIELD_TYPE_DEF_ROP_PACKET_TYPE,
    /** 
     * Routing Enablers profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_ROUTING_ENABLERS_PROFILE,
    DBAL_FIELD_TYPE_DEF_RPF_DST,
    DBAL_FIELD_TYPE_DEF_RPF_ECMP_GROUP,
    DBAL_FIELD_TYPE_DEF_RPF_ECMP_MODE,
    /** 
     * RPF_MODE (strict,loose,disable)
     * 
     */
    DBAL_FIELD_TYPE_DEF_RPF_MODE,
    /** TCAM keys for SAT packet type  */
    DBAL_FIELD_TYPE_DEF_SAT_PACKET,
    /** SAT payload type  */
    DBAL_FIELD_TYPE_DEF_SAT_PAYLOAD_TYPE,
    /** Saved Context Profile  */
    DBAL_FIELD_TYPE_DEF_SAVED_CONTEXT_PROFILE,
    /** 
     * Action profile DA not found index. Taken
     * from the port's info.
     */
    DBAL_FIELD_TYPE_DEF_SA_DROP_ACTION_PROFILE,
    /** CCM Source MAC MSB bits Profile  */
    DBAL_FIELD_TYPE_DEF_SA_GEN_PROFILE,
    /** credit counter configuration - set which credits to count.  */
    DBAL_FIELD_TYPE_DEF_SCH_CREDIT_COUNTER_TYPE,
    /** Flow id  */
    DBAL_FIELD_TYPE_DEF_SCH_FLOW_ID,
    /** interfcae id  */
    DBAL_FIELD_TYPE_DEF_SCH_INTERFACE_ID,
    /** 
     * The scratch_pad[floating_PD_Result] must
     * conatain LOCAL_IN_LIF_ID_AND_OR_VTEP_IDX
     * 
     */
    DBAL_FIELD_TYPE_DEF_SCRATCH_PAD,
    /** service pool 0 / 1.  */
    DBAL_FIELD_TYPE_DEF_SERVICE_POOL_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_SESSION_ID,
    /** Uniquely identifies a mesurment operation sequence of messages  */
    DBAL_FIELD_TYPE_DEF_SESSION_IDENTIFIER,
    /** Shared shaper mode  */
    DBAL_FIELD_TYPE_DEF_SHARED_SHAPER_MODE,
    /** Credit propagation order in shared shaper  */
    DBAL_FIELD_TYPE_DEF_SHARED_SHAPER_PROP_ORDER,
    /** Different types of short entry OAM MEPs  */
    DBAL_FIELD_TYPE_DEF_SHORT_BFD_ENTRY_MEP_TYPE_SUFFIX,
    /** Index of ICC based MAID  */
    DBAL_FIELD_TYPE_DEF_SHORT_ICC_INDEX,
    /** Different types of short entry OAM MEPs  */
    DBAL_FIELD_TYPE_DEF_SHORT_OAM_ENTRY_MEP_TYPE_SUFFIX,
    /** Sub interface tag type.  */
    DBAL_FIELD_TYPE_DEF_SIT_PCP_DEI_SRC,
    DBAL_FIELD_TYPE_DEF_SIT_PROFILE,
    /** 
     * Active configuration of trunk in context of
     * graceful lag modification
     */
    DBAL_FIELD_TYPE_DEF_SIT_TAG_SWAP_MODE,
    /** 
     * Active configuration of trunk in context of
     * graceful lag modification
     */
    DBAL_FIELD_TYPE_DEF_SIT_TAG_SWAP_SIZE,
    /** Sub interface tag type.  */
    DBAL_FIELD_TYPE_DEF_SIT_TAG_TYPE,
    /** Sub interface tag type.  */
    DBAL_FIELD_TYPE_DEF_SIT_VID_SRC,
    /** Sniff action profile  */
    DBAL_FIELD_TYPE_DEF_SNIF_ACTION_PROFILE,
    /** 
     * SNIF command(profile) ID
     * 
     */
    DBAL_FIELD_TYPE_DEF_SNIF_COMMAND_ID,
    /** 
     * Controls which packet to drop in case of
     * original/SNIFed packet drop
     */
    DBAL_FIELD_TYPE_DEF_SNIF_STRENGTH,
    /** 
     * SNIF supported applications
     * 
     */
    DBAL_FIELD_TYPE_DEF_SNIF_TYPE,
    /** Trap SNP code  */
    DBAL_FIELD_TYPE_DEF_SNOOP_CODE,
    DBAL_FIELD_TYPE_DEF_SNOOP_DATA,
    DBAL_FIELD_TYPE_DEF_SNOOP_PROFILE,
    DBAL_FIELD_TYPE_DEF_SNOOP_QUALIFIER,
    DBAL_FIELD_TYPE_DEF_SNOOP_STRENGTH,
    /** Snoop action profile  */
    DBAL_FIELD_TYPE_DEF_SNP_ACTION_PROFILE,
    /** Source address index  */
    DBAL_FIELD_TYPE_DEF_SOURCE_ADDRESS_INDEX,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_SOURCE_IDX,
    /** 
     * Source System Port PRT Mode
     * 
     */
    DBAL_FIELD_TYPE_DEF_SOURCE_SYSTEM_PORT_PRT_MODE,
    DBAL_FIELD_TYPE_DEF_SRC_SYS_PORT,
    /** Flags field in SRv6 base header  */
    DBAL_FIELD_TYPE_DEF_SRH_FLAGS,
    /** Last entry in SRv6 base header, indicate size of SIDs list  */
    DBAL_FIELD_TYPE_DEF_SRH_LAST_ENTRY,
    /** Routing type in SRv6 base header  */
    DBAL_FIELD_TYPE_DEF_SRH_ROUTING_TYPE,
    /** Segnemt left in SRv6 base header, indicate the next SID in list  */
    DBAL_FIELD_TYPE_DEF_SRH_SEGMENT_LEFT,
    /** Tag field in SRv6 base header  */
    DBAL_FIELD_TYPE_DEF_SRH_TAG,
    DBAL_FIELD_TYPE_DEF_SRV6_ENCAPSULATION,
    DBAL_FIELD_TYPE_DEF_SRV6_TERMINATION_TYPE,
    DBAL_FIELD_TYPE_DEF_STACKING_ROUTE_HISTORY_BITMAP,
    DBAL_FIELD_TYPE_DEF_STATE_ADDRESS_DATA,
    DBAL_FIELD_TYPE_DEF_STATE_DATA,
    /** State Table address  */
    DBAL_FIELD_TYPE_DEF_STATE_TABLE_ADDRESS,
    /** State Table address  */
    DBAL_FIELD_TYPE_DEF_STATE_TABLE_DATA,
    DBAL_FIELD_TYPE_DEF_STATISTICAL_SAMPLING,
    DBAL_FIELD_TYPE_DEF_STATISTICAL_SAMPLING_CODE,
    DBAL_FIELD_TYPE_DEF_STATISTICAL_SAMPLING_QUALIFIER,
    DBAL_FIELD_TYPE_DEF_STATISTICS_META_DATA,
    /** 
     * stat interface object id
     * 
     */
    DBAL_FIELD_TYPE_DEF_STAT_IF_OBJECT_ID,
    /** stat interface type id  */
    DBAL_FIELD_TYPE_DEF_STAT_IF_TYPE_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_STAT_MPLS,
    /** Status inforamtion CMD  */
    DBAL_FIELD_TYPE_DEF_STAT_OBJECT_CMD,
    /** 
     * Status inforamtion pointer
     * 
     */
    DBAL_FIELD_TYPE_DEF_STAT_OBJECT_ID,
    DBAL_FIELD_TYPE_DEF_STAT_OBJ_LM_READ_INDEX,
    /** 
     * Spanning Tree group, also known as Topology
     * ID
     */
    DBAL_FIELD_TYPE_DEF_STG_ID,
    /** 
     * STIF billing report metadata elements
     * 
     */
    DBAL_FIELD_TYPE_DEF_STIF_BILLING_REPORT_METADATA_ELEMENT,
    /** 
     * STIF billing input port report size
     * 
     */
    DBAL_FIELD_TYPE_DEF_STIF_BILLING_REPORT_SIZE,
    /** STIF input fifo  */
    DBAL_FIELD_TYPE_DEF_STIF_BILLING_SOURCE,
    /** STIF port instance  */
    DBAL_FIELD_TYPE_DEF_STIF_INSTANCE,
    /** 
     * STIF activate compensation per mask delta
     * types
     */
    DBAL_FIELD_TYPE_DEF_STIF_MASK_HEADER_DELTA,
    /** STIF input fifo  */
    DBAL_FIELD_TYPE_DEF_STIF_QSIZE_SOURCE,
    /** Enable STP  */
    DBAL_FIELD_TYPE_DEF_STP_ENABLE,
    /** 
     * Spanning Tree protocol state, can be block,
     * learn and forward
     */
    DBAL_FIELD_TYPE_DEF_STP_STATE,
    /** 
     * Spanning Tree group ID used in H/W, encoded
     * in BCM_STG_ID.
     */
    DBAL_FIELD_TYPE_DEF_STP_TOPOLOGY_ID,
    /** string field type  */
    DBAL_FIELD_TYPE_DEF_STRING,
    /** Statistics VSQ pointer  */
    DBAL_FIELD_TYPE_DEF_ST_VSQ_PTR,
    /** 
     * Possible values for ST_VSQ_PTR_TC_MODE
     * 
     */
    DBAL_FIELD_TYPE_DEF_ST_VSQ_PTR_TC_MODE,
    /** how the HW encode super FEC types  */
    DBAL_FIELD_TYPE_DEF_SUPER_FEC_ENCODING,
    /** 
     * ID of the SUPER FEC which stands for two FEC
     * instances.
     */
    DBAL_FIELD_TYPE_DEF_SUPER_FEC_ID,
    /** Master or Slave SyncE  */
    DBAL_FIELD_TYPE_DEF_SYNCE_INDEX,
    /** Header mode  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_HEADERS_MODE,
    DBAL_FIELD_TYPE_DEF_SYSTEM_HEADER_PROFILE_INDEX,
    DBAL_FIELD_TYPE_DEF_SYSTEM_HEADER_SIZE_ADJUST,
    /** 
     * DQCQ context in mesh mode
     * 
     */
    DBAL_FIELD_TYPE_DEF_SYSTEM_MESH_CONTEXT,
    /** System port  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_PORT,
    /** Defines what action to do when aging period expires.  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_RED_AGING_MODE,
    /** System RED Q-Size index  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_RED_Q_SIZE,
    /** Defines types of resources counted in system RED.  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_RED_RESOURCE_TYPE,
    /** Possible Keys for PMF  */
    DBAL_FIELD_TYPE_DEF_SYSTEM_TRAFFIC_STAGE,
    /** 
     * System Header Generation Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_SYS_HDR_GENERATION_PROFILE,
    /** Tag Swap Mode  */
    DBAL_FIELD_TYPE_DEF_TAG_SWAP_MODE,
    DBAL_FIELD_TYPE_DEF_TAIL_EDIT_PROFILE,
    /** 
     * Traffic class for the copy
     * 
     */
    DBAL_FIELD_TYPE_DEF_TC,
    /** Owner of the TCAM bank  */
    DBAL_FIELD_TYPE_DEF_TCAM_BANK_BLOCK_OWNER,
    DBAL_FIELD_TYPE_DEF_TCAM_IDENTIFICATION_FORMATS,
    /** TC group. A group of Egress Qpairs  */
    DBAL_FIELD_TYPE_DEF_TCG_INDEX,
    /** traffic class  */
    DBAL_FIELD_TYPE_DEF_TCM,
    /** TCP ctl  */
    DBAL_FIELD_TYPE_DEF_TCP_CTL,
    DBAL_FIELD_TYPE_DEF_TC_MAP_PROFILE,
    DBAL_FIELD_TYPE_DEF_TEMPLATE_ID,
    /** 
     * Termination Context Port Profile
     * 
     */
    DBAL_FIELD_TYPE_DEF_TERMINATION_CONTEXT_PORT_PROFILE,
    /** In-LIF Termination Mode  */
    DBAL_FIELD_TYPE_DEF_TERMINATION_TYPE,
    /** Context Ids for TERM Stage  */
    DBAL_FIELD_TYPE_DEF_TERM_CONTEXT_ID,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_TEST_ID,
    /** Format of timestamp to use in Tx packet  */
    DBAL_FIELD_TYPE_DEF_TIMESTAMP_FORMAT,
    DBAL_FIELD_TYPE_DEF_TIME_STAMP,
    /** 
     * TM Action Type, extracted from System Header
     * 
     */
    DBAL_FIELD_TYPE_DEF_TM_ACTION_TYPE,
    /** TM port  */
    DBAL_FIELD_TYPE_DEF_TM_PORT,
    /** PTC_KEY_GEN_VAR or PTC_KEY_GEN_VAR use as data per TM port (PTC in ingress out TM port in egress)  */
    DBAL_FIELD_TYPE_DEF_TM_PORT_PMF_DATA,
    DBAL_FIELD_TYPE_DEF_TM_PROFILE,
    /** TNI field  */
    DBAL_FIELD_TYPE_DEF_TNI,
    /** 
     * The time format transferred by the
     * Time-of-Day block.
     */
    DBAL_FIELD_TYPE_DEF_TOD_FORMAT,
    /** Type of service for OAM/BFD  */
    DBAL_FIELD_TYPE_DEF_TOS,
    /** TPID value  */
    DBAL_FIELD_TYPE_DEF_TPID,
    /** 
     * The index to access the TPID table
     * 
     */
    DBAL_FIELD_TYPE_DEF_TPID_INDEX,
    DBAL_FIELD_TYPE_DEF_TRACE_PACKET_ACT,
    /** Trace Probability  */
    DBAL_FIELD_TYPE_DEF_TRACE_PROBABILITY,
    /** Traffic type of cast  */
    DBAL_FIELD_TYPE_DEF_TRAFFIC_CAST,
    /** Trap Profile number  */
    DBAL_FIELD_TYPE_DEF_TRAP_ACTION_PROFILE,
    /** Context Ids for TRAP Stage  */
    DBAL_FIELD_TYPE_DEF_TRAP_CONTEXT_ID,
    /** 
     * Determines whether a Trap should be enabled
     * 
     */
    DBAL_FIELD_TYPE_DEF_TRAP_ENABLE,
    /** Trap FWD strength  */
    DBAL_FIELD_TYPE_DEF_TRAP_FWD_STRENGTH,
    DBAL_FIELD_TYPE_DEF_TRAP_QUALIFIER,
    /** Trap SNP strength  */
    DBAL_FIELD_TYPE_DEF_TRAP_SNP_STRENGTH,
    /** Pipe Mapped TTL_Variable  */
    DBAL_FIELD_TYPE_DEF_TTL,
    /** 
     * TTL Action Profile Value
     * 
     */
    DBAL_FIELD_TYPE_DEF_TTL_ACTION_PROFILE_VALUE,
    /** 
     * If set, the FWD TTL decrement is disabled
     * 
     */
    DBAL_FIELD_TYPE_DEF_TTL_DECREMENT_DISABLE,
    /** TLL and EXP Label Index  */
    DBAL_FIELD_TYPE_DEF_TTL_EXP_LABEL_INDEX,
    /** Enable STP  */
    DBAL_FIELD_TYPE_DEF_TTL_INHERITANCE,
    /** 
     * TTL inheritance supported modes
     * 
     */
    DBAL_FIELD_TYPE_DEF_TTL_MODE,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_TTL_MODEL,
    DBAL_FIELD_TYPE_DEF_TTL_PIPE_ENABLE,
    /** Enable STP  */
    DBAL_FIELD_TYPE_DEF_TTL_PIPE_MAP,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_TTL_PIPE_PROFILE,
    /** TCAM keys for protection packet type  */
    DBAL_FIELD_TYPE_DEF_TXO_PACKET,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_T_ID,
    DBAL_FIELD_TYPE_DEF_UDH_BASE_COMBINATIONS,
    DBAL_FIELD_TYPE_DEF_UDH_BASE_UDH_DATA_TYPE,
    DBAL_FIELD_TYPE_DEF_UDH_DATA_TYPE_TO_DATA_SIZE,
    /** 
     * Mapping type to size(for FlexUDH type)
     * 
     */
    DBAL_FIELD_TYPE_DEF_UDH_MAP_TYPE_TO_LENGTH,
    /** 
     * UDH Type, there are 4 UDH types (0,1,2,3)
     * 
     */
    DBAL_FIELD_TYPE_DEF_UDH_TYPE,
    /** 
     * Specific Information for UDP Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_UDP_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** UDP destination port values  */
    DBAL_FIELD_TYPE_DEF_UDP_PORT,
    /** 
     * Unsigned integer field type (default type)
     * 
     */
    DBAL_FIELD_TYPE_DEF_UINT,
    /** 
     * Unsigned integer field type with 'bitwise
     * not' encoding, means HW_value=~SW_value
     */
    DBAL_FIELD_TYPE_DEF_UINT_INV,
    /** UMC table for Y1731 OAM with ICC based MAID- bytes 6:10 of MA name.  */
    DBAL_FIELD_TYPE_DEF_UMC,
    /** Profile to use in the PTCH-2 Opaque-PT-Attr field in case of up mep injection  */
    DBAL_FIELD_TYPE_DEF_UP_PTCH_OPAQUE_PT_ATTR_PROFILE,
    DBAL_FIELD_TYPE_DEF_USER_HEADER,
    DBAL_FIELD_TYPE_DEF_USER_HEADER_TYPE,
    /** 
     * Unsigned integer field type (default type)
     * 
     */
    DBAL_FIELD_TYPE_DEF_USHORT,
    /** 
     * This field is encoded with valid indication
     * (shifting 1b left and adding 1 as LSB
     */
    DBAL_FIELD_TYPE_DEF_VALID_INDICATION,
    /** GACH channel type  */
    DBAL_FIELD_TYPE_DEF_VCCV_CHANNEL_TYPE,
    DBAL_FIELD_TYPE_DEF_VIRTUAL_EGRESS_POINTED,
    DBAL_FIELD_TYPE_DEF_VISIBILITY,
    DBAL_FIELD_TYPE_DEF_VISIBILITY_CLEAR,
    /** 
     * Group of PP ports that share the same
     * semantic space of VLAN tags
     */
    DBAL_FIELD_TYPE_DEF_VLAN_DOMAIN,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_CMD,
    /** 
     * Index to a VLAN Edit commands table - IVEC
     * or EVEC
     */
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_CMD_INDEX,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_DEI_1,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_DEI_2,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_PCP_1,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_PCP_2,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_PCP_DEI_1,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_PCP_DEI_2,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_PROFILE,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_VID_1,
    DBAL_FIELD_TYPE_DEF_VLAN_EDIT_VID_2,
    /** VLAN tagging Identifier in the packet Ethernet header  */
    DBAL_FIELD_TYPE_DEF_VLAN_ID,
    /** 
     * Vlan membership interface used as port
     * (logical and physical) attribute for VLAN membership tables
     * 
     */
    DBAL_FIELD_TYPE_DEF_VLAN_MEMBERSHIP_IF,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_VLAN_MEMBERSHIP_INTERFACE,
    /** 
     * VLAN Membership Profile Index
     * 
     */
    DBAL_FIELD_TYPE_DEF_VLAN_MEMBERSHIP_PROFILE_INDEX,
    /** 
     * Bitmap of VLAN member domain. Each bit
     * represent the VLAN member domain ID. VLAN member
     * domain is a
     * group that mapped from the PP port or logical port (for
     * example PWE). Used as part of the VLAN
     * membership table
     * 
     */
    DBAL_FIELD_TYPE_DEF_VLAN_MEMBER_DOMAIN_BMP,
    /** Fhei Type  */
    DBAL_FIELD_TYPE_DEF_VLAN_MEMERBSHIP_FILTER_MODE,
    /** VLAN Tag size.  */
    DBAL_FIELD_TYPE_DEF_VLAN_OUTER_TAG_SIZE,
    /** Range of start outer index  */
    DBAL_FIELD_TYPE_DEF_VLAN_RANGE_INDEX,
    /** Outer range mask  */
    DBAL_FIELD_TYPE_DEF_VLAN_RANGE_MASK,
    /** MACT key format  */
    DBAL_FIELD_TYPE_DEF_VLAN_SOURCE,
    /** Virtual network identifier  */
    DBAL_FIELD_TYPE_DEF_VNI,
    /** VOQ id  */
    DBAL_FIELD_TYPE_DEF_VOQ,
    /** VOQ Rate Class Profile id  */
    DBAL_FIELD_TYPE_DEF_VOQ_RATE_CLASS,
    /** 
     * Virtual Router Forwarding
     * 
     */
    DBAL_FIELD_TYPE_DEF_VRF,
    /** Empty  */
    DBAL_FIELD_TYPE_DEF_VRID,
    DBAL_FIELD_TYPE_DEF_VRID_BITMAP,
    /** VRRP protocol group  */
    DBAL_FIELD_TYPE_DEF_VRRP_DA_PROFILE,
    /** 
     * VRRP multiple my mac EXEM table mode
     * 
     */
    DBAL_FIELD_TYPE_DEF_VRRP_EXEM_MODE,
    /** VRRP protocol group  */
    DBAL_FIELD_TYPE_DEF_VRRP_GROUP_ID,
    /** 
     * L2 VPN identifier (Virtual Switch instance)
     * 
     */
    DBAL_FIELD_TYPE_DEF_VSI,
    /** 
     * A profile that configures VSI learning
     * properties.
     */
    DBAL_FIELD_TYPE_DEF_VSI_LEARNING_PROFILE,
    /** 
     * A profile that configures VSI properties.
     * 
     */
    DBAL_FIELD_TYPE_DEF_VSI_PROFILE,
    DBAL_FIELD_TYPE_DEF_VSI_PROFILE_IVL_SVL,
    DBAL_FIELD_TYPE_DEF_VSI_PROFILE_L2_MC_FWD_TYPE,
    /** Status of guaranteed blocked.  */
    DBAL_FIELD_TYPE_DEF_VSQ_GUARANTEED_STATUS,
    /** Context Ids for VT1 Stage  */
    DBAL_FIELD_TYPE_DEF_VT1_CONTEXT_ID,
    /** FFC instruction, key taken from header. VT1 stage  */
    DBAL_FIELD_TYPE_DEF_VT1_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_VT1_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. VT1 stage  */
    DBAL_FIELD_TYPE_DEF_VT1_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. VT1 stage  */
    DBAL_FIELD_TYPE_DEF_VT1_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. VT1 stage  */
    DBAL_FIELD_TYPE_DEF_VT1_FFC_RELATIVE_HEADER,
    /** FFC instruction, key taken from header. VT23 stage  */
    DBAL_FIELD_TYPE_DEF_VT23_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_VT23_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. VT23 stage  */
    DBAL_FIELD_TYPE_DEF_VT23_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. VT23 stage  */
    DBAL_FIELD_TYPE_DEF_VT23_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. VT23 stage  */
    DBAL_FIELD_TYPE_DEF_VT23_FFC_RELATIVE_HEADER,
    /** Context Ids for VT2 Stage  */
    DBAL_FIELD_TYPE_DEF_VT2_CONTEXT_ID,
    /** Context Ids for VT3 Stage  */
    DBAL_FIELD_TYPE_DEF_VT3_CONTEXT_ID,
    /** FFC instruction, key taken from header. VT45 stage  */
    DBAL_FIELD_TYPE_DEF_VT45_FFC_HEADER,
    /** Forwarding physical destination  */
    DBAL_FIELD_TYPE_DEF_VT45_FFC_INSTRUCTION,
    /** FFC instruction, key taken from layer record. VT45 stage  */
    DBAL_FIELD_TYPE_DEF_VT45_FFC_LAYER_RECORD,
    /** FFC instruction, key taken from full pbus. VT45 stage  */
    DBAL_FIELD_TYPE_DEF_VT45_FFC_LITERALLY,
    /** FFC instruction, key taken from relative header. VT45 stage  */
    DBAL_FIELD_TYPE_DEF_VT45_FFC_RELATIVE_HEADER,
    /** Context Ids for VT4 Stage  */
    DBAL_FIELD_TYPE_DEF_VT4_CONTEXT_ID,
    /** Context Ids for VT5 Stage  */
    DBAL_FIELD_TYPE_DEF_VT5_CONTEXT_ID,
    DBAL_FIELD_TYPE_DEF_VTT_LIF_SERVICE_TYPE,
    DBAL_FIELD_TYPE_DEF_VTT_MPLS_SPECIAL_LABEL_PROFILE,
    DBAL_FIELD_TYPE_DEF_VTT_TT_PROCESS_CODE,
    /** 
     * Specific Information for VXLAN Additional
     * Header
     */
    DBAL_FIELD_TYPE_DEF_VXLAN_ADDITIONAL_HEADER_SPECIFIC_INFORMATION,
    /** Pemla config parser next protocol  */
    DBAL_FIELD_TYPE_DEF_VXLAN_NEXT_PROTOCOL,
    /** CL modes  */
    DBAL_FIELD_TYPE_DEF_WFQ_WEIGHT_MODE,
    /** The discriminator value to put on transmitted packets  */
    DBAL_FIELD_TYPE_DEF_YOUR_DISC,
    /** Is BFD classification based on Your-Discriminator value  */
    DBAL_FIELD_TYPE_DEF_YOUR_DISC_VALID,
    /** 
     * Example for field type with illegal values
     * 
     */
    DBAL_FIELD_TYPE_DEF_ZERO_PADDING,
    DBAL_NOF_FIELD_TYPES_DEF
} dbal_field_types_defs_e;

/*
 * }
 */
#endif /* DBAL_DEFINES_FIELD_TYPES_DEFS_H_INCLUDED */
