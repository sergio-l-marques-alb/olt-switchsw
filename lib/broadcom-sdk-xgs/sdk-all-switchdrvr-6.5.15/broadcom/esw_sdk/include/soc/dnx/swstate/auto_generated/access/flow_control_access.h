/** \file dnx/swstate/auto_generated/access/flow_control_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __FLOW_CONTROL_ACCESS_H__
#define __FLOW_CONTROL_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/flow_control_types.h>
#include <bcm_int/dnx/cosq/flow_control.h>
#include <soc/dnxc/swstate/types/sw_state_template_mngr.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: flow_control_db_is_init
 */
typedef int (*flow_control_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: flow_control_db_init
 */
typedef int (*flow_control_db_init_cb)(
    int unit);

/**
 * implemented by: flow_control_db_fc_generic_bmp_set
 */
typedef int (*flow_control_db_fc_generic_bmp_set_cb)(
    int unit, sw_state_algo_template_t fc_generic_bmp);

/**
 * implemented by: flow_control_db_fc_generic_bmp_get
 */
typedef int (*flow_control_db_fc_generic_bmp_get_cb)(
    int unit, sw_state_algo_template_t *fc_generic_bmp);

/**
 * implemented by: flow_control_db_fc_generic_bmp_create
 */
typedef int (*flow_control_db_fc_generic_bmp_create_cb)(
    int unit, sw_state_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: flow_control_db_fc_generic_bmp_allocate_single
 */
typedef int (*flow_control_db_fc_generic_bmp_allocate_single_cb)(
    int unit, int core_id, uint32 flags, dnx_pfc_generic_bmp_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: flow_control_db_fc_generic_bmp_free_single
 */
typedef int (*flow_control_db_fc_generic_bmp_free_single_cb)(
    int unit, int core_id, int profile, uint8 *last_reference);

/**
 * implemented by: flow_control_db_fc_generic_bmp_exchange
 */
typedef int (*flow_control_db_fc_generic_bmp_exchange_cb)(
    int unit, int core_id, uint32 flags, const dnx_pfc_generic_bmp_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: flow_control_db_fc_generic_bmp_replace_data
 */
typedef int (*flow_control_db_fc_generic_bmp_replace_data_cb)(
    int unit, int core_id, int profile,  const dnx_pfc_generic_bmp_t *new_profile_data);

/**
 * implemented by: flow_control_db_fc_generic_bmp_profile_data_get
 */
typedef int (*flow_control_db_fc_generic_bmp_profile_data_get_cb)(
    int unit, int core_id, int profile, int *ref_count, dnx_pfc_generic_bmp_t *profile_data);

/**
 * implemented by: flow_control_db_fc_generic_bmp_profile_get
 */
typedef int (*flow_control_db_fc_generic_bmp_profile_get_cb)(
    int unit, int core_id, const dnx_pfc_generic_bmp_t *profile_data, int *profile);

/**
 * implemented by: flow_control_db_fc_generic_bmp_free_all
 */
typedef int (*flow_control_db_fc_generic_bmp_free_all_cb)(
    int unit, int core_id, int profile);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable fc_generic_bmp
 */
typedef struct {
    flow_control_db_fc_generic_bmp_set_cb set;
    flow_control_db_fc_generic_bmp_get_cb get;
    flow_control_db_fc_generic_bmp_create_cb create;
    flow_control_db_fc_generic_bmp_allocate_single_cb allocate_single;
    flow_control_db_fc_generic_bmp_free_single_cb free_single;
    flow_control_db_fc_generic_bmp_exchange_cb exchange;
    flow_control_db_fc_generic_bmp_replace_data_cb replace_data;
    flow_control_db_fc_generic_bmp_profile_data_get_cb profile_data_get;
    flow_control_db_fc_generic_bmp_profile_get_cb profile_get;
    flow_control_db_fc_generic_bmp_free_all_cb free_all;
} flow_control_db_fc_generic_bmp_cbs;

/**
 * This structure holds the access functions for the variable flow_control_sw_state_t
 */
typedef struct {
    flow_control_db_is_init_cb is_init;
    flow_control_db_init_cb init;
    /**
     * Access struct for fc_generic_bmp
     */
    flow_control_db_fc_generic_bmp_cbs fc_generic_bmp;
} flow_control_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern flow_control_db_cbs flow_control_db;

#endif /* __FLOW_CONTROL_ACCESS_H__ */
