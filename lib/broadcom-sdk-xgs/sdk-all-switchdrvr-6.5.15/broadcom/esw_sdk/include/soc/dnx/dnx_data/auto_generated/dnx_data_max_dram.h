/** \file dnx_data_max_dram.h
 * 
 * MODULE DATA MAX - 
 * Maintain max value (of all devices) per define
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_MAX_DRAM_H_
/*{*/
#define _DNX_DATA_MAX_DRAM_H_
/*
 * INCLUDE FILES:
 * {
 */
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MAX DEFINES:
 * {
 */
/**
 * \brief
 * number of HBMs
 */
#define DNX_DATA_MAX_DRAM_HBM_NOF_HBMS  (2)

/**
 * \brief
 * number of channels in each HBM
 */
#define DNX_DATA_MAX_DRAM_HBM_NOF_CHANNELS (8)

/**
 * \brief
 * channel id to use in dbal when trying to broadcast
 */
#define DNX_DATA_MAX_DRAM_HBM_CHANNEL_BROADCAST_ID (16)

/**
 * \brief
 * mode register bit mask
 */
#define DNX_DATA_MAX_DRAM_HBM_MR_MASK   (255)

/**
 * \brief
 * number of mode registers
 */
#define DNX_DATA_MAX_DRAM_HBM_NOF_MRS   (16)

/**
 * \brief
 * bit mask to describe the relevant bits in phy register address
 */
#define DNX_DATA_MAX_DRAM_HBM_PHY_ADDRESS_MASK (4095)

/**
 * \brief
 * block index of the physically last in chain hbc, provided all hbms are active
 */
#define DNX_DATA_MAX_DRAM_HBM_HBC_PHYSICAL_LAST_IN_CHAIN (7)

/**
 * \brief
 * when restoring from OTP the tune data, do it according to the given version format
 */
#define DNX_DATA_MAX_DRAM_GENERAL_INFO_OTP_RESTORE_VERSION (1)

/**
 * \brief
 * the number of rows in the ATM
 */
#define DNX_DATA_MAX_DRAM_ADDRESS_TRANSLATION_MATRIX_COLUMN_SIZE (30)

/**
 * \brief
 * nof bytes in each read/write from/to physical address
 */
#define DNX_DATA_MAX_DRAM_ADDRESS_TRANSLATION_PHYSICAL_ADDRESS_TRANSACTION_SIZE (32)

/**
 * \brief
 * number of BDBs per core
 */
#define DNX_DATA_MAX_DRAM_BUFFERS_NOF_BDBS (131072)

/**
 * \brief
 * number of free pointer controler banks
 */
#define DNX_DATA_MAX_DRAM_BUFFERS_NOF_FPC_BANKS (4)

/*
 * }
 */

/*}*/
#endif /*_DNX_DATA_MAX_DRAM_H_*/
/* *INDENT-ON* */
