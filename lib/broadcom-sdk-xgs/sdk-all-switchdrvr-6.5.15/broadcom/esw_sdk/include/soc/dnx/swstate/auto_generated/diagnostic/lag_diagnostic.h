/** \file dnx/swstate/auto_generated/diagnostic/lag_diagnostic.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __LAG_DIAGNOSTIC_H__
#define __LAG_DIAGNOSTIC_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnxc/swstate/dnx_sw_state_size.h>
#include <soc/dnxc/swstate/dnx_sw_state_diagnostic_operation_counters.h>
#include <soc/dnx/swstate/auto_generated/types/lag_types.h>
#include <soc/dnx/legacy/ARAD/arad_chip_defines.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
typedef enum {
    LAG_STATE_INFO,
    LAG_STATE_IN_USE_INFO,
    LAG_STATE_LOCAL_TO_REASSEMBLY_CONTEXT_INFO,
    LAG_STATE_INFO_NOF_ENTRIES
} sw_state_lag_state_layout_e;


extern dnx_sw_state_diagnostic_info_t lag_state_info[SOC_MAX_NUM_DEVICES][LAG_STATE_INFO_NOF_ENTRIES];

extern const char* lag_state_layout_str[LAG_STATE_INFO_NOF_ENTRIES];
int lag_state_dump(
    int unit);

int lag_state_in_use_dump(
    int unit, int in_use_idx_0);

int lag_state_local_to_reassembly_context_dump(
    int unit, int local_to_reassembly_context_idx_0);

#endif /* DNX_SW_STATE_DIAGNOSTIC */

#endif /* __LAG_DIAGNOSTIC_H__ */
