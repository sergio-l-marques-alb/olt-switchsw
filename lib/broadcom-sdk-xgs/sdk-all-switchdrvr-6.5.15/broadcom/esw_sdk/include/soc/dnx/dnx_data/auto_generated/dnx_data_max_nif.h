/** \file dnx_data_max_nif.h
 * 
 * MODULE DATA MAX - 
 * Maintain max value (of all devices) per define
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_MAX_NIF_H_
/*{*/
#define _DNX_DATA_MAX_NIF_H_
/*
 * INCLUDE FILES:
 * {
 */
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MAX DEFINES:
 * {
 */
/**
 * \brief
 * number of lcplls supported
 */
#define DNX_DATA_MAX_NIF_GLOBAL_NOF_LCPLLS (2)

/**
 * \brief
 * number of phys supported
 */
#define DNX_DATA_MAX_NIF_PHYS_NOF_PHYS  (96)

/**
 * \brief
 * number of phys per core supported
 */
#define DNX_DATA_MAX_NIF_PHYS_NOF_PHYS_PER_CORE (48)

/**
 * \brief
 * number of PMs supported
 */
#define DNX_DATA_MAX_NIF_PHYS_NOF_PMS   (12)

/**
 * \brief
 * VCO divider
 */
#define DNX_DATA_MAX_NIF_PHYS_VCO_DIV   (20)

/**
 * \brief
 * Number of ILKN units in the device
 */
#define DNX_DATA_MAX_NIF_ILKN_ILKN_UNIT_NOF (2)

/**
 * \brief
 * Number of ILKN Interfaces in each ILKN unit
 */
#define DNX_DATA_MAX_NIF_ILKN_ILKN_UNIT_IF_NOF (1)

/**
 * \brief
 * Number of ILKN Interfaces in the device
 */
#define DNX_DATA_MAX_NIF_ILKN_ILKN_IF_NOF (2)

/**
 * \brief
 * Max number of lanes for ILKN port
 */
#define DNX_DATA_MAX_NIF_ILKN_LANES_MAX_NOF (24)

/**
 * \brief
 * The allowed lanes for each ILKN port
 */
#define DNX_DATA_MAX_NIF_ILKN_LANES_ALLOWED_NOF (16)

/**
 * \brief
 * Max number eth pms ilkn lanes is part of
 */
#define DNX_DATA_MAX_NIF_ILKN_ILKN_OVER_ETH_PMS_MAX (2)

/**
 * \brief
 * Max number of segments in ILKN protocol. (Segment is a resource of ILKN which is shared between all ports of the ILKN unit)
 */
#define DNX_DATA_MAX_NIF_ILKN_SEGMENTS_MAX_NOF (4)

/**
 * \brief
 * High Watermark value for ILKN
 */
#define DNX_DATA_MAX_NIF_ILKN_WATERMARK_HIGH (3)

/**
 * \brief
 * Low Watermark value for ILKN
 */
#define DNX_DATA_MAX_NIF_ILKN_WATERMARK_LOW (4)

/**
 * \brief
 * Number of PMs connectted to the ILKN unit
 */
#define DNX_DATA_MAX_NIF_ILKN_PMS_NOF   (3)

/**
 * \brief
 * Fabric MAC bus size [bits], relevant for ILKN over fabric ports
 */
#define DNX_DATA_MAX_NIF_ILKN_FMAC_BUS_SIZE (70)

/**
 * \brief
 * Number of CDU instances in the device
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_NOF    (12)

/**
 * \brief
 * Number of CDUM instances in the device
 */
#define DNX_DATA_MAX_NIF_ETH_CDUM_NOF   (2)

/**
 * \brief
 * Number of pms in each CDU in the device
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_PMS_NOF (1)

/**
 * \brief
 * Number of CDU instances in each device core
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_NOF_PER_CORE (6)

/**
 * \brief
 * Number of lanes in each CDU
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_LANES_NOF (8)

/**
 * \brief
 * Number of MAC units per CDU
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_MAC_NOF (2)

/**
 * \brief
 * Number of lanes in each MAC
 */
#define DNX_DATA_MAX_NIF_ETH_MAC_LANES_NOF (4)

/**
 * \brief
 * number of logical fifos in the CDU
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_LOGICAL_FIFO_NOF (16)

/**
 * \brief
 * number of entries in the CDU memory, to be shared between all logical FIFOs
 */
#define DNX_DATA_MAX_NIF_ETH_CDU_MEMORY_ENTRIES_NOF (1024)

/**
 * \brief
 * minimum number of entries to allocate to a priority group (priority group = RMC)
 */
#define DNX_DATA_MAX_NIF_ETH_PRIORITY_GROUP_NOF_ENTRIES_MIN (4)

/**
 * \brief
 * number of allowed priority groups per port (priority group = RMC)
 */
#define DNX_DATA_MAX_NIF_ETH_PRIORITY_GROUPS_NOF (2)

/**
 * \brief
 * min padding size
 */
#define DNX_DATA_MAX_NIF_ETH_PAD_SIZE_MIN (64)

/**
 * \brief
 * max padding size
 */
#define DNX_DATA_MAX_NIF_ETH_PAD_SIZE_MAX (96)

/**
 * \brief
 * max packet size
 */
#define DNX_DATA_MAX_NIF_ETH_PACKET_SIZE_MAX (16383)

/**
 * \brief
 * max auto-negotiation abilities
 */
#define DNX_DATA_MAX_NIF_ETH_AN_MAX_NOF_ABILITIES (20)

/**
 * \brief
 * Number of control frame properties to which each packet is compared in order to be recognized as control frame in the PRD parser
 */
#define DNX_DATA_MAX_NIF_PRD_NOF_CONTROL_FRAMES (4)

/**
 * \brief
 * Number of ether types supported by the PRD Parser
 */
#define DNX_DATA_MAX_NIF_PRD_NOF_ETHER_TYPE_CODES (16)

/**
 * \brief
 * Number of entries in PRD Parser soft stage TCAM
 */
#define DNX_DATA_MAX_NIF_PRD_NOF_TCAM_ENTRIES (32)

/**
 * \brief
 * Number of MPLS special labels recognized by the PRD parser
 */
#define DNX_DATA_MAX_NIF_PRD_NOF_MPLS_SPECIAL_LABELS (4)

/**
 * \brief
 * Number of PRD Priorities
 */
#define DNX_DATA_MAX_NIF_PRD_NOF_PRIORITIES (4)

/**
 * \brief
 * Min value of the configurable ether type codes
 */
#define DNX_DATA_MAX_NIF_PRD_CUSTOM_ETHER_TYPE_CODE_MIN (1)

/**
 * \brief
 * Max value of the configurable ether type codes
 */
#define DNX_DATA_MAX_NIF_PRD_CUSTOM_ETHER_TYPE_CODE_MAX (6)

/**
 * \brief
 * Number of pm types
 */
#define DNX_DATA_MAX_NIF_PORTMOD_PM_TYPES_NOF (3)

/**
 * \brief
 * The Rate equivalent to 1 bit of CDU scheduler
 */
#define DNX_DATA_MAX_NIF_SCHEDULDER_RATE_PER_CDU_BIT (100000)

/**
 * \brief
 * The Rate equivalent to 1 bit of RMC scheduler
 */
#define DNX_DATA_MAX_NIF_SCHEDULDER_RATE_PER_RMC_BIT (50000)

/**
 * \brief
 * Number of bits in CDU scheduler
 */
#define DNX_DATA_MAX_NIF_SCHEDULDER_NOF_CDU_BITS (4)

/**
 * \brief
 * Number of bits in RMC scheduler
 */
#define DNX_DATA_MAX_NIF_SCHEDULDER_NOF_RMC_BITS (4)

/*
 * }
 */

/*}*/
#endif /*_DNX_DATA_MAX_NIF_H_*/
/* *INDENT-ON* */
