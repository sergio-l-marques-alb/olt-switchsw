/** \file dnx/swstate/auto_generated/types/algo_l3_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2018 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __ALGO_L3_TYPES_H__
#define __ALGO_L3_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/l3/algo_l3.h>
#include <bcm_int/dnx/algo/l3/source_address_table_allocation.h>
#include <bcm_int/dnx/l3/l3_ecmp.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_l3.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_res_mngr.h>
#include <soc/dnxc/swstate/types/sw_state_resource_tag_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_template_mngr.h>
#include <soc/dnx/swstate/auto_generated/types/algo_consistent_hashing_types.h>
/*
 * STRUCTs
 */

/**
 * rif allocation manager
 */
typedef struct {
    /**
     * Access the RIF resource manager
     */
    sw_state_algo_res_t rif_res_manager;
} rif_t;

/**
 * Info for the source address table allocation algorithm
 */
typedef struct {
    /**
     * Instance of the res tag bitmap used by the algorithm.
     */
    sw_state_resource_tag_bitmap_t res_tag_bitmap;
    /**
     * Egress source address table
     */
    sw_state_algo_template_t egress_source_address_table;
} source_address_table_allocation_t;

/**
 * Resource manager that handles vrrp EXEM table entries
 */
typedef struct {
    /**
     * Instance of the res bitmap used by the algorithm
     */
    sw_state_algo_res_t res_bitmap;
} vrrp_exem_table_allocation_t;

/**
 * Info for the FEC resource allocation
 */
typedef struct {
    /**
     * Access the FEC resource manager
     */
    sw_state_algo_res_t* fec_res_manager;
    /**
     * Each bit in this bit map indicate if the FEC resource in the matching index is part of a pair of resources.
     */
    SHR_BITDCL resource_is_part_of_pair[((DNX_DATA_MAX_L3_FEC_FEC_MAX_NOF_BANKS/2)/SHR_BITWID)+1];
} l3_fec_res_t;

/**
 * Info for the EGR_POINTED resource allocation
 */
typedef struct {
    /**
     * Virtual egress pointed objects characterized by not using GLEM
     */
    sw_state_algo_res_t egr_pointed_res_manager;
} l3_egr_pointed_res_t;

/**
 * Info for the FEC resource allocation
 */
typedef struct {
    /**
     * Information for the hierarchy value for each bank of FEC IDs
     */
    uint32* fec_hierarchy_map;
} l3_fec_hierarchy_t;

/**
 * Info for the FEC resource allocation
 */
typedef struct {
    /**
     * FEC allocation algorithm information
     */
    l3_fec_res_t l3_fec_res_mngr;
    /**
     * FEC hierarchy mapping information
     */
    l3_fec_hierarchy_t l3_fec_hierarchy;
    /**
     * Super FEC resource type
     */
    uint32** fec_resource_type;
} l3_fec_alloc_t;

/**
 * Algo L3 templates
 */
typedef struct {
    /**
     * ECMP consistent hashing manager handle
     */
    sw_state_algo_template_t ecmp_consistent_manager;
    /**
     * VRRP MyMac TCAM VSI table
     */
    sw_state_algo_template_t vrrp_vsi_tcam_table;
    /**
     * ECMP first/second/third hierarchy profile table
     */
    sw_state_algo_template_t ecmp_profile_hier_table[3];
    /**
     * VRRP MyMac TCAM EXEM table
     */
    sw_state_algo_template_t vrrp_exem_tcam_table;
    /**
     * Ingress MyMac prefix table
     */
    sw_state_algo_template_t ingress_mymac_prefix_table;
} algo_l3_template_t;

/**
 * L3 related sw state
 */
typedef struct {
    /**
     * Source address table allocation algorithm DB.
     */
    source_address_table_allocation_t source_address_table_allocation;
    /**
     * FEC allocation data for the resource manager
     */
    l3_fec_alloc_t fec_alloc;
    /**
     * EGR_POINTED allocation data for the resource manager
     */
    l3_egr_pointed_res_t egr_pointed_alloc;
    /**
     * Algo L3 templates
     */
    algo_l3_template_t algo_l3_templates;
    /**
     * VRRP EXEM table station id allocation algorithm DB
     */
    vrrp_exem_table_allocation_t vrrp_exem_l2_station_id_alloc;
    /**
     * RIF allocation data for the resource manager
     */
    rif_t rif_alloc;
} algo_l3_sw_state_t;


#endif /* __ALGO_L3_TYPES_H__ */
