#
# $Id: dnx.soc,v 1.90 Broadcom SDK $
#
# $Copyright: (c) 2018 Broadcom.
# Broadcom Proprietary and Confidential. All rights reserved.$
#

debug info
debug appl rcload warn
debug appl symtab warn
debug bcm rx,tx,link,attach warn
debug soc tests warn
debug soc rx,phy,schan,reg,socmem,dma,mem,miim,mii,intr,counter,ddr warn
debug soc common err
debug sys verinet warn
debug soc physim warn
debug socdnx DbalDnx warn
debug socdnx DiagDbalDnx warn
debug socdnx DbalAccessDnx warn
debug bcmdnx fldtestsdnx warn
debug bcmdnx fldprocdnx warn
debug bcmdnx mpls warn
debug bcmdnx mplstestsdnx warn
debug bcmdnx switchtestsdnx warn

#
# For DBAL trace export
#
if $?dbal_severity_override \
       'debug socdnx DbalDnx $dbal_severity_override '

# Loading the board configuration file according to the board type, which is encoded on the EEPROM.
# Boards types: Pizza box, revB and DVT.
# This board loading script can be replaced by the user with a simple command to load the board file that they are using.
# 0x86908790 - mgmt system of JR2 and Ramon (all are pizza boxes).
# 0x86918790 - mgmt system of JR2 with revB board and Ramon pizza box.
if $?BCM_JR2_DEV && !$?plisim \
    'cpu_i2c read 0x14 0x52 0x0; \
    if !"expr $i2c_result == 0x86900101 || $i2c_result == 0x86908790" \
        "import bcm88690_board.bcm"\
        "local board_file_loaded 1";\
    if !"expr $i2c_result == 0x86900102 || $i2c_result == 0x86918790" \
        "import bcm88690_revB_board.bcm"\
        "local board_file_loaded 1";\
    if !"expr $i2c_result == 0x86900201" \
        "import bcm88690_dvt_board.bcm"\
        "local board_file_loaded 1";\
    if !"$board_file_loaded"\
        "import bcm88690_board.bcm";'

if $?BCM_JR2_DEV && $?plisim \
    'import bcm88690_board.bcm;'

# Load DRAM tuning properties from local File. RcLoad will not fail if file not found, and will not show errors of missing file.
set RCError=off
debug appl shell warn

if $?BCM_JR2_DEV && !$?plisim \
    'import /home/negev/BCM8869X_dram_tune_v1.bcm'

debug appl shell =
set RCError=on

#Set fabric connect mode as FE for multi FAP system
if $?diag_chassis " \
   config add fabric_connect_mode.BCM8869X=FE"

##set default nof devices for chassis system
#if chassis system then default number of devices is 2 (unless stated otherwise)
if $?diag_chassis " \
  local nof_devices 2" \
else "\
  local nof_devices 1"
if !$?appl_param_nof_devices " \
  config add appl_param_nof_devices.BCM8869X=$nof_devices"

# Set modid:
# If diag_chassis is enabled (two line cards), and 'slot' is defined (slot is defined only when
# working without a management card - set modid to be 'slot'
# Otherwise (single line card, or management card), set modid to be 2 for unit 2, and 0 for unit != 2
if $?diag_chassis && $?slot "\
  local modid $slot" \
else "\
   local modid 0"
expr $unit+0 == 2; if $? "local modid 2"

if $modid && !$?appl_param_module_id " \
  config add appl_param_module_id.$unit=$modid"

if !"expr $diag_emulator_partial_init + 0" || $?plisim "\
  local simulator 1; \
  config add phy_simul=1"

if $?feature_cmicx && !$?simulator \
    "m0 load 0 0x0 linkscan_led_fw.bin" \
    "m0 load 0 0x3800 custom_led.bin"

# In ANAT testing parallel mode DNX init is invoked by a dedicated ctest command
if !$?diag_parallel \
    INIT_DNX

if $?feature_cmicx && !$?simulator \
    "led auto on" \
    "led start"

# In case access only boot, avoid from running the next steps
if $custom_feature_access_only \
    exit


echo "dnx.soc: Done............................."
exit

#In emulation do not execute slow steps not needed for emulation
if $?simulator \
    exit

