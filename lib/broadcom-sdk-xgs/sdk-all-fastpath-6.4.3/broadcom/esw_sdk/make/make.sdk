# Device-level makefile definitions included by andl package.
# 

# Local source path abbreviations (for convenience).
#

# Output location for vendor files.
#
out_vend_sdk := $(OUT_ANDL)/vendor


# Pull in common make definitions.
#
include $(FP_ROOT)/src/l7tools/build/make.cfg

# Note: Be sure to reference this using +$(VEND_MAKE) so that certain make
#       command line parameters are passed through to the sub-makefile.
#
VEND_MAKE := $(DBG)$(MAKE)


ifndef MAKE_LOCAL
 $(error 'The $$MAKE_LOCAL environment variable is not set')
endif

# Adjust the console messages generated by the vendor make system by defining
# its QUIET variable.
#
# Note: This still does not provide a sufficient level of control to mesh with
#       the type of output messages generated by the FASTPATH make system, but
#       it's a start.
#
ifneq (verbose,$(CMD_DISPLAY_MODE))
  export QUIET=1
endif


# The following variables are required by the Broadcom SDK.
#
# Note: Want the SDK make system to store the stripped kernel modules
#       in the vendor output directory; the FASTPATH make system will 
#       copy them to the intended target location.
#
export SDK              := $(FP_ROOT)/$(BROADCOM_SDK)
export TARGET           := $(L7_TARGETOS)-$(L7_CPU)
export L7_PKGNAME       := $(PKGNAME)
export L7_OUTPUT        := $(FP_ROOT)/$(out_vend_sdk)
export L7_OUTPUT_KMOD   := $(FP_ROOT)/$(out_vend_sdk)
export L7_OUT_SDK_FLAGS := $(SDK_FLAGS_TEMP_FILE)
export PPC_TOOLS_DIR    := $(dir $(CROSS_COMPILE))
export MIPS_TOOLS_DIR   := $(PPC_TOOLS_DIR)

ifeq (1,$(BLD_L7_TARGETOS_LINUX))
  export LINUX_INCLUDE := $(KERNEL_SRC)/include
  export KERNDIR     := $(KERNEL_SRC)
ifeq (1,$(BLD_L7_TARGETOS_LINUX_3x))
  os_suffix          := -3_x
else
  os_suffix          := -2_6
endif
endif


# Extra include paths to be passed to BCM vendor make.
#
l7_extra_inc_paths := \
	$(L7PUBLIC_INCLDIR) \
	$(COMPONENT_INCLDIR) \
	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base \
	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base/bcmsys \
	-I$(SDK)/include/customer/$(L7_CUSTOMER) \
	-I$(SDK)/libs/phymod/include

ifneq (,$(strip $(PRJ_DIR)))
  l7_extra_inc_paths += \
	-I$(PRJ_DIR) 
endif

ifneq (,$(strip $(BSP_DIR)))
  l7_extra_inc_paths += \
        -I$(BSP_DIR)
endif

ifneq (,$(strip $(BSP_DIR)))
  l7_extra_inc_paths += \
        -I$(BSP_DIR)
endif

ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
  l7_extra_inc_paths += \
	-I$(WIND_BASE)/target/config/comps/src \
	-I$(WIND_BASE)/target/src/drv
endif

export L7_BCM_VENDOR_INCL := $(subst $(FP_BASE),$(FP_ROOT),$(l7_extra_inc_paths))


# Additional CFLAGS to be passed to BCM vendor make.
#
export L7_BCM_VENDOR_CFLAGS := \
	-DLVL7_FIXUP \
	-DBCM_COSQ_HIGIG_MAP_DISABLE \
	-DSAL_THREAD_PRIORITY=255 \
	$(L7_OS_VERSION) \
	-DSAL_NO_FLASH_FS \
	-DRW_MULTI_THREAD \
	$(CPU_TYPE) \
	$(PRODUCT_TYPE) \
  $(L7_TOOL_FLAG) \
  -DSAL_BDE_THREAD_PRIO_DEFAULT \
  -DVX_THREAD_OPT_UNBREAKABLE \
  -DSDK_INCLUDE_CUSTOM_CONFIG

ifneq (1,$(BLD_L7_TARGETOS_VXWORKS))
export L7_BCM_VENDOR_CFLAGS += -DNO_FILEIO
endif

ifneq (,$(filter -mlongcall,$(CPU_FLAGS)))
export L7_BCM_VENDOR_CFLAGS += -mlongcall
endif

# Map sal_alloc/sal_free to osapi Api's except for 
# - MIPS64 cpu: SDK has some special code for MIPS64 in sal_alloc.
# - Linux kernel mode
# - Smartpath product

l7_sal_map_to_osapi := 1

ifeq (1,$(BLD_L7_PRODUCT_SMARTPATH))
l7_sal_map_to_osapi := 0
endif

ifeq (MIPS64,$(CPU))
l7_sal_map_to_osapi := 0
endif

ifeq (1,$(l7_sal_map_to_osapi))
export L7_BCM_VENDOR_CFLAGS += \
	-DL7_SAL_MAP_TO_OSAPI
endif

# Translate the make command goal to that used by the vendor make system.
#
# Note: The default is to leave this blank so that everything gets built.
#
vend_bld_goal   :=
ifeq (get_sdk_flags,$(MAKECMDGOALS))
  vend_bld_goal := get_sdk_flags
endif


# Decide which type of target to build.
#
target_type := $(L7_TARGETOS)
ifeq (1,$(BLD_L7_CPU_LINUXHOST))
  target_type := linuxhost
endif

# Disallow parallel build option (-j) since the underlying SDK target rules
# are not designed to handle it properly.
#
new_makeflags = $(filter-out -j,$(MAKEFLAGS))


# Special Build rules
#  - All entries must be specified relative to top-of-view $(FP_ROOT).
#  - Defines all source locations to be referenced by the package-level makefile.
#
# Note: Assumes all necessary output directories already exist.
#
# Note: To echo debug messages, begin the message text with "Debug: " to get past
#       the SDK output message filter script.
#

.PHONY: bldlib get_sdk_flags vend_sdk_linux vend_sdk_vxworks vend_sdk_linuxhost


bldlib get_sdk_flags:: vend_sdk_$(target_type)
	$(NOOP)


vend_sdk_linux::
	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/user/fastpath$(os_suffix) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)

vend_sdk_ecos::
	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/$(L7_CPU) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)

vend_sdk_vxworks::
	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/common $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)


vend_sdk_linuxhost::
	+$(VEND_MAKE) -C $(SDK)/systems/linuxhost $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)

