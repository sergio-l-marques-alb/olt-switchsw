/** \file dnx_ipq_alloc_mngr_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_IPQ_ALLOC_MNGR_TYPES_H__
#define __DNX_IPQ_ALLOC_MNGR_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
/*
 * ENUMs
 */

/**
 * An enum that represents region type
 */
typedef enum {
    /**
     * Region is not allocated
     */
    DNX_IPQ_REGION_TYPE_NONE = 0,
    /**
     * Region type is normal (non-interdigitated)
     */
    DNX_IPQ_REGION_TYPE_NORMAL = 1,
    /**
     * Region type is interdigitated
     */
    DNX_IPQ_REGION_TYPE_INTERDIG = 2
} dnx_ipq_region_type_e;

/*
 * STRUCTs
 */

/**
 * Info about queues region
 */
typedef struct {
    /**
     * Region type - see dnx_ipq_region_type_e
     */
    dnx_ipq_region_type_e type;
    /**
     * Number of queue quartets allocated in this region
     */
    uint32 nof_allocated_queue_quartets;
} dnx_ipq_region_t;

/**
 * Info about FMQs
 */
typedef struct {
    /**
     * Boolean - is enhance shceduler mode is active.                                                                     Enhance mode can be set by calling                                                                     bcm_fabric_control_set(bcmFabricMulticastSchedulerMode)
     */
    int is_enhance_scheduler_mode;
    /**
     * Boolean - Does the user allocated the FMQ
     */
    int is_fmq_allocated;
    /**
     * Maximum multicast queue
     */
    int max_multicast_queue;
} dnx_ipq_fmq_info_t;

/**
 * DB for Ingress Packet Queuing Alloc Manager
 */
typedef struct {
    /**
     * Regions info to help allocation in resource manager
     */
    dnx_ipq_region_t* regions;
    /**
     * Information about FMQs
     */
    dnx_ipq_fmq_info_t fmq;
} dnx_ipq_alloc_mngr_db_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_IPQ_ALLOC_MNGR_TYPES_H__ */
