/** \file dnx_bier_db_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_BIER_DB_TYPES_H__
#define __DNX_BIER_DB_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_hash_table.h>
#include <soc/dnxc/swstate/sw_state_multi_set.h>
#include <soc/dnxc/swstate/sw_state_defragmented_chunk.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_multicast.h>
/*
 * STRUCTs
 */

/**
 * info about bier module
 */
typedef struct {
    /**
     * the number of bfr entries supported at the system
     */
    int nof_bfr_entries;
    /**
     * bier offset at mcdb
     */
    int mcdb_offset;
    /**
     * set size
     */
    int set_size[DNX_DATA_MAX_MULTICAST_PARAMS_NOF_MCDB_ENTRIES];
} dnx_bier_db_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_BIER_DB_TYPES_H__ */
