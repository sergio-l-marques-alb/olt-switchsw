/** \file dnxc_module_ids_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2017 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNXC_MODULE_IDS_TYPES_H__
#define __DNXC_MODULE_IDS_TYPES_H__

#include <soc/dnxc/swstate/sw_state_features.h>
#include <soc/dnxc/swstate/sw_state_defs.h>
#include <soc/dnxc/swstate/sw_state_attribute_packed.h>
#include <soc/dnxc/swstate/sw_state_linked_list.h>
#include <soc/dnxc/swstate/sw_state_occupation_bitmap.h>
#include <soc/dnxc/swstate/sw_state_cb_db.h>
#include <soc/dnxc/swstate/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/dnx_sw_state_logging.h>
#include <soc/dnxc/swstate/sw_state_diagnostics.h>
/*
 * ENUMs
 */

/**
 * Defines module id for each dnx sw state module
 */
typedef enum {
    /**
     * Invalid module id
     */
    INVALID_MODULE_ID = -1,
    /**
     * Used by internal sw state mechanisms, reserved
     */
    SWSTATE_INTERNAL_MODULE_ID = 0,
    /**
     * dnx_sw_state_defragmented_chunk module id
     */
    DNX_SW_STATE_DEFRAGMENTED_CHUNK_MODULE_ID = 1,
    /**
     * adapter module id
     */
    ADAPTER_MODULE_ID = 2,
    /**
     * dnx_mirror module id
     */
    DNX_MIRROR_MODULE_ID = 3,
    /**
     * mdb_em module id
     */
    MDB_EM_MODULE_ID = 4,
    /**
     * utilex_res_tag_bitmap module id
     */
    UTILEX_RES_TAG_BITMAP_MODULE_ID = 5,
    /**
     * vlan module id
     */
    VLAN_MODULE_ID = 6,
    /**
     * dnx_ipq module id
     */
    DNX_IPQ_MODULE_ID = 7,
    /**
     * dnx_field_context module id
     */
    DNX_FIELD_CONTEXT_MODULE_ID = 8,
    /**
     * dnx_algo_lane_map module id
     */
    DNX_ALGO_LANE_MAP_MODULE_ID = 9,
    /**
     * algo_l3 module id
     */
    ALGO_L3_MODULE_ID = 10,
    /**
     * dnx_sw_state_sorted_list module id
     */
    DNX_SW_STATE_SORTED_LIST_MODULE_ID = 11,
    /**
     * dnx_field_qualifier module id
     */
    DNX_FIELD_QUALIFIER_MODULE_ID = 12,
    /**
     * dnxc module id
     */
    DNXC_MODULE_ID = 13,
    /**
     * dnx_field_key module id
     */
    DNX_FIELD_KEY_MODULE_ID = 14,
    /**
     * dnx_fabric module id
     */
    DNX_FABRIC_MODULE_ID = 15,
    /**
     * dnxf module id
     */
    DNXF_MODULE_ID = 16,
    /**
     * dnx_algo_field_key_alloc module id
     */
    DNX_ALGO_FIELD_KEY_ALLOC_MODULE_ID = 17,
    /**
     * multi_set_tmplt module id
     */
    MULTI_SET_TMPLT_MODULE_ID = 18,
    /**
     * ecmp module id
     */
    ECMP_MODULE_ID = 19,
    /**
     * utilex_occupation_bitmap module id
     */
    UTILEX_OCCUPATION_BITMAP_MODULE_ID = 20,
    /**
     * utilex_hash_table module id
     */
    UTILEX_HASH_TABLE_MODULE_ID = 21,
    /**
     * dnx_sw_state_hash_table module id
     */
    DNX_SW_STATE_HASH_TABLE_MODULE_ID = 22,
    /**
     * dnx_egr_db module id
     */
    DNX_EGR_DB_MODULE_ID = 23,
    /**
     * dnx_field_tcam_access module id
     */
    DNX_FIELD_TCAM_ACCESS_MODULE_ID = 24,
    /**
     * dnx_cosq_ingress module id
     */
    DNX_COSQ_INGRESS_MODULE_ID = 25,
    /**
     * dnx_ofp_rate module id
     */
    DNX_OFP_RATE_MODULE_ID = 26,
    /**
     * dnx_field module id
     */
    DNX_FIELD_MODULE_ID = 27,
    /**
     * dnx_algo_field_action module id
     */
    DNX_ALGO_FIELD_ACTION_MODULE_ID = 28,
    /**
     * lag module id
     */
    LAG_MODULE_ID = 29,
    /**
     * dnx_legacy_am module id
     */
    DNX_LEGACY_AM_MODULE_ID = 30,
    /**
     * mdb_kaps module id
     */
    MDB_KAPS_MODULE_ID = 31,
    /**
     * dnx_sch_alloc_mngr module id
     */
    DNX_SCH_ALLOC_MNGR_MODULE_ID = 32,
    /**
     * meter module id
     */
    METER_MODULE_ID = 33,
    /**
     * dnx_ingress_reassembly module id
     */
    DNX_INGRESS_REASSEMBLY_MODULE_ID = 34,
    /**
     * template_mngr module id
     */
    TEMPLATE_MNGR_MODULE_ID = 35,
    /**
     * utilex_resmgr module id
     */
    UTILEX_RESMGR_MODULE_ID = 36,
    /**
     * trunk module id
     */
    TRUNK_MODULE_ID = 37,
    /**
     * res_mngr module id
     */
    RES_MNGR_MODULE_ID = 38,
    /**
     * dnx_bier_db module id
     */
    DNX_BIER_DB_MODULE_ID = 39,
    /**
     * dnx_field_tcam_access_profile module id
     */
    DNX_FIELD_TCAM_ACCESS_PROFILE_MODULE_ID = 40,
    /**
     * example module id
     */
    EXAMPLE_MODULE_ID = 41,
    /**
     * algo_consistent_hashing module id
     */
    ALGO_CONSISTENT_HASHING_MODULE_ID = 42,
    /**
     * dnx_algo_port module id
     */
    DNX_ALGO_PORT_MODULE_ID = 43,
    /**
     * dnx_field_actions module id
     */
    DNX_FIELD_ACTIONS_MODULE_ID = 44,
    /**
     * oam module id
     */
    OAM_MODULE_ID = 45,
    /**
     * dnx_field_group module id
     */
    DNX_FIELD_GROUP_MODULE_ID = 46,
    /**
     * utilex_multi_set module id
     */
    UTILEX_MULTI_SET_MODULE_ID = 47,
    /**
     * dnx_field_tcam_location module id
     */
    DNX_FIELD_TCAM_LOCATION_MODULE_ID = 48,
    /**
     * dnx_port_imb module id
     */
    DNX_PORT_IMB_MODULE_ID = 49,
    /**
     * dnx_field_tcam_access_mapper module id
     */
    DNX_FIELD_TCAM_ACCESS_MAPPER_MODULE_ID = 50,
    /**
     * dnx_field_tcam_manager module id
     */
    DNX_FIELD_TCAM_MANAGER_MODULE_ID = 51,
    /**
     * crps module id
     */
    CRPS_MODULE_ID = 52,
    /**
     * dnx_ipq_alloc_mngr module id
     */
    DNX_IPQ_ALLOC_MNGR_MODULE_ID = 53,
    /**
     * dnx_iqs module id
     */
    DNX_IQS_MODULE_ID = 54,
    /**
     * dnx_ingress_congestion module id
     */
    DNX_INGRESS_CONGESTION_MODULE_ID = 55,
    /**
     * dnx_field_tcam_prefix module id
     */
    DNX_FIELD_TCAM_PREFIX_MODULE_ID = 56,
    /**
     * dbal module id
     */
    DBAL_MODULE_ID = 57,
    /**
     * dnx_field_tcam_bank module id
     */
    DNX_FIELD_TCAM_BANK_MODULE_ID = 58,
    /**
     * dnx_algo_field module id
     */
    DNX_ALGO_FIELD_MODULE_ID = 59,
    /**
     * lif_mngr module id
     */
    LIF_MNGR_MODULE_ID = 60,
    /**
     * Number of elements in enum
     */
    NOF_MODULE_ID = 61
} dnxc_module_id_e;


#endif /* __DNXC_MODULE_IDS_TYPES_H__ */
