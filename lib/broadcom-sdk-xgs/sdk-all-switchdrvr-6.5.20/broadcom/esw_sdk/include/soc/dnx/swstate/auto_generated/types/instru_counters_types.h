/** \file dnx/swstate/auto_generated/types/instru_counters_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __INSTRU_COUNTERS_TYPES_H__
#define __INSTRU_COUNTERS_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_nif.h>
/*
 * STRUCTs
 */

/**
 * SW structs for last read record per core.
 */
typedef struct {
    /**
     * The number of record written up to the last record read.
     */
    uint32 record_last_read_nof;
} sync_counters_icgm_per_core_t;

/**
 * SW structs for ICGM synchronized counters.
 */
typedef struct {
    /**
     * If TRUE The structure was written to.
     */
    uint8 sync_counters_started;
    /**
     * The ECI timestamp in 1588 format, when the recording started.
     */
    uint64 tod_1588_timestamp_start;
    /**
     * The number of record written up to the last record read, per core
     */
    sync_counters_icgm_per_core_t* per_core_info;
} icgm_sync_counters_info_t;

/**
 * SW structs for last read record for lanes per ETHU.
 */
typedef struct {
    /**
     * The number of record written up to the last record read.
     */
    uint32* record_last_read_nof;
} sync_counters_nif_per_eth_info_t;

/**
 * SW structs for NIF synchronized counters.
 */
typedef struct {
    /**
     * If TRUE The structure was written to.
     */
    uint8 sync_counters_started;
    /**
     * The ECI timestamp in 1588 format, when the recording started.
     */
    uint64 tod_1588_timestamp_start;
    /**
     * The number of record written up to the last record read per info
     */
    sync_counters_nif_per_eth_info_t** per_ethu_info;
} nif_sync_counters_info_t;

/**
 * SW state for current state of synchronized counters.
 */
typedef struct {
    /**
     * SW state ICGM synchronized counters
     */
    icgm_sync_counters_info_t icgm_countes;
    /**
     * SW state NIF synchronized counters
     */
    nif_sync_counters_info_t nif_countes;
} instru_sync_counters_sw_state_t;


#endif /* __INSTRU_COUNTERS_TYPES_H__ */
