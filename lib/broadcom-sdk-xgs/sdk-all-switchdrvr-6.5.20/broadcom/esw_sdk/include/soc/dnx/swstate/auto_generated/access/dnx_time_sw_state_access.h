/** \file dnx/swstate/auto_generated/access/dnx_time_sw_state_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_TIME_SW_STATE_ACCESS_H__
#define __DNX_TIME_SW_STATE_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_time_sw_state_types.h>
#include <include/bcm/types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_time_interface_db_is_init
 */
typedef int (*dnx_time_interface_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_time_interface_db_init
 */
typedef int (*dnx_time_interface_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_time_interface_db_flags_set
 */
typedef int (*dnx_time_interface_db_flags_set_cb)(
    int unit, uint32 flags);

/**
 * implemented by: dnx_time_interface_db_flags_get
 */
typedef int (*dnx_time_interface_db_flags_get_cb)(
    int unit, uint32 *flags);

/**
 * implemented by: dnx_time_interface_db_id_set
 */
typedef int (*dnx_time_interface_db_id_set_cb)(
    int unit, int id);

/**
 * implemented by: dnx_time_interface_db_id_get
 */
typedef int (*dnx_time_interface_db_id_get_cb)(
    int unit, int *id);

/**
 * implemented by: dnx_time_interface_db_heartbeat_hz_set
 */
typedef int (*dnx_time_interface_db_heartbeat_hz_set_cb)(
    int unit, int heartbeat_hz);

/**
 * implemented by: dnx_time_interface_db_heartbeat_hz_get
 */
typedef int (*dnx_time_interface_db_heartbeat_hz_get_cb)(
    int unit, int *heartbeat_hz);

/**
 * implemented by: dnx_time_interface_db_clk_resolution_set
 */
typedef int (*dnx_time_interface_db_clk_resolution_set_cb)(
    int unit, int clk_resolution);

/**
 * implemented by: dnx_time_interface_db_clk_resolution_get
 */
typedef int (*dnx_time_interface_db_clk_resolution_get_cb)(
    int unit, int *clk_resolution);

/**
 * implemented by: dnx_time_interface_db_bitclock_hz_set
 */
typedef int (*dnx_time_interface_db_bitclock_hz_set_cb)(
    int unit, int bitclock_hz);

/**
 * implemented by: dnx_time_interface_db_bitclock_hz_get
 */
typedef int (*dnx_time_interface_db_bitclock_hz_get_cb)(
    int unit, int *bitclock_hz);

/**
 * implemented by: dnx_time_interface_db_status_set
 */
typedef int (*dnx_time_interface_db_status_set_cb)(
    int unit, int status);

/**
 * implemented by: dnx_time_interface_db_status_get
 */
typedef int (*dnx_time_interface_db_status_get_cb)(
    int unit, int *status);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable flags
 */
typedef struct {
    dnx_time_interface_db_flags_set_cb set;
    dnx_time_interface_db_flags_get_cb get;
} dnx_time_interface_db_flags_cbs;

/**
 * This structure holds the access functions for the variable id
 */
typedef struct {
    dnx_time_interface_db_id_set_cb set;
    dnx_time_interface_db_id_get_cb get;
} dnx_time_interface_db_id_cbs;

/**
 * This structure holds the access functions for the variable heartbeat_hz
 */
typedef struct {
    dnx_time_interface_db_heartbeat_hz_set_cb set;
    dnx_time_interface_db_heartbeat_hz_get_cb get;
} dnx_time_interface_db_heartbeat_hz_cbs;

/**
 * This structure holds the access functions for the variable clk_resolution
 */
typedef struct {
    dnx_time_interface_db_clk_resolution_set_cb set;
    dnx_time_interface_db_clk_resolution_get_cb get;
} dnx_time_interface_db_clk_resolution_cbs;

/**
 * This structure holds the access functions for the variable bitclock_hz
 */
typedef struct {
    dnx_time_interface_db_bitclock_hz_set_cb set;
    dnx_time_interface_db_bitclock_hz_get_cb get;
} dnx_time_interface_db_bitclock_hz_cbs;

/**
 * This structure holds the access functions for the variable status
 */
typedef struct {
    dnx_time_interface_db_status_set_cb set;
    dnx_time_interface_db_status_get_cb get;
} dnx_time_interface_db_status_cbs;

/**
 * This structure holds the access functions for the variable dnx_time_interface_sw_state_t
 */
typedef struct {
    dnx_time_interface_db_is_init_cb is_init;
    dnx_time_interface_db_init_cb init;
    /**
     * Access struct for flags
     */
    dnx_time_interface_db_flags_cbs flags;
    /**
     * Access struct for id
     */
    dnx_time_interface_db_id_cbs id;
    /**
     * Access struct for heartbeat_hz
     */
    dnx_time_interface_db_heartbeat_hz_cbs heartbeat_hz;
    /**
     * Access struct for clk_resolution
     */
    dnx_time_interface_db_clk_resolution_cbs clk_resolution;
    /**
     * Access struct for bitclock_hz
     */
    dnx_time_interface_db_bitclock_hz_cbs bitclock_hz;
    /**
     * Access struct for status
     */
    dnx_time_interface_db_status_cbs status;
} dnx_time_interface_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_time_interface_db_cbs dnx_time_interface_db;

#endif /* __DNX_TIME_SW_STATE_ACCESS_H__ */
