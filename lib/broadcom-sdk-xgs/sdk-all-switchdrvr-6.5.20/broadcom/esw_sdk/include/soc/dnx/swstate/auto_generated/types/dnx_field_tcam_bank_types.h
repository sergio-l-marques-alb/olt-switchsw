/** \file dnx/swstate/auto_generated/types/dnx_field_tcam_bank_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __DNX_FIELD_TCAM_BANK_TYPES_H__
#define __DNX_FIELD_TCAM_BANK_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_tcam_access_types.h>
/*
 * MACROs
 */

#define FIELD_TCAM_BANK_IS_BIG_BANK(bank_id) ((bank_id)<dnx_data_field.tcam.nof_big_banks_get(unit))

#define FIELD_TCAM_BANK_NOF_ENTRIES(bank_id) ((FIELD_TCAM_BANK_IS_BIG_BANK(bank_id))?dnx_data_field.tcam.nof_big_bank_lines_get(unit):dnx_data_field.tcam.nof_small_bank_lines_get(unit))

#define FIELD_TCAM_BANK_IS_VALID(bank_id) ((bank_id)<dnx_data_field.tcam.nof_banks_get(unit))

/*
 * ENUMs
 */

/**
 * TCAM bank mode Enum
 */
typedef enum {
    /**
     * Invalid bank mode
     */
    DNX_FIELD_TCAM_BANK_MODE_INVALID = -1,
    /**
     * First enum value
     */
    DNX_FIELD_TCAM_BANK_MODE_FIRST = 0,
    /**
     * Bank mode still not set
     */
    DNX_FIELD_TCAM_BANK_MODE_NONE = DNX_FIELD_TCAM_BANK_MODE_FIRST,
    /**
     * Open bank mode is for Databases that has auto bank selection
     */
    DNX_FIELD_TCAM_BANK_MODE_OPEN,
    /**
     * Restricted bank mode is for Databases that select their banks manually
     */
    DNX_FIELD_TCAM_BANK_MODE_RESTRICTED,
    /**
     * DT mode is a special kind of restricted mode that only allows direct table Databases and special 160b/32b mode databases to be on the bank
     */
    DNX_FIELD_TCAM_BANK_MODE_RESTRICTED_DT,
    /**
     * Restricted SELECT mode is for banks allocated by handlers with bank mode of 'SELECT_WITH_LOCATION' that lets the handlers choose entry location
     */
    DNX_FIELD_TCAM_BANK_MODE_RESTRICTED_LOCATION,
    /**
     * Number of TCAM bank modes
     */
    DNX_FIELD_TCAM_BANK_MODE_NOF
} dnx_field_tcam_bank_mode_e;

/*
 * STRUCTs
 */

/**
 * Contains information about each TCAM bank
 */
typedef struct {
    /**
     * Owner of this bank
     */
    dnx_field_tcam_stage_e owner_stage;
    /**
     * Linked list that contains all handlers ids that are active on this bank
     */
    sw_state_ll_t active_handlers_id;
    /**
     * Available half keys for this bank
     */
    uint32** nof_free_entries;
    /**
     * Bank mode, see the Enum type for more details
     */
    dnx_field_tcam_bank_mode_e bank_mode;
} dnx_field_tcam_bank_t;

/**
 * Holds information about all the TCAM banks in the system
 */
typedef struct {
    /**
     * Array that represents all TCAM banks in the system
     */
    dnx_field_tcam_bank_t* tcam_banks;
} dnx_field_tcam_bank_sw_t;


#endif /* __DNX_FIELD_TCAM_BANK_TYPES_H__ */
