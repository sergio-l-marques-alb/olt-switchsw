/** \file dnx_data_max_meter.h
 * 
 * MODULE DATA MAX - 
 * Maintain max value (of all devices) per define
 * 
 * Device Data
 * SW component that maintains per device data
 * For additional details about Device Data Component goto 'dnxc_data_mgmt.h'
 *        
 *     
 * 
 * AUTO-GENERATED BY AUTOCODER!
 * DO NOT EDIT THIS FILE!
 */
/* *INDENT-OFF* */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */
#ifndef _DNX_DATA_MAX_METER_H_
/*{*/
#define _DNX_DATA_MAX_METER_H_
/*
 * INCLUDE FILES:
 * {
 */
/*
 * }
 */

/*!
* \brief This file is only used by DNX (JR2 family). Including it by
* software that is not specific to DNX is an error.
*/
#ifndef BCM_DNX_SUPPORT
#error "This file is for use by DNX (JR2) family only!"
#endif

/*
 * MAX DEFINES:
 * {
 */
/**
 * \brief
 * cbs calculation: the value need to add to the exponent in larger bucket mode
 */
#define DNX_DATA_MAX_METER_PROFILE_LARGE_BUCKET_MODE_EXP_ADD (6)

/**
 * \brief
 * max value for burst size (in bytes), which do not use large bucket mode
 */
#define DNX_DATA_MAX_METER_PROFILE_MAX_REGULAR_BUCKET_MODE_BURST (4161536)

/**
 * \brief
 * min value for reverse exponent
 */
#define DNX_DATA_MAX_METER_PROFILE_REV_EXP_MIN (0)

/**
 * \brief
 * max value for reverse exponent
 */
#define DNX_DATA_MAX_METER_PROFILE_REV_EXP_MAX (31)

/**
 * \brief
 * minimum burst size in kbits
 */
#define DNX_DATA_MAX_METER_PROFILE_BURST_SIZE_MIN (1)

/**
 * \brief
 * nof_valid_global_meters, based in nof fwd-types
 */
#define DNX_DATA_MAX_METER_PROFILE_NOF_VALID_GLOBAL_METERS (5)

/**
 * \brief
 * max nof DP commands
 */
#define DNX_DATA_MAX_METER_PROFILE_NOF_DP_COMMAND_MAX (16)

/**
 * \brief
 * to indicate global meter in HW - for Ingress Gtimer counter statistic
 */
#define DNX_DATA_MAX_METER_PROFILE_GLOBAL_ENGINE_HW_STAT_DATABASE_ID (3)

/**
 * \brief
 * size of cir/eir mantissa
 */
#define DNX_DATA_MAX_METER_PROFILE_IR_MANT_NOF_BITS (9)

/**
 * \brief
 * nof ingress meter databases
 */
#define DNX_DATA_MAX_METER_METER_DB_NOF_INGRESS_DB (3)

/**
 * \brief
 * nof egress meter databases
 */
#define DNX_DATA_MAX_METER_METER_DB_NOF_EGRESS_DB (2)

/**
 * \brief
 * nof meter ids in one meter group
 */
#define DNX_DATA_MAX_METER_METER_DB_METER_IDS_IN_GROUP (4)

/**
 * \brief
 * nof of meters resolution in shmem address range HW table 
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_ADRRESS_RANGE_RESOLUTION (8192)

/**
 * \brief
 * resolution for parameter 'object_stat_pointer_base', in API bcm_policer_engine_database_attach
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_OBJECT_STAT_POINTER_BASE_RESOLUTION (16384)

/**
 * \brief
 * the base engine that is used for engine. (except the small engines)
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_BASE_BIG_ENGINE_FOR_METER (16)

/**
 * \brief
 * holds the engines that is used for ingress eth meter, which is small and can be used only in single bucket mode
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_INGRESS_SINGLE_BUCKET_ENGINE (0)

/**
 * \brief
 * holds the engines that is used for egress eth meter, which is small and can be used only in single bucket mode
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_EGRESS_SINGLE_BUCKET_ENGINE (1)

/**
 * \brief
 * each engine contain X counters or 2*X buckets (for meter). this holds the ratio
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_COUNTERS_BUCKETS_RATIO_PER_ENGINE (2)

/**
 * \brief
 * The size in bits of the meter pointer
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_METER_POINTER_SIZE (20)

/**
 * \brief
 * Map meter pointer MSBs (from TM command) to new pointer MSBs which are used for bank selection - the size of the mapping in bits
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_METER_POINTER_MAP_SIZE (10)

/**
 * \brief
 * Invalid bank id
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_INVALID_BANK_ID (63)

/**
 * \brief
 * ptr map table index is 8 msb bits mask of the object stat id pointer. this indicates the resolution of the table based on this mask
 */
#define DNX_DATA_MAX_METER_MEM_MGMT_PTR_MAP_TABLE_RESOLUTION (4096)

/**
 * \brief
 * The max expansion size value in numeric units
 */
#define DNX_DATA_MAX_METER_EXPANSION_MAX_SIZE (7)

/*
 * }
 */

/*}*/
#endif /*_DNX_DATA_MAX_METER_H_*/
/* *INDENT-ON* */
