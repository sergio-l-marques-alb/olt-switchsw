/** \file dnx/swstate/auto_generated/types/oam_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __OAM_TYPES_H__
#define __OAM_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <include/bcm/oam.h>
#include <include/bcm/types.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
/*
 * STRUCTs
 */

/**
 * A struct used to hold group info
 */
typedef struct {
    /**
     * global encap_id allocated for oam oam reflector
     */
    int encap_id;
    /**
     * 1 if encap for oam reflector allocated
     */
    int is_allocated;
} oam_reflector_sw_db_info_t;

/**
 * A struct used to hold group info
 */
typedef struct {
    /**
     * an array of groups with a linked list of EPs
     */
    sw_state_multihead_ll_t oam_group_array_of_linked_lists;
} oam_group_sw_db_info_t;

/**
 * A struct used to hold endpoint's purely SW info
 */
typedef struct {
    /**
     * an array of local endpoints with a linked list of RMEPs
     */
    sw_state_multihead_ll_t oam_endpoint_array_of_rmep_linked_lists;
} oam_endpoint_sw_db_info_t;

/**
 * A struct used to hold OAM SW info
 */
typedef struct {
    /**
     * OAM group SW db info
     */
    oam_group_sw_db_info_t oam_group_sw_db_info;
    /**
     * OAM endpoint SW db info
     */
    oam_endpoint_sw_db_info_t oam_endpoint_sw_db_info;
    /**
     * OAM reflector SW db info
     */
    oam_reflector_sw_db_info_t reflector;
    /**
     * trap refence counter by tst
     */
    uint32 tst_trap_used_cnt;
} oam_sw_db_info_t;


#endif /* __OAM_TYPES_H__ */
