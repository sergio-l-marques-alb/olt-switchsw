/** \file dnx/swstate/auto_generated/access/interrupt_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * $Copyright: (c) 2020 Broadcom.
 * Broadcom Proprietary and Confidential. All rights reserved.$
 */

#ifndef __INTERRUPT_ACCESS_H__
#define __INTERRUPT_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnx/swstate/auto_generated/types/interrupt_types.h>
#include <soc/types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: intr_db_is_init
 */
typedef int (*intr_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: intr_db_init
 */
typedef int (*intr_db_init_cb)(
    int unit);

/**
 * implemented by: intr_db_flags_set
 */
typedef int (*intr_db_flags_set_cb)(
    int unit, uint32 flags_idx_0, uint32 flags);

/**
 * implemented by: intr_db_flags_get
 */
typedef int (*intr_db_flags_get_cb)(
    int unit, uint32 flags_idx_0, uint32 *flags);

/**
 * implemented by: intr_db_flags_alloc
 */
typedef int (*intr_db_flags_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: intr_db_storm_timed_count_set
 */
typedef int (*intr_db_storm_timed_count_set_cb)(
    int unit, uint32 storm_timed_count_idx_0, uint32 storm_timed_count);

/**
 * implemented by: intr_db_storm_timed_count_get
 */
typedef int (*intr_db_storm_timed_count_get_cb)(
    int unit, uint32 storm_timed_count_idx_0, uint32 *storm_timed_count);

/**
 * implemented by: intr_db_storm_timed_count_alloc
 */
typedef int (*intr_db_storm_timed_count_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: intr_db_storm_timed_period_set
 */
typedef int (*intr_db_storm_timed_period_set_cb)(
    int unit, uint32 storm_timed_period_idx_0, uint32 storm_timed_period);

/**
 * implemented by: intr_db_storm_timed_period_get
 */
typedef int (*intr_db_storm_timed_period_get_cb)(
    int unit, uint32 storm_timed_period_idx_0, uint32 *storm_timed_period);

/**
 * implemented by: intr_db_storm_timed_period_alloc
 */
typedef int (*intr_db_storm_timed_period_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: intr_db_storm_nominal_set
 */
typedef int (*intr_db_storm_nominal_set_cb)(
    int unit, uint32 storm_nominal);

/**
 * implemented by: intr_db_storm_nominal_get
 */
typedef int (*intr_db_storm_nominal_get_cb)(
    int unit, uint32 *storm_nominal);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable flags
 */
typedef struct {
    intr_db_flags_set_cb set;
    intr_db_flags_get_cb get;
    intr_db_flags_alloc_cb alloc;
} intr_db_flags_cbs;

/**
 * This structure holds the access functions for the variable storm_timed_count
 */
typedef struct {
    intr_db_storm_timed_count_set_cb set;
    intr_db_storm_timed_count_get_cb get;
    intr_db_storm_timed_count_alloc_cb alloc;
} intr_db_storm_timed_count_cbs;

/**
 * This structure holds the access functions for the variable storm_timed_period
 */
typedef struct {
    intr_db_storm_timed_period_set_cb set;
    intr_db_storm_timed_period_get_cb get;
    intr_db_storm_timed_period_alloc_cb alloc;
} intr_db_storm_timed_period_cbs;

/**
 * This structure holds the access functions for the variable storm_nominal
 */
typedef struct {
    intr_db_storm_nominal_set_cb set;
    intr_db_storm_nominal_get_cb get;
} intr_db_storm_nominal_cbs;

/**
 * This structure holds the access functions for the variable soc_dnx_intr_t
 */
typedef struct {
    intr_db_is_init_cb is_init;
    intr_db_init_cb init;
    /**
     * Access struct for flags
     */
    intr_db_flags_cbs flags;
    /**
     * Access struct for storm_timed_count
     */
    intr_db_storm_timed_count_cbs storm_timed_count;
    /**
     * Access struct for storm_timed_period
     */
    intr_db_storm_timed_period_cbs storm_timed_period;
    /**
     * Access struct for storm_nominal
     */
    intr_db_storm_nominal_cbs storm_nominal;
} intr_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern intr_db_cbs intr_db;

#endif /* __INTERRUPT_ACCESS_H__ */
