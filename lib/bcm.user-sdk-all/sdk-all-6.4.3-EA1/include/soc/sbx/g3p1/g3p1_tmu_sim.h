
/*
 * $Id: tmu_h_ext_sim.stg,v 1.11 Broadcom SDK $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
 *
 * g3p1_tmu.h: Guadalupe2k V1.3 TMU table manager & wrappers
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from sdk/caladan_ucode/g3p1/src/g3p1_tmu_cfg.lrp.
 * Edits to this file will be lost when it is regenerated.
 *
 */
 
#ifndef _SOC_SBX_G3P1_TMU_SIM_H
#define _SOC_SBX_G3P1_TMU_SIM_H

#include <soc/types.h>
#include <soc/drv.h>

#if defined(BCM_CALADAN3_SUPPORT) && defined(BCM_CALADAN3_G3P1_SUPPORT) 

#define MAX_BUFFER_SIZE 8*1024
#define MAX_NUM_FIELD 128


extern int soc_sbx_g3p1_mac_add_ext_sim(int unit,  soc_sbx_g3p1_6_byte_t imac ,  int vsi , soc_sbx_g3p1_mac_t *entry);

extern int soc_sbx_g3p1_mac_delete_ext_sim(int unit,  soc_sbx_g3p1_6_byte_t imac ,  int vsi );

extern int soc_sbx_g3p1_mac_get_ext_sim(int unit,  soc_sbx_g3p1_6_byte_t imac ,  int vsi , soc_sbx_g3p1_mac_t *entry);


extern int soc_sbx_g3p1_pvv2e_add_ext_sim(int unit,  int vrf ,  int port ,  int ovid ,  int ivid , soc_sbx_g3p1_pvv2e_t *entry);

extern int soc_sbx_g3p1_pvv2e_delete_ext_sim(int unit,  int vrf ,  int port ,  int ovid ,  int ivid );

extern int soc_sbx_g3p1_pvv2e_get_ext_sim(int unit,  int vrf ,  int port ,  int ovid ,  int ivid , soc_sbx_g3p1_pvv2e_t *entry);


extern int soc_sbx_g3p1_labels_add_ext_sim(int unit,  int label2 ,  int resv ,  int port ,  int label1 , soc_sbx_g3p1_labels_t *entry);

extern int soc_sbx_g3p1_labels_delete_ext_sim(int unit,  int label2 ,  int resv ,  int port ,  int label1 );

extern int soc_sbx_g3p1_labels_get_ext_sim(int unit,  int label2 ,  int resv ,  int port ,  int label1 , soc_sbx_g3p1_labels_t *entry);


extern int soc_sbx_g3p1_v4da_add_ext_sim(int unit,  int vrf ,  int da , soc_sbx_g3p1_v4da_t *entry);

extern int soc_sbx_g3p1_v4da_delete_ext_sim(int unit,  int vrf ,  int da );

extern int soc_sbx_g3p1_v4da_get_ext_sim(int unit,  int vrf ,  int da , soc_sbx_g3p1_v4da_t *entry);


extern int soc_sbx_g3p1_v4sa_add_ext_sim(int unit,  int vrf ,  int sa , soc_sbx_g3p1_v4sa_t *entry);

extern int soc_sbx_g3p1_v4sa_delete_ext_sim(int unit,  int vrf ,  int sa );

extern int soc_sbx_g3p1_v4sa_get_ext_sim(int unit,  int vrf ,  int sa , soc_sbx_g3p1_v4sa_t *entry);


extern int soc_sbx_g3p1_v4mc_sgv_add_ext_sim(int unit,  int vsi ,  int sa ,  int ga , soc_sbx_g3p1_v4mc_sgv_t *entry);

extern int soc_sbx_g3p1_v4mc_sgv_delete_ext_sim(int unit,  int vsi ,  int sa ,  int ga );

extern int soc_sbx_g3p1_v4mc_sgv_get_ext_sim(int unit,  int vsi ,  int sa ,  int ga , soc_sbx_g3p1_v4mc_sgv_t *entry);


extern int soc_sbx_g3p1_v4mc_gv_add_ext_sim(int unit,  int vsi ,  int ga , soc_sbx_g3p1_v4mc_gv_t *entry);

extern int soc_sbx_g3p1_v4mc_gv_delete_ext_sim(int unit,  int vsi ,  int ga );

extern int soc_sbx_g3p1_v4mc_gv_get_ext_sim(int unit,  int vsi ,  int ga , soc_sbx_g3p1_v4mc_gv_t *entry);


extern int soc_sbx_g3p1_v6da_add_ext_sim(int unit,  int vrf ,  int da0 ,  int da1 ,  int da2 ,  int da3 , soc_sbx_g3p1_v6da_t *entry);

extern int soc_sbx_g3p1_v6da_delete_ext_sim(int unit,  int vrf ,  int da0 ,  int da1 ,  int da2 ,  int da3 );

extern int soc_sbx_g3p1_v6da_get_ext_sim(int unit,  int vrf ,  int da0 ,  int da1 ,  int da2 ,  int da3 , soc_sbx_g3p1_v6da_t *entry);


extern int soc_sbx_g3p1_v6sa_add_ext_sim(int unit,  int vrf ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 , soc_sbx_g3p1_v6sa_t *entry);

extern int soc_sbx_g3p1_v6sa_delete_ext_sim(int unit,  int vrf ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 );

extern int soc_sbx_g3p1_v6sa_get_ext_sim(int unit,  int vrf ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 , soc_sbx_g3p1_v6sa_t *entry);


extern int soc_sbx_g3p1_v6mc_gv_add_ext_sim(int unit,  int vsi ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 , soc_sbx_g3p1_v6mc_gv_t *entry);

extern int soc_sbx_g3p1_v6mc_gv_delete_ext_sim(int unit,  int vsi ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 );

extern int soc_sbx_g3p1_v6mc_gv_get_ext_sim(int unit,  int vsi ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 , soc_sbx_g3p1_v6mc_gv_t *entry);


extern int soc_sbx_g3p1_v6mc_sgv_add_ext_sim(int unit,  int vsi ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 , soc_sbx_g3p1_v6mc_sgv_t *entry);

extern int soc_sbx_g3p1_v6mc_sgv_delete_ext_sim(int unit,  int vsi ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 );

extern int soc_sbx_g3p1_v6mc_sgv_get_ext_sim(int unit,  int vsi ,  int sa0 ,  int sa1 ,  int sa2 ,  int sa3 ,  int ga0 ,  int ga1 ,  int ga2 ,  int ga3 , soc_sbx_g3p1_v6mc_sgv_t *entry);


extern int soc_sbx_g3p1_oamrx_add_ext_sim(int unit,  int ivid ,  int ovid ,  int dir ,  int port ,  int vid_mode , soc_sbx_g3p1_oamrx_t *entry);

extern int soc_sbx_g3p1_oamrx_delete_ext_sim(int unit,  int ivid ,  int ovid ,  int dir ,  int port ,  int vid_mode );

extern int soc_sbx_g3p1_oamrx_get_ext_sim(int unit,  int ivid ,  int ovid ,  int dir ,  int port ,  int vid_mode , soc_sbx_g3p1_oamrx_t *entry);


extern int soc_sbx_g3p1_maidmep_add_ext_sim(int unit,  int svc_hdl ,  int mepid ,  int msg_type ,  int mdlvl , soc_sbx_g3p1_maidmep_t *entry);

extern int soc_sbx_g3p1_maidmep_delete_ext_sim(int unit,  int svc_hdl ,  int mepid ,  int msg_type ,  int mdlvl );

extern int soc_sbx_g3p1_maidmep_get_ext_sim(int unit,  int svc_hdl ,  int mepid ,  int msg_type ,  int mdlvl , soc_sbx_g3p1_maidmep_t *entry);


extern int soc_sbx_g3p1_emlfilter_add_ext_sim(int unit,  int emlindex , soc_sbx_g3p1_emlfilter_t *entry);

extern int soc_sbx_g3p1_emlfilter_delete_ext_sim(int unit,  int emlindex );

extern int soc_sbx_g3p1_emlfilter_get_ext_sim(int unit,  int emlindex , soc_sbx_g3p1_emlfilter_t *entry);


extern int soc_sbx_g3p1_ete_add_ext_sim(int unit,  int etei , soc_sbx_g3p1_ete_t *entry);

extern int soc_sbx_g3p1_ete_delete_ext_sim(int unit,  int etei );

extern int soc_sbx_g3p1_ete_get_ext_sim(int unit,  int etei , soc_sbx_g3p1_ete_t *entry);


extern int soc_sbx_g3p1_oam_ep_add_ext_sim(int unit,  int oam_epi , soc_sbx_g3p1_oam_ep_t *entry);

extern int soc_sbx_g3p1_oam_ep_delete_ext_sim(int unit,  int oam_epi );

extern int soc_sbx_g3p1_oam_ep_get_ext_sim(int unit,  int oam_epi , soc_sbx_g3p1_oam_ep_t *entry);


extern int soc_sbx_g3p1_oam_local_add_ext_sim(int unit,  int oam_locali , soc_sbx_g3p1_oam_local_t *entry);

extern int soc_sbx_g3p1_oam_local_delete_ext_sim(int unit,  int oam_locali );

extern int soc_sbx_g3p1_oam_local_get_ext_sim(int unit,  int oam_locali , soc_sbx_g3p1_oam_local_t *entry);


extern int soc_sbx_g3p1_oam_peer_add_ext_sim(int unit,  int oam_peer_idx , soc_sbx_g3p1_oam_peer_t *entry);

extern int soc_sbx_g3p1_oam_peer_delete_ext_sim(int unit,  int oam_peer_idx );

extern int soc_sbx_g3p1_oam_peer_get_ext_sim(int unit,  int oam_peer_idx , soc_sbx_g3p1_oam_peer_t *entry);


extern int soc_sbx_g3p1_labels3_add_ext_sim(int unit,  int label3 ,  int label2 ,  int label1 ,  int resv1 ,  int port , soc_sbx_g3p1_labels3_t *entry);

extern int soc_sbx_g3p1_labels3_delete_ext_sim(int unit,  int label3 ,  int label2 ,  int label1 ,  int resv1 ,  int port );

extern int soc_sbx_g3p1_labels3_get_ext_sim(int unit,  int label3 ,  int label2 ,  int label1 ,  int resv1 ,  int port , soc_sbx_g3p1_labels3_t *entry);


extern int soc_sbx_g3p1_bfd_ld2e_add_ext_sim(int unit,  int localDiscri , soc_sbx_g3p1_bfd_ld2e_t *entry);

extern int soc_sbx_g3p1_bfd_ld2e_delete_ext_sim(int unit,  int localDiscri );

extern int soc_sbx_g3p1_bfd_ld2e_get_ext_sim(int unit,  int localDiscri , soc_sbx_g3p1_bfd_ld2e_t *entry);


extern int soc_sbx_g3p1_sample_dm1_add_ext_sim(int unit,  int index_1 ,  int index_2 , soc_sbx_g3p1_sample_dm1_t *entry);

extern int soc_sbx_g3p1_sample_dm1_delete_ext_sim(int unit,  int index_1 ,  int index_2 );

extern int soc_sbx_g3p1_sample_dm1_get_ext_sim(int unit,  int index_1 ,  int index_2 , soc_sbx_g3p1_sample_dm1_t *entry);


#endif

#endif
