#!/usr/bin/perl -w

# arg 0 is stack trace file name
# arg 1 is binary to run trace against

$ADDR2LINE_PATH=" /opt/freescale/usr/local/gcc-4.0.2-glibc-2.3.6-nptl-2/powerpc-e300c3-linux/bin/powerpc-e300c3-linux-addr2line ";
$ADDR2LINE_OPT=" --exe=$ARGV[1] -fs ";
open(STACK, $ARGV[0]) or die "can't open stack file";
my $fault;
my $return;
my $term;
my $line;

if (@ARGV ne 2)
{
  die "needs 2 args";
}

while($line = <STACK>)
{
  if($line =~ m/Software/s)
  {
    print $line;
    $term = $line;
    $line =~ s/.*0x//g;
    $fault = $line;
    $line = <STACK>;
    print $line;
    $line = <STACK>;
    $return = `$ADDR2LINE_PATH $ADDR2LINE_OPT $fault 2>\/dev\/null`;
    if($return =~ m/.\?/)
    {
      print "Could not map terminal instruction $term\n";
    }
    else
    {
      my $function;
      my $file; 
      ($function, $file) = split(/\n/, $return);
      print "Mapped $function at $file\n";
    }
  }

  if($line =~ m/link/s)
  {
    $line =~ s/.*0x//g;
    $return = `$ADDR2LINE_PATH $ADDR2LINE_OPT $line 2>\/dev\/null`;
    if($return =~ m/.\?/)
    {
      print "Could not map location 0x$line";
    }
    else
    {
      my $function;
      my $file;
      ($function, $file) = split(/\n/, $return);
      print "Mapped $function at $file\n";
    }
  }

}
close(STACK);
