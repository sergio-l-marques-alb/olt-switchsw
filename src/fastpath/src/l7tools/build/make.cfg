##############################################################################
#
# make.cfg
#
# Purpose:  
#      Defines common environment variables used for all builds.
#
# Note:
#      This file is included by every Makefile.
#
##############################################################################

# Define the location of public header files.
#
# PTin added: common/ptin folder
L7PUBLIC_INCLDIR = -I$(FP_BASE)/$(OUTPATH) \
                   -I$(FP_BASE)/src/l7public/api \
                   -I$(FP_BASE)/src/l7public/common \
                   -I$(FP_BASE)/src/l7public/common/ptin \
                   -I$(FP_BASE)/src/l7public/porting \
                   -I$(FP_BASE)/src/l7public/product/$(L7_PRODUCT) \
                   -I$(FP_BASE)/src/l7public/customer/$(L7_CUSTOMER)/common \
                   -I$(FP_BASE)/src/l7public/customer/$(L7_CUSTOMER)/$(L7_PROJECT) \
                   -I$(FP_BASE)/src/l7public/exports\
                   -I$(FP_BASE)/src/nls/include \
                   -I$(FP_BASE)/vendor/netsnmp/include \
                   -I$(FP_BASE)/vendor/openssl/include

# Load cchelper keyword list for build package terminology.
#
include $(FP_ROOT)/src/l7tools/build/make.cfg.keys

# Load build rules for specific OS/platform.
#
include $(FP_ROOT)/bsp/platform/$(L7_COMPANY)/make/platform.cfg

# Load cygwin shell-specific commands (33991).
#
include $(FP_ROOT)/src/l7tools/build/HostCmds.cfg


# Define a sleep time (in seconds) to be used when building collection files 
# (.lib, .a) so that their timestamps are more recent than their newest 
# dependency file.  This prevents false rebuilds from happening.
#
TOUCH_SLEEP := 1


# CONFIG is mainly used by emweb and ipstack, but could be used elsewhere to 
# check which OS is being built.
#
ifeq (1,$(BLD_L7_TARGETOS_LINUX))
  export CONFIG       := linux
  export CONFIG_UPPER := LINUX
endif
ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
  export CONFIG       := vxworks
  export CONFIG_UPPER := VXWORKS
endif
ifeq (1,$(BLD_L7_TARGETOS_ECOS))
  export CONFIG       := ecos
  export CONFIG_UPPER := ECOS
endif

# Make 3.74 (vpath+) comes standard with Tornado 2.2.1.
# This make doesn't handle the SHELL variable properly in DOS mode.
#
OLD_MAKE_VER=3.74 (vpath+)

ifeq (1,$(BLD_L7_HOSTOS_MSWIN32))
  ifeq ($(OLD_MAKE_VER),$(MAKE_VERSION))
    # Make 3.74 is the standard make that comes with Tornado 2.2.1
    # Don't set the SHELL variable when using this make file.
  else
    # As long as a unix-style shell is available in the Cygwin installation
    # the make 3.8 program will find it. 
    SHELL=/bin/bash
  endif
endif


# Define symbol conversion utility used for VxWorks builds.
#
ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
  ifneq (,$(filter 6.5,$(L7_TARGETOS_VARIANT)))
    export CONVERTNAME := convert
    export CONVERTCMD  := $(WIND_HOME)/workbench-2.6/dfw/0160q/host/$(WIND_HOST_TYPE)/bin/$(CONVERTNAME)
  else
    ifneq (,$(filter 6.6,$(L7_TARGETOS_VARIANT)))
      export CONVERTNAME := convert
      export CONVERTCMD  := /tools/windriver/ocd/3.0/workbench-3.0/ocd/0127/host/x86-linux2/bin/$(CONVERTNAME) 
    else
      export CONVERTNAME := convertV79A
      export CONVERTCMD  := $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin/$(CONVERTNAME)
     endif
  endif
endif


# Some housekeeping values.
#   BKSL     - use where a backslash is needed in an echo or printf statement.
#   DOT      - a simple dot.
#   DS       - dollar sign.
#   EMPTY    - no character at all (used below by BLANK and SPACE).
#   LP       - left parenthesis.
#   NEWL     - new line.
#   NOOP     - no-operation, used for certain targets to suppress "Nothing to do for ..." messages.
#   RP       - right parenthesis.
#
export BKSL  := \x5C
export DOT   := .
export DS    := \x24
export EMPTY :=
export LP    := (
export NEWL  := \n
export NOOP  := @:
export RP    := )

# Derived housekeeping values.
#
# Note:  Need literals for $, (, ), etc., so make won't interpret variables
#        being echoed to an output file.
#
export BLANK :=$(EMPTY)$(EMPTY)
export DSLP  :=$(DS)$(LP)
export SPACE :=$(EMPTY) $(EMPTY)


# Set up variables to compensate for environmental command syntax differences:
#   DEVNULL  - define null device for disposing unwanted output.
#   INCCLOSE - use for enclosing the name of a file to be included, esp. for SNMP (e.g. <file.h>).
#   INCOPEN  - use for enclosing the name of a file to be included, esp. for SNMP (e.g. <file.h>).
#   MKDIRP   - make new directory, including all intervening parent directories.
#   PSEP     - path list separation character.
#   QT       - use where quotation marks are needed around a command (e.g. 'sed', '*.o').
#   REDIRERR - sequence for redirecting stderr to stdout.
#   PRINTF   - used to format text
#
ifeq (1,$(BLD_L7_HOSTOS_MSWIN32))
 DEVNULL    := >nul
 emweb_host := win32
 INCCLOSE   := >'
 INCOPEN    := '<
 LZMA_CMD   := $(FP_BASE)/src/l7tools/build/mswin32/lzma.exe
 MKDIRP     := mkdir -p
 PRINTF     := c:/cygwin/bin/printf.exe
 PSEP       := ;
 QT         := '
 REDIRERR   := 2>&1
endif
ifeq (1,$(BLD_L7_HOSTOS_LINUX))
 DEVNULL    := >/dev/null
 emweb_host := pclinux
 INCCLOSE   := \"
 INCOPEN    := \"
 LZMA_CMD   := lzma
 MKDIRP     := mkdir -p
 PRINTF     := printf
 PSEP       := :
 QT         := 
 REDIRERR   := 2>&1
endif
ifeq (1,$(BLD_L7_HOSTOS_SOLARIS))
 DEVNULL    := >/dev/null
 emweb_host := sunsolaris
 INCCLOSE   := \"
 INCOPEN    := \"
 LZMA_CMD   := lzma
 MKDIRP     := mkdir -p
 PRINTF     := printf
 PSEP       := :
 QT         := 
 REDIRERR   := 2>&1
endif
export DEVNULL INCCLOSE INCOPEN MKDIRP PSEP QT REDIRERR


# Hide output of exe utilities when suppressing make commands.
#
ifneq (verbose,$(CMD_DISPLAY_MODE))
  export HUSH  := $(DEVNULL)
endif


# Build progress message formats.
#
ifneq (terse,$(CMD_DISPLAY_MODE))
  export ANALYZING_MSG  = @printf "ANALYZING....%-12s\n"      "[$(PKGNAME)]"
  export ARCHIVING_MSG  = @printf "ARCHIVING....%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$@)
  export ASSEMBLING_MSG = @printf "ASSEMBLING...%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$<)
  export CLEANING_MSG   = @printf "CLEANING.....%-12s\n"      "[$(PKGNAME)]" 
  export COMPILING_MSG  = @printf "COMPILING....%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$<)
  export CONVERTING_MSG = @printf "CONVERTING...%-12s:  %s (via $(CONVERTNAME))\n" "[$(PKGNAME)]"
  export COPYING_MSG    = @printf "COPYING......%-12s:  %s\n" "[$(PKGNAME)]"
  export CREATING_MSG   = @printf "CREATING.....%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$@)
  export FINISHED_MSG   = @printf "FINISHED.....%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$@)
  export LINKING_MSG    = @printf "LINKING......%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$@)
  export PRELINKING_MSG = @printf "PRELINKING...%-12s:  %s\n" "[$(PKGNAME)]" $(subst ../,$(BLANK),$@)
endif


# For source/object builds, the object-related files are archived
# in this library, which is created during the linkable object
# process.  This file does not exist for source-only builds.
#
export FASTPATH_LIB = $(FP_BASE)/lib/fastpath.lib


# Names of files containing vendor-originated variable definitions.
#
export SDK_BUILD_FILE_NAME := sdk_subsystem.cfg
export SDK_FLAGS_FILE_NAME := sdk_flags.cfg


# Specify EmWeb host type.
#
ifeq (,$(strip $(EMWEB_HOST)))
  EMWEB_HOST = $(emweb_host)
endif

# The EmWeb server subsystem files are created in an archive file.
#
export EWS_ARCHIVE := _ew_server.a


# Code Review Committee treating all warnings as errors.
#   - Use CRC_WARN_ALLOW for Makefiles whose warnings are deemed acceptable.
#   - All other non-vendor code Makefiles should use CRC_WARN1.
#
export CRC_WARN_ALLOW :=
# Current ECOS compiler has an issue and need to be upgraded
# to fix most of the compiler warnings.
# This will be revisited later.
ifeq (1,$(BLD_L7_TARGETOS_ECOS))
export CRC_WARN1      := -Wno-error
else
export CRC_WARN1      := -Werror
endif
export CRC_WARN1_OFF  := -Wno-error

