##############################################################################
#
# make.pkginfo
#
# Purpose:  
#      Defines all known packages supported in FASTPATH.
#
##############################################################################


# Note: OUTPATH is picked up from Makefile either in top-of-view or top-of-output.


# Primary output sub-directories.
#
export OUT_ARCHIVES     := $(OUTPATH)/archives
export OUT_IPL          := $(OUTPATH)/ipl
export OUT_LIBS         := $(OUTPATH)/libs
export OUT_OBJECTS      := $(OUTPATH)/objects
export OUT_START        := $(OUTPATH)/start
export OUT_SYSTEM       := $(OUTPATH)/system
export OUT_SYSTEM24     := $(OUTPATH)/system24
export OUT_TARGET       := $(OUTPATH)/target

export OUTDIRLIST :=    $(OUT_ARCHIVES) \
                        $(OUT_IPL) \
                        $(OUT_LIBS) \
                        $(OUT_OBJECTS) \
                        $(OUT_START) \
                        $(OUT_SYSTEM) \
                        $(OUT_SYSTEM24) \
                        $(OUT_TARGET)


# Relative path to top of view from different output locations.
#
level1                  := ..
level2                  := ../..
level3                  := ../../..
level4                  := ../../../..

export RELOUT_ARCHIVES  := $(level3)
export RELOUT_IPL       := $(level3)
export RELOUT_LIBS      := $(level3)
export RELOUT_OBJDIRS   := $(level4)
export RELOUT_OBJECTS   := $(level3)
export RELOUT_START     := $(level3)
export RELOUT_SYSTEM    := $(level3)
export RELOUT_SYSTEM24  := $(level3)
export RELOUT_TARGET    := $(level3)


# Master list of all linker identifiers.
#
LINKER_LIST             := IPL START

# All known linker root names are listed here.
#
export ROOT_IPL         := ipl
export ROOT_START       := start


# Note: Special definitions needed by makerules.targets.
#
export OUT_start        := $(OUT_START)
export OUT_ipl          := $(OUT_IPL)


# Master list of all build package identifiers.
#
PACKAGE_LIST :=         ANDL \
                        BASE \
                        BGP \
                        BINDS \
                        PLAT_BSP \
                        CPU_BSP \
                        CHASSIS \
                        CLI \
                        EMWEB \
                        WEB \
                        IP_MCAST \
                        IPSTACK \
                        IPV6 \
                        KMOD \
                        METRO \
                        NETSNMP \
                        NLS \
                        OPENSSL \
                        TR069 \
                        TR069UI \
                        OS_LINUX \
                        OS_VXWORKS \
                        OS_ECOS \
                        QOS \
                        ROUTING \
                        SECURITY \
                        SNMP \
                        STACKING \
                        SWITCHING \
                        WIRELESS \
                        MODB \
                        XWEB \
                        XLIB \
			PTIN
# PTin added: ptin module

# All known package root names are listed here.
#
export ROOT_ANDL        := andl
export ROOT_BASE        := base
export ROOT_BGP         := bgp
export ROOT_BINDS       := binds
export ROOT_BSP         := bsp
export ROOT_PLAT_BSP    := plat_bsp
export ROOT_CPU_BSP     := cpu_bsp
export ROOT_CHASSIS     := chassis
export ROOT_CLI         := cli
export ROOT_EMWEB       := emweb
export ROOT_WEB         := web
export ROOT_IP_MCAST    := ip_mcast
export ROOT_IPSTACK     := ipstack
export ROOT_IPV6        := ipv6
export ROOT_KMOD        := kmod
export ROOT_METRO       := metro
export ROOT_NETSNMP     := netsnmp
export ROOT_NLS         := nls
export ROOT_OPENSSL     := openssl
export ROOT_TR069       := tr069c
export ROOT_OS_LINUX    := os
export ROOT_OS_VXWORKS  := os
export ROOT_OS_ECOS     := os
export ROOT_QOS         := qos
export ROOT_ROUTING     := routing
export ROOT_SECURITY    := security
export ROOT_SNMP        := snmp
export ROOT_SWITCHING   := switching
export ROOT_STACKING    := stacking
export ROOT_WIRELESS    := wireless
export ROOT_XUI         := xui
export ROOT_XLIB		:= xlib
export ROOT_MODB		:= modb
export ROOT_XWEB		:= xweb
export ROOT_TR069UI     := tr069ui
# PTin added: ptin module
export ROOT_PTIN     	:= ptin

# Generic OS output location name regardless of specific OS type.
#
# Note: Special definition needed by makerules.targets to find OS Makefile.
#
export OUT_OS           := $(OUT_OBJECTS)/os
export OUT_os           := $(OUT_OS)


# Each target output library is represented here.
#
# Note: Lower-case names are used by the rules defined in makerules.targets.
#

export OUT_ANDL         := $(OUT_OBJECTS)/$(ROOT_ANDL)
export OUT_andl         := $(OUT_ANDL)
export LIB_ANDL         := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_ANDL).lib

export OUT_BASE         := $(OUT_OBJECTS)/$(ROOT_BASE)
export OUT_base         := $(OUT_BASE)
export LIB_BASE         := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_BASE).lib

export OUT_BGP          := $(OUT_OBJECTS)/$(ROOT_BGP)
export OUT_bgp          := $(OUT_BGP)
export LIB_BGP          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_BGP).lib

export OUT_BINDS        := $(OUT_OBJECTS)/$(ROOT_BINDS)
export OUT_binds        := $(OUT_BINDS)
export LIB_BINDS        := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_BINDS).lib

export OUT_BSP          := $(OUT_OBJECTS)/$(ROOT_BSP)
export OUT_bsp          := $(OUT_BSP)
export LIB_BSP          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_BSP).lib

export OUT_PLAT_BSP          := $(OUT_OBJECTS)/$(ROOT_PLAT_BSP)
export OUT_plat_bsp          := $(OUT_PLAT_BSP)
export LIB_PLAT_BSP          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_PLAT_BSP).lib

export OUT_CPU_BSP          := $(OUT_OBJECTS)/$(ROOT_CPU_BSP)
export OUT_cpu_bsp          := $(OUT_CPU_BSP)
export LIB_CPU_BSP          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_CPU_BSP).lib

export OUT_CHASSIS      := $(OUT_OBJECTS)/$(ROOT_CHASSIS)
export OUT_chassis      := $(OUT_CHASSIS)
export LIB_CHASSIS      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_CHASSIS).lib

export OUT_CLI          := $(OUT_OBJECTS)/$(ROOT_CLI)
export OUT_cli          := $(OUT_CLI)
export LIB_CLI          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_CLI).lib

export OUT_EMWEB        := $(OUT_OBJECTS)/$(ROOT_EMWEB)
export OUT_emweb        := $(OUT_EMWEB)
export LIB_EMWEB        := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_EMWEB).lib

export OUT_WEB        := $(OUT_OBJECTS)/$(ROOT_WEB)
export OUT_web        := $(OUT_WEB)
export LIB_WEB        := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_WEB).lib

export OUT_IP_MCAST     := $(OUT_OBJECTS)/$(ROOT_IP_MCAST)
export OUT_ip_mcast     := $(OUT_IP_MCAST)
export LIB_IP_MCAST     := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_IP_MCAST).lib

export OUT_IPSTACK      := $(OUT_OBJECTS)/$(ROOT_IPSTACK)
export OUT_ipstack      := $(OUT_IPSTACK)
export LIB_IPSTACK      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_IPSTACK).lib

export OUT_IPV6         := $(OUT_OBJECTS)/$(ROOT_IPV6)
export OUT_ipv6         := $(OUT_IPV6)
export LIB_IPV6         := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_IPV6).lib

export OUT_KMOD         := $(OUT_OBJECTS)/$(ROOT_KMOD)
export OUT_kmod         := $(OUT_KMOD)
export LIB_KMOD         := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_KMOD).lib
export ARCH_KMOD        := $(OUT_KMOD)/$(FP_PREFIX)_$(ROOT_KMOD).a

export OUT_METRO        := $(OUT_OBJECTS)/$(ROOT_METRO)
export OUT_metro        := $(OUT_METRO)
export LIB_METRO        := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_METRO).lib

export OUT_NETSNMP      := $(OUT_OBJECTS)/$(ROOT_NETSNMP)
export OUT_netsnmp      := $(OUT_NETSNMP)
export LIB_NETSNMP      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_NETSNMP).lib

export OUT_NLS          := $(OUT_OBJECTS)/$(ROOT_NLS)
export OUT_nls          := $(OUT_NLS)
export LIB_NLS          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_NLS).lib

export OUT_OPENSSL      := $(OUT_OBJECTS)/$(ROOT_OPENSSL)
export OUT_openssl      := $(OUT_OPENSSL)
export LIB_OPENSSL      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_OPENSSL).lib

export OUT_TR069        := $(OUT_OBJECTS)/$(ROOT_TR069)
export OUT_tr069        := $(OUT_TR069)
export LIB_TR069        := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_TR069).lib

export OUT_TR069UI      := $(OUT_OBJECTS)/$(ROOT_TR069UI)
export OUT_tr069ui      := $(OUT_TR069UI)
export LIB_TR069UI      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_TR069UI).lib

export OUT_OS_LINUX     := $(OUT_OBJECTS)/$(ROOT_OS_LINUX)
export OUT_os_linux     := $(OUT_OS_LINUX)
export LIB_OS_LINUX     := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_OS_LINUX).lib

export OUT_OS_VXWORKS   := $(OUT_OBJECTS)/$(ROOT_OS_VXWORKS)
export OUT_os_vxworks   := $(OUT_OS_VXWORKS)
export LIB_OS_VXWORKS   := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_OS_VXWORKS).lib

export OUT_OS_ECOS      := $(OUT_OBJECTS)/$(ROOT_OS_ECOS)
export OUT_os_ecos      := $(OUT_OS_ECOS)
export LIB_OS_ECOS      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_OS_ECOS).lib

export OUT_QOS          := $(OUT_OBJECTS)/$(ROOT_QOS)
export OUT_qos          := $(OUT_QOS)
export LIB_QOS          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_QOS).lib

export OUT_ROUTING      := $(OUT_OBJECTS)/$(ROOT_ROUTING)
export OUT_routing      := $(OUT_ROUTING)
export LIB_ROUTING      := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_ROUTING).lib

export OUT_SECURITY     := $(OUT_OBJECTS)/$(ROOT_SECURITY)
export OUT_security     := $(OUT_SECURITY)
export LIB_SECURITY     := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_SECURITY).lib

export OUT_SNMP         := $(OUT_OBJECTS)/$(ROOT_SNMP)
export OUT_snmp         := $(OUT_SNMP)
export LIB_SNMP         := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_SNMP).lib

export OUT_SWITCHING    := $(OUT_OBJECTS)/$(ROOT_SWITCHING)
export OUT_switching    := $(OUT_SWITCHING)
export LIB_SWITCHING    := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_SWITCHING).lib

export OUT_STACKING     := $(OUT_OBJECTS)/$(ROOT_STACKING)
export OUT_stacking     := $(OUT_STACKING)
export LIB_STACKING     := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_STACKING).lib

export OUT_WIRELESS     := $(OUT_OBJECTS)/$(ROOT_WIRELESS)
export OUT_wireless     := $(OUT_WIRELESS)
export LIB_WIRELESS     := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_WIRELESS).lib

export OUT_XUI          := $(OUT_OBJECTS)/$(ROOT_XUI)
export OUT_xui          := $(OUT_XUI)
export LIB_XUI          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_XUI).lib

export OUT_MODB          := $(OUT_OBJECTS)/$(ROOT_MODB)
export OUT_modb          := $(OUT_MODB)
export LIB_MODB          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_MODB).lib

export OUT_XWEB          := $(OUT_OBJECTS)/$(ROOT_XWEB)
export OUT_xweb          := $(OUT_XWEB)
export LIB_XWEB          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_XWEB).lib

export OUT_XLIB          := $(OUT_OBJECTS)/$(ROOT_XLIB)
export OUT_xlib          := $(OUT_XLIB)
export LIB_XLIB          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_XLIB).lib

# PTin added: ptin module
export OUT_PTIN          := $(OUT_OBJECTS)/$(ROOT_PTIN)
export OUT_ptin          := $(OUT_PTIN)
export LIB_PTIN          := $(OUT_LIBS)/$(FP_PREFIX)_$(ROOT_PTIN).lib
