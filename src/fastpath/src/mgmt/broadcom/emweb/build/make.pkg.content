# EmWeb Content package-level definition included by Makefile.emweb.
#

# Currently providing support for both the original content tree format, where
# everything is defined relative to the content directory, and the new rearranged
# tree format, where each content/xxxx subtree is specified for a particular
# build.
#
# The ROOT_METHOD variable is defined to indicate support for the latter.
#
ifeq (,$(ROOT_METHOD))
  OLD_FMT_CONTENT := Y
endif

# Build up a local source trees and assign to caller's variable at the end.
#
# The content_tree and platform_tree variables pick up all subdirs relative
# to the specified path.
#
# The content_xtra picks up only files within the specified path (i.e., 
# no subdirs).  This is needed for certain content where a complete
# subtree is not wanted (e.g. security, but without ssh_ssl).
#
# Note: These path names are relative to the content directory.
#
content_tree  :=
content_xtra  :=
platform_tree :=

# These sources are included as part of the base package.
#
ifdef OLD_FMT_CONTENT
  fixed_base_dirs      := dns images js sntp system 
  fixed_security_dirs  := dot1x radius tacacs
  fixed_switching_dirs := dot1p dot1q igmp_snooping lag lldp mfdb mld_snooping spanning_tree voice_vlan

  content_tree += \
	$(foreach dir,$(fixed_base_dirs),base/$(dir)) \
	java/base \
	$(foreach dir,$(fixed_security_dirs),security/$(dir)) \
	$(foreach dir,$(fixed_switching_dirs),switching/$(dir))

  content_xtra += \
	base \
	security \
	switching
else
  content_tree += \
	root \
	base \
	security \
	switching
endif


# Conditional source inclusion
#

# These sources are included only if CHASSIS type is being built.
ifeq (1,$(BLD_L7_CHASSIS_IS_TYPE_CHASSIS))
  content_tree += \
	chassis
endif

# These sources are included only if BGP package is present.
ifeq (1,$(BLD_L7_FLEX_BGP))
  content_tree += \
	bgp
endif

# These sources are included only if IP_MCAST package is present.
ifeq (1,$(BLD_L7_FLEX_IP_MCAST))
  content_tree += \
	ip_mcast

  ifeq (1,$(BLD_L7_FLEX_IPV6))
    content_tree += \
	ip_mcast6
  endif
endif

# These sources are included only if QOS package is present.
ifeq (1,$(BLD_L7_FLEX_QOS))
  ifdef OLD_FMT_CONTENT
    fixed_qos_dirs :=

    content_tree += \
	$(foreach dir,$(fixed_qos_dirs),qos/$(dir))

    content_xtra += \
	qos
  else
    content_tree += \
	qos
  endif	
endif

# These sources are included only if ROUTING package is present.
ifeq (1,$(BLD_L7_PACKAGE_ROUTING))
  ifdef OLD_FMT_CONTENT
    fixed_routing_dirs := arp ip relay router_discovery routing vlan_routing

    content_tree += \
	$(foreach dir,$(fixed_routing_dirs),routing/$(dir))

    content_xtra += \
	routing
  else
    content_tree += \
	routing \
	switching_flex/dot1q
  endif	
endif

# These sources are included only if IPV6 package is present.
ifeq (1,$(BLD_L7_FLEX_IPV6))
  content_tree += \
	routingv6
endif

# These sources are included only if IPV6_MGMT and/or IPV6 package is present.
ifeq (1,$(BLD_L7_FLEX_HAS_COMMON_IPV6))
  content_tree += \
	ipv6
endif

# These sources are included only if SECURE_MGMT package is present.
ifeq (1,$(BLD_L7_FLEX_SECURE_MGMT))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	security/ssh \
	security/ssl
  else
    content_tree += \
	secure_mgmt
  endif	
endif

# These sources are included only if STACKING flex package is present
ifeq (1,$(BLD_L7_FLEX_STACKING))
  content_tree += stacking
  
  ifdef OLD_FMT_CONTENT
    content_tree += java/stacking
  endif
endif

# These sources are included only if WIRELESS package is present.
ifeq (1,$(BLD_L7_FLEX_WIRELESS))
  content_tree += wireless
  
  ifdef OLD_FMT_CONTENT
    content_tree += java/nv
  endif
endif


# Conditional source inclusion -- Flex Components.
#

# These sources are included only if DOT1AD component is present.
ifeq (1,$(BLD_L7_COMPONENTS_DOT1AD))
  content_tree += metro_flex/dot1ad
endif

# These sources are included only if DOT3AH component is present.
ifeq (1,$(BLD_L7_COMPONENTS_DOT3AH))
  content_tree += metro_flex/dot3ah
endif

# These sources are included only if TR069 component is present.
ifeq (1,$(BLD_L7_UI_HAS_TR069))
  content_tree += metro_flex/tr069
endif

# These source files are included only if ACL flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_ACL))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	qos/acl
  else
    content_tree += \
	qos_flex/acl
  endif	
endif


# These source files are included only if CAPTIVE_PORTAL flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_CAPTIVE_PORTAL))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	security/captive_portal
  else
    content_tree += \
	security_flex/captive_portal
  endif	
endif


# These source files are included only if COS flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_COS))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	qos/cos
  else
    content_tree += \
	qos_flex/cos 
	
  endif	
endif

# These source files are included only if voip component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_VOIP))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	qos/voip
  else
    content_tree += \
	qos_flex/voip
  endif	
endif


# These source files are included only if DHCPS flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DHCPS))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	base/dhcp
  else
    content_tree += \
	base_flex/dhcps
  endif	
endif

# These source files are included only if POE flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_POE))
  ifdef OLD_FMT_CONTENT
    content_tree += \
        base/poe
  else
    content_tree += \
        base_flex/poe
  endif
endif

# These source files are included only if SFLOW flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_SFLOW))
  ifdef OLD_FMT_CONTENT
    content_tree += \
        base/sflow
  else
    content_tree += \
        base_flex/sflow
  endif
endif


# These source files are included only if DHCP_FILTER flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DHCP_FILTER))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/dhcp_filtering
  else
    content_tree += \
	switching_flex/dhcp_filter
  endif	
endif


# These source files are included only if DIFFSERV flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DIFFSERV))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	qos/diffserv
  else
    content_tree += \
	qos_flex/diffserv
  endif	
endif


# These source files are included only if DVLAN flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DVLAN))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	base/doublevlantag
  else
    content_tree += \
	base_flex/dvlan
  endif	 
endif

# These source files are included only if OUTBOUND_TELNET flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_OUTBOUND_TELNET))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	base/telnetc
  else
    content_tree += \
	base_flex/outbound_telnet
  endif	 
endif


# These source files are included only if GARP flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_GARP))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/garp
  else
    content_tree += \
	switching_flex/garp
  endif	
endif


# These source files are included only if DAI flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DAI))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/dynamic_arp_inspection
  else
    content_tree += \
	switching_flex/dynamic_arp_inspection
  endif	
endif

# These source files are included only if IPVLAN flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_IPVLAN))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/ipsubnetvlan
  else
    content_tree += \
	switching_flex/ipvlan
  endif	
endif


# These source files are included only if MACLOCK flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_MACLOCK))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/port_mac_locking
  else
    content_tree += \
	switching_flex/maclock
  endif	
endif


# These source files are included only if MACVLAN flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_MACVLAN))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/mac_vlan
  else
    content_tree += \
	switching_flex/macvlan
  endif	
endif

# These source files are included only if DHCP_FILTER flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_STATIC_FILTERING))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/filters
  else
    content_tree += \
	switching_flex/filters
  endif	
endif


# These source files are included only if OSPF flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_OSPF))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	routing/ospf
  else
    content_tree += \
	routing_flex/ospf
  endif	
endif


# These source files are included only if PBVLAN flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_PBVLAN))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/dot1v
  else
    content_tree += \
	switching_flex/pbvlan
  endif	
endif


# These source files are included only if PROT_PORTS flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_PROT_PORTS))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	switching/protected_ports
  else
    content_tree += \
	switching_flex/prot_ports
  endif	
endif

# These source files are included only if DHCP_SNOOPING flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_DHCP_SNOOPING))
  ifdef OLD_FMT_CONTENT
    content_tree += \
        switching/dhcp_snooping
  else
    content_tree += \
        switching_flex/dhcp_snooping
  endif
endif

# These source files are included only if IPSG flex package is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_IPSG))
  ifdef OLD_FMT_CONTENT
    content_tree += \
        switching/ipsg
  else
    content_tree += \
        switching_flex/ipsg
  endif
endif

# These source files are included only if RIP flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_RIP))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	routing/rip
  else
    content_tree += \
	routing_flex/rip
  endif	
endif


# These source files are included only if RLIM flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_RLIM))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	routing/loopback \
	routing/tunnel
  else
    content_tree += \
	routing_flex/rlim
  endif	
endif


# These source files are included only if TACACS flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_TACACS))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	security/tacacs
  else
    content_tree += \
	security_flex/tacacs
  endif	
endif

# These source files are included only if AUTO_INSTALL flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_AUTO_INSTALL))
  ifdef OLD_FMT_CONTENT    
    content_tree += \
	base/auto_install
  else
    content_tree += \
	base_flex/auto_install
  endif
endif


# These source files are included only if VRRP flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_VRRP))
  ifdef OLD_FMT_CONTENT
    content_tree += \
	routing/vrrp
  else
    content_tree += \
	routing_flex/vrrp
  endif	
endif

# These source files are included only if ISDP flex component is part of the build.
#
ifeq (1,$(BLD_L7_COMPONENTS_ISDP))
  ifdef OLD_FMT_CONTENT
    content_tree += \
        base/isdp
  else
    content_tree += \
        base_flex/isdp
  endif
endif



# Determine which platform content to use.
#
# Note: Order counts here!  The following steps are used:
#         1. List all bmw platforms, as these are device-specific.
#         2. Replace the above for generally accepted CPU types (e.g. alpha, delta).
#         3. Replace the above for LiNe or MasterDriver platform.
#
# This is why ':=' instead of '+=' is used here when setting platform_tree.
#

ifdef OLD_FMT_CONTENT
  plat := java
else
  plat := platform
endif

ifeq (1,$(BLD_L7_PLATFORM_BCM5621X))
  platform_tree := \
	$(plat)/xgs3
endif
	
ifeq (1,$(BLD_L7_PLATFORM_CHASSIS_CFM))
  platform_tree := \
	$(plat)/xgs3
endif

ifeq (1,$(BLD_L7_PLATFORM_LYNX256))
  platform_tree := \
	$(plat)/lynx \
	$(plat)/bcm956xx
endif

ifeq (1,$(BLD_L7_PLATFORM_TUCANA256))
  platform_tree := \
	$(plat)/tucana
endif
	
ifeq (1,$(BLD_L7_PLATFORM_XGS3))
  platform_tree := \
	$(plat)/xgs3
endif
	
ifeq (1,$(BLD_L7_PLATFORM_XGS4))
  platform_tree := \
	$(plat)/xgs4
endif
	
ifeq (1,$(BLD_L7_PLATFORM_ROBO))
  platform_tree := \
	$(plat)/robo
endif

# General CPU reference platform.
#
ifeq (1,$(BLD_L7_CPU_ALPHA8245))
  platform_tree := \
	$(plat)/alpha8245
endif

ifeq (1,$(BLD_L7_CPU_DNI8541))
  platform_tree := \
	$(plat)/dni8541
endif


# LiNe or MasterDriver platform.       
#
ifeq (1,$(BLD_L7_PLATFORM_LINE_1S128P))
  platform_tree := \
	$(plat)/line
endif
	
ifeq (1,$(BLD_L7_PLATFORM_MD_3S48P))
  platform_tree := \
	$(plat)/md
endif
       


# Update caller's variable with derived tree info.
#
CONTENT_TREE += $(strip $(content_tree) $(platform_tree))
CONTENT_XTRA += $(strip $(content_xtra))

