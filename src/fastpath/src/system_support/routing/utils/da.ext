/********************************************************************
 *
 * (C) Copyright Broadcom Corporation 2003-2007
 *
 * *********************************************************************
 *
 * @filename      da.ext
 *
 * @purpose       External definitions for Dynamic Array (DA)object  
 *
 * @component     Routing Utils Component
 *
 * @comments
 *
 * @create        01/09/97
 *
 * @author        Igor Bryskin
 *
 * @end                                                                        
 *
 * ********************************************************************/        
#ifndef _da_ext
#define _da_ext

#include "std.h"
#include "local.h"

typedef Bool (*DA_BROWSEFUNC)(void *entry, ulng param);


/* Create DA Object */
e_Err DA_Construct( IN word clustSize,           /* Cluster size */
                    OUT t_Handle *p_da);         /* Pointer to return handle of successfully 
                                                    created DA object      */
/* Delete DA Object */
e_Err DA_Destruct (IN OUT t_Handle *p_da);       /* Pointer to handle of DA object
                                                    to be destroyed */

/* Insert entry into DA object */
e_Err DA_Insert( IN t_Handle da,                 /* Handle of DA object  */
                 IN void *entry,                 /* Entry to be inserted */
				 IN word index);                 /* Index in DA where entry
												    is to be inserted */
/* Get entry from DA object */
e_Err DA_Get( IN t_Handle da,                    /* Handle of DA object  */
              OUT void **p_Entry,                /* Pointer to return entry */
			  IN word index);                    /* Index in DA where entry
			                                        is stored */

/* Delete entry from DA object */
e_Err DA_Delete( IN t_Handle da,                 /* Handle of DA object  */
			  IN word index);                    /* Index in DA where entry
			                                        is stored */

/* Browse entire DA, calling  browse funcion for every entry,
   if browse funcion for some entry returns FALSE, delete entry from DA    */
e_Err DA_Browse( IN t_Handle da,                 /* Handle of DA object         */
                 IN DA_BROWSEFUNC browsefunc,    /* Pointer to user defined browse function */
                 IN ulng param);                 /* Parameter to be passed to browse function */

/* Return number of entries in DA */
e_Err DA_GetEntriesNmb(IN  t_Handle da,         /* Handle of DA object      */
                       OUT word *entriesNmb);   /* Pointer to return number of
                                                   entries */


#endif /*_da_ext*/
