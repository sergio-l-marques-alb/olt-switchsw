/********************************************************************
 *
 * (C) Copyright Broadcom Corporation 2003-2007
 *
 * *********************************************************************
 *
 * @filename               queue.ext
 *
 * @purpose                
 *
 * @component              Routing Utils Component
 *
 * @comments
 *
 * @create                 07/09/97
 *
 * @author                 Bryskin Igor
 *
 * @end
 *
 * ********************************************************************/
#include "std.h"
#include "local.h"

#ifndef _queue_ext
#define _queue_ext

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*Initiate/shut down queue management */
void Q_InitAll(void);
void Q_ShutDown(void);

/* Create queue object */
e_Err Q_Construct( word queueSize,            /* max number of entries in queue */
                   t_Handle *p_queueHandle ); /* the handler of thequeue returned if  */
                                              /* construction is OK or NULLP if wrong */

/* Delete queue object */
e_Err Q_Destruct ( t_Handle *p_queueHandle);

/* Add data to queue tail */
e_Err Q_AddTail( t_Handle queueHandle, void * entry);

/* Add data to queue head */
e_Err Q_AddHead( t_Handle queueHandle, void * entry);

/* Get data from head but don't remove */
e_Err Q_GetHead(t_Handle queueHandle, void **entry);

/* Get data from head and remove */
e_Err Q_GetHeadRemove(t_Handle queueHandle, void **entry);

/*Get number of entries in queue*/
word Q_GetEntNumber( t_Handle queueHandle);

/*Get max. number of entries in queue*/
word Q_GetSize( t_Handle queueHandle);

#ifdef __cplusplus
}
#endif

#endif /* _queue_ext */

