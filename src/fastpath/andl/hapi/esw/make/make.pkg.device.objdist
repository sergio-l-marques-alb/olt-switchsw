# Device-level makefile definitions included by andl package.
#
# Note: Only use += here (to append to existing definitions).
#
# Note: This file is normally deleted when a buildable view is converted to a
#       linkable object build.  An exception is when ANDL (and any related
#       vendor SDK) is being distributed in source form, in which case
#       this file is retained for the build.
#

# Local source path abbreviations (for convenience).
#
src_esw  := andl/hapi/esw
vend_sdk ?= vendor/broadcom/esw_sdk


# These files are normally distributed in object form and are therefore
# built when creating the linkable objects.
#
# If ANDL is being distributed as source instead, these files are *not*
# built when creating the linkable objects.
#

ifeq (0,$(LINKABLE_OBJECT_ANDLSRC))

  # Connect to the Broadcom SDK make system.
  #

  # Define file names that are generated for inclusion.
  #
  include $(FP_ROOT)/$(vend_sdk)/make/make.pkg.vendor


  # Pull in definitions created via SDK make system.
  #
  ifneq (,$(filter bldlib,$(MAKECMDGOALS)))
    ifeq (0,$(CMD_LOCAL_DIR_OR_FILE))
      -include $(SDK_BUILD_FILE)
    endif
  endif

  ifeq (,$(filter clean,$(MAKECMDGOALS)))
    -include $(SDK_FLAGS_FILE)
  endif


  # Master list of source paths to be built into this package library.
  #  - All entries must be specified relative to top-of-view $(FP_ROOT).
  #  - Defines all source locations to be referenced by the package-level makefile.
  #
  MASTERSRC += \
	$(src_esw)/base/base \
	$(src_esw)/base/bcmsys \
	$(src_esw)/policy \
	$(src_esw)/switching \
	$(src_esw)/usl/common \
        $(src_esw)/usl/port \
	$(src_esw)/usl/policy \
        $(src_esw)/usl/switching \
       	$(src_esw)/customer/$(L7_CUSTOMER)

  # PTin added: PTIN DTL module
  MASTERSRC += $(src_esw)/ptin

  # List here individual source include directories owned by this package (without the -I).
  #
  MASTERINC += $(vend_sdk)/include/customer/$(L7_CUSTOMER)


  # Conditional source inclusion.
  #

  # These sources are included only if the routing package is present
  # (otherwise stubs are used).
  ifeq (1,$(BLD_L7_PACKAGE_ROUTING))
  MASTERSRC += \
	$(src_esw)/routing \
	$(src_esw)/usl/routing
  else
  MASTERSRC += \
	$(src_esw)/switching_binds
  endif

  # These sources are included only if the ip_mcast flex package is present.
  ifeq (1,$(BLD_L7_FLEX_IP_MCAST))
  MASTERSRC += \
	$(src_esw)/ip_mcast \
	$(src_esw)/usl/ipmcast
  endif

  # These sources are included only if the qos flex package is present.
  ifeq (1,$(BLD_L7_FLEX_QOS))
  MASTERSRC += \
	$(src_esw)/qos
  endif

# These sources are included only if the metro flex package is present.
  ifeq (1,$(BLD_L7_FLEX_METRO))
  MASTERSRC += \
	$(src_esw)/metro \
	$(src_esw)/usl/metro
  endif
  
  ifeq (0,$(BLD_L7_COMPONENTS_DOT1AD))
  MASTERSRC_FILE_EXCLUDE += \
	$(src_esw)/metro/broad_dot1ad.c \
	$(src_esw)/metro/broad_l2_dot1ad.c 
  endif

  ifeq (0,$(BLD_L7_COMPONENTS_DOT3AH))
  MASTERSRC_FILE_EXCLUDE += \
	$(src_esw)/metro/broad_l2_dot3ah.c 
  endif

  # These sources are included only if the stacking flex package is present
  # (otherwise stubs are used).
  ifeq (1,$(BLD_L7_FLEX_STACKING))
  MASTERSRC += \
        $(src_esw)/stacking \
	$(src_esw)/usl/stacking/core
  ifeq (1,$(BLD_L7_COMPONENTS_NSF))
  MASTERSRC += \
        $(src_esw)/usl/stacking/nsf
  endif
  else
  MASTERSRC += \
	$(src_esw)/usl/stacking_binds
  endif
  

  # These sources are included only if the wireless flex package is present
  ifeq (1,$(BLD_L7_FLEX_WIRELESS))
  MASTERSRC += \
	$(src_esw)/wireless \
        $(src_esw)/usl/wireless
  endif
  

  # Additional source header file search paths (without the -I).
  #
  SRCINCPATHS += \
	$(src_esw)/base \
	$(src_esw)/base/bcmsys \
	$(subst -I$(FP_BASE)/,,$(BROADCOM_INCL)) \
	$(subst $(FP_BASE)/,,$(BROADCOM_SRC))


  # Additional compiler flags.
  #
  # Note: The CFLAGS_SDK variable is obtained by including the SDK_FLAGS_FILE_NAME
  #       generated by the vendor make system.
  #
  CFLAGSEXTRA += \
	$(CFLAGS_SDK) \
	-DLVL7_FIXUP 


  ifeq (0,$(BLD_L7_PRODUCT_SMARTPATH))
  CFLAGSEXTRA += \
	-DBROADCOM_DEBUG 
  endif
 
  # Identify makefile containing specific build rules to be used
  # (intentionally using '=' here).
  #
  # Note: This makefile must be included within make.magic.pkg to define
  #       the rules within the right scope of makefile processing.
  #
  BLDRULESFILE = $(FP_ROOT)/$(vend_sdk)/make/makerules.pkg.vendor

endif  # not LINKABLE_OBJECT_ANDLSRC

