/* $Id: ui_rom_defi_pb_api.h,v 1.9 Broadcom SDK $
 * $Copyright: Copyright 2012 Broadcom Corporation.
 * This program is the proprietary software of Broadcom Corporation
 * and/or its licensors, and may only be used, duplicated, modified
 * or distributed pursuant to the terms and conditions of a separate,
 * written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized
 * License, Broadcom grants no license (express or implied), right
 * to use, or waiver of any kind with respect to the Software, and
 * Broadcom expressly reserves all rights in and to the Software
 * and all intellectual property rights therein.  IF YOU HAVE
 * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
 * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
 * ALL USE OF THE SOFTWARE.  
 *  
 * Except as expressly set forth in the Authorized License,
 *  
 * 1.     This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of
 * Broadcom integrated circuit products.
 *  
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
 * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
 * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 * 
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
 * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
 * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
 * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
 * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
 * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
 * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
*/

#ifndef __UI_ROM_DEFI_PB_API_INCLUDED__
/* { */
#define __UI_ROM_DEFI_PB_API_INCLUDED__

#include <appl/dpp/UserInterface/ui_pure_defi_pb_api.h>

#include <soc/dpp/Petra/PB_TM/pb_api_cnt.h>
#include <soc/dpp/Petra/PB_TM/pb_api_mgmt.h>
#include <soc/dpp/Petra/PB_TM/pb_api_cnm.h>
#include <soc/dpp/Petra/PB_TM/pb_api_ports.h>
#include <soc/dpp/Petra/PB_TM/pb_api_egr_queuing.h>
#include <soc/dpp/Petra/PB_TM/pb_pmf_low_level_diag.h>
#include <soc/dpp/Petra/PB_TM/pb_api_flow_control.h>
#include <soc/dpp/Petra/PB_TM/pb_api_action_cmd.h>
#include <soc/dpp/Petra/PB_TM/pb_api_tdm.h>
#include <soc/dpp/Petra/PB_TM/pb_egr_acl.h>
#include <soc/dpp/Petra/PB_TM/pb_api_ingress_traffic_mgmt.h>
#include <soc/dpp/Petra/PB_TM/pb_tcam_mgmt.h>
#include <soc/dpp/Petra/PB_TM/pb_api_stack.h>
#if LINK_PB_PP_LIBRARIES
#include <soc/dpp/Petra/PB_PP/pb_pp_api_mgmt.h>
#endif
/*
  * ENUM RULES
  * {
  */

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_CAL_NDX_rule[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_MIN_VALUE | HAS_MAX_VALUE,
        UI_PB_FC_CAL_MAX_LEN-1, 0,
        2,
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the stupid
           * compiler silent.
           */
        NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "all",
    {
      {
        UI_PB_FC_CAL_MAX_LEN,
          /*
           * Casting added here just to keep the stupid compiler silent.
           */
        (long)""
        "  Maximal supported (CLI) calendar length (256):\r\n"
        "  Acting on all calendar entries\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the stupid
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_INIT_MC_STATIC_ROUTE_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "dis", 
    { 
      { 
        SOC_PB_INIT_MC_STATIC_ROUTE_MODE_DIS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_INIT_MC_STATIC_ROUTE_MODE.SOC_PB_INIT_MC_STATIC_ROUTE_MODE_DIS:\n\r"
        "  Static routing for TDM multicast cells is disabled.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "partial", 
    { 
      { 
        SOC_PB_INIT_MC_STATIC_ROUTE_MODE_PARTIAL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_INIT_MC_STATIC_ROUTE_MODE.SOC_PB_INIT_MC_STATIC_ROUTE_MODE_PARTIAL:\n\r"
        "  In this mode, the 4 MSB of the Multicast ID corresponds to the selected route\n\r"
        "  and the 12 LSB to the Egress Multicast ID.A partial number of Multicast IDs\n\r"
        "  (12 K) is available then.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "full", 
    { 
      { 
        SOC_PB_INIT_MC_STATIC_ROUTE_MODE_FULL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_INIT_MC_STATIC_ROUTE_MODE.SOC_PB_INIT_MC_STATIC_ROUTE_MODE_FULL:\n\r"
        "  In this mode, the 4 MSB of the Multicast ID corresponds to the selected route\n\r"
        "  and all the 16 bits to the Egress Multicast ID.All multicast IDs (16K) can be\n\r"
        "  used as long as the 4 MSBs have double meanings (Route number and\n\r"
        "  Multicast-ID MSBs).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_SYMBOL, 
    "partial_common", 
    { 
      { 
        SOC_PB_INIT_MC_STATIC_ROUTE_MODE_PARTIAL_COMMON, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_INIT_MC_STATIC_ROUTE_MODE.SOC_PB_INIT_MC_STATIC_ROUTE_MODE_PARTIAL_COMMON:\n\r"
        "  3 bit mask. In this mode, the 4 MSB of the Multicast ID corresponds to the selected route\n\r"
        "  and all the 16 bits to the Egress Multicast ID.All multicast IDs (16K) can be\n\r"
        "  used as long as the 4 MSBs have double meanings (Route number and\n\r"
        "  Multicast-ID MSBs).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the stupid 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

EXTERN CONST
   PARAM_VAL_RULES
     soc_pb_api_members_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,
    SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0xff,
        0,
        80,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_PORT_DIRECTION_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "incoming",
    {
      {
        SOC_PETRA_PORT_DIRECTION_INCOMING,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_DIRECTION.SOC_PETRA_PORT_DIRECTION_INCOMING:\r\n"
        "  Port direction - incoming (IFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "outgoing",
    {
      {
        SOC_PETRA_PORT_DIRECTION_OUTGOING,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_DIRECTION.SOC_PETRA_PORT_DIRECTION_OUTGOING:\r\n"
        "  Port direction - outgoing (OFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "both",
    {
      {
        SOC_PETRA_PORT_DIRECTION_BOTH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_DIRECTION.SOC_PETRA_PORT_DIRECTION_BOTH:\r\n"
        "  Port direction - both incoming (IFP) and outgoing (OFP).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_ACTION_CMD_SIZE_BYTES_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "bytes_64", 
    { 
      { 
        SOC_PB_ACTION_CMD_SIZE_BYTES_64, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ACTION_CMD_SIZE_BYTES.SOC_PB_ACTION_CMD_SIZE_BYTES_64:\n\r"
        "  Snoop the first 64 bytes of the packet.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "bytes_128", 
    { 
      { 
        SOC_PB_ACTION_CMD_SIZE_BYTES_128, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ACTION_CMD_SIZE_BYTES.SOC_PB_ACTION_CMD_SIZE_BYTES_128:\n\r"
        "  Snoop the first 128 bytes of the packet.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "bytes_192", 
    { 
      { 
        SOC_PB_ACTION_CMD_SIZE_BYTES_192, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ACTION_CMD_SIZE_BYTES.SOC_PB_ACTION_CMD_SIZE_BYTES_192:\n\r"
        "  Snoop the first 192 bytes of the packet.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "all_pckt", 
    { 
      { 
        SOC_PB_ACTION_CMD_SIZE_BYTES_ALL_PCKT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ACTION_CMD_SIZE_BYTES.SOC_PB_ACTION_CMD_SIZE_BYTES_ALL_PCKT:\n\r"
        "  Snoop the whole packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNM_GEN_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "ext_pp", 
    { 
      { 
        SOC_PB_CNM_GEN_MODE_EXT_PP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNM_GEN_MODE.SOC_PB_CNM_GEN_MODE_EXT_PP:\n\r"
        "  Generate CNM information packet including in the FTMH header all the data to\n\r"
        "  allow an external egress PP to create a CNM packet.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sampling", 
    { 
      { 
        SOC_PB_CNM_GEN_MODE_SAMPLING, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNM_GEN_MODE.SOC_PB_CNM_GEN_MODE_SAMPLING:\n\r"
        "  Generate a CNM information packet according to the sampling rate defined per\n\r"
        "  CP Queue. The CNM information packet is sent to an external egress PP which\n\r"
        "  decides if a CNM packet is generated.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNM_Q_SET_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "set_8_cps", 
    { 
      { 
        SOC_PB_CNM_Q_SET_8_CPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNM_Q_SET.SOC_PB_CNM_Q_SET_8_CPS:\n\r"
        "  For each destination system port, the CP queues are mapped the 8 consecutive\n\r"
        "  VOQs (one per traffic class).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "set_4_cps", 
    { 
      { 
        SOC_PB_CNM_Q_SET_4_CPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNM_Q_SET.SOC_PB_CNM_Q_SET_4_CPS:\n\r"
        "  For each destination system port, the CP queues are mapped to the 4 even\n\r"
        "  queues from 8 consecutive VOQs (0, 2, 4 and 6). This set must be chosen if\n\r"
        "  the CP functionality is supposed to be supported by more than 512 OFPs (and\n\r"
        "  less than 1K).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

 /* 
  * } ENUM RULES 
  */

/********************************************************/  
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     soc_pb_api_mac_addr_vals[]
#ifdef INIT
   =
{
  {
    VAL_TEXT,
    (char *)0,
    {
      {
          /*
           * Maximal number of characters.
           */
        12,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)"    MAC address parameter. 12 hex digits. No 0 no 0x Prefix",
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_OFP_PRIORITY_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "lp",
    {
      {
        SOC_TMC_FC_OFP_PRIORITY_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_OFP_PRIORITY.SOC_PB_FC_OFP_PRIORITY_LP:\n\r"
        "  OFP FC priority - Low\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "hp",
    {
      {
        SOC_TMC_FC_OFP_PRIORITY_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_OFP_PRIORITY.SOC_PB_FC_OFP_PRIORITY_HP:\n\r"
        "  OFP FC priority - High. HP-FC triggers also LP-FC\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_INBND_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disabled",
    {
      {
        SOC_PB_FC_INBND_MODE_DISABLED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_MODE.SOC_PB_FC_INBND_MODE_DISABLED:\n\r"
        "  Inband Flow Control disabled in the specified direction (generation/reception)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ll",
    {
      {
        SOC_PB_FC_INBND_MODE_LL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_MODE.SOC_PB_FC_INBND_MODE_LL:\n\r"
        "  Link-level Flow Control\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cb",
    {
      {
        SOC_PB_FC_INBND_MODE_CB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_MODE.SOC_PB_FC_INBND_MODE_CB:\n\r"
        "  Class-based Flow Control. The number of Flow Control Classes depends on the\n\r"
        "  NIF type: 2 classes for 1Gbps interface (SGMII), 8 classes for 10Gbps\n\r"
        "  interfaces (XAUI/SPAUI) \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_INBND_CB_INHERIT_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disabled",
    {
      {
        SOC_PB_FC_INBND_CB_INHERIT_DISABLED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_CB_INHERIT.SOC_PB_FC_INBND_CB_INHERIT_DISABLED:\n\r"
        "  CBFC Inheritance is disabled. Upon receiving (generating) FC of a certain\n\r"
        "  class, only this class is handled\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "up",
    {
      {
        SOC_PB_FC_INBND_CB_INHERIT_UP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_CB_INHERIT.SOC_PB_FC_INBND_CB_INHERIT_UP:\n\r"
        "  If TRUE, CBFC classes will affect lower priority classes, where the highest\n\r"
        "  priority is class 0\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "down",
    {
      {
        SOC_PB_FC_INBND_CB_INHERIT_DOWN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INBND_CB_INHERIT.SOC_PB_FC_INBND_CB_INHERIT_DOWN:\n\r"
        "  If TRUE, CBFC classes will affect lower priority classes, where the highest\n\r"
        "  priority is class 7\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_INGR_GEN_GLB_HP_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_TMC_FC_INGR_GEN_GLB_HP_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INGR_GEN_GLB_HP_MODE.SOC_PB_FC_INGR_GEN_GLB_HP_MODE_NONE:\n\r"
        "  Disable Ingress Flow Control generation via NIF, upon Global Resources High\n\r"
        "  Priority FC indication. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ll",
    {
      {
        SOC_TMC_FC_INGR_GEN_GLB_HP_MODE_LL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INGR_GEN_GLB_HP_MODE.SOC_PB_FC_INGR_GEN_GLB_HP_MODE_LL:\n\r"
        "  Enable Ingress Flow Control generation via NIF, upon Global Resources High\n\r"
        "  Priority FC indication, Link Level. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cb",
    {
      {
        SOC_TMC_FC_INGR_GEN_GLB_HP_MODE_CB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_INGR_GEN_GLB_HP_MODE.SOC_PB_FC_INGR_GEN_GLB_HP_MODE_CB:\n\r"
        "  Enable Ingress Flow Control generation via NIF, upon Global Resources High\n\r"
        "  Priority FC indication, Class Based. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_REC_OFP_RP_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "sch",
    {
      {
        SOC_PB_FC_REC_OFP_RP_SCH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_OFP_RP.SOC_PB_FC_REC_OFP_RP_SCH:\n\r"
        "  Flow Control Reception Reaction Point on OFP level - Scheduler Port. Note 1:\n\r"
        "  this option is not recommended to stop the OFP! Typically, the OFP is stopped\n\r"
        "  in the EGQ, which then backpressures the scheduler according to the EGQ FC\n\r"
        "  threshold configuration. Note 2: this option can be used to stop HR 0 - 79,\n\r"
        "  High or Low priority FC, also if the matching OFP is not used, and the HR\n\r"
        "  scheduler is used inside the scheduling hierarchy.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "egq",
    {
      {
        SOC_PB_FC_REC_OFP_RP_EGQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_OFP_RP.SOC_PB_FC_REC_OFP_RP_EGQ:\n\r"
        "  Flow Control Reception Reaction Point on OFP level - Egress Queues Manager\n\r"
        "  (EGQ)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_FC_RCY_OFP_HANDLER_rule[] 
#ifdef INIT 
   = 
{ 
  {
    VAL_SYMBOL,
    "sch",
    { 
      { 
        SOC_PB_FC_RCY_OFP_HANDLER_SCH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_FC_RCY_OFP_HANDLER.SOC_PB_FC_RCY_OFP_HANDLER_SCH:\n\r"
        "  Recycling Flow Control on port-level is handled by end to end Scheduler. \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "egq", 
    { 
      { 
        SOC_PB_FC_RCY_OFP_HANDLER_EGQ, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_FC_RCY_OFP_HANDLER.SOC_PB_FC_RCY_OFP_HANDLER_EGQ:\n\r"
        "  Recycling Flow Control on port-level is handled by the Egress Queuing block.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_FC_RCY_GLB_RCS_ID_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "lp", 
    { 
      { 
        SOC_PB_FC_RCY_GLB_RCS_ID_LP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_FC_RCY_GLB_RCS_ID.SOC_PB_FC_RCY_GLB_RCS_ID_LP:\n\r"
        "  An Index used for Recycling FC Configuration based on Global Resources FC\n\r"
        "  indication - Low Priority\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "hp", 
    { 
      { 
        SOC_PB_FC_RCY_GLB_RCS_ID_HP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_FC_RCY_GLB_RCS_ID.SOC_PB_FC_RCY_GLB_RCS_ID_HP:\n\r"
        "  An Index used for Recycling FC Configuration based on Global Resources FC\n\r"
        "  indication - High Priority\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_CAL_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "spi_oob",
    {
      {
        SOC_TMC_FC_CAL_MODE_SPI_OOB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_MODE.SOC_PB_FC_CAL_MODE_SPI_OOB:\n\r"
        "  Calendar-based Flow Control Mode: SPI-like Out-Of-Band\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ilkn_inbnd",
    {
      {
        SOC_TMC_FC_CAL_MODE_ILKN_INBND,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_MODE.SOC_PB_FC_CAL_MODE_ILKN_INBND:\n\r"
        "  Calendar-based Flow Control Mode: Interlaken Inband\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ilkn_oob",
    {
      {
        SOC_TMC_FC_CAL_MODE_ILKN_OOB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_MODE.SOC_PB_FC_CAL_MODE_ILKN_OOB:\n\r"
        "  Calendar-based Flow Control Mode: Interlaken Out-Of-Band\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_OOB_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        SOC_TMC_FC_OOB_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_OOB_ID.SOC_PB_FC_OOB_ID_A:\n\r"
        "  Out Of Band Flow Control Interface A.Used for Flow Control reception.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        SOC_TMC_FC_OOB_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_OOB_ID.SOC_PB_FC_OOB_ID_B:\n\r"
        "  Out Of Band Flow Control Interface B.Used for Flow Control reception or\n\r"
        "  generation.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_GEN_CAL_SRC_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ste",
    {
      {
        SOC_PB_FC_GEN_CAL_SRC_STE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_GEN_CAL_SRC.SOC_PB_FC_GEN_CAL_SRC_STE:\n\r"
        "  Calendar-based Flow Control source (trigger) - Ingress Statistics\n\r"
        "  Engine.Index Range (VSQ-Id): 0 - 355.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nif",
    {
      {
        SOC_PB_FC_GEN_CAL_SRC_NIF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_GEN_CAL_SRC.SOC_PB_FC_GEN_CAL_SRC_NIF:\n\r"
        "  Calendar-based Flow Control source - Index Range (NIF-ID): 0 - 63.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "glb_hp",
    {
      {
        SOC_PB_FC_GEN_CAL_SRC_GLB_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_GEN_CAL_SRC.SOC_PB_FC_GEN_CAL_SRC_GLB_HP:\n\r"
        "  Calendar-based Flow Control source - Global Resource, High Priority FC.Index\n\r"
        "  Range (Glbl-Rcs-HP-Id): 0 - 2.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "glb_lp",
    {
      {
        SOC_PB_FC_GEN_CAL_SRC_GLB_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_GEN_CAL_SRC.SOC_PB_FC_GEN_CAL_SRC_GLB_LP:\n\r"
        "  Calendar-based Flow Control source - Index Range (Glbl-Rcs-LP-Id): 0 - 2.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_PB_FC_GEN_CAL_SRC_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_GEN_CAL_SRC.SOC_PB_FC_GEN_CAL_SRC_NONE:\n\r"
        "  Invalid/non-existing source.Serves as 'empty calendar entry' indication.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_CAL_GLB_RCS_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "bdb",
    {
      {
        SOC_PB_FC_CAL_GLB_RCS_ID_BDB,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_GLB_RCS_ID.SOC_PB_FC_CAL_GLB_RCS_ID_BDB:\n\r"
        "  Global Resources Index- Buffer Descriptors\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "uni",
    {
      {
        SOC_PB_FC_CAL_GLB_RCS_ID_UNI,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_GLB_RCS_ID.SOC_PB_FC_CAL_GLB_RCS_ID_UNI:\n\r"
        "  Global Resources Index- Unicast Data Buffers\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mul",
    {
      {
        SOC_PB_FC_CAL_GLB_RCS_ID_MUL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_CAL_GLB_RCS_ID.SOC_PB_FC_CAL_GLB_RCS_ID_MUL:\n\r"
        "  Global Resources Index- Multicast Data Buffers\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_REC_CAL_DEST_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "hr",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_HR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_HR:\n\r"
        "  Calendar-based Flow Control destination (Reaction Point) - HR scheduling\n\r"
        "  element. Index Range (HR-SE-ID): 128 - 255.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_egq_lp",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_OFP_EGQ_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_OFP_EGQ_LP:\n\r"
        "  Calendar-based Flow Control destination - Outgoing FAP Port, Egress (EGQ),\n\r"
        "  Low Priority FC. Index Range (OFP-ID): 0 - 79.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_egq_hp",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_OFP_EGQ_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_OFP_EGQ_HP:\n\r"
        "  Calendar-based Flow Control destination - Outgoing FAP Port, Egress (EGQ),\n\r"
        "  High Priority FC. Index Range (OFP-ID): 0 - 79.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_sch_hr_lp",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_OFP_SCH_HR_LP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_OFP_SCH_HR_LP:\n\r"
        "  Calendar-based Flow Control destination - Outgoing FAP Port, HR scheduling\n\r"
        "  element, Low Priority FC. Index Range (OFP-HR-ID): 0 - 79.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ofp_sch_hr_hp",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_OFP_SCH_HR_HP,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_OFP_SCH_HR_HP:\n\r"
        "  Calendar-based Flow Control destination - Outgoing FAP Port, HR scheduling\n\r"
        "  element, High FC. Index Range (OFP-HR-ID): 0 - 79.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nif",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_NIF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_NIF:\n\r"
        "  Calendar-based Flow Control destination - Network Interface. Index Range\n\r"
        "  (NIF-ID): 0 - 63.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_PB_FC_REC_CAL_DEST_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_REC_CAL_DEST.SOC_PB_FC_REC_CAL_DEST_NONE:\n\r"
        "  Invalid/non-existing destination.Serves as 'empty calendar entry' indication.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_ILKN_CAL_LLFC_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_TMC_FC_ILKN_CAL_LLFC_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_ILKN_CAL_LLFC.SOC_PB_FC_ILKN_CAL_LLFC_NONE:\n\r"
        "  ILKN Calendar cannot be used to indicate LLFC (RX/TX) \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ch_0",
    {
      {
        SOC_TMC_FC_ILKN_CAL_LLFC_CH_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_ILKN_CAL_LLFC.SOC_PB_FC_ILKN_CAL_LLFC_CH_0:\n\r"
        "  ILKN Calendar Channel 0 indicates LLFC (RX/TX)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "ch_16n",
    {
      {
        SOC_TMC_FC_ILKN_CAL_LLFC_CH_16N,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_ILKN_CAL_LLFC.SOC_PB_FC_ILKN_CAL_LLFC_CH_16N:\n\r"
        "  ILKN Calendar Channels 16*n (i.e. 0, 16, 32, .., 240) indicate LLFC (RX/TX)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_NIF_OVERSUBSCR_SCHEME.SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_NONE:\n\r"
        "  No oversubscription on the NIF. Suitable for up to 100GE traffic expected on\n\r"
        "  the device NIFs.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "scheme_120ge_00",
    {
      {
        SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_120GE_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_NIF_OVERSUBSCR_SCHEME.SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_120GE_00:\n\r"
        "  Oversubscription on the NIF - 120GE scheme 0. Suitable for up to 120GE\n\r"
        "  traffic expected on the device NIFs.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "scheme_160ge_00",
    {
      {
        SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_160GE_00,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_NIF_OVERSUBSCR_SCHEME.SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_160GE_00:\n\r"
        "  Oversubscription on the NIF - 160GE scheme 0. Suitable for up to 126GE\n\r"
        "  traffic expected on the device NIFs.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_FC_EXTEND_Q_NOF_PRIOS_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "nof_prios_2",
    {
      {
        SOC_PB_FC_EXTEND_Q_NOF_PRIOS_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_EXTEND_Q_NOF_PRIOS.SOC_PB_FC_EXTEND_Q_NOF_PRIOS_2:\n\r"
        "  The number of FC-priorities per OFP: 2. This is the default configuration\n\r"
        "  allowing High/Low OFP priority. Setting this value for an OFP-group\n\r"
        "  'ungroups' it, i.e. each OFP represents a distinct destination with two\n\r"
        "  priorities.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nof_prios_4",
    {
      {
        SOC_PB_FC_EXTEND_Q_NOF_PRIOS_4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_EXTEND_Q_NOF_PRIOS.SOC_PB_FC_EXTEND_Q_NOF_PRIOS_4:\n\r"
        "  The number of FC-priorities per OFP: 4. Consumes two consecutive OFP-s\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "nof_prios_6",
    {
      {
        SOC_PB_FC_EXTEND_Q_NOF_PRIOS_6,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_FC_EXTEND_Q_NOF_PRIOS.SOC_PB_FC_EXTEND_Q_NOF_PRIOS_6:\n\r"
        "  The number of FC-priorities per OFP: 6. Consumes three consecutive OFP-s\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_MALG_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        SOC_PB_NIF_MALG_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_MALG_ID.SOC_PB_NIF_MALG_ID_A:\n\r"
        "  MAL Group A. Contains MAL-Ids 0 - 7\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        SOC_PB_NIF_MALG_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_MALG_ID.SOC_PB_NIF_MALG_ID_B:\n\r"
        "  MAL Group B. Contains MAL-Ids 8 - 15\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_NOF_NIFS_MAX_rule[]
#ifdef INIT
   =
{
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_PREAMBLE_SIZE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "soc_pb_nif_prmbl_size_columns_0",
    {
      {
        SOC_PB_NIF_PRMBL_SIZE_COLUMNS_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_PREAMBLE_SIZE.SOC_PB_NIF_PRMBL_SIZE_COLUMNS_0:\n\r"
        "  Preamble size 0 columns.No preamble completion will be performed (i.e. only\n\r"
        "  SOP and/or BCT).\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_prmbl_size_columns_1",
    {
      {
        SOC_PB_NIF_PRMBL_SIZE_COLUMNS_1,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_PREAMBLE_SIZE.SOC_PB_NIF_PRMBL_SIZE_COLUMNS_1:\n\r"
        "  Preamble size 1 columns - complete to one column.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_prmbl_size_columns_2",
    {
      {
        SOC_PB_NIF_PRMBL_SIZE_COLUMNS_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_PREAMBLE_SIZE.SOC_PB_NIF_PRMBL_SIZE_COLUMNS_2:\n\r"
        "  Preamble size 2 columns - complete to two columns.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;


/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_IPG_DIC_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "average",
    {
      {
        SOC_PB_NIF_IPG_DIC_MODE_AVERAGE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_IPG_DIC_MODE.SOC_PB_NIF_IPG_DIC_MODE_AVERAGE:\n\r"
        "  Inter-Packet Gap Deficit Idle Count mode.Use average number of characters\n\r"
        "  between frames configuration.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "minimum",
    {
      {
        SOC_PB_NIF_IPG_DIC_MODE_MINIMUM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_IPG_DIC_MODE.SOC_PB_NIF_IPG_DIC_MODE_MINIMUM:\n\r"
        "  Use minimal number of characters between frames configuration.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_CRC_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mode_32",
    {
      {
        SOC_PB_NIF_CRC_MODE_32,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_CRC_MODE.SOC_PB_NIF_CRC_MODE_32:\n\r"
        "  Standard 4B CRC-32\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_24",
    {
      {
        SOC_PB_NIF_CRC_MODE_24,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_CRC_MODE.SOC_PB_NIF_CRC_MODE_24:\n\r"
        "  Non-standard 3B CRC-24\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_PB_NIF_CRC_MODE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_CRC_MODE.SOC_PB_NIF_CRC_MODE_NONE:\n\r"
        "  RX: no CRC is expected, and the NIF does not remove the CRC bytes from the\n\r"
        "  packet.TX: no CRC is calculated and added to the packet. This mode can be\n\r"
        "  used when the packet CRC is handled by an external logic.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_LINK_FAULT_LOCATION_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "local",
    {
      {
        SOC_PB_NIF_LINK_FAULT_LOCATION_LOCAL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_LINK_FAULT_LOCATION.SOC_PB_NIF_LINK_FAULT_LOCATION_LOCAL:\n\r"
        "  Local Fault indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "remote",
    {
      {
        SOC_PB_NIF_LINK_FAULT_LOCATION_REMOTE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_LINK_FAULT_LOCATION.SOC_PB_NIF_LINK_FAULT_LOCATION_REMOTE:\n\r"
        "  Remote Fault indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_FAULT_RESPONSE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "data_and_idle",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_IDLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_IDLE:\n\r"
        "  Continue sending data, send Idles\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "data_and_rf",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_RF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_RF:\n\r"
        "  Continue sending data, send Remote Fault Indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "data_and_lf",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_LF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_DATA_AND_LF:\n\r"
        "  Continue sending data, send Local Fault Indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "no_data_idle",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_IDLE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_IDLE:\n\r"
        "  Stop sending data, send Idles\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "no_data_rf",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_RF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_RF:\n\r"
        "  Stop sending data, send Remote Fault Indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "no_data_lf",
    {
      {
        SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_LF,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FAULT_RESPONSE.SOC_PB_NIF_FAULT_RESPONSE_NO_DATA_LF:\n\r"
        "  Stop sending data, send Local Fault Indication\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_1GE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "mode_1000base_x",
    {
      {
        SOC_PB_NIF_1GE_MODE_1000BASE_X,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_1GE_MODE.SOC_PB_NIF_1GE_MODE_1000BASE_X:\n\r"
        "  1000BASE-X Gigabit Ethernet - 1G Ethernet MAC/PHY which connects directly to\n\r"
        "  the fiber.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sgmii",
    {
      {
        SOC_PB_NIF_1GE_MODE_SGMII,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_1GE_MODE.SOC_PB_NIF_1GE_MODE_SGMII:\n\r"
        "  SGMII/QSGMII MAC which communicates with an external PHY device \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_GMII_RATE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "autoneg",
    {
      {
        SOC_PB_NIF_GMII_RATE_AUTONEG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RATE.SOC_PB_NIF_GMII_RATE_AUTONEG:\n\r"
        "  SGMII rate is determined by the auto-negotiation \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rate_10mbps",
    {
      {
        SOC_PB_NIF_GMII_RATE_10Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RATE.SOC_PB_NIF_GMII_RATE_10Mbps:\n\r"
        "  SGMII rate is 10Mbit/sec\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rate_100mbps",
    {
      {
        SOC_PB_NIF_GMII_RATE_100Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RATE.SOC_PB_NIF_GMII_RATE_100Mbps:\n\r"
        "  SGMII rate is 100Mbit/sec\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "rate_1000mbps",
    {
      {
        SOC_PB_NIF_GMII_RATE_1000Mbps,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RATE.SOC_PB_NIF_GMII_RATE_1000Mbps:\n\r"
        "  SGMII rate is 1000Mbit/sec\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_GMII_RF_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ok",
    {
      {
        SOC_PB_NIF_GMII_RF_OK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RF.SOC_PB_NIF_GMII_RF_OK:\n\r"
        "  Indication of type of Remote Fault\n\r"
        "  - OK, no error. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "offline_req",
    {
      {
        SOC_PB_NIF_GMII_RF_OFFLINE_REQ,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RF.SOC_PB_NIF_GMII_RF_OFFLINE_REQ:\n\r"
        "  Indication of type of Remote Fault\n\r"
        "  - Offline request by link partner. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "lnk_fail",
    {
      {
        SOC_PB_NIF_GMII_RF_LNK_FAIL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RF.SOC_PB_NIF_GMII_RF_LNK_FAIL:\n\r"
        "  Indication of type of Remote Fault\n\r"
        "  - Link failure detected by partner.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "autoneg_err",
    {
      {
        SOC_PB_NIF_GMII_RF_AUTONEG_ERR,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_GMII_RF.SOC_PB_NIF_GMII_RF_AUTONEG_ERR:\n\r"
        "  Indication of type of Remote Fault - AutoNegotiation Error.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_ILKN_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        SOC_PB_NIF_ILKN_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_ILKN_ID.SOC_PB_NIF_ILKN_ID_A:\n\r"
        "  Interlaken Interface A. Corresponds to INTERFCE_ID 5000 (NIF_ID_ILKN_0). Can\n\r"
        "  consume 8 - 24 SerDes lanes. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        SOC_PB_NIF_ILKN_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_ILKN_ID.SOC_PB_NIF_ILKN_ID_B:\n\r"
        "  Interlaken Interface B. Corresponds to INTERFCE_ID 5001 (NIF_ID_ILKN_1). Can\n\r"
        "  consume 4 - 12 SerDes lanes\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_SYNCE_CLK_DIV_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "div_20",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_DIV_20,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_DIV.SOC_PB_NIF_SYNCE_CLK_DIV_20:\n\r"
        "  Clock Divider for the selected recovered clock rate (based on SerDes lane\n\r"
        "  rate) - divide by 20\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "div_40",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_DIV_40,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_DIV.SOC_PB_NIF_SYNCE_CLK_DIV_40:\n\r"
        "  Clock Divider for the selected recovered clock rate (based on SerDes lane\n\r"
        "  rate) - divide by 40\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "div_80",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_DIV_80,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_DIV.SOC_PB_NIF_SYNCE_CLK_DIV_80:\n\r"
        "  Clock Divider for the selected recovered clock rate (based on SerDes lane\n\r"
        "  rate) - divide by 80\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_SYNCE_CLK_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "id_0",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_ID_0,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_ID.SOC_PB_NIF_SYNCE_CLK_ID_0:\n\r"
        "  MALG-A Clock/Differential Clock\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_1_or_valid",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_ID_1_OR_VALID,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_ID.SOC_PB_NIF_SYNCE_CLK_ID_1_OR_VALID:\n\r"
        "  MALG-A Clock/Valid\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_2",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_ID_2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_ID.SOC_PB_NIF_SYNCE_CLK_ID_2:\n\r"
        "  MALG-B Clock/Differential Clock\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "id_3_or_valid",
    {
      {
        SOC_PB_NIF_SYNCE_CLK_ID_3_OR_VALID,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_CLK_ID.SOC_PB_NIF_SYNCE_CLK_ID_3_OR_VALID:\n\r"
        "  MALG-B Clock/Valid\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_SYNCE_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "two_diff_clk",
    {
      {
        SOC_PB_NIF_SYNCE_MODE_TWO_DIFF_CLK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_MODE.SOC_PB_NIF_SYNCE_MODE_TWO_DIFF_CLK:\n\r"
        "  Synchronous Ethernet signal - differential (two signals per clock) recovered\n\r"
        "  clock, two differential outputs\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "four_clk",
    {
      {
        SOC_PB_NIF_SYNCE_MODE_FOUR_CLK,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_MODE.SOC_PB_NIF_SYNCE_MODE_FOUR_CLK:\n\r"
        "  Synchronous Ethernet signal - recovered clock, four outputs - two from each\n\r"
        "  MAL group. Each clock may be connected to any NIF in the same MAL group.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "two_clk_and_valid",
    {
      {
        SOC_PB_NIF_SYNCE_MODE_TWO_CLK_AND_VALID,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_SYNCE_MODE.SOC_PB_NIF_SYNCE_MODE_TWO_CLK_AND_VALID:\n\r"
        "  Synchronous Ethernet signal - recovered clock accompanied by a valid\n\r"
        "  indication, two clk+valid outputs\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_FATP_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        SOC_PB_NIF_FATP_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_ID.SOC_PB_NIF_FATP_ID_A:\n\r"
        "  Fat-Pipe Interface A (0)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        SOC_PB_NIF_FATP_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_ID.SOC_PB_NIF_FATP_ID_B:\n\r"
        "  Fat-Pipe Interface B (1). Can be used only in 2x6 or 3x4 modes.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "c",
    {
      {
        SOC_PB_NIF_FATP_ID_C,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_ID.SOC_PB_NIF_FATP_ID_C:\n\r"
        "  Fat-Pipe Interface C (2). Can be used only in 3x4\n\r"
        "  modes\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_FATP_MODE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "disabled",
    {
      {
        SOC_PB_NIF_FATP_MODE_DISABLED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_MODE.SOC_PB_NIF_FATP_MODE_DISABLED:\n\r"
        "  Fat-Pipe is disabled\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_3_x_4",
    {
      {
        SOC_PB_NIF_FATP_MODE_3_X_4,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_MODE.SOC_PB_NIF_FATP_MODE_3_X_4:\n\r"
        "  Fat-Pipe Enabled on (at maximum) 3 Fat-pipe interfaces A-C, (at maximum) 4\n\r"
        "  FAP ports per interface\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_2_x_6",
    {
      {
        SOC_PB_NIF_FATP_MODE_2_X_6,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_MODE.SOC_PB_NIF_FATP_MODE_2_X_6:\n\r"
        "  Fat-Pipe Enabled on (at maximum) 2 Fat-pipe interfaces A-B,\n\r"
        "  (at maximum) 6 FAP ports per interface\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "mode_1_x_12",
    {
      {
        SOC_PB_NIF_FATP_MODE_1_X_12,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_FATP_MODE.SOC_PB_NIF_FATP_MODE_1_X_12:\n\r"
        "  Fat-Pipe Enabled on 1 Fat-pipe interface A, (at maximum) 12 FAP ports per\n\r"
        "  interface\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_NIF_COUNTER_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_ok_octets",
    {
      {
        SOC_PB_NIF_RX_OK_OCTETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_OK_OCTETS:\n\r"
        "  Received valid octets. Configurable: include/exclude bad packets. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_bcast_packets",
    {
      {
        SOC_PB_NIF_RX_BCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_BCAST_PACKETS:\n\r"
        "  Received broadcast packets. . Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_mcast_bursts",
    {
      {
        SOC_PB_NIF_RX_MCAST_BURSTS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_MCAST_BURSTS:\n\r"
        "  Received multicast packets. . Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_ok_packets",
    {
      {
        SOC_PB_NIF_RX_OK_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_OK_PACKETS:\n\r"
        "  Received valid packets. Configurable: only Unicast packets/ All packets. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_err_packets",
    {
      {
        SOC_PB_NIF_RX_ERR_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_ERR_PACKETS:\n\r"
        "  Received invalid packets ( e.g. CRC errors). Configurable: only Unicast\n\r"
        "  packets/ All packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_below_min",
    {
      {
        SOC_PB_NIF_RX_LEN_BELOW_MIN,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_BELOW_MIN:\n\r"
        "  Received packets, below minimal-packet-size. Units: Bytes. Configurable:\n\r"
        "  include/exclude bad packets. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_min_59",
    {
      {
        SOC_PB_NIF_RX_LEN_MIN_59,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_MIN_59:\n\r"
        "  Received packets, minimal-packet-size - 59 Bytes. Configurable:\n\r"
        "  include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_60",
    {
      {
        SOC_PB_NIF_RX_LEN_60,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_60:\n\r"
        "  Received packets, 60. Units: Bytes. Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_61_123",
    {
      {
        SOC_PB_NIF_RX_LEN_61_123,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_61_123:\n\r"
        "  Received packets, 0 - X Bytes. Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_124_251",
    {
      {
        SOC_PB_NIF_RX_LEN_124_251,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_124_251:\n\r"
        "  Received packets, 0 - X Bytes. Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_252_507",
    {
      {
        SOC_PB_NIF_RX_LEN_252_507,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_252_507:\n\r"
        "  Received packets, 252 - 507 Bytes. Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_508_1019",
    {
      {
        SOC_PB_NIF_RX_LEN_508_1019,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_508_1019:\n\r"
        "  Received packets, 508 - 1019 Bytes. Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_1020_1514cfg",
    {
      {
        SOC_PB_NIF_RX_LEN_1020_1514CFG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_1020_1514CFG:\n\r"
        "  Received packets, 1020 - 1514/1518 Bytes (configurable). Configurable:\n\r"
        "  include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_1515cfg_max",
    {
      {
        SOC_PB_NIF_RX_LEN_1515CFG_MAX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_1515CFG_MAX:\n\r"
        "  Received packets, 1515/1519 - maximal-packet-size Bytes. Configurable:\n\r"
        "  include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_len_above_max",
    {
      {
        SOC_PB_NIF_RX_LEN_ABOVE_MAX,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_LEN_ABOVE_MAX:\n\r"
        "  Received packets, above maximal packet size. Configurable: include/exclude\n\r"
        "  bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_ok_pause_frames",
    {
      {
        SOC_PB_NIF_RX_OK_PAUSE_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_OK_PAUSE_FRAMES:\n\r"
        "  Received valid pause frames. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_err_pause_frames",
    {
      {
        SOC_PB_NIF_RX_ERR_PAUSE_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_ERR_PAUSE_FRAMES:\n\r"
        "  Received invalid pause frames. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_ptp_frames",
    {
      {
        SOC_PB_NIF_RX_PTP_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_PTP_FRAMES:\n\r"
        "  Received PTP frames\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_frame_err_packets",
    {
      {
        SOC_PB_NIF_RX_FRAME_ERR_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_FRAME_ERR_PACKETS:\n\r"
        "  Received invalid packets with frame errors\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_rx_bct_err_packets",
    {
      {
        SOC_PB_NIF_RX_BCT_ERR_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_RX_BCT_ERR_PACKETS:\n\r"
        "  Received invalid packets with BCT -CRC errors (counted on port 1 on XAUI\n\r"
        "  interfaces)\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_ok_octets",
    {
      {
        SOC_PB_NIF_TX_OK_OCTETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_OK_OCTETS:\n\r"
        "  Transmitted valid octets. Configurable: include/exclude bad packets. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_bcast_packets",
    {
      {
        SOC_PB_NIF_TX_BCAST_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_BCAST_PACKETS:\n\r"
        "  Transmitted broadcast packets. . Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_mcast_bursts",
    {
      {
        SOC_PB_NIF_TX_MCAST_BURSTS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_MCAST_BURSTS:\n\r"
        "  Transmitted multicast packets. . Configurable: include/exclude bad packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_ok_packets",
    {
      {
        SOC_PB_NIF_TX_OK_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_OK_PACKETS:\n\r"
        "  Transmitted valid packets. Configurable: only Unicast packets/ All packets. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_err_packets",
    {
      {
        SOC_PB_NIF_TX_ERR_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_ERR_PACKETS:\n\r"
        "  Transmitted invalid packets ( e.g. CRC errors). Configurable: only Unicast\n\r"
        "  packets/ All packets.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_pause_frames",
    {
      {
        SOC_PB_NIF_TX_PAUSE_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_PAUSE_FRAMES:\n\r"
        "  Transmitted pause frames. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_ptp_frames",
    {
      {
        SOC_PB_NIF_TX_PTP_FRAMES,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_PTP_FRAMES:\n\r"
        "  Transmitted PTP frames. \n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "soc_pb_nif_tx_no_link_packets",
    {
      {
        SOC_PB_NIF_TX_NO_LINK_PACKETS,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_NIF_COUNTER_TYPE.SOC_PB_NIF_TX_NO_LINK_PACKETS:\n\r"
        "  Approximate number of dropped packets (TX) due to a link failure\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

 /*
  * } ENUM RULES
  */
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_CNT_PROCESSOR_ID_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "a",
    {
      {
        SOC_PB_CNT_PROCESSOR_ID_A,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_CNT_PROCESSOR_ID.SOC_PB_CNT_PROCESSOR_ID_A:\n\r"
        "  Counter processor A\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "b",
    {
      {
        SOC_PB_CNT_PROCESSOR_ID_B,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_CNT_PROCESSOR_ID.SOC_PB_CNT_PROCESSOR_ID_B:\n\r"
        "  Counter processor B\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_PORTS_FC_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "ll",
    {
      {
        SOC_PB_PORTS_FC_TYPE_LL,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_PORTS_FC_TYPE.SOC_PB_PORTS_FC_TYPE_LL:\n\r"
        "  Link-Level Flow Control.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cb2",
    {
      {
        SOC_PB_PORTS_FC_TYPE_CB2,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_PORTS_FC_TYPE.SOC_PB_PORTS_FC_TYPE_CB2:\n\r"
        "  Class-Based Flow Control (2 classes).\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cb8",
    {
      {
        SOC_PB_PORTS_FC_TYPE_CB8,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_PORTS_FC_TYPE.SOC_PB_PORTS_FC_TYPE_CB8:\n\r"
        "  Class-Based Flow Control (8 classes).\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "none",
    {
      {
        SOC_PB_PORTS_FC_TYPE_NONE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PB_PORTS_FC_TYPE.SOC_PB_PORTS_FC_TYPE_NONE:\n\r"
        "  No Flow Control.\n\r"
          "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_CE_SUB_HEADER_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "header_0", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_0:\n\r"
        "  Points to the first bit of the first packet header once the packet parsed.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_1", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_1:\n\r"
        "  Points to the first bit of the second packet header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_2", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_2:\n\r"
        "  Points to the first bit of the third packet header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_3", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_3:\n\r"
        "  Points to the first bit of the fourth packet header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_FWD, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_FWD:\n\r"
        "  Points to the first bit of the forwarding header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_post", 
    { 
      { 
        SOC_TMC_PMF_CE_SUB_HEADER_FWD_POST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_CE_SUB_HEADER.SOC_PB_PMF_CE_SUB_HEADER_FWD_POST:\n\r"
        "  Points to the first bit of the header after the forwarding header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_IRPP_INFO_FIELD_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "tm_port", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_TM_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_TM_PORT:\n\r"
        "  Local incoming TM port\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_header_size", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_HEADER_SIZE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_HEADER_SIZE:\n\r"
        "  The size of the incoming header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "syst_port_src", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SYST_PORT_SRC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SYST_PORT_SRC:\n\r"
        "  Source System-Port ID\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_pp_port", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_IN_PP_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_IN_PP_PORT:\n\r"
        "  Local incoming PP port\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pp_context", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PP_CONTEXT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PP_CONTEXT:\n\r"
        "  PP Context\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_0", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_0:\n\r"
        "  Pointer to Header offset 0\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_1", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_1:\n\r"
        "  Pointer to Header offset 1\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_2", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_2:\n\r"
        "  Pointer to Header offset 2\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_3", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_3:\n\r"
        "  Pointer to Header offset 3\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_4", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_4:\n\r"
        "  Pointer to Header offset 4\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "header_offset_5", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_5, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_HEADER_OFFSET_5:\n\r"
        "  Pointer to Header offset 5\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_0", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_0:\n\r"
        "  A coded value giving additional information for header 0\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_1", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_1:\n\r"
        "  A coded value giving additional information for header 1\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_2", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_2:\n\r"
        "  A coded value giving additional information for header 2\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_3", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_3:\n\r"
        "  A coded value giving additional information for header 3\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_4", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_4:\n\r"
        "  A coded value giving additional information for header 4\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual_5", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_5, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL_5:\n\r"
        "  A coded value giving additional information for header 5\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_format_qual1_ext", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL1_EXT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_FORMAT_QUAL1_EXT:\n\r"
        "  Extension of the Packet format Qualifier 1, in general Ethernet. This field\n\r"
        "  holds the result of comparing Ethernet-Type to 6 values\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "parser_pmf_profile", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PARSER_PMF_PROFILE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PARSER_PMF_PROFILE:\n\r"
        "  PMF profile resolved by the parser\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "packet_format_code", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PACKET_FORMAT_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PACKET_FORMAT_CODE:\n\r"
        "  Identifies the packet header stack\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "llvp_incoming_tag_struct", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LLVP_INCOMING_TAG_STRUCT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LLVP_INCOMING_TAG_STRUCT:\n\r"
        "  Used together with the VLAN-Edit-Profile to generate the VLAN edit command\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_strength", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_STRENGTH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_STRENGTH:\n\r"
        "  Strength of the forward action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_dest_valid", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_DEST_VALID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_DEST_VALID:\n\r"
        "  Destination (and its validity) of the forward action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_tc_valid", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_TC_VALID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_TC_VALID:\n\r"
        "  Traffic Class (and its validity) of the forward action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_dp_valid", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_DP_VALID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_DP_VALID:\n\r"
        "  Drop Precedence (and its validity) of the forward action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_cpu_trap_code", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_CPU_TRAP_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_CPU_TRAP_CODE:\n\r"
        "  CPU Trap code of the Forwarding Action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd_action_cpu_trap_qual", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWD_ACTION_CPU_TRAP_QUAL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWD_ACTION_CPU_TRAP_QUAL:\n\r"
        "  CPU Trap qualifier of the Forwarding Action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cpu_trap_code_pro", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_CPU_TRAP_CODE_PRO, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_CPU_TRAP_CODE_PRO:\n\r"
        "  CPU Trap code profile \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "up", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_UP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_UP:\n\r"
        "  User-Priority of the Packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "snoop_strength", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SNOOP_STRENGTH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SNOOP_STRENGTH:\n\r"
        "  Snoop strength\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "snoop_code", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SNOOP_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SNOOP_CODE:\n\r"
        "  Snoop code\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "learn_dest", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEARN_DEST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEARN_DEST:\n\r"
        "  Destination learnt of the Learn-Information\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "learn_asd", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEARN_ASD, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEARN_ASD:\n\r"
        "  ASD learnt of the Learn-Information\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sem_ndx", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SEM_NDX, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SEM_NDX:\n\r"
        "  SEM Index, aka AC\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ll_mirror_profile", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LL_MIRROR_PROFILE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LL_MIRROR_PROFILE:\n\r"
        "  LL-Mirror-Profile\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "vsi", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_VSI, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_VSI:\n\r"
        "  Virtual Switch Instance. Identifies topology (aka flooding domain) and/or\n\r"
        "  service\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "system_vsi", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SYSTEM_VSI, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SYSTEM_VSI:\n\r"
        "  System VSI\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "orientation_is_hub", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_ORIENTATION_IS_HUB, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_ORIENTATION_IS_HUB:\n\r"
        "  Orientation=Is-Hub\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "vlan_edit_tag", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_VLAN_EDIT_TAG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_VLAN_EDIT_TAG:\n\r"
        "  VLAN Edit Tag\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "stp_state", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_STP_STATE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_STP_STATE:\n\r"
        "  State in the Spanning Tree Protocol (Learn, Block)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwding_code", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWDING_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWDING_CODE:\n\r"
        "  Forwarding-Code (TM, CPU, Ethernet, IPv4 UC or MC, etc.)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwding_offset_ndx", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWDING_OFFSET_NDX, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWDING_OFFSET_NDX:\n\r"
        "  Forwarding Offset Index\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwding_offset_ext", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_FWDING_OFFSET_EXT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_FWDING_OFFSET_EXT:\n\r"
        "  Forwarding Offset Extension\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tunnel_termination_code", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_TUNNEL_TERMINATION_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_TUNNEL_TERMINATION_CODE:\n\r"
        "  The Tunnel-Termination-Code may be used to control various filtering, in the\n\r"
        "  PMF, regarding the packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_rif", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_IN_RIF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_IN_RIF:\n\r"
        "  In-RIF\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "vrf", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_VRF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_VRF:\n\r"
        "  Local incoming TM port\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pckt_is_comp_mc", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PCKT_IS_COMP_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PCKT_IS_COMP_MC:\n\r"
        "  Packet-Is-Compatible-Multicast\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "my_bmac", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_MY_BMAC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_MY_BMAC:\n\r"
        "  My-Backbone-MAC\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "eei_or_outlif", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_EEI_OR_OUTLIF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_EEI_OR_OUTLIF:\n\r"
        "  EEI-or-Out-LIF: this structure describes either an EEI or an Out-LIF\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_ttl", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_IN_TTL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_IN_TTL:\n\r"
        "  In-TTL\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_dscp_exp", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_IN_DSCP_EXP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_IN_DSCP_EXP:\n\r"
        "  In-DSCP-EXP\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "rpf_fec_ptr_valid", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_RPF_FEC_PTR_VALID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_RPF_FEC_PTR_VALID:\n\r"
        "  RPF-FEC-Pointer (and its validity)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sem_1st_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SEM_1ST_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SEM_1ST_LOOKUP_RESULT:\n\r"
        "  Small-EM-First-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sem_2nd_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_SEM_2ND_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_SEM_2ND_LOOKUP_RESULT:\n\r"
        "  Small-EM-Second-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lem_1st_lookup_result_dest", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEM_1ST_LOOKUP_RESULT_DEST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEM_1ST_LOOKUP_RESULT:\n\r"
        "  Large-EM-First-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lem_2nd_lookup_result_dest", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEM_2ND_LOOKUP_RESULT_DEST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEM_2ND_LOOKUP_RESULT:\n\r"
        "  Large-EM-Second-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lem_1st_lookup_result_asd", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEM_1ST_LOOKUP_RESULT_ASD, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEM_1ST_LOOKUP_RESULT:\n\r"
        "  Large-EM-First-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lem_2nd_lookup_result_asd", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LEM_2ND_LOOKUP_RESULT_ASD, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LEM_2ND_LOOKUP_RESULT:\n\r"
        "  Large-EM-Second-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lpm_1st_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LPM_1ST_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LPM_1ST_LOOKUP_RESULT:\n\r"
        "  LPM-First-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lpm_2nd_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_LPM_2ND_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_LPM_2ND_LOOKUP_RESULT:\n\r"
        "  LPM-Second-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_TCAM_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_TCAM_LOOKUP_RESULT:\n\r"
        "  TCAM-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "elk_lookup_result", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_ELK_LOOKUP_RESULT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_ELK_LOOKUP_RESULT:\n\r"
        "  ELK-Lkp-Result (and if found)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "key_gen_var", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_KEY_GEN_VAR, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_KEY_GEN_VAR:\n\r"
        "  In-PP-Port.Key-Gen-Var: generic input into the key generation engine\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "copy_pgm_variable", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_COPY_PGM_VARIABLE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_COPY_PGM_VARIABLE:\n\r"
        "  Copy-Program-Variable\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "packet_size_range", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_PACKET_SIZE_RANGE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_PACKET_SIZE_RANGE:\n\r"
        "  Packet-Size-Range\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "l4_ops", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_L4_OPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_L4_OPS:\n\r"
        "  L4Ops\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "key_pgm_profile", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_KEY_PGM_PROFILE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_KEY_PGM_PROFILE:\n\r"
        "  Key-Program-Profile\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "custom1", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_CUSTOM1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_CUSTOM1:\n\r"
        "  In-AC, Out-AC, Eth-Tag-Format\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "custom2", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_CUSTOM2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_CUSTOM2:\n\r"
        "  In-Port, Packet-Format-Ext-Qualifier1\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "custom3", 
    { 
      { 
        SOC_TMC_PMF_IRPP_INFO_FIELD_CUSTOM3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_IRPP_INFO_FIELD.SOC_PB_PMF_IRPP_INFO_FIELD_CUSTOM3:\n\r"
        "  My-B-MAC, Forwarding-Action DP, TC and Destination Valid, LEM, SEM, LPM and\n\r"
        "  TCAM found, Packet-Is-Compatible-MC, RPF-FEC-Ptr-Valid,\n\r"
        "  CPU-Trap-Code-Profile, Orientation-Is-Hub and Learn-Info\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TCAM_KEY_SRC_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "l2", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_L2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_L2:\n\r"
        "  L2 Key - 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "l3_IPv4", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_L3_IPV4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_L3:\n\r"
        "  L3 IPv4 Key- 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
      "l3_IPv6", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_L3_IPV6, 
          /* 
          * Casting added here just to keep the compiler silent. 
          */ 
          (long)"" 
          "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_L3:\n\r"
          "  L3 IPv6 Key- 288 bits.\n\r"
          "", 
          /* 
          * Pointer to a function to call after symbolic value 
          * has been accepted. Casting should be 'VAL_PROC_PTR'. 
          * Casting to 'long' added here just to keep the 
          * compiler silent. 
          */ 
          (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_a", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_B_A, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_B_A:\n\r"
        "  (Key B[144:0], Key A[144:0]) - 288 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_71_0", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_A_71_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_A_71_0:\n\r"
        "  Key A [71:0] - 72 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_103_32", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_A_103_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_A_103_32:\n\r"
        "  Key A [103:32] - 72 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_143_0", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_A_143_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_A_143_0:\n\r"
        "  Key A [143:0] - 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_175_32", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_A_175_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_A_175_32:\n\r"
        "  Key A [175:32] - 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_71_0", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_B_71_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_B_71_0:\n\r"
        "  Key B [71:0] - 72 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_103_32", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_B_103_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_B_103_32:\n\r"
        "  Key B [103:32] - 72 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_143_0", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_B_143_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_B_143_0:\n\r"
        "  Key B [143:0] - 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_175_32", 
    { 
      { 
        SOC_TMC_PMF_TCAM_KEY_SRC_B_175_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_KEY_SRC.SOC_PB_PMF_TCAM_KEY_SRC_B_175_32:\n\r"
        "  Key B [175:32] - 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "a_9_0", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_A_9_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_A_9_0:\n\r"
        "  Key A [9:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_19_10", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_A_19_10, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_A_19_10:\n\r"
        "  Key A [19:10] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_29_20", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_A_29_20, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_A_29_20:\n\r"
        "  Key A [29:20] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_39_30", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_A_39_30, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_A_39_30:\n\r"
        "  Key A [39:30].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_9_0", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_B_9_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_B_9_0:\n\r"
        "  Key B [9:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_19_10", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_B_19_10, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_B_19_10:\n\r"
        "  Key B [19:10] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_29_20", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_B_29_20, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_B_29_20:\n\r"
        "  Key B [29:20] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_39_30", 
    { 
      { 
        SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_B_39_30, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_DIRECT_TBL_KEY_SRC.SOC_PB_PMF_DIRECT_TBL_KEY_SRC_B_39_30:\n\r"
        "  Key B [39:30].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_FEM_INPUT_SRC_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "a_31_0", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_A_31_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_A_31_0:\n\r"
        "  Key A [31:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_47_16", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_A_47_16, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_A_47_16:\n\r"
        "  Key A [47:16] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_63_32", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_A_63_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_A_63_32:\n\r"
        "  Key A [63:32] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_79_48", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_A_79_48, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_A_79_48:\n\r"
        "  Key A [79:48].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_95_64", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_A_95_64, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_A_95_64:\n\r"
        "  Key A [95:64].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_31_0", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_B_31_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_B_31_0:\n\r"
        "  Key B [31:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_47_16", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_B_47_16, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_B_47_16:\n\r"
        "  Key B [47:16] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_63_32", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_B_63_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_B_63_32:\n\r"
        "  Key B [63:32] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_79_48", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_B_79_48, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_B_79_48:\n\r"
        "  Key B [79:48].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_95_64", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_B_95_64, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_B_95_64:\n\r"
        "  Key B [95:64].\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_0", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_TCAM_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_TCAM_0:\n\r"
        "  TCAM lookup result 0\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_1", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_TCAM_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_TCAM_1:\n\r"
        "  TCAM lookup result 1\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_2", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_TCAM_2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_TCAM_2:\n\r"
        "  TCAM lookup result 2\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_3", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_TCAM_3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_TCAM_3:\n\r"
        "  TCAM lookup result 3\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dir_tbl", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_DIR_TBL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_DIR_TBL:\n\r"
        "  Vector composed of: {12 bits '0'; Direct table result}\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "nop", 
    { 
      { 
        SOC_TMC_PMF_FEM_INPUT_SRC_NOP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_INPUT_SRC.SOC_PB_PMF_FEM_INPUT_SRC_NOP:\n\r"
        "  FEM returns an invalid action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TAG_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "stat_tag", 
    { 
      { 
        SOC_TMC_PMF_TAG_TYPE_STAT_TAG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_TYPE.SOC_PB_PMF_TAG_TYPE_STAT_TAG:\n\r"
        "  Statistic-Tag type. In this case, the 'stat_tag_lsb_position' must be also\n\r"
        "  set. \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "lag_lb_key", 
    { 
      { 
        SOC_TMC_PMF_TAG_TYPE_LAG_LB_KEY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_TYPE.SOC_PB_PMF_TAG_TYPE_LAG_LB_KEY:\n\r"
        "  LAG Load-Balancing key.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ecmp_lb_key", 
    { 
      { 
        SOC_TMC_PMF_TAG_TYPE_ECMP_LB_KEY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_TYPE.SOC_PB_PMF_TAG_TYPE_ECMP_LB_KEY:\n\r"
        "  ECMP Load-Balancing key.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "stack_rt_hist", 
    { 
      { 
        SOC_TMC_PMF_TAG_TYPE_STACK_RT_HIST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_TYPE.SOC_PB_PMF_TAG_TYPE_STACK_RT_HIST:\n\r"
        "  Stacking Route History.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/   
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PKT_FRWRD_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "bridge", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_BRIDGE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_BRIDGE:\n\r"
        "  packet is bridged according to outer most LL header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv4_uc", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_IPV4_UC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_IPV4_UC:\n\r"
        "  packet is IPv4 UC routed\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv4_mc", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_IPV4_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_IPV4_MC:\n\r"
        "  packet is IPv4 MC routed\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv6_uc", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_IPV6_UC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_IPV6_UC:\n\r"
        "  packet is IPv6 UC routed\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv6_mc", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_IPV6_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_IPV6_MC:\n\r"
        "  packet is IPv6 MC routed\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mpls", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_MPLS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_MPLS:\n\r"
        "  packet is forwarded according to MPLS label, Ingress-label-mapping\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "trill", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_TRILL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_TRILL:\n\r"
        "  packet is forwarded according to TRILL\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cpu_trap", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_CPU_TRAP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_CPU_TRAP:\n\r"
        "  packet is trapped\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "bridge_after_term", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_BRIDGE_AFTER_TERM, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_BRIDGE_AFTER_TERM:\n\r"
        "  packet is bridged according to inner LL header, outer LL header is\n\r"
        "  terminated. For example in VPLS application.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
      "tm", 
    { 
      { 
        SOC_TMC_PKT_FRWRD_TYPE_TM, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PKT_FRWRD_TYPE.SOC_TMC_PKT_FRWRD_TYPE_TM:\n\r"
        "  packet is bridged according to inner LL header, outer LL header is\n\r"
        "  terminated. For example in VPLS application.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, /* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/    
/********************************************************/
/*
 *	Taken from Petra UI
 */
EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_PETRA_PORT_HEADER_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "eth",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_ETH,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_ETH:\r\n"
        "  Port header processing type: Ethernet.Supported direction: incoming /\r\n"
        "  outgoing. Switching and TM functions are based on Ethernet packet\r\n"
        "  processing.Incoming and outgoing outermost header is Ethernet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "raw",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_RAW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_RAW:\r\n"
        "  Port header processing type: Raw. Supported direction: incoming / outgoing.\r\n"
        "  Simple static switching; entire packet is payload.No header is assumed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tm",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_TM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_TM:\r\n"
        "  Port header processing type: TM. Supported direction: incoming / outgoing.\r\n"
        "  Designed to enable use of the TM features of the PetraIncoming/Outgoing\r\n"
        "  packets have an outermost Incoming/Outgoing-TM-Header (ITMH/OTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "prog",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_PROG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_PROG:\r\n"
        "  Port header processing type: programmable. Supported direction: incoming.\r\n"
        "  User programmable ingress processing.There are 4 programmable types that\r\n"
        "  define the different starting program for classification of the packet.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "cpu",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_CPU,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_CPU:\r\n"
        "  Port header processing type: CPU.Supported direction: Outgoing. Designed to\r\n"
        "  support CPU protocol processing.Outgoing packet has a Fabric-TM-Header (FTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "stacking",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_STACKING,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_STACKING:\r\n"
        "  Port header processing type: CPU.Supported direction: Outgoing. Designed to\r\n"
        "  support CPU protocol processing.Outgoing packet has a Fabric-TM-Header (FTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tdm",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_TDM,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_TDM:\r\n"
        "  Port header processing type: CPU.Supported direction: Outgoing. Designed to\r\n"
        "  support CPU protocol processing.Outgoing packet has a Fabric-TM-Header (FTMH).\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "tdm_raw",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_TDM_RAW,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_TDM_RAW:\r\n"
        "  Port header processing type: TDM_RAW. Supported direction:\r\n"
        "  Incoming. Designed to support use of TDM ports with\r\n" 
        "  simple static switching; entire packet is payload.\r\n"
        "  No header is assumed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "injected",
    {
      {
        SOC_PETRA_PORT_HEADER_TYPE_INJECTED,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_PORT_HEADER_TYPE.SOC_PETRA_PORT_HEADER_TYPE_INJECTED:\r\n"
        "  Port header processing type: injected. Supported direction:\r\n"
        "  both. Designed to support use of Injected ports with\r\n" 
        "  simple static switching; entire packet is payload.\r\n"
        "  PTCH header is assumed.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
   SOC_TMC_TUNNEL_TERM_CODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "none", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_NONE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_NONE:\n\r"
        "  No header is terminated (Bridging)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_ETH:\n\r"
        "  Most outer LL header wasterminated (Routing, MAC-in-MAC, VPLS)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv4_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_IPV4_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_IPV4_ETH:\n\r"
        "  Link-Layer and IPv4 tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mpls_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS_ETH:\n\r"
        "  Link-Layer and MPLS tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cw_mpls_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS_ETH_CW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS_ETH_CW:\n\r"
        "  Link-Layer and MPLS (with Control Word) tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mpls2_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS2_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS2_ETH:\n\r"
        "  Link-Layer and MPLSx2 tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cw_mpls2_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS2_ETH_CW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS2_ETH_CW:\n\r"
        "  Link-Layer and MPLSx2 (with Control Word) tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mpls3_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS3_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS3_ETH:\n\r"
        "  Link-Layer and MPLSx3 tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cw_mpls3_eth", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_MPLS3_ETH_CW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_MPLS3_ETH_CW:\n\r"
        "  Link-Layer and MPLSx3 (with Control Word) tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "trill", 
    { 
      { 
        SOC_TMC_TUNNEL_TERM_CODE_TRILL_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PPD_PKT_TERM_TYPE.SOC_TMC_TUNNEL_TERM_CODE_TRILL_ETH:\n\r"
        "  Link-Layer TRILL tunnel were terminated\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/    
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TAG_VAL_SRC_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "a_29_0", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_A_29_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_A_29_0:\n\r"
        "  Key A [29:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "a_61_32", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_A_61_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_A_61_32:\n\r"
        "  Key A [63:32] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_29_0", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_B_29_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_B_29_0:\n\r"
        "  Key B [29:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b_61_32", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_B_61_32, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_B_61_32:\n\r"
        "  Key B [61:32] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_0", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_TCAM_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_TCAM_0:\n\r"
        "  TCAM lookup result 0\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_1", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_TCAM_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_TCAM_1:\n\r"
        "  TCAM lookup result 1\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcam_2", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_TCAM_2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_TCAM_2:\n\r"
        "  TCAM lookup result 2\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dir_tbl", 
    { 
      { 
        SOC_TMC_PMF_TAG_VAL_SRC_DIR_TBL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TAG_VAL_SRC.SOC_PB_PMF_TAG_VAL_SRC_DIR_TBL:\n\r"
        "  Direct table result\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TCAM_FLD_L2_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "llvp", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_LLVP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_LLVP:\n\r"
        "  LLVP-Incoming-Tag-Structure field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "stag", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_STAG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_STAG:\n\r"
        "  S-Tag field equal to the bytes 15 and 16 from the beginning of the Ethernet\n\r"
        "  header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ctag_in_ac", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_CTAG_IN_AC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_CTAG_IN_AC:\n\r"
        "  If the 'Use-AC' configuration is set, then equal to the Learn-ASD field,\n\r"
        "  otherwise to the C-Tag field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sa", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_SA, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_SA:\n\r"
        "  Source MAC address field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "da", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_DA, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_DA:\n\r"
        "  Destination MAC address field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ethertype", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_ETHERTYPE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_ETHERTYPE:\n\r"
        "  Ethernet-Type code field as encoded by the parser\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_pp_port", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L2_IN_PP_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L2.SOC_PB_PMF_TCAM_FLD_L2_IN_PP_PORT:\n\r"
        "  In-PP-Port\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "ipv4", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L3_MODE_IPV4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L3_MODE.SOC_PB_PMF_TCAM_FLD_L3_MODE_IPV4:\n\r"
        "  IPv4 mode\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv6", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_L3_MODE_IPV6, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_L3_MODE.SOC_PB_PMF_TCAM_FLD_L3_MODE_IPV6:\n\r"
        "  IPv6 mode\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_FLD_IPV4_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "l4ops", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_L4OPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_L4OPS:\n\r"
        "  Equal to L4Ops[22:16]\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "next_prtcl", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_NEXT_PRTCL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_NEXT_PRTCL:\n\r"
        "  Next-Protocol as encoded by the parser\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "df", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_DF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_DF:\n\r"
        "  Dont-Fragment field equal to the Dont-Fragment field in the IPv4 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mf", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_MF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_MF:\n\r"
        "  More-Fragment field equal to the More-Fragment field in the IPv4 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "frag_non_0", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_FRAG_NON_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_FRAG_NON_0:\n\r"
        "  Fragment-Offset-Non-Zero field set if the Fragment-Offset field in the IPv4\n\r"
        "  header is not zero\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "l4ops_flag", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_L4OPS_FLAG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_L4OPS_FLAG:\n\r"
        "  L4Ops-flag field set if any L4-Ops[0..15] field in the IPv4 header is set. If\n\r"
        "  set, then the key holds 16 additional L4-Ops. Otherwise, the L4 Ports are\n\r"
        "  explicitly available\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sip", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_SIP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_SIP:\n\r"
        "  SIP field equal to the 4th 32-bit word in the IPv4 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dip", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_DIP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_DIP:\n\r"
        "  DIP field equal to the 5th 32-bit word in the IPv4 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "l4ops_opt", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_L4OPS_OPT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_L4OPS_OPT:\n\r"
        "  L4Ops-Optional field equal to L4Ops[15..0] field in the IPv4 header. Is valid\n\r"
        "  only if L4Ops-Flag is set.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "src_port", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_SRC_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_SRC_PORT:\n\r"
        "  L4-Src-Port field equal to the first 16-bits after the IPv4 header. Is valid\n\r"
        "  only if L4Ops-Flag is unset.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dest_port", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_DEST_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_DEST_PORT:\n\r"
        "  L4-Dest-Port field equal to the second 16-bits after the IPv4 header. Is\n\r"
        "  valid only if L4Ops-Flag is unset.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tos", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_TOS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_TOS:\n\r"
        "  ToS field equal to the TOS field in the IPv4 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tcp_ctl", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_TCP_CTL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_TCP_CTL:\n\r"
        "  TCP-Control field equal to the bits 106-111 after the IPv4 header (Bits URG\n\r"
        "  to FIN of the TCP header)\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_ac_vrf", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_IN_AC_VRF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_IN_AC_VRF:\n\r"
        "  In-AC-Or-VRF field equal to VRF if not null, otherwise to the learnt ASD\n\r"
        "  field (Learn-ASD). Valid only if the 'Use-AC' configuration is set.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_pp_port", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_IN_PP_PORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_IN_PP_PORT:\n\r"
        "  In-PP-Port field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_vid", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV4_IN_VID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV4.SOC_PB_PMF_FLD_IPV4_IN_VID:\n\r"
        "  Incoming-VID field equal to the Outermost VID (Bytes 15 and 16 of the\n\r"
        "  outermost Ethernet header) if the 'VID-Valid' configuration is set, otherwise\n\r"
        "  0.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_FLD_IPV6_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "l4ops", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_L4OPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_L4OPS:\n\r"
        "  Equal to L4Ops[7:0]\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sip_low", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_SIP_LOW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_SIP:\n\r"
        "  SIP field equal to the 4th 32-bit word in the IPv6 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sip_high", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_SIP_HIGH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_SIP:\n\r"
        "  SIP field equal to the 4th 32-bit word in the IPv6 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dip_high", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_DIP_HIGH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_DIP:\n\r"
        "  DIP field equal to the 5th 32-bit word in the IPv6 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dip_low", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_DIP_LOW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_DIP:\n\r"
        "  DIP field equal to the 5th 32-bit word in the IPv6 header\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "next_prtcl", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_NEXT_PRTCL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_NEXT_PRTCL:\n\r"
        "  Next-Protocol as encoded by the parser\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pp_port_tcp_ctl", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_PP_PORT_TCP_CTL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_PP_PORT_TCP_CTL:\n\r"
        "  TCP-Control field equal to the bits 106-111 after the IPv6 header (Bits URG\n\r"
        "  to FIN of the TCP header) if the 'TCP-Control' configuration is set,\n\r"
        "  otherwise it equals the In-PP-Port field.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "in_ac_vrf", 
    { 
      { 
        SOC_TMC_PMF_FLD_IPV6_IN_AC_VRF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FLD_IPV6.SOC_PB_PMF_FLD_IPV6_IN_AC_VRF:\n\r"
        "  In-AC-Or-VRF field equal to VRF if not null, otherwise to the learnt ASD\n\r"
        "  field (Learn-ASD). \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "irpp", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_A_B_LOC_IRPP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_A_B_LOC.SOC_PB_PMF_TCAM_FLD_A_B_LOC_IRPP:\n\r"
        "  The field is located in the IRPP information.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "hdr", 
    { 
      { 
        SOC_TMC_PMF_TCAM_FLD_A_B_LOC_HDR, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_TCAM_FLD_A_B_LOC.SOC_PB_PMF_TCAM_FLD_A_B_LOC_HDR:\n\r"
        "  The field is located in a packet sub-header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_FEM_ACTION_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "dest", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_DEST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_DEST:\n\r"
        "  Action on the Destination field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "dp", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_DP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_DP:\n\r"
        "  Action on the Drop Precedence field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tc", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_TC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_TC:\n\r"
        "  Action on the Traffic Class field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwd", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_TRAP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_TRAP:\n\r"
        "  Action on the Forward field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "snp", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_SNP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_SNP:\n\r"
        "  Action on the Snoop field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mirror", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_MIRROR, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_MIRROR:\n\r"
        "  Action on the Mirror field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mir_dis", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_MIR_DIS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_MIR_DIS:\n\r"
        "  Action on the Outbound-Mirror-Disable field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "exc_src", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_EXC_SRC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_EXC_SRC:\n\r"
        "  Action on the Exclude-Source field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "is", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_IS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_IS:\n\r"
        "  Action on the Ingress Shaping field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "meter", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_METER, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_METER:\n\r"
        "  Action on the Meter field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "counter", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_COUNTER, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_COUNTER:\n\r"
        "  Action on the Counter field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "stat", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_STAT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_STAT:\n\r"
        "  Action on the Statistic field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "outlif", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_OUTLIF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_OUTLIF:\n\r"
        "  Action on the Outlif field\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "type_2nd_pass_data", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_2ND_PASS_DATA, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_2ND_PASS_DATA:\n\r"
        "  Action on the Second Pass Data\n\r"
        "  - Valid if the Cycle index is 0.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "type_2nd_pass_pgm", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_2ND_PASS_PGM, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_2ND_PASS_PGM:\n\r"
        "  Action on the Second Pass Program\n\r"
        "  - Valid if the Cycle index is 0.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "nop", 
    { 
      { 
        SOC_TMC_PMF_FEM_ACTION_TYPE_NOP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_ACTION_TYPE.SOC_PB_PMF_FEM_ACTION_TYPE_NOP:\n\r"
        "  No action\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_FEM_BIT_LOC_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "cst", 
    { 
      { 
        SOC_TMC_PMF_FEM_BIT_LOC_TYPE_CST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_BIT_LOC_TYPE.SOC_PB_PMF_FEM_BIT_LOC_TYPE_CST:\n\r"
        "  The FEM output bit value is constant and its value is indicated in the 'val'\n\r"
        "  field \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "key", 
    { 
      { 
        SOC_TMC_PMF_FEM_BIT_LOC_TYPE_KEY, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_BIT_LOC_TYPE.SOC_PB_PMF_FEM_BIT_LOC_TYPE_KEY:\n\r"
        "  The FEM output bit value equals the bit in the location 'val' in the FEM-Key \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "map_data", 
    { 
      { 
        SOC_TMC_PMF_FEM_BIT_LOC_TYPE_MAP_DATA, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_FEM_BIT_LOC_TYPE.SOC_PB_PMF_FEM_BIT_LOC_TYPE_MAP_DATA:\n\r"
        "  The FEM output bit value equals the bit in the location 'val' in the Map-Data\n\r"
        "  field of the Selected-Bit of the FEM-Key \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_PGM_SEL_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "tbl0_eei_outlif_15_8", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_EEI_OUTLIF_15_8, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 0 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_EEI_OUTLIF_15_8:\n\r"
        "  Set the program selection parameter table according to the\n\r"
        "  EEI-or-Out-LIF[15:8] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl1_eei_outlif_7_0", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_EEI_OUTLIF_7_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 1 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_EEI_OUTLIF_7_0:\n\r"
        "  Set the program selection parameter table according to and\n\r"
        "  EEI-or-Out-LIF[7:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl2_sem_ndx_7_0", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_SEM_NDX_7_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 2 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_SEM_NDX_7_0:\n\r"
        "  Set the program selection parameter table according to SEM-Index[7:0] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl3_pfq_sem_ndx_13_8", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_PFQ_SEM_NDX_13_8, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 3 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_PFQ_SEM_NDX_13_8:\n\r"
        "  Set the program selection parameter table according to the\n\r"
        "  Packet-Format-Qualifier[0][1:0] and SEM-Index[13:8] \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl4_fwding_ttc_code", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_FWDING_TTC_CODE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 4 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_FWDING_TTC_CODE:\n\r"
        "  Set the program selection parameter table according to the Forwarding Code\n\r"
        "  and Tunnel-Termination code\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl6_parser_pmf_pro", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_PARSER_PMF_PRO, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 6 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_PARSER_PMF_PRO:\n\r"
        "  Set the program selection parameter table according to the Parser-PMF-Profile\n\r"
        "  and the Port-PMF-profile\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl5_lookups", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_LOOKUPS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 5 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_LOOKUPS:\n\r"
        "  Set the program selection parameter table according to: Large/Small Exact\n\r"
        "  Match First/Second Lookup-Found, LPM 1st/2nd Lookup-Not-Default, TCAM-Found\n\r"
        "  and ELK-Found parameters\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tbl7_llvp_pfc", 
    { 
      { 
        SOC_TMC_PMF_PGM_SEL_TYPE_LLVP_PFC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  TABLE 7 -SOC_TMC_PMF_PGM_SEL_TYPE.SOC_PB_PMF_PGM_SEL_TYPE_LLVP_PFC:\n\r"
        "  Set the program selection parameter table according to the\n\r"
        "  LLVP-Incoming-Tag-Structure and the PMF-Profile of the Packet-Format-Code\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "start", 
    { 
      { 
        SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_START, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR.SOC_PB_PMF_PGM_BYTES_TO_RMV_HDR_START:\n\r"
        "  Start of the packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "hdr_1st", 
    { 
      { 
        SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_1ST, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR.SOC_PB_PMF_PGM_BYTES_TO_RMV_HDR_1ST:\n\r"
        "  First header of the packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "fwding", 
    { 
      { 
        SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_FWDING, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR.SOC_PB_PMF_PGM_BYTES_TO_RMV_HDR_FWDING:\n\r"
        "  Forwarding header of the packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "post_fwding", 
    { 
      { 
        SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_POST_FWDING, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR.SOC_PB_PMF_PGM_BYTES_TO_RMV_HDR_POST_FWDING:\n\r"
        "  The header next after the forwarding header of the packet\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

 /* 
  * } ENUM RULES 
  */
/********************************************************/      
/********************************************************/
/********************************************************/

EXTERN CONST
   PARAM_VAL_RULES
     SOC_PB_DEST_TYPE_rule[]
#ifdef INIT
   =
{
  {
    VAL_SYMBOL,
    "queue",
    {
      {
        SOC_PETRA_DEST_TYPE_QUEUE,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_DEST_TYPE.SOC_PETRA_DEST_TYPE_QUEUE:\r\n"
        "  Destination type: Incoming Queue.Matching Index Range: 0 - 32K-1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "multicast",
    {
      {
        SOC_PETRA_DEST_TYPE_MULTICAST,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_DEST_TYPE.SOC_PETRA_DEST_TYPE_MULTICAST:\r\n"
        "  Destination type: Multicast Group.Matching Index Range: 0 - 16K-1\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "sys_phy_port",
    {
      {
        SOC_PETRA_DEST_TYPE_SYS_PHY_PORT,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_DEST_TYPE.SOC_PETRA_DEST_TYPE_SYS_PHY_PORT:\r\n"
        "  System Physical FAP Port.Matching Index Range: 0 - 4095.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
    "lag",
    {
      {
        SOC_PETRA_DEST_TYPE_LAG,
          /*
           * Casting added here just to keep the compiler silent.
           */
        (long)""
        "  SOC_PETRA_DEST_TYPE.SOC_PETRA_DEST_TYPE_LAG:\r\n"
        "  System LAG Id. Matching Index Range: 0 - 255.\r\n"
        "",
          /*
           * Pointer to a function to call after symbolic value
           * has been accepted. Casting should be 'VAL_PROC_PTR'.
           * Casting to 'long' added here just to keep the
           * compiler silent.
           */
        (long)NULL
      }
    }
  },

/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/
/********************************************************/
/********************************************************/

EXTERN CONST
PARAM_VAL_RULES
SOC_PB_PMF_DIAG_FORCE_rule[]
#ifdef INIT
=
{
  {
    VAL_SYMBOL,
      "dest",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_DEST,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_DEST:\n\r"
          "  Action on the Destination field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "tc",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_TC,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_TC:\n\r"
          "  Action on the Drop Precedence field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dp",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_DP,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_DP:\n\r"
          "  Action on the DP field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "invalid",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_INVALID,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_INVALID:\n\r"
          "  invalid action cannot be used\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "dp_meter",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_DP_METER,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_DP_METER:\n\r"
          "  Action on the DP-meter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "fwd_strength",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_FWD_STRENGTH,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_FWD_STRENGTH:\n\r"
          "  Action on the forward strength field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "meter_a",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_METER_A,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_METER_A:\n\r"
          "  Action on the Meter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "meter_b",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_METER_B,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_METER_B:\n\r"
          "  Action on the Meter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "counter_a",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_COUNTER_A,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_COUNTER_A:\n\r"
          "  Action on the Counter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "counter_b",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_COUNTER_B,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_COUNTER_B:\n\r"
          "  Action on the Counter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "cpu_trap_code",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_CPU_TRAP_CODE,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_CPU_TRAP_CODE:\n\r"
          "  Action on the trap code field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "snoop_code",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_SNOOP_CODE,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_SNOOP_CODE:\n\r"
          "  Action on the snoop code\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "outbound_mirror_dis",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_OUTBOUND_MIRROR_DIS,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_OUTBOUND_MIRROR_DIS:\n\r"
          "  Action on the Outbound-Mirror-Disable field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "exclude_src",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_EXCLUDE_SRC,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_EXCLUDE_SRC:\n\r"
          "  Action on the Exclude-Source field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ingress_shaping",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_INGRESS_SHAPING,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_INGRESS_SHAPING:\n\r"
          "  Action on the Ingress Shaping field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "mirror_action",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_MIRROR_ACTION,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_MIRROR_ACTION:\n\r"
          "  Action on the mirror action\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "bytes_to_remove",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_BYTES_TO_REMOVE,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_BYTES_TO_REMOVE:\n\r"
          "  Action on the bytes to remove\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "header_profile_ndx",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_HEADER_PROFILE_NDX,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_HEADER_PROFILE_NDX:\n\r"
          "  Action on the Counter field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "seq_num_tag",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_SEQ_NUM_TAG,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_SEQ_NUM_TAG:\n\r"
          "  Action on the sequence namber\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "statistics_tag",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_STATISTICS_TAG,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_STATISTICS_TAG:\n\r"
          "  Action on the Statistic-Tag field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "lb_key",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_LB_KEY,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_LB_KEY:\n\r"
          "  Action on the LAG Load-Balancing field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "ecmp_key",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_ECMP_KEY,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_ECMP_KEY:\n\r"
          "  Action on the ECMP Load-Balancing field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "stacking_route",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_STACKING_ROUTE,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_STACKING_ROUTE:\n\r"
          "  Action on the Stacking-Route-History field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "outlif",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_OUTLIF,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_OUTLIF:\n\r"
          "  Action on the Out-LIF field\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
  {
    VAL_SYMBOL,
      "nop",
    {
      {
        SOC_PB_PMF_DIAG_FORCE_NOP,
          /*
          * Casting added here just to keep the compiler silent.
          */
          (long)""
          "  SOC_PB_PMF_DIAG_FORCE.SOC_PB_PMF_DIAG_FORCE_NOP:\n\r"
          "  No action\n\r"
          "",
          /*
          * Pointer to a function to call after symbolic value
          * has been accepted. Casting should be 'VAL_PROC_PTR'.
          * Casting to 'long' added here just to keep the
          * compiler silent.
          */
          (long)NULL
      }
    }
  },
    /*
    * Last element. Do not remove.
    */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/*
* } ENUM RULES
*/
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNT_MODE_STATISTICS_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "no_color", 
    { 
      { 
        SOC_PB_CNT_MODE_STATISTICS_NO_COLOR, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_STATISTICS.SOC_PB_CNT_MODE_STATISTICS_NO_COLOR:\n\r"
        "  Sets of two consecutive counters: enqueued data and discarded data. Must be\n\r"
        "  set if the source type is 'CNM_ID'.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "color_res_low", 
    { 
      { 
        SOC_PB_CNT_MODE_STATISTICS_COLOR_RES_LOW, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_STATISTICS.SOC_PB_CNT_MODE_STATISTICS_COLOR_RES_LOW:\n\r"
        "  Sets of four consecutive counters: enqueued green, enqueued yellow, discarded\n\r"
        "  green, and discarded yellow and red data.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "color_res_hi", 
    { 
      { 
        SOC_PB_CNT_MODE_STATISTICS_COLOR_RES_HI, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_STATISTICS.SOC_PB_CNT_MODE_STATISTICS_COLOR_RES_HI:\n\r"
        "  Sets of five consecutive counters: enqueued green, enqueued yellow, discarded\n\r"
        "  green, discarded yellow, and discarded red data.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNT_MODE_EG_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "type_tm0", 
    { 
      { 
        SOC_PB_CNT_MODE_EG_TYPE_TM, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_EG.SOC_PB_CNT_MODE_EG_TYPE_TM:\n\r"
        "  Counter-Id has the format: {Egress-MC(1), not(System-MC(1)), Out-TM-Port(7),\n\r"
        "  Traffic-Class(3)}. Must be set for Outgoing Ports of type TM.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "type_vsi1", 
    { 
      { 
        SOC_PB_CNT_MODE_EG_TYPE_VSI, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_EG.SOC_PB_CNT_MODE_EG_TYPE_VSI:\n\r"
        "  Counter-Id equals the Packet VSI\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "type_outlif", 
    { 
      { 
        SOC_PB_CNT_MODE_EG_TYPE_OUTLIF, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_MODE_EG.SOC_PB_CNT_MODE_EG_TYPE_OUTLIF:\n\r"
        "  The Counter-Id equals the Packet Out-LIF\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 


/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNT_SRC_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "ing_pp", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_ING_PP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_ING_PP:\n\r"
        "  The counting command source is the ingress Dune packet processor.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "voq", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_VOQ, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_VOQ:\n\r"
        "  The counting is done on the VOQs. If this option is chosen, the 'voq_cnt'\n\r"
        "  parameter must be set to define which VOQ are counted.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "stag", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_STAG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_STAG:\n\r"
        "  The counting is done according to 12 configurable consecutive bits in the\n\r"
        "  Statistic tag. If this option is chosen, the 'stag_first_bit' parameter must\n\r"
        "  be set to define which bit range in the Statistic-Tag is significant. The\n\r"
        "  effective range depends on the counting mode: e.g., with the 'NO_COLOR' mode,\n\r"
        "  the all range (4K) is significant. With the 'COLOR_RES_LOW' (resp. 'HIGH'),\n\r"
        "  the effective range is 0 - 2K-1 (resp. 1638, i.e. 8K/5-1).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "vsq", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_VSQ, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_VSQ:\n\r"
        "  The counting is done on the VSQs.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cnm_id", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_CNM_ID, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_CNM_ID:\n\r"
        "  The counting is done per CNM id. The count starts only if a CNM packet is\n\r"
        "  generated. The counting mode must be 'NO_COLOR'.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "egr_pp", 
    { 
      { 
        SOC_PB_CNT_SRC_TYPE_EGR_PP, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_SRC_TYPE.SOC_PB_CNT_SRC_TYPE_EGR_PP:\n\r"
        "  The counting source is the egress Dune packet processor. This mode can be\n\r"
        "  used only if the processor index is B.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_CNT_Q_SET_SIZE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "size_1_q", 
    { 
      { 
        SOC_PB_CNT_Q_SET_SIZE_1_Q, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_Q_SET_SIZE.SOC_PB_CNT_Q_SET_SIZE_1_Q:\n\r"
        "  Each counter counts 1 consecutive queue.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "size_2_q", 
    { 
      { 
        SOC_PB_CNT_Q_SET_SIZE_2_Q, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_Q_SET_SIZE.SOC_PB_CNT_Q_SET_SIZE_2_Q:\n\r"
        "  Each counter counts 2 consecutive queues.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "size_4_q", 
    { 
      { 
        SOC_PB_CNT_Q_SET_SIZE_4_Q, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_Q_SET_SIZE.SOC_PB_CNT_Q_SET_SIZE_4_Q:\n\r"
        "  Each counter counts 4 consecutive queues.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "size_8_q", 
    { 
      { 
        SOC_PB_CNT_Q_SET_SIZE_8_Q, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_CNT_Q_SET_SIZE.SOC_PB_CNT_Q_SET_SIZE_8_Q:\n\r"
        "  Each counter counts 8 consecutive queues.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TDM_EG_ACTION_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "remove", 
    { 
      { 
        SOC_PB_TDM_EG_ACTION_REMOVE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_EG_ACTION.SOC_PB_TDM_EG_ACTION_REMOVE:\n\r"
        "  Remove the FTMH header to all the transmitted TDM cells at this OFP-Port.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "no_change", 
    { 
      { 
        SOC_PB_TDM_EG_ACTION_NO_CHANGE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_EG_ACTION.SOC_PB_TDM_EG_ACTION_NO_CHANGE:\n\r"
        "  Do not change the FTMH header to all the transmitted TDM cells at this\n\r"
        "  OFP-Port.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "customer_extract", 
    { 
      { 
        SOC_PB_TDM_EG_ACTION_CUSTOMER_EXTRACT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_EG_ACTION.SOC_PB_TDM_EG_ACTION_CUSTOMER_EXTRACT:\n\r"
        "  Extract an external customer overhead from a removed Standard FTMH Header.\n\r"
        "  Relevant only when the FTMH format is Standard. Must be used for\n\r"
        "  interoperability with a PMC HyPhy PMM header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
;

 /* 
  * } ENUM RULES 
  */
/********************************************************/        
/********************************************************/        
EXTERN CONST 
   PARAM_VAL_RULES 
     soc_pb_api_free_vals[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

EXTERN CONST 
   PARAM_VAL_RULES 
     soc_pb_api_ofp_bitmap_index[]
#ifdef INIT
   =
{
  {
    VAL_NUMERIC,SYMB_NAME_NUMERIC,
    {
      {
        HAS_NO_MIN_VALUE | HAS_NO_MAX_VALUE,
        0,0,
          /*
           * Number of times this value can be repeated (i.e.,
           * value is an array). Must be at least 1!
           */
        1,
        (VAL_PROC_PTR)NULL
      }
    }
  },
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;
EXTERN CONST
   PARAM_VAL_RULES
     soc_pb_api_empty_vals[]
#ifdef INIT
   =
{
/*
 * Last element. Do not remove.
 */
  {
    VAL_END_OF_LIST
  }
}
#endif
;

/********************************************************/        
/********************************************************/        

EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TDM_ING_ACTION_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "add", 
    { 
      { 
        SOC_PB_TDM_ING_ACTION_ADD, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_ING_ACTION.SOC_PB_TDM_ING_ACTION_ADD:\n\r"
        "  Add an FTMH header to all the received TDM cells at this ITM-Port. If set,\n\r"
        "  the FTMH fields must be configured via the 'ftmh' parameter and are kept\n\r"
        "  during the cell switching.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "no_change", 
    { 
      { 
        SOC_PB_TDM_ING_ACTION_NO_CHANGE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_ING_ACTION.SOC_PB_TDM_ING_ACTION_NO_CHANGE:\n\r"
        "  Do not change the FTMH header to all the received TDM cells at this ITM-Port\n\r"
        "  - the FMTH must be already there.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "customer_embed", 
    { 
      { 
        SOC_PB_TDM_ING_ACTION_CUSTOMER_EMBED, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TDM_ING_ACTION.SOC_PB_TDM_ING_ACTION_CUSTOMER_EMBED:\n\r"
        "  Embed an external customer header in an added Standard FTMH Header. Relevant\n\r"
        "  only when the FTMH format is Standard. Must be used for interoperability with\n\r"
        "  a PMC HyPhy PMM header.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
;
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_EGR_ACL_DB_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "eth", 
    { 
      { 
        SOC_PB_EGR_ACL_DB_TYPE_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_EGR_ACL_DB_TYPE.SOC_PB_EGR_ACL_DB_TYPE_ETH:\n\r"
        "  Ethernet L2 ACL Key\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "ipv4", 
    { 
      { 
        SOC_PB_EGR_ACL_DB_TYPE_IPV4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_EGR_ACL_DB_TYPE.SOC_PB_EGR_ACL_DB_TYPE_IPV4:\n\r"
        "  L3 IPv4 ACL Key\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "mpls", 
    { 
      { 
        SOC_PB_EGR_ACL_DB_TYPE_MPLS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_EGR_ACL_DB_TYPE.SOC_PB_EGR_ACL_DB_TYPE_MPLS:\n\r"
        "  MPLS ACL Key\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "tm", 
    { 
      { 
        SOC_PB_EGR_ACL_DB_TYPE_TM, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_EGR_ACL_DB_TYPE.SOC_PB_EGR_ACL_DB_TYPE_TM:\n\r"
        "  TM ACL Key\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
;

/********************************************************/
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_ITM_STAG_ENABLE_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "dis", 
    { 
      { 
        SOC_PB_ITM_STAG_ENABLE_MODE_DIS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ITM_STAG_ENABLE_MODE.SOC_PB_ITM_STAG_ENABLE_MODE_DIS:\n\r"
        "  Statistics Tag is not used (disabled). \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "en_no_vsq", 
    { 
      { 
        SOC_PB_ITM_STAG_ENABLE_MODE_EN_NO_VSQ, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ITM_STAG_ENABLE_MODE.SOC_PB_ITM_STAG_ENABLE_MODE_EN_NO_VSQ:\n\r"
        "  The Statistics Tag is enabled with no use of the VSQ pointer. In the\n\r"
        "  Statistics Interface, the dequeue information is not available. It still can\n\r"
        "  be used in Billing mode.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "en_with_vsq", 
    { 
      { 
        SOC_PB_ITM_STAG_ENABLE_MODE_EN_WITH_VSQ, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_ITM_STAG_ENABLE_MODE.SOC_PB_ITM_STAG_ENABLE_MODE_EN_WITH_VSQ:\n\r"
        "  The Statistics Tag is enabled and the use of the VSQ pointer is enabled. In\n\r"
        "  the Statistics Interface, the dequeue information is not available. It still\n\r"
        "  can be used in Billing mode.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "size_72_bits", 
    { 
      { 
        SOC_PB_TCAM_BANK_ENTRY_SIZE_72_BITS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_BANK_ENTRY_SIZE.SOC_PB_TCAM_BANK_ENTRY_SIZE_72_BITS:\n\r"
        "  Half word mode: 2 entries per line, 72 bits each.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "size_144_bits", 
    { 
      { 
        SOC_PB_TCAM_BANK_ENTRY_SIZE_144_BITS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_BANK_ENTRY_SIZE.SOC_PB_TCAM_BANK_ENTRY_SIZE_144_BITS:\n\r"
        "  Regular mode: 1 entry per line, 144 bits.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "size_288_bits", 
    { 
      { 
        SOC_PB_TCAM_BANK_ENTRY_SIZE_288_BITS, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_BANK_ENTRY_SIZE.SOC_PB_TCAM_BANK_ENTRY_SIZE_288_BITS:\n\r"
        "  Double word mode: each 288 bit entry occupies two lines.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TCAM_DB_PRIO_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "bank", 
    { 
      { 
        SOC_PB_TCAM_DB_PRIO_MODE_BANK, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_DB_PRIO_MODE.SOC_PB_TCAM_DB_PRIO_MODE_BANK:\n\r"
        "  Entries in lower banks have priority over entries from higher banks.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "interlaced", 
    { 
      { 
        SOC_PB_TCAM_DB_PRIO_MODE_INTERLACED, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_DB_PRIO_MODE.SOC_PB_TCAM_DB_PRIO_MODE_INTERLACED:\n\r"
        "  Entry priorities are interlaced.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TCAM_ACCESS_CYCLE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "cycle_0", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_CYCLE_0, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_CYCLE.SOC_PB_TCAM_ACCESS_CYCLE_0:\n\r"
        "  Even cycles.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "cycle_1", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_CYCLE_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_CYCLE.SOC_PB_TCAM_ACCESS_CYCLE_1:\n\r"
        "  Odd cycles.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_TCAM_ACCESS_DEVICE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "pd1", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_DEVICE_PD1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_DEVICE.SOC_PB_TCAM_ACCESS_DEVICE_PD1:\n\r"
        "  4-bank priority decoder.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "pd2", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_DEVICE_PD2, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_DEVICE.SOC_PB_TCAM_ACCESS_DEVICE_PD2:\n\r"
        "  2-bank priority decoder.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sel3", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_DEVICE_SEL3, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_DEVICE.SOC_PB_TCAM_ACCESS_DEVICE_SEL3:\n\r"
        "  Bank selector.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "sel4", 
    { 
      { 
        SOC_PB_TCAM_ACCESS_DEVICE_SEL4, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_TCAM_ACCESS_DEVICE.SOC_PB_TCAM_ACCESS_DEVICE_SEL4:\n\r"
        "  Bank selector.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/  

EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_STACK_MAX_NOF_TM_DOMAINS_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "nof_tm_domains_1", 
    { 
      { 
        SOC_PB_STACK_MAX_NOF_TM_DOMAINS_1, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_STACK_MAX_NOF_TM_DOMAINS.SOC_PB_STACK_MAX_NOF_TM_DOMAINS_1:\n\r"
        "  1 TM domain in system, i.e. stacking is not supported. \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "nof_tm_domains_8", 
    { 
      { 
        SOC_PB_STACK_MAX_NOF_TM_DOMAINS_8, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_STACK_MAX_NOF_TM_DOMAINS.SOC_PB_STACK_MAX_NOF_TM_DOMAINS_8:\n\r"
        "  Up to 8 TM-domains in system is supported \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "nof_tm_domains_16", 
    { 
      { 
        SOC_PB_STACK_MAX_NOF_TM_DOMAINS_16, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_STACK_MAX_NOF_TM_DOMAINS.SOC_PB_STACK_MAX_NOF_TM_DOMAINS_8:\n\r"
        "  Up to 16 TM-domains in system is supported. Note in this\n\r"
        "  case LAG resolution can not be performed at egress. \n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
#if LINK_PB_PP_LIBRARIES
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_PP_MGMT_ELK_MODE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "none", 
    { 
      { 
        SOC_PB_PP_MGMT_ELK_MODE_NONE, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_ELK_MODE_NONE:\n\r"
        "  External lookups are disabled.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "normal", 
    { 
      { 
        SOC_PB_PP_MGMT_ELK_MODE_NORMAL, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_ELK_MODE_NORMAL:\n\r"
        "  External lookup is set to Petra-B rev. A1 mode.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b0_short", 
    { 
      { 
        SOC_PB_PP_MGMT_ELK_MODE_B0_SHORT, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_ELK_MODE_B0_SHORT:\n\r"
        "  External lookup uses short records exclusively (available in Petra-B rev. B0 only).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "b0_long", 
    { 
      { 
        SOC_PB_PP_MGMT_ELK_MODE_B0_LONG, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_ELK_MODE_B0_LONG:\n\r"
        "  External lookup uses long records exclusively (available in Petra-B rev. B0 only).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
  { 
    VAL_SYMBOL, 
    "b0_both", 
    { 
      { 
        SOC_PB_PP_MGMT_ELK_MODE_B0_BOTH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_ELK_MODE_B0_BOTH:\n\r"
        "  External lookup uses both short and long records (available in Petra-B rev. B0 only).\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  }, 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 

/********************************************************/        
/********************************************************/        
 
EXTERN CONST 
   PARAM_VAL_RULES 
     SOC_PB_PP_MGMT_LKP_TYPE_rule[] 
#ifdef INIT 
   = 
{ 
  { 
    VAL_SYMBOL, 
    "p2p", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_P2P, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_P2P:\n\r"
        "  Transparent P2P service.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "eth", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_ETH, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_ETH:\n\r"
        "  Ethernet bridging.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "trill_uc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_TRILL_UC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_TRILL_UC:\n\r"
        "  TRILL unicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "trill_mc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_TRILL_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_TRILL_MC:\n\r"
        "  TRILL multicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "ipv4_uc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_IPV4_UC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_IPV4_UC:\n\r"
        "  IPv4 unicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the stupid 
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "ipv4_mc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_IPV4_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_IPV4_MC:\n\r"
        "  IPv4 multicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "ipv6_uc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_IPV6_UC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_IPV6_UC:\n\r"
        "  IPv6 unicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "ipv6_mc", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_IPV6_MC, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_IPV6_MC:\n\r"
        "  IPv6 multicast forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
  { 
    VAL_SYMBOL, 
    "lsr", 
    { 
      { 
        SOC_PB_PP_MGMT_LKP_TYPE_LSR, 
          /* 
           * Casting added here just to keep the compiler silent. 
           */ 
        (long)"" 
        "  SOC_PB_PP_MGMT_LKP_TYPE_LSR:\n\r"
        "  MPLS forwarding.\n\r"
          "", 
          /* 
           * Pointer to a function to call after symbolic value 
           * has been accepted. Casting should be 'VAL_PROC_PTR'. 
           * Casting to 'long' added here just to keep the
           * compiler silent. 
           */ 
        (long)NULL 
      } 
    } 
  },
 
/* 
 * Last element. Do not remove. 
 */ 
  { 
    VAL_END_OF_LIST 
  } 
} 
#endif 
; 
#endif /* LINK_PB_PP_LIBRARIES */
/********************************************************/        
/********************************************************/        
EXTERN CONST
   PARAM
     soc_pb_api_params[]


#ifdef INIT
   =
{
#ifdef UI_DIAGNOSTICS/* { diagnostics*/
 
  { 
    PARAM_PB_DIAG_LAST_PACKET_INFO_GET_DIAG_LAST_PACKET_INFO_GET_ID, 
    "diag_last_packet_info_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns diagnostics information regarding the last packet: the incoming TM\n\r"
    "  port and the corresponding PP port, port header processing type, packet\n\r"
    "  headers and payload (first 128 Bytes). In case of TM port, the ITMH, which is\n\r"
    "  part of that buffer, is parsed.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api diagnostics diag_last_packet_info_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_DIAG_LAST_PACKET_INFO_GET_DIAG_LAST_PACKET_INFO_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_DIAGNOSTICS_ID, 
    "diagnostics", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_DIAGNOSTICS_FIRST_ID,FUN_PB_API_DIAGNOSTICS_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } diagnostics*/

#ifdef UI_CNM
  {
    PARAM_PB_CNM_CP_SET_CP_SET_ID_PETRA_B_PP, 
    "cp_set_intern_pp", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Congestion Point functionality, in particular the packet generation\n\r"
    "  mode and the fields of the CNM packet. This option is valid when using internal Petra PP\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  

  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_ETHER_TYPE_ID, 
    "pp_ether_type", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.ether_type:\n\r"
    "  The Ethernet type used to tag packets with a CN-TAG (i.e., CN-TAG Ethernet\n\r"
    "  type).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_PDU_CP_ID_6_MSB_ID, 
    "cp_id_6_msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_members_vals[0], 
    (sizeof(soc_pb_api_members_vals) / sizeof(soc_pb_api_members_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.pdu.cp_id_6_msb[ prm_cp_id_6_msb_index]:\n\r"
    "  The 6 MSB bytes of the CP-Id field of the PDU header.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_PDU_RES_V_ID, 
    "res_v", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.pdu.res_v:\n\r"
    "  The Reserved-V field of the PDU header.Range: 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_PDU_VERSION_ID, 
    "version", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.pdu.version:\n\r"
    "  The Version field of the PDU header.Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_PDU_ETHER_TYPE_ID, 
    "pdu_ether_type", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.pdu.ether_type:\n\r"
    "  The Ethernet type of the packet to indicate that the packet is a CNM packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_PPH_ING_VLAN_EDIT_CMD_ID, 
    "ing_vlan_edit_cmd", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.pph.ing_vlan_edit_cmd:\n\r"
    "  Ingress VLAN Edit Command for all the CNM packets. Range: 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PP_MAC_SA_ID, 
    "mac_sa", 
    (PARAM_VAL_RULES *)&soc_pb_api_mac_addr_vals[0], 
    (sizeof(soc_pb_api_mac_addr_vals) / sizeof(soc_pb_api_mac_addr_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pp.mac_sa:\n\r"
    "  The source MAC address to be encapsulated in the CNM packets.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_CP_ID_4_MSB_ID, 
    "cp_id_4_msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.cp_id_4_msb:\n\r"
    "  Value of the 4 MSB bits in the CP-Id field. Range: 0 - 15.In the 'EXT_PP'\n\r"
    "  mode, the CP-Id field is in the CNM extension header and CP-Id = 1 <<\n\r"
    "  (cp_id_4_msb + 12) + CP-Index (received from the CP Queue). In the 'DUNE_PP'\n\r"
    "  mode, the CP-Id field is in the PDU header and CP-Id = PDU.cp_id_6_msb + 1 <<\n\r"
    "  (cp_id_4_msb + 12) + CP-Index.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.tc:\n\r"
    "  Traffic class of the generated CNM packet (not dependent on the original\n\r"
    "  traffic class).Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_TC_ID_FTMH_OTM_PORT, 
    "otm_port", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.tc:\n\r"
    "  OTM port of the generated CNM packet \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_IS_CP_ENABLED_ID, 
    "is_cp_enabled", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_cp_enabled:\n\r"
    "  If True, the Congestion Point functionality is enabled. The ingress shaping\n\r"
    "  must be then disabled.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_PETRA_B_PP), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  {
    PARAM_PB_CNM_CP_SET_CP_SET_ID_EXT_PP_OR_SAMPLING, 
    "cp_set_extern_pp_or_samp", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Congestion Point functionality, in particular the packet generation\n\r"
    "  mode and the fields of the CNM packet. This option is valid when using external Petra PP\n\r"
    "  or sampling\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  }, 

{ 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PKT_GEN_MODE_ID, 
    "pkt_gen_mode", 
    (PARAM_VAL_RULES *)&SOC_PB_CNM_GEN_MODE_rule[0], 
    (sizeof(SOC_PB_CNM_GEN_MODE_rule) / sizeof(SOC_PB_CNM_GEN_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pkt_gen_mode:\n\r"
    "  CNM Packet generation mode. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
 { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_CP_ID_4_MSB_ID, 
    "cp_id_4_msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.cp_id_4_msb:\n\r"
    "  Value of the 4 MSB bits in the CP-Id field. Range: 0 - 15.In the 'EXT_PP'\n\r"
    "  mode, the CP-Id field is in the CNM extension header and CP-Id = 1 <<\n\r"
    "  (cp_id_4_msb + 12) + CP-Index (received from the CP Queue). In the 'DUNE_PP'\n\r"
    "  mode, the CP-Id field is in the PDU header and CP-Id = PDU.cp_id_6_msb + 1 <<\n\r"
    "  (cp_id_4_msb + 12) + CP-Index.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.tc:\n\r"
    "  Traffic class of the generated CNM packet (not dependent on the original\n\r"
    "  traffic class).Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
   { 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_PCKT_TC_ID_FTMH_OTM_PORT, 
    "otm_port", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pckt.pckt.dest_tm_port:\n\r"
    "  OTM port of the generated CNM packet\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },    

{ 
    PARAM_PB_CNM_CP_SET_CP_SET_INFO_IS_CP_ENABLED_ID, 
    "is_cp_enabled", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_cp_enabled:\n\r"
    "  If True, the Congestion Point functionality is enabled. The ingress shaping\n\r"
    "  must be then disabled.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_set ether_type 0 cp_id_6_msb_index 0\n\r"
    "  cp_id_6_msb 0 res_v 0 version 0 ether_type 0 ing_vlan_edit_cmd 0 mac_sa 0\n\r"
    "  cp_id_4_msb 0 tc 0 pkt_gen_mode 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_SET_CNM_CP_SET_ID_EXT_PP_OR_SAMPLING), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  


  { 
    PARAM_PB_CNM_CP_GET_CNM_CP_GET_ID, 
    "cp_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Congestion Point functionality, in particular the packet generation\n\r"
    "  mode and the fields of the CNM packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_GET_CNM_CP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_Q_MAPPING_SET_CNM_Q_MAPPING_SET_ID, 
    "q_mapping_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the mapping from the pair (destination, traffic class) to the CP Queue. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm q_mapping_set nof_queues 0 q_set 0 q_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_Q_MAPPING_SET_CNM_Q_MAPPING_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_Q_MAPPING_SET_Q_MAPPING_SET_INFO_NOF_QUEUES_ID, 
    "nof_queues", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.nof_queues:\n\r"
    "  Number of CP queues. If the packet generation mode is 'SAMPLING' and the type\n\r"
    "  of queue sets is '8_CPS', then the number of CP queues must be inferior to\n\r"
    "  4K. Otherwise, Range: 0 - 8K.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm q_mapping_set nof_queues 0 q_set 0 q_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_Q_MAPPING_SET_CNM_Q_MAPPING_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_Q_MAPPING_SET_Q_MAPPING_SET_INFO_Q_SET_ID, 
    "q_set", 
    (PARAM_VAL_RULES *)&SOC_PB_CNM_Q_SET_rule[0], 
    (sizeof(SOC_PB_CNM_Q_SET_rule) / sizeof(SOC_PB_CNM_Q_SET_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.q_set:\n\r"
    "  The three types of queue sets. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm q_mapping_set nof_queues 0 q_set 0 q_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_Q_MAPPING_SET_CNM_Q_MAPPING_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_Q_MAPPING_SET_Q_MAPPING_SET_INFO_Q_BASE_ID, 
    "q_base", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.q_base:\n\r"
    "  Congestion point queue base in the mapping. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm q_mapping_set nof_queues 0 q_set 0 q_base 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_Q_MAPPING_SET_CNM_Q_MAPPING_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_Q_MAPPING_GET_CNM_Q_MAPPING_GET_ID, 
    "q_mapping_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the mapping from the pair (destination, traffic class) to the CP Queue. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm q_mapping_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_Q_MAPPING_GET_CNM_Q_MAPPING_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID, 
    "congestion_test_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set parameters of the congestion test. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_set is_mirr_also 0 is_snoop_also 0\n\r"
    "  is_ingr_rep_also 0 is_mc_also 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_SET_CONGESTION_TEST_SET_INFO_IS_MIRR_ALSO_ID, 
    "is_mirr_also", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_mirr_also:\n\r"
    "  If True, then CNM packets are generated also for mirrored copies. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_set is_mirr_also 0 is_snoop_also 0\n\r"
    "  is_ingr_rep_also 0 is_mc_also 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_SET_CONGESTION_TEST_SET_INFO_IS_SNOOP_ALSO_ID, 
    "is_snoop_also", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_snoop_also:\n\r"
    "  If True, then CNM packets are generated also for snooped copies. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_set is_mirr_also 0 is_snoop_also 0\n\r"
    "  is_ingr_rep_also 0 is_mc_also 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_SET_CONGESTION_TEST_SET_INFO_IS_INGR_REP_ALSO_ID, 
    "is_ingr_rep_also", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_ingr_rep_also:\n\r"
    "  If True, then CNM packets are generated also for ingress replication\n\r"
    "  multicast packets. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_set is_mirr_also 0 is_snoop_also 0\n\r"
    "  is_ingr_rep_also 0 is_mc_also 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_SET_CONGESTION_TEST_SET_INFO_IS_MC_ALSO_ID, 
    "is_mc_also", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_mc_also:\n\r"
    "  If True, then CNM packets are generated also for packets with MAC-DA of type\n\r"
    "  multicast or broadcast. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_set is_mirr_also 0 is_snoop_also 0\n\r"
    "  is_ingr_rep_also 0 is_mc_also 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_SET_CNM_CONGESTION_TEST_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CONGESTION_TEST_GET_CNM_CONGESTION_TEST_GET_ID, 
    "congestion_test_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set parameters of the congestion test. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm congestion_test_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CONGESTION_TEST_GET_CNM_CONGESTION_TEST_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID, 
    "cp_profile_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure an entry into the Congestion Point Profile Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_PROFILE_NDX_ID, 
    "profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  Index of the profile in the Congestion Point profile table.Range: 0 - 7.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_IS_SAMPLING_TH_RANDOM_ID, 
    "is_sampling_th_random", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_sampling_th_random:\n\r"
    "  If True, then the CP sampling threshold is modified according to a random\n\r"
    "  factor located between 0.85 and 1.15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_QUANT_DIV_ID, 
    "quant_div", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.quant_div:\n\r"
    "  The unsigned division factor between the calculated feedback and the\n\r"
    "  quantized feedback sent on the CNM packet.Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_MAX_NEG_FB_VALUE_ID, 
    "max_neg_fb_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.max_neg_fb_value:\n\r"
    "  The maximum negative value allowed to the CP feedback. Must be a multiple of\n\r"
    "  128 bytes.Units: Bytes. Range: 0 - (16K - 1) * 128.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_SAMPLING_BASE_INDEX_ID, 
    "sampling_base_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  sampling_base_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_SAMPLING_BASE_ID, 
    "sampling_base", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.sampling_base[ prm_sampling_base_index]:\n\r"
    "  The minimum number of enqueued bytes between two generations of a CNM packet.\n\r"
    "  Must be a multiple of 64 bytes. Default value: [150,000; 75,000; 50,000;\n\r"
    "  37,500; 30,000; 25,000; 21,500; 18,500].Units: Bytes. Range: 0 - (8K - 1) *\n\r"
    "  64.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_CPW_POWER_ID, 
    "cpw_power", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cpw_power:\n\r"
    "  The signed power of the Qdelta parameter during the computation of the\n\r"
    "  feedback value - CpW = 2 pow cpw_power.\n\r"
    "  Default value: 1. Units: Bytes. Range: (-15) - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_INFO_Q_EQ_ID, 
    "q_eq", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.q_eq:\n\r"
    "  The Equilibrium (target) size of the CP queue. Must be a multiple of 128\n\r"
    "  bytes. Default value: 26000 Bytes. Units: Bytes. Range: 0 - (4K - 1) * 128.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_set profile_ndx 0 is_sampling_th_random\n\r"
    "  0 quant_div 0 max_neg_fb_value 0 sampling_base_index 0 sampling_base 0\n\r"
    "  cpw_power 0 q_eq 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_SET_CNM_CP_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_GET_CNM_CP_PROFILE_GET_ID, 
    "cp_profile_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure an entry into the Congestion Point Profile Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_get profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_GET_CNM_CP_PROFILE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CP_PROFILE_GET_CNM_CP_PROFILE_GET_PROFILE_NDX_ID, 
    "profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  Index of the profile in the Congestion Point profile table.Range: 0 - 7.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cp_profile_get profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CP_PROFILE_GET_CNM_CP_PROFILE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_ID, 
    "sampling_profile_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure an entry into the Congestion Point Profile Table for the sampling\n\r"
    "  mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm sampling_profile_set profile_ndx 0 sampling_rate 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_PROFILE_NDX_ID, 
    "profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  Index of the profile in the Congestion Point profile table.Range: 0 - 7.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm sampling_profile_set profile_ndx 0 sampling_rate 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_SAMPLING_RATE_ID, 
    "sampling_rate", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  sampling_rate:\n\r"
    "  The minimum number of enqueued bytes between two generations of a CNM packet\n\r"
    "  and used as the sampling rate. Must be a multiple of 64 bytes. Default value:\n\r"
    "  150,000 Bytes.Units: Bytes. Range: 0 - (8K - 1) * 64.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm sampling_profile_set profile_ndx 0 sampling_rate 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_SAMPLING_PROFILE_SET_CNM_SAMPLING_PROFILE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_SAMPLING_PROFILE_GET_CNM_SAMPLING_PROFILE_GET_ID, 
    "sampling_profile_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure an entry into the Congestion Point Profile Table for the sampling\n\r"
    "  mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm sampling_profile_get profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_SAMPLING_PROFILE_GET_CNM_SAMPLING_PROFILE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_SAMPLING_PROFILE_GET_CNM_SAMPLING_PROFILE_GET_PROFILE_NDX_ID, 
    "profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_ndx:\n\r"
    "  Index of the profile in the Congestion Point profile table.Range: 0 - 7.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm sampling_profile_get profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_SAMPLING_PROFILE_GET_CNM_SAMPLING_PROFILE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_ID, 
    "cpq_pp_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the CP Queue attributes into an entry of the Congestion Point Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_set cpq_ndx 0 profile 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_CPQ_NDX_ID, 
    "cpq_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cpq_ndx:\n\r"
    "  Index of the CP Queue.Range: 0 - 4K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_set cpq_ndx 0 profile 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_INFO_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.profile:\n\r"
    "  Congestion Point profile.Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_set cpq_ndx 0 profile 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_INFO_IS_CP_ENABLED_ID, 
    "is_cp_enabled", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_cp_enabled:\n\r"
    "  If True, then the Congestion Point enables the generation of CNM packets on\n\r"
    "  this CP queue.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_set cpq_ndx 0 profile 0 is_cp_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_SET_CNM_CPQ_PP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_GET_CNM_CPQ_PP_GET_ID, 
    "cpq_pp_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the CP Queue attributes into an entry of the Congestion Point Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_get cpq_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_GET_CNM_CPQ_PP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_PP_GET_CNM_CPQ_PP_GET_CPQ_NDX_ID, 
    "cpq_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cpq_ndx:\n\r"
    "  Index of the CP Queue.Range: 0 - 4K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_pp_get cpq_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_PP_GET_CNM_CPQ_PP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_ID, 
    "cpq_sampling_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the CP Queue attributes into an entry of the Congestion Point Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_set cpq_ndx 0 profile 0 is_cp_enabled\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_CPQ_NDX_ID, 
    "cpq_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cpq_ndx:\n\r"
    "  Index of the CP Queue.Range: 0 - 8K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_set cpq_ndx 0 profile 0 is_cp_enabled\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_INFO_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.profile:\n\r"
    "  Congestion Point profile.Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_set cpq_ndx 0 profile 0 is_cp_enabled\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_INFO_IS_CP_ENABLED_ID, 
    "is_cp_enabled", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_cp_enabled:\n\r"
    "  If True, then the Congestion Point enables the generation of CNM packets on\n\r"
    "  this CP queue.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_set cpq_ndx 0 profile 0 is_cp_enabled\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_SET_CNM_CPQ_SAMPLING_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_GET_CNM_CPQ_SAMPLING_GET_ID, 
    "cpq_sampling_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the CP Queue attributes into an entry of the Congestion Point Table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_get cpq_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_GET_CNM_CPQ_SAMPLING_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_CPQ_SAMPLING_GET_CNM_CPQ_SAMPLING_GET_CPQ_NDX_ID, 
    "cpq_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cpq_ndx:\n\r"
    "  Index of the CP Queue.Range: 0 - 8K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm cpq_sampling_get cpq_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_CPQ_SAMPLING_GET_CNM_CPQ_SAMPLING_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_INTERCEPT_TIMER_SET_CNM_INTERCEPT_TIMER_SET_ID, 
    "intercept_timer_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the timer delay of the CNM Intercept functionality\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm intercept_timer_set delay 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_INTERCEPT_TIMER_SET_CNM_INTERCEPT_TIMER_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_INTERCEPT_TIMER_SET_CNM_INTERCEPT_TIMER_SET_DELAY_ID, 
    "delay", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  delay:\n\r"
    "  Timer delay during which the flow control is set unless a new CNM is received\n\r"
    "  for the same flow control signal.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm intercept_timer_set delay 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_INTERCEPT_TIMER_SET_CNM_INTERCEPT_TIMER_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNM_INTERCEPT_TIMER_GET_CNM_INTERCEPT_TIMER_GET_ID, 
    "intercept_timer_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the timer delay of the CNM Intercept functionality\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnm intercept_timer_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNM_INTERCEPT_TIMER_GET_CNM_INTERCEPT_TIMER_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_CNM_ID, 
    "cnm", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_CNM_FIRST_ID,FUN_PB_API_CNM_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  


#endif /* UI_CNM */


#ifdef UI_ACTION_CMD/* { action_cmd*/
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID, 
    "snoop_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set a snoop action profile in the snoop action profile table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ACTION_NDX_ID, 
    "action_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_ndx:\n\r"
    "  Action profile index in the snoop action profile table. The action profile is\n\r"
    "  relevant for packets with a snoop action field of the same value. Range: 0 -\n\r"
    "  15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_SNOOP_SIZE_ID, 
    "snoop_size", 
    (PARAM_VAL_RULES *)&SOC_PB_ACTION_CMD_SIZE_BYTES_rule[0], 
    (sizeof(SOC_PB_ACTION_CMD_SIZE_BYTES_rule) / sizeof(SOC_PB_ACTION_CMD_SIZE_BYTES_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.snoop_size:\n\r"
    "  The size of the snooped packet that is generated.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_SNOOP_PROB_ID, 
    "snoop_prob", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.snoop_prob:\n\r"
    "  The probability of the snooped packet that is generated.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_IS_ING_MC_ID, 
    "is_ing_mc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.is_ing_mc:\n\r"
    "  If TRUE, then the command is of type ingress multicast.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_COUNTER_PTR_2_ENABLE_ID, 
    "cnt_b_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_2.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_COUNTER_PTR_2_VALUE_ID, 
    "cnt_b_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_2.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_COUNTER_PTR_1_ENABLE_ID, 
    "cnt_a_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_1.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_COUNTER_PTR_1_VALUE_ID, 
    "cnt_a_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_1.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_DP_ENABLE_ID, 
    "mtr_dp_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_dp.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_DP_VALUE_ID, 
    "mtr_dp_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_dp.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_PTR_UP_ENABLE_ID, 
    "mtr_1_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_up.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_PTR_UP_VALUE_ID, 
    "mtr_1_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_up.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_PTR_LOW_ENABLE_ID, 
    "mtr_0_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_low.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_METER_PTR_LOW_VALUE_ID, 
    "mtr_0_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_low.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_DP_ENABLE_ID, 
    "dp_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dp.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_DP_VALUE_ID, 
    "dp_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dp.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_TC_ENABLE_ID, 
    "tc_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.tc.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_TC_VALUE_ID, 
    "tc_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.tc.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_set action_ndx 0 snoop_size 0 is_ing_mc 0 enable 0\n\r"
    "  value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_DEST_ID_DEST_VAL_ID, 
    "dest_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dest_id:\n\r"
    "  Destination ID of the packet. Can be a System-Port, a Flow-ID, a\n\r"
    "  Multicast-ID, or a FEC-Pointer.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
   { 
    PARAM_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_INFO_CMD_DEST_ID_DEST_TYPE_ID, 
    "dest_type", 
    (PARAM_VAL_RULES *)&SOC_PETRA_DEST_TYPE_rule[0], 
    (sizeof(SOC_PETRA_DEST_TYPE_rule) / sizeof(SOC_PETRA_DEST_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dest_id:\n\r"
    "  Destination ID of the packet. Can be a System-Port, a Flow-ID, a\n\r"
    "  Multicast-ID, or a FEC-Pointer.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_SET_SNOOP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_GET_SNOOP_GET_ID, 
    "snoop_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set a snoop action profile in the snoop action profile table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_get action_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_GET_SNOOP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_SNOOP_GET_SNOOP_GET_ACTION_NDX_ID, 
    "action_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_ndx:\n\r"
    "  Action profile index in the snoop action profile table. The action profile is\n\r"
    "  relevant for packets with a snoop action field of the same value. Range: 0 -\n\r"
    "  15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd snoop_get action_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_SNOOP_GET_SNOOP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID, 
    "mirror_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set a mirror action profile in the mirror action profile table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ACTION_NDX_ID, 
    "action_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_ndx:\n\r"
    "  Action profile index in the mirror action profile table. Relevant for packets\n\r"
    "  with a mirror action field of the same value.Range: 0 - 15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_MIRROR_PROB_ID, 
    "mirror_prob", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.mirror_prob:\n\r"
    "  The probability of the snooped packet that is generated.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_IS_ING_MC_ID, 
    "is_ing_mc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.is_ing_mc:\n\r"
    "  If TRUE, then the command is of type ingress multicast.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_COUNTER_PTR_2_ENABLE_ID, 
    "cnt_b_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_2.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_COUNTER_PTR_2_VALUE_ID, 
    "cnt_b_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_2.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_COUNTER_PTR_1_ENABLE_ID, 
    "cnt_a_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_1.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_COUNTER_PTR_1_VALUE_ID, 
    "cnt_a_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.counter_ptr_1.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_DP_ENABLE_ID, 
    "mtr_dp_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_dp.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_DP_VALUE_ID, 
    "mtr_dp_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_dp.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_PTR_UP_ENABLE_ID, 
    "mtr_1_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_up.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_PTR_UP_VALUE_ID, 
    "mtr_1_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_up.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_PTR_LOW_ENABLE_ID, 
    "mtr_0_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_low.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_METER_PTR_LOW_VALUE_ID, 
    "mtr_0_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.meter_ptr_low.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_DP_ENABLE_ID, 
    "dp_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dp.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_DP_VALUE_ID, 
    "dp_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dp.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_TC_ENABLE_ID, 
    "tc_enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.tc.enable:\n\r"
    "  If True, the override is enabled with the new value 'value'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_TC_VALUE_ID, 
    "tc_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.tc.value:\n\r"
    "  The override value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_DEST_ID_DEST_VAL_ID, 
    "dest_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dest_id:\n\r"
    "  Destination ID of the packet. Can be a System-Port, a Flow-ID, a\n\r"
    "  Multicast-ID, or a FEC-Pointer.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
   { 
    PARAM_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_INFO_CMD_DEST_ID_DEST_TYPE_ID, 
    "dest_type", 
    (PARAM_VAL_RULES *)&SOC_PETRA_DEST_TYPE_rule[0], 
    (sizeof(SOC_PETRA_DEST_TYPE_rule) / sizeof(SOC_PETRA_DEST_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.cmd.dest_id:\n\r"
    "  Destination ID of the packet. Can be a System-Port, a Flow-ID, a\n\r"
    "  Multicast-ID, or a FEC-Pointer.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_set action_ndx 0 is_ing_mc 0 enable 0 value 0 enable\n\r"
    "  0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0 enable 0 value 0\n\r"
    "  enable 0 value 0 dest_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_SET_MIRROR_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_GET_MIRROR_GET_ID, 
    "mirror_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set a mirror action profile in the mirror action profile table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_get action_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_GET_MIRROR_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ACTION_CMD_MIRROR_GET_MIRROR_GET_ACTION_NDX_ID, 
    "action_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_ndx:\n\r"
    "  Action profile index in the mirror action profile table. Relevant for packets\n\r"
    "  with a mirror action field of the same value.Range: 0 - 15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api action_cmd mirror_get action_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ACTION_CMD_MIRROR_GET_MIRROR_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_ACTION_CMD_ID, 
    "action_cmd", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_ACTION_CMD_FIRST_ID,FUN_PB_API_ACTION_CMD_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } action_cmd*/
#ifdef UI_NIF/* { nif*/
  {
    PARAM_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID,
    "on_off_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Turns the interface on/off. Optionally, powers up/down the attached SerDes\n\r"
    "  also.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_set type xaui nif_ndx 0 serdes_also 0 is_nif_on 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_SET_ON_OFF_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_set type xaui nif_ndx 0 serdes_also 0 is_nif_on 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_SET_ON_OFF_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF index. Range: Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_set type xaui nif_ndx 0 serdes_also 0 is_nif_on 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_SET_ON_OFF_SET_INFO_SERDES_ALSO_ID,
    "serdes_also",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.serdes_also:\n\r"
    "  Set the serdes lane accordingly - power down when NIF is turned off, power up\n\r"
    "  when turned on.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_set type xaui nif_ndx 0 serdes_also 0 is_nif_on 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_SET_ON_OFF_SET_INFO_IS_NIF_ON_ID,
    "is_nif_on",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_nif_on:\n\r"
    "  If TRUE, the NIF is up.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_set type xaui nif_ndx 0 serdes_also 0 is_nif_on 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_SET_ON_OFF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_GET_ON_OFF_GET_ID,
    "on_off_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Turns the interface on/off. Optionally, powers up/down the attached SerDes\n\r"
    "  also.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_GET_ON_OFF_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_GET_ON_OFF_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_GET_ON_OFF_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ON_OFF_GET_ON_OFF_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF index. Range: Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif on_off_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ON_OFF_GET_ON_OFF_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ID,
    "loopback_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the specified Network Interface to loopback, by setting all its SerDeses\n\r"
    "  in loopback (NSILB)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_set type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_set type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF index. Range: Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_set type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\n\r"
    "  If TRUE, the loopback is enabled\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_set type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_SET_LOOPBACK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_ID,
    "loopback_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets the specified Network Interface to loopback, by setting all its SerDeses\n\r"
    "  in loopback (NSILB)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_get nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_get type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF index. Range: Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif loopback_get type xaui nif_ndx 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LOOPBACK_GET_LOOPBACK_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID,
    "mal_basic_conf_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets basic MAL configuration. This configuration defines MAL to SerDes\n\r"
    "  mapping topology. Following setting basic configuration, per-NIF-type (e.g.\n\r"
    "  SPAUI/SGMII etc.) configuration must be set before enabling the MAL.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAL index. Range: 0 - 15	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_INFO_TOPOLOGY_IS_QSGMII_ALT_ID,
    "is_qsgmii_alt",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.topology.is_qsgmii_alt:\n\r"
    "  If TRUE, an Alternative SGMII mapping to SerDes is used, as follows: MAL 5 is\n\r"
    "  mapped to QSRD-0 lane 1, MAL 6 is mapped to QSRD-1 lane 3, MAL 7 is mapped to\n\r"
    "  QSRD-0 lane 3. This mapping allows tofacilitate the QSGMII NIF ports in the\n\r"
    "  case that the COMBO QSRD is towards the fabric, or the spouse-MAL is used as\n\r"
    "  XAUI.Default: disabled.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_INFO_TOPOLOGY_LANES_SWAP_SWAP_TX_ID,
    "swap_tx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.topology.lanes_swap.swap_tx:\n\r"
    "  Same as RX\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_INFO_TOPOLOGY_LANES_SWAP_SWAP_RX_ID,
    "swap_rx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.topology.lanes_swap.swap_rx:\n\r"
    "  If set, order of the SerDes Physical Lanes will be swapped when mapped into\n\r"
    "  Logical Lanes.\n\r"
    "  Per SerDes quartet, Lane 0 is swapped with Lane 3, Lane 1 with Lane2Note:\n\r"
    "  This is applicable for XAUI/RXAUI interfaces only\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_INFO_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_set mal_ndx 0 is_qsgmii_alt 0 swap_tx 0 swap_rx 0\n\r"
    "  type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_SET_MAL_BASIC_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_GET_MAL_BASIC_CONF_GET_ID,
    "mal_basic_conf_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets basic MAL configuration. This configuration defines MAL to SerDes\n\r"
    "  mapping topology. Following setting basic configuration, per-NIF-type (e.g.\n\r"
    "  SPAUI/SGMII etc.) configuration must be set before enabling the MAL.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_get mal_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_GET_MAL_BASIC_CONF_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MAL_BASIC_CONF_GET_MAL_BASIC_CONF_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAL index. Range: 0 - 15	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif mal_basic_conf_get mal_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MAL_BASIC_CONF_GET_MAL_BASIC_CONF_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_ID,
    "min_packet_size_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets minimal packet size as limited by the NIF.\n\r"
    "  Note: Normally, the packet size is limited using\n\r"
    "  soc_petra_mgmt_pckt_size_range_set(), and not this API.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_set mal_ndx 0 direction_ndx 0 pckt_size 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAL index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_set mal_ndx 0 direction_ndx 0 pckt_size 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_set mal_ndx 0 direction_ndx 0 pckt_size 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_PCKT_SIZE_ID,
    "pckt_size",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pckt_size:\n\r"
    "  Minimal packet size in Bytes. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_set mal_ndx 0 direction_ndx 0 pckt_size 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_SET_MIN_PACKET_SIZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_ID,
    "min_packet_size_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets minimal packet size as limited by the NIF.\n\r"
    "  Note: Normally, the packet size is limited using\n\r"
    "  soc_petra_mgmt_pckt_size_range_set(), and not this API.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_get mal_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAL index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_get mal_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif min_packet_size_get mal_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_MIN_PACKET_SIZE_GET_MIN_PACKET_SIZE_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID,
    "spaui_conf_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SPAUI configuration -\n\r"
    "  configure SPAUI extensions for XAUI interface. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set type xaui nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set type xaui nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF index. Range: Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set type xaui nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_FAULT_RESPONSE_REMOTE_ID,
    "remote",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_FAULT_RESPONSE_rule[0],
    (sizeof(SOC_PB_NIF_FAULT_RESPONSE_rule) / sizeof(SOC_PB_NIF_FAULT_RESPONSE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.fault_response.remote:\n\r"
    "  Defines the response to remote fault indication. Default: Stop sending data,\n\r"
    "  send Idles\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_FAULT_RESPONSE_LOCAL_ID,
    "local",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_FAULT_RESPONSE_rule[0],
    (sizeof(SOC_PB_NIF_FAULT_RESPONSE_rule) / sizeof(SOC_PB_NIF_FAULT_RESPONSE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.fault_response.local:\n\r"
    "  Defines the response to local fault indication. Default: Stop sending data,\n\r"
    "  send Remote Fault Indication\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_CH_CONF_IS_BURST_INTERLEAVING_ID,
    "is_burst_interleaving",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ch_conf.is_burst_interleaving:\n\r"
    "  If TRUE, the channelized interface will function in burst interleaving\n\r"
    "  mode.Otherwise - in full packet mode. Note: if TRUE, the bct_size must be set\n\r"
    "  to '2'\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_CH_CONF_BCT_CHANNEL_BYTE_NDX_ID,
    "bct_channel_byte_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ch_conf.bct_channel_byte_ndx:\n\r"
    "  Index of the byte containing the CH (Channel) field inside the first column\n\r"
    "  of the preamble. Possible values are 0 (if no SOP in preamble), 1, 2, 3Range:\n\r"
    "  0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_CH_CONF_BCT_SIZE_ID,
    "bct_size",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ch_conf.bct_size:\n\r"
    "  Burst Control Tag Size.Range: 0 - 2.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_CH_CONF_ENABLE_ID,
    "ch_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ch_conf.enable:\n\r"
    "  If TRUE, Burst Control is enabled.Applicable for SPAUI interfaces only.Other\n\r"
    "  fields are only applicable for get/set operations if enable = TRUE\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_CRC_MODE_ID,
    "crc_mode",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_CRC_MODE_rule[0],
    (sizeof(SOC_PB_NIF_CRC_MODE_rule) / sizeof(SOC_PB_NIF_CRC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.crc_mode:\n\r"
    "  24/32 Byte CRC mode configuration.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_IPG_DIC_MODE_ID,
    "dic_mode",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_IPG_DIC_MODE_rule[0],
    (sizeof(SOC_PB_NIF_IPG_DIC_MODE_rule) / sizeof(SOC_PB_NIF_IPG_DIC_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ipg.dic_mode:\n\r"
    "  Deficit Idle Count mode - average or minimal.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_IPG_SIZE_ID,
    "ipg_size",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ipg.size:\n\r"
    "  Inter Packet Gap size in bytes.Range: 1 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_IPG_ENABLE_ID,
    "ipg_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ipg.enable:\n\r"
    "  If TRUE, Inter Packet Gap Compression is enabled.Applicable for SPAUI\n\r"
    "  interfaces only.Other fields are only applicable for get/set operations if\n\r"
    "  enable = TRUE\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_PREAMBLE_SKIP_SOP_ID,
    "skip_SOP",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.preamble.skip_SOP:\n\r"
    "  If set, /S/ character will not be inserted at the beginning of a packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_PREAMBLE_SIZE_ID,
    "preamble_size",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_PREAMBLE_SIZE_rule[0],
    (sizeof(SOC_PB_NIF_PREAMBLE_SIZE_rule) / sizeof(SOC_PB_NIF_PREAMBLE_SIZE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.preamble.size:\n\r"
    "  Preamble size\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_PREAMBLE_ENABLE_ID,
    "preamble_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.preamble.enable:\n\r"
    "  If TRUE, Preamble Compression is enabled.Applicable for SPAUI interfaces\n\r"
    "  only.Other fields are only applicable for get/set operations if enable = TRUE\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_IS_DOUBLE_SIZE_SOP_EVEN_ONLY_ID,
    "is_double_size_sop_even_only",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_double_size_sop_even_only:\n\r"
    "  Relevant only if link_partner_double_size_bus is set, ignored otherwise. If\n\r"
    "  TRUE - the SOP will be only in even position. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_IS_DOUBLE_SIZE_SOP_ODD_ONLY_ID,
    "is_double_size_sop_odd_only",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_double_size_sop_odd_only:\n\r"
    "  Relevant only if link_partner_double_size_bus is set, ignored otherwise. If\n\r"
    "  TRUE - the SOP will be only in odd position. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_LINK_PARTNER_DOUBLE_SIZE_BUS_ID,
    "link_partner_double_size_bus",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.link_partner_double_size_bus:\n\r"
    "  If TRUE - the link partner's bus size is 64 bits length.If FALSE - the link\n\r"
    "  partner's bus size is 32 bits length. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_INFO_ENABLE_ID,
    "spaui_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\n\r"
    "  Enable/disable the interface in specified direction. Note: to define a\n\r"
    "  XAUI/SPAUI NIF-port as half-duplex, enable it only in the required direction. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_set nif_ndx 0 direction_ndx 0 remote 0 local 0\n\r"
    "  is_burst_interleaving 0 bct_channel_byte_ndx 0 bct_size 0 enable 0 crc_mode 0\n\r"
    "  dic_mode 0 size 0 enable 0 skip_SOP 0 size 0 enable 0\n\r"
    "  is_double_size_sop_even_only 0 is_double_size_sop_odd_only 0\n\r"
    "  link_partner_double_size_bus 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_SET_SPAUI_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_ID,
    "spaui_conf_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SPAUI configuration -\n\r"
    "  configure SPAUI extensions for XAUI interface. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. SPAUI Range: 1000 - 1007. (SOC_PB_NIF_ID(XAUI, 0-7)). RSPAUI\n\r"
    "  Range: 2000 - 2015. (SOC_PB_NIF_ID(RXAUI, 0-15))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif spaui_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SPAUI_CONF_GET_SPAUI_CONF_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID,
    "gmii_conf_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SGMII/1000BASE-X interface configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. SGMII Range: 3000 - 3031. (SOC_PB_NIF_ID(SGMII, 0-31)). QSGMII\n\r"
    "  Range: 4000 - 4063. (SOC_PB_NIF_ID(QSGMII, 0-63))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_INFO_RATE_ID,
    "rate",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_GMII_RATE_rule[0],
    (sizeof(SOC_PB_NIF_GMII_RATE_rule) / sizeof(SOC_PB_NIF_GMII_RATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.rate:\n\r"
    "  SGMII link-rate - explicit, or auto-negotiation\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_INFO_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_1GE_MODE_rule[0],
    (sizeof(SOC_PB_NIF_1GE_MODE_rule) / sizeof(SOC_PB_NIF_1GE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mode:\n\r"
    "  1000BASE-X or SGMII. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_INFO_ENABLE_TX_ID,
    "enable_tx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable_tx:\n\r"
    "  If TRUE, the appropriate SGMII interface is enabled in the TX direction. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_INFO_ENABLE_RX_ID,
    "enable_rx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable_rx:\n\r"
    "  If TRUE, the appropriate SGMII interface is enabled in the RX direction. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_set type sgmii nif_ndx 0 rate 0 mode 0 enable_tx 0 enable_rx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_SET_GMII_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_ID,
    "gmii_conf_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SGMII/1000BASE-X interface configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. SGMII Range: 3000 - 3031. (SOC_PB_NIF_ID(SGMII, 0-31)). QSGMII\n\r"
    "  Range: 4000 - 4063. (SOC_PB_NIF_ID(QSGMII, 0-63))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_conf_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_CONF_GET_GMII_CONF_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_ID,
    "gmii_status_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets SGMII/1000BASE-X interface diagnostics status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. Range: 3000 - 3031. (SOC_PB_NIF_ID(SGMII, 0-31))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_STATUS_GET_GMII_STATUS_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_ID,
    "gmii_rate_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SGMII interface link-rate. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_set type xaui nif_ndx 0 rate 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_set type xaui nif_ndx 0 rate 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. Range: 3000 - 3031. (SOC_PB_NIF_ID(SGMII, 0-31))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_set type xaui nif_ndx 0 rate 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_RATE_ID,
    "rate",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_GMII_RATE_rule[0],
    (sizeof(SOC_PB_NIF_GMII_RATE_rule) / sizeof(SOC_PB_NIF_GMII_RATE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  rate:\n\r"
    "  SGMII rate (10/100/1000 Mbps).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_set type xaui nif_ndx 0 rate 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_SET_GMII_RATE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_ID,
    "gmii_rate_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets SGMII interface link-rate. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Interface index. Range: 3000 - 3031. (SOC_PB_NIF_ID(SGMII, 0-31))\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif gmii_rate_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_GMII_RATE_GET_GMII_RATE_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_ID,
    "ilkn_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configer the Interlaken interface\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_ILKN_NDX_ID,
    "ilkn_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_ILKN_ID_rule[0],
    (sizeof(SOC_PB_NIF_ILKN_ID_rule) / sizeof(SOC_PB_NIF_ILKN_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ilkn_ndx:\n\r"
    "  Interlaken Index. Range: 5000 - 5001. (ILKN-A/ILKN-B). Can also use\n\r"
    "  SOC_PB_NIF_ID(ILKN, 0 - 1).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_INFO_METAFRAME_SYNC_PERIOD_ID,
    "metaframe_sync_period",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.metaframe_sync_period:\n\r"
    "  The maximal interval, in words, between meta-frame sync words (see section\n\r"
    "  5.4.3 of Interlaken spec 1.1). Units: words (66-bit blocks). Default: 4K.\n\r"
    "  Range: 64 - 16K. Note: The actual configured value will be rounded down to\n\r"
    "  the nearest multiply of the number of ILKN lanes.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_INFO_IS_BURST_INTERLEAVING_ID,
    "is_burst_interleaving",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_burst_interleaving:\n\r"
    "  If TRUE, the channelized interface functions in burst interleaving mode.\n\r"
    "  Otherwise - in full packet mode. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_INFO_INVALID_LANE_ID_ID,
    "invalid_lane_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.invalid_lane_id:\n\r"
    "  If is_invalid_lane is TRUE, identifies the invalid lane. Ignored otherwise.\n\r"
    "  For ILKN-A; Range: 0 - 23.For ILKN-B; Range: 0 - 11\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_INFO_IS_INVALID_LANE_ID,
    "is_invalid_lane",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_invalid_lane:\n\r"
    "  If TRUE, one of the ILKN lanes is declared invalid, and is disabled.\n\r"
    "  Cannot be used for ILKN-A with 8 lanes or ILKN-B with 4 lanes.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_SET_ILKN_SET_INFO_NOF_LANES_ID,
    "nof_lanes",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.nof_lanes:\n\r"
    "  Number of lanes in the Interlaken interface.For ILKN-A; Range: 8 - 24.For\n\r"
    "  ILKN-B; Range: 4 - 12\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_set ilkn_ndx 5000 direction_ndx 0 metaframe_sync_period 0\n\r"
    "  is_burst_interleaving 0 invalid_lane_id 0 is_invalid_lane 0 nof_lanes 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_SET_ILKN_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_GET_ILKN_GET_ID,
    "ilkn_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configer the Interlaken interface\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_get ilkn_ndx 5000 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_GET_ILKN_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_GET_ILKN_GET_ILKN_NDX_ID,
    "ilkn_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_ILKN_ID_rule[0],
    (sizeof(SOC_PB_NIF_ILKN_ID_rule) / sizeof(SOC_PB_NIF_ILKN_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ilkn_ndx:\n\r"
    "  Interlaken Index. Range: 5000 - 5001. (ILKN-A/ILKN-B). Can also use\n\r"
    "  SOC_PB_NIF_ID(ILKN, 0 - 1).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_get ilkn_ndx 5000 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_GET_ILKN_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_GET_ILKN_GET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_get ilkn_ndx 5000 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_GET_ILKN_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_DIAG_ILKN_DIAG_ID,
    "ilkn_diag",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Reads the Interlaken status from the ILKN interrupt register and from other\n\r"
    "  status registers. Clears the interrupts only if requested. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_diag ilkn_ndx 5000 clear_interrupts 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_DIAG_ILKN_DIAG_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_DIAG_ILKN_DIAG_ILKN_NDX_ID,
    "ilkn_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_ILKN_ID_rule[0],
    (sizeof(SOC_PB_NIF_ILKN_ID_rule) / sizeof(SOC_PB_NIF_ILKN_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ilkn_ndx:\n\r"
    "  Interlaken Index. Range: 5000 - 5001. (ILKN-A/ILKN-B). Can also use\n\r"
    "  SOC_PB_NIF_ID(ILKN, 0 - 1).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_diag ilkn_ndx 5000 clear_interrupts 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_DIAG_ILKN_DIAG_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ILKN_DIAG_ILKN_DIAG_CLEAR_INTERRUPTS_ID,
    "clear_interrupts",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clear_interrupts:\n\r"
    "  If TRUE, the interrupts are cleared after reading	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ilkn_diag ilkn_ndx 5000 clear_interrupts 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ILKN_DIAG_ILKN_DIAG_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_ID,
    "lnk_activity_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Indicates whether the interface is configured and powered up\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif stat_activity_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif stat_activity_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF Port index. Range: SOC_PB_NIF_ID(NIF-Type, 0 - 63).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif stat_activity_get type xaui  nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_STAT_ACTIVITY_GET_STAT_ACTIVITY_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_STAT_ACTIVITY_ALL_GET_STAT_ACTIVITY_ALL_GET_ID,
    "stat_activity_all_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Indicates whether the interface is powered up. All interfaces are read at\n\r"
    "  once.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif stat_activity_all_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_STAT_ACTIVITY_ALL_GET_STAT_ACTIVITY_ALL_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_ID,
    "link_status_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets link status, and whether there was change in the status. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif link_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif link_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  Network interface index. Range: 0 - 31. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif link_status_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_LINK_STATUS_GET_LINK_STATUS_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID,
    "synce_clk_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_CLK_NDX_ID,
    "clk_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_SYNCE_CLK_ID_rule[0],
    (sizeof(SOC_PB_NIF_SYNCE_CLK_ID_rule) / sizeof(SOC_PB_NIF_SYNCE_CLK_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  SOC_PB_NIF_SYNCE_CLK_ID	clk_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_CLK_SQUELCH_ENABLE_ID,
    "squelch_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk.squelch_enable:\n\r"
    "  If TRUE, automatic squelch function is enabled for the recovered clock. This\n\r"
    "  function powers down the clock output whenever the link is not synced, i.e.\n\r"
    "  the clock is invalid (even if the VALID indication is not present on the pin).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_CLK_CLK_DIVIDER_ID,
    "clk_divider",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_SYNCE_CLK_DIV_rule[0],
    (sizeof(SOC_PB_NIF_SYNCE_CLK_DIV_rule) / sizeof(SOC_PB_NIF_SYNCE_CLK_DIV_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk.clk_divider:\n\r"
    "  Clock Divider for the selected recovered clock. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_CLK_NIF_ID_ID,
    "nif_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk.nif_id:\n\r"
    "  The source NIF port for the recovered clock output of the MALG. Range:\n\r"
    "  NIF_ID(NIF_TYPE, 0 - 63). Note: the actual source is a single SerDes lane in\n\r"
    "  the specified NIF port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_CLK_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk.enable:\n\r"
    "  If TRUE, the selected Recovered Clock is active.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_set clk_ndx 0 squelch_enable 0 clk_divider 0 nif_id 0\n\r"
    "  enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_SET_SYNCE_CLK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_GET_SYNCE_CLK_GET_ID,
    "synce_clk_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_get clk_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_GET_SYNCE_CLK_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_CLK_GET_SYNCE_CLK_GET_CLK_NDX_ID,
    "clk_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_SYNCE_CLK_ID_rule[0],
    (sizeof(SOC_PB_NIF_SYNCE_CLK_ID_rule) / sizeof(SOC_PB_NIF_SYNCE_CLK_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  clk_ndx:\n\r"
    "  SOC_SAND_IN\n\r"
    "  SOC_PB_NIF_SYNCE_CLK_ID	clk_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_clk_get clk_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_CLK_GET_SYNCE_CLK_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_MODE_SET_SYNCE_MODE_SET_ID,
    "synce_mode_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Define the Recovered Clock signal to be transmitted on the Petra external pins\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_mode_set mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_MODE_SET_SYNCE_MODE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_MODE_SET_SYNCE_MODE_SET_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_SYNCE_MODE_rule[0],
    (sizeof(SOC_PB_NIF_SYNCE_MODE_rule) / sizeof(SOC_PB_NIF_SYNCE_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mode:\n\r"
    "  The SYNCE signal mode. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_mode_set mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_MODE_SET_SYNCE_MODE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_SYNCE_MODE_GET_SYNCE_MODE_GET_ID,
    "synce_mode_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Define the Recovered Clock signal to be transmitted on the Petra external pins\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif synce_mode_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_SYNCE_MODE_GET_SYNCE_MODE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CLK_RESET_VALUE_GET_PTP_CLK_RESET_VALUE_GET_ID,
    "ptp_clk_reset_value_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Reads the PTP clock current reset time value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_reset_value_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_RESET_VALUE_GET_PTP_CLK_RESET_VALUE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID,
    "ptp_clk_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the PTP Clock configuration for the Precision Time Protocol \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    " ptp_clk_delta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_INFO_SYNC_AUTOINC_INTERVAL_LSB_ID,
    "sync_autoinc_interval_lsb",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.sync_autoinc_interval_nanosec:\n\r"
    "  If set to '0', PTP-sync auto-increment function is disabled.Otherwise,\n\r"
    "  PTP-sync reset value is auto-incremented once every interval.Units: nanosec.\n\r"
    "  Range: 0 - 259,200*10^9.. (0[nsec] - 72[hrs]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    " ptp_clk_delta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  {
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_INFO_SYNC_AUTOINC_INTERVAL_MSB_ID,
    "sync_autoinc_interval_msb",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.sync_autoinc_interval_nanosec:\n\r"
    "  If set to '0', PTP-sync auto-increment function is disabled.Otherwise,\n\r"
    "  PTP-sync reset value is auto-incremented once every interval.Units: nanosec.\n\r"
    "  Range: 0 - 259,200*10^9.. (0[nsec] - 72[hrs]\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    "  clk_freq_khz 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_INFO_SYNC_RESET_VAL_LSB_ID, 
    "sync_reset_val_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.sync_reset_val:\n\r"
    "  The absolute time value at the next PTP-Sync pulse. This value will be used\n\r"
    "  to reset the internal PTP timer on the next PTP-Sync. Units: nanoseconds: Range: 0 -\n\r"
    "  259,200,000. (0[nsec] - 72[hrs]) \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    " ptp_clk_delta 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL
  },
  { 
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_INFO_SYNC_RESET_VAL_MSB_ID, 
    "sync_reset_val_msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.sync_reset_val:\n\r"
    "  The absolute time value at the next PTP-Sync pulse. This value will be used\n\r"
    "  to reset the internal PTP timer on the next PTP-Sync. Units: nanoseconds: Range: 0 -\n\r"
    "  259,200,000. (0[nsec] - 72[hrs]) \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    " ptp_clk_delta 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_INFO_CLK_FREQ_KHZ_ID,
    "ptp_clk_delta",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  The PTP clock increment, each PTP clock.\n\r"
    "  The resolution is 2^(-8) nanosecond. Zero value disables PTP clock. \n\r"
    "  For example, 1000[ns]*256 corresponds to a 1MHz PTP clock. \n\r"
    " Range: 0 - 524287. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_set sync_autoinc_interval_msec 0 sync_reset_val_msec 0\n\r"
    " ptp_clk_delta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_SET_PTP_CLK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CLK_GET_PTP_CLK_GET_ID,
    "ptp_clk_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set the PTP Clock configuration for the Precision Time Protocol \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_clk_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CLK_GET_PTP_CLK_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID,
    "ptp_conf_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable and configure parameters for the Precision Time Protocol \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF Port index. SOC_PB_NIF_ID(NIF-Type, 0 - 63).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PETRA_CONNECTION_DIRECTION_rule[0],
    (sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule) / sizeof(SOC_PETRA_CONNECTION_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\n\r"
    "  Defines whether the configuration refers to RX, TX or both.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_INFO_WIRE_DELAY_NS_ID,
    "wire_delay_ns",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.wire_delay_ns:\n\r"
    "  Wire Delay to add.Units: Nanoseconds. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\n\r"
    "  Enable/disable Precision Time Protocol\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_set type xaui nif_ndx 0 direction_ndx 0 wire_delay_ns 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_SET_PTP_CONF_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_ID,
    "ptp_conf_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable and configure parameters for the Precision Time Protocol \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF Port index. SOC_PB_NIF_ID(NIF-Type, 0 - 63).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif ptp_conf_get type xaui nif_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_PTP_CONF_GET_PTP_CONF_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ELK_SET_ELK_SET_ID,
    "elk_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif elk_set mal_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ELK_SET_ELK_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ELK_SET_ELK_SET_INFO_MAL_ID_ID,
    "mal_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mal_id:\n\r"
    "  If enabled, the MAL consumed by the ELK interface. The appropriate MAL cannot\n\r"
    "  be used for NIF configuration. Range: 0, 12, 14\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif elk_set mal_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ELK_SET_ELK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ELK_SET_ELK_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\n\r"
    "  If TRUE, the External Lookup Interface (ELK) is enabled\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif elk_set mal_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ELK_SET_ELK_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ELK_GET_ELK_GET_ID,
    "elk_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif elk_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ELK_GET_ELK_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_ID,
    "fatp_mode_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Fat-pipe configuration mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_mode_set is_bypass_enable 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_INFO_IS_BYPASS_ENABLE_ID,
    "is_bypass_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_bypass_enable:\n\r"
    "  If TRUE, Enables a mode where some packets can bypass the resequencing\n\r"
    "  process. If set, then the sequence number range is only 15b [14:0] instead of\n\r"
    "  16b, and bit 15, if set, indicates that the packet should bypass the\n\r"
    "  resequencing process\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_mode_set is_bypass_enable 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_INFO_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_FATP_MODE_rule[0],
    (sizeof(SOC_PB_NIF_FATP_MODE_rule) / sizeof(SOC_PB_NIF_FATP_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mode:\n\r"
    "  One of the following modes: disabled, 1x12, 2x6, 3x4\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_mode_set is_bypass_enable 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_MODE_SET_FATP_MODE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_MODE_GET_FATP_MODE_GET_ID,
    "fatp_mode_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Fat-pipe configuration mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_mode_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_MODE_GET_FATP_MODE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_SET_FATP_SET_ID,
    "fatp_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Fat-pipe configuration mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_set fatp_ndx 0 nof_ports 0 base_port_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_SET_FATP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_SET_FATP_SET_FATP_NDX_ID,
    "fatp_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_FATP_ID_rule[0],
    (sizeof(SOC_PB_NIF_FATP_ID_rule) / sizeof(SOC_PB_NIF_FATP_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fatp_ndx:\n\r"
    "  Fat-pipe index. According to the NIF_FATP_MODE: For 3x4: Range: 1 - 3.For\n\r"
    "  2x6: Range: 1 - 2.For 1x12: Range: 1 - 1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_set fatp_ndx 0 nof_ports 0 base_port_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_SET_FATP_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_SET_FATP_SET_INFO_NOF_PORTS_ID,
    "nof_ports",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.nof_ports:\n\r"
    "  If the Fat-pipe is enabled, the number of Fat-pipe consecutive OFP ports, and\n\r"
    "  accordingly Network Interfaces, that comprise the Fat-pipe.According to the\n\r"
    "  NIF_FATP_MODE: For 3x4: Range: 1 - 4.For 2x6: Range: 1 - 6.For 1x12: Range: 1\n\r"
    "  - 12.If the Fat-pipe is disabled, this field is ignored.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_set fatp_ndx 0 nof_ports 0 base_port_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_SET_FATP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_SET_FATP_SET_INFO_BASE_PORT_ID_ID,
    "base_port_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.base_port_id:\n\r"
    "  If the Fat-pipe is enabled, the FAP Port index of the base port of the\n\r"
    "  Fat-pipe. Range: 1 - 12. If the Fat-pipe is disabled, this field is ignored.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_set fatp_ndx 0 nof_ports 0 base_port_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_SET_FATP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_SET_FATP_SET_INFO_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.enable:\n\r"
    "  If TRUE, the Fat-pipe interface is enabled. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_set fatp_ndx 0 nof_ports 0 base_port_id 0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_SET_FATP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_GET_FATP_GET_ID,
    "fatp_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Sets Fat-pipe configuration mode\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_get fatp_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_GET_FATP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_FATP_GET_FATP_GET_FATP_NDX_ID,
    "fatp_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_FATP_ID_rule[0],
    (sizeof(SOC_PB_NIF_FATP_ID_rule) / sizeof(SOC_PB_NIF_FATP_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fatp_ndx:\n\r"
    "  Fat-pipe index. According to the NIF_FATP_MODE: For 3x4: Range: 1 - 3.For\n\r"
    "  2x6: Range: 1 - 2.For 1x12: Range: 1 - 1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif fatp_get fatp_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_FATP_GET_FATP_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_COUNTER_GET_COUNTER_GET_ID,
    "counter_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets Value of statistics counter of the NIF.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif counter_get type xaui nif_ndx 0 counter_type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_COUNTER_GET_COUNTER_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_COUNTER_GET_COUNTER_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif counter_get type xaui nif_ndx 0 counter_type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_COUNTER_GET_COUNTER_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_COUNTER_GET_COUNTER_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF Port index. Range: SOC_PB_NIF_ID(NIF-Type, 0 - 63).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif counter_get type xaui nif_ndx 0 counter_type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_COUNTER_GET_COUNTER_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_COUNTER_GET_COUNTER_GET_COUNTER_TYPE_ID,
    "counter_type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_COUNTER_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_COUNTER_TYPE_rule) / sizeof(SOC_PB_NIF_COUNTER_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  counter_type:\n\r"
    "  Counter Type.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif single_nif_counters_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_COUNTER_GET_COUNTER_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_ID,
    "single_nif_counters_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets Value of statistics counter of the NIF.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif single_nif_counters_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.type:\n\r"
    "  The interface type. Can be XAUI/RXAUI/SGMII/QSGMII \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif single_nif_counters_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  nif_ndx:\n\r"
    "  NIF Port index. Range: SOC_PB_NIF_ID(NIF-Type, 0 - 63).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif single_nif_counters_get type xaui nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ALL_COUNTERS_GET_ALL_COUNTERS_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_NIF_ALL_NIFS_ALL_COUNTERS_GET_ALL_NIFS_ALL_COUNTERS_GET_ID,
    "all_counters_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Gets Statistics Counters for all the NIFs in the device.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api nif all_counters_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_NIF_ALL_NIFS_ALL_COUNTERS_GET_ALL_NIFS_ALL_COUNTERS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_API_NIF_ID,
    "nif",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    BIT_UI_16_RNG(FUN_PB_API_NIF_FIRST_ID,FUN_PB_API_NIF_LAST_ID),
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } nif*/
#ifdef UI_EGR_QUEUING/* { egr_queuing*/
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID, 
    "q_prio_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Sets egress queue priority per traffic class and drop precedence.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_MAP_TYPE_NDX_ID, 
    "map_type_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_type_ndx:\n\r"
    "  mapping type, defining what traffic type (unicast/multicast)\n\r"
    "  is mapped to what egress queue type (scheduled/unscheduled).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_TC_NDX_ID, 
    "tc_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tc_ndx:\n\r"
    "  Traffic Class, as embedded in the packet header. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_DP_NDX_ID, 
    "dp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dp_ndx:\n\r"
    "  Drop Precedence, as embedded in the packet header. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_MAP_PROFILE_NDX_ID, 
    "map_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_profile_ndx:\n\r"
    "  Mapping profile index. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    6, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_PRIORITY_DP_ID, 
    "dp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  priority.dp:\n\r"
    "  Egress Drop precedence (drop priority). Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_PRIORITY_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  priority.tc:\n\r"
    "  Egress Traffic Class. In general, Range: 0 - 1. (Equivalent to High/Low). The\n\r"
    "  range can be higher according to the extended queuing OFP-group configuration\n\r"
    "  (Possible global maximum: 1, 3, 5 and 7).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_set map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0 dp 0 tc 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_SET_EGR_Q_PRIO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID, 
    "q_prio_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Sets egress queue priority per traffic class and drop precedence.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_MAP_TYPE_NDX_ID, 
    "map_type_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_type_ndx:\n\r"
    "  mapping type, defining what traffic type (unicast/multicast)\n\r"
    "  is mapped to what egress queue type (scheduled/unscheduled).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_TC_NDX_ID, 
    "tc_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tc_ndx:\n\r"
    "  Traffic Class, as embedded in the packet header. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_DP_NDX_ID, 
    "dp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dp_ndx:\n\r"
    "  Drop Precedence, as embedded in the packet header. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_MAP_PROFILE_NDX_ID, 
    "map_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_profile_ndx:\n\r"
    "  Mapping profile index. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_prio_get map_type_ndx 0 tc_ndx 0 dp_ndx 0\n\r"
    "  map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PRIO_GET_EGR_Q_PRIO_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_ID, 
    "q_profile_map_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_profile_map_set ofp_ndx 0 map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_OFP_NDX_ID, 
    "ofp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ofp_ndx:\n\r"
    "  Outgoing Fap Port index. Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_profile_map_set ofp_ndx 0 map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_MAP_PROFILE_NDX_ID, 
    "map_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  map_profile_ndx:\n\r"
    "  Egress queue priority profile index. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_profile_map_set ofp_ndx 0 map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PROFILE_MAP_SET_EGR_Q_PROFILE_MAP_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PROFILE_MAP_GET_EGR_Q_PROFILE_MAP_GET_ID, 
    "q_profile_map_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_profile_map_get ofp_ndx 0 map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PROFILE_MAP_GET_EGR_Q_PROFILE_MAP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_Q_PROFILE_MAP_GET_EGR_Q_PROFILE_MAP_GET_OFP_NDX_ID, 
    "ofp_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ofp_ndx:\n\r"
    "  Outgoing Fap Port index. Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_queuing q_profile_map_get ofp_ndx 0 map_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_Q_PROFILE_MAP_GET_EGR_Q_PROFILE_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_API_EGR_Q_CAL_GET_AND_PRINT_ID, 
    "cal_get_and_print", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  This function read the calender values and prints them out",
    "", 
    "",
    BIT_UI_16(FUN_PB_API_EGR_Q_CAL_GET_AND_PRINT_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_EGR_Q_CAL_SET_ID, 
    "cal_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  This function read the calender values and prints them out",
    "", 
    "",
    BIT_UI_16(FUN_PB_API_EGR_Q_CAL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },    
  { 
    PARAM_PB_API_EGR_QUEUING_ID, 
    "egr_queuing", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_EGR_QUEUING_FIRST_ID,FUN_PB_API_EGR_QUEUING_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  

#endif /* } egr_queuing*/
#ifdef UI_PORTS/* { ports*/
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID,
    "pp_port_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configure the Port profile for ports of type TM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 fc_type 0\n\r"
    "  is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_PP_PORT_NDX_ID,
    "pp_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pp_port_ndx:\n\r"
    "  TM Port Profile Index. Range: 0 - 31.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
    {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_PROFILE_FOR_RAW_ID,
      "header_type",
      (PARAM_VAL_RULES *)&SOC_PB_PETRA_PORT_HEADER_TYPE_rule[0], 
      (sizeof(SOC_PB_PETRA_PORT_HEADER_TYPE_rule) / sizeof(SOC_PB_PETRA_PORT_HEADER_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_SNOOP_ENABLED_ID,
      "is_snoop_enabled",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_ING_SHAPING_ENABLED_ID,
      "is_tm_ing_shaping_enabled",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_TM_PPH_PRESENT_ENABLED_ID,
      "is_tm_pph_present_enabled",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_TM_SRC_SYST_PORT_EXT_PRESENT_ID,
      "is_tm_src_syst_port_ext_present",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
    {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_MIRROR_PROFILE_ID,
      "mirror_profile",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_profile_for_raw:\n\r"
    "  If True, then only Raw ports points to this PP-Port. In this case,\n\r"
    "  the precedent parameters are not significant. Otherwise, only TM Ports points\n\r"
    "  to this PP-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 is_profile_for_raw 0\n\r"
    "  fc_type 0 is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
    {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_FC_TYPE_ID,
    "fc_type",
    (PARAM_VAL_RULES *)&SOC_PB_PORTS_FC_TYPE_rule[0],
    (sizeof(SOC_PB_PORTS_FC_TYPE_rule) / sizeof(SOC_PB_PORTS_FC_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.fc_type:\n\r"
    "  If True, then Packets coming from this TM Port have a Statistic Tag header\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 fc_type 0\n\r"
    "  is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_FAT_PIPE_ENABLED_ID,
    "first_header_size",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_fat_pipe_enabled:\n\r"
    "  If True, then Packets coming from this TM Port have a Sequence Number header\n\r"
    "  used in the Fat Pipe process\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 fc_type 0\n\r"
    "  is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_INFO_IS_STAG_ENABLED_ID,
    "is_stag_enabled",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.is_stag_enabled:\n\r"
    "  If True, then Packets coming from this TM Port have a Statistic Tag header\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_add pp_port_ndx 0 fc_type 0\n\r"
    "  is_counter_meter_enabled 0 is_fat_pipe_enabled 0 is_stag_enabled 0\n\r"
    "  is_tm_ing_shaping_enabled 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_ADD_PORT_TM_PROFILE_ADD_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_GET_PORT_TM_PROFILE_GET_ID,
    "pp_port_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Get the Port profile settings.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_get pp_port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_GET_PORT_TM_PROFILE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TM_PROFILE_GET_PORT_TM_PROFILE_GET_PP_PORT_NDX_ID,
    "pp_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pp_port_ndx:\n\r"
    "  TM Port Profile Index. Range: 0 - 31.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_pp_port_get pp_port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TM_PROFILE_GET_PORT_TM_PROFILE_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_ID,
    "tm_to_pp_port_map_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map the Port to its Port profile for ports of type TM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_to_pp_port_map_set port_ndx 0 profile_id 0 is_valid 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_PORT_NDX_ID,
    "tm_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\n\r"
    "  TM Port Index. Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_to_pp_port_map_set port_ndx 0 profile_id 0 is_valid 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
    {
    PARAM_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_DIRECTION_NDX_ID,
    "direction_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_PORT_DIRECTION_rule[0],
    (sizeof(SOC_PB_PORT_DIRECTION_rule) / sizeof(SOC_PB_PORT_DIRECTION_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  direction_ndx:\r\n"
    "  The direction of the mapped port (incoming/outgoing/both).\r\n"
    "",
#ifdef UI_PETRA_API_ADD_EXAMPLE
    "Examples:\r\n"
    "  soc_petra_api ports port_to_interface_map_set port_ndx 0 direction_ndx 0\r\n"
    "  channel_id 0 if_id 0\r\n"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_INFO_PROFILE_ID_ID,
    "pp_port",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.profile_id:\n\r"
    "  TM Port Profile to which the TM Port is mapped. Valid only if the 'is_valid'\n\r"
    "  parameter is set to True.Range: 0 - 31.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_to_pp_port_map_set port_ndx 0 profile_id 0 is_valid 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_SET_PORT_TO_PP_PORT_MAP_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TO_PP_PORT_MAP_GET_PORT_TO_PP_PORT_MAP_GET_ID,
    "tm_to_pp_port_map_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map the Port to its Port profile for ports of type TM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_to_pp_port_map_get port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_GET_PORT_TO_PP_PORT_MAP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_TO_PP_PORT_MAP_GET_PORT_TO_PP_PORT_MAP_GET_PORT_NDX_ID,
    "tm_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  port_ndx:\n\r"
    "  TM Port Index. Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_to_pp_port_map_get port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_TO_PP_PORT_MAP_GET_PORT_TO_PP_PORT_MAP_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID,
    "forwarding_header_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_PP_PORT_NDX_ID,
    "pp_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pp_port_ndx:\n\r"
    "  TM Port Profile Index. Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_COUNTER_ID_ID,
    "counter_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.counter.id:\n\r"
    "  Counter instance index.Range: 0 - 8K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_COUNTER_PROCESSOR_ID_ID,
    "counter_processor_id",
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0],
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.counter.processor_id:\n\r"
    "  Counter Processor the instance 'id' is attached to.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_SNOOP_CMD_NDX_ID,
    "snoop_cmd_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.snoop_cmd_ndx:\n\r"
    "  Snoop command index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_DP_ID,
    "dp",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.dp:\n\r"
    "  Drop Precedence. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_TR_CLS_ID,
    "tr_cls",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.tr_cls:\n\r"
    "  Traffic Class. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_DESTINATION_ID,
    "destination_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination:\n\r"
    "  This field indicates the forwarding action destination data (Next address to\n\r"
    "  be sent to - system wise). It can be system-port-id, unicast-flow-id, or\n\r"
    "  multicast-id.Queue id. Range: 0 - 32K-1Multicast id. Range: 0 - 16K-1System\n\r"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_INFO_DESTINATION_ID_TYPE,
    "destination_type",
    (PARAM_VAL_RULES *)&SOC_PB_DEST_TYPE_rule[0],
    (sizeof(SOC_PB_DEST_TYPE_rule) / sizeof(SOC_PB_DEST_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.destination:\n\r"
    "  This field indicates the forwarding action destination data (Next address to\n\r"
    "  be sent to - system wise). It can be system-port-id, unicast-flow-id, or\n\r"
    "  multicast-id.Queue id. Range: 0 - 32K-1Multicast id. Range: 0 - 16K-1System\n\r"
    "  Physical Port. Range: 0 - 4K-1LAG id. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_set pp_port_ndx 0 id 0\n\r"
    "  processor_id 0 is_enabled 0 snoop_cmd_ndx 0 dp 0 tr_cls 0 destination 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_SET_PORT_FORWARDING_HEADER_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_GET_PORT_FORWARDING_HEADER_GET_ID,
    "forwarding_header_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_get pp_port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_GET_PORT_FORWARDING_HEADER_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PORT_FORWARDING_HEADER_GET_PORT_FORWARDING_HEADER_GET_PP_PORT_NDX_ID,
    "pp_port_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pp_port_ndx:\n\r"
    "  TM Port Profile Index. Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api ports port_forwarding_header_get pp_port_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PORT_FORWARDING_HEADER_GET_PORT_FORWARDING_HEADER_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_API_PORTS_ID,
    "ports",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    BIT_UI_16_RNG(FUN_PB_API_PORTS_FIRST_ID,FUN_PB_API_PORTS_LAST_ID),
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } ports*/
#ifdef UI_PMF_LOW_LEVEL_DIAG/* { pmf_low_level_diag*/
  {
    PARAM_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_ID,
    "force_prog_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Force PMF to execute the given program.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_prog_set prog_id 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_PROG_ID_ID,
    "prog_id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  prog_id:\n\r"
    "  Program ID to enforce. Relevant only when enable=TRUE. Range: 0 - 31.\n\r"
    "  (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_prog_set prog_id 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\n\r"
    "  Program force enabled.If TRUE, then the PMF will execute program-id ==\n\r"
    "  prog_id. If FALSE, then the PMF will execute the program selected according\n\r"
    "  to 'program-selection'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_prog_set prog_id 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_PROG_SET_PMF_DIAG_FORCE_PROG_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_PROG_GET_PMF_DIAG_FORCE_PROG_GET_ID,
    "force_prog_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Force PMF to execute the given program.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_prog_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_PROG_GET_PMF_DIAG_FORCE_PROG_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_SELECTED_PROGS_GET_PMF_DIAG_SELECTED_PROGS_GET_ID,
    "selected_progs_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Returns used programs for all packets since last call.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_selected_progs_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_SELECTED_PROGS_GET_PMF_DIAG_SELECTED_PROGS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID,
    "force_action_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Force PMF to perform the given action.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ACTION_INFO_STRENGTH_ID,
    "strength",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  action_info.strength:\n\r"
    "  Forwarding strength relevant when action type is one of the following:-\n\r"
    "  SOC_PB_PMF_DIAG_FORCE_DEST- SOC_PB_PMF_DIAG_FORCE_DP- SOC_PB_PMF_DIAG_FORCE_TC-\n\r"
    "  SOC_PB_PMF_DIAG_FORCE_FWD- SOC_PB_PMF_DIAG_FORCE_SNP\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ACTION_INFO_ACTIONS_INDEX_ID,
    "actions_index",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  actions_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ACTION_INFO_ACTIONS_IS_VALID_ID,
    "is_valid",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  action_info.actions[ prm_actions_index].is_valid:\n\r"
    "  Is valid action value\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ACTION_INFO_ACTIONS_VALUE_ID,
    "value",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  action_info.actions[ prm_actions_index].value:\n\r"
    "  Action value, according to the action type.E.g.: When the type is\n\r"
    "  Meter-update, and 'action_val' is 6, the action is attaching the packet to\n\r"
    "  meter #6.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ACTION_INFO_ACTIONS_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_PMF_DIAG_FORCE_rule[0],
    (sizeof(SOC_PB_PMF_DIAG_FORCE_rule) / sizeof(SOC_PB_PMF_DIAG_FORCE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  action_info.actions[ prm_actions_index].type:\n\r"
    "  Action type done by the entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_set strength 0 actions_index\n\r"
    "  0 is_valid 0 value 0 type 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_SET_PMF_DIAG_FORCE_ACTION_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FORCE_ACTION_GET_PMF_DIAG_FORCE_ACTION_GET_ID,
    "force_action_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Force PMF to perform the given action.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_force_action_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FORCE_ACTION_GET_PMF_DIAG_FORCE_ACTION_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_BUILT_KEYS_GET_PMF_DIAG_BUILT_KEYS_GET_ID,
    "built_keys_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Returns the keys built by the PMF for the last packet\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_built_keys_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_BUILT_KEYS_GET_PMF_DIAG_BUILT_KEYS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID,
    "fem_freeze_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set pre-configuration so freeze inputs/outputs will be snapshoot according to\n\r"
    "  this information \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_set is_prg_valid 0 prg 0\n\r"
    "  pass_num 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_FREEZE_INFO_IS_PRG_VALID_ID,
    "is_prg_valid",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  freeze_info.is_prg_valid:\n\r"
    "  FALSE then the FEM is freeze for any programs\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_set is_prg_valid 0 prg 0\n\r"
    "  pass_num 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_FREEZE_INFO_PRG_ID,
    "prg",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  freeze_info.prg:\n\r"
    "  Program to freeze FEMs no Range: 0-7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_set is_prg_valid 0 prg 0\n\r"
    "  pass_num 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_FREEZE_INFO_PASS_NUM_ID,
    "pass_num",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  freeze_info.pass_num:\n\r"
    "  Pass to freeze FEMs on. can be first/second. Range: 0 - 1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_set is_prg_valid 0 prg 0\n\r"
    "  pass_num 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_FREEZE_INFO_FREEZE_ID,
    "freeze",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  freeze_info.pass_num:\n\r"
    "  freeze FEM. Range: 0 - 1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_set is_prg_valid 0 prg 0\n\r"
    "  pass_num 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_SET_PMF_DIAG_FEM_FREEZE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEM_FREEZE_GET_PMF_DIAG_FEM_FREEZE_GET_ID,
    "fem_freeze_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Set pre-configuration so freeze inputs/outputs will be snapshoot according to\n\r"
    "  this information \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fem_freeze_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEM_FREEZE_GET_PMF_DIAG_FEM_FREEZE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_ID,
    "fems_info_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Get the FEM information including inputs and outputs to each FEM, \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fems_info_get release 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_RELEASE_ID,
    "release",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  release:\n\r"
    "  If true then FEMs are released from the previous freeze, otherwise FEMs stay\n\r"
    "  in freeze with the previous configured information.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fems_info_get release 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
    {
    PARAM_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_ONLY_VALID_ID,
    "only_valid",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  release:\n\r"
    "  If true then FEMs are released from the previous freeze, otherwise FEMs stay\n\r"
    "  in freeze with the previous configured information.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api pmf_low_level_diag pmf_diag_fems_info_get release 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DIAG_FEMS_INFO_GET_PMF_DIAG_FEMS_INFO_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_API_PMF_LOW_LEVEL_DIAG_ID,
    "pmf_low_level_diag",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    BIT_UI_16_RNG(FUN_PB_API_PMF_LOW_LEVEL_DIAG_FIRST_ID,FUN_PB_API_PMF_LOW_LEVEL_DIAG_LAST_ID),
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } pmf_low_level_diag*/
#ifdef UI_FLOW_CONTROL/* { flow_control*/
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID,
    "gen_inbnd_set_cb",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Inband Flow Control Generation Configuration, based on Petra Ingress state\n\r"
    "  indications.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control gen_inbnd_set_cb nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_CB_NIF_CLS_BITMAP_ID,
    "nif_cls_bitmap",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.nif_cls_bitmap:\n\r"
    "  8-bits bitmap. If bit 'b' is set, the NIF will generate FC on class 'b' when\n\r"
    "  lower internal NIF-FC threshold is crossed. Note: for GMII interface, only\n\r"
    "  bits 0, 1 are relevant (since only two FC-classes are supported). Note: when\n\r"
    "  higher internal NIF-FC threshold is crossed, FC is generated on all classes. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_CB_CNM_INTERCEPT_ENABLE_ID,
    "cnm_intercept_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.cnm_intercept_enable:\n\r"
    "  If TRUE, CBFC is generated based on CNM messages. The relevant NIF will\n\r"
    "  generate FC, based on the 3-LSB of the CPID. These 3-LSB are expected to\n\r"
    "  represent TCNote 1: if port-to-interface mapping for the relevant NIF is\n\r"
    "  modified, this configuration must be reset after the modification. Note 2:\n\r"
    "  refer to CNM module APIs for CNM messages handling configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_CB_GLBL_RCS_LOW_FC_CLS_ID,
    "glbl_rcs_low_fc_cls",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.glbl_rcs_low.fc_cls:\n\r"
    "  If low_enable is set, specifies the FC Class of the generated CBFC (ignored\n\r"
    "  otherwise). Note: the CBFC class inheritance configuration controls whether\n\r"
    "  lower classes are also affected\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_CB_GLBL_RCS_LOW_ENABLE_ID,
    "glbl_rcs_low_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.glbl_rcs_low.enable:\n\r"
    "  If TRUE, upon Global Resources Low Level FC, generates CBFC of the specified\n\r"
    "  FC-Class\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_CB_INHERIT_ID,
    "cb_inherit",
    (PARAM_VAL_RULES *)&SOC_PB_FC_INBND_CB_INHERIT_rule[0],
    (sizeof(SOC_PB_FC_INBND_CB_INHERIT_rule) / sizeof(SOC_PB_FC_INBND_CB_INHERIT_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.inherit:\n\r"
    "  Selects whether, and in which way, the CBFC affects lower priority classes\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_CB_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_LL_ID,
    "gen_inbnd_set_ll",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Inband Flow Control Generation Configuration, based on Petra Ingress state\n\r"
    "  indications.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control gen_inbnd_set_ll nif_ndx 0 cnm_enable 0 \n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_LL_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_LL_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_LL_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },    
  {
    PARAM_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_INFO_LL_CNM_ENABLE_ID,
    "cnm_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ll.cnm_enable:\n\r"
    "  If TRUE, LLFC is generated based on CNM messages. Note 1: if\n\r"
    "  port-to-interface mapping for the relevant NIF is modified, this\n\r"
    "  configuration must be reset after the modification. Note 2: refer to CNM\n\r"
    "  module APIs for CNM messages handling configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_set nif_ndx 0 cnm_enable 0 nif_cls_bitmap 0\n\r"
    "  cnm_intercept_enable 0 fc_cls 0 enable 0 vsq_trgr 2 inherit 0 mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_SET_FC_GEN_INBND_SET_LL_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_ID,
    "gen_inbnd_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Inband Flow Control Generation Configuration, based on Petra Ingress state\n\r"
    "  indications.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_get nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GET_FC_GEN_INBND_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GLB_HP_SET_FC_GEN_INBND_GLB_HP_SET_ID,
    "gen_inbnd_glb_hp_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable Flow Control generation, based on\n\r"
    "  Ingress Global Resources - high priority, via NIF.\n\r"
    "  Flow Control generation may be either Link Level or Class Based.\n\r"
    "  For Link Level - Flow Control will be generated on all links.\n\r"
    "  For Class Based - Flow Control will be generated on all\n\r"
    "  Flow Control Classes.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_glb_hp_set fc_mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GLB_HP_SET_FC_GEN_INBND_GLB_HP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GLB_HP_SET_FC_GEN_INBND_GLB_HP_SET_FC_MODE_ID,
    "fc_mode",
    (PARAM_VAL_RULES *)&SOC_PB_FC_INGR_GEN_GLB_HP_MODE_rule[0],
    (sizeof(SOC_PB_FC_INGR_GEN_GLB_HP_MODE_rule) / sizeof(SOC_PB_FC_INGR_GEN_GLB_HP_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fc_mode:\n\r"
    "  Flow Control mode.\n\r"
    "  If enabled, when Ingress Global Resources\n\r"
    "  high priority Flow Control is indicated.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_glb_hp_set fc_mode 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GLB_HP_SET_FC_GEN_INBND_GLB_HP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_GLB_HP_GET_FC_GEN_INBND_GLB_HP_GET_ID,
    "gen_inbnd_glb_hp_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable Flow Control generation, based on\n\r"
    "  Ingress Global Resources - high priority, via NIF.\n\r"
    "  Flow Control generation may be either Link Level or Class Based.\n\r"
    "  For Link Level - Flow Control will be generated on all links.\n\r"
    "  For Class Based - Flow Control will be generated on all\n\r"
    "  Flow Control Classes.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_glb_hp_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_GLB_HP_GET_FC_GEN_INBND_GLB_HP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_SET_FC_GEN_INBND_CNM_MAP_SET_ID,
    "gen_inbnd_cb_cnm_map_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map the 3-LSB of the CMN CPID (represent TC), to the FC indication to\n\r"
    "  generate when using Class Based Flow Control\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_set cpid_tc_ndx 0 fc_class 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_SET_FC_GEN_INBND_CB_CNM_MAP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_SET_FC_GEN_INBND_CNM_MAP_SET_CPID_TC_NDX_ID,
    "cpid_tc_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cpid_tc_ndx:\n\r"
    "  The 3-LSB of the CPID index. Expected to represent TC.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_set cpid_tc_ndx 0 fc_class 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_SET_FC_GEN_INBND_CB_CNM_MAP_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_SET_FC_GEN_INBND_CNM_MAP_SET_LL_ENABLE_ID,
    "ll_enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fc_class:\n\r"
    "  The FC Class of the generated CBFC. Note: according to the inheritance\n\r"
    "  configuration of the relevant NIF, the specified class may affect also lower\n\r"
    "  classes.Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_set cpid_tc_ndx 0 fc_class 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_SET_FC_GEN_INBND_CB_CNM_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_SET_FC_GEN_INBND_CNM_MAP_SET_FC_CLASS_ID,
    "fc_class",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fc_class:\n\r"
    "  The FC Class of the generated CBFC. Note: according to the inheritance\n\r"
    "  configuration of the relevant NIF, the specified class may affect also lower\n\r"
    "  classes.Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_set cpid_tc_ndx 0 fc_class 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_SET_FC_GEN_INBND_CB_CNM_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_GET_FC_GEN_INBND_CNM_MAP_GET_ID,
    "gen_inbnd_cb_cnm_map_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Map the 3-LSB of the CMN CPID (represent TC), to the FC indication to\n\r"
    "  generate when using Class Based Flow Control\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_get cpid_tc_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_GET_FC_GEN_INBND_CB_CNM_MAP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_INBND_CNM_MAP_GET_FC_GEN_INBND_CNM_MAP_GET_CPID_TC_NDX_ID,
    "cpid_tc_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cpid_tc_ndx:\n\r"
    "  The 3-LSB of the CPID index. Expected to represent TC.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_inbnd_cb_cnm_map_get cpid_tc_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_INBND_CB_CNM_MAP_GET_FC_GEN_INBND_CB_CNM_MAP_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID,
    "rec_inbnd_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Inband Flow Control Reception Configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_set nif_ndx 0 sch_hr_bitmap 0 inherit 0 mode\n\r"
    "  0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_INFO_CB_SCH_HR_BITMAP_ID,
    "sch_hr_bitmap",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.sch_hr_bitmap:\n\r"
    "  If bit 'b' is set, the appropriate HR in range 128-255 will stop credit\n\r"
    "  generation. For XAUI/SPAUI - 8 HRs can be set as a reaction point for 8 FC\n\r"
    "  classes, accordingly. For GMII - 2 HRs (2 FC classes)The index of the HR to\n\r"
    "  stop, for FC-Class K, is:For XAUI/SPAUI (NIF-ID = MAL-ID*4), 128 + 8*MAL-ID +\n\r"
    "  K. For GMII, 128 + 2 * NIF-ID + K\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_set nif_ndx 0 sch_hr_bitmap 0 inherit 0 mode\n\r"
    "  0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_INFO_CB_INHERIT_ID,
    "inherit",
    (PARAM_VAL_RULES *)&SOC_PB_FC_INBND_CB_INHERIT_rule[0],
    (sizeof(SOC_PB_FC_INBND_CB_INHERIT_rule) / sizeof(SOC_PB_FC_INBND_CB_INHERIT_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cb.inherit:\n\r"
    "  Selects whether, and in which way, the CBFC affects lower priority classes\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_set nif_ndx 0 sch_hr_bitmap 0 inherit 0 mode\n\r"
    "  0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_INFO_MODE_ID,
    "mode",
    (PARAM_VAL_RULES *)&SOC_PB_FC_INBND_MODE_rule[0],
    (sizeof(SOC_PB_FC_INBND_MODE_rule) / sizeof(SOC_PB_FC_INBND_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.mode:\n\r"
    "  Disabled/Link-Level/Class-Based (according to the NIF type)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_set nif_ndx 0 sch_hr_bitmap 0 inherit 0 mode\n\r"
    "  0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_SET_FC_REC_INBND_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_ID,
    "rec_inbnd_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Inband Flow Control Reception Configuration\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_get nif_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_GET_FC_REC_INBND_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID,
    "rec_inbnd_ofp_map_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Selects the OFP, priority and Reaction Point for inband FC reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_set nif_ndx 0 fc_cls_ndx 0 prio 0\n\r"
    "  ofp_ndx 0 react_point 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_FC_CLS_NDX_ID,
    "fc_cls_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fc_cls_ndx:\n\r"
    "  FC Class. Range: 0 - 7. If FC-class inheritance is enabled on the NIF, it is\n\r"
    "  sufficient to call this API for the lowest FC class for which FC reception is\n\r"
    "  enabled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_set nif_ndx 0 fc_cls_ndx 0 prio 0\n\r"
    "  ofp_ndx 0 react_point 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_INFO_PRIO_ID,
    "prio",
    (PARAM_VAL_RULES *)&SOC_PB_FC_OFP_PRIORITY_rule[0],
    (sizeof(SOC_PB_FC_OFP_PRIORITY_rule) / sizeof(SOC_PB_FC_OFP_PRIORITY_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.prio:\n\r"
    "  FC Priority: high/low\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_set nif_ndx 0 fc_cls_ndx 0 prio 0\n\r"
    "  ofp_ndx 0 react_point 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_INFO_OFP_NDX_ID,
    "ofp_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.ofp_ndx:\n\r"
    "  OFP index. Range: 0 - 79.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_set nif_ndx 0 fc_cls_ndx 0 prio 0\n\r"
    "  ofp_ndx 0 react_point 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_INFO_REACT_POINT_ID,
    "react_point",
    (PARAM_VAL_RULES *)&SOC_PB_FC_REC_OFP_RP_rule[0],
    (sizeof(SOC_PB_FC_REC_OFP_RP_rule) / sizeof(SOC_PB_FC_REC_OFP_RP_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.react_point:\n\r"
    "  Flow Control Reception Reaction Point on OFP level - Scheduler/EGQ\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_set nif_ndx 0 fc_cls_ndx 0 prio 0\n\r"
    "  ofp_ndx 0 react_point 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_SET_FC_REC_INBND_OFP_MAP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_ID,
    "rec_inbnd_ofp_map_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Selects the OFP, priority and Reaction Point for inband FC reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_get nif_ndx 0 fc_cls_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_NIF_TYPE_ID,
    "type",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_TYPE_rule[0],
    (sizeof(SOC_PB_NIF_TYPE_rule) / sizeof(SOC_PB_NIF_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_NIF_NDX_ID,
    "nif_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
#if UI_PB_API_ADD_EXAMPLE
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_FC_CLS_NDX_ID,
    "fc_cls_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  fc_cls_ndx:\n\r"
    "  FC Class. Range: 0 - 7. If FC-class inheritance is enabled on the NIF, it is\n\r"
    "  sufficient to call this API for the lowest FC class for which FC reception is\n\r"
    "  enabled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_inbnd_ofp_map_get nif_ndx 0 fc_cls_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_INBND_OFP_MAP_GET_FC_REC_INBND_OFP_MAP_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID, 
    "rcy_ofp_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the configuration for handling Flow Control generated by (and effecting)\n\r"
    "  recycling traffic. Can be triggered by crossing Virtual Statistics Queues\n\r"
    "  (CT3CC), or by crossing High or Low Global Resources threshold. Handled on\n\r"
    "  Outgoing FAP Port level - Scheduler HR or EGQ.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_TRGR_NDX_ID, 
    "trgr_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_ofp_bitmap_index[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  trgr_ndx:\n\r"
    "  FC trigger index. 1. For configuring FC based on VSQs: Category 3 Connection\n\r"
    "  Class to map.The Connection Class will usually represent Recycling Outgoing\n\r"
    "  FAP Port, which will receive Flow Control triggered by crossing the Flow\n\r"
    "  Control threshold of Category 3 Ingress Statistics Queue. Range: 0 - 31. 2.\n\r"
    "  For configuring FC based on Global Resources consumption - one of the\n\r"
    "  following: SOC_PB_FC_RCY_GLB_RCS_ID_LP, SOC_PB_FC_RCY_GLB_RCS_ID_HP	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_REACT_POINT_NDX_ID, 
    "react_point_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_FC_RCY_OFP_HANDLER_rule[0], 
    (sizeof(SOC_PB_FC_RCY_OFP_HANDLER_rule) / sizeof(SOC_PB_FC_RCY_OFP_HANDLER_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  react_point_ndx:\n\r"
    "  something	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_PRIO_NDX_ID, 
    "prio_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_FC_OFP_PRIORITY_rule[0], 
    (sizeof(SOC_PB_FC_OFP_PRIORITY_rule) / sizeof(SOC_PB_FC_OFP_PRIORITY_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prio_ndx:\n\r"
    "  something	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },   
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_INFO_OFP_BITMAP_INDEX_ID, 
    "ofp_bitmap_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ofp_bitmap_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_INFO_OFP_BITMAP_ID, 
    "ofp_bitmap", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ofp_bitmap[ prm_ofp_bitmap_index]:\n\r"
    "  Bitmap of The Outgoing Fap Ports to accept the Flow Control (up to 80 ports).\n\r"
    "  If the trigger is a VSQ, the bitmap must have only one destination FAP port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_set trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
    "  ofp_bitmap_index 0 ofp_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_SET_FC_RCY_OFP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_ID, 
    "rcy_ofp_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the configuration for handling Flow Control generated by (and effecting)\n\r"
    "  recycling traffic. Can be triggered by crossing Virtual Statistics Queues\n\r"
    "  (CT3CC), or by crossing High or Low Global Resources threshold. Handled on\n\r"
    "  Outgoing FAP Port level - Scheduler HR or EGQ.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_get trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_TRGR_NDX_ID, 
    "trgr_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  trgr_ndx:\n\r"
    "  FC trigger index. 1. For configuring FC based on VSQs: Category 3 Connection\n\r"
    "  Class to map.The Connection Class will usually represent Recycling Outgoing\n\r"
    "  FAP Port, which will receive Flow Control triggered by crossing the Flow\n\r"
    "  Control threshold of Category 3 Ingress Statistics Queue. Range: 0 - 31. 2.\n\r"
    "  For configuring FC based on Global Resources consumption - one of the\n\r"
    "  following: SOC_PB_FC_RCY_GLB_RCS_ID_LP, SOC_PB_FC_RCY_GLB_RCS_ID_HP	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_get trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_REACT_POINT_NDX_ID, 
    "react_point_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_FC_RCY_OFP_HANDLER_rule[0], 
    (sizeof(SOC_PB_FC_RCY_OFP_HANDLER_rule) / sizeof(SOC_PB_FC_RCY_OFP_HANDLER_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  react_point_ndx:\n\r"
    "  something	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_get trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_PRIO_NDX_ID, 
    "prio_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_FC_OFP_PRIORITY_rule[0], 
    (sizeof(SOC_PB_FC_OFP_PRIORITY_rule) / sizeof(SOC_PB_FC_OFP_PRIORITY_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prio_ndx:\n\r"
    "  something	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_rcy_ofp_get trgr_ndx 0 react_point_ndx 1 prio_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_OFP_GET_FC_RCY_OFP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  {
    PARAM_PB_FC_RCY_HR_ENABLE_SET_FC_RCY_HR_ENABLE_SET_ID,
    "rcy_hr_enable_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable reception of Flow Control for Recycling\n\r"
    "  ports by end to end Scheduler HR-s 192-223,\n\r"
    "  represented by Category 3 Connection Class in Ingress\n\r"
    "  Statistics Queues, when the Statistics Queues threshold is crossed. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rcy_hr_enable_set enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_HR_ENABLE_SET_FC_RCY_HR_ENABLE_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_RCY_HR_ENABLE_SET_FC_RCY_HR_ENABLE_SET_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  enable:\n\r"
    "  Enable/disable FC reception by HR 192-223 (recycling HR-s).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rcy_hr_enable_set enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_HR_ENABLE_SET_FC_RCY_HR_ENABLE_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_RCY_HR_ENABLE_GET_FC_RCY_HR_ENABLE_GET_ID,
    "rcy_hr_enable_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Enable/disable reception of Flow Control for Recycling\n\r"
    "  ports by end to end Scheduler HR-s 192-223,\n\r"
    "  represented by Category 3 Connection Class in Ingress\n\r"
    "  Statistics Queues, when the Statistics Queues threshold is crossed. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rcy_hr_enable_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_RCY_HR_ENABLE_GET_FC_RCY_HR_ENABLE_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID,
    "gen_cal_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Calendar-based interface calendar for Flow Control Generation\n\r"
    "  (OOB/ILKN-Inband TX).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_MODE_NDX_ID,
    "cal_mode_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_MODE_rule[0],
    (sizeof(SOC_PB_FC_CAL_MODE_rule) / sizeof(SOC_PB_FC_CAL_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_mode_ndx:\n\r"
    "  The interface and mode used for FC calendar-based generation: SPI-OOB,\n\r"
    "  ILKN-OOB or ILKN-Inband	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC is generated. For OOB\n\r"
    "  interface (both SPI and ILKN), only SOC_PB_FC_OOB_ID_B can be used. Additionally,\n\r"
    "  ILKN-A can be used. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_ENTRY_ID,
    "entry_id",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_NDX_rule[0],
    (sizeof(SOC_PB_FC_CAL_NDX_rule) / sizeof(SOC_PB_FC_CAL_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  calendar entry index. Can be single/range/all, up to 256 entries:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_CONF_CAL_REPS_ID,
    "cal_reps",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.cal_reps:\n\r"
    "  The number of calendar repetitions within a status frame. The actual Calendar\n\r"
    "  is composed of adjacent sections of 'cal_len' length.'cal_len' * 'cal_reps'\n\r"
    "  must not exceed the total calendar length (512/256).Range: 1 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_CONF_CAL_LEN_ID,
    "cal_len",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.cal_len:\n\r"
    "  Number of channels in calendar.SPI Range: 0 - 511. ILKN Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.enable:\n\r"
    "  Enable/Disable the Calendar-based interface for FC generation (TX) or\n\r"
    "  reception (RX). Can be enabled as SPI-OOB, ILKN-OOB or ILKN-Inbnd.OOB-TX\n\r"
    "  enable is only valid for OOB interface B.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_BUFF_ID_ID,
    "id",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_buff.id:\n\r"
    "  The index of the entity (STE/NIF/global source high/low priority), according\n\r"
    "  to the source specified), to trigger the appropriate OOB calendar entry for\n\r"
    "  FC.The range is function of the source field: for STE, 0 - 355; for NIF, 0 -\n\r"
    "  63; for GLB_HP and GLB_LP, 0 - 2; for CNM-LL, 0 - 63; for CNM-CB, 0 - 127\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_CAL_BUFF_SOURCE_ID,
    "source",
    (PARAM_VAL_RULES *)&SOC_PB_FC_GEN_CAL_SRC_rule[0],
    (sizeof(SOC_PB_FC_GEN_CAL_SRC_rule) / sizeof(SOC_PB_FC_GEN_CAL_SRC_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_buff.source:\n\r"
    "  Calendar-based Flow Control source (trigger).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_SET_FC_GEN_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_ID,
    "gen_cal_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Calendar-based interface calendar for Flow Control Generation\n\r"
    "  (OOB/ILKN-Inband TX).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_CAL_MODE_NDX_ID,
    "cal_mode_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_MODE_rule[0],
    (sizeof(SOC_PB_FC_CAL_MODE_rule) / sizeof(SOC_PB_FC_CAL_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_mode_ndx:\n\r"
    "  The interface and mode used for FC calendar-based generation: SPI-OOB,\n\r"
    "  ILKN-OOB or ILKN-Inband	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC is generated. For OOB\n\r"
    "  interface (both SPI and ILKN), only SOC_PB_FC_OOB_ID_B can be used. Additionally,\n\r"
    "  ILKN-A can be used. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_GEN_CAL_GET_FC_GEN_CAL_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID,
    "rec_cal_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Calendar-based interface calendar for Flow Control Reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_MODE_NDX_ID,
    "cal_mode_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_MODE_rule[0],
    (sizeof(SOC_PB_FC_CAL_MODE_rule) / sizeof(SOC_PB_FC_CAL_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_mode_ndx:\n\r"
    "  The interface and mode used for FC calendar-based reception: SPI-OOB,\n\r"
    "  ILKN-OOB or ILKN-Inband	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC reception is handled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    4,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_CONF_CAL_REPS_ID,
    "cal_reps",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.cal_reps:\n\r"
    "  The number of calendar repetitions within a status frame. The actual Calendar\n\r"
    "  is composed of adjacent sections of 'cal_len' length.'cal_len' * 'cal_reps'\n\r"
    "  must not exceed the total calendar length (512/256).Range: 1 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_CONF_CAL_LEN_ID,
    "cal_len",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.cal_len:\n\r"
    "  Number of channels in calendar.SPI Range: 0 - 511. ILKN Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_CONF_ENABLE_ID,
    "enable",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_conf.enable:\n\r"
    "  Enable/Disable the Calendar-based interface for FC generation (TX) or\n\r"
    "  reception (RX). Can be enabled as SPI-OOB, ILKN-OOB or ILKN-Inbnd.OOB-TX\n\r"
    "  enable is only valid for OOB interface B.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_ENTRY_ID,
    "entry_id",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_NDX_rule[0],
    (sizeof(SOC_PB_FC_CAL_NDX_rule) / sizeof(SOC_PB_FC_CAL_NDX_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  calendar entry index. Can be single/range/all, up to 256 entries:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_gen_cal_set entry_id 12 cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    5,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_BUFF_ID_ID,
    "id",
    (PARAM_VAL_RULES *)&soc_pb_api_members_vals[0],
    (sizeof(soc_pb_api_members_vals) / sizeof(soc_pb_api_members_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_buff.id:\n\r"
    "  The index of the entity (HR/OFP/link, according to the destination\n\r"
    "  specified), that will receive the Flow Control indication when the\n\r"
    "  appropriate OOB calendar entry is triggered for FC.The range is function of\n\r"
    "  the destination field: for HR, 128 - 255; for EGQ OFP LP/HP, 0 - 79; SCH HR\n\r"
    "  LP/HP LP, 0 - 79; for NIF, 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_CAL_BUFF_DESTINATION_ID,
    "destination",
    (PARAM_VAL_RULES *)&SOC_PB_FC_REC_CAL_DEST_rule[0],
    (sizeof(SOC_PB_FC_REC_CAL_DEST_rule) / sizeof(SOC_PB_FC_REC_CAL_DEST_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_buff.destination:\n\r"
    "  Calendar-based Flow Control destination (Reaction Point).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_set cal_mode_ndx 0 if_ndx 0 cal_reps 0 cal_len\n\r"
    "  0 enable 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_SET_FC_REC_CAL_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_ID,
    "rec_cal_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures Calendar-based interface calendar for Flow Control Reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_CAL_MODE_NDX_ID,
    "cal_mode_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_FC_CAL_MODE_rule[0],
    (sizeof(SOC_PB_FC_CAL_MODE_rule) / sizeof(SOC_PB_FC_CAL_MODE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  cal_mode_ndx:\n\r"
    "  The interface and mode used for FC calendar-based reception: SPI-OOB,\n\r"
    "  ILKN-OOB or ILKN-Inband	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC reception is handled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_rec_cal_get cal_mode_ndx 0 if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_REC_CAL_GET_FC_REC_CAL_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_ID,
    "oob_phy_params_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures physical parameters for out-of-band Flow Control Reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_oob_phy_params_set if_ndx 0 is_on_if_oof 0\n\r"
    "  is_sampled_rising_edge 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC reception is handled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_oob_phy_params_set if_ndx 0 is_on_if_oof 0\n\r"
    "  is_sampled_rising_edge 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_IS_ON_IF_OOF_ID,
    "is_on_if_oof",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  phy_params.is_on_if_oof:\n\r"
    "  The number of calendar repetitions within a status frame. The actual Calendar\n\r"
    "  If set, then when OOB is in out-of-frame state (failed to lock, non-operational)\n\r"
    "  , it presents constant flow-control 'on' indication to the CFC core. Otherwise,\n\r"
    "  then when in out-of-frame, a flow-control 'off' is presented.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_oob_phy_params_set if_ndx 0 is_on_if_oof 0\n\r"
    "  is_sampled_rising_edge 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_IS_SAMPLED_RISING_EDGE_ID,
    "is_sampled_rising_edge",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  phy_params.is_sampled_rising_edge:\n\r"
    "  Determine the phase selection to sample the calendar signal.\n\r"
    "  If set, sampled on the flow control clock rising edge. Otherwise,\n\r"
    "  Stat is sampled on the flow control clock falling edge.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_oob_phy_params_set if_ndx 0 is_on_if_oof 0\n\r"
    "  is_sampled_rising_edge 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_SET_FC_OOB_PHY_PARAMS_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_GET_FC_OOB_PHY_PARAMS_GET_ID,
    "oob_phy_params_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Configures physical parameters for out-of-band Flow Control Reception.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control oob_phy_params_get if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_GET_FC_OOB_PHY_PARAMS_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_OOB_PHY_PARAMS_GET_FC_OOB_PHY_PARAMS_GET_IF_NDX_ID,
    "if_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  if_ndx:\n\r"
    "  The Interface Index of the interface on which the FC reception is handled. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control oob_phy_params_get if_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_OOB_PHY_PARAMS_GET_FC_OOB_PHY_PARAMS_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EGR_REC_OOB_STAT_GET_FC_EGR_REC_OOB_STAT_GET_ID,
    "egr_rec_oob_stat_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Diagnostics - get the Out-Of-Band interface status\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_egr_rec_oob_stat_get oob_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EGR_REC_OOB_STAT_GET_FC_EGR_REC_OOB_STAT_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EGR_REC_OOB_STAT_GET_FC_EGR_REC_OOB_STAT_GET_OOB_NDX_ID,
    "oob_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_FC_OOB_ID_rule[0],
    (sizeof(SOC_PB_FC_OOB_ID_rule) / sizeof(SOC_PB_FC_OOB_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  oob_ndx:\n\r"
    "  OOB Interface index.\n\r"
    "  Range: 0 - 1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_egr_rec_oob_stat_get oob_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EGR_REC_OOB_STAT_GET_FC_EGR_REC_OOB_STAT_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ID,
    "ilkn_llfc_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines if and how LLFC can be received/generated using Interlaken NIF.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_set ilkn_ndx 5000 cal_channel 0\n\r"
    "  multi_use_mask 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ILKN_NDX_ID,
    "ilkn_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_ILKN_ID_rule[0],
    (sizeof(SOC_PB_NIF_ILKN_ID_rule) / sizeof(SOC_PB_NIF_ILKN_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ilkn_ndx:\n\r"
    "  Interlaken Index. Range: 5000 - 5001. (ILKN-A/ILKN-B). Can also use\n\r"
    "  SOC_PETRA_NIF_ID(ILKN, 0 - 1).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_set ilkn_ndx 5000 cal_channel 0\n\r"
    "  multi_use_mask 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_INFO_CAL_CHANNEL_ID,
    "cal_channel",
    (PARAM_VAL_RULES *)&SOC_PB_FC_ILKN_CAL_LLFC_rule[0],
    (sizeof(SOC_PB_FC_ILKN_CAL_LLFC_rule) / sizeof(SOC_PB_FC_ILKN_CAL_LLFC_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.cal_channel:\n\r"
    "  Defines whether the ILKN-FC calendar can be used to receive/generate LLFC. If\n\r"
    "  it can, defines the calendar channel/channels used for LLFC indication\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_set ilkn_ndx 5000 cal_channel 0\n\r"
    "  multi_use_mask 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_INFO_MULTI_USE_MASK_ID,
    "multi_use_mask",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.multi_use_mask:\n\r"
    "  For RX (Flow Control Reception): if a certain bit in the multiple use bits is\n\r"
    "  received with a value of XOFF, and its corresponding bit in the mask is set,\n\r"
    "  this is interpreted as request for link level flow control on the ILKN. For\n\r"
    "  TX (Flow Control Generation), this mask will be sent as LLFC indication when\n\r"
    "  requested.The value '0' disables Inband-LLFC using multiple-use-bits.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_set ilkn_ndx 5000 cal_channel 0\n\r"
    "  multi_use_mask 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_SET_FC_ILKN_LLFC_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_GET_FC_ILKN_LLFC_GET_ID,
    "ilkn_llfc_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines if and how LLFC can be received/generated using Interlaken NIF.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_get ilkn_ndx 5000\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_GET_FC_ILKN_LLFC_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_ILKN_LLFC_GET_FC_ILKN_LLFC_GET_ILKN_NDX_ID,
    "ilkn_ndx",
    (PARAM_VAL_RULES *)&SOC_PB_NIF_ILKN_ID_rule[0],
    (sizeof(SOC_PB_NIF_ILKN_ID_rule) / sizeof(SOC_PB_NIF_ILKN_ID_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  ilkn_ndx:\n\r"
    "  Interlaken Index. Range: 5000 - 5001. (ILKN-A/ILKN-B). Can also use\n\r"
    "  SOC_PETRA_NIF_ID(ILKN, 0 - 1).	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_ilkn_llfc_get ilkn_ndx 5000\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_ILKN_LLFC_GET_FC_ILKN_LLFC_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_OVERSUBSCR_SCHEME_SET_FC_NIF_OVERSUBSCR_SCHEME_SET_ID,
    "nif_oversubscr_scheme_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines FC Oversubscription scheme on the NIFs. For up to 100GE traffic on\n\r"
    "  the device NIFs should be set to 'NONE'. Otherwise, should be set according\n\r"
    "  to the oversubscription level. The scheme affects internal NIF FC thresholds\n\r"
    "  each scheme defines a different thresholds preset.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_oversubscr_scheme_set scheme 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_OVERSUBSCR_SCHEME_SET_FC_NIF_OVERSUBSCR_SCHEME_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_OVERSUBSCR_SCHEME_SET_FC_NIF_OVERSUBSCR_SCHEME_SET_SCHEME_ID,
    "scheme",
    (PARAM_VAL_RULES *)&SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_rule[0],
    (sizeof(SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_rule) / sizeof(SOC_PB_FC_NIF_OVERSUBSCR_SCHEME_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  scheme:\n\r"
    "  FC Oversubscription scheme\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_oversubscr_scheme_set scheme 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_OVERSUBSCR_SCHEME_SET_FC_NIF_OVERSUBSCR_SCHEME_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_OVERSUBSCR_SCHEME_GET_FC_NIF_OVERSUBSCR_SCHEME_GET_ID,
    "nif_oversubscr_scheme_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines FC Oversubscription scheme on the NIFs. For up to 100GE traffic on\n\r"
    "  the device NIFs should be set to 'NONE'. Otherwise, should be set according\n\r"
    "  to the oversubscription level. The scheme affects internal NIF FC thresholds\n\r"
    "  each scheme defines a different thresholds preset.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_oversubscr_scheme_get\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_OVERSUBSCR_SCHEME_GET_FC_NIF_OVERSUBSCR_SCHEME_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_ID,
    "nif_pause_quanta_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_quanta_set mal_ndx 0 direction_ndx 0\n\r"
    "  pause_quanta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAC Lane index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_quanta_set mal_ndx 0 direction_ndx 0\n\r"
    "  pause_quanta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_PAUSE_QUANTA_ID,
    "pause_quanta",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  pause_quanta:\n\r"
    "  Pause quanta:\n\r"
    "  - FC Reception - pause quanta to be used upon receiving\n\r"
    "  link-level flow control via the BCT, ignored for other modes.\n\r"
    "  - FC Generation - pause quanta to send.\n\r"
    "  Units: 512 bit times (as defined in IEEE 802.3x standard).\n\r"
    "  Range: 0 - 0xFFFF.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_quanta_set mal_ndx 0 direction_ndx 0\n\r"
    "  pause_quanta 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_QUANTA_SET_FC_NIF_PAUSE_QUANTA_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_QUANTA_GET_FC_NIF_PAUSE_QUANTA_GET_ID,
    "nif_pause_quanta_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_quanta_get mal_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_QUANTA_GET_FC_NIF_PAUSE_QUANTA_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_QUANTA_GET_FC_NIF_PAUSE_QUANTA_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAC Lane index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_quanta_get mal_ndx 0 direction_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_QUANTA_GET_FC_NIF_PAUSE_QUANTA_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_ID,
    "nif_pause_frame_src_addr_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_frame_src_addr_set mal_ndx 0 mac_addr 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAC Lane index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_frame_src_addr_set mal_ndx 0 mac_addr 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_MAC_ADDR_ID,
    "mac_addr",
    (PARAM_VAL_RULES *)&soc_pb_api_mac_addr_vals[0],
    (sizeof(soc_pb_api_mac_addr_vals) / sizeof(soc_pb_api_mac_addr_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mac_addr:\n\r"
    "  Source MAC address, part of 802.3 pause frame.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_frame_src_addr_set mal_ndx 0 mac_addr 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_FC_NIF_PAUSE_FRAME_SRC_ADDR_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_ID,
    "nif_pause_frame_src_addr_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Function description\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_frame_src_addr_get mal_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_MAL_NDX_ID,
    "mal_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  mal_ndx:\n\r"
    "  MAC Lane index. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_nif_pause_frame_src_addr_get mal_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_FC_NIF_PAUSE_FRAME_SRC_ADDR_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_ID,
    "extend_q_grp_set",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines the number of Flow Control priorities supported for the specified\n\r"
    "  OFP. Each two priorities occupy an OFP resource, that cannot be used as a\n\r"
    "  separate destination System Port. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_extend_q_grp_set base_ofp_ndx 0 nof_ofp_priorities 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_BASE_OFP_NDX_ID,
    "base_ofp_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  base_ofp_ndx:\n\r"
    "  The index of the first OFP in an OFP-group used to provide extended FC\n\r"
    "  priorities (extended egress queueing). Range: 0 - 78. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_extend_q_grp_set base_ofp_ndx 0 nof_ofp_priorities 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_ID),
    3,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_INFO_NOF_OFP_PRIORITIES_ID,
    "nof_ofp_priorities",
    (PARAM_VAL_RULES *)&SOC_PB_FC_EXTEND_Q_NOF_PRIOS_rule[0],
    (sizeof(SOC_PB_FC_EXTEND_Q_NOF_PRIOS_rule) / sizeof(SOC_PB_FC_EXTEND_Q_NOF_PRIOS_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  info.nof_ofp_priorities:\n\r"
    "  Number of OFP priorities in the group. Each two priorities consume an OFP\n\r"
    "  resource.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_extend_q_grp_set base_ofp_ndx 0 nof_ofp_priorities 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EXTEND_Q_GRP_SET_FC_EXTEND_Q_GRP_SET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EXTEND_Q_GRP_GET_FC_EXTEND_Q_GRP_GET_ID,
    "extend_q_grp_get",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  Defines the number of Flow Control priorities supported for the specified\n\r"
    "  OFP. Each two priorities occupy an OFP resource, that cannot be used as a\n\r"
    "  separate destination System Port. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_extend_q_grp_get base_ofp_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EXTEND_Q_GRP_GET_FC_EXTEND_Q_GRP_GET_ID),
    2,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  {
    PARAM_PB_FC_EXTEND_Q_GRP_GET_FC_EXTEND_Q_GRP_GET_BASE_OFP_NDX_ID,
    "base_ofp_ndx",
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0],
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "  base_ofp_ndx:\n\r"
    "  The index of the first OFP in an OFP-group used to provide extended FC\n\r"
    "  priorities (extended egress queueing). Range: 0 - 78. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE
    "Examples:\n\r"
    "  soc_pb_api flow_control fc_extend_q_grp_get base_ofp_ndx 0\n\r"
#endif
    "",
    "",
    BIT_UI_16(FUN_PB_FC_EXTEND_Q_GRP_GET_FC_EXTEND_Q_GRP_GET_ID),
    LAST_ORDINAL,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
  { 
    PARAM_PB_FC_VSQ_BY_INCOMING_NIF_SET_FC_VSQ_BY_INCOMING_NIF_SET_ID, 
    "vsq_by_incoming_nif_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Enable/disable the mapping between the VSQ-Pointer and the Incoming-NIF port. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_vsq_by_incoming_nif_set enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_VSQ_BY_INCOMING_NIF_SET_FC_VSQ_BY_INCOMING_NIF_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_VSQ_BY_INCOMING_NIF_SET_FC_VSQ_BY_INCOMING_NIF_SET_ENABLE_ID, 
    "enable", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  enable:\n\r"
    "  Enable/disable the mapping between the VSQ-Pointer and the Incoming-NIF port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_vsq_by_incoming_nif_set enable 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_VSQ_BY_INCOMING_NIF_SET_FC_VSQ_BY_INCOMING_NIF_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_FC_VSQ_BY_INCOMING_NIF_GET_FC_VSQ_BY_INCOMING_NIF_GET_ID, 
    "vsq_by_incoming_nif_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Enable/disable the mapping between the VSQ-Pointer and the Incoming-NIF port. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api flow_control fc_vsq_by_incoming_nif_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_FC_VSQ_BY_INCOMING_NIF_GET_FC_VSQ_BY_INCOMING_NIF_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_FLOW_CONTROL_ID,
    "flow_control",
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0],
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1,
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0,
    0,0,0,0,0,0,0,
    "",
    "",
    "",
    BIT_UI_16_RNG(FUN_PB_API_FLOW_CONTROL_FIRST_ID,FUN_PB_API_FLOW_CONTROL_LAST_ID),
    1,
      /*
       * Pointer to a function to call after symbolic parameter
       * has been accepted.
       */
    (VAL_PROC_PTR)NULL
  },
#endif /* } flow_control*/
#ifdef UI_PMF_LOW_LEVEL/* { pmf_low_level*/
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID, 
    "ce_packet_header_entry_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table, adding fields from the packet header\n\r"
    "  to the PMF key. The PMF keys are constructed by a series of copy engines.\n\r"
    "  Each copy engine appends field (s) from the packet headers or from the\n\r"
    "  incoming IRPP information into the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_INFO_NOF_BITS_ID, 
    "nof_bits", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.nof_bits:\n\r"
    "  Number of bits to be copied to the PMF input vector.Units: Bits. Range: 1 -\n\r"
    "  32. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_INFO_OFFSET_ID, 
    "offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.offset:\n\r"
    "  Internal-offset: The offset from the first bit of the sub-header, to be\n\r"
    "  copied to the PMF input vector Units: Bits. Range: 0 - 1024 (Petra-B), in\n\r"
    "  multiple of 4.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_INFO_SUB_HEADER_ID, 
    "sub_header", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_CE_SUB_HEADER_rule[0], 
    (sizeof(SOC_TMC_PMF_CE_SUB_HEADER_rule) / sizeof(SOC_TMC_PMF_CE_SUB_HEADER_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.sub_header:\n\r"
    "  Sub-Header index: The packet header is divided to sub-header according to\n\r"
    "  type (Ethernet/IPv4/IPv6/MPLS), indicates in which sub-header the field must\n\r"
    "  be extracted from. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 nof_bits 0 offset 0 sub_header 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_SET_PMF_CE_PACKET_HEADER_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_ID, 
    "ce_packet_header_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table, adding fields from the packet header\n\r"
    "  to the PMF key. The PMF keys are constructed by a series of copy engines.\n\r"
    "  Each copy engine appends field (s) from the packet headers or from the\n\r"
    "  incoming IRPP information into the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_packet_header_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_PACKET_HEADER_ENTRY_GET_PMF_CE_PACKET_HEADER_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID, 
    "ce_irpp_info_entry_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table, adding fields from the IRPP\n\r"
    "  information to the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_IRPP_FIELD_ID, 
    "irpp_field", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  irpp_field:\n\r"
    "  Field of the IRPP info to extract to the Copy-Engine.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_SIZE_ID, 
    "nof_bits(optional)", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Nof bits is optional and must be between 0 and 32\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_set pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0 irpp_field 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_SET_PMF_CE_IRPP_INFO_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_ID, 
    "ce_irpp_info_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table, adding fields from the IRPP\n\r"
    "  information to the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_irpp_info_entry_get pmf_pgm_ndx 0 pmf_key 0\n\r"
    "  ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_IRPP_INFO_ENTRY_GET_PMF_CE_IRPP_INFO_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID, 
    "ce_nop_entry_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table to be invalid. Invalid entries are\n\r"
    "  bypassed, and do not affect the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_set pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
    "  is_ce_not_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_set pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
    "  is_ce_not_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_set pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
    "  is_ce_not_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_set pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
    "  is_ce_not_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_IS_CE_NOT_VALID_ID, 
    "is_ce_not_valid", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_ce_not_valid:\n\r"
    "  If TRUE, then the Copy Engine does not perform any operation. Otherwise, the\n\r"
    "  Copy Engine performs the operation as set by the Copy Engine APIs.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_set pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
    "  is_ce_not_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_SET_PMF_CE_NOP_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_ID, 
    "ce_nop_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry in the copy engines table to be invalid. Invalid entries are\n\r"
    "  bypassed, and do not affect the PMF key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_get pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_get pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_PMF_KEY_ID, 
    "pmf_key", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_key:\n\r"
    "  PMF-Key-ID (output of the Copy Engine). Range: 0 - 1. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_get pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_CE_NDX_ID, 
    "ce_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  ce_ndx:\n\r"
    "  Copy-Engine-ID. Range: 0 - 7. (Petra-B) The Copy-Engine '0' set the MSB of\n\r"
    "  the output vector, '1' is appended to the output vector etc.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_ce_nop_entry_get pmf_pgm_ndx 0 pmf_key 0 ce_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_CE_NOP_ENTRY_GET_PMF_CE_NOP_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID, 
    "tcam_lookup_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Select the key to be searched in the TCAM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_DB_ID_NDX_ID, 
    "db_id_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_id_ndx:\n\r"
    "  Database-ID. Different Lookup-Profiles can share the same Database. A\n\r"
    "  Lookup-Profile can refer to several Databases if there are sufficient\n\r"
    "  Priority-Decoders/Selectors to get all the TCAM output result.Range: 0 -\n\r"
    "  16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_INFO_KEY_DB_ID_ID, 
    "key_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.key_db_id:\n\r"
    "  TCAM Key Database Id. Enable to support different Databases per same bank\n\r"
    "  (and cycle)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_INFO_KEY_SRC_ID, 
    "key_src", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.key_src:\n\r"
    "  Key source of the key entering the TCAM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_set cycle_ndx 0 id 0 db_id_ndx 0\n\r"
    "  key_db_id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_SET_PMF_TCAM_LOOKUP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_ID, 
    "tcam_lookup_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Select the key to be searched in the TCAM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_get cycle_ndx 0 id 0 db_id_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_get cycle_ndx 0 id 0 db_id_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_get cycle_ndx 0 id 0 db_id_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_DB_ID_NDX_ID, 
    "db_id_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_id_ndx:\n\r"
    "  Database-ID. Different Lookup-Profiles can share the same Database. A\n\r"
    "  Lookup-Profile can refer to several Databases if there are sufficient\n\r"
    "  Priority-Decoders/Selectors to get all the TCAM output result.Range: 0 -\n\r"
    "  16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_lookup_get cycle_ndx 0 id 0 db_id_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_LOOKUP_GET_PMF_TCAM_LOOKUP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID, 
    "tcam_entry_add", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Add an entry (in the format of a PMF TCAM Key) in a TCAM Bank.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ENTRY_NDX_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.entry_id:\n\r"
    "  Entry index in the TCAM Database. Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ENTRY_NDX_DB_ID_ID, 
    "db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.db_id:\n\r"
    "  TCAM Database-ID. Range: 0 - 16K-1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_OUTPUT_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.output.val:\n\r"
    "  Value of the output. Is encoded in 32 bits for Petra-B.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_PRIORITY_ID, 
    "priority", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.priority:\n\r"
    "  Entry priority in the TCAM Database.Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.key.pgm_id:\n\r"
    "  PMF Program-ID. Range: 0 - 31.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_FORMAT_ID, 
    "format", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.key.format:\n\r"
    "  Format (i.e., key source) of the TCAM key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_DATA_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_DATA_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.key.data.mask[ prm_mask_index]:\n\r"
    "  Mask of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b). Set '1' for the corresponding bit to be meaningful\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_DATA_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_DATA_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.key.data.val[ prm_val_index]:\n\r"
    "  Value of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#if LINK_PPD_LIBRARIES
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_TCAM_DATA_KEY_SIZE_ID, 
    "size", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0], 
    (sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule) / sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_data.key.size:\n\r"
    "  Size of the key data. Must be set according to the bank size (For Petra-B,\n\r"
    "  72b / 144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
#endif
  { 
    PARAM_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ALLOW_NEW_BANK_ID, 
    "allow_new_bank", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  allow_new_bank:\n\r"
    "  If True, then the entry is added to the Database even if the Database must\n\r"
    "  use another TCAM (Bank, Cycle) than it already uses. Otherwise, the entry is\n\r"
    "  added only if the Database has already entries in this TCAM (Bank, Cycle). 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_add entry_id 0 db_id 0 val 0 priority 0\n\r"
    "  pgm_id 0 format 0 mask_index 0 mask 0 val_index 0 val 0 size 0 allow_new_bank\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_ADD_PMF_TCAM_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ID, 
    "tcam_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get an entry (in the format of a PMF TCAM Key) in a TCAM Bank.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_get entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ENTRY_NDX_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.entry_id:\n\r"
    "  Entry index in the TCAM Database. Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_get entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ENTRY_NDX_DB_ID_ID, 
    "db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.db_id:\n\r"
    "  TCAM Database-ID. Range: 0 - 16K-1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_get entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_GET_PMF_TCAM_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ID, 
    "tcam_entry_remove", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Remove an entry (in the format of a PMF TCAM Key) from a TCAM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_remove entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ENTRY_NDX_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.entry_id:\n\r"
    "  Entry index in the TCAM Database. Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_remove entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ENTRY_NDX_DB_ID_ID, 
    "db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.db_id:\n\r"
    "  TCAM Database-ID. Range: 0 - 16K-1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_entry_remove entry_id 0 db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_ENTRY_REMOVE_PMF_TCAM_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_CLEAR_PMF_TCAM_KEY_CLEAR_ID, 
    "tcam_key_clear", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the key format and its size (according to the 'key_format' parameter) and\n\r"
    "  mask all the fields.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_clear key_format 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_CLEAR_PMF_TCAM_KEY_CLEAR_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_CLEAR_PMF_TCAM_KEY_CLEAR_KEY_FORMAT_ID, 
    "key_format", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_format:\n\r"
    "  TCAM Key format. Must be set accordingly to the Key format expected in the\n\r"
    "  bank the key will be inserted in.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_clear key_format 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_CLEAR_PMF_TCAM_KEY_CLEAR_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID, 
    "tcam_key_val_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Write inside the key the field value in the place set according to the field\n\r"
    "  type and the key format. Unmask the corresponding bits in the key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_A_B_PMF_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.pmf_pgm_id:\n\r"
    "  PMG Program Index. Indicate which Copy Engine instructions to look for in\n\r"
    "  order to find the field location.Range: 0 - 31. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },    
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_A_B_SUB_HEADER_OFFSET_ID, 
    "sub_header_offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header_offset:\n\r"
    "  Internal offset in the packet sub-header. Must be set only if the location\n\r"
    "  'loc' is 'HDR' and must fit one of the Copy Engine configurations. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_A_B_SUB_HEADER_ID, 
    "sub_header", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header:\n\r"
    "  Sub-header type of the Packet. Must be set only if the location 'loc' is\n\r"
    "  'HDR'. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_A_B_IRPP_FLD_ID, 
    "irpp_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.irpp_fld:\n\r"
    "  Field type of the IRPP information. Must be set only if the location 'loc' is\n\r"
    "  'IRPP' and must fit one of the Copy Engine configurations.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    6, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_A_B_LOC_ID, 
    "loc", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.loc:\n\r"
    "  Location of the field: IRPP information or Sub-header of the Packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    7, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_L3_IPV6_FLD_ID, 
    "ipv6_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV6_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV6_rule) / sizeof(SOC_TMC_PMF_FLD_IPV6_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv6_fld:\n\r"
    "  Field type of the IPv6 Key. Must be set only if the location 'mode' is 'IPV6'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    8, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_L3_IPV4_FLD_ID, 
    "ipv4_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV4_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV4_rule) / sizeof(SOC_TMC_PMF_FLD_IPV4_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv4_fld:\n\r"
    "  Field type of the IPv4 Key. Must be set only if the location 'mode' is 'IPV4'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    9, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_L3_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.mode:\n\r"
    "  Field Layer 3 mode: IPv4 or IPv6.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    10, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_TYPE_NDX_L2_ID, 
    "l2", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L2_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l2:\n\r"
    "  Field type of the Layer 2 Ethernet ACL key. Must be set only if the Key\n\r"
    "  format is 'L2'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    11, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_VAL_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_FLD_VAL_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_val.val[ prm_val_index]:\n\r"
    "  Field value. The considered value size is determined according to field type. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_set pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0 val_index 0\n\r"
    "  val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_SET_PMF_TCAM_KEY_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID, 
    "tcam_key_val_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Write inside the key the field value in the place set according to the field\n\r"
    "  type and the key format. Unmask the corresponding bits in the key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.pgm_id:\n\r"
    "  PMF Program-ID. Range: 0 - 31.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_FORMAT_ID, 
    "format", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.format:\n\r"
    "  Format (i.e., key source) of the TCAM key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_DATA_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_DATA_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.mask[ prm_mask_index]:\n\r"
    "  Mask of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b). Set '1' for the corresponding bit to be meaningful\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_DATA_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_DATA_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.val[ prm_val_index]:\n\r"
    "  Value of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#if LINK_PPD_LIBRARIES
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_TCAM_KEY_SIZE_ID, 
    "size", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0], 
    (sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule) / sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.size:\n\r"
    "  Size of the key data. Must be set according to the bank size (For Petra-B,\n\r"
    "  72b / 144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_A_B_PMF_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.pmf_pgm_id:\n\r"
    "  PMG Program Index. Indicate which Copy Engine instructions to look for in\n\r"
    "  order to find the field location.Range: 0 - 31. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_A_B_SUB_HEADER_OFFSET_ID, 
    "sub_header_offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header_offset:\n\r"
    "  Internal offset in the packet sub-header. Must be set only if the location\n\r"
    "  'loc' is 'HDR' and must fit one of the Copy Engine configurations. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_A_B_SUB_HEADER_ID, 
    "sub_header", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header:\n\r"
    "  Sub-header type of the Packet. Must be set only if the location 'loc' is\n\r"
    "  'HDR'. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_A_B_IRPP_FLD_ID, 
    "irpp_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.irpp_fld:\n\r"
    "  Field type of the IRPP information. Must be set only if the location 'loc' is\n\r"
    "  'IRPP' and must fit one of the Copy Engine configurations.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_A_B_LOC_ID, 
    "loc", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.loc:\n\r"
    "  Location of the field: IRPP information or Sub-header of the Packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_L3_IPV6_FLD_ID, 
    "ipv6_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV6_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV6_rule) / sizeof(SOC_TMC_PMF_FLD_IPV6_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv6_fld:\n\r"
    "  Field type of the IPv6 Key. Must be set only if the location 'mode' is 'IPV6'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_L3_IPV4_FLD_ID, 
    "ipv4_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV4_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV4_rule) / sizeof(SOC_TMC_PMF_FLD_IPV4_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv4_fld:\n\r"
    "  Field type of the IPv4 Key. Must be set only if the location 'mode' is 'IPV4'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_L3_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.mode:\n\r"
    "  Field Layer 3 mode: IPv4 or IPv6.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_FLD_TYPE_NDX_L2_ID, 
    "l2", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L2_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l2:\n\r"
    "  Field type of the Layer 2 Ethernet ACL key. Must be set only if the Key\n\r"
    "  format is 'L2'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_val_get pgm_id 0 format 0 mask_index 0\n\r"
    "  mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0 sub_header 0\n\r"
    "  irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_TCAM_KEY_VAL_GET_PMF_TCAM_KEY_VAL_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID, 
    "tcam_key_masked_val_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Write inside the key the field value in the place set according to the field\n\r"
    "  type and the key format. Unmask in the key the bits according to the mask\n\r"
    "  value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_A_B_PMF_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.pmf_pgm_id:\n\r"
    "  PMG Program Index. Indicate which Copy Engine instructions to look for in\n\r"
    "  order to find the field location.Range: 0 - 31. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_A_B_SUB_HEADER_OFFSET_ID, 
    "sub_header_offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header_offset:\n\r"
    "  Internal offset in the packet sub-header. Must be set only if the location\n\r"
    "  'loc' is 'HDR' and must fit one of the Copy Engine configurations. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_A_B_SUB_HEADER_ID, 
    "sub_header", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header:\n\r"
    "  Sub-header type of the Packet. Must be set only if the location 'loc' is\n\r"
    "  'HDR'. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_A_B_IRPP_FLD_ID, 
    "irpp_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.irpp_fld:\n\r"
    "  Field type of the IRPP information. Must be set only if the location 'loc' is\n\r"
    "  'IRPP' and must fit one of the Copy Engine configurations.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    6, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_A_B_LOC_ID, 
    "loc", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.loc:\n\r"
    "  Location of the field: IRPP information or Sub-header of the Packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    7, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_L3_IPV6_FLD_ID, 
    "ipv6_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV6_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV6_rule) / sizeof(SOC_TMC_PMF_FLD_IPV6_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv6_fld:\n\r"
    "  Field type of the IPv6 Key. Must be set only if the location 'mode' is 'IPV6'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    8, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_L3_IPV4_FLD_ID, 
    "ipv4_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV4_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV4_rule) / sizeof(SOC_TMC_PMF_FLD_IPV4_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv4_fld:\n\r"
    "  Field type of the IPv4 Key. Must be set only if the location 'mode' is 'IPV4'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    9, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_L3_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.mode:\n\r"
    "  Field Layer 3 mode: IPv4 or IPv6.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    10, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_TYPE_NDX_L2_ID, 
    "l2", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L2_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l2:\n\r"
    "  Field type of the Layer 2 Ethernet ACL key. Must be set only if the Key\n\r"
    "  format is 'L2'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    11, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_VAL_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_FLD_VAL_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_val.val[ prm_val_index]:\n\r"
    "  Field value. The considered value size is determined according to field type. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_MASK_VAL_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_MASK_VAL_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_val.val[ prm_val_index]:\n\r"
    "  Field value. The considered value size is determined according to field type. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_set pmf_pgm_id 0\n\r"
    "  sub_header_offset 0 sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode\n\r"
    "  0 l2 0 val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_KEY_MASKED_VAL_SET_PMF_TCAM_KEY_MASKED_VAL_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_ID, 
    "tcam_key_masked_val_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Write inside the key the field value in the place set according to the field\n\r"
    "  type and the key format. Unmask in the key the bits according to the mask\n\r"
    "  value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.pgm_id:\n\r"
    "  PMF Program-ID. Range: 0 - 31.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_FORMAT_ID, 
    "format", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.format:\n\r"
    "  Format (i.e., key source) of the TCAM key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_DATA_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_DATA_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.mask[ prm_mask_index]:\n\r"
    "  Mask of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b). Set '1' for the corresponding bit to be meaningful\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_DATA_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_DATA_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.val[ prm_val_index]:\n\r"
    "  Value of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_TCAM_KEY_SIZE_ID, 
    "size", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0], 
    (sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule) / sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.size:\n\r"
    "  Size of the key data. Must be set according to the bank size (For Petra-B,\n\r"
    "  72b / 144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_A_B_PMF_PGM_ID_ID, 
    "pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.pmf_pgm_id:\n\r"
    "  PMG Program Index. Indicate which Copy Engine instructions to look for in\n\r"
    "  order to find the field location.Range: 0 - 31. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_A_B_SUB_HEADER_OFFSET_ID, 
    "sub_header_offset", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header_offset:\n\r"
    "  Internal offset in the packet sub-header. Must be set only if the location\n\r"
    "  'loc' is 'HDR' and must fit one of the Copy Engine configurations. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_A_B_SUB_HEADER_ID, 
    "sub_header", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.sub_header:\n\r"
    "  Sub-header type of the Packet. Must be set only if the location 'loc' is\n\r"
    "  'HDR'. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_A_B_IRPP_FLD_ID, 
    "irpp_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0], 
    (sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule) / sizeof(SOC_TMC_PMF_IRPP_INFO_FIELD_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.irpp_fld:\n\r"
    "  Field type of the IRPP information. Must be set only if the location 'loc' is\n\r"
    "  'IRPP' and must fit one of the Copy Engine configurations.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_A_B_LOC_ID, 
    "loc", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_A_B_LOC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.a_b.loc:\n\r"
    "  Location of the field: IRPP information or Sub-header of the Packet.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_L3_IPV6_FLD_ID, 
    "ipv6_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV6_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV6_rule) / sizeof(SOC_TMC_PMF_FLD_IPV6_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv6_fld:\n\r"
    "  Field type of the IPv6 Key. Must be set only if the location 'mode' is 'IPV6'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_L3_IPV4_FLD_ID, 
    "ipv4_fld", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FLD_IPV4_rule[0], 
    (sizeof(SOC_TMC_PMF_FLD_IPV4_rule) / sizeof(SOC_TMC_PMF_FLD_IPV4_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.ipv4_fld:\n\r"
    "  Field type of the IPv4 Key. Must be set only if the location 'mode' is 'IPV4'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_L3_MODE_ID, 
    "mode", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L3_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l3.mode:\n\r"
    "  Field Layer 3 mode: IPv4 or IPv6.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_KEY_MASKED_VAL_GET_PMF_TCAM_KEY_MASKED_VAL_GET_FLD_TYPE_NDX_L2_ID, 
    "l2", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_FLD_L2_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule) / sizeof(SOC_TMC_PMF_TCAM_FLD_L2_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fld_type_ndx.l2:\n\r"
    "  Field type of the Layer 2 Ethernet ACL key. Must be set only if the Key\n\r"
    "  format is 'L2'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_ID, 
    "db_direct_tbl_key_src_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Select the key source for the direct table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_set cycle_ndx 0 id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_set cycle_ndx 0 id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_set cycle_ndx 0 id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_KEY_SRC_ID, 
    "key_src", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_DIRECT_TBL_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key_src:\n\r"
    "  Entry index source for the direct table\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_set cycle_ndx 0 id 0 key_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_SET_PMF_DB_DIRECT_TBL_KEY_SRC_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_ID, 
    "db_direct_tbl_key_src_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Select the key source for the direct table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_get cycle_ndx 0 id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_get cycle_ndx 0 id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_key_src_get cycle_ndx 0 id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_KEY_SRC_GET_PMF_DB_DIRECT_TBL_KEY_SRC_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_ID, 
    "db_direct_tbl_entry_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry to the Database direct table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_entry_set entry_ndx 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_ENTRY_NDX_ID, 
    "entry_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx:\n\r"
    "  Entry index in the Direct table. Range: 0 - 1023. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_entry_set entry_ndx 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_DATA_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  data.val:\n\r"
    "  Value of the direct table output. Range: 0 - 2^20-1. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_entry_set entry_ndx 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_ENTRY_SET_PMF_DB_DIRECT_TBL_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_ENTRY_GET_PMF_DB_DIRECT_TBL_ENTRY_GET_ID, 
    "db_direct_tbl_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set an entry to the Database direct table.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_entry_get entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_ENTRY_GET_PMF_DB_DIRECT_TBL_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_DIRECT_TBL_ENTRY_GET_PMF_DB_DIRECT_TBL_ENTRY_GET_ENTRY_NDX_ID, 
    "entry_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx:\n\r"
    "  Entry index in the Direct table. Range: 0 - 1023. (Petra-B) 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_direct_tbl_entry_get entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_DIRECT_TBL_ENTRY_GET_PMF_DB_DIRECT_TBL_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID, 
    "fem_input_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
#ifdef COMPILER_STRING_CONST_LIMIT
    "  Full documentation cannot be displayed with -pendantic compiler\n\r",
#else
    "  Select the input for each Field Extraction MACRO.The FEM processes the PCL\n\r"
    "  results, and extracts possible actions to be applied on the\n\r"
    "  packet.INPUT	SOC_SAND_IN	SOC_PB_PMF_LKP_PROFILE	*lkp_profile_ndx -		Lookup-Profile\n\r"
    "  information (id and cycle). 	SOC_SAND_IN	uint32	*fem_ndx -		FEM (Field\n\r"
    "  Extraction Macro) Index. Range: 0 - 7. (Petra-B)\n\r"
    "  SOC_SAND_IN	SOC_PB_PMF_FEM_INPUT_INFO	*info -		FEM input parameters: the\n\r"
    "  FEM-Program-Id and the FEM-Input source.RETURNS 	OK or Error\n\r"
    "  indicationREMARKS	None.\n\r"
    "",
#endif /* COMPILER_STRING_CONST_LIMIT */
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_FEM_NDX_ID, 
    "fem_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx:\n\r"
    "  SOC_SAND_IN	uint32	fem_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_INFO_DB_ID_ID, 
    "db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.db_id:\n\r"
    "  TCAM Database-ID to collect the result from. Valid only if this Database-ID\n\r"
    "  is valid for this Lookup-Profile (set via the soc_ppd_pmf_tcam_lookup_set\n\r"
    "  API).Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_INFO_SRC_ID, 
    "src", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FEM_INPUT_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_FEM_INPUT_SRC_rule) / sizeof(SOC_TMC_PMF_FEM_INPUT_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.src:\n\r"
    "  FEM-Input Source. The FEM-Input data can be taken from the direct table\n\r"
    "  result, directly from the PMF input vector, or from one of the 4 TCAM lookup\n\r"
    "  results\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_INFO_PGM_ID_ID, 
    "fem_pgm_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.pgm_id:\n\r"
    "  FEM-Program-Id: The FEM Program ID typically defines the PCL role, along with\n\r"
    "  the PCL result (e.g.: Filtering / metering / counting / trapping / Policy\n\r"
    "  based routing...).Range: 0 - 3. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_set cycle_ndx 0 id 0 fem_ndx 0 db_id 0\n\r"
    "  src 0 pgm_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_SET_PMF_DB_FEM_INPUT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_ID, 
    "fem_input_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
#ifdef COMPILER_STRING_CONST_LIMIT
    "  Full documentation cannot be displayed with -pendantic compiler\n\r",
#else
    "  Select the input for each Field Extraction MACRO.The FEM processes the PCL\n\r"
    "  results, and extracts possible actions to be applied on the\n\r"
    "  packet.INPUT	SOC_SAND_IN	SOC_PB_PMF_LKP_PROFILE	*lkp_profile_ndx -		Lookup-Profile\n\r"
    "  information (id and cycle). 	SOC_SAND_IN	uint32	*fem_ndx -		FEM (Field\n\r"
    "  Extraction Macro) Index. Range: 0 - 7. (Petra-B)\n\r"
    "  SOC_SAND_IN	SOC_PB_PMF_FEM_INPUT_INFO	*info -		FEM input parameters: the\n\r"
    "  FEM-Program-Id and the FEM-Input source.RETURNS 	OK or Error\n\r"
    "  indicationREMARKS	None.\n\r"
    "",
#endif /* COMPILER_STRING_CONST_LIMIT */
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_get cycle_ndx 0 id 0 fem_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_LKP_PROFILE_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_get cycle_ndx 0 id 0 fem_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_LKP_PROFILE_NDX_ID_ID, 
    "lookup_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_ndx.id:\n\r"
    "  Lookup-Profile-Id. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_get cycle_ndx 0 id 0 fem_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_FEM_NDX_ID, 
    "fem_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx:\n\r"
    "  SOC_SAND_IN	uint32	fem_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_fem_input_get cycle_ndx 0 id 0 fem_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_FEM_INPUT_GET_PMF_DB_FEM_INPUT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID, 
    "tag_select_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Tag value source per Tag profile. The TAG source designates the data\n\r"
    "  location to take the Tag value from, and where only the lsb bits are used\n\r"
    "  (the number of bits used depends on the Tag-Type).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_set tag_profile_ndx 0 tag_type_ndx 0\n\r"
    "  stat_tag_lsb_position 0 val_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_TAG_PROFILE_NDX_ID, 
    "tag_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_profile_ndx:\n\r"
    "  Tag-Profile Index. Set per PMF-Program-Id. Range: 0 - 7. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_set tag_profile_ndx 0 tag_type_ndx 0\n\r"
    "  stat_tag_lsb_position 0 val_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_TAG_TYPE_NDX_ID, 
    "tag_type_ndx", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TAG_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_TAG_TYPE_rule) / sizeof(SOC_TMC_PMF_TAG_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_type_ndx:\n\r"
    "  Tag type for which the Tag source is selected.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_set tag_profile_ndx 0 tag_type_ndx 0\n\r"
    "  stat_tag_lsb_position 0 val_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_TAG_SRC_STAT_TAG_LSB_POSITION_ID, 
    "stat_tag_lsb_position", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_src.stat_tag_lsb_position:\n\r"
    "  Bit position in the Tag value of the lsb of the final Statistic-Tag. Valid\n\r"
    "  only if the Tag-Type is Statistic-Tag.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_set tag_profile_ndx 0 tag_type_ndx 0\n\r"
    "  stat_tag_lsb_position 0 val_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_TAG_SRC_VAL_SRC_ID, 
    "val_src", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TAG_VAL_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TAG_VAL_SRC_rule) / sizeof(SOC_TMC_PMF_TAG_VAL_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_src.val_src:\n\r"
    "  Tag value source to get the Tag value from.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_set tag_profile_ndx 0 tag_type_ndx 0\n\r"
    "  stat_tag_lsb_position 0 val_src 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_SET_PMF_DB_TAG_SELECT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_ID, 
    "tag_select_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Tag value source per Tag profile. The TAG source designates the data\n\r"
    "  location to take the Tag value from, and where only the lsb bits are used\n\r"
    "  (the number of bits used depends on the Tag-Type).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_get tag_profile_ndx 0 tag_type_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_TAG_PROFILE_NDX_ID, 
    "tag_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_profile_ndx:\n\r"
    "  Tag-Profile Index. Set per PMF-Program-Id. Range: 0 - 7. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_get tag_profile_ndx 0 tag_type_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_TAG_TYPE_NDX_ID, 
    "tag_type_ndx", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TAG_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_TAG_TYPE_rule) / sizeof(SOC_TMC_PMF_TAG_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tag_type_ndx:\n\r"
    "  Tag type for which the Tag source is selected.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_db_tag_select_get tag_profile_ndx 0 tag_type_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_DB_TAG_SELECT_GET_PMF_DB_TAG_SELECT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID, 
    "fem_select_bits_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the location of 4 bits from the FEM-key that select the performed action\n\r"
    "  format for this key (configure the Select-4-bits table).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_set cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
    "  sel_bit_msb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_set cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
    "  sel_bit_msb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_set cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
    "  sel_bit_msb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_FEM_PGM_NDX_ID, 
    "fem_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_pgm_ndx:\n\r"
    "  FEM-Program-Id. Is set with the FEM input source. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_set cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
    "  sel_bit_msb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_INFO_SEL_BIT_MSB_ID, 
    "sel_bit_msb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.sel_bit_msb:\n\r"
    "  Set the location of the MSB of the consecutive selected bits. Range: 3 - 31.\n\r"
    "  (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_set cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
    "  sel_bit_msb 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_SET_PMF_FEM_SELECT_BITS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_ID, 
    "fem_select_bits_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the location of 4 bits from the FEM-key that select the performed action\n\r"
    "  format for this key (configure the Select-4-bits table).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_get cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_get cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_get cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_FEM_PGM_NDX_ID, 
    "fem_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_pgm_ndx:\n\r"
    "  FEM-Program-Id. Is set with the FEM input source. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_select_bits_get cycle_ndx 0 id 0 fem_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_SELECT_BITS_GET_PMF_FEM_SELECT_BITS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID, 
    "fem_action_format_map_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the location of 4 bits from the FEM-key that select the performed action\n\r"
    "  format for this key (configure the Select-4-bits table).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_FEM_PGM_NDX_ID, 
    "fem_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_pgm_ndx:\n\r"
    "  FEM-Program-Id. Is set with the FEM input source. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_SELECTED_BITS_NDX_ID, 
    "selected_bits_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  selected_bits_ndx:\n\r"
    "  Value of the selected-bits with soc_ppd_pmf_fem_select_bits_set() API. Range: 0 -\n\r"
    "  15. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    6, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_INFO_MAP_DATA_ID, 
    "map_data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.map_data:\n\r"
    "  One of the 3 source options during the Field Extraction (with extracting from\n\r"
    "  the FEM-Key or from a constant value). Is set per Selected-Bits value (4b)\n\r"
    "  and is not a segment of the FEM-Key. Range: 0 - 15. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_INFO_ACTION_FOMAT_ID_ID, 
    "action_fomat_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_fomat_id:\n\r"
    "  Action-format Id: One the four actions set by this FEM. Range: 0 - 3.\n\r"
    "  (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_set cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0 map_data 0 action_fomat_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_SET_PMF_FEM_ACTION_FORMAT_MAP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID, 
    "fem_action_format_map_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the location of 4 bits from the FEM-key that select the performed action\n\r"
    "  format for this key (configure the Select-4-bits table).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_get cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_get cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_get cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_FEM_PGM_NDX_ID, 
    "fem_pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_pgm_ndx:\n\r"
    "  FEM-Program-Id. Is set with the FEM input source. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_get cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_SELECTED_BITS_NDX_ID, 
    "selected_bits_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  selected_bits_ndx:\n\r"
    "  Value of the selected-bits with soc_ppd_pmf_fem_select_bits_set() API. Range: 0 -\n\r"
    "  15. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_map_get cycle_ndx 0 id 0\n\r"
    "  fem_pgm_ndx 0 selected_bits_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_MAP_GET_PMF_FEM_ACTION_FORMAT_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID, 
    "fem_action_format_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the format of the each action done by the Field Extraction Macro.\n\r"
    "  Each FEM can perform up to four different actions.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ACTION_FOMAT_NDX_ID, 
    "action_fomat_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_fomat_ndx:\n\r"
    "  Action-Format-Id. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_BASE_VALUE_ID, 
    "base_value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.base_value:\n\r"
    "  Add a constant base-value (offset) to the FEM action value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_BIT_LOC_INDEX_ID, 
    "bit_loc_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bit_loc_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_BIT_LOC_VAL_ID, 
    "bit_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.bit_loc[ prm_bit_loc_index].val:\n\r"
    "  Value of the bit location / bit value according to the 'type'.If the type is\n\r"
    "  'CST', this value indicates the constant value of the bit (0 or 1). If the\n\r"
    "  type is 'KEY', then the bit value is taken from the bit location indicated by\n\r"
    "  this field.If the type is 'MAP_DATA', then the bit value is taken from the\n\r"
    "  'map_data' value set per Selected-bits value in the\n\r"
    "  soc_ppd_pmf_fem_action_format_map_set() API.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_BIT_LOC_TYPE_ID, 
    "bit_type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FEM_BIT_LOC_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_FEM_BIT_LOC_TYPE_rule) / sizeof(SOC_TMC_PMF_FEM_BIT_LOC_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.bit_loc[ prm_bit_loc_index].type:\n\r"
    "  Bit location type.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_SIZE_ID, 
    "size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.size:\n\r"
    "  Set the size of the Field-bit-location parameter.The coherency between the\n\r"
    "  maximum FEM-ID value width (4, 14, or 17 bits) and the size is checked.\n\r"
    "  Range: 0 - 17. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_INFO_TYPE_ID, 
    "action_type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_FEM_ACTION_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_FEM_ACTION_TYPE_rule) / sizeof(SOC_TMC_PMF_FEM_ACTION_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.type:\n\r"
    "  Action type of the FEM.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_set cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0 base_value 0 bit_loc_index 0 val 0 type 0 size 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_SET_PMF_FEM_ACTION_FORMAT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ID, 
    "fem_action_format_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the format of the each action done by the Field Extraction Macro.\n\r"
    "  Each FEM can perform up to four different actions.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_get cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_FEM_NDX_CYCLE_NDX_ID, 
    "cycle_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.cycle_ndx:\n\r"
    "  Cycle index in which the access occurs. Range: 0 - 1. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_get cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_FEM_NDX_ID_ID, 
    "fem_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fem_ndx.id:\n\r"
    "  FEM-Id. In Petra-B, the FEM ids 0-1 have an output of 4 bits, the ids 2-4 of\n\r"
    "  14 bits, the ids 5-7of 17 bits.Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_get cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ACTION_FOMAT_NDX_ID, 
    "action_fomat_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action_fomat_ndx:\n\r"
    "  Action-Format-Id. Range: 0 - 3. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_fem_action_format_get cycle_ndx 0 id 0\n\r"
    "  action_fomat_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_FEM_ACTION_FORMAT_GET_PMF_FEM_ACTION_FORMAT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID, 
    "pgm_selection_entry_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set which programs are relevant per value of a program selection parameter.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_PGM_SEL_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_PGM_SEL_TYPE_rule) / sizeof(SOC_TMC_PMF_PGM_SEL_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.type:\n\r"
    "  Type of the Program selection entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LLVP_PFC_PMF_PRO_ID, 
    "tbl7_pmf_pro", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.llvp_pfc.pmf_pro:\n\r"
    "  PMF-Profile of the Packet-Format-Code. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LLVP_PFC_LLVP_ID, 
    "tbl7_llvp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.llvp_pfc.llvp:\n\r"
    "  LLVP-Incoming-Tag-Structure. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_ELK_FOUND_ID, 
    "tbl5_elk_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.elk_found:\n\r"
    "  ELK-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_TCAM_FOUND_ID, 
    "tbl5_tcam_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.tcam_found:\n\r"
    "  TCAM-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_LPM_2ND_NOT_DFLT_ID, 
    "tbl5_lpm_2nd_not_dflt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lpm_2nd_not_dflt:\n\r"
    "  LPM 2nd Lookup-Not-Default\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_LPM_1ST_NOT_DFLT_ID, 
    "tbl5_lpm_1st_not_dflt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lpm_1st_not_dflt:\n\r"
    "  LPM 1st Lookup-Not-Default\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_SEM_2ND_FOUND_ID, 
    "tbl5_sem_2nd_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.sem_2nd_found:\n\r"
    "  Small Exact Match Second Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_SEM_1ST_FOUND_ID, 
    "tbl5_sem_1st_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.sem_1st_found:\n\r"
    "  Small Exact Match First Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_LEM_2ND_FOUND_ID, 
    "tbl5_lem_2nd_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lem_2nd_found:\n\r"
    "  Large Exact Match Second Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_LKP_LEM_1ST_FOUND_ID, 
    "tbl5_lem_1st_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lem_1st_found:\n\r"
    "  Large Exact Match First Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_PRSR_PMF_PORT_PMF_ID, 
    "tbl6_port_pmf", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.prsr_pmf.port_pmf:\n\r"
    "  Port-PMF-profile. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_PRSR_PMF_PRSR_ID, 
    "tbl6_prsr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.prsr_pmf.prsr:\n\r"
    "  Parser-PMF-Profile. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_FWD_TTC_TTC_ID, 
    "tbl4_ttc", 
    (PARAM_VAL_RULES *)&SOC_TMC_TUNNEL_TERM_CODE_rule[0], 
    (sizeof(SOC_TMC_TUNNEL_TERM_CODE_rule) / sizeof(SOC_TMC_TUNNEL_TERM_CODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.fwd_ttc.ttc:\n\r"
    "  Tunnel-Termination code. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_FWD_TTC_FWD_ID, 
    "tbl4_fwd", 
    (PARAM_VAL_RULES *)&SOC_TMC_PKT_FRWRD_TYPE_rule[0], 
    (sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule) / sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.fwd_ttc.fwd:\n\r"
    "  Forwarding Code\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_PFQ_SEM_SEM_13_8_NDX_ID, 
    "tbl3_sem_13_8_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.pfq_sem.sem_13_8_ndx:\n\r"
    "  SEM-Index[13:8]. Range: 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_PFQ_SEM_PFQ_ID, 
    "tbl3_pfq", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.pfq_sem.pfq:\n\r"
    "  Packet-Format-Qualifier[0][1:0]. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_SEM_7_0_NDX_ID, 
    "tbl2_sem_7_0_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.sem_7_0_ndx:\n\r"
    "  Sem-Index[7:0]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_EEI_OUTLIF_7_0_ID, 
      "tbl1_eei_outlif_7_0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.eei_outlif_7_0:\n\r"
    "  EEI-or-Out-LIF value[7:0]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ENTRY_NDX_VAL_EEI_OUTLIF_15_8_ID, 
      "tbl0_eei_outlif_15_8", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.eei_outlif_15_8:\n\r"
    "  EEI-or-Out-LIF value[15:8]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_INFO_IS_PGM_VALID_INDEX_ID, 
    "is_pgm_valid_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  is_pgm_valid_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_INFO_IS_PGM_VALID_ID, 
    "is_pgm_valid", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_pgm_valid[ prm_is_pgm_valid_index]:\n\r"
    "  If True, then the considered program is valid for this entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_SET_PMF_PGM_SELECTION_ENTRY_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID, 
    "pgm_selection_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set which programs are relevant per value of a program selection parameter.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_get pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_PGM_SEL_TYPE_rule[0], 
    (sizeof(SOC_TMC_PMF_PGM_SEL_TYPE_rule) / sizeof(SOC_TMC_PMF_PGM_SEL_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.type:\n\r"
    "  Type of the Program selection entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_get pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LLVP_PFC_PMF_PRO_ID, 
    "tbl7_pmf_pro", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.llvp_pfc.pmf_pro:\n\r"
    "  PMF-Profile of the Packet-Format-Code. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LLVP_PFC_LLVP_ID, 
    "tbl7_llvp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.llvp_pfc.llvp:\n\r"
    "  LLVP-Incoming-Tag-Structure. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_ELK_FOUND_ID, 
    "tbl5_elk_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.elk_found:\n\r"
    "  ELK-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_TCAM_FOUND_ID, 
    "tbl5_tcam_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.tcam_found:\n\r"
    "  TCAM-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_LPM_2ND_NOT_DFLT_ID, 
    "tbl5_lpm_2nd_not_dflt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lpm_2nd_not_dflt:\n\r"
    "  LPM 2nd Lookup-Not-Default\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_LPM_1ST_NOT_DFLT_ID, 
    "tbl5_lpm_1st_not_dflt", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lpm_1st_not_dflt:\n\r"
    "  LPM 1st Lookup-Not-Default\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_SEM_2ND_FOUND_ID, 
    "tbl5_sem_2nd_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.sem_2nd_found:\n\r"
    "  Small Exact Match Second Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_SEM_1ST_FOUND_ID, 
    "tbl5_sem_1st_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.sem_1st_found:\n\r"
    "  Small Exact Match First Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_LEM_2ND_FOUND_ID, 
    "tbl5_lem_2nd_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lem_2nd_found:\n\r"
    "  Large Exact Match Second Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_LKP_LEM_1ST_FOUND_ID, 
    "tbl5_lem_1st_found", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.lkp.lem_1st_found:\n\r"
    "  Large Exact Match First Lookup-Found\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_PRSR_PMF_PORT_PMF_ID, 
    "tbl6_port_pmf", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.prsr_pmf.port_pmf:\n\r"
    "  Port-PMF-profile. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_PRSR_PMF_PRSR_ID, 
    "tbl6_prsr", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.prsr_pmf.prsr:\n\r"
    "  Parser-PMF-Profile. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_FWD_TTC_TTC_ID, 
    "tbl4_ttc", 
    (PARAM_VAL_RULES *)&SOC_TMC_TUNNEL_TERM_CODE_rule[0], 
    (sizeof(SOC_TMC_TUNNEL_TERM_CODE_rule) / sizeof(SOC_TMC_TUNNEL_TERM_CODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.fwd_ttc.ttc:\n\r"
    "  Tunnel-Termination code. Range: 0 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_FWD_TTC_FWD_ID, 
    "tbl4_fwd", 
    (PARAM_VAL_RULES *)&SOC_TMC_PKT_FRWRD_TYPE_rule[0], 
    (sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule) / sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.fwd_ttc.fwd:\n\r"
    "  Forwarding Code\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_PFQ_SEM_SEM_13_8_NDX_ID, 
    "tbl3_sem_13_8_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.pfq_sem.sem_13_8_ndx:\n\r"
    "  SEM-Index[13:8]. Range: 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_PFQ_SEM_PFQ_ID, 
    "tbl3_pfq", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.pfq_sem.pfq:\n\r"
    "  Packet-Format-Qualifier[0][1:0]. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_SEM_7_0_NDX_ID, 
    "tbl2_sem_7_0_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.sem_7_0_ndx:\n\r"
    "  Sem-Index[7:0]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_EEI_OUTLIF_7_0_ID, 
      "tbl1_eei_outlif_7_0", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.eei_outlif_7_0:\n\r"
    "  EEI-or-Out-LIF value[7:0]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ENTRY_NDX_VAL_EEI_OUTLIF_15_8_ID, 
      "tbl0_eei_outlif_15_8", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx.val.eei_outlif_15_8:\n\r"
    "  EEI-or-Out-LIF value[15:8]. Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_selection_entry_set pmf_pro 0 llvp 0 elk_found\n\r"
    "  0 tcam_found 0 lpm_2nd_not_dflt 0 lpm_1st_not_dflt 0 sem_2nd_found 0\n\r"
    "  sem_1st_found 0 lem_2nd_found 0 lem_1st_found 0 port_pmf 0 prsr 0 ttc 0 fwd 0\n\r"
    "  sem_13_8_ndx 0 pfq 0 sem_7_0_ndx 0 eei_outlif_7_0 0 eei_outlif_15_8 0 type 0\n\r"
    "  is_pgm_valid_index 0 is_pgm_valid 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SELECTION_ENTRY_GET_PMF_PGM_SELECTION_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  

  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_ID, 
    "pgm_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Program properties, e.g. Lookup-Profile-IDs. The Copy Engine\n\r"
    "  instructions are set via the PMF Copy Engine APIs.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_COPY_PGM_VAR_ID, 
    "copy_pgm_var", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.copy_pgm_var:\n\r"
    "  Copy-Program-Variable. Field of the IRPP info, it can be used in the Copy\n\r"
    "  Engine output vector construction.Range: 0 - 255. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_FC_TYPE_ID, 
    "fc_type", 
    (PARAM_VAL_RULES *)&SOC_PB_PORTS_FC_TYPE_rule[0],
    (sizeof(SOC_PB_PORTS_FC_TYPE_rule) / sizeof(SOC_PB_PORTS_FC_TYPE_rule[0])) - 1,
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.copy_pgm_var:\n\r"
    "  Copy-Program-Variable. Field of the IRPP info, it can be used in the Copy\n\r"
    "  Engine output vector construction.Range: 0 - 255. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_BYTES_TO_RMV_NOF_BYTES_ID, 
    "to_rmv_nof_bytes", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.bytes_to_rmv.nof_bytes:\n\r"
    "  Number of bytes to remove.Range: 0 - 31. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_BYTES_TO_RMV_HEADER_TYPE_ID, 
    "to_rmv_header_type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_rule[0], 
    (sizeof(SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_rule) / sizeof(SOC_TMC_PMF_PGM_BYTES_TO_RMV_HDR_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.bytes_to_rmv.header_type:\n\r"
    "  Header base for the byte removal\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_HEADER_TYPE_ID, 
    "port_header_type", 
    (PARAM_VAL_RULES *)&SOC_PB_PETRA_PORT_HEADER_TYPE_rule[0], 
    (sizeof(SOC_PB_PETRA_PORT_HEADER_TYPE_rule) / sizeof(SOC_PB_PETRA_PORT_HEADER_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.header_type:\n\r"
    "  The Header type sets which system headers (FTMH, PPH) are part of the packet\n\r"
    "  at the end of the ingress processing\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_TAG_PROFILE_ID_ID, 
    "tag_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.tag_profile_id:\n\r"
    "  Tag-Profile Index. Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_LKP_PROFILE_ID_INDEX_ID, 
    "lkp_profile_id_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_profile_id_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_SET_PMF_PGM_SET_INFO_LKP_PROFILE_ID_ID, 
    "lkp_profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.lkp_profile_id[ prm_lkp_profile_id_index]:\n\r"
    "  Lookup-Profile-Ids for the program (one per cycle). Range: 0 - 7. (Petra-B)\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_set pmf_pgm_ndx 0 copy_pgm_var 0 nof_bytes 0\n\r"
    "  header_type 0 header_type 0 tag_profile_id 0 lkp_profile_id_index 0\n\r"
    "  lkp_profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_SET_PMF_PGM_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_GET_PMF_PGM_GET_ID, 
    "pgm_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Program properties, e.g. Lookup-Profile-IDs. The Copy Engine\n\r"
    "  instructions are set via the PMF Copy Engine APIs.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_get pmf_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_GET_PMF_PGM_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PMF_PGM_GET_PMF_PGM_GET_PMF_PGM_NDX_ID, 
    "pgm_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pmf_pgm_ndx:\n\r"
    "  PMF-Program-ID. Range: 0 - 31. (Petra-B)	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_pgm_get pmf_pgm_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PMF_PGM_GET_PMF_PGM_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_PMF_LOW_LEVEL_ID, 
    "pmf_low_level", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_PMF_LOW_LEVEL_FIRST_ID,FUN_PB_API_PMF_LOW_LEVEL_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } pmf_low_level*/
#ifdef UI_CNT/* { cnt*/
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID, 
    "counters_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the Counter Processor: its counting mode and its counting source.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_PROCESSOR_NDX_ID, 
    "processor_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0], 
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  processor_ndx:\n\r"
    "  Counter processor index	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_STAG_LSB_ID, 
    "stag_lsb", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.stag_lsb:\n\r"
    "  Define the first significant bit (for a range of consecutive 12 bits) in the\n\r"
    "  Statistic-Tag for the counting. Must be set only if the counting source is\n\r"
    "  'STAG'. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_VOQ_CNT_Q_SET_SIZE_ID, 
    "q_set_size", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_Q_SET_SIZE_rule[0], 
    (sizeof(SOC_PB_CNT_Q_SET_SIZE_rule) / sizeof(SOC_PB_CNT_Q_SET_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.voq_cnt.q_set_size:\n\r"
    "  Number of consecutive queues to count together per counter. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_VOQ_CNT_START_Q_ID, 
    "start_q", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.voq_cnt.start_q:\n\r"
    "  The start queue from which counting per queue is performed. Range: 0 - 32K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_MODE_EG_BASE_VAL_ID, 
    "eg_base_val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.mode_eg.base_val:\n\r"
    "  Counter-ID base value. Range: 0 - 8K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  base_val 0 type 0 resolution 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_MODE_EG_TYPE_ID, 
    "eg_type", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.mode_eg.type:\n\r"
    "  Define the Counter-ID format.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  base_val 0 type 0 resolution 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_MODE_EG_RESOLUTION_ID, 
    "eg_resolution", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.mode_eg.resolution:\n\r"
    "  Define the egress counting resolution.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  base_val 0 type 0 resolution 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_MODE_ING_ID, 
    "mode_ing", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_MODE_STATISTICS_rule[0], 
    (sizeof(SOC_PB_CNT_MODE_STATISTICS_rule) / sizeof(SOC_PB_CNT_MODE_STATISTICS_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.mode_ing:\n\r"
    "  Define the ingress counting mode. Must be set only if the counting source is\n\r"
    "  not 'EGR_PP'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_SET_COUNTERS_SET_INFO_SRC_TYPE_ID, 
    "src_type", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_SRC_TYPE_rule[0], 
    (sizeof(SOC_PB_CNT_SRC_TYPE_rule) / sizeof(SOC_PB_CNT_SRC_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.src_type:\n\r"
    "  Define the counting source type.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_set processor_ndx 0 stag_lsb 0 q_set_size 0 start_q 0\n\r"
    "  mode_eg 0 mode_ing 0 src_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_SET_COUNTERS_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_GET_COUNTERS_GET_ID, 
    "counters_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the Counter Processor: its counting mode and its counting source.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_get processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_GET_COUNTERS_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_COUNTERS_GET_COUNTERS_GET_PROCESSOR_NDX_ID, 
    "processor_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0], 
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  processor_ndx:\n\r"
    "  Counter processor index	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt counters_get processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_COUNTERS_GET_COUNTERS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_STATUS_GET_STATUS_GET_ID, 
    "status_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get the current status of the counter processor.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt status_get processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_STATUS_GET_STATUS_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_STATUS_GET_STATUS_GET_PROCESSOR_NDX_ID, 
    "processor_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0], 
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  processor_ndx:\n\r"
    "  Counter processor index	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt status_get processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_STATUS_GET_STATUS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_ALGORITHMIC_READ_ALGORITHMIC_READ_ID, 
    "algorithmic_read", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Read the counter values saved in a cache according to the polling algorithm\n\r"
    "  (algorithmic method).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt algorithmic_read processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_ALGORITHMIC_READ_ALGORITHMIC_READ_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_ALGORITHMIC_READ_ALGORITHMIC_READ_PROCESSOR_NDX_ID, 
    "processor_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0], 
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  processor_ndx:\n\r"
    "  Counter processor index	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt algorithmic_read processor_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_ALGORITHMIC_READ_ALGORITHMIC_READ_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_DIRECT_READ_DIRECT_READ_ID, 
    "direct_read", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Read the counter value according to the counter.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt direct_read processor_ndx 0 counter_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_DIRECT_READ_DIRECT_READ_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_DIRECT_READ_DIRECT_READ_PROCESSOR_NDX_ID, 
    "processor_ndx", 
    (PARAM_VAL_RULES *)&SOC_PB_CNT_PROCESSOR_ID_rule[0], 
    (sizeof(SOC_PB_CNT_PROCESSOR_ID_rule) / sizeof(SOC_PB_CNT_PROCESSOR_ID_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  processor_ndx:\n\r"
    "  Counter processor index	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt direct_read processor_ndx 0 counter_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_DIRECT_READ_DIRECT_READ_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_DIRECT_READ_DIRECT_READ_COUNTER_NDX_ID, 
    "counter_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  counter_ndx:\n\r"
    "  Counter index. Range: 0 - 8K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt direct_read processor_ndx 0 counter_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_DIRECT_READ_DIRECT_READ_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_Q2CNT_ID_Q2CNT_ID_ID, 
    "q2cnt_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Convert a queue index to the counter index.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt q2cnt_id queue_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_Q2CNT_ID_Q2CNT_ID_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_Q2CNT_ID_Q2CNT_ID_QUEUE_NDX_ID, 
    "queue_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  queue_ndx:\n\r"
    "  Queue index.Range: 0 - 32K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt q2cnt_id queue_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_Q2CNT_ID_Q2CNT_ID_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_CNT2Q_ID_CNT2Q_ID_ID, 
    "cnt2q_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Convert a counter index to the respective queue index.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt cnt2q_id counter_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_CNT2Q_ID_CNT2Q_ID_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_CNT2Q_ID_CNT2Q_ID_COUNTER_NDX_ID, 
    "counter_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  counter_ndx:\n\r"
    "  Counter index.Range: 0 - 8K-1.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt cnt2q_id counter_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_CNT2Q_ID_CNT2Q_ID_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_ID, 
    "meter_hdr_compensation_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the header compensation factor for the counter and meter modules to\n\r"
    "  enable a meter and counter processing of this packet according to its\n\r"
    "  original packet size.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt meter_hdr_compensation_set port_ndx 0 hdr_compensation 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_PORT_NDX_ID, 
    "port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  Incoming PP port id.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt meter_hdr_compensation_set port_ndx 0 hdr_compensation 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_HDR_COMPENSATION_ID, 
    "hdr_compensation", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  hdr_compensation:\n\r"
    "  Header compensation value to remove from the packet size.Units: Bytes. Range:\n\r"
    "  -15 - 15.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt meter_hdr_compensation_set port_ndx 0 hdr_compensation 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_METER_HDR_COMPENSATION_SET_METER_HDR_COMPENSATION_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_METER_HDR_COMPENSATION_GET_METER_HDR_COMPENSATION_GET_ID, 
    "meter_hdr_compensation_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the header compensation factor for the counter and meter modules to\n\r"
    "  enable a meter and counter processing of this packet according to its\n\r"
    "  original packet size.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt meter_hdr_compensation_get port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_METER_HDR_COMPENSATION_GET_METER_HDR_COMPENSATION_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_CNT_METER_HDR_COMPENSATION_GET_METER_HDR_COMPENSATION_GET_PORT_NDX_ID, 
    "port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  Incoming PP port id.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api cnt meter_hdr_compensation_get port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_CNT_METER_HDR_COMPENSATION_GET_METER_HDR_COMPENSATION_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_CNT_ID, 
    "cnt", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_CNT_FIRST_ID,FUN_PB_API_CNT_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } cnt*/
#ifdef UI_TDM/* { tdm*/
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_ID, 
    "ftmh_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the FTMH header operation (added/unchanged/removed) at the ingress\n\r"
    "  and egress, with the FTMH fields if added.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_PORT_NDX_ID, 
    "port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  FAP Port index.Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_ACTION_EG_ID, 
    "action_eg", 
    (PARAM_VAL_RULES *)&SOC_PB_TDM_EG_ACTION_rule[0], 
    (sizeof(SOC_PB_TDM_EG_ACTION_rule) / sizeof(SOC_PB_TDM_EG_ACTION_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_eg:\n\r"
    "  Action (removing or not) to operate when the TDM cells are transmitted. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    5, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_FTMH_MC_ID_ID, 
    "mc_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ftmh.standard_mc.mc_id:\n\r"
    "  Multicast Id. Range: 0 - 16K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_FTMH_STANDARD_USER_DEF_ID, 
    "user_def", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ftmh.standard_mc.user_def:\n\r"
    "  The user-defined fields (i.e., 32 bits Customer Header to embed). Are\n\r"
    "  embedded to the bits 47:32, 23:20, 19:17 and 15:14 in the header according to\n\r"
    "  a static mapping. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_FTMH_STANDARD_UC_SYS_PHY_PORT_ID, 
    "sys_phy_port", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ftmh.standard_uc.sys_phy_port:\n\r"
    "  Destination system physical port.Range: 0 - 4K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },    
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_FTMH_OPT_UC_DEST_FAP_ID_ID, 
    "dest_fap_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ftmh.opt_uc.dest_fap_id:\n\r"
    "  Destination FAP Id. Range: 0 - 1K-1.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_FTMH_OPT_UC_DEST_IF_ID, 
    "dest_if", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.ftmh.opt_uc.dest_if:\n\r"
    "  Destination interface: the egress interface with its channel.Range: 0 - 31.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_IS_MC_ID, 
    "is_mc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_mc:\n\r"
    "  If TRUE, then the destination FTMH to add is of type multicast. Must be set\n\r"
    "  only if the ingress action is 'ADD'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_SET_FTMH_SET_INFO_ACTION_ING_ID, 
    "action_ing", 
    (PARAM_VAL_RULES *)&SOC_PB_TDM_ING_ACTION_rule[0], 
    (sizeof(SOC_PB_TDM_ING_ACTION_rule) / sizeof(SOC_PB_TDM_ING_ACTION_rule[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_ing:\n\r"
    "  Action (adding or not) to operate when the TDM cells are received. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_set port_ndx 0 action_eg 0 mc_id 0 user_def 0 sys_phy_port 0\n\r"
    "  user_def 0 mc_id 0 dest_fap_id 0 dest_if 0 is_mc 0 action_ing 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_SET_FTMH_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_GET_FTMH_GET_ID, 
    "ftmh_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the FTMH header operation (added/unchanged/removed) at the ingress\n\r"
    "  and egress, with the FTMH fields if added.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_get port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_GET_FTMH_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_FTMH_GET_FTMH_GET_PORT_NDX_ID, 
    "port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  port_ndx:\n\r"
    "  FAP Port index.Range: 0 - 79.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm ftmh_get port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_FTMH_GET_FTMH_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_OPT_SIZE_RANGE_SET_OPT_SIZE_RANGE_SET_ID, 
    "opt_size_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the size limitations for the TDM cells in the Optimized FTMH TDM\n\r"
    "  traffic mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm opt_size_range_set cell_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_OPT_SIZE_RANGE_SET_OPT_SIZE_RANGE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_OPT_SIZE_RANGE_SET_OPT_SIZE_RANGE_SET_CELL_SIZE_ID, 
    "cell_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cell_size:\n\r"
    "  Cell constant size for the TDM cells (includes the Optimized FTMH). Unit:\n\r"
    "  Bytes. Range: 65 - 128.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm opt_size_range_set cell_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_OPT_SIZE_RANGE_SET_OPT_SIZE_RANGE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_OPT_SIZE_RANGE_GET_OPT_SIZE_RANGE_GET_ID, 
    "opt_size_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the size limitations for the TDM cells in the Optimized FTMH TDM\n\r"
    "  traffic mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm opt_size_range_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_OPT_SIZE_RANGE_GET_OPT_SIZE_RANGE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_ID, 
    "stand_size_range_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the size limitations for the TDM cells in the Standard FTMH TDM\n\r"
    "  traffic mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm stand_size_range_set size_range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_SIZE_RANGE_ID, 
    "size_range_start", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  size_range:\n\r"
    "  TDM cell size range (includes the Standard FTMH).Unit: Bytes. Range: 65 - 128.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm stand_size_range_set size_range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_SIZE_RANGE_MAX_ID, 
    "size_range_end", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  size_range:\n\r"
    "  TDM cell size range (includes the Standard FTMH).Unit: Bytes. Range: 65 - 128.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm stand_size_range_set size_range 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_STAND_SIZE_RANGE_SET_STAND_SIZE_RANGE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_TDM_STAND_SIZE_RANGE_GET_STAND_SIZE_RANGE_GET_ID, 
    "stand_size_range_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Configure the size limitations for the TDM cells in the Standard FTMH TDM\n\r"
    "  traffic mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm stand_size_range_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_STAND_SIZE_RANGE_GET_STAND_SIZE_RANGE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_ID, 
    "mc_static_route_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the TDM multicast static route configuration. Up to 16 routes can be\n\r"
    "  defined. For a TDM Multicast cell, its selected Route is done according to\n\r"
    "  the 4 MSB of its Multicast-ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm mc_static_route_set mc_id_route_ndx 0 link_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_MC_ID_ROUTE_NDX_ID, 
    "mc_id_route_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mc_id_route_ndx:\n\r"
    "  TDM Multicast route index. This route is selected if the 4 MSB of the\n\r"
    "  Multicast-ID is equal to it.Range: 0 - 15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm mc_static_route_set mc_id_route_ndx 0 link_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_ROUTE_INFO_LINK_BITMAP_ID, 
    "link_bitmap", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  route_info.link_bitmap:\n\r"
    "  Bitmap of the fabric links to define the set of links used for specific MC\n\r"
    "  route cell.For each link (in the range 0 - 35), if its bit is set, then the\n\r"
    "  respective link is used for this Multicast route.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm mc_static_route_set mc_id_route_ndx 0 link_bitmap 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_MC_STATIC_ROUTE_SET_MC_STATIC_ROUTE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_MC_STATIC_ROUTE_GET_MC_STATIC_ROUTE_GET_ID, 
    "mc_static_route_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the TDM multicast static route configuration. Up to 16 routes can be\n\r"
    "  defined. For a TDM Multicast cell, its selected Route is done according to\n\r"
    "  the 4 MSB of its Multicast-ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm mc_static_route_get mc_id_route_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_MC_STATIC_ROUTE_GET_MC_STATIC_ROUTE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TDM_MC_STATIC_ROUTE_GET_MC_STATIC_ROUTE_GET_MC_ID_ROUTE_NDX_ID, 
    "mc_id_route_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mc_id_route_ndx:\n\r"
    "  TDM Multicast route index. This route is selected if the 4 MSB of the\n\r"
    "  Multicast-ID is equal to it.Range: 0 - 15.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tdm mc_static_route_get mc_id_route_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TDM_MC_STATIC_ROUTE_GET_MC_STATIC_ROUTE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_TDM_ID, 
    "tdm", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_TDM_FIRST_ID,FUN_PB_API_TDM_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } tdm*/

#ifdef UI_EGR_ACL/* { egr_acl*/
  { 
    PARAM_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_ID, 
    "dp_values_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the predefined Drop Precedence values if a DP modification must be done.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl dp_values_set val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_DP_VAL_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl dp_values_set val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_DP_VAL_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  dp_val.val[ prm_val_index]:\n\r"
    "  DP value.Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl dp_values_set val_index 0 val 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DP_VALUES_SET_DP_VALUES_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DP_VALUES_GET_DP_VALUES_GET_ID, 
    "dp_values_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the predefined Drop Precedence values if a DP modification must be done.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl dp_values_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DP_VALUES_GET_DP_VALUES_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_ID, 
    "l4_protocol_code_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Protocol code value according to the L4 Protocol code index. It\n\r"
    "  determines the protocol field in L3 ACL Key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl l4_protocol_code_set code_ndx 0 protocol_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_CODE_NDX_ID, 
    "code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  code_ndx:\n\r"
    "  Protocol Code index. Range: 1 - 15. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl l4_protocol_code_set code_ndx 0 protocol_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_PROTOCOL_CODE_ID, 
    "protocol_code", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  protocol_code:\n\r"
    "  Protocol code value.Range: 0 - 255.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl l4_protocol_code_set code_ndx 0 protocol_code 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_L4_PROTOCOL_CODE_SET_L4_PROTOCOL_CODE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_L4_PROTOCOL_CODE_GET_L4_PROTOCOL_CODE_GET_ID, 
    "l4_protocol_code_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Protocol code value according to the L4 Protocol code index. It\n\r"
    "  determines the protocol field in L3 ACL Key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl l4_protocol_code_get code_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_L4_PROTOCOL_CODE_GET_L4_PROTOCOL_CODE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_L4_PROTOCOL_CODE_GET_L4_PROTOCOL_CODE_GET_CODE_NDX_ID, 
    "code_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  code_ndx:\n\r"
    "  Protocol Code index. Range: 1 - 15. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl l4_protocol_code_get code_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_L4_PROTOCOL_CODE_GET_L4_PROTOCOL_CODE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_SET_PORT_SET_ID, 
    "port_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Port ACL properties: ACL profile and ACL Data. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_set pp_port_ndx 0 acl_data 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_SET_PORT_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_SET_PORT_SET_PP_PORT_NDX_ID, 
    "pp_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pp_port_ndx:\n\r"
    "  PP-Port.Range: 0 - 63. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_set pp_port_ndx 0 acl_data 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_SET_PORT_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_SET_PORT_SET_INFO_ACL_DATA_ID, 
    "acl_data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.acl_data:\n\r"
    "  ACL Data part of the key construction.Range: 0 - 63. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_set pp_port_ndx 0 acl_data 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_SET_PORT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_SET_PORT_SET_INFO_PROFILE_ID, 
    "profile", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.profile:\n\r"
    "  Port ACL profile Range: 0 - 3. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_set pp_port_ndx 0 acl_data 0 profile 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_SET_PORT_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_GET_PORT_GET_ID, 
    "port_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Port ACL properties: ACL profile and ACL Data. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_get pp_port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_GET_PORT_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_PORT_GET_PORT_GET_PP_PORT_NDX_ID, 
    "pp_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  pp_port_ndx:\n\r"
    "  PP-Port.Range: 0 - 63. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl port_get pp_port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_PORT_GET_PORT_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID, 
    "key_profile_map_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the mapping between the forwarding type and Port-ACL-profile to the\n\r"
    "  ACL-Key-profile. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_set fwd_type 0 acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_FWD_TYPE_ID, 
    "fwd_type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PKT_FRWRD_TYPE_rule[0], 
    (sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule) / sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fwd_type:\n\r"
    "  Packet forwarding type. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_set fwd_type 0 acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ACL_PROFILE_NDX_ID, 
    "acl_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  acl_profile_ndx:\n\r"
    "  Port ACL profile.Range: 0 - 3.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_set fwd_type 0 acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_KEY_PROFILE_ID, 
    "db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_id:\n\r"
    "  ACL Key profile.Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_set fwd_type 0 acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_GET_KEY_PROFILE_MAP_GET_ID, 
    "key_profile_map_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the mapping between the forwarding type and Port-ACL-profile to the\n\r"
    "  ACL-Key-profile. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_get acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_GET_KEY_PROFILE_MAP_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_GET_KEY_PROFILE_MAP_GET_ACL_PROFILE_NDX_ID, 
    "acl_profile_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  acl_profile_ndx:\n\r"
    "  Port ACL profile.Range: 0 - 3.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_get acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_GET_KEY_PROFILE_MAP_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_KEY_PROFILE_MAP_GET_KEY_PROFILE_MAP_GET_FWD_TYPE_ID, 
    "fwd_type", 
    (PARAM_VAL_RULES *)&SOC_TMC_PKT_FRWRD_TYPE_rule[0], 
    (sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule) / sizeof(SOC_TMC_PKT_FRWRD_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  fwd_type:\n\r"
    "  Packet forwarding type. 	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl key_profile_map_set fwd_type 0 acl_profile_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_KEY_PROFILE_MAP_SET_KEY_PROFILE_MAP_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_CREATE_DB_CREATE_ID, 
    "db_create", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Create the Database. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_create db_ndx 0 db_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_CREATE_DB_CREATE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_CREATE_DB_CREATE_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_create db_ndx 0 db_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_CREATE_DB_CREATE_DB_TYPE_ID, 
    "db_type", 
    (PARAM_VAL_RULES *)&SOC_PB_EGR_ACL_DB_TYPE_rule[0], 
    (sizeof(SOC_PB_EGR_ACL_DB_TYPE_rule) / sizeof(SOC_PB_EGR_ACL_DB_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_type:\n\r"
    "  Database type: indicates the TCAM Key format.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_create db_ndx 0 db_type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_GET_DB_GET_ID, 
    "db_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get the Database key type. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_get db_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_GET_DB_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_GET_DB_GET_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_get db_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_GET_DB_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_DESTROY_DB_DESTROY_ID, 
    "db_destroy", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Remove the Database. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_destroy db_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_DESTROY_DB_DESTROY_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_DB_DESTROY_DB_DESTROY_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl db_destroy db_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_DB_DESTROY_DB_DESTROY_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID, 
    "entry_add", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Add an entry to the Database. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ENTRY_NDX_ID, 
    "entry_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx:\n\r"
    "  Entry id.Range: 0 - 2047.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_CUD_ID, 
    "cud", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.cud:\n\r"
    "  Copy-Unique-Data value if an override is allowed. A value equal to '0'\n\r"
    "  disables the overriding.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_DP_ID, 
    "dp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.dp:\n\r"
    "  Drop Precedence value if an override is allowed. Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_TC_ID, 
    "tc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.tc:\n\r"
    "  Traffic Class value if an override is allowed. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_DP_TC_OV_ID, 
    "dp_tc_ov", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.dp_tc_ov:\n\r"
    "  Traffic Class and Drop Precedence override. If True, the values in 'tc' and\n\r"
    "  'dp' parameters are meaningful.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_OFP_ID, 
    "ofp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.ofp:\n\r"
    "  OFP (Out-TM-Port) value if an override is allowed. Range: 0 - 79.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_OFP_OV_ID, 
    "ofp_ov", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.ofp_ov:\n\r"
    "  OFP override. If True, the value in 'ofp' parameter is the Out-TM-Port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_TRAP_CODE_ID, 
    "trap_code", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.trap_code:\n\r"
    "  Trap code: relevant only if the trapping 'trap_en' is enabled. Range: 0 - 7.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_ACTION_VAL_TRAP_EN_ID, 
    "trap_en", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.action_val.trap_en:\n\r"
    "  If True, the packet is trapped according to the Action profile 'trap_code'.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_PRIORITY_ID, 
    "priority", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.priority:\n\r"
    "  Entry priority.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 cud 0 dp 0 tc 0 dp_tc_ov 0 ofp\n\r"
    "  0 ofp_ov 0 trap_code 0 trap_en 0 priority 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_KEY_FORMAT_ID, 
    "format", 
    (PARAM_VAL_RULES *)&SOC_TMC_PMF_TCAM_KEY_SRC_rule[0], 
    (sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule) / sizeof(SOC_TMC_PMF_TCAM_KEY_SRC_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.format:\n\r"
    "  Format (i.e., key source) of the TCAM key.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_KEY_DATA_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_KEY_DATA_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.mask[ prm_mask_index]:\n\r"
    "  Mask of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b). Set '1' for the corresponding bit to be meaningful\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_KEY_DATA_VAL_INDEX_ID, 
    "val_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  val_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_KEY_DATA_VAL_ID, 
    "val", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_key.data.val[ prm_val_index]:\n\r"
    "  Value of the rule. Must be set according to the bank size (For Petra-B, 72b /\n\r"
    "  144b / 288b).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_ppd_api pmf_low_level pmf_tcam_key_masked_val_get pgm_id 0 format 0\n\r"
    "  mask_index 0 mask 0 val_index 0 val 0 size 0 pmf_pgm_id 0 sub_header_offset 0\n\r"
    "  sub_header 0 irpp_fld 0 loc 0 ipv6_fld 0 ipv4_fld 0 mode 0 l2 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_INFO_TYPE_ID, 
    "type", 
    (PARAM_VAL_RULES *)&SOC_PB_EGR_ACL_DB_TYPE_rule[0], 
    (sizeof(SOC_PB_EGR_ACL_DB_TYPE_rule) / sizeof(SOC_PB_EGR_ACL_DB_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.type:\n\r"
    "  Entry format: must be identical to its Database type.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_add db_ndx 0 entry_ndx 0 key 0 type 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_ADD_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_ID, 
    "entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get an entry from the Database. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_get db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_get db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_ENTRY_NDX_ID, 
    "entry_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx:\n\r"
    "  Entry id.Range: 0 - 2047.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_get db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_GET_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_ID, 
    "entry_remove", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Remove an entry from the Database. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_remove db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_DB_NDX_ID, 
    "db_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  db_ndx:\n\r"
    "  Database index.Range: 0 - 63.	\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_remove db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_ENTRY_NDX_ID, 
    "entry_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_ndx:\n\r"
    "  Entry id.Range: 0 - 2047.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api egr_acl entry_remove db_ndx 0 entry_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_EGR_ACL_ENTRY_REMOVE_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_EGR_ACL_ID, 
    "egr_acl", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_EGR_ACL_FIRST_ID,FUN_PB_API_EGR_ACL_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } egr_acl*/

#ifdef UI_INGRESS_TRAFFIC_MGMT/* { ingress_traffic_mgmt*/
  { 
    PARAM_PB_ITM_STAG_SET_ITM_STAG_SET_ID, 
    "stag_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Defines the way the Statistics Tag is used. The statistics tag can be used in\n\r"
    "  the Statistics Interface, for mapping to VSQs and further used for VSQ-based\n\r"
    "  drop/FC decisions.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_stag_set offset_4bits 0 enable_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_STAG_SET_ITM_STAG_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_STAG_SET_ITM_STAG_SET_INFO_OFFSET_4B_ID, 
    "offset_4bits", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.offset_4bits:\n\r"
    "  Size of the VSQ pointer (i.e., the number of bits). The value in the pointer\n\r"
    "  defines the VSQ (Virtual Statistic Queue). NOTE:	A total of 256 VSQs are\n\r"
    "  supported using the Stat-tag (8 bits). Range: 0 - 15. \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_stag_set offset_4bits 0 enable_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_STAG_SET_ITM_STAG_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_STAG_SET_ITM_STAG_SET_INFO_ENABLE_MODE_ID, 
    "enable_mode", 
    (PARAM_VAL_RULES *)&SOC_PB_ITM_STAG_ENABLE_MODE_rule[0], 
    (sizeof(SOC_PB_ITM_STAG_ENABLE_MODE_rule) / sizeof(SOC_PB_ITM_STAG_ENABLE_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.enable_mode:\n\r"
    "  Enable (in the specified mode)/Disable STAG \n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_stag_set offset_4bits 0 enable_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_STAG_SET_ITM_STAG_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_STAG_GET_ITM_STAG_GET_ID, 
    "stag_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Defines the way the Statistics Tag is used. The statistics tag can be used in\n\r"
    "  the Statistics Interface, for mapping to VSQs and further used for VSQ-based\n\r"
    "  drop/FC decisions.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_stag_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_STAG_GET_ITM_STAG_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_ID, 
    "committed_q_size_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the size of committed queue size (i.e., the guaranteed memory) for each\n\r"
    "  VOQ, even in the case that a set of queues consume most of the memory\n\r"
    "  resources.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_committed_q_size_set rt_cls4_ndx 0 grnt_bytes\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_RT_CLS4_NDX_ID, 
    "rt_cls4_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  rt_cls4_ndx:\n\r"
    "  Queue rate class modulo 4.\n\r"
    "  Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_committed_q_size_set rt_cls4_ndx 0 grnt_bytes\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_GRNT_BYTES_ID, 
    "grnt_bytes", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  grnt_bytes:\n\r"
    "  Value of the guaranteed memory size.\n\r"
    "  Units: Bytes. Range: 0 - 256M.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_committed_q_size_set rt_cls4_ndx 0 grnt_bytes\n\r"
    "  0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_COMMITTED_Q_SIZE_SET_ITM_COMMITTED_Q_SIZE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_COMMITTED_Q_SIZE_GET_ITM_COMMITTED_Q_SIZE_GET_ID, 
    "committed_q_size_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the size of committed queue size (i.e., the guaranteed memory) for each\n\r"
    "  VOQ, even in the case that a set of queues consume most of the memory\n\r"
    "  resources.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_committed_q_size_get rt_cls4_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_COMMITTED_Q_SIZE_GET_ITM_COMMITTED_Q_SIZE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_ITM_COMMITTED_Q_SIZE_GET_ITM_COMMITTED_Q_SIZE_GET_RT_CLS4_NDX_ID, 
    "rt_cls4_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  rt_cls4_ndx:\n\r"
    "  Queue rate class modulo 4.\n\r"
    "  Range: 0 - 3.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api ingress_traffic_mgmt itm_committed_q_size_get rt_cls4_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_ITM_COMMITTED_Q_SIZE_GET_ITM_COMMITTED_Q_SIZE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_INGRESS_TRAFFIC_MGMT_ID, 
    "itm", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_INGRESS_TRAFFIC_MGMT_FIRST_ID,FUN_PB_API_INGRESS_TRAFFIC_MGMT_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } ingress_traffic_mgmt*/
#ifdef UI_TCAM/* { tcam*/
  { 
    PARAM_PB_TCAM_BANK_INIT_BANK_INIT_ID, 
    "bank_init", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  This function initializes a TCAM bank.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam bank_init bank_id 0 entry_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_BANK_INIT_BANK_INIT_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_BANK_INIT_BANK_INIT_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  The ID of the bank to initialize.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam bank_init bank_id 0 entry_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_BANK_INIT_BANK_INIT_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_BANK_INIT_BANK_INIT_ENTRY_SIZE_ID, 
    "entry_size", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0], 
    (sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule) / sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_size:\n\r"
    "  The entry size to initialize the bank to.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam bank_init bank_id 0 entry_size 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_BANK_INIT_BANK_INIT_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_CREATE_DB_CREATE_ID, 
    "db_create", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Creates a new TCAM database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_create tcam_db_id 0 entry_size 0 prefix_size 0 prio_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_CREATE_DB_CREATE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_CREATE_DB_CREATE_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to create.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_create tcam_db_id 0 entry_size 0 prefix_size 0 prio_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_CREATE_DB_CREATE_ENTRY_SIZE_ID, 
    "entry_size", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0], 
    (sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule) / sizeof(SOC_PB_TCAM_BANK_ENTRY_SIZE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_size:\n\r"
    "  The entry size of the database's entries.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_create tcam_db_id 0 entry_size 0 prefix_size 0 prio_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_CREATE_DB_CREATE_PREFIX_SIZE_ID, 
    "prefix_size", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prefix_size:\n\r"
    "  Number of bits in the database's prefix. Range: 0 - 4.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_create tcam_db_id 0 entry_size 0 prefix_size 0 prio_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_CREATE_DB_CREATE_PRIO_MODE_ID, 
    "prio_mode", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_DB_PRIO_MODE_rule[0], 
    (sizeof(SOC_PB_TCAM_DB_PRIO_MODE_rule) / sizeof(SOC_PB_TCAM_DB_PRIO_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prio_mode:\n\r"
    "  The new database's priority mode (IP forwarding uses bank mode, the\n\r"
    "  field processor and the egress ACLs use interlaced mode).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_create tcam_db_id 0 entry_size 0 prefix_size 0 prio_mode 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_CREATE_DB_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_DESTROY_DB_DESTROY_ID, 
    "db_destroy", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Destroys a TCAM database and frees the resources allocated to it.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_destroy tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_DESTROY_DB_DESTROY_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_DESTROY_DB_DESTROY_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to destroy.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_destroy tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_DESTROY_DB_DESTROY_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID, 
    "db_bank_add", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Adds a TCAM bank to a database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_add tcam_db_id 0 bank_id 0 length 0 bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to that will receive the new bank.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_add tcam_db_id 0 bank_id 0 length 0 bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  The bank that will be added to the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_add tcam_db_id 0 bank_id 0 length 0 bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_PREFIX_LENGTH_ID, 
    "length", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prefix.length:\n\r"
    "  The number of LSBs in 'bits' comprising the database's prefix.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_add tcam_db_id 0 bank_id 0 length 0 bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_PREFIX_BITS_ID, 
    "bits", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prefix.bits:\n\r"
    "  The bits comprising the database's prefix, aligned to the LSB.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_add tcam_db_id 0 bank_id 0 length 0 bits 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_ADD_DB_BANK_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_ID, 
    "db_bank_remove", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Removes a bank from the database's resource pool.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_remove tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_remove tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  ID of the bank to remove.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_remove tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_REMOVE_DB_BANK_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_NOF_BANKS_GET_DB_NOF_BANKS_GET_ID, 
    "db_nof_banks_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns the number of banks occupied by the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_nof_banks_get tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_NOF_BANKS_GET_DB_NOF_BANKS_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_NOF_BANKS_GET_DB_NOF_BANKS_GET_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to query.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_nof_banks_get tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_NOF_BANKS_GET_DB_NOF_BANKS_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_ID, 
    "db_bank_prefix_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns the database's prefix in the bank.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_prefix_get tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to query.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_prefix_get tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  The bank to query.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_bank_prefix_get tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_BANK_PREFIX_GET_DB_BANK_PREFIX_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SIZE_GET_DB_ENTRY_SIZE_GET_ID, 
    "db_entry_size_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns the database's entry size.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_size_get tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SIZE_GET_DB_ENTRY_SIZE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SIZE_GET_DB_ENTRY_SIZE_GET_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to query.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_size_get tcam_db_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SIZE_GET_DB_ENTRY_SIZE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID, 
    "db_entry_add", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Add an entry to a database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_id:\n\r"
    "  The new entry's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_PRIORITY_ID, 
    "priority", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  priority:\n\r"
    "  The new entry's priority. Range: 0 - 65535.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ENTRY_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ENTRY_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry.mask[ prm_mask_index]:\n\r"
    "  The entry's mask.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ENTRY_VALUE_INDEX_ID, 
    "value_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  value_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ENTRY_VALUE_ID, 
    "value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry.value[ prm_value_index]:\n\r"
    "  The entry's value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ACTION_ID, 
    "action", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action:\n\r"
    "  The action associated with the new entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_add tcam_db_id 0 entry_id 0 priority 0 mask_index 0 mask\n\r"
    "  0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_ADD_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_ID, 
    "db_entry_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Reads an entry from the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_get tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_get tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_id:\n\r"
    "  The entry's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_get tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_GET_DB_ENTRY_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID, 
    "db_entry_search", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Search for an entry in a database using the same logic used by the\n\r"
    "  hardware.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_KEY_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_KEY_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key.mask[ prm_mask_index]:\n\r"
    "  The entry's mask.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_KEY_VALUE_INDEX_ID, 
    "value_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  value_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_KEY_VALUE_ID, 
    "value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  key.value[ prm_value_index]:\n\r"
    "  The entry's value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_search tcam_db_id 0 mask_index 0 mask 0 value_index 0\n\r"
    "  value 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_SEARCH_DB_ENTRY_SEARCH_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_ID, 
    "db_entry_remove", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Removes an entry from the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_remove tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_remove tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_id:\n\r"
    "  ID of the entry to remove.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_entry_remove tcam_db_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_ENTRY_REMOVE_DB_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_ID, 
    "db_is_bank_used", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Queries whether the bank belongs to the database or not.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_is_bank_used tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  ID of the database to query.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_is_bank_used tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  The bank in question.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam db_is_bank_used tcam_db_id 0 bank_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_DB_IS_BANK_USED_DB_IS_BANK_USED_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_TCAM_ID, 
    "tcam", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_TCAM_FIRST_ID,FUN_PB_API_TCAM_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } tcam*/
#ifdef UI_TCAM_MGMT/* { tcam_mgmt*/
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID, 
    "tcam_access_profile_create", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Creates a new access profile for an existing TCAM database.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_PROFILE_ID_ID, 
    "profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_id:\n\r"
    "  The new access profile's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_TCAM_DB_ID_ID, 
    "tcam_db_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  tcam_db_id:\n\r"
    "  The database that is to be accessed by the profile.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_CYCLE_ID, 
    "cycle", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_ACCESS_CYCLE_rule[0], 
    (sizeof(SOC_PB_TCAM_ACCESS_CYCLE_rule) / sizeof(SOC_PB_TCAM_ACCESS_CYCLE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cycle:\n\r"
    "  The access cycle.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_UNIFORM_PREFIX_ID, 
    "uniform_prefix", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  uniform_prefix:\n\r"
    "  Indicates whether the access requires that all banks of the\n\r"
    "  database have the same prefix or not.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_MIN_BANKS_ID, 
    "min_banks", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  min_banks:\n\r"
    "  The minimum number of banks this database requires.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_CALLBACK_ID, 
    "callback", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  callback:\n\r"
    "  Used to signal the owner of the database when the database's\n\r"
    "  topology is changed.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_USER_DATA_ID, 
    "user_data", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  user_data:\n\r"
    "  A user-defined parameter that will be passed to the callback\n\r"
    "  function.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_create profile_id 0 tcam_db_id 0 cycle 0\n\r"
    "  uniform_prefix 0 min_banks 0 callback 0 user_data 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_CREATE_TCAM_ACCESS_PROFILE_CREATE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID, 
    "tcam_managed_db_entry_add", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Adds an entry to a TCAM database, and allocates more TCAM banks, as\n\r"
    "  needed.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_PROFILE_ID_ID, 
    "profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_id:\n\r"
    "  The access profile's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_id:\n\r"
    "  The new entry's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_PRIORITY_ID, 
    "priority", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  priority:\n\r"
    "  The new entry's priority.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ENTRY_MASK_INDEX_ID, 
    "mask_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  mask_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ENTRY_MASK_ID, 
    "mask", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry.mask[ prm_mask_index]:\n\r"
    "  The entry's mask.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ENTRY_VALUE_INDEX_ID, 
    "value_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  value_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ENTRY_VALUE_ID, 
    "value", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry.value[ prm_value_index]:\n\r"
    "  The entry's value.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ACTION_ID, 
    "action", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  action:\n\r"
    "  The action associated with the new entry.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_add profile_id 0 entry_id 0 priority 0\n\r"
    "  mask_index 0 mask 0 value_index 0 value 0 action 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_ADD_TCAM_MANAGED_DB_ENTRY_ADD_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_ID, 
    "tcam_managed_db_entry_remove", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Adds an entry to a TCAM database, and allocates more TCAM banks, as\n\r"
    "  needed.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_remove profile_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_PROFILE_ID_ID, 
    "profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_id:\n\r"
    "  The access profile's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_remove profile_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_ENTRY_ID_ID, 
    "entry_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  entry_id:\n\r"
    "  The entry's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_db_entry_remove profile_id 0 entry_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_DB_ENTRY_REMOVE_TCAM_MANAGED_DB_ENTRY_REMOVE_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_ID, 
    "tcam_managed_bank_accessed_db_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns the ID of the database that is accessed in a bank in a\n\r"
    "  particular cycle.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_bank_accessed_db_get bank_id 0 cycle 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_BANK_ID_ID, 
    "bank_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  bank_id:\n\r"
    "  The TCAM bank's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_bank_accessed_db_get bank_id 0 cycle 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_CYCLE_ID, 
    "cycle", 
    (PARAM_VAL_RULES *)&SOC_PB_TCAM_ACCESS_CYCLE_rule[0], 
    (sizeof(SOC_PB_TCAM_ACCESS_CYCLE_rule) / sizeof(SOC_PB_TCAM_ACCESS_CYCLE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  cycle:\n\r"
    "  The bank's access cycle.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_managed_bank_accessed_db_get bank_id 0 cycle 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_MANAGED_BANK_ACCESSED_DB_GET_TCAM_MANAGED_BANK_ACCESSED_DB_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_ID, 
    "tcam_access_profile_access_device_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Returns the access device assigned to an access profile.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_access_device_get profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_PROFILE_ID_ID, 
    "profile_id", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  profile_id:\n\r"
    "  The access profile's ID.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api tcam_mgmt tcam_access_profile_access_device_get profile_id 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_TCAM_ACCESS_PROFILE_ACCESS_DEVICE_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_TCAM_MGMT_ID, 
    "tcam_mgmt", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_TCAM_MGMT_FIRST_ID,FUN_PB_API_TCAM_MGMT_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } tcam_mgmt*/
#ifdef UI_STACK/* { stack*/
  { 
    PARAM_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_ID, 
    "global_info_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  set the global information of the stacking module, including whether stacking\n\r"
    "  is supported, maximum number of supported TM-domains in the system and the\n\r"
    "  TM-domain of this device\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack global_info_set my_tm_domain 0 max_nof_tm_domains 1\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_INFO_MY_TM_DOMAIN_ID, 
    "my_tm_domain", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.my_tm_domain:\n\r"
    "  The TM-domain this device belongs to. Range: 0 - 15. The actual range as\n\r"
    "  configured by max_nof_tm_domains\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack global_info_set my_tm_domain 0 max_nof_tm_domains 1\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_INFO_MAX_NOF_TM_DOMAINS_ID, 
    "max_nof_tm_domains", 
    (PARAM_VAL_RULES *)&SOC_PB_STACK_MAX_NOF_TM_DOMAINS_rule[0], 
    (sizeof(SOC_PB_STACK_MAX_NOF_TM_DOMAINS_rule) / sizeof(SOC_PB_STACK_MAX_NOF_TM_DOMAINS_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.max_nof_tm_domains:\n\r"
    "  Maximum number of TM-domains in system.\n\r"
    "  Note if 16 TM-domains are supported then LAG resolution can not be performed\n\r"
    "  at egress.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack global_info_set my_tm_domain 0 max_nof_tm_domains 1\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_GLOBAL_INFO_SET_GLOBAL_INFO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_GLOBAL_INFO_GET_GLOBAL_INFO_GET_ID, 
    "global_info_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  set the global information of the stacking module, including whether stacking\n\r"
    "  is supported, maximum number of supported TM-domains in the system and the\n\r"
    "  TM-domain of this device\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack global_info_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_GLOBAL_INFO_GET_GLOBAL_INFO_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID, 
    "port_distribution_info_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set how to distribute and prune packets sent through this stacking port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_set local_stack_port_ndx 0 prun_bmp_index\n\r"
    "  0 prun_bmp 0 peer_tm_domain 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_LOCAL_STACK_PORT_NDX_ID, 
    "local_stack_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  local_stack_port_ndx:\n\r"
    "  SOC_SAND_IN uint32\n\r"
    "  local_stack_port_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_set local_stack_port_ndx 0 prun_bmp_index\n\r"
    "  0 prun_bmp 0 peer_tm_domain 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_DISTRIBUTION_INFO_PRUN_BMP_INDEX_ID, 
    "prun_bmp_index", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  prun_bmp_index:\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_set local_stack_port_ndx 0 prun_bmp_index\n\r"
    "  0 prun_bmp 0 peer_tm_domain 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_DISTRIBUTION_INFO_PRUN_BMP_ID, 
    "prun_bmp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
#ifdef COMPILER_STRING_CONST_LIMIT
    "  Full documentation cannot be displayed with -pendantic compiler\n\r",
#else
    "  distribution_info.prun_bmp[ prm_prun_bmp_index]:\n\r"
    "  Bitmap includes which TM domains it's allowed for traffic leaving the current\n\r"
    "  TM domain -using this stacking port- to enter and which not.Set bit k to 1,\n\r"
    "  if the packet is not allowed to enter to TM-domain k (to be filtered). and\n\r"
    "  set to zero otherwise.Generally, it's expected that peer_tm_domain is unset\n\r"
    "  in 'prun_bmp' bitmap.Packet will be filtered if one of the following has\n\r"
    "  occurred:- The packet already visited the peer TM domain 'peer_tm_domain' -\n\r"
    "  Prior stacking port set peer_tm_domain in its 'prun_bmp' bitmap. Declaring\n\r"
    "  not to enter this TM-domain. \n\r"
    "",
#endif /* COMPILER_STRING_CONST_LIMIT */
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_set local_stack_port_ndx 0 prun_bmp_index\n\r"
    "  0 prun_bmp 0 peer_tm_domain 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_DISTRIBUTION_INFO_PEER_TM_DOMAIN_ID, 
    "peer_tm_domain", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  distribution_info.peer_tm_domain:\n\r"
    "  Peer TM-Domain, i.e. The TM domain this stacking port is connected to in the\n\r"
    "  other side.\n\r"
    "  Range: 0 - 15. The actual range as configured in tmd_stack_global_info_set().\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_set local_stack_port_ndx 0 prun_bmp_index\n\r"
    "  0 prun_bmp 0 peer_tm_domain 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_SET_PORT_DISTRIBUTION_INFO_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_GET_PORT_DISTRIBUTION_INFO_GET_ID, 
    "port_distribution_info_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set how to distribute and prune packets sent through this stacking port.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_get local_stack_port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_GET_PORT_DISTRIBUTION_INFO_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_STACK_PORT_DISTRIBUTION_INFO_GET_PORT_DISTRIBUTION_INFO_GET_LOCAL_STACK_PORT_NDX_ID, 
    "local_stack_port_ndx", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  local_stack_port_ndx:\n\r"
    "  SOC_SAND_IN uint32\n\r"
    "  local_stack_port_ndx\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api stack port_distribution_info_get local_stack_port_ndx 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_STACK_PORT_DISTRIBUTION_INFO_GET_PORT_DISTRIBUTION_INFO_GET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_STACK_ID, 
    "stack", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_STACK_FIRST_ID,FUN_PB_API_STACK_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } stack*/
#ifdef UI_MGMT/* { mgmt*/
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_ID, 
    "rev_b0_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Petra-B B0 revision specific features.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_INFO_IS_FC_SCH_MODE_CBFC_ID, 
    "is_fc_sch_mode_cbfc", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_fc_sch_mode_cbfc:\n\r"
    "  If set, EGQ-OFP flow control signals of OFPs 0 - 63 are connected to 128\n\r"
    "  aggregate-level HR scheduling elements. Otherwise the signals are connected\n\r"
    "  to their respective port HR scheduling elements.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_INFO_SINGLE_COPY_MC_RNG_BMP_ID, 
      "single_copy_mc_rng_bmp", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.is_fc_sch_mode_cbfc:\n\r"
    "  If set, EGQ-OFP flow control signals of OFPs 0 - 63 are connected to 128\n\r"
    "  aggregate-level HR scheduling elements. Otherwise the signals are connected\n\r"
    "  to their respective port HR scheduling elements.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_INFO_TDM_MC_ROUTE_MODE_ID, 
    "tdm_mc_route_mode", 
    (PARAM_VAL_RULES *)&SOC_PB_INIT_MC_STATIC_ROUTE_MODE_rule[0], 
    (sizeof(SOC_PB_INIT_MC_STATIC_ROUTE_MODE_rule) / sizeof(SOC_PB_INIT_MC_STATIC_ROUTE_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.tdm_mc_route_mode:\n\r"
    "  TDM static route mode for multicast cells.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_INFO_INNER_ETH_ENCAP_ID, 
    "inner_eth_encap", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.inner_eth_encap:\n\r"
    "  Encapsulation type of inner Ethernet frames (default: Ethernet II).\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_SET_REV_B0_SET_INFO_BUGFIXES_ENABLED_ID, 
    "bugfixes_enabled", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info.bugfixes_enabled:\n\r"
    "  If set, all Petra-B rev. B0 bugfixes and errata corrections are enabled.\n\r"
    "  Otherwise, the device behaves as a Petra-B rev. A1 device.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_set is_fc_sch_mode_cbfc 0 tdm_mc_route_mode 0\n\r"
    "  inner_eth_encap 0 bugfixes_enabled 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_SET_REV_B0_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_MGMT_REV_B0_GET_REV_B0_GET_ID, 
    "rev_b0_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Petra-B B0 revision specific features.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt rev_b0_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_MGMT_REV_B0_GET_REV_B0_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_API_MGMT_ID, 
    "mgmt", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_MGMT_FIRST_ID,FUN_PB_API_MGMT_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } mgmt*/
#if LINK_PB_PP_LIBRARIES
#ifdef UI_PP_MGMT /* { pp_mgmt*/
  { 
    PARAM_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_ID, 
    "use_elk_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set which lookups performed on ELK.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt use_elk_set lkp_type eth use_elk 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_LKP_TYPE_ID, 
    "lkp_type", 
    (PARAM_VAL_RULES *)&SOC_PB_PP_MGMT_LKP_TYPE_rule[0], 
    (sizeof(SOC_PB_PP_MGMT_LKP_TYPE_rule) / sizeof(SOC_PB_PP_MGMT_LKP_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_type:\n\r"
    "  Set which lookups performed on ELK.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt use_elk_set lkp_type eth use_elk 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_USE_ELK_ID, 
    "use_elk", 
    (PARAM_VAL_RULES *)&soc_pb_api_free_vals[0], 
    (sizeof(soc_pb_api_free_vals) / sizeof(soc_pb_api_free_vals[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_type:\n\r"
    "  Set which lookups performed on ELK.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt use_elk_set lkp_type eth use_elk 0\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_USE_ELK_SET_USE_ELK_SET_ID), 
    4, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_PP_MGMT_USE_ELK_GET_USE_ELK_GET_ID, 
    "use_elk_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get which lookups performed on ELK.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt use_elk_get lkp_type eth\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_USE_ELK_GET_USE_ELK_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_PP_MGMT_USE_ELK_GET_USE_ELK_GET_LKP_TYPE_ID, 
    "lkp_type", 
    (PARAM_VAL_RULES *)&SOC_PB_PP_MGMT_LKP_TYPE_rule[0], 
    (sizeof(SOC_PB_PP_MGMT_LKP_TYPE_rule) / sizeof(SOC_PB_PP_MGMT_LKP_TYPE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  lkp_type:\n\r"
    "  Get which lookups performed on ELK.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt use_elk_get lkp_type eth\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_USE_ELK_GET_USE_ELK_GET_ID), 
    3, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
  { 
    PARAM_PB_PP_MGMT_ELK_MODE_SET_ELK_MODE_SET_ID, 
    "elk_mode_set", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Set the Petra-B PP elk mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt elk_mode_set elk_mode none\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_ELK_MODE_SET_ELK_MODE_SET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
   },
   { 
    PARAM_PB_PP_MGMT_ELK_MODE_SET_ELK_MODE_SET_ELK_MODE_ID, 
    "elk_mode", 
    (PARAM_VAL_RULES *)&SOC_PB_PP_MGMT_ELK_MODE_rule[0], 
    (sizeof(SOC_PB_PP_MGMT_ELK_MODE_rule) / sizeof(SOC_PB_PP_MGMT_ELK_MODE_rule[0])) - 1, 
    HAS_NO_DEFAULT | MAY_NOT_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  info:\n\r"
    "  Configure the External lookup mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api mgmt elk_mode_set elk_mode none\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_ELK_MODE_SET_ELK_MODE_SET_ID), 
    LAST_ORDINAL, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },
   { 
    PARAM_PB_PP_MGMT_ELK_MODE_GET_ELK_MODE_GET_ID, 
    "elk_mode_get", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "  Get the Petra-B PP elk mode.\n\r"
    "",
#if UI_PB_API_ADD_EXAMPLE 
    "Examples:\n\r" 
    "  soc_pb_api pp_mgmt elk_mode_get\n\r"
#endif 
    "",
    "",
    BIT_UI_16(FUN_PB_PP_MGMT_ELK_MODE_GET_ELK_MODE_GET_ID), 
    2, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
  { 
    PARAM_PB_PP_API_MGMT_ID, 
    "pp_mgmt", 
    (PARAM_VAL_RULES *)&soc_pb_api_empty_vals[0], 
    (sizeof(soc_pb_api_empty_vals) / sizeof(soc_pb_api_empty_vals[0])) - 1, 
    HAS_NO_DEFAULT | MUST_APPEAR,(PARAM_VAL *)0, 
    0,0,0,0,0,0,0, 
    "",
    "", 
    "",
    BIT_UI_16_RNG(FUN_PB_API_PP_MGMT_FIRST_ID,FUN_PB_API_PP_MGMT_LAST_ID), 
    1, 
      /* 
       * Pointer to a function to call after symbolic parameter 
       * has been accepted. 
       */ 
    (VAL_PROC_PTR)NULL 
  },  
#endif /* } pp_mgmt*/
#endif /* LINK_PB_PP_LIBRARIES */
/* 
 * Last element. Do not remove.
 */ 
  { 
    PARAM_END_OF_LIST
  }
}
#endif
;
/* } */

#include <soc/dpp/SAND/Utils/sand_footer.h>

/* } __UI_ROM_DEFI_PB_API_INCLUDED__*/
#endif

