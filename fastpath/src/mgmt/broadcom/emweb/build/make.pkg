#
#
# Product:      EmWeb
# Release: R6_2_0
#
# CONFIDENTIAL AND PROPRIETARY INFORMATION OF VIRATA CORPORATION
# THE EMWEB SOFTWARE ARCHITECTURE IS PATENTED (US PATENT #5,973,696)
# AND OTHER US AND INTERNATIONAL PATENTS PENDING.
# 'EMWEB' AND 'EMSTACK' ARE TRADEMARKS OF VIRATA CORPORATION
#
# Notice to Users of this Software Product:
#
# This software product of Virata Corporation ("Virata"), 5 Clock Tower
# Place, Suite 400, Maynard, MA  01754 (e-mail: info@virata.com) in
# source and object code format embodies valuable intellectual property
# including trade secrets, copyrights and patents which are the exclusive
# proprietary property of Virata. Access, use, reproduction, modification
# disclsoure and distribution are expressly prohibited unless authorized
# in writing by Virata.  Under no circumstances may you copy this
# software or distribute it to anyone else by any means whatsoever except in
# strict accordance with a license agreement between Virata and your
# company.  This software is also protected under patent, trademark and
# copyright laws of the United States and foreign countries, as well as
# under the license agreement, against any unauthorized copying, modification,
# or distribution.
# Please see your supervisor or manager regarding any questions that you may
# have about your right to use this software product.  Thank you for your
# cooperation.
#
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Virata Corporation
# All Rights Reserved
#
# Virata Corporation
# 5 Clock Tower Place
# Suite 400
# Maynard, MA  01754
#
# Voice: +1 (978) 461-0888
# Fax:   +1 (978) 461-2080
#
# http://www.emweb.com/
#   support@agranat.com
#     sales@agranat.com
#
# EmWeb/Server Makefile
#

#
# Note: If $(MAKE) -C causes a problem, see note in $(LIB)/rules.mak on CDMAKE.
#

mgmtbase  := $(FP_BASE)/src/mgmt

SOURCES :=

# Compile flags.
#
XCFLAGS += -g
XCFLAGS += $(CRC_WARN1)

IFLAGS  += -I$(FP_LSRC)/include
IFLAGS  += -I$(FP_LSRC)/server
IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/cli/base/include
IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/cli/switching/include
IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/base
IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/cli_web_mgr/include

ifeq (1,$(BLD_L7_FLEX_BGP))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/bgp
endif

ifeq (1,$(BLD_L7_FLEX_IP_MCAST))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/ip_mcast
endif

ifeq (1,$(BLD_L7_FLEX_IPV6))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/routingv6
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/routingv6/include
endif

ifeq (1,$(BLD_L7_FLEX_HAS_COMMON_IPV6))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/ipv6
endif

ifeq (1,$(BLD_L7_FLEX_QOS))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/qos/diffserv
endif

ifeq (1,$(BLD_L7_PACKAGE_ROUTING))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/cli/routing/include
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/routing
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/routing/vlan_routing
endif

ifeq (1,$(BLD_L7_FLEX_WIRELESS))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/wireless
endif

ifeq (1,$(BLD_L7_FLEX_METRO))
  IFLAGS  += -I$(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/web/metro
endif


# Uncomment if used with example CLI provided with EmWeb/Telnet package.
#IFLAGS  += -I$(ROOT)/websrc/telnet/content

# These are specified here so that they are not used to compile the
# server, thus avoiding conflicts between the VXWORKS and EmWeb typedefs
# CFLAGS will exist if it was passed in on cmd line, like Tornado II
# build does.
#
# ifdef CFLAGS
#   override CFLAGS += -DEMWEB_VXWORKS_TYPES -O0
# else
#   CFLAGS_$(CONFIG) += -DEMWEB_VXWORKS_TYPES
# endif
#
# LVL7 Revised 09/20/2006:
# Turn off optimizations only for the ew_code.o and ew_data.o files by including
# the -O0 flag directly in their special build rule below.
#
# All VxWorks files can benefit from the -DEMWEB_VXWORKS_TYPES flag to eliminate
# the large number of "vxTypesOld.h" warnings.  This is used for building the
# ew_code.o/ew_data.o and the EmWeb server files.
#
# NOTE:  If building the server files with this flag becomes problematic,
# change this Makefile to pass the -DEMWEB_VXWORKS_TYPES -O0 flags to the
# ew_code.o/ew_data.o special build rule without passing them to the server
# files' build rule.
#
ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
  CFLAGS += -DEMWEB_VXWORKS_TYPES
endif

# EmWeb compiler files.
#
# Note: Caching a copy of CFLAGS before any additional OS-specific mods are made.
#
EWC_SOURCES := ew_code.c ew_data.c
EWC_OBJECTS := $(EWC_SOURCES:.c=.o)
EWC_CFLAGS  := $(CFLAGS)
ifeq (1,$(BLD_L7_TARGETOS_LINUX))
  EWC_CFLAGS += -DHAVE_CONFIG_H
endif


# Uncomment the line below, and port the sample options.mak
# file (in the config directory) IF you are installing any
# optional EmWeb product components.  See options.mak for
# more information.
#
# NOTE:  FASTPATH uses this to pick up the EmWeb/cli product option
#        from src/mgmt/$(L7_EMWEBPACKAGE)/emweb/websrc/telnet.
#
include $(CD)/options.mak

# Pick up src/mgmt/$(L7_EMWEBPACKAGE)/emweb/websrc/server files.
#
localsrc := $(FP_LSRC)/server
SOURCES += $(wildcard $(localsrc)/*.c)
IFLAGS  += -I$(FP_LSRC)/xml_parser
IFLAGS  += -I$(FP_LSRC)/server
IFLAGS  += -I$(FP_LSRC)/upnp
IFLAGS  += -I$(ROOT)/$(CONFIG)

# Pick up src/mgmt/$(L7_EMWEBPACKAGE)/emweb/websrc/compress files.
#
localsrc := $(FP_LSRC)/compress
SOURCES += $(localsrc)/ew_uncmp.c

# Pick up src/mgmt/$(L7_EMWEBPACKAGE)/emweb/lib/md5 files.
#
localsrc := $(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/lib/md5
SOURCES += $(localsrc)/ew_md5c.c

# Pick up src/mgmt/$(L7_EMWEBPACKAGE)/emweb/lib/buffer files (Linux only).
#
ifeq (1,$(BLD_L7_TARGETOS_LINUX))
  localsrc := $(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/lib/buffer
  SOURCES += $(localsrc)/ew_buffer.c
endif

## Uncomment if used with example CLI provided with EmWeb/Telnet package.
#CONTENT += $(FP_LSRC)/telnet/content
#EWFLAGS_$(CONFIG) += -as --map $(FP_LSRC)/telnet/content/snmp.map

# EmWeb server source files.
#
SOURCES += $(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/$(CONFIG)/ewtask.c
SOURCES += $(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/$(CONFIG)/ewsys.c
ifeq (1,$(BLD_L7_TARGETOS_LINUX))
  SOURCES += $(mgmtbase)/$(L7_EMWEBPACKAGE)/emweb/$(CONFIG)/ewmain.c
endif

# Derive list of all object files from accumulated SOURCES list.
#
OBJECTS := $(notdir $(SOURCES:.c=.o))

# Use environment-dependent $(PSEP) to separate multiple paths listed in VPATH.
#
SOURCE_PATHS=$(sort $(patsubst %/,%,$(dir $(SOURCES))))
VPATH_$(CONFIG) = $(subst $(SPACE),$(PSEP),$(SOURCE_PATHS))

# Specify list of paths to search for included header files.
#
IFLAGS := $(subst -I,,$(IFLAGS))
C_INCLUDE_PATH := $(subst $(SPACE),$(PSEP),$(sort $(strip $(SOURCE_PATHS) $(IFLAGS))))
export C_INCLUDE_PATH
IFLAGS :=


# The default build target.
#
bldlib-$(CONFIG): $(EWS_ARCHIVE)


# Build the EmWeb server archive file.  This is required by the main
# EmWeb package makefile as a prerequisite to the link step.
#
$(EWS_ARCHIVE): $(EWC_OBJECTS)
	$(ARCHIVING_MSG)
	$(DBG) $(AR) rc $@ $^
	$(DBG) sleep $(TOUCH_SLEEP)
	$(DBG) touch $@

# The EmWeb content files (ew_code.c, ew_data.c) are generated when ew_proto.h
# is built from its rule as specified in content.gen.  This dependency is what
# synchronizes the EmWeb build sequence:
#     ew_proto.h -> ew_code.c, ew_data.c -> $(EWC_OBJECTS), $(OBJECTS) -> $(EWS_ARCHIVE)
#
$(EWC_SOURCES): ew_proto.h
	@:

# Special build rule for generated EmWeb ew_code.c and ew_data.c files.
#
# Turn optimizations off when building ew_code.o and ew_data.o to avoid some
# "unsolved" Web execution problems observed when -O2 is used in CFLAGS.
#
# Using EWC_CFLAGS here instead of CFLAGS to avoid picking up any locally
# appended flags from CFLAGS_$(CONFIG).
#
# OLD NOTE:  If you are building on win32, use the -l (little endian) option for ewc.
#  -> LVL7_P0006 we do not want the -l option for vxworks target.
#
$(EWC_OBJECTS): %.o : %.c
	$(COMPILING_MSG)
	$(DBG) $(CC) -Wp,-MD,$(@:.o=.d) -o $@ $(EWC_CFLAGS) -O0 $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -c $<


# Pick up common EmWeb Makefile rules.
#
include $(LIB)/rules.mak


clean-$(CONFIG):
	-$(DBG) $(RM) $(EWS_ARCHIVE)
	-$(DBG) $(RM) ew_proto.h
	-$(DBG) $(RM) $(QT)ew_code.*$(QT)
	-$(DBG) $(RM) $(QT)ew_data.*$(QT)
	-$(DBG) $(RM) $(OBJECTS)
	-$(DBG) $(RM) $(OBJECTS:.o=.d)


ifneq (,$(filter bldlib,$(MAKECMDGOALS)))
  ifneq (,$(strip $(EWC_OBJECTS)))
    -include $(EWC_OBJECTS:.o=.d)
  endif
  ifneq (,$(strip $(OBJECTS)))
    -include $(OBJECTS:.o=.d)
  endif
endif

