#
# Release: R6_2_0
#
# CONFIDENTIAL AND PROPRIETARY INFORMATION OF VIRATA CORPORATION
# THE EMWEB SOFTWARE ARCHITECTURE IS PATENTED (US PATENT #5,973,696)
# AND OTHER US AND INTERNATIONAL PATENTS PENDING.
# 'EMWEB' AND 'EMSTACK' ARE TRADEMARKS OF VIRATA CORPORATION
# 
# Notice to Users of this Software Product:
# 
# This software product of Virata Corporation ("Virata"), 5 Clock Tower
# Place, Suite 400, Maynard, MA  01754 (e-mail: info@virata.com) in 
# source and object code format embodies valuable intellectual property 
# including trade secrets, copyrights and patents which are the exclusive
# proprietary property of Virata. Access, use, reproduction, modification
# disclsoure and distribution are expressly prohibited unless authorized
# in writing by Virata.  Under no circumstances may you copy this
# software or distribute it to anyone else by any means whatsoever except in
# strict accordance with a license agreement between Virata and your
# company.  This software is also protected under patent, trademark and 
# copyright laws of the United States and foreign countries, as well as 
# under the license agreement, against any unauthorized copying, modification,
# or distribution.
# Please see your supervisor or manager regarding any questions that you may
# have about your right to use this software product.  Thank you for your
# cooperation.
# 
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Virata Corporation
# All Rights Reserved
# 
# Virata Corporation
# 5 Clock Tower Place
# Suite 400
# Maynard, MA  01754
# 
# Voice: +1 (978) 461-0888
# Fax:   +1 (978) 461-2080
# 
# http://www.emweb.com/
#   support@agranat.com
#     sales@agranat.com
#
# EmWeb Makefile Rules
#
#

##############################################################################
#
# Makefile Rules
#
# These rules select the platform-specific build environment, and common
# rules used by all makefiles.
#
##############################################################################

VPATH        = $(VPATH_$(CONFIG))

################################################################
## CDMAKE
##   This makefile invokes make in a number of other parts of
##   the EmWeb distribution to build components
##   By default, this is done like:
##
##     $(MAKE) -C $(FP_BASE)/src/server <other-make-args>
##
##   which changes to the $(SRC)/server directory before
##   running 'make'.  If this does not work with your 'make',
##   you may need to change each of these to:
##
##     cd $(FP_BASE)/src/server; $(MAKE) <other-make-args>
##
################################################################
## GNU make conditionals
##   There are a number of places in this file in which we
##   conditionally define things using the ifndef test.
##   If these fail on your system, do what it says in the
##   accompanying comment.
################################################################

################################################################
### DO NOT EDIT THIS FILE
###
### If you think that something in this file needs to be changed
### to work in your build environment, first contact
###     support@agranat.com
### for assistance.
###
### The config.mak file in your configuration directory defines
### most of the variables that parameterize the rules here.
################################################################

.SUFFIXES:
SUFFIXES=

CC		:= $(CC_$(CONFIG))
CFLAGS		+= $(CFLAGS_$(CONFIG))
LD		:= $(LD_$(CONFIG))
LDINITFLAGS	:= $(LDINITFLAGS_$(CONFIG))
LDFLAGS		:= $(LDFLAGS_$(CONFIG))
AR		:= $(AR_$(CONFIG))
ARFLAGS		:= $(ARFLAGS_$(CONFIG))
RANLIB		:= $(RANLIB_$(CONFIG))
SIZE		:= $(SIZE_$(CONFIG))
BISON		:= $(BISON_$(CONFIG))
FLEX		:= $(FLEX_$(CONFIG))
CLIBS		:= $(CLIBS_$(CONFIG))

IFLAGS		+= -I$(srcdir)
IFLAGS		+= -I$(CD)
IFLAGS		+= -I$(LIB)
IFLAGS          += -I$(FP_BASE)/src/mgmt/emweb/websrc/include


EWFLAGS		+= $(EWFLAGS_$(CONFIG)) $(XEWFLAGS) \
  -m $(ROOT)/websrc/compiler/mime.types

# if your make doesn't like the ifndef, you probably want this assignment
ifndef EWC
EWC		:= $(BD)/ewc$(EXEC_SUFFIX)
endif

# if your make doesn't like the ifndef, you probably want this assignment
ifndef READARCHIVE
READARCHIVE	:= $(BD)/readarchive$(EXEC_SUFFIX)
endif

# if your make doesn't like the ifndef, you probably don't want this
ifndef TARGET
TARGET := unused.target
endif

# if your make doesn't like the ifndef, you probably don't want this
ifndef TARGETA
TARGETA := unused.targeta
endif

.PHONY: _objdir

#LLB - comment this out for demo build!
# _objdir:
# 	-mkdir $(OD)

# Rule for dependency files
#%.d : %.c
#	$(CC)  $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -M -c $< | $(PERL) $(FP_BASE)/src/l7tools/build/helpdependemweb.pl $(OD) $@ > $@ 
        
## FASTPATH Rule for C source
%.o: %.c
	$(COMPILING_MSG)
	$(DBG) $(CC) -Wp,-MD,$(@:.o=.d) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -c $<

## FASTPATH Rule for C preprocessor (for debugging)
%.pp: %.c
	$(DBG) $(CC) -Wp,-MD,$(@:.o=.d) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -E -C $<

## Rule for C source
$(OD)/%.o: %.c
	$(COMPILING_MSG)
	$(DBG) $(CC) -Wp,MD,(@:.o=.d) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -c $<

## Rule for C preprocessor (for debugging)
$(OD)/%.pp: %.c
	$(DBG) $(CC) -Wp,MD,(@:.o=.d) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -E -C $<

## Rule for generated C source
$(OD)/%.o: $(OD)/%.c
	$(COMPILING_MSG)
	$(DBG) $(CC) -Wp,-MD,$(@:.o=.d) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -c $<

## Rule for C in the webtest/server/src directory
#$(OD)/%.o: $(TEST_TOP_SRC)/%.c
#	$(CC) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -c $<

## Rule for library targets
$(TARGETA): $(OBJECTS:%=$(OD)/%.o)
	$(DBG) $(AR) $(ARFLAGS) $@ $?
	$(DBG) $(RANLIB) $@

$(TARGETA).so: $(OBJECTS:%=$(OD)/%.o)
	$(DBG) $(LD) -o $@ $(LDFLAGS) $(XLDFLAGS) -shared $(OBJECTS:%=$(OD)/%.o)

## Rule for executable targets
# simul $(TARGET): $(OBJECTS:%=$(OD)/%.o) $(LIBS) $(XLIBS)
# simul 	$(CC) -o $@ $(OBJECTS:%=$(OD)/%.o) $(LDFLAGS) $(LIBS) $(XLIBS) $(CLIBS)
$(TARGET): $(OBJECTS:%=$(OD)/%.o) $(LIBS) $(XLIBS)
	$(DBG) $(CC) -o $@ $(LDFLAGS) $(XLDFLAGS) $(OBJECTS:%=$(OD)/%.o) $(LIBS) $(XLIBS) $(CLIBS)

depend: depend.mak

ifneq "$(MAKEDEPEND)" ":"
depend.mak: $(SOURCES) $(GEN_INPUTS) $(GEN_SRC) $(INCLUDES)
	echo '# DO NOT DELETE' > depend.host
	$(MAKEDEPEND) -Y -p $(OD)/ -f depend.host \
	$(IFLAGS) -- $(CFLAGS) -- $(SOURCES) $(GEN_SRC) 2> /dev/null
	$(SED)	-e "s|$(OD)|\$$(OD)|"		\
		-e "s|$(CD)|\$$(CD)|g" \
		-e "s| $(ROOT)/| \$$(ROOT)/|g" \
	 depend.host > depend.mak
	rm -f depend.host depend.host.bak
else
depend.mak:
	echo '# Cannot regenerate depend.mak without "makedepend"' \
	> depend.mak
endif

clean:
#	-cd $(OD); rm -f $(OBJECTS:%=%.o)
#	rm -f $(TARGETS) $(TARGETA) $(TARGET) $(JUNK) .\#* *~

.FORCE:

## Rule for C preprocessor output
#$(OD)/%.pp: %.c
#	$(CC) -o $@ $(CFLAGS) $(XCFLAGS) $(IFLAGS) $(XIFLAGS) -E -C $<

## Rule to expand tabs to spaces
expand:
	for target in $(SOURCES) $(INCLUDES) $(GEN_INPUTS) ; \
	do \
	  cat $$target | expand | tr -d '\r' > _tmp ; mv _tmp $$target ; \
	done

ACTIVATE=$(ROOT)/asitools/activate -q
SETOPTIONS=$(ROOT)/asitools/set-options

## The options to disable in vxworks
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_AUTH_VERIFY
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_FILE
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_FILE_GET
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_FILE_DELETE
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_FILE_PUT
vxworks_C_OPTIONS += -EW_CONFIG_OPTION_FIELDTYPE_FILE

## The options to disable in WinCE
wince_C_OPTIONS += -EW_CONFIG_OPTION_DATE
wince_C_OPTIONS += -EW_CONFIG_OPTION_FILE
wince_C_OPTIONS += -EW_CONFIG_OPTION_FILE_GET
wince_C_OPTIONS += -EW_CONFIG_OPTION_FILE_DELETE
wince_C_OPTIONS += -EW_CONFIG_OPTION_FILE_PUT
wince_C_OPTIONS += -EW_CONFIG_OPTION_FIELDTYPE_FILE

## The set of UPnP compile options
UPNP_C_OPTIONS += EW_CONFIG_OPTION_UPNP
UPNP_C_OPTIONS += EW_CONFIG_OPTION_UPNP_WINDOWS_WORKAROUND
UPNP_C_OPTIONS += EW_CONFIG_OPTION_CLIENT
UPNP_C_OPTIONS += EW_CONFIG_OPTION_CLIENT_COMPLETE_SPECIFIC
UPNP_C_OPTIONS += EW_CONFIG_OPTION_XMLP

upnp-options-on:
	$(ACTIVATE) -i UPNP $(CD)/options.mak
	$(SETOPTIONS) -i $(CD)/ew_options.h $(foreach o,$(UPNP_C_OPTIONS),+$o)

upnp-options-off:
	$(ACTIVATE) -d -i UPNP config/options.mak
	$(SETOPTIONS) -i config/ew_options.h \
		$(foreach o,$(UPNP_C_OPTIONS),-$o)

### Local Variables: ***
### mode: makefile ***
### tab-width: 4 ***
### End: ***
