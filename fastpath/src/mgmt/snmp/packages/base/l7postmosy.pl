=head
/*********************************************************************
*
* (C) Copyright Broadcom Corporation 2003-2007
*
**********************************************************************
*
* Name:       l7postmosy.pl
*
* Purpose:    Add code to file generated by SNMP Research's postmosy utility
*
* Component:  SNMP build tools
*
* Usage:      %perl l7postmosy.pl sourcefile [output file]
*
* Comments:   This script modifies the file generated by SNMP Research's
*             EMANATE/Lite script to add an additional line of code in each
*             of the <family>_test() functions to clear the valid bits after 
*             allocating a copy of the data retrieved by the _get call.  This code 
*             allows the k_<family>_set function to only apply the changes to the 
*             valid objects, preventing setting values that were never changed.  
*             This allows an accurate copy of the data to be used by the 
*             k_<family>_undo function.
*
* Created by: Colin Verne
*
*********************************************************************/
=cut

my $filename = shift(@ARGV);
my $outfile = shift(@ARGV);

# Check for input file, STDIN not supported.
if ($filename eq '')
{
  print "Must specify input file.";
  exit 1;
}

# Attempt to open the file for input.
unless (open(FILE, "<$filename")) 
{
  print "Could not open file '$filename' for input.\n";
  exit 1;
}

# Read file into array.
@file = <FILE>;

# Close file handle.
close(FILE);

# Join file array into single string.
$file = join('',@file);

# Perform ZERO_VALID string insertion
$file =~ s/(\>data = \(void \*\) Clone_(.*?)\(.*?\{.*?\})/$1\n            else {\n                ZERO_VALID((($2_t *) dp->data)->valid); \/* LVL7 *\/\n            }/sg;

# If output file is specified, print to file.
if ($outfile ne '')
{
  unless (open(FILE, ">$outfile")) 
  {
    print "Could not open file '$outfile' for output.\n";
    exit 1;
  }
  
  print FILE $file;
  close(FILE);
}
else
{
  # Else, print to string.
  print $file;
}

# Script completed.
exit 0;

