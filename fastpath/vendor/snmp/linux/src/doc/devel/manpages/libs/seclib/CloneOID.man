.\"
.\"
.\" Copyright (C) 1992-2006 by SNMP Research, Incorporated.
.\"
.\" This software is furnished under a license and may be used and copied
.\" only in accordance with the terms of such license and with the
.\" inclusion of the above copyright notice. This software or any other
.\" copies thereof may not be provided or otherwise made available to any
.\" other person. No title to and ownership of the software is hereby
.\" transferred.
.\"
.\" The information in this software is subject to change without notice
.\" and should not be construed as a commitment by SNMP Research, Incorporated.
.\"
.\" Restricted Rights Legend:
.\"  Use, duplication, or disclosure by the Government is subject to
.\"  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights
.\"  in Technical Data and Computer Software clause at DFARS 252.227-7013;
.\"  subparagraphs (c)(4) and (d) of the Commercial Computer
.\"  Software-Restricted Rights Clause, FAR 52.227-19; and in similar
.\"  clauses in the NASA FAR Supplement and other corresponding
.\"  governmental regulations.
.\"
.\"
.\"
.\"                PROPRIETARY NOTICE
.\"
.\" This software is an unpublished work subject to a confidentiality agreement
.\" and is protected by copyright and trade secret law.  Unauthorized copying,
.\" redistribution or other use of this work is prohibited.
.\"
.\" The above notice of copyright on this source code product does not indicate
.\" any actual or intended publication of such source code.
.\"
.\"
.\"
.\"
.TH CloneOID SR_CLIBMAN "27 May 1996"
.SH NAME
.HP 5
CloneOID, FreeOID, MakeDotFromOID, MakeOIDFromDot, MakeOID, MakeOIDSubLen, CatOID
\- routines for manipulating object identifier (OID) structures.
.SH SYNOPSIS
.LP
OID \(**
.br
CloneOID(oid_ptr)
.br
OID \(**oid_ptr;
.LP
void
.br
FreeOID(oid_ptr);
.br
OID \(**oid_ptr;
.LP
short
.br
MakeDotFromOID(oid_ptr, buffer)
.br
OID \(**oid_ptr;
.br
char buffer[];
.LP
.br
OID \(**
.br
MakeOIDFromDot(_text_str)
.br
char \(**_text_str;
.LP
OID \(**
.br
MakeOID(sid, length)
.br
SR_UINT32 sid[];
.br
SR_INT32 length;
.LP
OID \(**
.br
MakeOIDSubLen(oida)
.br
OID \(**oida;
.LP
OID \(**
.br
CatOID(oida, oidb)
.br
OID \(**oida, \(**oidb;
.SH DESCRIPTION
.HP 5
.I CloneOID 
clones the object identifier (OID) that oid_ptr points to and 
returns the pointer to the cloned OID on success.  The oid_ptr passed 
in should have been created by an earlier call to routines such as 
MakeOIDFromDot(SR_CLIBMAN) or CloneOID(SR_CLIBMAN).

Returns the newly created OID on success.
.br
Returns NULL on failure.
.HP 5
The parameter,
.I oid_ptr,
points to the OID that should be cloned and
returned.
.HP 5
.I FreeOID 
frees the object identifier (OID) data structures allocated and 
built by calls to routines such as MakeOIDFromDot(SR_CLIBMAN) and CloneOID(SR_CLIBMAN).

Returns nothing.
.HP 5
The parameter, 
.I oid_ptr, 
points to the OID structure that should be
freed.
.HP 5
.I MakeDotFromOID 
converts an object identifier (OID) into a dot notation
string, usually for use in a human interface.  This routine is usually
called before printing the OID name of a variable or an OID variable 
value. 
.IP
Example: The OID passed in has a value of "1.3.6.1.2.1.1.1.0"
(i.e., oid\->oid_ptr[0] = 1, oid\->oid_ptr[1] = 3, ...).
The buffer parameter should be equal to "sysDescr.0" when this routine
returns, providing sysDescr appears in the MIB.

Returns 0 on success.
.br
Returns -1 on failure.
.HP 5
The parameter, 
.I oid_ptr, 
contains the OID that needs to be translated
to a dot notation character string.
.HP 5
The parameter, 
.I buffer, 
should contain the dot notation character translation of the OID, oid_ptr,
when this routine successfully returns.
.HP 5
.I MakeOIDFromDot 
performs the inverse of the MakeDotFromOID(SR_CLIBMAN) routine.
It takes a character string and translates its value into a newly
created object identifier (OID).  This routine returns a pointer to
the newly created OID on success, NULL on failure.  This structure can
then be used in subsequent calls to routines such as 
MakeVarBindWithValue(SR_CLIBMAN), MakeVarBindWithNull(SR_CLIBMAN), and MakePdu(SR_CLIBMAN). This
structure can be freed with a call to FreeOID(SR_CLIBMAN).

The string input is usually in name-number form (ex: "sysDescr.0") or
number form (ex: "1.3.6.1.2.1.1.1.0").

Returns the new OID on success.
.br
Returns NULL on failure.
.HP 5
The parameter, 
.I _text_str, 
contains the character string that needs to be translated to an OID.
.HP 5
.I MakeOID 
produces an object identifier pointer (OID) from a passed
sub-identifier array and length.  The sub-identifier array is an array
of SR_UINT32 integers, with each element corresponding to the
value of each integer at each position in the dot-notation display of
an object identifier.
.IP 	
Example: The OID 1.3.6.1.2.1.1 would have a value of 1 in sid[0],
3 in sid[1], etc.  

Returns the newly created OID on success.
.br
Returns NULL on failure.
.HP 5
The parameter, 
.I sid, 
contains the portion of the OID to be cloned and
returned.
.HP 5
The parameter, 
.I length, 
contains the length of the sub-identifer array, sid.
.HP 5
.I MakeOIDSubLen 
performs almost the same function as CloneOID(SR_CLIBMAN). It clones the entire OID
that oid points to except for the first sub-identifier (oid\->oid_ptr[0])
and returns the newly cloned OID on success.  This is especially useful for
stripping the length part of a variable length OID used as an INDEX clause
in a table (the instance portion of an OID name).
.IP
Example: myRow.5.1.3.4.6.5

The myRow portion of the name is the object class.
The 5.1.3.4.6.5 portion of the name is the object instance, and the
first 5 in the object instance indicates that the length of this 
instance should be 5.  If a user passed in an OID with the value 
of "5.1.3.4.6.5", an OID with the value "1.3.4.6.5" would be returned 
on success.

Returns the cloned OID on success.
.br
Returns NULL on failure.
.HP 5
The parameter, 
.I oida, 
is the OID that should be cloned, except for the first sub-identifier.
.HP 5
.I CatOID
returns a newly allocated OID which is the concatenation of the subids
from oida followed by those from oidb.  It does not free or modify
oida or oidb.
.br
Returns NULL on failure.
.SH EXAMPLES
For an example of how these routines are used, see the manager utilities.
