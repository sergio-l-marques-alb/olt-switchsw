diff -rupN sdk-xgs-robo-5.9.4/include/appl/cpudb/debug.h esw_sdk/include/appl/cpudb/debug.h
--- sdk-xgs-robo-5.9.4/include/appl/cpudb/debug.h	2011-10-22 11:06:11.000000000 +0100
+++ esw_sdk/include/appl/cpudb/debug.h	2011-11-28 17:52:41.781223339 +0000
@@ -121,10 +121,26 @@ extern char *tks_debug_names[];
 extern int (*tks_debug_print)(const char *format, ...);
 
 #define TKS_DEBUG_CHECK(flags) (((flags) & tks_debug_level) == (flags))
+#ifndef LVL7_FIXUP
 #define TKS_DEBUG(flags, stuff) \
     if (TKS_DEBUG_CHECK(flags) && tks_debug_print != 0) \
-	(*tks_debug_print) stuff
+        (*tks_debug_print) stuff
+#else
+extern int (*tks_debug_error)(const char *format, ...);
+extern int (*tks_debug_warn)(const char *format, ...);
+extern int (*tks_debug_debug)(const char *format, ...);
+
+#define TKS_DEBUG(flags, stuff) \
+    do { \
+    if (TKS_DEBUG_CHECK(flags) && tks_debug_print != 0) \
+      { \
+        if ((flags) & TKS_DBG_ERR) (*tks_debug_error) stuff ; \
+        else if ((flags) & TKS_DBG_WARN)(*tks_debug_warn) stuff ; \
+        else (*tks_debug_debug) stuff ; \
+      } \
+    } while(0) 
 
+#endif
 #else
 
 #define TKS_DEBUG_CHECK(flags) 0
diff -rupN sdk-xgs-robo-5.9.4/include/appl/diag/cmdlist.h esw_sdk/include/appl/diag/cmdlist.h
--- sdk-xgs-robo-5.9.4/include/appl/diag/cmdlist.h	2011-10-22 11:06:11.000000000 +0100
+++ esw_sdk/include/appl/diag/cmdlist.h	2011-11-28 17:54:10.147200762 +0000
@@ -55,7 +55,7 @@
 
 #if defined(MOUSSE) || defined(BMW) || defined(IDTRP334) || defined(GTO) || \
     defined(MBZ) || defined(IDT438) || defined(NSX) || defined(ROBO_4704) || \
-    defined(METROCORE) || defined(KEYSTONE)
+    defined(METROCORE) || defined(KEYSTONE) || defined(LVL7_FIXUP)
 #ifdef VXWORKS
 #include <config.h>      /* For INCLUDE_XXX */
 #endif
@@ -216,7 +216,7 @@ DCL_CMD(cmd_robo_dump,  cmd_robo_dump_us
 /* txrx.c */
 
 DCL_CMD(cmd_esw_tx,     cmd_esw_tx_usage)
-DCL_CMD(cmd_esw_tx_start,   cmd_esw_tx_start_usage)
+DCL_CMD(cmd_esw_tx_start,   cmd_esw_tx_usage)
 DCL_CMD(cmd_esw_tx_stop,    cmd_esw_tx_stop_usage)
 DCL_CMD(cmd_esw_tx_count,   cmd_esw_tx_count_usage)
 DCL_CMD(cmd_esw_rx_cfg, cmd_esw_rx_cfg_usage)
@@ -224,7 +224,7 @@ DCL_CMD(cmd_esw_rx_init,    cmd_esw_rx_i
 DCL_CMD(cmd_esw_rx_mon, cmd_esw_rx_mon_usage)
 
 DCL_CMD(cmd_robo_tx,        cmd_robo_tx_usage)
-DCL_CMD(cmd_robo_tx_start,  cmd_robo_tx_start_usage)
+DCL_CMD(cmd_robo_tx_start,  cmd_robo_tx_usage)
 DCL_CMD(cmd_robo_tx_stop,   cmd_robo_tx_stop_usage)
 DCL_CMD(cmd_robo_tx_count,  cmd_robo_tx_count_usage)
 DCL_CMD(cmd_robo_rx_cfg,    cmd_robo_rx_cfg_usage)
diff -rupN sdk-xgs-robo-5.9.4/include/appl/stktask/attach.h esw_sdk/include/appl/stktask/attach.h
--- sdk-xgs-robo-5.9.4/include/appl/stktask/attach.h	2011-10-22 11:06:11.000000000 +0100
+++ esw_sdk/include/appl/stktask/attach.h	2011-11-28 17:54:23.099400194 +0000
@@ -70,4 +70,10 @@ extern int bcm_stack_attach_running(void
 extern int bcm_stack_attach(cpudb_ref_t db_ref);
 extern int bcm_stack_detach(cpudb_ref_t db_ref);
 
+#ifdef LVL7_FIXUP
+int bcm_stack_attach_manager_set(int manager);
+void bcm_stack_attach_fn(cpudb_ref_t topology_db, int local_cpu_only, 
+			 int detach_only);
+#endif
+
 #endif /* _STKTASK_ATTACH_H */
diff -rupN sdk-xgs-robo-5.9.4/include/bcm/custom.h esw_sdk/include/bcm/custom.h
--- sdk-xgs-robo-5.9.4/include/bcm/custom.h	2011-10-22 11:06:11.000000000 +0100
+++ esw_sdk/include/bcm/custom.h	2011-11-28 17:55:34.775252244 +0000
@@ -53,7 +53,11 @@
 
 #include <bcm/types.h>
 
+#ifdef LVL7_FIXUP
+#define BCM_CUSTOM_ARGS_MAX     375       
+#else
 #define BCM_CUSTOM_ARGS_MAX     256        
+#endif
 
 #define BCM_CUSTOM_SET          1          
 #define BCM_CUSTOM_GET          2          
diff -rupN sdk-xgs-robo-5.9.4/include/bcm/debug.h esw_sdk/include/bcm/debug.h
--- sdk-xgs-robo-5.9.4/include/bcm/debug.h	2011-10-22 11:06:11.000000000 +0100
+++ esw_sdk/include/bcm/debug.h	2011-11-28 17:55:54.617010789 +0000
@@ -149,9 +149,24 @@ extern void _bcm_debug_api(
 #if defined(BROADCOM_DEBUG)
 #define BCM_DEBUG_CHECK(flags)  \
     (((flags) & bcm_debug_level) == (flags)) 
+#ifndef LVL7_FIXUP
 #define BCM_DEBUG(flags, stuff)  \
     if (BCM_DEBUG_CHECK(flags) && bcm_debug_print != 0) \
         (*bcm_debug_print) stuff 
+#else
+extern int (*bcm_debug_error)(const char *format, ... );
+extern int (*bcm_debug_warn)(const char *format, ... );
+extern int (*bcm_debug_debug)(const char *format, ... );
+#define BCM_DEBUG(flags, stuff)  \
+    do { \
+      if (BCM_DEBUG_CHECK(flags) && bcm_debug_print != 0) \
+      { \
+        if (BCM_DBG_ERR & (flags)) (*bcm_debug_error) stuff; \
+        else if (BCM_DBG_WARN & (flags)) (*bcm_debug_warn) stuff; \
+        else (*bcm_debug_debug) stuff ; \
+      } \
+    }while (0)
+#endif
 #define BCM_WARN(stuff)         \
     BCM_DEBUG(BCM_DBG_WARN, stuff) 
 #define BCM_ERR(stuff)          \
diff -rupN sdk-xgs-robo-5.9.4/include/bcm/field.h esw_sdk/include/bcm/field.h
--- sdk-xgs-robo-5.9.4/include/bcm/field.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/bcm/field.h	2011-11-28 17:59:18.735290752 +0000
@@ -1982,6 +1982,12 @@ typedef struct bcm_field_group_status_s 
     int entry_count;    /* Number of entries in the group. */
     int counter_count;  /* Number of counters attached to group entries. */
     int meter_count;    /* Number of meters attached to group entries. */
+#ifdef LVL7_FIXUP
+    int slice_width_physical;   /* Slice width of group based on physical slices. */
+    int intraslice_mode_enable; /* Indicates if intraslice mode is enabled. */
+    int natural_depth;          /* Number of rules when slice depth is one. */
+#endif
+
 } bcm_field_group_status_t;
 
 /* Group Modes (single, double or triple wide). */
diff -rupN sdk-xgs-robo-5.9.4/include/bcm/types.h esw_sdk/include/bcm/types.h
--- sdk-xgs-robo-5.9.4/include/bcm/types.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/bcm/types.h	2011-11-28 17:59:49.227370061 +0000
@@ -72,7 +72,11 @@ typedef int bcm_multicast_t;
 #endif
 
 #define BCM_MAX_NUM_UNITS       BCM_LOCAL_UNITS_MAX 
+#if defined(LVL7_FIXUP) && defined(L7_PRODUCT_SMARTPATH)
+#define BCM_UNITS_MAX           8
+#else
 #define BCM_UNITS_MAX           128        
+#endif
 
 #define BCM_PBMP_PORT_MAX       _SHR_PBMP_PORT_MAX 
 
diff -rupN sdk-xgs-robo-5.9.4/include/bcm_int/esw/triumph2.h esw_sdk/include/bcm_int/esw/triumph2.h
--- sdk-xgs-robo-5.9.4/include/bcm_int/esw/triumph2.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/bcm_int/esw/triumph2.h	2011-11-28 18:01:26.863831359 +0000
@@ -79,6 +79,11 @@ extern int bcm_tr2_ipmc_egress_intf_add(
                                 bcm_l3_intf_t *l3_intf);
 extern int bcm_tr2_ipmc_egress_intf_delete(int unit, int index, bcm_port_t port,
                                    bcm_l3_intf_t *l3_intf);
+#ifdef LVL7_FIXUP
+extern int bcm_tr2_ipmc_repl_set(int unit, int mc_index, bcm_port_t port,
+                                bcm_vlan_vector_t vlan_vec);
+#endif
+
 extern int bcm_tr2_ipmc_egress_intf_set(int unit, int mc_index,
                                        bcm_port_t port, int if_count,
                                        bcm_if_t *if_array, int check_port);
diff -rupN sdk-xgs-robo-5.9.4/include/bcmx/debug.h esw_sdk/include/bcmx/debug.h
--- sdk-xgs-robo-5.9.4/include/bcmx/debug.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/bcmx/debug.h	2011-11-28 18:01:43.279423786 +0000
@@ -106,10 +106,27 @@ extern int (*bcmx_debug_print)(const cha
 #if defined(BROADCOM_DEBUG)
 #define BCMX_DEBUG_CHECK(flags)  \
     (((flags) & bcmx_debug_level) == (flags)) 
+
+#ifndef LVL7_FIXUP
 #define BCMX_DEBUG(flags, stuff)  \
     if (BCMX_DEBUG_CHECK(flags) && bcmx_debug_print != 0) \
         (*bcmx_debug_print) stuff 
 #else
+extern int (*bcmx_debug_error)(const char *format, ...);
+extern int (*bcmx_debug_warn)(const char *format, ...);
+extern int (*bcmx_debug_debug)(const char *format, ...);
+#define BCMX_DEBUG(flags, stuff) \
+  do { \
+    if (BCMX_DEBUG_CHECK(flags) && bcmx_debug_print != 0) \
+    { \
+      if ((flags) & BCMX_DBG_ERR) (*bcmx_debug_error) stuff ; \
+      else if ((flags) & BCMX_DBG_WARN) (*bcmx_debug_warn) stuff ; \
+      else (*bcmx_debug_debug) stuff ; \
+    } \
+  } while(0)
+#endif
+
+#else
 #define BCMX_DEBUG_CHECK(flags)  0          
 #define BCMX_DEBUG(flags, stuff)             
 #endif
diff -rupN sdk-xgs-robo-5.9.4/include/sal/appl/io.h esw_sdk/include/sal/appl/io.h
--- sdk-xgs-robo-5.9.4/include/sal/appl/io.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/sal/appl/io.h	2011-11-28 18:02:37.024002250 +0000
@@ -238,8 +238,12 @@ extern int sal_flash_sync(void);
 #define vprintk sal_appl_vprintk
 #endif
 
+#if defined(LVL7_FIXUP)  && defined(_L7_OS_ECOS_)
+#define printk printf
+#else
 extern int printk(const char *, ...)		/* To console and/or file */
 		COMPILER_ATTRIBUTE ((format (printf, 1, 2)));
+#endif
 extern int vprintk(const char *, va_list ap);
 
 extern int printk_cons_enable(int enable);		/* Set console output on/off */
diff -rupN sdk-xgs-robo-5.9.4/include/sal/core/alloc.h esw_sdk/include/sal/core/alloc.h
--- sdk-xgs-robo-5.9.4/include/sal/core/alloc.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/sal/core/alloc.h	2011-11-28 18:02:49.847667664 +0000
@@ -49,6 +49,10 @@
 #ifndef _SAL_ALLOC_H
 #define _SAL_ALLOC_H
 
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#include "osapi.h"
+#endif
+
 /*
  * SAL Memory and Cache Support
  *
@@ -58,9 +62,22 @@
  *    or after DMA operations.
  */
 
+/* Map sal_alloc/sal_free to osapi Api's except for 
+** - MIPS64 cpu: SDK has some special code for MIPS64 in sal_alloc.
+** - Linux kernel mode
+** - Smartpath product
+*/
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#define sal_alloc(sz,str) osapiMalloc(L7_DRIVER_COMPONENT_ID, sz)
+#define sal_free(ptr) osapiFree(L7_DRIVER_COMPONENT_ID, ptr)
+
+#else
+
 extern void	*sal_alloc(unsigned int, char *);
 extern void 	sal_free(void *);
 
+#endif
+
 /*
  * DMA Memory allocation
  *
diff -rupN sdk-xgs-robo-5.9.4/include/sdk_custom_config.h esw_sdk/include/sdk_custom_config.h
--- sdk-xgs-robo-5.9.4/include/sdk_custom_config.h	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/include/sdk_custom_config.h	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,84 @@
+/*********************************************************************
+*
+* (C) Copyright Broadcom Corporation 2000-2007
+*
+**********************************************************************
+*
+* @filename  sdk_custom_config.h
+*
+* @purpose   Overrides for constants defined by the ESW SDK. 
+*
+* @component Driver
+*
+* @comments  This file is specific to FASTPATH/SmartPATH. 
+*
+* @create    3/24/2009
+*
+* @author    cmutter
+*
+* @end
+*
+**********************************************************************/
+#ifndef _SDK_CUSTOM_CONFIG_H
+#define _SDK_CUSTOM_CONFIG_H
+
+#include "flex.h"
+
+#define BCM_RLINK_RX_REMOTE_MAX_DEFAULT {10, 10, 10, 80, 80, 0, 0, 0}
+#define BCM_RLINK_L2_REMOTE_MAX_DEFAULT 0
+
+#ifdef L7_PRODUCT_SMARTPATH
+
+#define SOC_MAX_NUM_SWITCH_DEVICES 2
+#define SAL_THREAD_STKSZ 16384
+
+#else /* Not SmartPATH */
+
+#define SAL_THREAD_STKSZ 32768
+
+#endif /* Not SmartPATH */
+
+#if defined(L7_PRODUCT_SMB) || defined(L7_PRODUCT_SMARTPATH)
+
+#define BCM_RX_POOL_COUNT_DEFAULT 96
+
+#else /* Not SMB or SmartPATH */
+
+#define BCM_RX_POOL_COUNT_DEFAULT 384
+
+#endif /* Not SMB or SmartPATH */
+
+#if defined(L7_PRODUCT_SMARTPATH)
+#define BCM_LOCAL_UNITS_MAX     8
+#else
+#define BCM_LOCAL_UNITS_MAX     18
+#endif
+
+#if (defined(L7_PRODUCT_SMB) || defined(L7_PRODUCT_SMARTPATH))
+#define CT_TUNNEL_QUEUE_SIZE 64
+#else
+#define CT_TUNNEL_QUEUE_SIZE 256
+#endif
+
+#ifdef PC_LINUX_HOST
+#define ATP_RETRY_TIMEOUT_DEFAULT 10000000
+#else
+#define ATP_RETRY_TIMEOUT_DEFAULT 1000000
+#endif
+#define ATP_RETRY_COUNT_DEFAULT   20
+
+  /*
+  **       The RPC timeout interval is chosen to be twice the overall ATP 
+  **       timeout. Since transaction requires two ATP transfers plus some work on 
+  **       remote unit, the timeout should theoretically be twice the ATP 
+  **       timeout plus some processing time, but since we use a very long ATP
+  **       timeout we ignore the processing time delay.
+  */
+#define RPC_REPLY_TIMEOUT (2 * ATP_RETRY_TIMEOUT_DEFAULT * ATP_RETRY_COUNT_DEFAULT)
+
+
+#if L7_FEAT_CUSTOM_MMU
+#include "brd_e2e_overrides.h"
+#endif
+
+#endif /* _SDK_CUSTOM_CONFIG_H */
diff -rupN sdk-xgs-robo-5.9.4/include/shared/alloc.h esw_sdk/include/shared/alloc.h
--- sdk-xgs-robo-5.9.4/include/shared/alloc.h	2011-10-22 11:06:12.000000000 +0100
+++ esw_sdk/include/shared/alloc.h	2011-11-28 18:03:00.103235670 +0000
@@ -58,6 +58,8 @@
  *
  */
 
+#if (!((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__))))
 #define sal_free sal_free_safe
+#endif
  
 #endif /* _SHR_ALLOC_H */
diff -rupN sdk-xgs-robo-5.9.4/include/soc/cm.h esw_sdk/include/soc/cm.h
--- sdk-xgs-robo-5.9.4/include/soc/cm.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/cm.h	2011-11-28 18:04:00.319138507 +0000
@@ -71,6 +71,16 @@ extern int      soc_cm_print(const char 
 extern int      soc_cm_vprint(const char *fmt, va_list varg);
 extern int      soc_cm_debug(uint32 flags, const char *format, ...)
                              COMPILER_ATTRIBUTE ((format (printf, 2, 3)));
+
+#ifdef LVL7_FIXUP
+extern int      soc_cm_debug_error(const char *format, ...)
+                             COMPILER_ATTRIBUTE ((format (printf, 1, 2)));
+extern int      soc_cm_debug_warn(const char *format, ...)
+                             COMPILER_ATTRIBUTE ((format (printf, 1, 2)));
+extern int      soc_cm_debug_debug(const char *format, ...)
+                             COMPILER_ATTRIBUTE ((format (printf, 1, 2)));
+#endif
+
 extern int      soc_cm_debug_check(uint32 flags);
 extern int      soc_cm_dump(int dev);
 
diff -rupN sdk-xgs-robo-5.9.4/include/soc/debug.h esw_sdk/include/soc/debug.h
--- sdk-xgs-robo-5.9.4/include/soc/debug.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/debug.h	2011-11-28 18:06:46.139157575 +0000
@@ -142,12 +142,13 @@
 #define SOC_DBG_I2C        (1 << 16)  /* I2C driver */
 #define SOC_DBG_REG        (1 << 17)  /* Register access */
 #define SOC_DBG_MEM        (1 << 18)  /* Memory Driver */
-#define SOC_DBG_10G        (1 << 19)  /* 10G port related */
-#define SOC_DBG_GE         (1 << 20)  /* FE or GE port related */
-#define SOC_DBG_TCAM       (1 << 21)  /* TCAM */
-#define SOC_DBG_DDR        (1 << 22)  /* DDR */
+#define SOC_DBG_100G       (1 << 19)  /* 100G port related */
+#define SOC_DBG_10G        (1 << 20)  /* 10G port related */
+#define SOC_DBG_GE         (1 << 21)  /* FE or GE port related */
+#define SOC_DBG_TCAM       (1 << 22)  /* TCAM */
+#define SOC_DBG_DDR        (1 << 23)  /* DDR */
 
-#define SOC_DBG_COUNT      23
+#define SOC_DBG_COUNT      24
 
 #define SOC_DBG_NAMES    \
     "NORmal",            \
@@ -168,6 +169,7 @@
     "I2C",               \
     "REG",               \
     "MEM",               \
+    "100G",              \
     "10G",               \
     "GE",                \
     "TCAM",              \
@@ -182,8 +184,20 @@ extern uint32 soc_debug_level;
 extern char *soc_debug_names[];
 
 #define SOC_DEBUG_CHECK(flags) (((flags) & soc_debug_level) == (flags))
+#ifndef LVL7_FIXUP
 #define SOC_DEBUG(flags, stuff) \
     if (SOC_DEBUG_CHECK(flags)) soc_cm_print stuff
+#else
+#define SOC_DEBUG(flags, stuff) \
+  do { \
+    if (SOC_DEBUG_CHECK(flags)) { \
+    if (SOC_DBG_ERR & (flags)) soc_cm_debug_error stuff ; \
+    else if (SOC_DBG_WARN & (flags)) soc_cm_debug_warn stuff ; \
+    else soc_cm_debug_debug stuff; \
+    } \
+  }while(0)
+
+#endif
 
 #else
 
diff -rupN sdk-xgs-robo-5.9.4/include/soc/defs.h esw_sdk/include/soc/defs.h
--- sdk-xgs-robo-5.9.4/include/soc/defs.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/defs.h	2011-11-28 18:07:02.427360791 +0000
@@ -339,8 +339,10 @@
 #define BCM_IPFIX_SUPPORT
 #endif
 
-#if defined(BCM_56685_A0) || defined(BCM_56685_B0)
+/* PTin modified: new switch */
+#if defined(BCM_56685_A0) || defined(BCM_56685_B0) || defined(BCM_56689_A0) || defined(BCM_56689_B0)
 #define BCM_56685
+#define BCM_56689   /* PTin added: new switch */
 #define BCM_56634
 #define BCM_56624
 #define BCM_56304
@@ -354,6 +356,7 @@
 #define BCM_MPLS_SUPPORT
 #define BCM_IPFIX_SUPPORT
 #endif
+/* PTin end */
 
 #if defined(BCM_56334_A0) || defined(BCM_56334_B0)
 #define BCM_56334
diff -rupN sdk-xgs-robo-5.9.4/include/soc/drv_if.h esw_sdk/include/soc/drv_if.h
--- sdk-xgs-robo-5.9.4/include/soc/drv_if.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/drv_if.h	2011-11-28 18:07:14.731909432 +0000
@@ -740,6 +740,16 @@ typedef struct{ 
 	int (*led_mode_set)(int unit,int port,uint32 led_mode);
 	int (*igmp_mld_snoop_mode_get)(int unit,int type,int *mode);
 	int (*igmp_mld_snoop_mode_set)(int unit,int type,int mode);
+    /* Egress vlan tranlation */
+#ifdef LVL7_FIXUP
+    int (*vlan_evt_entry_add)(int unit, int port, int *evr_id, int out_op, uint16 out_vid,
+                              int in_op, uint16 in_vid);
+    int (*vlan_evt_entry_delete)(int unit, int port, int evr_id);
+    int (*vlan_evt_entry_get)(int unit, int port, int evr_id, int *out_op, uint16 *out_vid,
+                              int *in_op, uint16 *in_vid);
+    int (*vlan_evt_entry_modify)(int unit, int port, int evr_id, int out_op, uint16 out_vid,
+                              int in_op, uint16 in_vid);
+#endif
 } drv_if_t;
 
 extern int drv_reg_read(int unit,uint32 addr,void *data,int len);
diff -rupN sdk-xgs-robo-5.9.4/include/soc/i2c.h esw_sdk/include/soc/i2c.h
--- sdk-xgs-robo-5.9.4/include/soc/i2c.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/i2c.h	2011-11-28 18:07:26.999431701 +0000
@@ -188,6 +188,10 @@ extern void soc_i2c_clear_log(int unit);
 extern void soc_i2c_show_speeds(int unit);
 extern char *soc_i2c_saddr_to_string(int unit, i2c_saddr_t saddr);
 
+#ifdef LVL7_FIXUP
+extern int soc_i2c_read_test(int unit, uint8 devid, uint8 *ptr, int len);
+extern int soc_i2c_write_test(int unit, uint8 devid, uint8 *ptr, int len);
+#endif
 /*
  * SMB commands
  */
diff -rupN sdk-xgs-robo-5.9.4/include/soc/macipadr.h esw_sdk/include/soc/macipadr.h
--- sdk-xgs-robo-5.9.4/include/soc/macipadr.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/macipadr.h	2011-11-28 18:07:52.664096241 +0000
@@ -53,6 +53,7 @@
 #include <soc/types.h>
 #include <shared/l3.h>
 
+typedef uint8   mac_addr_t[6];          /* MAC address */   /* PTin added: SDK compatibility */
 typedef _shr_ip_addr_t  ip_addr_t;      /* IP Address */
 typedef _shr_ip6_addr_t  ip6_addr_t;    /* IPv6 Address */
 
diff -rupN sdk-xgs-robo-5.9.4/include/soc/mcm/allenum.h esw_sdk/include/soc/mcm/allenum.h
--- sdk-xgs-robo-5.9.4/include/soc/mcm/allenum.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/mcm/allenum.h	2011-11-28 18:03:50.967624904 +0000
@@ -87,7 +87,9 @@
  *		bcm56524_a0
  *		bcm56524_b0
  *		bcm56685_a0
- *		bcm56685_b0
+ *      bcm56685_b0
+ *		bcm56689_a0     PTin added: new switch
+ *		bcm56689_b0     PTin added: new switch
  *		bcm56334_a0
  *		bcm56334_b0
  *		bcm88230_a0
@@ -375,6 +377,22 @@
 # endif
 #endif
 
+/* PTin added: new switch */
+#ifdef BCM_ESW_SUPPORT
+# if !defined(NO_BCM_56689_A0)
+#  define BCM_56685_A0
+#  define BCM_56689_A0
+# endif
+#endif
+
+#ifdef BCM_ESW_SUPPORT
+# if !defined(NO_BCM_56689_B0)
+#  define BCM_56685_B0
+#  define BCM_56689_B0
+# endif
+#endif
+/* PTin end */
+
 #ifdef BCM_ESW_SUPPORT
 # if !defined(NO_BCM_56334_A0)
 #  define BCM_56334_A0
diff -rupN sdk-xgs-robo-5.9.4/include/soc/phy.h esw_sdk/include/soc/phy.h
--- sdk-xgs-robo-5.9.4/include/soc/phy.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/phy.h	2011-11-28 18:08:06.576993959 +0000
@@ -538,6 +538,31 @@ typedef int (*soc_phy_ident_f)(int unit,
                                soc_phy_table_t *my_entry,
                                uint16 phy_id0, uint16 phy_id1,
                                soc_phy_info_t *pi);
+#ifdef LVL7_FIXUP
+/* SDK only provides a way to configure a single phy address for
+ * each port, whereas some of the customer boxes have different
+ * phy addresses for same port. So we use the custom driver
+ * (registered in FP application) checkphy fuction to look for
+ * device ids at the secondary phy addresses, and return SUCESS
+ * if match is successful). _ext_phy_probe() uses two pointer
+ * variables - pi and ext_pc. We manage to run our own custom
+ * _check_phy function, which does the OUI check for us. But
+ * our requirement is to change the phy addresses and other
+ * parameters maintained in structures pointed to by pi
+ * (soc_phy_info_t) and ext_pc(phy_ctrl_t), in  case the match
+ * is successful.  We don't have a way to do that unless we run
+ * our custom function below, or SDK functions are re-designed
+ * to facilitate this operation.
+ */
+typedef int (*soc_phy_cust_f)(int unit, soc_port_t port,
+                              soc_phy_table_t *my_entry,
+                              soc_phy_info_t *pi, phy_ctrl_t *int_pc);
+struct soc_phy_cust_s
+{
+    soc_phy_cust_f  custPhySettings;
+};
+typedef struct soc_phy_cust_s soc_phy_cust_t;
+#endif
 
 /* For identifying phy */
 struct soc_phy_table_s {
diff -rupN sdk-xgs-robo-5.9.4/include/soc/property.h esw_sdk/include/soc/property.h
--- sdk-xgs-robo-5.9.4/include/soc/property.h	2011-10-22 11:06:13.000000000 +0100
+++ esw_sdk/include/soc/property.h	2011-11-28 18:09:21.047314316 +0000
@@ -391,6 +391,10 @@
 /* This specifies the external PHY device is BCM8706 and equivalent. */
 #define spn_PHY_8706  "phy_8706"
 
+#ifdef LVL7_FIXUP
+#define spn_PHY_VIRTUALCOMBO            "phy_virtualcombo"
+#endif
+
 /* This specifies the external PHY device is BCM8072 and equivalent. */
 #define spn_PHY_8072  "phy_8072"
 
@@ -1859,6 +1863,20 @@
  * Applicable to BCM56840 and BCM56740 device family
  */
 #define spn_PORTMAP  "portmap"
+#ifdef LVL7_FIXUP
+#define spn_PORT_PHY_ADDR "port_phy_addr"   /* PTin added: new switch BCM56843 */
+#define spn_LED_MODE_CUST "led_mode_cust"
+#define spn_PORT_PHY_ADDR_XE            "port_phy_addr_xe"
+#define spn_PORT_COMBO_VIRTUAL_PHY      "port_combo_virtual_phy"
+#define spn_PORT_VIRTUAL_PHY_ADDR       "port_virtual_phy_addr"
+#define spn_PORT_VIRTUAL_PREF_PHYNUM    "port_virtual_pref_phy"
+#define spn_PORT_VIRTUAL_ACTIVE_DRIV    "port_virtual_activ_driv"
+#define spn_BCM56638_4X12_2X24          "bcm56638_4x12_2x24"
+#define spn_HELPCLI_ENABLE              "help_cli_enable"
+#define spn_SERDES_LANE0_RESET          "serdes_lane0_reset"
+#define spn_PORT_INTERNAL               "port_internal"
+#define spn_PORT_SUPER_ISOLATE          "port_super_isolate"
+#endif
 /*
  * SBX properties
  * UCODE Port Properties
diff -rupN sdk-xgs-robo-5.9.4/make/Make.config esw_sdk/make/Make.config
--- sdk-xgs-robo-5.9.4/make/Make.config	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/make/Make.config	2011-11-28 18:10:35.117200528 +0000
@@ -53,6 +53,7 @@ endif
 ifeq (${BCM_HIDE_DISPATCHABLE},1)
 CFGFLAGS += -DBCM_HIDE_DISPATCHABLE
 endif
+LVL7_FIXUP = 1
 
 ifeq (${WAN_PORT_SUPPORT},1)
 CFGFLAGS += -DWAN_PORT_SUPPORT
@@ -394,7 +395,7 @@ endif
 endif
 
 _ALL_FEATURE_LIST = ${_ROBO_FEATURE_LIST} ${_ESW_FEATURE_LIST} \
-		  ${_SBX_FEATURE_LIST} ${_EA_FEATURE_LIST}
+		  ${_SBX_FEATURE_LIST} ${_EA_FEATURE_LIST} ${SDK_FEATURE_LIST_ADD}
 
 FEATURE_LIST = $(sort ${_ALL_FEATURE_LIST})
 
@@ -540,6 +541,9 @@ all_suffix = ${chip_suffix}${target_suff
 # Default location to place binaries and make depend files for building
 # purposes.
 #
+ifdef LVL7_FIXUP
+BLDROOT = $(L7_OUTPUT)/$(target)${all_suffix}${bldroot_suffix}
+else
 ifeq "$(HOSTTYPE)" "Windows2000PC"
 BLDROOTWITHDRIVE = ${SDK}/build/${target}${all_suffix}${bldroot_suffix}
 BLDROOT = ${SDK_NO_DRIVE_NAME}/build/${target}${all_suffix}${bldroot_suffix}
@@ -560,6 +564,8 @@ ifeq ($(MAKELEVEL),0)
 endif
 endif
 
+endif #end LVL7_FIXUP 
+
 ifeq ($(DEST_DIR),)
 export DEST_DIR :=${SDK}/${SDKBUILD}$(if ${BLDCONFIG},/${BLDCONFIG})$(DEST_DIR_SUFFIX)
 endif
@@ -655,6 +661,11 @@ CFLAGS += ${INCFLAGS}
 CXXFLAGS += ${INCFLAGS}
 CPPFLAGS += ${INCFLAGS}
 
+ifdef LVL7_FIXUP
+CFLAGS += $(L7_BCM_VENDOR_INCL) $(L7_BCM_VENDOR_CFLAGS)
+CXXFLAGS += $(L7_BCM_VENDOR_INCL)
+CPPFLAGS += $(L7_BCM_VENDOR_INCL)
+endif
 #
 # Debug #ifdef control
 #
diff -rupN sdk-xgs-robo-5.9.4/make/Makefile.linux-gto-2_6 esw_sdk/make/Makefile.linux-gto-2_6
--- sdk-xgs-robo-5.9.4/make/Makefile.linux-gto-2_6	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/make/Makefile.linux-gto-2_6	2011-11-28 18:14:22.480605399 +0000
@@ -202,12 +202,12 @@ endif
 CFGFLAGS += -DSYS_BE_PIO=1 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=1
 ENDIAN = BE_HOST=1
 CFGFLAGS += -D$(ENDIAN) 
-CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8548\"
+CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8270\"
 
 # Extra variables.
 EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)
 
-ARCH = powerpc
+ARCH = ppc
 KBUILD_VERBOSE = 1
 
 export ARCH KBUILD_VERBOSE 
@@ -237,7 +237,7 @@ endif
 endif
 
 ifeq (2.0,$(WRS_LINUX_VERSION))
-KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.1.2/include
+KFLAG_INCLD = /opt/freescale/usr/local/gcc-4.0.2-glibc-2.3.6-nptl-2/powerpc-e300c3-linux/lib/gcc/powerpc-e300c3-linux/4.0.2/include
 endif
 
 ifeq (3.0,$(WRS_LINUX_VERSION))
@@ -253,7 +253,7 @@ CFLAGS += -DBCM_PLX9656_LOCAL_BUS -DBDE_
 endif
 
 ifeq (,$(KFLAGS))
-KFLAGS := -D__KERNEL__ -m32 -Wp, -nostdinc -isystem $(KFLAG_INCLD) -I$(LINUX_INCLUDE) -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/linux/autoconf.h -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc/include -I$(KERNDIR)/include/asm-powerpc -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -msoft-float -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time -Wa,-me500 -fomit-frame-pointer  -Wdeclaration-after-statement -Wno-pointer-sign
+KFLAGS := -D__KERNEL__ -m32 -Wp, -nostdinc -isystem $(KFLAG_INCLD) -I$(LINUX_INCLUDE) -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/linux/autoconf.h -I$(KERNDIR)/arch/ppc -I$(KERNDIR)/arch/ppc/include -I$(KERNDIR)/include/asm-ppc -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -msoft-float -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time -Wa,-me500 -fomit-frame-pointer  -Wdeclaration-after-statement -Wno-pointer-sign
 endif
 
 #Wind river Linux 3.0 needs addtional flags
@@ -261,7 +261,7 @@ ifeq (3.0,$(WRS_LINUX_VERSION))
 
 # Use MSI interrupts if kernel is compiled with MSI support.
 #CFLAGS += -DBDE_LINUX_USE_MSI_INTERRUPT
-KFLAGS += -I$(LINUX_INCLUDE_STD) -I$(KERNDIR_STD)/arch/powerpc -I$(KERNDIR_STD)/arch/powerpc/include -I$(KERNDIR_STD)/include.asm-powerpc -mno-spe
+KFLAGS += -I$(LINUX_INCLUDE_STD) -I$(KERNDIR_STD)/arch/ppc -I$(KERNDIR_STD)/arch/ppc/include -I$(KERNDIR_STD)/include.asm-ppc -mno-spe
 endif
 
 ifneq ($(targetplat),user)
diff -rupN sdk-xgs-robo-5.9.4/make/Makefile.linux-gto-2_6.backup esw_sdk/make/Makefile.linux-gto-2_6.backup
--- sdk-xgs-robo-5.9.4/make/Makefile.linux-gto-2_6.backup	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Makefile.linux-gto-2_6.backup	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,264 @@
+# $Id: Makefile.linux-gto-2_6,v 1.28 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+# User must select one platform from below.By default WR_LINUX is selected. .
+ifeq (,$(BUILD_PLATFORM))
+#BUILD_PLATFORM=ELDK
+BUILD_PLATFORM=WR_LINUX
+endif
+
+# Specify the ELDK version you want to use for building SDK.
+ifeq (,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+ELDK_VERSION=4.0
+endif
+endif
+
+# Specify the KERNEL VERSION  you want to use for building SDK.
+ifeq (,$(KERN_VER))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KERN_VER=2.6.12.3
+#2.6.21.7
+endif
+endif
+
+
+# Specify the Windriver Linux version here.For example '2.0' as shown below.
+ifeq (WR_LINUX,$(BUILD_PLATFORM))
+ifeq (,$(WRS_LINUX_VERSION))
+WRS_LINUX_VERSION=2.0
+endif
+endif
+
+
+#glibc_small and glibc_std have their own cross-compilation tools and and path for these tools are different as implemented below. To enable glibc_small build, line given below should be uncommented.
+
+#WRL_GLIBC_SMALL=TRUE
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?=/home/mruas/ptin/repositorio/PR1003/KERNEL/linux-2.6.12.3-PQ2-256M
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/KERNEL/linux-2.6.12.3-PQ2-256M
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/2.0_GA/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR)/../../host-cross/bin:$(KERNDIR)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+endif
+
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := powerpc-wrs-linux-gnu-ppc_e500v2-glibc_small-
+endif
+
+KERNDIR ?=/projects/ntsw-sw/linux/wrslinux_3.0/gto/bcm98548xmc_30_glibc_small/build/linux-broadcom_bcm98548xmc-standard-build
+KERNDIR_STD ?=/projects/ntsw-sw/linux/wrslinux_3.0/gto/bcm98548xmc_30_glibc_small/build/linux
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := powerpc-wrs-linux-gnu-ppc_e500v2-glibc_std-
+endif
+
+KERNDIR ?=/projects/ntsw-sw/linux/wrslinux_3.0/gto/bcm98548xmc_30_glibc_std_debug/build/linux-broadcom_bcm98548xmc-standard-build
+KERNDIR_STD ?=/projects/ntsw-sw/linux/wrslinux_3.0/gto/bcm98548xmc_30_glibc_std_debug/build/linux
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/3.0/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR_STD)/../../host-cross/bin:$(KERNDIR_STD)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+
+LINUX_INCLUDE_STD := $(KERNDIR_STD)/include
+
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.21.7, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.21.7
+endif
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.24.4, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.24.4
+endif
+endif
+
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.25, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.25
+endif
+endif
+
+
+# Default Linux include directory
+ifeq (,$(LINUX_INCLUDE))
+LINUX_INCLUDE := $(KERNDIR)/include
+endif
+
+CFGFLAGS += -DSYS_BE_PIO=1 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=1
+ENDIAN = BE_HOST=1
+CFGFLAGS += -D$(ENDIAN) 
+CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8548\"
+
+# Extra variables.
+EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)
+
+ARCH = powerpc
+KBUILD_VERBOSE = 1
+
+export ARCH KBUILD_VERBOSE 
+
+
+# From linux/arch/ppc/Makefile
+comma = ,
+basetarget = $(basename $(notdir $@))
+modname = $(basetarget)
+
+name-fix = $(subst $(comma),_,$(subst -,_,$1))
+basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
+modname_flags  = $(if $(filter 1,$(words $(modname))),\
+                 -D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")
+
+
+ifeq (4.0,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.0/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (4.1,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.1/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.1.2/include
+endif
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.3.2/include
+endif
+
+ifdef SBX_CHIPS
+CFLAGS += -DBCM_PLX9656_LOCAL_BUS -DBDE_LINUX_NON_INTERRUPTIBLE 
+endif
+
+
+ifeq (,$(KFLAGS))
+KFLAGS := -D__KERNEL__ -m32 -Wp, -nostdinc -isystem $(KFLAG_INCLD) -I$(LINUX_INCLUDE) -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/linux/autoconf.h -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc/include -I$(KERNDIR)/include/asm-powerpc -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -msoft-float -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time -Wa,-me500 -fomit-frame-pointer  -Wdeclaration-after-statement -Wno-pointer-sign
+endif
+
+#Wind river Linux 3.0 needs addtional flags
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAGS += -I$(LINUX_INCLUDE_STD) -I$(KERNDIR_STD)/arch/powerpc -I$(KERNDIR_STD)/arch/powerpc/include -I$(KERNDIR_STD)/include.asm-powerpc -mno-spe
+endif
+
+ifneq ($(targetplat),user)
+include ${SDK}/make/Makefile.linux-kernel-2_6
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/Makefile.linux-pq2pro-2_6 esw_sdk/make/Makefile.linux-pq2pro-2_6
--- sdk-xgs-robo-5.9.4/make/Makefile.linux-pq2pro-2_6	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Makefile.linux-pq2pro-2_6	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,264 @@
+# $Id: Makefile.linux-gto-2_6,v 1.28 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+# User must select one platform from below.By default WR_LINUX is selected. .
+ifeq (,$(BUILD_PLATFORM))
+#BUILD_PLATFORM=ELDK
+BUILD_PLATFORM=WR_LINUX
+endif
+
+# Specify the ELDK version you want to use for building SDK.
+ifeq (,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+ELDK_VERSION=4.0
+endif
+endif
+
+# Specify the KERNEL VERSION  you want to use for building SDK.
+ifeq (,$(KERN_VER))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KERN_VER=2.6.38
+#2.6.21.7
+endif
+endif
+
+
+# Specify the Windriver Linux version here.For example '2.0' as shown below.
+ifeq (WR_LINUX,$(BUILD_PLATFORM))
+ifeq (,$(WRS_LINUX_VERSION))
+WRS_LINUX_VERSION=2.0
+endif
+endif
+
+
+#glibc_small and glibc_std have their own cross-compilation tools and and path for these tools are different as implemented below. To enable glibc_small build, line given below should be uncommented.
+
+#WRL_GLIBC_SMALL=TRUE
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?=/home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/2.0_GA/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR)/../../host-cross/bin:$(KERNDIR)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+endif
+
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+KERNDIR_STD ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+KERNDIR_STD ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/3.0/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR_STD)/../../host-cross/bin:$(KERNDIR_STD)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+
+LINUX_INCLUDE_STD := $(KERNDIR_STD)/include
+
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.21.7, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.21.7
+endif
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.24.4, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.24.4
+endif
+endif
+
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.25, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.25
+endif
+endif
+
+
+# Default Linux include directory
+ifeq (,$(LINUX_INCLUDE))
+LINUX_INCLUDE := $(KERNDIR)/include
+endif
+
+CFGFLAGS += -DSYS_BE_PIO=1 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=1
+ENDIAN = BE_HOST=1
+CFGFLAGS += -D$(ENDIAN) 
+CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8270\"
+
+# Extra variables.
+EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)
+
+ARCH = powerpc
+KBUILD_VERBOSE = 1
+
+export ARCH KBUILD_VERBOSE 
+
+
+# From linux/arch/ppc/Makefile
+comma = ,
+basetarget = $(basename $(notdir $@))
+modname = $(basetarget)
+
+name-fix = $(subst $(comma),_,$(subst -,_,$1))
+basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
+modname_flags  = $(if $(filter 1,$(words $(modname))),\
+                 -D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")
+
+
+ifeq (4.0,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.0/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (4.1,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.1/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = /opt/freescale/usr/local/gcc-4.0.2-glibc-2.3.6-nptl-2/powerpc-e300c3-linux/lib/gcc/powerpc-e300c3-linux/4.0.2/include
+endif
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.3.2/include
+endif
+
+ifdef SBX_CHIPS
+CFLAGS += -DBCM_PLX9656_LOCAL_BUS -DBDE_LINUX_NON_INTERRUPTIBLE 
+endif
+
+
+ifeq (,$(KFLAGS))
+KFLAGS := -D__KERNEL__ -m32 -Wp, -nostdinc -isystem $(KFLAG_INCLD) -I$(LINUX_INCLUDE) -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/generated/autoconf.h -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc/include -I$(KERNDIR)/include/asm-generic -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -msoft-float -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time -Wa,-me500 -fomit-frame-pointer  -Wdeclaration-after-statement -Wno-pointer-sign
+endif
+
+#Wind river Linux 3.0 needs addtional flags
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAGS += -I$(LINUX_INCLUDE_STD) -I$(KERNDIR_STD)/arch/powerpc -I$(KERNDIR_STD)/arch/powerpc/include -I$(KERNDIR_STD)/include.asm-generic -mno-spe
+endif
+
+ifneq ($(targetplat),user)
+include ${SDK}/make/Makefile.linux-kernel-2_6
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/Makefile.linux-pq3-2_6 esw_sdk/make/Makefile.linux-pq3-2_6
--- sdk-xgs-robo-5.9.4/make/Makefile.linux-pq3-2_6	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Makefile.linux-pq3-2_6	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,265 @@
+# $Id: Makefile.linux-gto-2_6,v 1.28 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+# User must select one platform from below.By default WR_LINUX is selected. .
+ifeq (,$(BUILD_PLATFORM))
+#BUILD_PLATFORM=ELDK
+BUILD_PLATFORM=WR_LINUX
+endif
+
+# Specify the ELDK version you want to use for building SDK.
+ifeq (,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+ELDK_VERSION=4.0
+endif
+endif
+
+# Specify the KERNEL VERSION  you want to use for building SDK.
+ifeq (,$(KERN_VER))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KERN_VER=2.6.27
+#2.6.21.7
+endif
+endif
+
+
+# Specify the Windriver Linux version here.For example '2.0' as shown below.
+ifeq (WR_LINUX,$(BUILD_PLATFORM))
+ifeq (,$(WRS_LINUX_VERSION))
+WRS_LINUX_VERSION=2.0
+#WRS_LINUX_VERSION=2.6.27
+endif
+endif
+
+
+#glibc_small and glibc_std have their own cross-compilation tools and and path for these tools are different as implemented below. To enable glibc_small build, line given below should be uncommented.
+
+#WRL_GLIBC_SMALL=TRUE
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?=/home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/2.0_GA/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/gnu/4.1-wrlinux-2.0/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR)/../../host-cross/bin:$(KERNDIR)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+endif
+
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+ifeq ($(WRL_GLIBC_SMALL),TRUE)
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+KERNDIR_STD ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+else
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := /opt/ppc-ptin-4.0.2/bin/powerpc-e300c3-linux-
+endif
+
+KERNDIR ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+KERNDIR_STD ?= /home/mruas/ptin/repositorio/PR1003/FASTXGS4_PQ2PRO/KERNEL/linux-2.6-denx
+
+endif 
+
+export WRL_GLIBC_SMALL
+
+# After this point glibc_std and glibc_small share these flags
+
+WRLINUX_BASE ?=/tools/windriver/linux_ed/3.0/Linux
+TOOLCHAIN_EXEC_PREFIX=$(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2
+TOOLCHAIN_BIN_DIR=$(TOOLCHAIN_EXEC_PREFIX)
+WIND_LIC_PROXY=$(WRLINUX_BASE)/setup/x86-linux2/bin
+WRLINUX_GNU_PATH = $(WRLINUX_BASE)/wrlinux-3.0/layers/wrll-toolchain-4.3-85/powerpc/toolchain/x86-linux2/bin
+override PATH := $(TOOLCHAIN_EXEC_PREFIX):$(KERNDIR_STD)/../../host-cross/bin:$(KERNDIR_STD)/../../host-cross/powerpc-wrs-linux-gnu/bin:$(WRLINUX_GNU_PATH):$(PATH)
+export TOOLCHAIN_EXEC_PREFIX TOOLCHAIN_BIN_DIR WIND_LIC_PROXY
+
+LINUX_INCLUDE_STD := $(KERNDIR_STD)/include
+
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.21.7, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.21.7
+endif
+endif
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.24.4, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.24.4
+endif
+endif
+
+
+ifeq (ELDK,$(BUILD_PLATFORM))
+ifeq (2.6.25, $(KERN_VER))
+
+ifeq (,$(CROSS_COMPILE))
+CROSS_COMPILE := ppc_85xx-
+endif
+
+ifeq (4.0, $(ELDK_VERSION))
+override PATH := /tools/eldk/4.0/usr/bin:$(PATH)
+else
+override PATH := /tools/eldk/4.1/usr/bin:$(PATH)
+endif
+KERNDIR ?= /projects/ntsw-sw/linux/eldk/gto_eldk/linux-2.6.25
+endif
+endif
+
+
+# Default Linux include directory
+ifeq (,$(LINUX_INCLUDE))
+LINUX_INCLUDE := $(KERNDIR)/include
+endif
+
+CFGFLAGS += -DSYS_BE_PIO=1 -DSYS_BE_PACKET=0 -DSYS_BE_OTHER=1
+ENDIAN = BE_HOST=1
+CFGFLAGS += -D$(ENDIAN) 
+CFGFLAGS += -DBCM_PLATFORM_STRING=\"GTO_MPC8544\"
+
+# Extra variables.
+EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)
+
+ARCH = powerpc
+KBUILD_VERBOSE = 1
+
+export ARCH KBUILD_VERBOSE 
+
+
+# From linux/arch/ppc/Makefile
+comma = ,
+basetarget = $(basename $(notdir $@))
+modname = $(basetarget)
+
+name-fix = $(subst $(comma),_,$(subst -,_,$1))
+basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
+modname_flags  = $(if $(filter 1,$(words $(modname))),\
+                 -D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")
+
+
+ifeq (4.0,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.0/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (4.1,$(ELDK_VERSION))
+ifeq (ELDK,$(BUILD_PLATFORM))
+KFLAG_INCLD = /tools/eldk/4.1/usr/lib/gcc/powerpc-linux/4.0.0/include
+endif
+endif
+
+ifeq (2.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = /opt/eldk/usr/lib/gcc/powerpc-linux/4.2.2/include
+endif
+
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAG_INCLD = $(WRLINUX_GNU_PATH)/../lib/gcc/powerpc-wrs-linux-gnu/4.3.2/include
+endif
+
+ifdef SBX_CHIPS
+CFLAGS += -DBCM_PLX9656_LOCAL_BUS -DBDE_LINUX_NON_INTERRUPTIBLE 
+endif
+
+
+ifeq (,$(KFLAGS))
+KFLAGS := -D__KERNEL__ -m32 -Wp, -nostdinc -isystem $(KFLAG_INCLD) -I$(LINUX_INCLUDE) -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/linux/autoconf.h -I$(KERNDIR)/arch/powerpc -I$(KERNDIR)/arch/powerpc/include -I$(KERNDIR)/include/asm-generic -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -msoft-float -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time -Wa,-me500 -fomit-frame-pointer  -Wdeclaration-after-statement -Wno-pointer-sign
+endif
+
+#Wind river Linux 3.0 needs addtional flags
+ifeq (3.0,$(WRS_LINUX_VERSION))
+KFLAGS += -I$(LINUX_INCLUDE_STD) -I$(KERNDIR_STD)/arch/powerpc -I$(KERNDIR_STD)/arch/powerpc/include -I$(KERNDIR_STD)/include.asm-generic -mno-spe
+endif
+
+ifneq ($(targetplat),user)
+include ${SDK}/make/Makefile.linux-kernel-2_6
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/Make.linux esw_sdk/make/Make.linux
--- sdk-xgs-robo-5.9.4/make/Make.linux	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/make/Make.linux	2011-11-28 18:11:10.684347383 +0000
@@ -59,6 +59,15 @@
 #
 #
 
+LVL7_FIXUP = 1
+
+ifdef LVL7_FIXUP
+  ifdef QUIET
+    MAKE := @$(MAKE)
+  endif
+  MAKE := +$(MAKE)
+endif
+
 export DEST_DIR_SUFFIX :=$(subst $(realpath $(SDK))/systems,,$(realpath $(CURDIR)/$(dir ($(firstword $(MAKEFILE_LIST))))))
 
 ifeq (,$(kernel_version))
@@ -117,3 +126,10 @@ DELIVER clean C_COMPILER CXX_COMPILER va
 distclean clean_d: clean
 
 .PHONY: build clean distclean clean_d DELIVER variable
+
+ifdef LVL7_FIXUP
+.PHONY: get_sdk_flags
+
+get_sdk_flags:
+	$(MAKE) $(CMD) get_sdk_flags
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/Make.local.xgs3 esw_sdk/make/Make.local.xgs3
--- sdk-xgs-robo-5.9.4/make/Make.local.xgs3	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Make.local.xgs3	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,400 @@
+# $Id: Make.local.template,v 1.64.4.6 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscelaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Enable RPC flexible (long) bitmaps.
+# Warning: Enabling this bumps the RPC version to 3 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_FLEX_PBMP
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+DISPATCH_LIST = RPC ESW
+
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     ASE
+#     BCMX
+#     BCMX_DIAG
+#     BSAFE
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TCL
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE ASE \
+    CUSTOMER TEST ACL 
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+BCM_56304_B0 = 1
+BCM_56314_A0 = 1
+BCM_56504_A0 = 1
+BCM_56504_B0 = 1
+BCM_56514_A0 = 1
+#BCM_56601_A0 = 1
+#BCM_56602_A0 = 1
+#BCM_56601_B0 = 1
+#BCM_56602_B0 = 1
+#BCM_56601_C0 = 1
+#BCM_56602_C0 = 1
+#BCM_56624_A0 = 1
+#BCM_56624_B0 = 1
+#BCM_56680_A0 = 1
+#BCM_56580_A0 = 1
+#BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56725_A0 = 1
+#BCM_56820_A0 = 1
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5482 5421S SERDES SIMUL 8703 8705 EMPTY 
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts; Will move to tcl 
+# someday
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/Make.local.xgs4 esw_sdk/make/Make.local.xgs4
--- sdk-xgs-robo-5.9.4/make/Make.local.xgs4	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Make.local.xgs4	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,519 @@
+# $Id: Make.local.template,v 1.142.6.5 Broadcom SDK $
+# $Copyright: Copyright 2011 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscellaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Disable RPC flexible (long) bitmaps.
+# Warning: Disabling this changes the RPC version to 2 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_PBMP_64
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+# ESW is the enterprise platforms.
+# ROBO includes the managed devices.
+# SBX AND FE2000 include API support for bcm988020QSK24X2
+#DISPATCH_LIST = RPC ESW ASYNC SBX FE2000
+DISPATCH_LIST = RPC ESW
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     BCMX
+#     BCMX_DIAG
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#     KNET - Linux user mode kernel network support
+#     BCM_SAL_PROFILE - make available an API to track SAL usage.
+#     CINT - Include the C Interpreter in the diagnostic shell. 
+#            Please note this cannot be used in Linux kernel mode. 
+#     PHY_SYM_DBG - PHY GUI MDIO read/write support. Socket interface
+#                   to PHY GUI for Symbolic debugging.
+#
+#FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+#    CUSTOMER TELNET DRIVERS CHASSIS TEST ACL RCPU BCM_SAL_PROFILE CINT \
+#    MACSEC BOARD KNET
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE \
+    CUSTOMER TEST ACL
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+#BCM_56304_B0 = 1
+#BCM_56314_A0 = 1
+#BCM_56504_A0 = 1
+#BCM_56504_B0 = 1
+#BCM_56514_A0 = 1
+BCM_56601_A0 = 1
+BCM_56602_A0 = 1
+BCM_56601_B0 = 1
+BCM_56602_B0 = 1
+BCM_56601_C0 = 1
+BCM_56602_C0 = 1
+BCM_56624_A0 = 1
+BCM_56624_B0 = 1
+BCM_56680_A0 = 1
+#BCM_56685_A0 = 1
+BCM_56580_A0 = 1
+BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56224_B0 = 1
+#BCM_56725_A0 = 1
+BCM_56820_A0 = 1
+#BCM_53314_A0 = 1
+#BCM_53324_A0 = 1
+BCM_56634_A0 = 1
+BCM_56634_B0 = 1
+BCM_56524_A0 = 1
+BCM_56524_B0 = 1
+BCM_56685_A0 = 1
+BCM_56685_B0 = 1
+BCM_56334_A0 = 1
+BCM_56334_B0 = 1
+# PTin added: this driver cannot be compiled with PQ2 compiler
+# Anyway, it won't be needed on those platforms
+ifeq ($(L7_CPU),pq3)
+BCM_56840_A0 = 1
+BCM_56840_B0 = 1
+endif
+#BCM_56142_A0 = 1
+#BCM_56836_A0 = 1
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+#BCM_88230_A0 = 1
+#BCM_88230_B0 = 1
+#BCM_88230_C0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 EMPTY
+BCM_PHY_LIST=522X 54XX 5464 5421S 5482 54580 54616 54680 54680E 52681E 54880E 54682 54684 54640 54640E 54880 SERDES SIMUL 8703 8705 8706 8072 8040 8481 8750 8729 84740 84756 5942
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for BOARD library
+# if BOARD_LIST is defined, it is a list of Board drivers to include.
+# The default is to include all board drivers appropriate for the devices
+# included in the build. If none of them should be included specify
+# BOARD_LIST=EMPTY.
+#BOARD_LIST=GENERIC
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+# Support for BCM API port translation
+#CFGFLAGS += -DINCLUDE_BCM_API_XLATE_PORT
+
+# Support for callback error checks and abort in traverse api's
+#CFGFLAGS += -DBCM_CB_ABORT_ON_ERR
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts.
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+# For validation purposes
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT_SW_DUMP
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+################################################################
+#
+# Use cached DMA memory when mapping kernel DMA memory to user
+# mode. Should only be enabled on cache-coherent platforms.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_CACHE_DMA_MEM
+
+################################################################
+#
+# Take the spl lock upon entering an ISR
+#
+################################################################
+#CFGFLAGS += -DSAL_SPL_LOCK_ON_IRQ
+
+################################################################
+#
+# Silently ignore NULL pointer free in sal_free API
+# Default behaviour is to assert if a NULL pointer is passed to sal_free
+#
+################################################################
+#CFGFLAGS += -DSAL_FREE_NULL_IGNORE
+
+################################################################
+# Enable SBX MPLS TP support
+################################################################
+#CFGFLAGS += -DBCM_SBX_MPLSTP_SUPPORT
+
+################################################################
+# For historical reasons the PCI probe function skips device 12
+# by default to prevent a system hang on certain platforms.
+# Set this value to zero to probe all PCI devices.
+################################################################
+#CFGFLAGS += -DOVERRIDE_PCI_SKIP_DEV_MASK=0
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
+
diff -rupN sdk-xgs-robo-5.9.4/make/Make.local.xgs4.bck esw_sdk/make/Make.local.xgs4.bck
--- sdk-xgs-robo-5.9.4/make/Make.local.xgs4.bck	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/Make.local.xgs4.bck	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,408 @@
+# $Id: Make.local.template,v 1.64.4.6 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+#
+
+# Usage for Make.local.template and Make.local:
+#
+# Make.local.template is checked into the tree, but Make.local is never
+# checked in.  Copy Make.local.template to Make.local, then change
+# Make.local to select the desired compilation options (mostly debugging
+# features).
+#
+# Note on CFGFLAGS usage:
+#
+#   Because CFGFLAGS may be used with other source preprocessing tools,
+#   please limit the values added to CFGFLAGS to -D defines.
+#
+#
+# Table of Contents:
+#
+#     Compiler Related Options
+#     Boot and Debug Related Options
+#     Operational and Policy Options
+#     System Management and Multiple CPU Options
+#     Selective Device Support (Switches and PHYs)
+#     Miscelaneous Options
+#
+
+################################################################
+#
+# Compiler Related Options
+#
+################################################################
+
+# Uncomment to build in parallel
+#MAKE_PAR=-j
+
+# Compiling out #ifdef DEBUG code saves about 1.3% on executable size.
+# It is recommended to leave debug enabled when developing applications.
+#DEBUG_IFDEFS=FALSE
+
+# SAL resource usage tracking #ifdef control
+# DEBUG_IFDEFS should also be  TRUE for this switch to take effect.
+#BCM_RESOURCE_USAGE_PROFILE_IFDEFS=TRUE
+
+# Uncomment to build without debug symbols
+#DEBUG_SYMBOLS=FALSE
+
+# Uncomment to add private CFLAGS
+#DEBUG_CFLAGS=
+
+# Uncomment to turn off the optimizer when debugging (recommended)
+#DEBUG_OPTIMIZE=FALSE
+
+# Compiling out assert() saves about 1.1% on executable size,
+# however do so is VERY MUCH discouraged.
+#DEBUG_ASSERTS=FALSE
+
+# Controlling GCC -pedantic flag
+#DEBUG_PEDANTIC=TRUE
+
+# compiler.h overrides, these disable various compiler
+# related features even if the compiler normally supports them
+
+# Disable use of long long for uint64
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_LONGLONG
+
+# Disable use of doubles
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_DOUBLE
+
+# Disable inlining of functions
+CFGFLAGS += -DCOMPILER_OVERRIDE_NO_INLINE
+
+# Disable use of const
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_CONST
+
+# Disable use of static functions
+#CFGFLAGS += -DCOMPILER_OVERRIDE_NO_STATIC
+
+# Enable RPC flexible (long) bitmaps.
+# Warning: Enabling this bumps the RPC version to 3 and
+# makes systems running this code incompatible with systems
+# running previous versions of BCM RPC code.
+#CFGFLAGS += -DBCM_RPC_FLEX_PBMP
+
+#
+# Define if longs are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+#CFGFLAGS += -DLONGS_ARE_64BITS
+
+#
+# Define if pointers are 64 bits on your compiler;
+# this is typically true ONLY for 64-bit processors.
+# NOTE: This support works ONLY under conditions where the
+# upper 32 bits for ALL pointers are ZERO.
+#CFGFLAGS += -DPTRS_ARE_64BITS
+
+
+################################################################
+#
+# Boot and Debug Related Options
+#
+################################################################
+
+# Options to turn on various debug flags at boot. BE SURE DK_ERR is set
+# otherwise hardware error messages will not be printed.
+#CFGFLAGS += -DDEBUG_STARTUP="DK_RCLOAD+DK_TX+DK_ERR"
+#CFGFLAGS += -DDEBUG_STARTUP="DK_ERR"
+
+# Define this to add debug code for RX pool buffer tracking
+#CFGFLAGS += -DBCM_RXP_DEBUG
+
+# Allow debugging of PCI reads/writes (debug +pci)
+#CFGFLAGS += -DSOC_PCI_DEBUG
+
+# Make default debugging settings be 0 (very very quiet)
+#CFGFLAGS += -DNO_DEBUG_OUTPUT_DEFAULT
+
+# Don't use vxMemProbe
+#CFGFLAGS += -DVX_NO_MEM_PROBE
+
+################################################################
+#
+# Operational and Policy Options
+#
+################################################################
+
+# VLAN policy control:
+#	NO_DEFAULT_ETHER	do not init ether ports into vlan 1
+#	NO_DEFAULT_CPU		do not init cpu ports into vlan 1
+#	NO_DEFAULT_SPI_SUBPORT	do not init spi subports into vlan 1
+#	NO_AUTO_STACK		do not init stack/HG ports into created vlans
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_ETHER
+CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_CPU
+#CFGFLAGS += -DBCM_VLAN_NO_DEFAULT_SPI_SUBPORT
+#CFGFLAGS += -DBCM_VLAN_NO_AUTO_STACK
+
+# VLAN multicast flood Policy Control:
+# BCM_VLAN_MCAST_FLOOD_ALL      Flood all multicast packets to the VLAN
+# BCM_VLAN_MCAST_FLOOD_UNKNOWN  Flood unknown multicast packets to the vlan
+# BCM_VLAN_MCAST_FLOOD_NONE     Forward multicast packets with known
+#                               destination addresses to the appropriate ports.
+#                               All packets destined to an unknown multicast
+#                               address are dropped.
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_ALL
+CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_UNKNOWN
+#CFGFLAGS += -DBCM_MCAST_FLOOD_DEFAULT=BCM_VLAN_MCAST_FLOOD_NONE
+
+#Port Enable/Disable Policy control:
+#       PORT_DEFAULT_DISABLE       disable ports during switch initialization
+CFGFLAGS += -DBCM_PORT_DEFAULT_DISABLE
+
+# sal thread priority override (this value used for all threads if defined)
+#CFGFLAGS += -DSAL_THREAD_PRIORITY=255
+
+# disable printing of thread name in messages
+CFGFLAGS += -DSAL_THREAD_NAME_PRINT_DISABLE
+
+# disable runtime reading of flash config.bcm file (even if !NO_FILEIO)
+CFGFLAGS += -DSAL_CONFIG_FILE_DISABLE
+
+# disable all Application SAL dependencies
+#NO_SAL_APPL=1
+
+# Prevent scheduling in SPL locks when interrupt code is run as a thread.
+# This option should not be necessary if all locks are implemented correctly,
+# however, some locks may still rely on the assumption that scheduling does
+# not occur when interrupts are disabled. If you experience any locking
+# problems in e.g. Linux User Mode, try enabling this option.
+# Please note that turning on this option will reduce performance by an
+# estimated 5 to 10 %.
+#CFGFLAGS += -DSAL_SPL_NO_PREEMPT
+
+# disable mapping of higig cosq when mapping priority to cosq
+# (use identity mapping instead : map prio0->cos0, prio1->cos1, ... , prio7->cos7)
+#CFGFLAGS += -DBCM_COSQ_HIGIG_MAP_DISABLE
+
+################################################################
+#
+# System Management and Multiple CPU Options
+#
+################################################################
+
+# Turn on BCMX inclusion
+#     INCLUDE_BCMX for any support
+INCLUDE_BCMX=1
+
+# Telekinesis suite applications for CPU to CPU communication and discovery
+#     CPUDB:         Simple CPU data base manager
+#     CPUTRANS:      CPU to CPU communication mechanisms
+#     DISCOVER:      Simple discovery; will also include CPUTRANS
+#     STKTASK:       Stack manager application
+#
+CFGFLAGS += -DINCLUDE_LIB_CPUDB
+CFGFLAGS += -DINCLUDE_LIB_CPUTRANS
+CFGFLAGS += -DINCLUDE_LIB_DISCOVER
+CFGFLAGS += -DINCLUDE_LIB_STKTASK
+
+# Option for discovery to use the application-data field in routing
+# packets for Board-ID and CPU base flag information.
+#CFGFLAGS += -DDISCOVER_APP_DATA_BOARDID
+
+# This option is not present in the default make.local.template.
+ifdef LVL7_FIXUP
+CFGFLAGS += -DBCM_BOARD_AUTO_TRUNK
+endif
+
+# Optionally override list of included dispatch modules
+# Note: including RPC automatically includes the Telekinesis suite libs
+DISPATCH_LIST = RPC ESW
+
+
+# Define to have end-to-end flow control enabled on boards that
+# support it
+#CFGFLAGS += -DBCM_BOARD_AUTO_E2E
+
+# Define the following to support per-CPU transmit pointers.
+# This allows the TX setup and send functions to be defined on a
+# per-CPU basis, allowing mixed in-band and out-of-band communication.
+#CFGFLAGS += -DBCM_C2C_TRANSPORT_SWITCHING
+
+# Options for feature list (INCLUDE_XXX)
+# If FEATURE_LIST is defined, it is a list of features to include.
+# See Make.config for the default feature list.
+#
+# Avaliable features:
+#
+#     ASE
+#     BCMX
+#     BCMX_DIAG
+#     BSAFE
+#     CHASSIS
+#     CUSTOMER
+#     DRIVERS
+#     EDITLINE
+#     I2C
+#     L3
+#     MEM_SCAN
+#     ATPTRANS_SOCKET
+#     TCL
+#     TELNET
+#     TEST
+#     ACL
+#     RCPU
+#
+FEATURE_LIST=ATPTRANS_SOCKET BCMX_DIAG L3 I2C BCMX MEM_SCAN EDITLINE ASE \
+    CUSTOMER TEST ACL 
+
+################################################################
+#
+# Selective Device Support (Switches and PHYs)
+#
+################################################################
+
+# Multiple Chip Support
+#
+# By default, the driver supports all Strata switch and fabric chips
+# included in this software release.  It checks device IDs at runtime
+# to run the correct driver modules.
+#
+# To save space, the driver can be compiled to support just a subset of
+# the chips.  To do this, uncomment the line for BCM_PTL_SPT (partial
+# support) and uncomment one line for each chip to support.
+#
+# Note that there are a lot more chips than drivers.
+# For example, the BCM5615 driver is also used for BCM5625 and BCM5645.
+#
+
+BCM_PTL_SPT = 1
+
+#BCM_5600_C0 = 1
+#BCM_5605_A0 = 1
+#BCM_5615_A0 = 1
+#BCM_5650_C0 = 1
+#BCM_5665_A0 = 1
+#BCM_5665_B0 = 1
+#BCM_5670_A0 = 1
+#BCM_5673_A0 = 1
+#BCM_5674_A0 = 1
+#BCM_5675_A0 = 1
+#BCM_5680_B0 = 1
+#BCM_5690_A0 = 1
+#BCM_5695_A0 = 1
+#BCM_56102_A0 = 1
+#BCM_56112_A0 = 1
+#BCM_56304_B0 = 1
+#BCM_56314_A0 = 1
+#BCM_56504_A0 = 1
+#BCM_56504_B0 = 1
+#BCM_56514_A0 = 1
+BCM_56601_A0 = 1
+BCM_56602_A0 = 1
+BCM_56601_B0 = 1
+BCM_56602_B0 = 1
+BCM_56601_C0 = 1
+BCM_56602_C0 = 1
+BCM_56624_A0 = 1
+BCM_56624_B0 = 1
+BCM_56680_A0 = 1
+BCM_56685_A0 = 1
+BCM_56580_A0 = 1
+BCM_56700_A0 = 1
+BCM_56800_A0 = 1
+#BCM_56218_A0 = 1
+#BCM_56224_A0 = 1
+#BCM_56725_A0 = 1
+BCM_56820_A0 = 1
+BCM_56524_A0 = 1
+BCM_56524_B0 = 1
+BCM_56634_A0 = 1
+BCM_56634_B0 = 1
+BCM_56334_A0 = 1
+BCM_56334_B0 = 1
+
+
+#BCM_5338_A0 = 1
+#BCM_5380_A0 = 1
+#BCM_5338_B0 = 1
+#BCM_5325_A1 = 1
+
+#BCM_5324_A0 = 1
+#BCM_5396_A0 = 1
+#BCM_5389_A0 = 1
+#BCM_5398_A0 = 1
+#BCM_5324_A1 = 1
+
+#BCM_53115_A0 = 1
+#BCM_53118_A0 = 1
+
+#BCM_FE2000_A0 = 1
+#BCM_QE2000_A0 = 1
+#BCM_BME3200_B0 = 1
+#BCM_BM9600_A0 = 1
+
+# Options for multiple PHY support
+# If BCM_PHY_LIST is defined, it is a list of PHYs to include.
+# The default is to include all of them.
+# If none of them should be included specify BCM_PHY_LIST=EMPTY
+#BCM_PHY_LIST=522X 54XX 5464 5482 5421S SERDES SIMUL 8703 8705 EMPTY 
+
+# Options for BCM5338 5380
+#CFGFLAGS += -DROBO_OLD
+#ROBO_OLD = 1
+
+# Support for phy simulation
+#CFGFLAGS += -DINCLUDE_PHY_SIMUL
+#CFGFLAGS += -DSIM_ALL_PHYS        # All phys use simulation driver
+#CFGFLAGS += -DSIM_CMIC_LINK_STAT  # Get link status from CMIC register
+
+# Support for event logging
+#CFGFLAGS += -DINCLUDE_SHARED_EVLOG
+
+################################################################
+#
+# Misc Options
+#
+################################################################
+#CFGFLAGS += -DSOC_MEM_L3_DEFIP_WAR
+
+# Compile out Register/Table descriptive strings to generate a
+# compact image
+#CFGFLAGS +=-DSOC_NO_NAMES
+#CFGFLAGS +=-DSOC_NO_ALIAS
+#CFGFLAGS +=-DSOC_NO_DESC
+
+# Reload/WarmBoot
+#
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT
+#
+# Need this for validation using SOC scripts; Will move to tcl 
+# someday
+#CFGFLAGS += -DBCM_WARM_BOOT_SUPPORT_SW_DUMP
+
+################################################################
+#
+# Enable Easy Reload Support
+#
+################################################################
+#CFGFLAGS += -DBCM_EASY_RELOAD_SUPPORT
+
+# Software Trunk failover Support
+#
+#CFGFLAGS += -DBCM_TRUNK_FAILOVER_SUPPORT
+
+################################################################
+#
+# Override default VXWORKS thread options to make set 
+# VX_UNBREAKABLE flag in task creation.
+#
+################################################################
+#CFGFLAGS += -DVX_THREAD_OPT_UNBREAKABLE
+
+
+################################################################
+#
+# Use default priority for BDE interrupt thread.
+#
+################################################################
+#CFGFLAGS += -DSAL_BDE_THREAD_PRIO_DEFAULT
+
+ifdef LVL7_FIXUP
+# Turn on BCM Shell inclusion
+L7_INCLUDE_BCM_SHELL = 1
+CFGFLAGS += -DL7_BCM_SHELL_SUPPORT
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/make.pkg.vendor esw_sdk/make/make.pkg.vendor
--- sdk-xgs-robo-5.9.4/make/make.pkg.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/make.pkg.vendor	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,20 @@
+# Vendor makefile definitions included by andl package.
+# 
+# NOTE: The vendor source files are built using the Broadcom
+#       SDK make system, so none of the usual FASTPATH make 
+#       variables are used here.
+#
+#       See corresponding file makerules.pkg.vendor for details.
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Names of include files used to connect FASTPATH and SDK make systems.
+#
+export SDK_BUILD_FILE      := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_BUILD_FILE_NAME)
+export SDK_FLAGS_FILE      := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_FLAGS_FILE_NAME)
+export SDK_FLAGS_TEMP_FILE := $(FP_ROOT)/$(out_vend_sdk)/$(SDK_FLAGS_FILE_NAME).tmp
+
diff -rupN sdk-xgs-robo-5.9.4/make/makerules.link.vendor esw_sdk/make/makerules.link.vendor
--- sdk-xgs-robo-5.9.4/make/makerules.link.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/makerules.link.vendor	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,35 @@
+# Broadcom vendor SDK build rules included by ipl package.
+#
+
+# Define list of kernel modules to use.
+#
+# Note: Caller must set up $(out_kmod) and $(out_target) for use here.
+#       Example:
+#                 out_kmod   := $(FP_BASE)/$(OUT_KMOD)
+#                 out_target := $(FP_BASE)/$(OUT_TARGET)
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  kernelobjs := $(addprefix $(out_target)/,$(filter %.ko,$(L7_MODULE_LIST)))
+endif
+
+kmod_file = $(patsubst $(out_target)/%,$(out_kmod)/%,$@)
+
+
+ifneq (,$(COPYING_MSG))
+  copying_msg1 = $(COPYING_MSG) "$(notdir $(kmod_file)) to $(patsubst %/,%,$(subst ../,,$(dir $@)))"
+endif
+
+
+# Put out an error message if the kernel modules do not exist in the output target directory.
+#
+ifneq (,$(strip $(kernelobjs)))
+  $(kernelobjs):
+	@if [ ! -s $(kmod_file) ] ;\
+	then \
+		$(echo) "Error: The $(kmod_file) file is missing." ; \
+		$(echo) "  (This should have been built during 'bldlib' processing.)" ; \
+		exit 60 ; \
+	fi
+	$(copying_msg1)
+	$(DBG) cp -f $(kmod_file) $@
+endif
diff -rupN sdk-xgs-robo-5.9.4/make/makerules.pkg.vendor esw_sdk/make/makerules.pkg.vendor
--- sdk-xgs-robo-5.9.4/make/makerules.pkg.vendor	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/makerules.pkg.vendor	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,124 @@
+# This file defines special package-level build rules.
+#
+# Note: The vendor source files listed here are built into individual archive
+#       files which are subsequently included when pre-linking the package 
+#       library.
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Vendor output log file.
+#
+# Note: Using a Perl script instead of the 'grep' utility to prevent a 
+#       command error that occurs when all of the output messages are
+#       filtered by grep (thus giving a return value of 1).
+#
+grep_cmd          := $(PERL) $(FP_BASE)/src/l7tools/build/filter_sdk_output.pl
+vend_logging      := $(REDIRERR) | $(grep_cmd)
+ifeq (terse,$(CMD_DISPLAY_MODE))
+  vend_logging    := $(DEVNULL) $(REDIRERR)
+endif
+
+
+# Location where SDK archives are stored by vendor make system.
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  vend_sdk_arc := $(out_vend_sdk)/unix-user/$(L7_CPU)
+
+  ifeq (1,$(BLD_L7_TARGETOS_LINUX_26))
+    vend_sdk_arc := $(vend_sdk_arc)-2_6
+  endif
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
+  vend_sdk_arc := $(out_vend_sdk)/$(L7_TARGETOS)-$(L7_CPU)
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_ECOS))
+  vend_sdk_arc := $(out_vend_sdk)/$(L7_TARGETOS)-$(L7_CPU)
+endif
+
+# Define list of kernel modules to build (if any).
+#
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  krnl_module_list := $(filter %.ko,$(L7_MODULE_LIST))
+endif
+
+# A linuxhost 'sim' target trumps the L7_TARGETOS, override the value set above.
+#
+ifeq (1,$(BLD_L7_CPU_LINUXHOST))
+  vend_sdk_arc := $(out_vend_sdk)/unix-$(L7_CPU)
+endif
+
+# Temp file names.
+#
+temp1     := $(FP_BASE)/$(out_vend_sdk)/_templist1_sdk
+temp_out1 := $(FP_BASE)/$(out_vend_sdk)/$(sdk_build_file_name).tmp
+temp_out2 := $(SDK_FLAGS_TEMP_FILE)
+
+
+ifneq (,$(COPYING_MSG))
+  copying_msg1 = $(patsubst @%,%,$(COPYING_MSG)) "$(SPACE)$$i to $(OUT_TARGET)" ;
+endif
+
+
+.PHONY: clean
+
+
+# Clean vendor output archives and directories
+#
+# Note: No need to invoke the vendor make system here, since it is more efficient
+#       to simply delete all of the output files directly.
+#
+clean::
+	@echo "Removing vendor archive directories: $(out_vend_sdk)" $(HUSH)
+	+$(DBG)[ ! -d $(FP_BASE)/$(out_vend_sdk) ] || $(RM) -r $(FP_BASE)/$(out_vend_sdk)
+	$(DBG) for i in $(krnl_module_list) ; \
+	do \
+		$(RM) $(FP_BASE)/$(OUT_TARGET)/$$i ; \
+	done
+
+
+# Note:  Must ensure all output directories used by the vendor make system exist
+#        prior to invoking the vendor make file.
+#
+
+$(SDK_BUILD_FILE):
+	@echo "Building vendor SDK" $(HUSH)
+	+$(DBG)[ -d $(FP_BASE)/$(out_vend_sdk) ] || mkdir -p $(FP_BASE)/$(out_vend_sdk)
+	+$(DBG)[ -d $(FP_BASE)/$(OUT_TARGET) ] || mkdir -p $(FP_BASE)/$(OUT_TARGET)
+    # Invoke vendor SDK make system to build all of its files.
+	+$(DBG)$(MAKE) -C $(FP_BASE)/$(BROADCOM_SDK) -f ./make/make.sdk bldlib $(vend_logging)
+    # Copy the kernel modules to the desired output location
+    # (it's done this way so the modules can be found and re-copied after a 'cleanexe').
+	$(DBG) for i in $(krnl_module_list) ; \
+	do \
+		if ! cmp -s $(FP_BASE)/$(out_vend_sdk)/$$i $(FP_BASE)/$(OUT_TARGET)/$$i ; \
+		then \
+			$(copying_msg1) \
+			cp -f $(FP_BASE)/$(out_vend_sdk)/$$i $(FP_BASE)/$(OUT_TARGET) ; \
+		fi ; \
+	done
+    # Build list of vendor archive files and store results in a temp file.
+    # Create dependency list and build rule from content file list.
+	-$(DBG) $(RM) $(temp1)
+	$(DBG) touch $(temp1)
+	$(DBG) echo -n -e "LIBARCS := " > $(temp_out1)
+	$(DBG) find $(FP_BASE)/$(vend_sdk_arc) -maxdepth 1 -type f -name "*.a" -fprintf $(temp1) "%p "
+	$(DBG) cat $(temp1) >> $(temp_out1)
+	-$(DBG) $(RM) $(temp1)
+	$(DBG) cp -f $(temp_out1) $@
+	-$(DBG) $(RM) $(temp_out1)
+
+$(SDK_FLAGS_FILE):
+	@echo "Building SDK flags file" $(HUSH)
+	+$(DBG)[ -d $(FP_BASE)/$(out_vend_sdk) ] || mkdir -p $(FP_BASE)/$(out_vend_sdk)
+	-$(DBG) $(RM) $(temp_out2)
+    # Invoke vendor SDK make system to create CFLAGS_SDK variable in $(SDK_FLAGS_TEMP_FILE).
+	+$(DBG)$(MAKE) -C $(FP_BASE)/$(BROADCOM_SDK) -f ./make/make.sdk get_sdk_flags $(vend_logging)
+	$(DBG) cp -f $(temp_out2) $@
+	-$(DBG) $(RM) $(temp_out2)
+
diff -rupN sdk-xgs-robo-5.9.4/make/make.sdk esw_sdk/make/make.sdk
--- sdk-xgs-robo-5.9.4/make/make.sdk	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/make/make.sdk	2011-11-28 17:01:54.000000000 +0000
@@ -0,0 +1,189 @@
+# Device-level makefile definitions included by andl package.
+# 
+
+# Local source path abbreviations (for convenience).
+#
+
+# Output location for vendor files.
+#
+out_vend_sdk := $(OUT_ANDL)/vendor
+
+
+# Pull in common make definitions.
+#
+include $(FP_ROOT)/src/l7tools/build/make.cfg
+
+# Note: Be sure to reference this using +$(VEND_MAKE) so that certain make
+#       command line parameters are passed through to the sub-makefile.
+#
+VEND_MAKE := $(DBG)$(MAKE)
+
+
+ifndef MAKE_LOCAL
+ $(error 'The $$MAKE_LOCAL environment variable is not set')
+endif
+
+# Adjust the console messages generated by the vendor make system by defining
+# its QUIET variable.
+#
+# Note: This still does not provide a sufficient level of control to mesh with
+#       the type of output messages generated by the FASTPATH make system, but
+#       it's a start.
+#
+ifneq (verbose,$(CMD_DISPLAY_MODE))
+  export QUIET=1
+endif
+
+
+# The following variables are required by the Broadcom SDK.
+#
+# Note: Want the SDK make system to store the stripped kernel modules
+#       in the vendor output directory; the FASTPATH make system will 
+#       copy them to the intended target location.
+#
+export SDK              := $(FP_ROOT)/$(BROADCOM_SDK)
+export TARGET           := $(L7_TARGETOS)-$(L7_CPU)
+export L7_PKGNAME       := $(PKGNAME)
+export L7_OUTPUT        := $(FP_ROOT)/$(out_vend_sdk)
+export L7_OUTPUT_KMOD   := $(FP_ROOT)/$(out_vend_sdk)
+export L7_OUT_SDK_FLAGS := $(SDK_FLAGS_TEMP_FILE)
+export PPC_TOOLS_DIR    := $(dir $(CROSS_COMPILE))
+export MIPS_TOOLS_DIR   := $(PPC_TOOLS_DIR)
+
+ifeq (1,$(BLD_L7_TARGETOS_LINUX))
+  export LINUX_INCLUDE := $(KERNEL_SRC)/include
+  export KERNDIR     := $(KERNEL_SRC)
+  os_suffix          := -2_6
+endif
+
+
+# Extra include paths to be passed to BCM vendor make.
+#
+l7_extra_inc_paths := \
+	$(L7PUBLIC_INCLDIR) \
+	$(COMPONENT_INCLDIR) \
+	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base \
+	-I$(FP_BASE)/andl/hapi/$(L7_CHIP)/base/bcmsys \
+	-I$(SDK)/include/customer/$(L7_CUSTOMER)
+
+ifneq (,$(strip $(PRJ_DIR)))
+  l7_extra_inc_paths += \
+	-I$(PRJ_DIR) 
+endif
+
+ifneq (,$(strip $(BSP_DIR)))
+  l7_extra_inc_paths += \
+        -I$(BSP_DIR)
+endif
+
+ifneq (,$(strip $(BSP_DIR)))
+  l7_extra_inc_paths += \
+        -I$(BSP_DIR)
+endif
+
+ifeq (1,$(BLD_L7_TARGETOS_VXWORKS))
+  l7_extra_inc_paths += \
+	-I$(WIND_BASE)/target/config/comps/src \
+	-I$(WIND_BASE)/target/src/drv
+endif
+
+export L7_BCM_VENDOR_INCL := $(subst $(FP_BASE),$(FP_ROOT),$(l7_extra_inc_paths))
+
+
+# Additional CFLAGS to be passed to BCM vendor make.
+#
+export L7_BCM_VENDOR_CFLAGS := \
+	-DLVL7_FIXUP \
+	-DBCM_COSQ_HIGIG_MAP_DISABLE \
+	-DSAL_THREAD_PRIORITY=255 \
+	$(L7_OS_VERSION) \
+	-DSAL_NO_FLASH_FS \
+	-DRW_MULTI_THREAD \
+	$(CPU_TYPE) \
+	$(PRODUCT_TYPE) \
+  $(L7_TOOL_FLAG) \
+  -DSAL_BDE_THREAD_PRIO_DEFAULT \
+  -DVX_THREAD_OPT_UNBREAKABLE \
+  -DSDK_INCLUDE_CUSTOM_CONFIG
+
+ifneq (1,$(BLD_L7_TARGETOS_VXWORKS))
+export L7_BCM_VENDOR_CFLAGS += -DNO_FILEIO
+endif
+
+ifneq (,$(filter -mlongcall,$(CPU_FLAGS)))
+export L7_BCM_VENDOR_CFLAGS += -mlongcall
+endif
+
+# Map sal_alloc/sal_free to osapi Api's except for 
+# - MIPS64 cpu: SDK has some special code for MIPS64 in sal_alloc.
+# - Linux kernel mode
+# - Smartpath product
+
+l7_sal_map_to_osapi := 1
+
+ifeq (1,$(BLD_L7_PRODUCT_SMARTPATH))
+l7_sal_map_to_osapi := 0
+endif
+
+ifeq (MIPS64,$(CPU))
+l7_sal_map_to_osapi := 0
+endif
+
+ifeq (1,$(l7_sal_map_to_osapi))
+export L7_BCM_VENDOR_CFLAGS += \
+	-DL7_SAL_MAP_TO_OSAPI
+endif
+
+# Translate the make command goal to that used by the vendor make system.
+#
+# Note: The default is to leave this blank so that everything gets built.
+#
+vend_bld_goal   :=
+ifeq (get_sdk_flags,$(MAKECMDGOALS))
+  vend_bld_goal := get_sdk_flags
+endif
+
+
+# Decide which type of target to build.
+#
+target_type := $(L7_TARGETOS)
+ifeq (1,$(BLD_L7_CPU_LINUXHOST))
+  target_type := linuxhost
+endif
+
+# Disallow parallel build option (-j) since the underlying SDK target rules
+# are not designed to handle it properly.
+#
+new_makeflags = $(filter-out -j,$(MAKEFLAGS))
+
+
+# Special Build rules
+#  - All entries must be specified relative to top-of-view $(FP_ROOT).
+#  - Defines all source locations to be referenced by the package-level makefile.
+#
+# Note: Assumes all necessary output directories already exist.
+#
+# Note: To echo debug messages, begin the message text with "Debug: " to get past
+#       the SDK output message filter script.
+#
+
+.PHONY: bldlib get_sdk_flags vend_sdk_linux vend_sdk_vxworks vend_sdk_linuxhost
+
+
+bldlib get_sdk_flags:: vend_sdk_$(target_type)
+	$(NOOP)
+
+
+vend_sdk_linux::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/user/fastpath$(os_suffix) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+vend_sdk_ecos::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/$(L7_CPU) $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+vend_sdk_vxworks::
+	+$(VEND_MAKE) -C $(SDK)/systems/$(L7_TARGETOS)/common $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
+
+vend_sdk_linuxhost::
+	+$(VEND_MAKE) -C $(SDK)/systems/linuxhost $(vend_bld_goal) MAKEFLAGS=$(QT)$(new_makeflags)$(QT)
+
diff -rupN sdk-xgs-robo-5.9.4/make/Make.tools esw_sdk/make/Make.tools
--- sdk-xgs-robo-5.9.4/make/Make.tools	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/make/Make.tools	2011-11-28 18:11:27.939950043 +0000
@@ -175,6 +175,17 @@ FOREACH	=	$(MKTOOL) -foreach
 MAKEDEP =	/bin/echo
 ECHO	=	/bin/echo
 TOUCH   =	/bin/touch
+ifdef LVL7_FIXUP
+ifeq "$(HOSTTYPE)" "Windows2000PC"
+RM	=	rm -rf
+CP	=	cp
+MKDIR	=	mkdir -p
+MAKEDEP =	echo
+ECHO	=	echo
+TOUCH   =	touch
+endif
+endif
+
 MKBEEP	=	$(MKTOOL) -beep
 endif
 
diff -rupN sdk-xgs-robo-5.9.4/src/appl/cpudb/debug.c esw_sdk/src/appl/cpudb/debug.c
--- sdk-xgs-robo-5.9.4/src/appl/cpudb/debug.c	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/src/appl/cpudb/debug.c	2011-11-28 18:14:34.463665222 +0000
@@ -58,4 +58,10 @@ uint32		tks_debug_level = TKS_DBG_DEFAUL
 char		*tks_debug_names[] = {TKS_DBG_NAMES};
 int		(*tks_debug_print)(const char *format, ...) = soc_cm_print;
 
+#ifdef LVL7_FIXUP
+int (*tks_debug_error)(const char *format, ...) = soc_cm_debug_error;
+int (*tks_debug_warn)(const char *format, ...) = soc_cm_debug_warn;
+int (*tks_debug_debug)(const char *format, ...) = soc_cm_debug_debug;
+#endif
+
 #endif /* BROADCOM_DEBUG */
diff -rupN sdk-xgs-robo-5.9.4/src/appl/cputrans/atp.c esw_sdk/src/appl/cputrans/atp.c
--- sdk-xgs-robo-5.9.4/src/appl/cputrans/atp.c	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/src/appl/cputrans/atp.c	2011-11-28 18:14:44.660605232 +0000
@@ -3801,9 +3801,23 @@ tx_done_handle(_atp_client_t *client, in
 {
 
     if (trans->flags & _ATP_TX_F_TIMEOUT) {
+#ifdef LVL7_FIXUP
+        /* Print the mac-address of the unit */
+        ATP_ERR(("ATP: TX timeout, seq %d. cli %d. to %d(mac %x:%x:%x:%x:%x:%x) tx cnt %d.\n",
+                 trans->_atp_hdr.seq_num, trans->client->client_id,
+                 trans->dest_cpu, 
+                 _atp_cpu_info[trans->dest_cpu].key.key[0],
+                 _atp_cpu_info[trans->dest_cpu].key.key[1],
+                 _atp_cpu_info[trans->dest_cpu].key.key[2],
+                 _atp_cpu_info[trans->dest_cpu].key.key[3],
+                 _atp_cpu_info[trans->dest_cpu].key.key[4],
+                 _atp_cpu_info[trans->dest_cpu].key.key[5],
+                 trans->tx_count));
+#else
         ATP_ERR(("ATP: TX timeout, seq %d. cli %d. to %d tx cnt %d.\n",
                  trans->_atp_hdr.seq_num, trans->client->client_id,
                  trans->dest_cpu, trans->tx_count));
+#endif
         if (atp_timeout_cb != NULL) {
             (*atp_timeout_cb)(CPU_KEY(trans->dest_cpu));
         }
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/cint/sal_cint_data.c esw_sdk/src/appl/diag/cint/sal_cint_data.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/cint/sal_cint_data.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/diag/cint/sal_cint_data.c	2011-11-28 18:15:07.871018923 +0000
@@ -61,6 +61,14 @@ int sal_core_cint_data_not_empty; 
 #include <sal/core/thread.h>
 #include <sal/appl/config.h>
 
+/* PTin added: solve an incompatibility of CINT with LVL7_FIXUP definition */
+#if ((defined(LVL7_FIXUP)) && (defined(L7_SAL_MAP_TO_OSAPI)) && (!defined(__KERNEL__)))
+#undef sal_alloc
+#undef sal_free
+extern void *sal_alloc(unsigned int, char *);
+extern void sal_free(void *);
+#endif
+
 CINT_FWRAPPER_CREATE_RP2(void*, void, 1, 0, 
                          sal_alloc, 
                          int,int,size,0,0,
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/cmdlist.c esw_sdk/src/appl/diag/cmdlist.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/cmdlist.c	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/src/appl/diag/cmdlist.c	2011-11-28 18:15:34.103408540 +0000
@@ -579,8 +579,10 @@ static cmd_t bcm_esw_cmd_list[] = {
     {"STiMeout",        cmd_stimeout,           stimeout_usage,         "Set S-Channel timeout in microseconds" },
     {"STKMode",         cmd_stkmode,            cmd_stkmode_usage,       "Hardware Stacking Mode Control"},
 #if defined(TKS_SUPPORT)
+#if LVL7_FIXUP && !defined(L7_PRODUCT_SMARTPATH)
     {"StkTask",         tks_stk_task,           tks_stk_task_usage,      "Stack task control" },
 #endif
+#endif
     {"SwitchControl",   cmd_switch_control,     cmd_switch_control_usage, "General switch control"},
 #ifdef INCLUDE_I2C
 #ifdef BCM_ESW_SUPPORT
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/config_bcm.c esw_sdk/src/appl/diag/config_bcm.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/config_bcm.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/src/appl/diag/config_bcm.c	2011-11-28 17:01:55.000000000 +0000
@@ -0,0 +1,2257 @@
+unsigned char config_bcm_array[] = {
+0x23, 0x0a, 0x23, 0x20, 0x24, 0x49, 0x64, 0x3a, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 
+0x62, 0x63, 0x6d, 0x2c, 0x76, 0x20, 0x31, 0x2e, 0x38, 0x35, 0x2e, 0x36, 0x2e, 0x38, 0x20, 0x42, 
+0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x24, 0x0a, 0x23, 0x20, 
+0x24, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x20, 0x28, 0x63, 0x29, 0x20, 
+0x32, 0x30, 0x30, 0x30, 0x2d, 0x32, 0x30, 0x30, 0x31, 0x2c, 0x20, 0x32, 0x30, 0x30, 0x32, 0x20, 
+0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x2e, 0x0a, 0x23, 
+0x20, 0x41, 0x6c, 0x6c, 0x20, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x52, 0x65, 0x73, 0x65, 
+0x72, 0x76, 0x65, 0x64, 0x2e, 0x24, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x61, 0x6d, 0x70, 0x6c, 
+0x65, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x66, 0x69, 0x6c, 
+0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 
+0x63, 0x6f, 0x6d, 0x20, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x2e, 0x0a, 0x23, 0x20, 0x45, 0x61, 0x63, 0x68, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x69, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 
+0x73, 0x74, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 
+0x6c, 0x69, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 
+0x3a, 0x0a, 0x23, 0x09, 0x3c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x3e, 0x3d, 
+0x3c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x64, 0x6f, 
+0x63, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x74, 0x78, 0x74, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 
+0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x6f, 
+0x77, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x6f, 0x20, 0x61, 0x6c, 
+0x6c, 0x6f, 0x77, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x66, 
+0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x6f, 0x72, 0x20, 
+0x63, 0x68, 0x69, 0x70, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 
+0x20, 0x75, 0x70, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 
+0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73, 0x20, 
+0x69, 0x6e, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x0a, 0x23, 0x09, 0x2e, 0x3c, 0x75, 0x6e, 
+0x69, 0x74, 0x2d, 0x6e, 0x75, 0x6d, 0x3e, 0x09, 0x09, 0x28, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x22, 
+0x66, 0x6f, 0x6f, 0x2e, 0x30, 0x22, 0x29, 0x0a, 0x23, 0x09, 0x2e, 0x3c, 0x43, 0x48, 0x49, 0x50, 
+0x5f, 0x54, 0x59, 0x50, 0x45, 0x3e, 0x09, 0x09, 0x28, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 
+0x6f, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x30, 0x5f, 0x42, 0x30, 0x29, 0x0a, 0x23, 0x09, 
+0x2e, 0x3c, 0x43, 0x48, 0x49, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3e, 0x09, 0x09, 0x28, 
+0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 0x6f, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x30, 
+0x29, 0x0a, 0x23, 0x09, 0x3c, 0x6e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x3e, 0x09, 0x09, 0x28, 
+0x65, 0x2e, 0x67, 0x2e, 0x20, 0x66, 0x6f, 0x6f, 0x29, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 
+0x20, 0x75, 0x70, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x23, 0x20, 
+0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 
+0x0a, 0x23, 0x09, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3e, 0x09, 
+0x09, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x30, 0x0a, 0x23, 0x09, 
+0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3e, 0x09, 0x09, 0x70, 0x68, 
+0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x0a, 0x23, 0x09, 0x5f, 0x3c, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3e, 0x09, 0x09, 0x70, 0x68, 0x79, 0x5f, 
+0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x31, 0x0a, 0x23, 0x09, 0x3c, 0x6e, 0x6f, 
+0x74, 0x68, 0x69, 0x6e, 0x67, 0x3e, 0x09, 0x09, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 
+0x73, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x65, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x31, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x68, 0x61, 0x76, 
+0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 
+0x69, 0x70, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x65, 
+0x73, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x61, 0x62, 
+0x6f, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 
+0x6c, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x73, 0x70, 0x61, 
+0x63, 0x65, 0x20, 0x69, 0x73, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 
+0x64, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x20, 0x6c, 0x69, 0x6e, 
+0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x27, 0x23, 0x27, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 
+0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 
+0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
+0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x64, 0x65, 
+0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x20, 0x20, 0x4f, 
+0x75, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 
+0x68, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 
+0x6e, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 
+0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x62, 0x65, 0x73, 0x74, 0x20, 
+0x6c, 0x65, 0x66, 0x74, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x0a, 0x23, 0x20, 
+0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 
+0x73, 0x68, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x66, 0x65, 0x61, 0x73, 0x69, 
+0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 
+0x20, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x27, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x27, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6d, 
+0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x70, 
+0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61, 
+0x6e, 0x61, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x20, 0x69, 0x6e, 0x20, 0x6e, 0x6f, 0x6e, 
+0x2d, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 
+0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x6d, 0x61, 0x63, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 
+0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 0x74, 
+0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 
+0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 0x65, 
+0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 0x4d, 
+0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 
+0x73, 0x73, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 
+0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x65, 0x73, 0x73, 0x3d, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a, 0x30, 0x30, 
+0x3a, 0x30, 0x31, 0x3a, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x20, 0x49, 0x50, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 
+0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 
+0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 
+0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 
+0x73, 0x73, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 
+0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x65, 0x73, 0x73, 0x3d, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x31, 0x2e, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x49, 0x50, 0x20, 0x6e, 0x65, 
+0x74, 0x6d, 0x61, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 
+0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 
+0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 
+0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 
+0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 
+0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 
+0x70, 0x5f, 0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x3d, 0x32, 0x35, 0x35, 0x2e, 0x32, 0x35, 
+0x35, 0x2e, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x20, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x77, 0x69, 
+0x74, 0x63, 0x68, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x73, 0x65, 
+0x6c, 0x66, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x50, 0x55, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4e, 0x56, 0x52, 0x41, 
+0x4d, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 
+0x64, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x68, 0x6f, 0x73, 0x74, 0x20, 0x6e, 0x61, 0x6d, 
+0x65, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 
+0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 
+0x3d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x0a, 0x0a, 0x23, 
+0x20, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 
+0x4f, 0x53, 0x20, 0x2f, 0x20, 0x53, 0x41, 0x4c, 0x0a, 0x23, 0x6f, 0x73, 0x3d, 0x76, 0x78, 0x77, 
+0x6f, 0x72, 0x6b, 0x73, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 
+0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x49, 0x52, 0x51, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x28, 
+0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 
+0x20, 0x62, 0x72, 0x69, 0x6e, 0x67, 0x75, 0x70, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x62, 
+0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x52, 0x51, 0x73, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x66, 
+0x72, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x0a, 0x23, 
+0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 
+0x72, 0x71, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 
+0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x49, 0x52, 0x51, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 
+0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x20, 0x0a, 0x23, 
+0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x49, 0x52, 0x51, 0x20, 0x70, 0x6f, 0x6c, 
+0x6c, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x72, 0x71, 0x5f, 0x64, 0x65, 0x6c, 0x61, 
+0x79, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x72, 0x71, 0x5f, 
+0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x3d, 0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x0a, 
+0x23, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x79, 0x20, 0x61, 0x72, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x73, 
+0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x72, 
+0x63, 0x2e, 0x73, 0x6f, 0x63, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x61, 0x6e, 0x69, 0x74, 0x79, 
+0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x0a, 0x23, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 
+0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x50, 0x32, 0x34, 0x53, 
+0x29, 0x0a, 0x23, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x28, 0x53, 0x44, 
+0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x29, 0x0a, 0x23, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x20, 0x28, 
+0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x53, 0x29, 0x0a, 0x23, 0x6d, 0x65, 
+0x72, 0x6c, 0x69, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 
+0x6f, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 0x39, 0x30, 0x52, 0x34, 0x38, 0x53, 0x29, 
+0x0a, 0x23, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x47, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x28, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x39, 0x35, 0x50, 0x32, 0x34, 0x53, 0x58, 0x29, 0x0a, 0x23, 0x67, 0x75, 0x65, 0x6e, 0x65, 
+0x76, 0x65, 0x72, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 
+0x65, 0x73, 0x20, 0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x53, 0x44, 0x4b, 0x35, 0x36, 
+0x37, 0x30, 0x4b, 0x38, 0x29, 0x0a, 0x23, 0x68, 0x65, 0x72, 0x63, 0x38, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x0a, 0x23, 0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 
+0x69, 0x65, 0x73, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x50, 0x4c, 
+0x4c, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 
+0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x20, 
+0x0a, 0x23, 0x70, 0x6c, 0x6c, 0x5f, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x2e, 0x3c, 0x75, 0x6e, 
+0x69, 0x74, 0x2d, 0x6e, 0x75, 0x6d, 0x3e, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x62, 
+0x75, 0x67, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 
+0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x44, 0x4b, 0x5f, 0x58, 0x58, 0x58, 0x20, 
+0x6d, 0x61, 0x73, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x62, 
+0x6f, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x0a, 0x23, 0x64, 0x65, 0x62, 0x75, 0x67, 0x3d, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x72, 0x65, 
+0x6c, 0x6f, 0x61, 0x64, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x69, 0x73, 0x20, 
+0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x2c, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6d, 0x75, 0x73, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x20, 0x65, 0x6e, 0x6f, 0x75, 0x67, 
+0x68, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x74, 
+0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x20, 0x20, 0x4f, 0x75, 0x72, 0x20, 0x77, 0x6f, 0x72, 0x73, 0x74, 
+0x2d, 0x63, 0x61, 0x73, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x69, 
+0x73, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x77, 0x69, 0x74, 0x68, 
+0x20, 0x65, 0x69, 0x67, 0x68, 0x74, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x33, 
+0x73, 0x20, 0x61, 0x74, 0x20, 0x6e, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x20, 0x33, 0x30, 0x30, 0x6b, 
+0x20, 0x61, 0x70, 0x69, 0x65, 0x63, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x72, 0x65, 0x6c, 0x6f, 0x61, 
+0x64, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x33, 0x31, 
+0x34, 0x35, 0x37, 0x32, 0x38, 0x0a, 0x23, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 
+0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x3a, 0x72, 0x65, 
+0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x6f, 
+0x77, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x62, 
+0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x68, 0x61, 
+0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 
+0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x73, 0x6f, 
+0x2c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 0x6f, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x20, 0x77, 0x68, 0x69, 
+0x63, 0x68, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x73, 0x61, 0x76, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x23, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x77, 0x69, 0x64, 
+0x74, 0x68, 0x3d, 0x31, 0x32, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x42, 0x43, 
+0x4d, 0x35, 0x36, 0x30, 0x35, 0x2c, 0x20, 0x44, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 
+0x67, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 
+0x6c, 0x30, 0x3d, 0x34, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 
+0x64, 0x6c, 0x6c, 0x31, 0x3d, 0x30, 0x78, 0x64, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 
+0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x32, 0x3d, 0x37, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x68, 0x69, 0x70, 
+0x73, 0x2c, 0x20, 0x44, 0x4c, 0x4c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x73, 0x68, 
+0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x30, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 
+0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 
+0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x31, 0x3d, 0x30, 0x0a, 0x23, 
+0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x6c, 0x6c, 0x32, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x35, 0x36, 0x31, 0x35, 
+0x20, 0x4d, 0x49, 0x53, 0x43, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x32, 0x2e, 0x53, 0x44, 0x43, 
+0x4c, 0x4b, 0x5f, 0x31, 0x33, 0x33, 0x4d, 0x48, 0x5a, 0x5f, 0x45, 0x4e, 0x20, 0x28, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x76, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x29, 0x0a, 
+0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x64, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 
+0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 
+0x4f, 0x4c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x52, 
+0x20, 0x61, 0x6e, 0x64, 0x20, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x42, 0x41, 0x43, 0x4b, 
+0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 
+0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 
+0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x20, 0x72, 0x65, 
+0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x72, 
+0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x47, 0x2d, 
+0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x62, 
+0x61, 0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x79, 0x70, 
+0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x66, 0x65, 0x3d, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x67, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x68, 0x62, 0x6d, 0x5f, 0x63, 0x70, 0x75, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 
+0x5f, 0x69, 0x62, 0x70, 0x5f, 0x66, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x62, 
+0x70, 0x5f, 0x67, 0x65, 0x3d, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x62, 0x70, 0x5f, 0x63, 
+0x70, 0x75, 0x3d, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x33, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x0a, 0x23, 0x6c, 0x33, 0x5f, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x69, 0x70, 0x6d, 0x63, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x69, 0x70, 0x6d, 0x63, 0x5f, 0x64, 0x6f, 
+0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x72, 0x75, 0x6e, 0x6b, 
+0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x20, 0x0a, 0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x39, 
+0x35, 0x2c, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x31, 0x32, 0x38, 0x20, 0x74, 
+0x72, 0x75, 0x6e, 0x6b, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x20, 0x28, 0x61, 0x66, 0x66, 
+0x65, 0x63, 0x74, 0x73, 0x20, 0x48, 0x69, 0x47, 0x69, 0x67, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 
+0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x43, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x2c, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x28, 0x6f, 0x72, 0x20, 
+0x3d, 0x30, 0x29, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x39, 0x35, 0x0a, 0x23, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 
+0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x76, 0x69, 0x61, 0x20, 0x74, 0x68, 0x65, 0x20, 0x48, 0x69, 0x47, 0x69, 0x67, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x64, 0x65, 0x76, 
+0x69, 0x63, 0x65, 0x73, 0x20, 0x4f, 0x4b, 0x29, 0x2e, 0x0a, 0x23, 0x74, 0x72, 0x75, 0x6e, 0x6b, 
+0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x68, 0x65, 0x20, 0x48, 0x69, 0x67, 0x69, 0x67, 0x32, 0x20, 0x68, 0x65, 0x61, 0x64, 
+0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x63, 0x61, 0x74, 
+0x65, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x72, 0x6f, 0x61, 0x64, 
+0x63, 0x61, 0x73, 0x74, 0x2c, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x2c, 
+0x20, 0x61, 0x6e, 0x64, 0x0a, 0x23, 0x20, 0x49, 0x50, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 
+0x61, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x6f, 
+0x20, 0x6f, 0x6e, 0x65, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x20, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x20, 0x20, 0x54, 
+0x68, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x62, 0x65, 0x74, 
+0x77, 0x65, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 
+0x75, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x64, 
+0x65, 0x78, 0x20, 0x69, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 
+0x62, 0x79, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 
+0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 
+0x73, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 
+0x39, 0x36, 0x0a, 0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 
+0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 
+0x30, 0x39, 0x36, 0x0a, 0x23, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x32, 0x5f, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x33, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 
+0x34, 0x30, 0x39, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x38, 0x78, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x78, 0x78, 
+0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 
+0x6d, 0x65, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x6d, 0x75, 0x6c, 
+0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x69, 
+0x6e, 0x20, 0x61, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 
+0x69, 0x66, 0x79, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 
+0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 
+0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 0x39, 0x36, 0x0a, 
+0x23, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x33, 0x5f, 0x72, 
+0x61, 0x6e, 0x67, 0x65, 0x3d, 0x34, 0x30, 0x39, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x70, 0x62, 0x6d, 
+0x70, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x61, 
+0x73, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6e, 0x79, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x69, 0x74, 
+0x6d, 0x61, 0x70, 0x20, 0x69, 0x73, 0x20, 0x61, 0x73, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x20, 0x74, 
+0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x0a, 0x23, 0x20, 0x44, 
+0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x73, 0x20, 
+0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x28, 0x75, 0x6e, 0x69, 0x74, 0x29, 0x2c, 0x20, 
+0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 
+0x69, 0x6e, 0x67, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x63, 
+0x70, 0x75, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x31, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6e, 
+0x6f, 0x77, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 
+0x78, 0x31, 0x34, 0x62, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 
+0x6c, 0x79, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x31, 0x2c, 0x33, 0x2c, 0x36, 0x2c, 
+0x38, 0x2c, 0x43, 0x50, 0x55, 0x29, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 
+0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x31, 0x34, 0x62, 0x0a, 0x0a, 0x23, 
+0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 
+0x79, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 
+0x63, 0x6b, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 
+0x20, 0x61, 0x73, 0x20, 0x78, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x42, 0x79, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x6e, 0x20, 0x58, 0x50, 0x4f, 
+0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x69, 0x73, 0x20, 0x74, 0x72, 0x65, 0x61, 
+0x74, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x0a, 
+0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 0x2e, 0x30, 
+0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x20, 0x55, 0x6e, 
+0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 
+0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 
+0x61, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x58, 0x50, 
+0x4f, 0x52, 0x54, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x58, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 
+0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 
+0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x66, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x20, 
+0x4f, 0x6e, 0x20, 0x35, 0x36, 0x38, 0x78, 0x78, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 
+0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 0x6f, 0x63, 
+0x6b, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x58, 0x45, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 
+0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 
+0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 
+0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x48, 
+0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x41, 0x20, 0x73, 0x70, 0x65, 0x63, 
+0x69, 0x66, 0x69, 0x63, 0x20, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x0a, 0x23, 0x20, 0x6d, 0x61, 
+0x79, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x58, 0x45, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x73, 0x6f, 0x6d, 0x65, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x2c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x0a, 
+0x23, 0x20, 0x62, 0x69, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 
+0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x48, 0x47, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 
+0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x48, 0x47, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x58, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 
+0x65, 0x0a, 0x23, 0x20, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x74, 0x68, 
+0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x74, 0x20, 0x41, 0x50, 0x49, 
+0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x78, 0x65, 
+0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 
+0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x63, 
+0x6b, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x65, 
+0x63, 0x69, 0x66, 0x79, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x63, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x47, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x69, 0x73, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 
+0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 
+0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x61, 0x20, 0x73, 0x74, 
+0x61, 0x63, 0x6b, 0x20, 0x63, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x47, 0x45, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 
+0x64, 0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x2e, 
+0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x36, 0x0a, 
+0x23, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x69, 
+0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x6c, 
+0x6c, 0x20, 0x47, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x61, 0x73, 0x20, 0x72, 0x65, 
+0x67, 0x75, 0x6c, 0x61, 0x72, 0x0a, 0x23, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x20, 0x70, 0x61, 
+0x6e, 0x65, 0x6c, 0x20, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x73, 0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x67, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x30, 0x3d, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x2c, 
+0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 
+0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6c, 0x6c, 0x20, 0x50, 0x48, 0x59, 
+0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 
+0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x69, 
+0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x51, 0x75, 0x69, 
+0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 0x20, 0x62, 0x75, 0x73, 0x20, 
+0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 
+0x73, 0x20, 0x61, 0x20, 0x70, 0x68, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x70, 0x61, 
+0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x70, 0x68, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x78, 0x65, 0x30, 
+0x2e, 0x30, 0x3d, 0x32, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 0x5f, 
+0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x3e, 0x20, 0x69, 0x73, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 
+0x75, 0x6c, 0x6c, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 
+0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x69, 0x6e, 0x67, 
+0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 
+0x47, 0x4d, 0x49, 0x49, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 
+0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x0a, 0x23, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2d, 0x74, 0x6f, 
+0x2d, 0x63, 0x68, 0x69, 0x70, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x61, 
+0x20, 0x34, 0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x28, 
+0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x34, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x29, 
+0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x30, 
+0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 
+0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x3c, 0x70, 0x6f, 0x72, 0x74, 0x3e, 0x20, 0x69, 0x73, 
+0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 
+0x68, 0x79, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x65, 0x78, 
+0x61, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x34, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x29, 0x0a, 0x23, 
+0x20, 0x44, 0x72, 0x69, 0x76, 0x65, 0x20, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x70, 0x68, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 
+0x64, 0x65, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x73, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x20, 0x70, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x61, 0x73, 0x69, 0x73, 0x2e, 0x0a, 0x0a, 
+0x23, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 
+0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x64, 0x72, 0x76, 0x3d, 0x30, 0x0a, 0x23, 0x74, 0x75, 0x72, 0x62, 
+0x6f, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x2f, 0x4f, 
+0x20, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 
+0x6f, 0x6e, 0x2e, 0x20, 0x28, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 
+0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x0a, 0x23, 0x20, 0x42, 0x43, 
+0x4d, 0x35, 0x36, 0x34, 0x35, 0x42, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x61, 0x74, 0x65, 
+0x72, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 
+0x69, 0x6f, 0x76, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x2e, 0x35, 
+0x56, 0x0a, 0x23, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 
+0x20, 0x6d, 0x61, 0x79, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 
+0x74, 0x20, 0x67, 0x69, 0x67, 0x5f, 0x69, 0x6f, 0x76, 0x20, 0x62, 0x65, 0x20, 0x31, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x32, 0x2e, 0x35, 0x56, 0x0a, 0x0a, 0x23, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 
+0x69, 0x6f, 0x76, 0x3d, 0x30, 0x0a, 0x23, 0x67, 0x69, 0x67, 0x5f, 0x69, 0x6f, 0x76, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x42, 0x49, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x47, 0x4d, 0x49, 0x49, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 
+0x23, 0x69, 0x66, 0x5f, 0x74, 0x62, 0x69, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 
+0x23, 0x69, 0x66, 0x5f, 0x74, 0x62, 0x69, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 0x73, 0x20, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x65, 
+0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x73, 0x20, 0x77, 0x68, 0x61, 0x74, 
+0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 
+0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x69, 0x73, 0x0a, 0x23, 0x20, 0x6f, 0x6e, 0x20, 0x62, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x20, 0x69, 
+0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 
+0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x69, 0x73, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x2c, 0x0a, 0x23, 0x20, 
+0x77, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 
+0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 
+0x69, 0x73, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x2c, 0x20, 0x77, 0x65, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 
+0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 
+0x20, 0x35, 0x36, 0x39, 0x30, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x64, 0x69, 0x72, 
+0x65, 0x63, 0x74, 0x6c, 0x79, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x6d, 0x6f, 0x64, 
+0x75, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, 
+0x65, 0x64, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x32, 0x34, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x35, 0x36, 0x39, 0x30, 0x20, 0x53, 0x44, 0x4b, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x68, 0x69, 0x63, 
+0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x73, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
+0x6f, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x35, 0x34, 0x33, 0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 0x23, 0x20, 0x53, 
+0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x61, 0x75, 
+0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 0x66, 0x20, 0x6e, 
+0x6f, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 0x2e, 0x0a, 0x0a, 
+0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x39, 0x30, 0x5f, 0x67, 0x65, 0x31, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x39, 0x30, 0x5f, 0x67, 0x65, 0x31, 0x31, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 
+0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 
+0x69, 0x73, 0x20, 0x35, 0x36, 0x58, 0x58, 0x58, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 
+0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 
+0x63, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 
+0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 
+0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 
+0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x0a, 0x23, 0x20, 0x77, 
+0x68, 0x69, 0x63, 0x68, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 
+0x6f, 0x72, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x65, 0x78, 0x74, 0x65, 
+0x72, 0x6e, 0x61, 0x6c, 0x20, 0x35, 0x34, 0x33, 0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 
+0x23, 0x20, 0x53, 0x45, 0x52, 0x44, 0x45, 0x53, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 
+0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x69, 
+0x66, 0x20, 0x6e, 0x6f, 0x20, 0x50, 0x48, 0x59, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x74, 0x65, 
+0x63, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x44, 0x49, 0x4f, 
+0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x78, 0x78, 0x78, 0x5f, 0x67, 0x65, 
+0x31, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x36, 0x78, 0x78, 0x78, 0x5f, 
+0x67, 0x65, 0x31, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 
+0x20, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 0x34, 0x53, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
+0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x69, 0x66, 0x20, 0x61, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x34, 0x36, 0x34, 0x53, 0x20, 0x6f, 0x72, 0x20, 0x35, 0x34, 0x36, 0x34, 0x53, 0x52, 0x0a, 0x23, 
+0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 
+0x69, 0x73, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 
+0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x20, 0x49, 0x44, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x6f, 0x66, 0x20, 0x35, 0x34, 0x36, 
+0x34, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x52, 0x2f, 0x35, 0x34, 0x36, 0x34, 0x53, 0x2f, 0x35, 0x34, 
+0x36, 0x34, 0x53, 0x52, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 0x34, 
+0x53, 0x5f, 0x67, 0x65, 0x38, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 0x36, 
+0x34, 0x53, 0x5f, 0x67, 0x65, 0x39, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x34, 
+0x36, 0x34, 0x53, 0x5f, 0x67, 0x65, 0x31, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x35, 0x34, 0x36, 0x34, 0x53, 0x5f, 0x67, 0x65, 0x31, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 
+0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x38, 0x37, 0x30, 0x36, 0x20, 
+0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x69, 0x66, 0x20, 0x61, 
+0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 0x30, 0x36, 0x20, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x38, 
+0x37, 0x32, 0x36, 0x20, 0x0a, 0x23, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x20, 
+0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x20, 0x62, 
+0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 
+0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x44, 0x20, 0x69, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x73, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x34, 0x2f, 
+0x38, 0x37, 0x30, 0x36, 0x2f, 0x38, 0x37, 0x32, 0x36, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 
+0x38, 0x37, 0x30, 0x36, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x69, 
+0x62, 0x65, 0x72, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x61, 
+0x75, 0x74, 0x6f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 
+0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 
+0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x35, 0x34, 0x32, 0x31, 
+0x53, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x35, 0x34, 0x36, 0x34, 0x53, 0x2e, 0x0a, 0x23, 0x20, 0x54, 
+0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x35, 0x34, 0x36, 0x34, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 
+0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 
+0x6d, 0x5f, 0x67, 0x65, 0x31, 0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x69, 0x62, 
+0x65, 0x72, 0x20, 0x76, 0x73, 0x2e, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x70, 0x72, 
+0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 
+0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x69, 0x73, 0x20, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 
+0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 
+0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x74, 
+0x6f, 0x0a, 0x23, 0x20, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x20, 0x69, 0x66, 0x20, 0x42, 0x4f, 
+0x54, 0x48, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x20, 0x20, 
+0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x28, 0x31, 
+0x29, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x28, 0x30, 0x29, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 
+0x64, 0x69, 0x75, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 
+0x2c, 0x20, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 
+0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 
+0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 0x75, 0x73, 0x65, 
+0x2e, 0x20, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 
+0x20, 0x28, 0x31, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x20, 0x28, 
+0x30, 0x29, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 
+0x70, 0x72, 0x65, 0x66, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x5f, 0x67, 0x65, 0x31, 
+0x2e, 0x31, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x61, 0x72, 
+0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x6b, 0x69, 0x70, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x69, 
+0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x50, 0x48, 0x59, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x35, 0x36, 0x37, 0x33, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x6a, 0x75, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x70, 0x68, 0x79, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x35, 0x36, 0x37, 0x33, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 
+0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x20, 0x6f, 0x6e, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x74, 0x69, 0x6d, 
+0x65, 0x20, 0x74, 0x6f, 0x20, 0x77, 0x61, 0x69, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x20, 0x62, 0x75, 0x73, 0x79, 0x20, 0x63, 
+0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x61, 
+0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3d, 0x32, 
+0x35, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x70, 0x68, 0x79, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x28, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 
+0x74, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x79, 
+0x20, 0x35, 0x34, 0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x29, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x65, 0x20, 0x35, 0x34, 0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 
+0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x68, 0x65, 0x65, 0x74, 0x73, 0x3a, 0x0a, 0x23, 0x20, 
+0x6c, 0x65, 0x64, 0x4e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x45, 
+0x44, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x70, 0x68, 0x79, 0x20, 0x72, 0x65, 0x67, 0x20, 0x30, 
+0x78, 0x31, 0x78, 0x5b, 0x30, 0x31, 0x31, 0x31, 0x30, 0x31, 0x2c, 0x20, 0x30, 0x31, 0x31, 0x31, 
+0x30, 0x5d, 0x0a, 0x23, 0x20, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x20, 0x69, 0x73, 
+0x20, 0x70, 0x68, 0x79, 0x20, 0x72, 0x65, 0x67, 0x20, 0x30, 0x78, 0x31, 0x78, 0x5b, 0x30, 0x31, 
+0x30, 0x30, 0x31, 0x5d, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x31, 0x5f, 0x6d, 
+0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x32, 0x5f, 
+0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 0x33, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x33, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 0x64, 
+0x34, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x36, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x65, 
+0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x3d, 0x30, 0x78, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x6f, 
+0x66, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 
+0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x34, 
+0x36, 0x78, 0x20, 0x70, 0x68, 0x79, 0x73, 0x29, 0x0a, 0x23, 0x09, 0x30, 0x09, 0x75, 0x73, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x68, 0x79, 0x27, 0x73, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 0x74, 
+0x65, 0x63, 0x74, 0x0a, 0x23, 0x09, 0x31, 0x09, 0x75, 0x73, 0x65, 0x20, 0x50, 0x45, 0x43, 0x4c, 
+0x20, 0x53, 0x44, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 
+0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 0x6e, 
+0x20, 0x35, 0x34, 0x36, 0x31, 0x29, 0x0a, 0x23, 0x09, 0x34, 0x09, 0x75, 0x73, 0x65, 0x20, 0x4c, 
+0x45, 0x44, 0x34, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 
+0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 0x6e, 
+0x20, 0x35, 0x34, 0x36, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x31, 0x30, 0x09, 0x75, 0x73, 0x65, 0x20, 
+0x45, 0x4e, 0x5f, 0x31, 0x30, 0x42, 0x20, 0x61, 0x73, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 
+0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x0a, 0x23, 0x20, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 
+0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x72, 0x65, 0x61, 0x74, 0x73, 0x20, 
+0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x20, 0x61, 0x73, 
+0x20, 0x6c, 0x6f, 0x73, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 
+0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x69, 0x6e, 
+0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 
+0x61, 0x72, 0x64, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x64, 
+0x65, 0x74, 0x65, 0x63, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x70, 0x68, 0x79, 0x35, 0x33, 
+0x31, 0x31, 0x35, 0x5f, 0x61, 0x30, 0x20, 0x73, 0x77, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 
+0x6f, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x6e, 
+0x6b, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x20, 0x61, 0x74, 0x20, 0x41, 0x4e, 0x2b, 0x31, 0x30, 
+0x30, 0x54, 0x58, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x0a, 0x23, 0x09, 0x30, 0x09, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x20, 0x77, 0x6f, 0x72, 
+0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x09, 0x31, 0x09, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x20, 0x77, 0x6f, 0x72, 0x6b, 
+0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x33, 0x31, 
+0x31, 0x35, 0x5f, 0x61, 0x6e, 0x31, 0x30, 0x30, 0x74, 0x78, 0x5f, 0x77, 0x61, 0x72, 0x3d, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x70, 0x68, 0x79, 0x35, 0x33, 0x31, 0x31, 0x35, 0x5f, 0x62, 0x30, 0x20, 
+0x73, 0x77, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x61, 
+0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x0a, 0x23, 0x09, 
+0x30, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 
+0x57, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x09, 
+0x31, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 
+0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x2d, 
+0x2d, 0x2d, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x53, 0x57, 0x2d, 0x57, 0x41, 0x52, 0x20, 0x61, 
+0x6c, 0x73, 0x6f, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 
+0x69, 0x78, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x31, 0x31, 0x38, 0x5f, 0x61, 
+0x30, 0x20, 0x61, 0x74, 0x20, 0x49, 0x4f, 0x50, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 
+0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x35, 0x33, 0x31, 0x31, 0x35, 0x5f, 0x62, 0x30, 0x5f, 
+0x69, 0x6f, 0x70, 0x5f, 0x77, 0x61, 0x72, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 
+0x74, 0x69, 0x61, 0x6c, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x43, 
+0x4f, 0x53, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 
+0x69, 0x74, 0x28, 0x29, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x73, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x66, 0x6f, 0x72, 0x2e, 0x0a, 0x23, 0x62, 
+0x63, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x73, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 0x20, 
+0x58, 0x51, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x28, 0x72, 0x65, 0x6c, 0x61, 0x74, 
+0x69, 0x76, 0x65, 0x29, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65, 0x61, 0x63, 0x68, 0x20, 0x43, 0x4f, 
+0x53, 0x51, 0x2e, 0x20, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x20, 0x53, 0x4f, 
+0x43, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 
+0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x58, 0x51, 0x73, 0x20, 0x61, 0x6d, 0x6f, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x27, 0x73, 0x20, 0x58, 0x51, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 
+0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x6f, 0x6e, 0x65, 
+0x20, 0x43, 0x4f, 0x53, 0x51, 0x20, 0x69, 0x73, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x27, 
+0x73, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x64, 
+0x69, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 
+0x6d, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 
+0x62, 0x6c, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 
+0x75, 0x65, 0x73, 0x2e, 0x20, 0x0a, 0x23, 0x20, 0x0a, 0x23, 0x20, 0x41, 0x20, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 
+0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x2e, 0x20, 0x4e, 0x6f, 0x6e, 
+0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20, 0x6d, 0x75, 
+0x73, 0x74, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x74, 0x20, 0x43, 0x4f, 0x53, 0x51, 
+0x30, 0x0a, 0x23, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x20, 0x63, 
+0x6f, 0x6e, 0x74, 0x69, 0x67, 0x75, 0x6f, 0x75, 0x73, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x2c, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x73, 0x75, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 
+0x64, 0x20, 0x61, 0x64, 0x64, 0x20, 0x75, 0x70, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x20, 0x0a, 0x23, 0x20, 0x70, 0x6f, 0x77, 0x65, 
+0x72, 0x20, 0x6f, 0x66, 0x20, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x2e, 
+0x0a, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 
+0x5f, 0x63, 0x6f, 0x73, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 
+0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 
+0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 
+0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 
+0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x34, 0x3d, 0x31, 0x0a, 
+0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 
+0x6f, 0x73, 0x35, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 
+0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x36, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 
+0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x37, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x2d, 0x58, 0x51, 0x20, 0x70, 0x61, 0x63, 0x6b, 
+0x65, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x6f, 
+0x6d, 0x65, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 
+0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x65, 
+0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x20, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x43, 0x4f, 0x53, 0x51, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x0a, 0x23, 0x20, 0x41, 0x6e, 0x20, 
+0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 
+0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 
+0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x43, 0x4f, 0x53, 0x51, 0x2e, 0x20, 0x4e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x61, 0x67, 0x65, 0x20, 0x6f, 
+0x66, 0x20, 0x61, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x28, 0x66, 0x6f, 0x72, 0x20, 
+0x61, 0x20, 0x43, 0x4f, 0x53, 0x51, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x6c, 0x6c, 
+0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 
+0x65, 0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x61, 0x72, 
+0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x73, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x67, 
+0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x2c, 0x20, 0x61, 0x73, 0x20, 0x77, 
+0x65, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 
+0x69, 0x6d, 0x75, 0x6d, 0x20, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6d, 0x61, 
+0x6c, 0x6c, 0x65, 0x73, 0x74, 0x20, 0x0a, 0x23, 0x20, 0x28, 0x6e, 0x6f, 0x6e, 0x7a, 0x65, 0x72, 
+0x6f, 0x29, 0x20, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x0a, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x30, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x31, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x32, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x33, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x34, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x35, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 
+0x6f, 0x73, 0x36, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 
+0x5f, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x37, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x35, 0x30, 0x30, 0x20, 
+0x73, 0x74, 0x79, 0x6c, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x6d, 0x61, 0x6e, 
+0x61, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 
+0x73, 0x20, 0x35, 0x36, 0x31, 0x30, 0x30, 0x2c, 0x20, 0x35, 0x36, 0x33, 0x30, 0x30, 0x2c, 0x20, 
+0x35, 0x36, 0x32, 0x30, 0x30, 0x2c, 0x20, 0x35, 0x33, 0x37, 0x30, 0x30, 0x20, 0x66, 0x61, 0x6d, 
+0x69, 0x6c, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 
+0x0a, 0x23, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4d, 0x4d, 0x55, 
+0x20, 0x78, 0x71, 0x20, 0x28, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x29, 0x20, 0x63, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x38, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x75, 
+0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x20, 
+0x74, 0x68, 0x61, 0x6e, 0x20, 0x38, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 
+0x6e, 0x74, 0x6c, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x2e, 
+0x20, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x38, 
+0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x65, 
+0x76, 0x65, 0x72, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x71, 
+0x75, 0x65, 0x75, 0x65, 0x73, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 
+0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x4e, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 
+0x74, 0x6f, 0x20, 0x30, 0x2e, 0x20, 0x20, 0x41, 0x20, 0x34, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 
+0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 
+0x78, 0x71, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x4e, 0x3d, 0x30, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x4e, 0x3d, 0x34, 0x2c, 0x20, 0x35, 0x2c, 0x20, 0x36, 0x2c, 0x20, 
+0x37, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 
+0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x0a, 0x23, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x66, 
+0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x39, 0x30, 0x0a, 0x23, 
+0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 
+0x66, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 
+0x20, 0x75, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x62, 0x65, 
+0x66, 0x6f, 0x72, 0x65, 0x20, 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x66, 0x6c, 
+0x6f, 0x77, 0x5f, 0x66, 0x61, 0x6e, 0x69, 0x6e, 0x3d, 0x34, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x74, 
+0x65, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x20, 0x74, 
+0x6f, 0x20, 0x65, 0x61, 0x63, 0x68, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
+0x6c, 0x20, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 
+0x72, 0x65, 0x64, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 
+0x3d, 0x36, 0x30, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 
+0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x38, 0x30, 0x0a, 
+0x23, 0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 
+0x6f, 0x66, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 0x2d, 
+0x63, 0x6f, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x0a, 0x23, 0x09, 0x09, 0x09, 
+0x09, 0x75, 0x73, 0x65, 0x64, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x72, 0x65, 0x64, 
+0x20, 0x6f, 0x72, 0x20, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 
+0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x62, 0x65, 0x20, 
+0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 
+0x74, 0x69, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x3d, 0x31, 0x35, 0x33, 0x36, 0x0a, 0x23, 
+0x09, 0x09, 0x09, 0x09, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 
+0x2d, 0x63, 0x6f, 0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x72, 0x65, 0x73, 0x65, 
+0x72, 0x76, 0x65, 0x64, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 
+0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x20, 0x75, 0x70, 0x20, 0x66, 0x72, 0x6f, 0x6d, 
+0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x63, 
+0x65, 0x6c, 0x6c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x52, 
+0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x20, 0x61, 
+0x72, 0x65, 0x20, 0x70, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 
+0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x49, 0x66, 0x20, 
+0x30, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 
+0x69, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 
+0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x65, 
+0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x65, 0x72, 0x2d, 0x63, 0x6f, 0x73, 0x20, 0x63, 
+0x65, 0x6c, 0x6c, 0x73, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x75, 0x73, 0x65, 
+0x20, 0x61, 0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 
+0x76, 0x65, 0x64, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x70, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 
+0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x4f, 0x6e, 
+0x6c, 0x79, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x73, 
+0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x69, 0x73, 0x20, 0x30, 
+0x2e, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x74, 
+0x65, 0x73, 0x3d, 0x33, 0x30, 0x37, 0x32, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x28, 0x31, 0x35, 
+0x33, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6f, 0x66, 0x66, 
+0x73, 0x65, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 
+0x20, 0x63, 0x65, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 
+0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x2e, 
+0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x20, 0x75, 0x70, 
+0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6e, 
+0x65, 0x78, 0x74, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x0a, 0x23, 
+0x6d, 0x6d, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x3d, 0x31, 
+0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6e, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 
+0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x0a, 0x23, 0x6d, 0x6d, 
+0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x3d, 0x32, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 
+0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 
+0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x20, 0x20, 0x49, 
+0x66, 0x20, 0x30, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 
+0x65, 0x0a, 0x23, 0x09, 0x09, 0x09, 0x09, 0x6d, 0x6d, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x63, 
+0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 
+0x20, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x0a, 0x23, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 
+0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 
+0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x29, 0x2e, 0x0a, 
+0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x62, 
+0x6d, 0x70, 0x3d, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 
+0x72, 0x6f, 0x2c, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x28, 0x29, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 
+0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 
+0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 
+0x6e, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 
+0x61, 0x78, 0x65, 0x72, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 
+0x65, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x69, 0x74, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x73, 0x63, 0x61, 
+0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 
+0x63, 0x61, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x75, 0x73, 0x65, 0x63, 
+0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x69, 0x6e, 
+0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 
+0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x6d, 0x65, 0x73, 
+0x73, 0x61, 0x67, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x73, 0x63, 0x72, 0x6f, 0x6c, 
+0x6c, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x79, 0x2e, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x62, 
+0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x65, 
+0x72, 0x72, 0x3d, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x0a, 0x23, 0x62, 
+0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x65, 
+0x72, 0x72, 0x3d, 0x35, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x53, 0x74, 
+0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 
+0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x62, 0x69, 0x74, 0x6d, 
+0x61, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x77, 
+0x68, 0x69, 0x63, 0x68, 0x20, 0x73, 0x74, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 
+0x69, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 
+0x62, 0x63, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x70, 0x62, 0x6d, 0x70, 0x3d, 0x0a, 0x0a, 
+0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x20, 0x6f, 
+0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x73, 0x74, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x6c, 
+0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 
+0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 
+0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x65, 0x72, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x65, 0x69, 0x6e, 0x67, 0x20, 
+0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x73, 0x74, 
+0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x31, 0x30, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x6c, 0x61, 0x67, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x4f, 0x52, 0x64, 0x20, 0x74, 0x6f, 0x67, 
+0x65, 0x74, 0x68, 0x65, 0x72, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x30, 0x78, 0x30, 0x20, 0x69, 
+0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x63, 0x6f, 
+0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 
+0x20, 0x4e, 0x4f, 0x54, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x30, 0x78, 0x31, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 
+0x68, 0x61, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 0x20, 
+0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x28, 
+0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x2e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x73, 
+0x74, 0x61, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x3d, 0x30, 0x78, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x28, 0x2a, 
+0x4f, 0x56, 0x52, 0x29, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 
+0x0a, 0x23, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x31, 
+0x35, 0x31, 0x38, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x2a, 
+0x4f, 0x56, 0x52, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x63, 
+0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 
+0x73, 0x74, 0x61, 0x74, 0x5f, 0x6a, 0x75, 0x6d, 0x62, 0x6f, 0x3d, 0x31, 0x35, 0x31, 0x38, 0x0a, 
+0x0a, 0x23, 0x20, 0x53, 0x69, 0x7a, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x44, 
+0x4d, 0x41, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x64, 
+0x6d, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x31, 0x30, 0x32, 0x34, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x68, 0x61, 0x72, 0x64, 
+0x77, 0x61, 0x72, 0x65, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 
+0x3a, 0x0a, 0x23, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x62, 0x79, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x62, 0x79, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x2b, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 
+0x20, 0x62, 0x79, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x2c, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 
+0x20, 0x62, 0x79, 0x20, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x2e, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 
+0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 
+0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x32, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x44, 0x4d, 0x41, 0x65, 0x64, 0x20, 
+0x69, 0x6e, 0x74, 0x6f, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 
+0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x68, 
+0x65, 0x6e, 0x20, 0x6e, 0x6f, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x61, 
+0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 
+0x61, 0x62, 0x6c, 0x65, 0x2e, 0x20, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x0a, 0x23, 0x20, 
+0x70, 0x61, 0x72, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 
+0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x75, 0x73, 0x65, 0x2e, 0x20, 0x20, 0x4d, 
+0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x32, 
+0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 
+0x6b, 0x73, 0x3d, 0x36, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 
+0x74, 0x6f, 0x20, 0x41, 0x56, 0x4c, 0x20, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 
+0x78, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x76, 0x6c, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x79, 
+0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4c, 0x32, 
+0x58, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 
+0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x20, 0x6f, 0x75, 0x74, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x0a, 0x23, 0x20, 
+0x74, 0x69, 0x6d, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x61, 0x76, 0x65, 0x20, 0x6d, 0x65, 
+0x6d, 0x6f, 0x72, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6f, 0x66, 0x20, 
+0x44, 0x4d, 0x41, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x20, 0x20, 0x4d, 0x75, 0x73, 
+0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x32, 0x2e, 
+0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x3d, 
+0x38, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x20, 0x62, 0x65, 0x74, 0x77, 
+0x65, 0x65, 0x6e, 0x20, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 
+0x69, 0x6f, 0x6e, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x66, 0x74, 
+0x77, 0x61, 0x72, 0x65, 0x20, 0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x28, 0x35, 0x36, 0x39, 0x30, 0x20, 
+0x6f, 0x6e, 0x6c, 0x79, 0x29, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x20, 0x74, 0x68, 0x72, 0x65, 
+0x61, 0x64, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x72, 0x75, 0x6e, 0x73, 
+0x20, 0x65, 0x76, 0x65, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x2f, 0x6c, 0x32, 0x78, 0x6d, 
+0x73, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x33, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x6c, 0x32, 0x78, 0x6d, 
+0x73, 0x67, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x63, 
+0x61, 0x6c, 0x6c, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x75, 0x73, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x61, 0x6e, 
+0x20, 0x4c, 0x32, 0x58, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x0a, 0x23, 0x20, 0x69, 
+0x73, 0x20, 0x61, 0x64, 0x64, 0x65, 0x64, 0x2c, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 
+0x2c, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x48, 
+0x6f, 0x77, 0x65, 0x76, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x66, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x68, 0x69, 0x74, 0x20, 0x62, 0x69, 0x74, 0x20, 0x63, 0x68, 0x61, 0x6e, 
+0x67, 0x65, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x69, 0x74, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x75, 0x6e, 0x6c, 
+0x65, 0x73, 0x73, 0x20, 0x6c, 0x32, 0x78, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x64, 
+0x6f, 0x77, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x20, 0x69, 0x73, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 
+0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x74, 0x73, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x4c, 0x32, 0x20, 
+0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x61, 
+0x6b, 0x61, 0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x4c, 0x20, 0x28, 
+0x30, 0x29, 0x20, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 
+0x46, 0x4f, 0x20, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x20, 0x61, 0x6b, 0x61, 
+0x20, 0x4c, 0x32, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x20, 0x28, 0x31, 0x29, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x4c, 0x32, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x63, 0x68, 
+0x61, 0x6e, 0x67, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 
+0x6e, 0x2e, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x4c, 0x32, 0x58, 0x20, 
+0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 
+0x0a, 0x23, 0x6c, 0x32, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 
+0x72, 0x20, 0x6f, 0x66, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x6d, 0x6f, 0x76, 0x65, 0x73, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x75, 0x61, 0x6c, 0x20, 0x68, 0x61, 0x73, 0x68, 0x20, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x23, 0x64, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 
+0x5f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x3d, 0x31, 
+0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x42, 0x75, 0x69, 0x6c, 0x74, 
+0x2d, 0x49, 0x6e, 0x2d, 0x53, 0x65, 0x6c, 0x66, 0x2d, 0x54, 0x65, 0x73, 0x74, 0x20, 0x28, 0x42, 
+0x49, 0x53, 0x54, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 
+0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x62, 
+0x69, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x65, 0x63, 
+0x3d, 0x31, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6c, 
+0x79, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 
+0x72, 0x79, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x0a, 0x23, 0x20, 0x6f, 
+0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x6e, 
+0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x69, 0x6d, 
+0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x41, 
+0x52, 0x4c, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 
+0x74, 0x65, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x63, 0x68, 
+0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x2c, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 
+0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x0a, 0x23, 0x20, 0x75, 0x73, 
+0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x41, 0x4c, 0x4c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x69, 
+0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x74, 
+0x6f, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x2d, 0x43, 0x68, 
+0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 
+0x72, 0x72, 0x75, 0x70, 0x74, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x65, 0x20, 
+0x6f, 0x63, 0x63, 0x75, 0x72, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 
+0x74, 0x73, 0x20, 0x6d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x20, 0x28, 0x75, 0x73, 0x65, 0x20, 0x30, 0x20, 0x74, 
+0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x62, 0x6c, 
+0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x29, 0x2e, 0x0a, 0x23, 0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 
+0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x63, 
+0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 
+0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2e, 0x20, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x20, 0x74, 0x68, 
+0x61, 0x74, 0x20, 0x41, 0x52, 0x4c, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x2f, 
+0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x20, 
+0x63, 0x61, 0x6e, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 
+0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x69, 0x73, 0x20, 0x68, 
+0x69, 0x67, 0x68, 0x6c, 0x79, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 
+0x73, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 
+0x65, 0x63, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 
+0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 
+0x20, 0x74, 0x6f, 0x20, 0x31, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 
+0x6d, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 0x0a, 0x23, 0x20, 0x69, 0x6e, 0x74, 
+0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 0x49, 0x49, 0x20, 
+0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x73, 0x69, 0x6e, 0x63, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x79, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x61, 0x20, 0x77, 0x68, 0x69, 
+0x6c, 0x65, 0x20, 0x28, 0x37, 0x30, 0x20, 0x75, 0x73, 0x65, 0x63, 0x20, 0x6f, 0x72, 0x20, 0x73, 
+0x6f, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x76, 0x61, 
+0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 
+0x20, 0x30, 0x2c, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 
+0x20, 0x4d, 0x49, 0x49, 0x0a, 0x23, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
+0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x49, 0x49, 0x4d, 0x20, 
+0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 
+0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 
+0x73, 0x0a, 0x0a, 0x23, 0x6d, 0x69, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 
+0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 
+0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x74, 0x72, 0x20, 0x31, 0x37, 0x20, 0x74, 0x68, 0x72, 0x6f, 
+0x75, 0x67, 0x68, 0x20, 0x74, 0x72, 0x20, 0x32, 0x34, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 
+0x72, 0x0a, 0x23, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x75, 0x70, 0x0a, 0x0a, 0x23, 0x64, 0x69, 
+0x61, 0x67, 0x5f, 0x6c, 0x62, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x3d, 0x31, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 
+0x74, 0x69, 0x63, 0x73, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x74, 
+0x72, 0x20, 0x31, 0x37, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, 0x72, 0x20, 
+0x32, 0x34, 0x29, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x6c, 0x6f, 0x6f, 
+0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x72, 0x65, 0x63, 
+0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x6c, 0x62, 
+0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x3d, 
+0x35, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 
+0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x2d, 0x20, 0x69, 0x66, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x54, 0x52, 0x55, 0x45, 0x2c, 0x20, 0x61, 0x6c, 0x6c, 0x20, 
+0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x74, 
+0x68, 0x20, 0x30, 0x78, 0x64, 0x65, 0x61, 0x64, 0x62, 0x65, 0x65, 0x66, 0x20, 0x62, 0x65, 0x66, 
+0x6f, 0x72, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 
+0x74, 0x68, 0x65, 0x6d, 0x2e, 0x20, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x73, 0x6c, 0x6f, 
+0x77, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x79, 0x6f, 0x75, 0x20, 
+0x77, 0x69, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x20, 0x69, 0x66, 0x20, 0x6c, 
+0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x6d, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x70, 0x61, 
+0x72, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x64, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x20, 0x50, 0x43, 0x49, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 
+0x73, 0x2e, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x6c, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 
+0x5f, 0x72, 0x78, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 
+0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x70, 
+0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x70, 0x77, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x31, 0x30, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x20, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 0x28, 0x65, 0x73, 
+0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x27, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 
+0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x27, 0x29, 0x0a, 0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 
+0x74, 0x61, 0x62, 0x73, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x53, 0x43, 0x49, 0x49, 0x20, 
+0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 
+0x73, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x34, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x2c, 0x20, 0x34, 0x36, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x65, 0x72, 
+0x69, 0x6f, 0x64, 0x2c, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x6e, 0x65, 0x0a, 
+0x23, 0x64, 0x69, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x3d, 0x34, 0x34, 0x0a, 0x0a, 
+0x23, 0x20, 0x61, 0x72, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x66, 0x66, 0x20, 
+0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 
+0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x6f, 0x66, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x20, 0x54, 0x41, 0x47, 0x20, 0x30, 0x78, 0x66, 0x66, 0x66, 0x20, 
+0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x64, 0x65, 0x20, 0x69, 
+0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x70, 0x72, 
+0x6f, 0x70, 0x65, 0x72, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 
+0x6f, 0x6e, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x61, 
+0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 
+0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x66, 0x66, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x6f, 0x6e, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x74, 0x29, 0x20, 
+0x6d, 0x61, 0x79, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x71, 
+0x75, 0x69, 0x72, 0x65, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x74, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 
+0x4c, 0x20, 0x69, 0x73, 0x20, 0x65, 0x78, 0x74, 0x72, 0x61, 0x20, 0x62, 0x75, 0x73, 0x79, 0x2e, 
+0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x74, 0x72, 
+0x69, 0x65, 0x73, 0x3d, 0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x69, 0x6d, 0x69, 0x74, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x41, 
+0x52, 0x4c, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x63, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x77, 0x69, 0x6c, 
+0x6c, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2c, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x20, 
+0x6b, 0x65, 0x65, 0x70, 0x20, 0x69, 0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x68, 0x6f, 0x67, 
+0x67, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x20, 0x20, 0x53, 
+0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 
+0x6c, 0x65, 0x2e, 0x0a, 0x23, 0x20, 0x44, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 
+0x70, 0x70, 0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x4c, 0x32, 0x58, 0x20, 0x73, 0x68, 0x61, 0x64, 
+0x6f, 0x77, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x73, 0x65, 0x65, 0x20, 0x6c, 0x32, 
+0x78, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 
+0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x29, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 
+0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x3d, 0x33, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6c, 
+0x6f, 0x6e, 0x67, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x52, 0x4c, 
+0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 
+0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 
+0x79, 0x20, 0x41, 0x52, 0x4c, 0x2d, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x20, 
+0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x20, 0x20, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x6f, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 
+0x65, 0x73, 0x20, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x65, 
+0x72, 0x69, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x67, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 
+0x20, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x73, 0x74, 0x72, 
+0x65, 0x61, 0x6d, 0x20, 0x61, 0x6e, 0x64, 0x2f, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x75, 
+0x70, 0x74, 0x20, 0x4c, 0x32, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x2e, 0x0a, 0x0a, 0x23, 0x61, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 
+0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x3d, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 
+0x20, 0x6f, 0x66, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x20, 
+0x53, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6c, 
+0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x77, 
+0x69, 0x6c, 0x6c, 0x20, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x62, 0x65, 0x66, 
+0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 
+0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x67, 0x69, 0x76, 0x65, 0x73, 0x20, 0x75, 0x70, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x65, 0x78, 0x69, 0x74, 0x73, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x6f, 0x63, 
+0x5f, 0x63, 0x74, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x65, 0x72, 0x72, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 
+0x20, 0x53, 0x6b, 0x69, 0x70, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x20, 0x72, 
+0x65, 0x73, 0x65, 0x74, 0x20, 0x28, 0x43, 0x4d, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 
+0x47, 0x2e, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x50, 0x53, 0x29, 0x20, 0x77, 0x68, 0x65, 
+0x6e, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x6f, 0x63, 0x5f, 0x72, 0x65, 
+0x73, 0x65, 0x74, 0x28, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x65, 
+0x61, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x65, 0x2e, 0x67, 0x2e, 0x20, 0x27, 0x69, 
+0x6e, 0x69, 0x74, 0x20, 0x73, 0x6f, 0x63, 0x27, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x4e, 0x4f, 
+0x54, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x61, 0x20, 0x68, 0x61, 0x72, 0x64, 
+0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x2e, 0x0a, 0x0a, 0x23, 0x73, 0x6f, 0x63, 0x5f, 0x73, 0x6b, 
+0x69, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x61, 
+0x63, 0x6b, 0x65, 0x74, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x20, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x0a, 0x0a, 0x23, 0x70, 0x64, 0x6d, 0x61, 0x5f, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 0x41, 
+0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x61, 0x73, 0x73, 
+0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 
+0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x63, 0x64, 0x6d, 0x61, 0x5f, 
+0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 
+0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 
+0x64, 0x73, 0x0a, 0x0a, 0x23, 0x74, 0x64, 0x6d, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 
+0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x75, 0x73, 0x65, 
+0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x20, 0x72, 0x61, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x70, 0x6f, 0x6c, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x23, 0x74, 0x64, 0x6d, 
+0x61, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 0x4d, 
+0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 
+0x6e, 0x64, 0x73, 0x0a, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 
+0x4d, 0x41, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x68, 0x6f, 
+0x75, 0x6c, 0x64, 0x20, 0x75, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 
+0x74, 0x20, 0x72, 0x61, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x70, 0x6f, 
+0x6c, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 
+0x6e, 0x0a, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x2f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x4c, 0x41, 0x4d, 0x20, 0x44, 
+0x4d, 0x41, 0x0a, 0x23, 0x74, 0x73, 0x6c, 0x61, 0x6d, 0x5f, 0x64, 0x6d, 0x61, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x2f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x44, 
+0x4d, 0x41, 0x0a, 0x23, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6d, 0x61, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 
+0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x20, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x20, 
+0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72, 
+0x69, 0x6e, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x47, 0x42, 0x50, 0x46, 0x55, 0x4c, 0x4c, 
+0x0a, 0x23, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x2e, 0x20, 0x20, 0x67, 
+0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x20, 0x73, 0x65, 0x74, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 
+0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x65, 0x63, 0x6f, 
+0x6e, 0x64, 0x73, 0x0a, 0x23, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x73, 0x75, 
+0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x20, 0x47, 0x42, 0x50, 0x46, 0x55, 0x4c, 0x4c, 
+0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x76, 
+0x6f, 0x69, 0x64, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 
+0x73, 0x65, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x20, 0x74, 0x61, 0x6b, 
+0x65, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x61, 0x66, 
+0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x2e, 0x0a, 0x0a, 
+0x23, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x67, 0x62, 0x70, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 
+0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x65, 0x73, 
+0x74, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x63, 0x66, 0x61, 0x70, 0x69, 0x6e, 
+0x69, 0x74, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4d, 0x54, 0x5f, 0x50, 
+0x41, 0x54, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x53, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x54, 0x5f, 
+0x50, 0x41, 0x54, 0x5f, 0x41, 0x53, 0x29, 0x0a, 0x23, 0x63, 0x66, 0x61, 0x70, 0x5f, 0x74, 0x65, 
+0x73, 0x74, 0x73, 0x3d, 0x31, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 
+0x20, 0x73, 0x63, 0x61, 0x6e, 0x3a, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 
+0x73, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x62, 
+0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x65, 0x6e, 
+0x74, 0x72, 0x69, 0x65, 0x73, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 
+0x6d, 0x61, 0x78, 0x65, 0x72, 0x72, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x32, 0x35, 
+0x36, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 
+0x75, 0x73, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 
+0x74, 0x69, 0x65, 0x73, 0x3b, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x68, 0x69, 0x67, 0x68, 0x65, 
+0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x32, 0x35, 0x35, 0x20, 0x69, 0x73, 0x20, 0x6c, 0x6f, 
+0x77, 0x65, 0x73, 0x74, 0x0a, 0x0a, 0x23, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 
+0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x61, 0x72, 
+0x6c, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 
+0x35, 0x30, 0x0a, 0x23, 0x6c, 0x32, 0x78, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 
+0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x63, 
+0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 
+0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 
+0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 0x62, 0x63, 0x6d, 0x5f, 0x74, 0x78, 
+0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 0x0a, 0x23, 
+0x62, 0x63, 0x6d, 0x5f, 0x72, 0x78, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 
+0x69, 0x3d, 0x32, 0x30, 0x30, 0x0a, 0x23, 0x6c, 0x32, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 
+0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x31, 0x35, 0x30, 0x0a, 0x23, 0x65, 0x72, 0x72, 
+0x6f, 0x72, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x3d, 0x35, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x57, 0x68, 0x65, 0x6e, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 
+0x67, 0x6f, 0x65, 0x73, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 
+0x79, 0x20, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 
+0x69, 0x76, 0x65, 0x72, 0x20, 0x77, 0x61, 0x69, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 
+0x6c, 0x6c, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x68, 0x61, 0x74, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x72, 0x61, 
+0x69, 0x6e, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x4d, 0x55, 0x20, 
+0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x69, 0x6e, 
+0x67, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x65, 0x72, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x0a, 0x23, 
+0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x63, 0x61, 0x73, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 
+0x74, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x41, 0x4e, 
+0x44, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x64, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x69, 
+0x6e, 0x67, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x63, 0x63, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 
+0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x32, 0x35, 0x30, 0x30, 
+0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x50, 0x43, 0x49, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x2f, 0x72, 0x65, 0x76, 0x20, 0x49, 0x44, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 
+0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x74, 0x6f, 0x20, 0x70, 
+0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x72, 0x65, 0x20, 0x72, 
+0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x6f, 0x6e, 0x20, 0x61, 0x20, 0x64, 0x69, 
+0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x28, 0x65, 0x2e, 
+0x67, 0x2e, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x35, 0x36, 0x30, 0x35, 0x20, 0x64, 0x72, 
+0x69, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x35, 
+0x36, 0x31, 0x35, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x69, 
+0x73, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x6c, 
+0x79, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x63, 0x2c, 0x20, 
+0x6e, 0x6f, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x0a, 
+0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x64, 
+0x65, 0x76, 0x3d, 0x30, 0x78, 0x35, 0x36, 0x30, 0x35, 0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x6f, 
+0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 
+0x74, 0x65, 0x72, 0x73, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20, 
+0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x65, 0x73, 0x20, 0x69, 0x6e, 0x0a, 0x23, 0x20, 0x50, 0x43, 0x49, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 
+0x28, 0x75, 0x73, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x20, 0x30, 0x78, 0x34, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x30, 0x78, 0x34, 0x38, 0x29, 0x2e, 
+0x20, 0x41, 0x6e, 0x79, 0x20, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x0a, 0x23, 
+0x20, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x68, 0x65, 0x78, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 
+0x65, 0x64, 0x2e, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x65, 0x73, 
+0x65, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x77, 0x6f, 0x72, 0x6b, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x56, 0x78, 
+0x57, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x61, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x0a, 0x23, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x75, 
+0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x2e, 0x0a, 0x0a, 0x23, 0x70, 
+0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x6f, 0x63, 0x63, 0x66, 0x67, 0x30, 0x3d, 
+0x30, 0x78, 0x30, 0x0a, 0x23, 0x70, 0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x6f, 
+0x63, 0x63, 0x66, 0x67, 0x31, 0x3d, 0x30, 0x78, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x73, 0x65, 
+0x20, 0x63, 0x72, 0x79, 0x74, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 
+0x70, 0x6c, 0x6c, 0x5f, 0x78, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x63, 0x6c, 0x6b, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 
+0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 
+0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x3d, 0x20, 0x30, 0x2c, 
+0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x20, 
+0x3d, 0x20, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 0x70, 0x6c, 0x6c, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x73, 0x70, 0x65, 
+0x65, 0x64, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2d, 0x20, 0x31, 
+0x30, 0x47, 0x62, 0x70, 0x73, 0x20, 0x3d, 0x20, 0x30, 0x2c, 0x20, 0x31, 0x32, 0x47, 0x62, 0x70, 
+0x73, 0x20, 0x3d, 0x20, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x6c, 0x63, 0x70, 0x6c, 
+0x6c, 0x5f, 0x31, 0x32, 0x67, 0x62, 0x70, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 
+0x69, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x30, 0x47, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 
+0x65, 0x6c, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x20, 0x28, 0x31, 0x30, 0x2f, 0x31, 0x32, 
+0x20, 0x47, 0x62, 0x70, 0x73, 0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x73, 0x70, 0x65, 
+0x65, 0x64, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x0a, 0x23, 0x78, 
+0x67, 0x78, 0x73, 0x5f, 0x70, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x31, 0x30, 0x67, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x55, 0x6e, 0x69, 0x20, 
+0x63, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 
+0x2c, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 
+0x20, 0x61, 0x6e, 0x64, 0x20, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
+0x73, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 
+0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 
+0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 
+0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x78, 0x67, 0x78, 
+0x73, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 
+0x20, 0x50, 0x4c, 0x4c, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 
+0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 
+0x6f, 0x72, 0x74, 0x29, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x70, 0x6c, 0x6c, 0x6c, 0x6f, 
+0x63, 0x6b, 0x3d, 0x31, 0x35, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x65, 0x6d, 0x61, 0x70, 0x20, 0x58, 
+0x47, 0x58, 0x53, 0x20, 0x72, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x78, 0x20, 0x6c, 0x61, 
+0x6e, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x20, 0x6d, 
+0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x46, 0x6f, 0x75, 0x72, 0x20, 0x62, 0x69, 0x74, 
+0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x0a, 0x23, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x61, 
+0x63, 0x68, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 
+0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x4c, 0x61, 0x6e, 0x65, 0x20, 0x30, 0x20, 
+0x28, 0x62, 0x69, 0x74, 0x20, 0x31, 0x35, 0x2d, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x4c, 0x61, 0x6e, 
+0x65, 0x20, 0x31, 0x20, 0x28, 0x62, 0x69, 0x74, 0x20, 0x31, 0x31, 0x2d, 0x38, 0x29, 0x2c, 0x0a, 
+0x23, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x32, 0x20, 0x28, 0x62, 0x69, 0x74, 0x20, 0x37, 0x2d, 
+0x34, 0x29, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x33, 0x20, 0x28, 
+0x62, 0x69, 0x74, 0x20, 0x33, 0x2d, 0x30, 0x29, 0x2e, 0x20, 0x20, 0x0a, 0x23, 0x20, 0x46, 0x6f, 
+0x72, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 
+0x76, 0x65, 0x72, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x78, 0x20, 0x6c, 0x61, 0x6e, 
+0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x20, 0x33, 0x2c, 0x20, 
+0x32, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x30, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2c, 0x20, 0x0a, 
+0x23, 0x20, 0x73, 0x65, 0x74, 0x20, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x61, 
+0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x33, 0x32, 0x31, 0x30, 0x2e, 0x20, 0x0a, 
+0x23, 0x20, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 
+0x20, 0x69, 0x73, 0x2e, 0x20, 0x0a, 0x23, 0x78, 0x67, 0x78, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 
+0x61, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x30, 0x31, 0x32, 0x33, 0x0a, 0x23, 
+0x78, 0x67, 0x78, 0x73, 0x5f, 0x72, 0x78, 0x5f, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x70, 
+0x3d, 0x30, 0x78, 0x30, 0x31, 0x32, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 
+0x73, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x63, 0x6c, 0x6f, 0x63, 
+0x6b, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x45, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x3d, 0x20, 0x30, 
+0x2c, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x43, 0x50, 0x4c, 0x4c, 
+0x20, 0x3d, 0x20, 0x31, 0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x6c, 0x63, 0x70, 
+0x6c, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x20, 0x53, 0x65, 
+0x72, 0x64, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x68, 
+0x61, 0x73, 0x69, 0x73, 0x2c, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 
+0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 
+0x6c, 0x75, 0x65, 0x73, 0x20, 0x30, 0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 
+0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 
+0x72, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x65, 
+0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 
+0x64, 0x65, 0x73, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 
+0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x72, 
+0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x30, 0x47, 0x20, 0x50, 0x48, 0x59, 0x20, 0x63, 0x6f, 
+0x72, 0x65, 0x20, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x2c, 0x20, 
+0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x70, 0x72, 0x65, 0x2d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x75, 
+0x72, 0x72, 0x65, 0x6e, 0x74, 0x0a, 0x23, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x30, 
+0x2d, 0x31, 0x35, 0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 
+0x67, 0x65, 0x64, 0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x53, 0x46, 0x50, 0x2b, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x68, 
+0x61, 0x73, 0x69, 0x73, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x64, 0x72, 0x69, 0x76, 
+0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 
+0x72, 0x65, 0x6e, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x72, 
+0x65, 0x20, 0x53, 0x65, 0x72, 0x64, 0x65, 0x73, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x2f, 0x66, 
+0x69, 0x62, 0x65, 0x72, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 
+0x20, 0x28, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 
+0x20, 0x70, 0x65, 0x72, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 
+0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 
+0x63, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x77, 0x68, 
+0x65, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 
+0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 
+0x23, 0x20, 0x49, 0x66, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 
+0x20, 0x6f, 0x72, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x66, 0x66, 0x20, 0x74, 0x68, 0x65, 0x6e, 
+0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x3d, 0x30, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x53, 0x47, 0x4d, 
+0x49, 0x49, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 
+0x66, 0x3d, 0x31, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x20, 0x77, 0x69, 
+0x6c, 0x6c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x66, 0x69, 0x62, 0x65, 0x72, 0x2e, 
+0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x65, 0x64, 
+0x69, 0x75, 0x6d, 0x3d, 0x31, 0x0a, 0x23, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x69, 
+0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6e, 
+0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 
+0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x4f, 0x43, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x50, 
+0x48, 0x59, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x0a, 0x23, 0x20, 0x53, 0x4f, 0x43, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x53, 0x47, 0x4d, 0x49, 0x49, 0x20, 
+0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 
+0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x69, 0x73, 
+0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x0a, 
+0x23, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 
+0x5f, 0x73, 0x67, 0x6d, 0x69, 0x69, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x65, 0x67, 0x5f, 0x67, 
+0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x35, 0x36, 0x37, 0x30, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 
+0x62, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x78, 0x69, 
+0x6d, 0x75, 0x6d, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x0a, 0x23, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x64, 0x72, 0x6f, 0x70, 0x20, 
+0x74, 0x68, 0x65, 0x6d, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 
+0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 
+0x69, 0x62, 0x65, 0x64, 0x20, 0x64, 0x75, 0x65, 0x0a, 0x23, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 
+0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6f, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x6f, 0x73, 
+0x73, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x35, 0x36, 0x37, 0x30, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x0a, 0x23, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 
+0x70, 0x74, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 
+0x69, 0x66, 0x20, 0x73, 0x75, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x72, 
+0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 
+0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 
+0x65, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x2e, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x64, 0x65, 0x63, 
+0x72, 0x65, 0x61, 0x73, 0x65, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x20, 0x0a, 0x23, 
+0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x2c, 0x20, 0x62, 0x75, 0x74, 
+0x20, 0x6e, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x20, 0x70, 0x61, 0x63, 
+0x6b, 0x65, 0x74, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x64, 0x72, 0x6f, 
+0x70, 0x70, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 0x23, 0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x32, 0x34, 0x63, 0x36, 0x34, 0x20, 
+0x45, 0x45, 0x50, 0x52, 0x4f, 0x4d, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x58, 0x46, 0x50, 0x20, 0x73, 
+0x68, 0x61, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x49, 0x32, 
+0x43, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 
+0x20, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x0a, 0x23, 0x31, 0x20, 
+0x74, 0x6f, 0x20, 0x74, 0x72, 0x65, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x23, 0x64, 0x65, 
+0x76, 0x69, 0x63, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 
+0x69, 0x73, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
+0x20, 0x61, 0x73, 0x20, 0x58, 0x46, 0x50, 0x2e, 0x0a, 0x23, 0x69, 0x32, 0x63, 0x5f, 0x6e, 0x76, 
+0x72, 0x61, 0x6d, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x43, 0x46, 
+0x38, 0x35, 0x37, 0x34, 0x20, 0x6c, 0x70, 0x74, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x54, 
+0x43, 0x34, 0x32, 0x35, 0x38, 0x20, 0x70, 0x6f, 0x65, 0x33, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 
+0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x49, 0x32, 0x43, 0x20, 0x73, 0x6c, 
+0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x20, 0x53, 0x65, 0x74, 
+0x20, 0x0a, 0x23, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x72, 0x65, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 
+0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x61, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 
+0x6c, 0x61, 0x76, 0x65, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x61, 0x73, 0x20, 
+0x50, 0x4f, 0x45, 0x2e, 0x0a, 0x23, 0x69, 0x32, 0x63, 0x5f, 0x68, 0x63, 0x6c, 0x6b, 0x5f, 0x73, 
+0x6b, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x44, 0x36, 0x33, 0x30, 0x30, 0x30, 0x20, 
+0x69, 0x6e, 0x69, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x2e, 0x20, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 
+0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x30, 0x30, 0x57, 0x3b, 0x20, 0x6f, 0x74, 0x68, 0x65, 
+0x72, 0x77, 0x69, 0x73, 0x65, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6f, 
+0x66, 0x20, 0x33, 0x37, 0x57, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x2e, 0x0a, 0x23, 
+0x69, 0x32, 0x63, 0x5f, 0x70, 0x6f, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x53, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x31, 0x38, 0x39, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x63, 0x6f, 0x72, 0x65, 
+0x2c, 0x20, 0x32, 0x35, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 
+0x63, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x32, 0x47, 0x20, 
+0x69, 0x6e, 0x20, 0x35, 0x36, 0x37, 0x35, 0x2e, 0x0a, 0x23, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x31, 0x32, 0x47, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x53, 0x65, 0x74, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 
+0x36, 0x37, 0x30, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x20, 
+0x69, 0x6e, 0x20, 0x35, 0x36, 0x37, 0x35, 0x2e, 0x0a, 0x23, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 
+0x5f, 0x35, 0x36, 0x37, 0x30, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x37, 0x35, 0x20, 0x48, 0x4f, 0x4c, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
+0x69, 0x6e, 0x67, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x6d, 0x6f, 
+0x64, 0x65, 0x20, 0x28, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x68, 
+0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x29, 0x0a, 0x23, 0x53, 0x65, 0x74, 0x20, 
+0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 
+0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x65, 0x6c, 
+0x6c, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x74, 
+0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 
+0x6f, 0x6c, 0x5f, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x3d, 0x30, 0x0a, 0x23, 0x53, 0x65, 0x74, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x31, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x20, 
+0x77, 0x69, 0x74, 0x68, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 
+0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x6f, 0x77, 0x20, 0x74, 0x68, 0x72, 
+0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x0a, 0x23, 0x6d, 0x6d, 0x75, 0x5f, 0x68, 0x6f, 0x6c, 
+0x5f, 0x68, 0x79, 0x73, 0x74, 0x65, 0x72, 0x65, 0x73, 0x69, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 
+0x53, 0x77, 0x61, 0x70, 0x20, 0x58, 0x41, 0x55, 0x49, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x20, 
+0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x70, 0x68, 0x79, 0x38, 0x37, 0x30, 0x33, 0x2f, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x37, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x37, 0x33, 0x28, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x62, 0x6f, 0x61, 
+0x72, 0x64, 0x29, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x72, 0x78, 
+0x5f, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x46, 
+0x6c, 0x69, 0x70, 0x20, 0x58, 0x41, 0x55, 0x49, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x54, 0x58, 
+0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x38, 0x37, 0x30, 0x36, 0x20, 0x28, 
+0x61, 0x6c, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x65, 0x73, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x58, 
+0x47, 0x58, 0x53, 0x31, 0x36, 0x47, 0x20, 0x73, 0x65, 0x72, 0x64, 0x65, 0x73, 0x0a, 0x23, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x31, 0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 
+0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 
+0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x34, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x2e, 
+0x0a, 0x23, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x30, 0x30, 
+0x46, 0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 
+0x72, 0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x30, 0x2e, 0x0a, 
+0x23, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x30, 0x46, 0x30, 
+0x20, 0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 
+0x69, 0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x31, 0x2e, 0x0a, 0x23, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x30, 0x46, 0x30, 0x30, 0x20, 
+0x2d, 0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 
+0x74, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x32, 0x2e, 0x0a, 0x23, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x30, 0x78, 0x46, 0x30, 0x30, 0x30, 0x20, 0x2d, 
+0x20, 0x46, 0x6c, 0x69, 0x70, 0x20, 0x54, 0x58, 0x20, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74, 
+0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x6e, 0x65, 0x20, 0x33, 0x2e, 0x0a, 0x23, 0x70, 0x68, 
+0x79, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 
+0x74, 0x79, 0x5f, 0x66, 0x6c, 0x69, 0x70, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x49, 0x6e, 0x76, 0x65, 
+0x72, 0x74, 0x20, 0x50, 0x43, 0x53, 0x20, 0x54, 0x58, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 
+0x20, 0x74, 0x6f, 0x20, 0x50, 0x4d, 0x44, 0x2e, 0x20, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
+0x65, 0x64, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 
+0x30, 0x35, 0x20, 0x50, 0x48, 0x59, 0x2e, 0x20, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x74, 
+0x78, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x72, 0x78, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 
+0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x70, 
+0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x34, 0x38, 0x38, 0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x50, 0x48, 
+0x59, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x20, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x41, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 0x70, 
+0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 0x0a, 0x23, 
+0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x70, 0x77, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x45, 0x6e, 
+0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 
+0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x73, 0x70, 0x65, 0x65, 
+0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x70, 0x77, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x31, 0x30, 0x30, 0x20, 
+0x20, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 0x66, 0x20, 0x61, 0x6d, 
+0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 
+0x73, 0x70, 0x65, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 
+0x5f, 0x70, 0x77, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 
+0x31, 0x30, 0x30, 0x30, 0x20, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6c, 
+0x66, 0x20, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x47, 0x69, 0x67, 0x61, 0x20, 0x73, 0x70, 0x65, 0x65, 0x64, 0x2e, 0x0a, 0x0a, 0x23, 0x50, 0x6f, 
+0x72, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x73, 
+0x65, 0x74, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x34, 0x38, 0x38, 0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 
+0x79, 0x20, 0x50, 0x48, 0x59, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x41, 0x2f, 0x42, 0x20, 0x6c, 0x6f, 
+0x77, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x0a, 0x23, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 0x41, 
+0x63, 0x63, 0x65, 0x70, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x30, 0x28, 0x6c, 0x6f, 
+0x77, 0x65, 0x73, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x20, 0x74, 0x6f, 0x20, 0x37, 
+0x28, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x29, 0x2e, 
+0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x30, 0x2e, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x50, 
+0x6f, 0x72, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x74, 0x6f, 0x20, 
+0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x43, 0x58, 0x34, 0x20, 0x70, 0x69, 
+0x6e, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x70, 0x69, 
+0x6e, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x35, 0x36, 0x35, 0x30, 0x78, 0x2f, 0x35, 0x36, 
+0x36, 0x30, 0x78, 0x0a, 0x23, 0x63, 0x78, 0x34, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x38, 0x37, 0x30, 0x35, 0x20, 0x58, 0x46, 0x50, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x0a, 0x23, 
+0x20, 0x38, 0x37, 0x30, 0x34, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x38, 0x37, 0x30, 0x35, 0x20, 0x63, 
+0x61, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x58, 0x46, 0x50, 
+0x73, 0x20, 0x28, 0x74, 0x68, 0x75, 0x73, 0x20, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74, 
+0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x0a, 0x23, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 
+0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x77, 0x65, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x74, 0x2c, 0x20, 
+0x62, 0x75, 0x74, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x74, 0x2c, 0x0a, 0x23, 0x20, 0x69, 
+0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x64, 0x69, 0x73, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x78, 0x66, 0x70, 0x5f, 0x63, 
+0x6c, 0x6f, 0x63, 0x6b, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 0x35, 0x20, 0x57, 
+0x41, 0x4e, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x38, 0x37, 0x30, 
+0x35, 0x20, 0x50, 0x48, 0x59, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 
+0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x41, 
+0x4e, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x57, 0x41, 0x4e, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x73, 0x65, 0x74, 0x74, 
+0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x69, 0x73, 0x20, 0x4c, 0x41, 0x4e, 0x20, 0x6d, 0x6f, 0x64, 
+0x65, 0x2e, 0x20, 0x0a, 0x23, 0x70, 0x68, 0x79, 0x5f, 0x77, 0x61, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 
+0x65, 0x5f, 0x78, 0x65, 0x30, 0x3d, 0x31, 0x20, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 
+0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 
+0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 
+0x65, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 
+0x75, 0x73, 0x20, 0x50, 0x48, 0x59, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x20, 0x6f, 0x6e, 
+0x20, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x38, 0x37, 0x30, 0x33, 0x2f, 0x34, 0x2f, 0x35, 0x0a, 
+0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 
+0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 
+0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x78, 0x65, 0x6e, 0x62, 0x6c, 0x76, 0x6c, 
+0x3d, 0x30, 0x20, 0x20, 0x20, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 
+0x52, 0x65, 0x73, 0x65, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x6c, 0x65, 0x76, 
+0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x78, 
+0x72, 0x73, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 
+0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 
+0x20, 0x42, 0x69, 0x61, 0x73, 0x20, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 
+0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x62, 0x69, 0x61, 
+0x73, 0x66, 0x6c, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 
+0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x65, 0x6d, 0x70, 
+0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 
+0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 0x61, 0x73, 0x65, 0x72, 0x20, 0x50, 0x6f, 
+0x77, 0x65, 0x72, 0x20, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 
+0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x70, 0x72, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x58, 0x20, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 
+0x70, 0x74, 0x74, 0x78, 0x66, 0x6c, 0x74, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x4c, 
+0x61, 0x73, 0x65, 0x72, 0x20, 0x4c, 0x6f, 0x73, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x69, 0x67, 
+0x68, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 
+0x5f, 0x6f, 0x70, 0x74, 0x72, 0x78, 0x6c, 0x6f, 0x73, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 
+0x20, 0x52, 0x58, 0x20, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 
+0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x72, 0x78, 0x66, 0x6c, 0x74, 
+0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 
+0x20, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x54, 0x58, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x65, 
+0x76, 0x65, 0x6c, 0x2e, 0x0a, 0x23, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x74, 
+0x78, 0x6f, 0x6e, 0x6c, 0x76, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x36, 0x35, 0x4c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x36, 
+0x4c, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x4c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 
+0x35, 0x36, 0x36, 0x36, 0x4c, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x44, 0x73, 
+0x20, 0x61, 0x72, 0x65, 0x20, 0x30, 0x78, 0x35, 0x36, 0x36, 0x35, 0x2c, 0x20, 0x73, 0x61, 0x6d, 
+0x65, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 
+0x2e, 0x0a, 0x23, 0x20, 0x48, 0x6f, 0x77, 0x65, 0x76, 0x65, 0x72, 0x2c, 0x20, 0x74, 0x68, 0x65, 
+0x73, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 
+0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x70, 
+0x70, 0x65, 0x72, 0x20, 0x32, 0x34, 0x20, 0x46, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 
+0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 
+0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 
+0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x2e, 0x0a, 0x23, 0x70, 0x62, 0x6d, 0x70, 
+0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x3d, 0x30, 
+0x78, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 
+0x66, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x66, 0x61, 0x6d, 
+0x69, 0x6c, 0x79, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x2d, 
+0x20, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x20, 0x4d, 0x43, 0x55, 0x2c, 0x20, 0x61, 0x6c, 0x6c, 
+0x6f, 0x77, 0x73, 0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x20, 
+0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x0a, 0x23, 0x20, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 
+0x63, 0x6b, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x77, 0x69, 0x74, 
+0x68, 0x6f, 0x75, 0x74, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x28, 0x62, 0x75, 0x74, 0x20, 0x72, 
+0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x0a, 0x23, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x29, 0x2e, 0x0a, 0x23, 0x62, 0x79, 0x70, 0x61, 0x73, 
+0x73, 0x5f, 0x6d, 0x63, 0x75, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x36, 0x35, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 
+0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x65, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x36, 
+0x36, 0x35, 0x20, 0x44, 0x44, 0x52, 0x20, 0x62, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x70, 0x20, 
+0x66, 0x6c, 0x6f, 0x77, 0x20, 0x63, 0x68, 0x61, 0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4d, 
+0x43, 0x55, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 
+0x75, 0x72, 0x65, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x3a, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 
+0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x2f, 0x35, 0x35, 0x2f, 0x36, 0x35, 0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 
+0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 
+0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 
+0x64, 0x72, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 
+0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 
+0x6c, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 
+0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 
+0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 
+0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 
+0x72, 0x30, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 
+0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 
+0x32, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 
+0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 
+0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 
+0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x6c, 
+0x65, 0x77, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 
+0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x31, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 
+0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 
+0x67, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 
+0x5f, 0x73, 0x74, 0x72, 0x30, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x30, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 
+0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 
+0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 
+0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 
+0x73, 0x32, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x32, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x73, 0x6c, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 
+0x69, 0x72, 0x5f, 0x63, 0x68, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 
+0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 
+0x63, 0x68, 0x32, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 
+0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 
+0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x32, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 
+0x5f, 0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 
+0x73, 0x74, 0x72, 0x31, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 
+0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 
+0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 
+0x65, 0x77, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x5f, 0x63, 0x68, 
+0x33, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x6c, 0x65, 0x77, 
+0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 
+0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 
+0x33, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 
+0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x33, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 
+0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x31, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 
+0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x33, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 
+0x54, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 
+0x65, 0x20, 0x73, 0x65, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x68, 
+0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x20, 0x28, 0x74, 0x68, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x61, 
+0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 
+0x63, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x77, 0x69, 0x6c, 0x6c, 
+0x20, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x29, 
+0x3a, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x72, 0x76, 0x5f, 0x73, 0x74, 0x72, 0x31, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 
+0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 
+0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3d, 0x33, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6c, 0x65, 
+0x77, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 
+0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x3d, 0x33, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 
+0x6c, 0x65, 0x77, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 
+0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x3d, 0x31, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x71, 0x69, 0x5f, 0x61, 0x64, 
+0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 
+0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x64, 0x69, 0x72, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 
+0x72, 0x5f, 0x61, 0x64, 0x6a, 0x5f, 0x76, 0x61, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x31, 0x36, 0x62, 0x69, 0x74, 
+0x20, 0x44, 0x44, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x31, 0x36, 0x62, 0x69, 0x74, 0x5f, 0x64, 0x64, 
+0x72, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 0x35, 0x20, 0x66, 
+0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x20, 0x73, 0x69, 0x7a, 
+0x65, 0x73, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x65, 0x20, 0x46, 0x45, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x35, 0x36, 0x36, 0x35, 
+0x2f, 0x35, 0x30, 0x2f, 0x35, 0x35, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x77, 0x6f, 
+0x20, 0x6d, 0x61, 0x73, 0x6b, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x73, 
+0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x31, 0x36, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x20, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6c, 0x74, 0x29, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x38, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x32, 0x34, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x0a, 0x23, 0x20, 0x55, 
+0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 
+0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x31, 0x32, 0x38, 0x2f, 0x32, 0x34, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x63, 0x68, 0x69, 0x70, 0x2e, 0x0a, 0x23, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 
+0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x53, 0x74, 
+0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 
+0x65, 0x66, 0x69, 0x6e, 0x65, 0x73, 0x3b, 0x20, 0x73, 0x65, 0x65, 0x20, 0x73, 0x74, 0x6b, 0x2e, 
+0x73, 0x6f, 0x63, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x72, 0x65, 
+0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x73, 0x0a, 0x23, 0x0a, 
+0x23, 0x73, 0x74, 0x6b, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x34, 0x30, 0x39, 0x32, 0x0a, 0x23, 0x73, 
+0x74, 0x6b, 0x63, 0x6f, 0x73, 0x3d, 0x37, 0x0a, 0x23, 0x73, 0x74, 0x6b, 0x70, 0x6f, 0x72, 0x74, 
+0x73, 0x3d, 0x22, 0x28, 0x30, 0x2c, 0x32, 0x34, 0x29, 0x20, 0x28, 0x30, 0x2c, 0x32, 0x35, 0x29, 
+0x22, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x42, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x20, 0x74, 0x6f, 0x20, 
+0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 
+0x64, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x27, 0x73, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 
+0x20, 0x77, 0x69, 0x64, 0x65, 0x0a, 0x23, 0x73, 0x74, 0x6b, 0x5f, 0x72, 0x73, 0x76, 0x64, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x73, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 
+0x61, 0x6e, 0x64, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 
+0x6f, 0x6c, 0x73, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x63, 0x6d, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 
+0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
+0x30, 0x0a, 0x23, 0x6d, 0x65, 0x6d, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x69, 0x6d, 0x65, 0x6f, 
+0x75, 0x74, 0x20, 0x76, 0x61, 0x75, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x63, 0x72, 
+0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 
+0x35, 0x36, 0x36, 0x30, 0x78, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x65, 0x6e, 0x67, 
+0x69, 0x6e, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 
+0x6f, 0x6e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x3d, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x20, 0x74, 0x6f, 0x20, 0x64, 
+0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x20, 0x6d, 0x65, 
+0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x0a, 0x23, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x42, 
+0x43, 0x4d, 0x35, 0x36, 0x36, 0x30, 0x78, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x74, 
+0x6f, 0x20, 0x35, 0x30, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 
+0x64, 0x20, 0x6f, 0x66, 0x20, 0x36, 0x30, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x0a, 0x23, 0x70, 0x6c, 
+0x6c, 0x36, 0x30, 0x30, 0x5f, 0x73, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x6b, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x4d, 0x43, 0x55, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 
+0x6c, 0x20, 0x30, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x28, 0x30, 0x78, 0x32, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x31, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 
+0x29, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 
+0x69, 0x74, 0x6d, 0x61, 0x70, 0x3d, 0x30, 0x78, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x43, 0x55, 
+0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 
+0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 
+0x65, 0x73, 0x29, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x72, 0x64, 0x3d, 0x37, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x77, 0x64, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x74, 0x77, 0x6c, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x3d, 0x33, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x33, 
+0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 
+0x66, 0x73, 0x65, 0x74, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 
+0x71, 0x6b, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 
+0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x3d, 0x30, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 
+0x5f, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x33, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 
+0x5f, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 
+0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 0x30, 0x20, 
+0x6f, 0x6e, 0x6c, 0x79, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x72, 0x64, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x37, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 0x77, 0x64, 0x5f, 0x63, 
+0x68, 0x30, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x77, 0x6c, 0x5f, 0x63, 0x68, 
+0x30, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 
+0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x33, 0x0a, 0x23, 
+0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 
+0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 
+0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 
+0x65, 0x74, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 0x71, 0x6b, 0x5f, 
+0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 
+0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x32, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x32, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x31, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 
+0x31, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x5f, 0x63, 0x68, 0x30, 0x3d, 
+0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6c, 
+0x5f, 0x63, 0x68, 0x30, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 
+0x6c, 0x20, 0x31, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 
+0x72, 0x64, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x37, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x63, 
+0x77, 0x64, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x38, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x74, 0x77, 
+0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x36, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 
+0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x68, 0x31, 
+0x3d, 0x33, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 
+0x66, 0x73, 0x65, 0x74, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 
+0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x5f, 0x63, 
+0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 
+0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 
+0x5f, 0x71, 0x6b, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x64, 
+0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x33, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 
+0x63, 0x75, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x64, 0x74, 0x5f, 0x69, 
+0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x31, 0x0a, 
+0x23, 0x6d, 0x63, 0x75, 0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x5f, 
+0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x6d, 0x63, 0x75, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 
+0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x31, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x44, 
+0x52, 0x37, 0x32, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d, 
+0x65, 0x74, 0x65, 0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 
+0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 
+0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x3d, 0x34, 0x0a, 
+0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 
+0x73, 0x65, 0x74, 0x33, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 
+0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0x3d, 0x34, 0x0a, 0x23, 0x64, 
+0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 
+0x74, 0x31, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x30, 0x5f, 0x71, 0x6b, 0x3d, 0x34, 0x0a, 0x23, 
+0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 
+0x65, 0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x34, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 
+0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x33, 0x3d, 0x30, 0x0a, 0x23, 
+0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 
+0x5f, 0x32, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 
+0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 
+0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x30, 0x3d, 0x30, 
+0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 
+0x79, 0x31, 0x5f, 0x33, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 
+0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 
+0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 
+0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 
+0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 0x23, 0x64, 0x64, 0x72, 0x37, 0x32, 0x5f, 
+0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 0x6e, 0x3d, 0x30, 0x0a, 0x23, 0x64, 0x64, 
+0x72, 0x37, 0x32, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x51, 0x44, 0x52, 0x33, 0x36, 0x20, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x20, 
+0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 
+0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x29, 0x0a, 0x23, 0x71, 0x64, 0x72, 
+0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 
+0x74, 0x78, 0x3d, 0x34, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 
+0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x6b, 0x3d, 0x34, 0x0a, 0x23, 0x71, 
+0x64, 0x72, 0x33, 0x36, 0x5f, 0x64, 0x6c, 0x6c, 0x39, 0x30, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 
+0x74, 0x5f, 0x71, 0x6b, 0x62, 0x3d, 0x34, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 
+0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 0x31, 0x3d, 0x30, 0x0a, 0x23, 0x71, 
+0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x32, 0x5f, 
+0x30, 0x3d, 0x30, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 
+0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x31, 0x3d, 0x31, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 
+0x5f, 0x73, 0x65, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x31, 0x5f, 0x30, 0x3d, 0x31, 0x0a, 
+0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x6f, 0x76, 0x72, 0x64, 0x5f, 0x73, 0x6d, 0x5f, 0x65, 
+0x6e, 0x3d, 0x30, 0x0a, 0x23, 0x71, 0x64, 0x72, 0x33, 0x36, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 
+0x5f, 0x73, 0x65, 0x6c, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x42, 0x43, 0x41, 0x4d, 0x20, 0x74, 0x75, 
+0x6e, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 
+0x6c, 0x5f, 0x73, 0x61, 0x6d, 0x3d, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 
+0x79, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 
+0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x6d, 
+0x65, 0x6d, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x0a, 0x23, 0x73, 0x65, 
+0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x35, 0x31, 0x32, 0x4b, 0x20, 0x4c, 0x32, 0x0a, 0x23, 0x73, 
+0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 
+0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 
+0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x39, 0x32, 0x4b, 0x20, 0x4c, 0x34, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x5f, 0x63, 0x66, 0x67, 0x3d, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x39, 0x36, 0x4b, 0x20, 0x4c, 0x34, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x5f, 0x63, 0x66, 0x67, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x35, 0x36, 0x4b, 0x20, 0x4c, 
+0x50, 0x4d, 0x20, 0x31, 0x32, 0x38, 0x4b, 0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x35, 
+0x0a, 0x0a, 0x23, 0x20, 0x33, 0x38, 0x34, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x36, 0x34, 0x4b, 
+0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x38, 
+0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x36, 0x34, 0x4b, 0x20, 0x4c, 0x34, 0x20, 0x28, 0x51, 0x44, 
+0x52, 0x20, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x29, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x37, 
+0x0a, 0x0a, 0x23, 0x20, 0x31, 0x39, 0x32, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x33, 0x32, 0x4b, 
+0x20, 0x4c, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x34, 0x38, 
+0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x39, 0x0a, 0x0a, 0x23, 0x20, 0x38, 
+0x39, 0x36, 0x4b, 0x20, 0x4c, 0x50, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 
+0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x31, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x4e, 0x6f, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x31, 0x20, 0x54, 0x43, 0x41, 0x4d, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 
+0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x79, 0x70, 0x65, 
+0x20, 0x32, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x78, 
+0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x3d, 0x32, 0x0a, 
+0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x4c, 0x32, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 
+0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 
+0x2c, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x51, 0x75, 
+0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x36, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x29, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 
+0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 
+0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 
+0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 
+0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x33, 0x0a, 0x0a, 
+0x23, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x48, 0x61, 
+0x6c, 0x66, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 
+0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 
+0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x34, 0x0a, 0x0a, 0x23, 
+0x20, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x20, 0x4c, 0x32, 0x2c, 0x20, 0x51, 0x75, 0x61, 
+0x72, 0x74, 0x65, 0x72, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x36, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 
+0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x35, 0x0a, 0x0a, 0x23, 0x20, 
+0x41, 0x6c, 0x6c, 0x20, 0x56, 0x34, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 
+0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x36, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x56, 0x34, 0x2c, 0x20, 0x48, 
+0x61, 0x6c, 0x66, 0x20, 0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 
+0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 
+0x3d, 0x37, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x56, 0x36, 0x0a, 0x23, 0x73, 0x65, 
+0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x38, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 
+0x4d, 0x41, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x6d, 
+0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 
+0x67, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4d, 0x41, 0x43, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x2c, 0x20, 0x48, 0x61, 0x6c, 0x66, 0x20, 0x4d, 0x59, 0x53, 0x54, 0x41, 
+0x54, 0x49, 0x4f, 0x4e, 0x20, 0x28, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x29, 0x0a, 0x23, 
+0x73, 0x65, 0x65, 0x72, 0x5f, 0x6d, 0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 
+0x20, 0x4d, 0x59, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 
+0x5f, 0x6d, 0x76, 0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x63, 0x66, 0x67, 0x3d, 0x32, 0x0a, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 
+0x61, 0x6c, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 
+0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x68, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 
+0x74, 0x65, 0x6e, 0x63, 0x79, 0x37, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 
+0x63, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x37, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 
+0x67, 0x20, 0x6d, 0x61, 0x79, 0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 
+0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x4c, 0x50, 0x4d, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 
+0x73, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x0a, 0x23, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 
+0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x72, 0x61, 0x76, 0x65, 
+0x72, 0x73, 0x61, 0x6c, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x73, 0x2e, 0x20, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67, 
+0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0a, 0x23, 0x20, 0x75, 
+0x73, 0x65, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x20, 0x73, 0x70, 
+0x65, 0x65, 0x64, 0x2e, 0x0a, 0x23, 0x73, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x70, 0x6d, 0x5f, 0x74, 
+0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x3d, 
+0x31, 0x30, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x4f, 0x6e, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x36, 
+0x32, 0x78, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2c, 0x20, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 
+0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x58, 0x50, 0x4f, 0x52, 0x54, 
+0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x0a, 0x23, 0x20, 0x28, 0x62, 0x61, 0x63, 0x6b, 0x2d, 0x70, 
+0x61, 0x6e, 0x65, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x29, 0x20, 0x69, 0x6e, 0x73, 0x74, 
+0x65, 0x61, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x58, 0x47, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x62, 0x6c, 
+0x6f, 0x63, 0x6b, 0x20, 0x28, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x2d, 0x70, 0x61, 0x6e, 0x65, 0x6c, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x29, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 
+0x6b, 0x75, 0x70, 0x5f, 0x6f, 0x6e, 0x5f, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x37, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x4c, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x37, 
+0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 
+0x50, 0x76, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x37, 
+0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 
+0x50, 0x76, 0x36, 0x20, 0x36, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 
+0x78, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x75, 
+0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 
+0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x31, 0x32, 0x38, 0x2d, 0x62, 
+0x69, 0x74, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x38, 0x38, 0x2d, 
+0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 
+0x32, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x32, 0x38, 0x38, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x34, 0x20, 0x41, 0x43, 0x4c, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x61, 
+0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 
+0x0a, 0x23, 0x20, 0x33, 0x36, 0x30, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 
+0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 
+0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x73, 0x5f, 0x61, 0x63, 0x6c, 
+0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 
+0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 
+0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x66, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 
+0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 
+0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 
+0x4c, 0x32, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 
+0x74, 0x5f, 0x6c, 0x32, 0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 
+0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x34, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 
+0x70, 0x34, 0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 
+0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x20, 
+0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 
+0x63, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 
+0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x20, 0x65, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 0x2b, 0x20, 0x49, 0x50, 0x76, 0x34, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 
+0x6c, 0x32, 0x69, 0x70, 0x34, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 
+0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x34, 0x33, 0x32, 0x2d, 0x62, 0x69, 
+0x74, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x4c, 0x32, 0x20, 0x2b, 0x20, 
+0x49, 0x50, 0x76, 0x36, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x69, 0x70, 0x36, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 
+0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x20, 0x6d, 0x6f, 0x64, 0x65, 
+0x2c, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x36, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 
+0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x6b, 0x63, 0x65, 0x74, 0x2c, 0x20, 0x31, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x34, 0x20, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x20, 0x70, 0x65, 0x72, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x63, 0x61, 0x6d, 
+0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 
+0x6e, 0x61, 0x6c, 0x20, 0x53, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2c, 0x20, 0x30, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x2e, 0x35, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x6c, 
+0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x20, 
+0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x0a, 0x23, 0x65, 
+0x78, 0x74, 0x5f, 0x73, 0x72, 0x61, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x30, 0x0a, 0x0a, 
+0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 
+0x69, 0x61, 0x74, 0x65, 0x64, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x3a, 
+0x0a, 0x23, 0x20, 0x31, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 
+0x32, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 
+0x20, 0x32, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x33, 
+0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 0x20, 0x34, 0x3a, 0x20, 
+0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x35, 0x3a, 0x20, 0x32, 0x35, 
+0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 
+0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x30, 0x0a, 0x23, 0x20, 
+0x36, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 
+0x53, 0x31, 0x0a, 0x23, 0x20, 0x37, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 
+0x30, 0x0a, 0x23, 0x20, 0x38, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 
+0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x45, 0x53, 0x31, 
+0x0a, 0x23, 0x20, 0x39, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x41, 
+0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x74, 0x68, 
+0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x31, 
+0x30, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 
+0x62, 0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 
+0x0a, 0x23, 0x20, 0x31, 0x31, 0x3a, 0x20, 0x32, 0x35, 0x30, 0x20, 0x4d, 0x48, 0x7a, 0x2c, 0x20, 
+0x4c, 0x33, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x69, 0x6e, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x45, 0x53, 0x31, 0x0a, 0x23, 0x20, 0x31, 0x32, 0x3a, 0x20, 0x33, 0x33, 0x34, 0x20, 0x4d, 
+0x48, 0x7a, 0x2c, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4c, 0x33, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x41, 0x43, 0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x62, 
+0x6f, 0x74, 0x68, 0x20, 0x45, 0x53, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x45, 0x53, 0x31, 0x0a, 
+0x23, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x3d, 0x31, 0x32, 0x0a, 
+0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x49, 0x50, 0x76, 0x36, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x61, 0x72, 
+0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
+0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x37, 0x32, 0x2d, 0x62, 0x69, 0x74, 0x2c, 
+0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x5f, 0x66, 0x77, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 
+0x30, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 
+0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x4c, 0x32, 0x20, 0x70, 0x61, 
+0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 
+0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x32, 0x38, 0x38, 0x2d, 
+0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 0x62, 
+0x69, 0x74, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x32, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 
+0x65, 0x79, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x41, 0x43, 0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 
+0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 
+0x76, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x32, 0x38, 0x38, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 
+0x31, 0x34, 0x34, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x33, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 
+0x73, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 
+0x20, 0x49, 0x50, 0x34, 0x20, 0x6b, 0x65, 0x79, 0x2c, 0x0a, 0x23, 0x20, 0x34, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x4c, 0x32, 0x20, 0x6b, 0x65, 0x79, 0x0a, 0x23, 
+0x65, 0x78, 0x74, 0x5f, 0x69, 0x70, 0x34, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 
+0x31, 0x0a, 0x0a, 0x23, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x41, 0x43, 
+0x4c, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x73, 0x65, 0x6c, 
+0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x49, 0x50, 0x56, 0x36, 0x20, 
+0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x0a, 0x23, 0x20, 0x30, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 
+0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x31, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x33, 0x36, 
+0x30, 0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x32, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x34, 0x33, 0x32, 
+0x2d, 0x62, 0x69, 0x74, 0x2c, 0x20, 0x33, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x34, 0x34, 0x2d, 
+0x62, 0x69, 0x74, 0x2c, 0x0a, 0x23, 0x20, 0x34, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x69, 
+0x6e, 0x67, 0x20, 0x62, 0x6f, 0x74, 0x68, 0x20, 0x4c, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x49, 
+0x50, 0x36, 0x20, 0x6b, 0x65, 0x79, 0x2c, 0x20, 0x35, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 0x73, 
+0x69, 0x6e, 0x67, 0x20, 0x4c, 0x32, 0x20, 0x6b, 0x65, 0x79, 0x0a, 0x23, 0x65, 0x78, 0x74, 0x5f, 
+0x69, 0x70, 0x36, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, 0x75, 0x6e, 0x69, 
+0x74, 0x2e, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x69, 0x73, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x74, 0x6f, 
+0x20, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x6b, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 
+0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x72, 0x63, 0x70, 0x75, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 
+0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 
+0x75, 0x6e, 0x69, 0x74, 0x3d, 0x30, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 
+0x74, 0x6f, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x64, 0x65, 
+0x76, 0x69, 0x63, 0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x6f, 0x72, 0x74, 
+0x3d, 0x33, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x76, 0x6c, 0x61, 0x6e, 0x69, 
+0x64, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x3d, 0x31, 0x0a, 0x0a, 
+0x23, 0x20, 0x55, 0x73, 0x65, 0x20, 0x4f, 0x4f, 0x42, 0x20, 0x28, 0x6f, 0x75, 0x74, 0x20, 0x6f, 
+0x66, 0x20, 0x62, 0x61, 0x6e, 0x64, 0x29, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x65, 
+0x69, 0x76, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x63, 0x70, 0x75, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 
+0x74, 0x73, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6f, 0x6f, 0x62, 
+0x3d, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x4d, 0x61, 0x63, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 
+0x2f, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x0a, 0x23, 0x72, 0x63, 
+0x70, 0x75, 0x5f, 0x6f, 0x6f, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x0a, 0x0a, 
+0x23, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x52, 0x43, 0x50, 0x55, 0x20, 0x70, 0x61, 0x63, 0x6b, 
+0x65, 0x74, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 
+0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x20, 0x64, 0x65, 0x76, 0x69, 
+0x63, 0x65, 0x2e, 0x0a, 0x23, 0x72, 0x63, 0x70, 0x75, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x62, 0x6d, 
+0x70, 0x3d, 0x30, 0x78, 0x34, 0x0a, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x2f, 
+0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 
+0x6f, 0x6e, 0x20, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x0a, 0x23, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 
+0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x6f, 0x72, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x33, 0x32, 0x30, 0x28, 0x31, 0x36, 0x20, 0x2f, 0x20, 0x38, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 
+0x20, 0x6f, 0x66, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x34, 0x20, 0x66, 0x61, 0x6d, 0x69, 
+0x6c, 0x79, 0x29, 0x20, 0x0a, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 0x23, 
+0x23, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 
+0x32, 0x31, 0x20, 0x0a, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x32, 0x31, 0x3d, 0x31, 0x0a, 
+0x0a, 0x23, 0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x30, 
+0x20, 0x0a, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x33, 0x32, 0x30, 0x3d, 0x31, 0x0a, 0x0a, 0x23, 
+0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x33, 0x32, 0x31, 0x20, 0x2f, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x33, 0x32, 0x30, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x0a, 0x0a, 
+0x00
+};
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/helixmem_soc.c esw_sdk/src/appl/diag/helixmem_soc.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/helixmem_soc.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/src/appl/diag/helixmem_soc.c	2011-11-28 17:01:55.000000000 +0000
@@ -0,0 +1,704 @@
+unsigned char helixmem_soc_array[] = {
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x77, 
+0x69, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x74, 
+0x65, 0x73, 0x74, 0x73, 0x20, 0x2e, 0x2e, 0x2e, 0x22, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 
+0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x44, 0x53, 
+0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 
+0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 
+0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x45, 0x32, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 
+0x55, 0x53, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 
+0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x44, 0x53, 0x43, 
+0x50, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 
+0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 
+0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 
+0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 
+0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 
+0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 
+0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 
+0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 
+0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 
+0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 
+0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 
+0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 
+0x54, 0x5f, 0x48, 0x4f, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 
+0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 
+0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 
+0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 
+0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 
+0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 
+0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 
+0x47, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 
+0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 
+0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 
+0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 
+0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 
+0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x47, 
+0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 
+0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 
+0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 
+0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x45, 0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x45, 
+0x47, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x45, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 
+0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x45, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 
+0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x43, 
+0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 
+0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x50, 
+0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 
+0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 
+0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 
+0x53, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 
+0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 
+0x48, 0x45, 0x43, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 
+0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x54, 0x43, 
+0x41, 0x4d, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x46, 0x50, 
+0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 
+0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 
+0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x46, 0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x50, 0x4f, 
+0x4c, 0x49, 0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x46, 
+0x50, 0x5f, 0x54, 0x43, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 
+0x43, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x4d, 0x5f, 
+0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 
+0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 
+0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x49, 0x4d, 0x5f, 0x4d, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 
+0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 
+0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 
+0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x33, 0x5f, 
+0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x4d, 0x43, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x4d, 0x43, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 
+0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 
+0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 
+0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 
+0x32, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 
+0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x44, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 
+0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 
+0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x4c, 0x32, 0x5f, 0x48, 0x49, 0x54, 0x53, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 
+0x46, 0x49, 0x46, 0x4f, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x4d, 0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 
+0x4f, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x4d, 
+0x4f, 0x44, 0x5f, 0x46, 0x49, 0x46, 0x4f, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 
+0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 
+0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 
+0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 
+0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 
+0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x32, 0x5f, 0x55, 
+0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 
+0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x32, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 
+0x46, 0x49, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 
+0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 
+0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 
+0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 
+0x45, 0x46, 0x49, 0x50, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 
+0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 
+0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 
+0x44, 0x45, 0x46, 0x49, 0x50, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x43, 0x4d, 
+0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x43, 0x4d, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 
+0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 
+0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 
+0x48, 0x49, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x49, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 
+0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x4d, 0x55, 0x4c, 
+0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 
+0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 
+0x34, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 
+0x50, 0x56, 0x34, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 
+0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 
+0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 
+0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 
+0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 
+0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4d, 0x55, 
+0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 
+0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x50, 0x56, 0x36, 
+0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 
+0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 
+0x49, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 
+0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x4c, 0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 
+0x33, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 
+0x43, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 
+0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 
+0x4e, 0x45, 0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4c, 
+0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x4c, 0x33, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 
+0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 
+0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 
+0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 
+0x54, 0x52, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 
+0x4e, 0x47, 0x5f, 0x43, 0x54, 0x52, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x5f, 
+0x45, 0x58, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x41, 0x47, 
+0x49, 0x4e, 0x47, 0x5f, 0x45, 0x58, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x43, 0x42, 0x50, 0x43, 0x45, 0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 
+0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x43, 0x45, 
+0x4c, 0x4c, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x30, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x32, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x36, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x37, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x38, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 
+0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x39, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 
+0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 
+0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 
+0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x33, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 
+0x31, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 
+0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x34, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 
+0x41, 0x31, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 
+0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x44, 0x41, 0x54, 0x41, 0x31, 0x35, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x50, 0x4b, 
+0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 
+0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 
+0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x42, 0x50, 0x50, 
+0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 
+0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 
+0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x42, 0x50, 0x50, 0x4b, 0x54, 0x48, 0x45, 0x41, 0x44, 0x45, 
+0x52, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x43, 0x50, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x43, 0x43, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x43, 0x46, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x43, 0x46, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x30, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 
+0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 
+0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 
+0x55, 0x50, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 
+0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 
+0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 
+0x50, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 
+0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 
+0x50, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 
+0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x35, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 
+0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 
+0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 
+0x4f, 0x55, 0x50, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x49, 
+0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x37, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x49, 0x50, 0x4d, 0x43, 0x5f, 
+0x56, 0x4c, 0x41, 0x4e, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x49, 0x50, 0x4d, 0x43, 0x5f, 0x56, 0x4c, 0x41, 
+0x4e, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x30, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 
+0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x33, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x34, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x34, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x34, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x34, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x58, 0x51, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x36, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x37, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x38, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x39, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x39, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x31, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x31, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x31, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 
+0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 
+0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x33, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x33, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x34, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x34, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x35, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x31, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x58, 0x51, 0x31, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x31, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 
+0x31, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x31, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 
+0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x38, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x31, 0x39, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x31, 0x39, 0x3b, 0x0d, 0x0a, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x30, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x30, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x31, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x31, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 
+0x20, 0x20, 0x58, 0x51, 0x32, 0x32, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x32, 0x32, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 
+0x51, 0x32, 0x33, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x32, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x32, 0x33, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 
+0x33, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x34, 
+0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x34, 0x3b, 0x0d, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x35, 0x22, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x35, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x36, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x36, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x58, 0x51, 0x32, 0x37, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 
+0x4d, 0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x58, 0x51, 0x32, 0x37, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 
+0x58, 0x51, 0x32, 0x38, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x58, 0x51, 0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x58, 
+0x51, 0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x58, 0x51, 
+0x32, 0x38, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4d, 0x4f, 0x44, 
+0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x4d, 0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 
+0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 
+0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 
+0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x4e, 
+0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x4c, 
+0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 
+0x20, 0x4d, 0x3d, 0x4e, 0x4f, 0x4e, 0x55, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 
+0x4b, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 
+0x5f, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x53, 0x4f, 0x55, 0x52, 0x43, 
+0x45, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x54, 0x47, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x53, 0x54, 0x47, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x54, 0x52, 
+0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 
+0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 
+0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x22, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 
+0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 
+0x47, 0x52, 0x45, 0x53, 0x53, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 
+0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 
+0x53, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x54, 0x52, 0x55, 0x4e, 
+0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x54, 0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 
+0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x54, 
+0x52, 0x55, 0x4e, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x55, 0x44, 0x46, 0x5f, 0x4f, 
+0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x32, 0x20, 0x4d, 0x3d, 0x55, 0x44, 0x46, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x22, 0x3b, 
+0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 
+0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x3b, 0x0d, 0x0a, 0x65, 
+0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x22, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x4d, 0x41, 0x43, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 
+0x4c, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 
+0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 
+0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 
+0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 
+0x54, 0x41, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x3b, 
+0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 
+0x55, 0x42, 0x4e, 0x45, 0x54, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 
+0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 
+0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 
+0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 
+0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 
+0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 
+0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 
+0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x20, 
+0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 
+0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 
+0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 
+0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 0x4d, 
+0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 
+0x68, 0x6f, 0x20, 0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 
+0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 
+0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 
+0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 
+0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 
+0x32, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x44, 
+0x41, 0x54, 0x41, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x22, 0x20, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 
+0x4c, 0x59, 0x22, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x30, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 
+0x74, 0x72, 0x20, 0x35, 0x31, 0x20, 0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 
+0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x3b, 0x0d, 0x0a, 0x74, 0x72, 0x20, 0x35, 0x32, 0x20, 
+0x4d, 0x3d, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x58, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 
+0x59, 0x3b, 0x0d, 0x0a, 0x0d, 0x0a, 0x0d, 0x0a, 0x00
+};
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/Makefile esw_sdk/src/appl/diag/Makefile
--- sdk-xgs-robo-5.9.4/src/appl/diag/Makefile	2011-10-22 11:06:14.000000000 +0100
+++ esw_sdk/src/appl/diag/Makefile	2011-11-28 18:15:24.559051585 +0000
@@ -73,6 +73,17 @@ ifdef COND_LIB_CINT
 subdirs+=cint
 endif
 
+# If L7_INCLUDE_BCM_SHELL is not defined then compile sysconf.c only.
+ifdef LVL7_FIXUP 
+ifndef L7_INCLUDE_BCM_SHELL
+subdirs=
+# Only compile sysconf.c file if BCM_SHELL is not included.
+LSRCS   =       sysconf.c
+LOBJS   =       $(addsuffix .o, $(basename ${LSRCS}))
+BOBJS   =       $(addprefix ${BLDDIR}/,${LOBJS})
+endif # L7_INCLUDE_BCM_SHELL
+endif # LVL7_FIXUP 
+
 include ${SDK}/make/Make.subdirs
 
 lib = libdiag
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/rc_soc.c esw_sdk/src/appl/diag/rc_soc.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/rc_soc.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/src/appl/diag/rc_soc.c	2011-11-28 17:01:55.000000000 +0000
@@ -0,0 +1,3328 @@
+unsigned char rc_soc_array[] = {
+0x23, 0x20, 0x24, 0x49, 0x64, 0x3a, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x2c, 0x76, 0x20, 
+0x31, 0x2e, 0x39, 0x37, 0x2e, 0x36, 0x2e, 0x31, 0x30, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 
+0x6f, 0x6d, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x24, 0x0a, 0x23, 0x20, 0x24, 0x43, 0x6f, 0x70, 0x79, 
+0x72, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x20, 0x28, 0x63, 0x29, 0x20, 0x31, 0x39, 0x39, 0x38, 0x2d, 
+0x32, 0x30, 0x30, 0x31, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x20, 0x43, 0x6f, 
+0x72, 0x70, 0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 
+0x20, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2e, 0x24, 0x0a, 0x23, 0x0a, 0x23, 0x20, 
+0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x52, 
+0x43, 0x20, 0x28, 0x72, 0x75, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x29, 
+0x20, 0x66, 0x69, 0x6c, 0x65, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x54, 0x68, 0x65, 0x73, 0x65, 0x20, 0x61, 0x72, 0x65, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x61, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x65, 0x78, 0x65, 
+0x63, 0x75, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x42, 0x43, 
+0x4d, 0x20, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x20, 0x75, 0x70, 0x2e, 0x20, 0x20, 0x54, 0x79, 0x70, 
+0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 0x6c, 0x65, 
+0x20, 0x69, 0x73, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 
+0x63, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x73, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6c, 0x61, 
+0x73, 0x68, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2c, 0x20, 0x4e, 
+0x56, 0x52, 0x41, 0x4d, 0x2c, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x0a, 0x23, 
+0x0a, 0x23, 0x20, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 
+0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x23, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x66, 0x69, 
+0x6c, 0x65, 0x20, 0x75, 0x73, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 
+0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 
+0x20, 0x74, 0x6f, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x20, 0x6f, 0x6e, 0x20, 0x77, 0x68, 0x69, 0x63, 
+0x68, 0x20, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x69, 0x74, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x20, 0x20, 
+0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x65, 0x20, 0x6f, 0x66, 
+0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 
+0x6e, 0x67, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x6d, 0x61, 0x64, 0x65, 
+0x3a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x32, 0x35, 0x4b, 0x34, 0x38, 0x2f, 0x50, 0x34, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x70, 0x34, 0x38, 0x3d, 0x31, 
+0x3b, 0x20, 0x73, 0x65, 0x74, 0x20, 0x56, 0x78, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x62, 0x6f, 
+0x6f, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x20, 0x30, 0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x30, 0x4b, 
+0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x65, 0x72, 0x63, 0x38, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x30, 0x4b, 0x32, 
+0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x3d, 0x31, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 
+0x30, 0x4b, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x73, 0x74, 
+0x6b, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x39, 0x30, 0x52, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6d, 0x65, 0x72, 0x6c, 
+0x69, 0x6e, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x39, 0x30, 0x52, 0x34, 0x38, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x61, 0x6e, 0x63, 
+0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 
+0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x31, 0x4b, 0x31, 0x32, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x64, 0x72, 
+0x61, 0x63, 0x6f, 0x5f, 0x6b, 0x31, 0x32, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 
+0x20, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x3d, 0x31, 0x20, 
+0x28, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x29, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 0x69, 
+0x67, 0x68, 0x74, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 
+0x68, 0x74, 0x3d, 0x31, 0x20, 0x28, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 
+0x6e, 0x67, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x37, 0x33, 0x4b, 0x32, 0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x74, 0x77, 0x6f, 0x6c, 0x79, 
+0x6e, 0x78, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x65, 0x72, 0x63, 
+0x75, 0x6c, 0x79, 0x6e, 0x78, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x32, 0x34, 0x53, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 
+0x79, 0x6e, 0x78, 0x61, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x33, 0x52, 0x34, 0x38, 
+0x53, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 
+0x32, 0x34, 0x53, 0x58, 0x5f, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x3d, 
+0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x35, 0x30, 0x4b, 0x32, 0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x3d, 
+0x31, 0x20, 0x28, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6f, 0x72, 
+0x20, 0x35, 0x36, 0x35, 0x30, 0x4c, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x37, 0x35, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 
+0x65, 0x72, 0x63, 0x38, 0x5f, 0x31, 0x35, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x52, 0x32, 0x34, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 
+0x20, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 0x34, 0x38, 
+0x4c, 0x4d, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x39, 0x35, 0x50, 0x34, 0x38, 0x4c, 
+0x4d, 0x2d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 
+0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x42, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 0x34, 
+0x38, 0x4c, 0x4d, 0x2d, 0x31, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x43, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 
+0x34, 0x38, 0x4c, 0x4d, 0x2d, 0x32, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x43, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x50, 0x34, 0x38, 0x4c, 0x4d, 0x2d, 0x35, 0x30, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x3d, 0x31, 0x0a, 
+0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 
+0x34, 0x50, 0x34, 0x38, 0x50, 0x4f, 0x45, 0x52, 0x45, 0x46, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x3d, 0x31, 0x0a, 0x23, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x50, 0x32, 0x34, 0x52, 0x45, 0x46, 0x20, 0x50, 0x30, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 0x30, 0x34, 0x50, 0x32, 
+0x34, 0x20, 0x20, 0x20, 0x20, 0x50, 0x30, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x66, 0x62, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x31, 0x30, 0x32, 0x50, 0x34, 0x38, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x33, 0x33, 0x30, 0x30, 0x50, 0x32, 0x34, 
+0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 
+0x64, 0x64, 0x20, 0x6d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x32, 0x34, 0x3d, 0x31, 0x0a, 0x23, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x38, 0x30, 0x30, 0x4b, 
+0x32, 0x30, 0x43, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x31, 0x67, 0x3d, 
+0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x37, 0x30, 0x30, 0x4b, 0x31, 0x36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x68, 0x75, 0x6d, 0x76, 0x3d, 0x31, 0x0a, 
+0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x38, 0x30, 
+0x30, 0x4b, 0x32, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x3d, 0x31, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x35, 
+0x38, 0x30, 0x4b, 0x31, 0x36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x67, 0x6f, 0x6c, 0x64, 0x77, 0x69, 0x6e, 0x67, 
+0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x33, 0x31, 0x34, 0x50, 0x32, 0x34, 0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x63, 0x6d, 0x35, 0x36, 0x33, 
+0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 0x65, 0x66, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 
+0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 
+0x46, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x52, 0x35, 
+0x30, 0x54, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x52, 0x35, 0x30, 
+0x54, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x39, 
+0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x39, 0x35, 
+0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x3d, 0x31, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x32, 0x30, 0x4b, 0x32, 0x34, 0x58, 0x47, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x38, 0x32, 0x30, 0x4b, 0x32, 0x34, 0x58, 0x47, 0x3d, 
+0x31, 0x0a, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x31, 0x20, 0x22, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x72, 0x63, 0x3a, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x6e, 
+0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x3b, 0x20, 0x65, 0x78, 
+0x69, 0x74, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x22, 
+0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x6e, 0x6f, 0x20, 0x63, 0x75, 0x72, 0x72, 
+0x65, 0x6e, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x3b, 0x20, 0x65, 0x78, 0x69, 0x74, 0x22, 0x0a, 
+0x0a, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x22, 0x72, 0x63, 0x3a, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x24, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x24, 0x64, 0x65, 
+0x76, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x71, 0x75, 0x69, 
+0x65, 0x74, 0x20, 0x6e, 0x6f, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x65, 0x63, 0x68, 0x6f, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x72, 0x63, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x5c, 0x24, 0x72, 0x63, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x72, 0x63, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x2b, 
+0x20, 0x30, 0x22, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x6e, 0x6f, 0x65, 0x63, 0x68, 0x6f, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x71, 0x75, 
+0x69, 0x65, 0x74, 0x20, 0x79, 0x65, 0x73, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 
+0x63, 0x6f, 0x6e, 0x76, 0x65, 0x6e, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x0a, 0x0a, 0x23, 0x20, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 
+0x64, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 0x5c, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x71, 
+0x75, 0x69, 0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x70, 0x6c, 
+0x69, 0x73, 0x69, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x62, 
+0x6f, 0x61, 0x72, 0x64, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 0x31, 0x22, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 
+0x68, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 
+0x69, 0x67, 0x68, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x72, 0x61, 0x63, 0x6f, 
+0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x63, 0x68, 0x69, 
+0x70, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 
+0x78, 0x70, 0x72, 0x20, 0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 0x30, 0x20, 
+0x3d, 0x3d, 0x20, 0x30, 0x78, 0x35, 0x36, 0x35, 0x30, 0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x31, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 
+0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x31, 0x35, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 
+0x6e, 0x61, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x68, 0x65, 0x72, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 
+0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x32, 0x20, 
+0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 
+0x68, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 
+0x69, 0x78, 0x31, 0x35, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 
+0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 0x30, 0x20, 0x3d, 0x3d, 0x20, 0x30, 
+0x78, 0x62, 0x35, 0x30, 0x31, 0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x31, 0x30, 0x78, 0x34, 0x20, 0x31, 
+0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x61, 0x73, 0x79, 0x72, 
+0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 
+0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x70, 0x63, 0x69, 0x64, 0x65, 0x76, 0x20, 0x2b, 0x20, 
+0x30, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x78, 0x62, 0x36, 0x30, 0x32, 0x22, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 
+0x5f, 0x31, 0x78, 0x31, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 
+0x64, 0x6c, 0x65, 0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x67, 0x6f, 0x6c, 0x64, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x5c, 0x0a, 0x09, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x31, 
+0x32, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x7c, 0x7c, 
+0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x33, 
+0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x78, 0x67, 0x73, 0x31, 0x32, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x78, 0x67, 0x73, 0x33, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 
+0x63, 0x68, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 
+0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x78, 0x67, 0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x7c, 0x7c, 0x20, 0x24, 
+0x3f, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x78, 0x67, 0x73, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x24, 0x3f, 0x78, 0x67, 0x73, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x50, 0x42, 0x4d, 0x50, 0x5f, 
+0x41, 0x4c, 0x4c, 0x20, 0x30, 0x78, 0x30, 0x62, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x67, 0x73, 0x6c, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x50, 
+0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x30, 0x30, 0x30, 
+0x66, 0x66, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 
+0x34, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x30, 
+0x31, 0x34, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x32, 0x31, 0x35, 0x5f, 0x41, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x24, 
+0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 0x34, 0x5f, 0x41, 0x31, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x30, 0x31, 0x34, 0x5f, 0x41, 0x31, 0x20, 0x7c, 0x7c, 
+0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x32, 0x31, 0x35, 0x5f, 0x41, 0x31, 0x20, 0x26, 
+0x26, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 
+0x30, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x72, 0x61, 0x70, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x31, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x35, 0x5f, 0x41, 
+0x30, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x35, 0x5f, 0x42, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x5f, 0x6e, 0x6f, 0x68, 0x67, 0x20, 0x31, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 
+0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 
+0x39, 0x35, 0x36, 0x32, 0x32, 0x34, 0x50, 0x34, 0x38, 0x52, 0x45, 0x46, 0x20, 0x7c, 0x7c, 0x20, 
+0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x65, 0x62, 0x5f, 0x34, 0x38, 0x70, 0x20, 0x31, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 
+0x64, 0x20, 0x6c, 0x6d, 0x66, 0x62, 0x34, 0x38, 0x3d, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 
+0x65, 0x74, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x27, 0x73, 0x20, 0x77, 0x61, 
+0x69, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x2d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 
+0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x33, 0x20, 0x73, 
+0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x51, 0x75, 0x69, 0x63, 0x6b, 
+0x54, 0x75, 0x72, 0x6e, 0x0a, 0x23, 0x20, 0x28, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 
+0x64, 0x20, 0x61, 0x74, 0x20, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x20, 0x31, 0x30, 0x20, 0x73, 0x65, 
+0x63, 0x6f, 0x6e, 0x64, 0x73, 0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4c, 
+0x20, 0x69, 0x73, 0x20, 0x31, 0x30, 0x30, 0x25, 0x20, 0x62, 0x75, 0x73, 0x79, 0x20, 0x77, 0x69, 
+0x74, 0x68, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x29, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x74, 0x75, 0x72, 0x6e, 0x09, 0x22, 0x73, 0x74, 0x69, 
+0x6d, 0x65, 0x6f, 0x75, 0x74, 0x20, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x09, 0x22, 0x73, 0x74, 0x69, 0x6d, 
+0x65, 0x6f, 0x75, 0x74, 0x20, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x70, 0x68, 0x79, 0x20, 0x6c, 0x65, 0x64, 
+0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x3a, 0x20, 0x35, 0x34, 
+0x36, 0x34, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x20, 0x6c, 0x65, 0x64, 0x20, 
+0x62, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x61, 0x63, 0x74, 
+0x69, 0x76, 0x69, 0x74, 0x79, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 
+0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 
+0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x61, 0x64, 0x64, 0x20, 0x70, 0x68, 
+0x79, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x3d, 0x30, 0x78, 0x31, 0x38, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x20, 0x74, 0x68, 0x72, 
+0x65, 0x61, 0x64, 0x73, 0x20, 0x69, 0x66, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x69, 
+0x73, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 
+0x67, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x6f, 0x66, 0x66, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x6c, 0x5f, 
+0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 
+0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6c, 0x32, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x54, 0x65, 0x73, 0x74, 0x20, 0x6f, 0x6e, 0x2d, 0x63, 0x68, 0x69, 0x70, 0x20, 0x6d, 0x65, 
+0x6d, 0x6f, 0x72, 0x79, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 
+0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 
+0x73, 0x6f, 0x63, 0x3b, 0x20, 0x62, 0x69, 0x73, 0x74, 0x20, 0x6c, 0x33, 0x20, 0x61, 0x72, 0x6c, 
+0x20, 0x63, 0x62, 0x70, 0x22, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x73, 0x6f, 0x63, 0x0a, 0x0a, 
+0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x6d, 0x69, 0x73, 
+0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 
+0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6d, 
+0x69, 0x73, 0x63, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 
+0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x54, 0x43, 0x41, 0x4d, 0x20, 
+0x69, 0x66, 0x20, 0x6e, 0x65, 0x63, 0x65, 0x73, 0x73, 0x61, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x4e, 
+0x4f, 0x54, 0x45, 0x20, 0x3a, 0x20, 0x74, 0x63, 0x61, 0x6d, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6e, 0x67, 
+0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6d, 0x69, 0x73, 0x63, 0x22, 0x20, 0x75, 0x6e, 0x6c, 
+0x65, 0x73, 0x73, 0x20, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x63, 
+0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 
+0x3d, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 
+0x64, 0x0a, 0x69, 0x66, 0x20, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x72, 0x63, 0x64, 0x6f, 
+0x6e, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x26, 0x26, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 
+0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 
+0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x20, 0x61, 0x74, 
+0x74, 0x61, 0x63, 0x68, 0x20, 0x30, 0x20, 0x65, 0x73, 0x77, 0x20, 0x30, 0x22, 0x0a, 0x69, 0x66, 
+0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 
+0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 
+0x22, 0x6d, 0x75, 0x78, 0x73, 0x65, 0x6c, 0x20, 0x30, 0x3b, 0x20, 0x6d, 0x75, 0x78, 0x73, 0x65, 
+0x6c, 0x20, 0x30, 0x78, 0x38, 0x30, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 
+0x72, 0x20, 0x24, 0x74, 0x63, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 
+0x67, 0x67, 0x6c, 0x65, 0x20, 0x2b, 0x20, 0x30, 0x22, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 
+0x74, 0x63, 0x61, 0x6d, 0x3b, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 
+0x54, 0x43, 0x41, 0x4d, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x53, 0x74, 0x72, 0x61, 0x74, 0x61, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x4d, 0x4d, 0x55, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x0a, 0x69, 
+0x6e, 0x69, 0x74, 0x20, 0x6d, 0x6d, 0x75, 0x0a, 0x0a, 0x23, 0x20, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 
+0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x66, 0x66, 
+0x20, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2d, 0x42, 0x69, 0x74, 0x20, 0x45, 0x72, 0x72, 0x6f, 
+0x72, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x6e, 0x20, 0x35, 
+0x36, 0x37, 0x30, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x22, 
+0x6d, 0x20, 0x6d, 0x6d, 0x75, 0x5f, 0x69, 0x6e, 0x74, 0x63, 0x6e, 0x74, 0x6c, 0x20, 0x70, 0x70, 
+0x5f, 0x73, 0x62, 0x65, 0x5f, 0x65, 0x6e, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x43, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 
+0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x47, 0x42, 0x50, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 
+0x54, 0x45, 0x3a, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 
+0x65, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x42, 0x45, 0x46, 
+0x4f, 0x52, 0x45, 0x20, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x62, 0x70, 
+0x20, 0x22, 0x73, 0x69, 0x7a, 0x65, 0x67, 0x62, 0x70, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x61, 
+0x75, 0x74, 0x6f, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3d, 0x24, 0x71, 0x75, 0x69, 0x65, 0x74, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x74, 0x68, 0x65, 0x20, 0x53, 0x6c, 0x6f, 0x74, 0x20, 0x46, 0x72, 0x65, 0x65, 0x20, 0x41, 0x64, 
+0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6f, 0x6f, 0x6c, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 
+0x45, 0x3a, 0x20, 0x53, 0x44, 0x52, 0x41, 0x4d, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 
+0x47, 0x42, 0x50, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 
+0x64, 0x20, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x20, 0x73, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 
+0x74, 0x2e, 0x0a, 0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x30, 0x35, 0x5f, 0x41, 0x30, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x73, 0x66, 0x61, 
+0x70, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x4f, 0x4e, 0x43, 0x45, 0x20, 
+0x50, 0x45, 0x52, 0x20, 0x52, 0x45, 0x53, 0x45, 0x54, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x62, 0x70, 0x20, 
+0x22, 0x73, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x43, 0x65, 0x6c, 0x6c, 0x20, 0x46, 0x72, 
+0x65, 0x65, 0x20, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x50, 0x6f, 0x6f, 0x6c, 0x0a, 
+0x23, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x73, 0x68, 0x6f, 
+0x75, 0x6c, 0x64, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x62, 0x65, 0x20, 0x64, 0x6f, 0x6e, 0x65, 0x20, 
+0x75, 0x6e, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x63, 0x68, 0x69, 0x70, 0x20, 0x69, 0x73, 0x20, 0x6b, 
+0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x62, 0x61, 0x64, 
+0x20, 0x43, 0x46, 0x41, 0x50, 0x0a, 0x23, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x65, 
+0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x6e, 0x65, 0x65, 0x64, 
+0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x20, 0x6f, 0x75, 
+0x74, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x63, 0x66, 0x61, 0x70, 0x5f, 0x74, 0x65, 0x73, 
+0x74, 0x73, 0x20, 0x22, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x49, 0x6e, 
+0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x43, 0x46, 0x41, 0x50, 0x3b, 
+0x20, 0x63, 0x66, 0x61, 0x70, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x0a, 0x0a, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x4d, 0x4d, 0x55, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x65, 0x64, 0x0a, 0x0a, 0x23, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x20, 
+0x43, 0x4c, 0x49, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x41, 0x50, 0x49, 0x0a, 
+0x23, 0x0a, 0x23, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 
+0x20, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x72, 0x61, 0x77, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x20, 0x77, 0x72, 0x69, 
+0x74, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x68, 0x61, 0x76, 
+0x69, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x0a, 0x23, 0x20, 0x63, 0x6c, 0x6f, 0x62, 
+0x62, 0x65, 0x72, 0x65, 0x64, 0x2e, 0x20, 0x20, 0x4e, 0x4f, 0x54, 0x45, 0x3a, 0x20, 0x54, 0x61, 
+0x62, 0x6c, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 
+0x20, 0x62, 0x79, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x20, 0x62, 
+0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x20, 0x20, 0x49, 0x66, 0x0a, 0x23, 0x20, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x20, 0x70, 0x75, 
+0x74, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x22, 0x69, 0x6e, 
+0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x2e, 0x20, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x0a, 0x23, 
+0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6d, 0x69, 0x67, 0x68, 0x74, 
+0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 
+0x64, 0x2e, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 
+0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x3b, 
+0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x42, 
+0x43, 0x4d, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 
+0x62, 0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 
+0x3a, 0x20, 0x2a, 0x2a, 0x2a, 0x20, 0x4e, 0x4f, 0x54, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 
+0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x43, 0x4d, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 
+0x72, 0x20, 0x2a, 0x2a, 0x2a, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 
+0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x27, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x76, 0x74, 0x61, 
+0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x31, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 
+0x3d, 0x30, 0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 
+0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 
+0x20, 0x76, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 
+0x3d, 0x31, 0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 
+0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 
+0x4c, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x70, 0x76, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x56, 0x4c, 
+0x41, 0x4e, 0x5f, 0x54, 0x41, 0x47, 0x3d, 0x31, 0x2c, 0x53, 0x50, 0x5f, 0x53, 0x54, 0x3d, 0x33, 
+0x2c, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 
+0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x2c, 0x55, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 
+0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x24, 0x50, 0x42, 0x4d, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x3b, 
+0x20, 0x5c, 0x0a, 0x09, 0x20, 0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 
+0x65, 0x20, 0x30, 0x20, 0x33, 0x32, 0x20, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x09, 0x20, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x22, 0x77, 
+0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x32, 0x34, 
+0x20, 0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x31, 0x22, 0x3b, 0x20, 0x5c, 
+0x0a, 0x09, 0x20, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x22, 0x77, 0x72, 
+0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x32, 0x20, 
+0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x32, 0x22, 0x3b, 0x20, 0x5c, 0x0a, 
+0x09, 0x20, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x73, 0x6c, 0x20, 0x20, 0x22, 0x77, 0x72, 0x69, 
+0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x30, 0x20, 0x38, 0x20, 0x24, 0x70, 
+0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x32, 0x22, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 
+0x77, 0x72, 0x69, 0x74, 0x65, 0x20, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x37, 0x20, 
+0x31, 0x20, 0x24, 0x70, 0x76, 0x2c, 0x50, 0x54, 0x59, 0x50, 0x45, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x76, 0x27, 0x0a, 
+0x0a, 0x23, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x72, 0x72, 0x6f, 
+0x72, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 
+0x20, 0x41, 0x52, 0x4c, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 
+0x69, 0x6e, 0x74, 0x6f, 0x20, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x41, 0x52, 
+0x4c, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 
+0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x6c, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x61, 0x72, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 
+0x72, 0x5f, 0x64, 0x6d, 0x61, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 
+0x20, 0x72, 0x63, 0x3a, 0x20, 0x41, 0x52, 0x4c, 0x20, 0x44, 0x4d, 0x41, 0x20, 0x73, 0x68, 0x61, 
+0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x72, 
+0x6c, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x73, 
+0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x32, 0x6d, 
+0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x33, 0x30, 0x30, 
+0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 
+0x72, 0x63, 0x3a, 0x20, 0x4c, 0x32, 0x20, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x73, 0x68, 0x61, 
+0x64, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x0a, 
+0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x43, 
+0x4d, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 
+0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x61, 
+0x6e, 0x64, 0x20, 0x73, 0x65, 0x74, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 
+0x73, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 
+0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x20, 0x32, 0x35, 0x30, 
+0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x65, 0x20, 
+0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 0x61, 0x6e, 0x3d, 0x6f, 0x6e, 0x20, 0x61, 0x75, 0x74, 0x6f, 
+0x6e, 0x65, 0x67, 0x3d, 0x6f, 0x6e, 0x20, 0x5c, 0x0a, 0x09, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 
+0x3d, 0x30, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x3d, 0x74, 0x72, 
+0x75, 0x65, 0x20, 0x74, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x74, 0x72, 0x75, 0x65, 0x20, 
+0x72, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x74, 0x72, 0x75, 0x65, 0x3b, 0x20, 0x5c, 0x0a, 
+0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x74, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x63, 
+0x61, 0x6e, 0x3d, 0x6f, 0x6e, 0x20, 0x74, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x66, 0x61, 
+0x6c, 0x73, 0x65, 0x20, 0x72, 0x78, 0x70, 0x61, 0x75, 0x73, 0x65, 0x3d, 0x66, 0x61, 0x6c, 0x73, 
+0x65, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 0x6f, 0x20, 0x72, 0x63, 0x3a, 
+0x20, 0x50, 0x6f, 0x72, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x69, 0x74, 
+0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x20, 0x73, 
+0x70, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x72, 0x65, 0x65, 0x20, 0x69, 0x73, 0x20, 
+0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x73, 0x6f, 0x20, 0x70, 0x75, 0x74, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 
+0x65, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x5c, 
+0x0a, 0x09, 0x22, 0x73, 0x74, 0x67, 0x20, 0x73, 0x74, 0x70, 0x20, 0x31, 0x20, 0x61, 0x6c, 0x6c, 
+0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 
+0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x20, 
+0x28, 0x4d, 0x44, 0x50, 0x2c, 0x20, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2c, 0x20, 0x52, 
+0x44, 0x50, 0x2c, 0x20, 0x44, 0x44, 0x50, 0x29, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x75, 0x73, 0x65, 
+0x20, 0x30, 0x31, 0x3a, 0x31, 0x30, 0x3a, 0x31, 0x38, 0x3a, 0x31, 0x31, 0x3a, 0x32, 0x32, 0x3a, 
+0x33, 0x33, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x41, 0x2c, 0x20, 
+0x73, 0x69, 0x6e, 0x63, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x20, 
+0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2c, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x44, 
+0x4c, 0x46, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x0a, 0x23, 0x20, 0x62, 0x79, 
+0x20, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 
+0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x44, 0x41, 0x2e, 0x0a, 0x23, 0x0a, 
+0x23, 0x20, 0x28, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x66, 0x20, 0x79, 0x6f, 
+0x75, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x50, 
+0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x29, 0x2e, 0x0a, 0x23, 0x20, 0x6c, 0x32, 0x20, 
+0x61, 0x64, 0x64, 0x20, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x20, 0x4d, 0x41, 0x43, 0x61, 0x64, 0x64, 0x72, 
+0x65, 0x73, 0x73, 0x3d, 0x30, 0x30, 0x3a, 0x31, 0x30, 0x3a, 0x31, 0x38, 0x3a, 0x31, 0x31, 0x3a, 
+0x32, 0x32, 0x3a, 0x33, 0x33, 0x20, 0x53, 0x54, 0x61, 0x74, 0x69, 0x63, 0x3d, 0x74, 0x72, 0x75, 
+0x65, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 
+0x65, 0x72, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x75, 0x6e, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x61, 
+0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x20, 0x62, 
+0x79, 0x20, 0x22, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x62, 0x63, 0x6d, 0x22, 0x20, 0x61, 0x62, 0x6f, 
+0x76, 0x65, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x6d, 0x61, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 
+0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x70, 0x6c, 0x69, 0x73, 0x69, 0x6d, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x64, 0x6d, 0x61, 0x20, 0x74, 0x72, 0x75, 0x65, 0x22, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 
+0x3d, 0x31, 0x30, 0x30, 0x30, 0x20, 0x50, 0x62, 0x6d, 0x3d, 0x61, 0x6c, 0x6c, 0x20, 0x44, 0x6d, 
+0x61, 0x3d, 0x24, 0x64, 0x6d, 0x61, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x63, 0x6f, 
+0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 
+0x7a, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x76, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 
+0x75, 0x65, 0x73, 0x20, 0x6b, 0x65, 0x70, 0x74, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 
+0x27, 0x73, 0x68, 0x6f, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x27, 0x20, 0x63, 
+0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 
+0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 
+0x20, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x79, 0x20, 0x64, 0x65, 0x66, 
+0x61, 0x75, 0x6c, 0x74, 0x2c, 0x20, 0x64, 0x75, 0x6d, 0x70, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 
+0x6f, 0x66, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 
+0x67, 0x6f, 0x20, 0x74, 0x6f, 0x20, 0x43, 0x50, 0x55, 0x2e, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 
+0x3f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x70, 0x77, 
+0x20, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x2b, 0x72, 0x61, 0x77, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 
+0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 
+0x6f, 0x72, 0x20, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x53, 0x44, 0x4b, 0x73, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 
+0x73, 0x69, 0x67, 0x6e, 0x73, 0x2e, 0x0a, 0x23, 0x20, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x66, 0x6f, 0x75, 0x6e, 
+0x64, 0x20, 0x69, 0x6e, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x6c, 0x65, 0x64, 0x2f, 0x65, 0x78, 
+0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x70, 
+0x34, 0x38, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x37, 
+0x46, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 
+0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x37, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x37, 0x43, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 
+0x37, 0x46, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 
+0x20, 0x31, 0x36, 0x20, 0x37, 0x43, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x37, 0x44, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 
+0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x39, 0x41, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 
+0x36, 0x20, 0x37, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x30, 0x35, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x34, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x43, 0x20, 0x36, 0x37, 0x20, 0x33, 0x35, 0x20, 0x36, 0x37, 0x20, 
+0x32, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x37, 0x46, 0x20, 0x36, 0x37, 0x20, 0x39, 0x42, 0x20, 0x36, 0x37, 0x20, 0x38, 0x39, 0x20, 
+0x36, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x38, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 
+0x43, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x37, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x38, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x44, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 0x31, 0x33, 0x20, 0x33, 0x41, 0x20, 0x37, 
+0x30, 0x20, 0x36, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x44, 0x20, 0x37, 0x31, 0x20, 0x43, 0x33, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 
+0x20, 0x42, 0x46, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x35, 0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 
+0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 
+0x35, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x36, 0x37, 0x20, 
+0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x46, 0x20, 0x37, 0x37, 0x20, 0x43, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x42, 0x36, 0x20, 0x37, 0x31, 0x20, 0x43, 0x33, 0x20, 0x37, 0x37, 0x20, 0x42, 
+0x46, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 0x35, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 
+0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x46, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 
+0x20, 0x46, 0x45, 0x20, 0x37, 0x46, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x35, 
+0x30, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x33, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x42, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 
+0x70, 0x34, 0x38, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 
+0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x6b, 
+0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x31, 0x20, 0x36, 
+0x37, 0x20, 0x33, 0x36, 0x20, 0x32, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x39, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x38, 0x36, 0x20, 0x37, 0x46, 0x20, 
+0x30, 0x36, 0x20, 0x37, 0x46, 0x20, 0x43, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 
+0x34, 0x20, 0x32, 0x34, 0x20, 0x38, 0x36, 0x20, 0x37, 0x45, 0x20, 0x31, 0x36, 0x20, 0x37, 0x45, 
+0x20, 0x43, 0x41, 0x20, 0x30, 0x37, 0x20, 0x45, 0x30, 0x20, 0x31, 0x37, 0x20, 0x30, 0x44, 0x20, 
+0x31, 0x32, 0x20, 0x30, 0x38, 0x20, 0x39, 0x38, 0x20, 0x32, 0x37, 0x20, 0x44, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x38, 0x37, 0x20, 0x39, 0x31, 0x20, 0x37, 0x34, 0x20, 0x32, 0x44, 0x20, 0x33, 0x41, 
+0x20, 0x32, 0x38, 0x20, 0x31, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x33, 0x45, 0x20, 0x46, 0x41, 0x20, 0x30, 0x32, 0x20, 0x35, 0x37, 0x20, 0x45, 0x41, 0x20, 0x30, 
+0x36, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 
+0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x62, 0x6c, 
+0x61, 0x63, 0x6b, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 
+0x20, 0x30, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x32, 0x41, 0x20, 0x30, 0x36, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x41, 0x20, 0x30, 0x38, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6b, 0x6e, 
+0x69, 0x67, 0x67, 0x65, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x45, 0x20, 0x36, 0x37, 
+0x20, 0x38, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x43, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x5c, 
+0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x33, 0x38, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x34, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x34, 0x43, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x35, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x44, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x38, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x43, 0x37, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x43, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x42, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x42, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x35, 0x20, 0x42, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x37, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x73, 
+0x64, 0x6b, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x6b, 0x31, 0x32, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x42, 0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x41, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 0x36, 
+0x37, 0x20, 0x36, 0x45, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x39, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x35, 0x20, 0x30, 0x32, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x43, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x36, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x30, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x45, 0x20, 0x31, 0x32, 0x20, 0x41, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x34, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x43, 0x20, 
+0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x46, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x44, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x41, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x46, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x46, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x36, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x44, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x41, 0x36, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 
+0x09, 0x09, 0x23, 0x20, 0x6b, 0x31, 0x32, 0x2d, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x36, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x23, 0x20, 0x77, 0x6b, 0x35, 0x36, 0x37, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x20, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 
+0x32, 0x41, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 
+0x36, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 
+0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 
+0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 
+0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 0x30, 0x35, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x36, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x32, 0x41, 0x20, 0x30, 0x34, 0x20, 0x36, 
+0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x31, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x23, 0x20, 0x6c, 0x61, 0x6e, 
+0x63, 0x65, 0x6c, 0x6f, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x78, 0x67, 0x73, 0x5f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 
+0x30, 0x34, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 0x35, 0x20, 0x36, 
+0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 0x41, 0x20, 0x30, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 
+0x72, 0x65, 0x35, 0x36, 0x37, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x77, 
+0x68, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x66, 
+0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 
+0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x77, 
+0x6b, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6d, 0x65, 
+0x72, 0x6c, 0x69, 0x6e, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 
+0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x35, 0x36, 
+0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 
+0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x67, 0x61, 0x6c, 0x61, 0x68, 
+0x61, 0x64, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x31, 
+0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x09, 0x09, 0x23, 0x20, 0x67, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x45, 0x30, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x31, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 
+0x0a, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 
+0x20, 0x5c, 0x0a, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x35, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 
+0x46, 0x45, 0x20, 0x5c, 0x0a, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x31, 0x20, 0x35, 0x43, 
+0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 
+0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x36, 0x20, 0x43, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 
+0x20, 0x41, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x37, 0x31, 0x20, 0x41, 0x36, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x46, 0x20, 0x37, 0x35, 0x20, 
+0x41, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x37, 0x31, 0x20, 
+0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 
+0x44, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x35, 0x36, 0x39, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 0x6c, 
+0x79, 0x6e, 0x78, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 
+0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x32, 0x41, 0x20, 0x30, 0x31, 0x20, 0x36, 0x37, 0x20, 
+0x30, 0x41, 0x20, 0x32, 0x41, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 0x30, 0x41, 0x20, 0x33, 
+0x41, 0x20, 0x30, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x74, 
+0x77, 0x6f, 0x6c, 0x79, 0x6e, 0x78, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x79, 
+0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x7c, 
+0x7c, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x31, 0x20, 0x30, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x32, 0x41, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 0x31, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x30, 0x34, 0x20, 0x5c, 0x0a, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 
+0x32, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x37, 0x37, 0x20, 0x32, 0x41, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 
+0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x68, 0x65, 0x72, 
+0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x6d, 0x61, 
+0x67, 0x6e, 0x75, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x37, 0x20, 0x32, 0x33, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 
+0x32, 0x30, 0x20, 0x36, 0x37, 0x20, 0x32, 0x33, 0x20, 0x44, 0x32, 0x20, 0x33, 0x38, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x38, 0x20, 0x36, 0x37, 
+0x20, 0x32, 0x33, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x31, 0x31, 0x20, 
+0x45, 0x39, 0x20, 0x30, 0x32, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 0x20, 0x38, 
+0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x41, 
+0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x41, 0x20, 0x36, 0x37, 0x20, 0x33, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x34, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x35, 0x20, 0x5c, 0x0a, 
+0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x34, 
+0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x34, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x45, 0x35, 0x20, 
+0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x30, 0x20, 0x45, 0x35, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x39, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x30, 0x20, 0x45, 0x34, 0x20, 0x35, 
+0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x45, 0x34, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 
+0x36, 0x36, 0x35, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6d, 0x61, 
+0x67, 0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x35, 0x41, 0x20, 0x36, 0x37, 0x20, 0x39, 0x43, 
+0x20, 0x30, 0x36, 0x20, 0x46, 0x41, 0x20, 0x36, 0x37, 0x20, 0x44, 0x41, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x42, 0x20, 0x36, 0x37, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x43, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x45, 0x39, 0x20, 0x30, 0x35, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 
+0x39, 0x38, 0x20, 0x43, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x46, 0x39, 0x20, 0x30, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 
+0x20, 0x43, 0x32, 0x20, 0x46, 0x30, 0x20, 0x42, 0x36, 0x20, 0x46, 0x39, 0x20, 0x35, 0x30, 0x20, 
+0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x33, 0x36, 0x20, 0x45, 
+0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x45, 0x20, 0x37, 0x34, 0x20, 0x35, 0x31, 0x20, 
+0x33, 0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x32, 0x20, 0x31, 0x32, 0x20, 0x44, 
+0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x41, 0x20, 0x37, 0x35, 0x20, 0x44, 0x37, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x44, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x44, 0x34, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x34, 0x20, 0x37, 0x37, 0x20, 0x44, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x31, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x41, 0x20, 0x30, 0x32, 
+0x20, 0x46, 0x42, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x31, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x31, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x44, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 
+0x31, 0x20, 0x44, 0x34, 0x20, 0x37, 0x37, 0x20, 0x44, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x30, 0x32, 0x20, 0x35, 0x37, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x37, 0x34, 0x20, 0x45, 0x33, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x37, 0x37, 0x20, 0x45, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x34, 0x20, 0x45, 0x45, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 
+0x36, 0x35, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6d, 0x61, 0x67, 
+0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 
+0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x30, 
+0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 
+0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x30, 0x20, 0x46, 0x42, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x35, 0x20, 0x30, 0x39, 0x20, 0x41, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x37, 
+0x20, 0x36, 0x37, 0x20, 0x37, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 0x42, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 
+0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 
+0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 
+0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x34, 0x33, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x32, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x42, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x37, 
+0x37, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x37, 0x45, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x42, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x5c, 
+0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x44, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x42, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6d, 0x61, 0x67, 0x6e, 
+0x75, 0x6d, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x42, 0x43, 0x4d, 0x35, 0x36, 0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x36, 0x30, 0x20, 0x46, 0x42, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x31, 0x20, 
+0x31, 0x30, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 0x36, 0x37, 0x20, 0x44, 
+0x30, 0x20, 0x36, 0x37, 0x20, 0x43, 0x30, 0x20, 0x37, 0x37, 0x20, 0x31, 0x39, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x31, 0x20, 0x36, 0x30, 0x20, 0x46, 0x43, 0x20, 0x32, 0x38, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x42, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x33, 0x34, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x43, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x38, 0x20, 
+0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x41, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x42, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x42, 0x20, 0x31, 0x32, 
+0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x31, 
+0x36, 0x20, 0x46, 0x46, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 
+0x20, 0x36, 0x37, 0x20, 0x41, 0x34, 0x20, 0x37, 0x35, 0x20, 0x41, 0x42, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 
+0x32, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x38, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x37, 0x35, 0x20, 0x44, 0x44, 0x20, 0x39, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 
+0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x35, 0x36, 
+0x35, 0x30, 0x5f, 0x43, 0x30, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x43, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x31, 0x20, 0x30, 0x45, 
+0x20, 0x36, 0x37, 0x20, 0x45, 0x39, 0x20, 0x36, 0x37, 0x20, 0x44, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x31, 0x41, 0x20, 0x36, 0x37, 0x20, 0x35, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 
+0x43, 0x20, 0x30, 0x36, 0x20, 0x46, 0x41, 0x20, 0x36, 0x37, 0x20, 0x44, 0x30, 0x20, 0x30, 0x36, 
+0x20, 0x46, 0x42, 0x20, 0x36, 0x37, 0x20, 0x44, 0x30, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x31, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x46, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x45, 0x39, 0x20, 0x30, 0x35, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 
+0x39, 0x38, 0x20, 0x43, 0x32, 0x20, 0x30, 0x46, 0x20, 0x36, 0x30, 0x20, 0x46, 0x39, 0x20, 0x30, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 0x20, 0x38, 0x38, 
+0x20, 0x43, 0x32, 0x20, 0x46, 0x30, 0x20, 0x42, 0x36, 0x20, 0x46, 0x39, 0x20, 0x35, 0x30, 0x20, 
+0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x33, 0x36, 0x20, 0x45, 
+0x39, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x34, 0x35, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x31, 0x20, 0x44, 0x41, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x35, 0x31, 0x20, 
+0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x36, 0x36, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x32, 0x20, 0x31, 0x32, 0x20, 0x44, 
+0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 0x35, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x46, 0x41, 0x20, 0x37, 0x35, 0x20, 0x43, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x37, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x46, 0x43, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x43, 0x41, 0x20, 0x31, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x46, 0x41, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x41, 0x20, 0x37, 0x37, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 
+0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x46, 0x42, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x30, 0x20, 0x30, 0x32, 
+0x20, 0x46, 0x42, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x44, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x34, 0x32, 0x20, 0x46, 0x46, 0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x46, 0x45, 
+0x20, 0x35, 0x37, 0x20, 0x34, 0x32, 0x20, 0x45, 0x46, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 0x38, 0x20, 0x39, 
+0x38, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x45, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x45, 
+0x36, 0x20, 0x38, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x36, 
+0x20, 0x46, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x35, 0x20, 0x46, 0x36, 0x20, 0x39, 0x30, 0x20, 0x33, 0x30, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x74, 0x75, 0x63, 0x32, 0x34, 
+0x5f, 0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 
+0x65, 0x72, 0x63, 0x38, 0x5f, 0x31, 0x35, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 
+0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x39, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x38, 0x36, 0x20, 0x37, 0x46, 0x20, 0x30, 0x36, 0x20, 0x37, 
+0x46, 0x20, 0x43, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x34, 0x20, 0x32, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x36, 0x20, 0x37, 0x45, 0x20, 0x31, 0x36, 0x20, 0x37, 0x45, 0x20, 0x43, 0x41, 0x20, 
+0x30, 0x37, 0x20, 0x45, 0x30, 0x20, 0x31, 0x37, 0x20, 0x30, 0x44, 0x20, 0x31, 0x32, 0x20, 0x30, 
+0x38, 0x20, 0x39, 0x38, 0x20, 0x32, 0x37, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x39, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x32, 0x42, 0x20, 0x33, 0x41, 0x20, 0x32, 0x38, 0x27, 
+0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x35, 
+0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x37, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x31, 0x20, 0x35, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x42, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x31, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x46, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x31, 0x20, 0x35, 0x43, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 
+0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x37, 0x37, 0x20, 0x41, 0x44, 0x20, 0x31, 0x36, 
+0x20, 0x5c, 0x0a, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x44, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x46, 0x20, 0x37, 0x35, 0x20, 0x41, 0x36, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x36, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 0x34, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x44, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x44, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 
+0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x27, 
+0x22, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x35, 0x36, 0x39, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 
+0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x39, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x30, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 
+0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x33, 0x34, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x38, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x41, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x42, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 
+0x0a, 0x20, 0x37, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x31, 0x36, 
+0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 0x20, 
+0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x41, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x41, 0x42, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 
+0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x42, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 
+0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 
+0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x35, 0x36, 0x39, 0x35, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x42, 0x20, 0x22, 0x6c, 0x6f, 
+0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 
+0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 
+0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 
+0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x39, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 
+0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x32, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 
+0x33, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 
+0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x43, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x46, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 
+0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 
+0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 0x37, 
+0x35, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x41, 0x46, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 
+0x38, 0x70, 0x35, 0x36, 0x39, 0x35, 0x5f, 0x31, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x36, 0x37, 0x20, 0x39, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x39, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x39, 
+0x20, 0x37, 0x35, 0x20, 0x32, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x43, 0x45, 0x20, 
+0x36, 0x37, 0x20, 0x35, 0x35, 0x20, 0x37, 0x37, 0x20, 0x32, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 
+0x20, 0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x31, 0x39, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x34, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x35, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x37, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x44, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x46, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x45, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x43, 0x37, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x43, 
+0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x31, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x5c, 
+0x0a, 0x20, 0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x39, 
+0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x43, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x5c, 0x0a, 0x20, 0x43, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x37, 0x20, 0x37, 0x37, 0x20, 0x43, 0x45, 0x20, 
+0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 
+0x64, 0x6b, 0x35, 0x36, 0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4c, 0x65, 
+0x64, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x65, 
+0x77, 0x20, 0x72, 0x65, 0x76, 0x20, 0x6f, 0x66, 0x20, 0x46, 0x42, 0x20, 0x53, 0x44, 0x4b, 0x20, 
+0x61, 0x6e, 0x64, 0x20, 0x52, 0x65, 0x66, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x66, 0x62, 0x32, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x42, 
+0x20, 0x36, 0x37, 0x20, 0x38, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x31, 0x43, 0x20, 0x36, 0x37, 0x20, 0x43, 0x34, 0x20, 0x36, 0x37, 0x20, 0x34, 0x42, 0x20, 
+0x37, 0x37, 0x20, 0x32, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x42, 0x36, 
+0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x35, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x46, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x34, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x37, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 
+0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x43, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x42, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x44, 
+0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 
+0x37, 0x31, 0x20, 0x42, 0x44, 0x20, 0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x42, 0x36, 0x20, 0x30, 
+0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 
+0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x44, 0x20, 0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x35, 0x30, 0x34, 
+0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 
+0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 
+0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x39, 0x20, 0x30, 
+0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 
+0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 
+0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 
+0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 
+0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x31, 0x20, 
+0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 
+0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x42, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 0x39, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 
+0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 
+0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x36, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x41, 0x46, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 
+0x20, 0x37, 0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x41, 0x38, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 0x37, 0x35, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 
+0x41, 0x46, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x46, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 0x31, 0x32, 
+0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x35, 0x36, 
+0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 
+0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x4c, 0x69, 0x6e, 0x65, 0x20, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x20, 
+0x2d, 0x35, 0x30, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 
+0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 
+0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x31, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 
+0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x32, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 
+0x32, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x44, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x37, 0x35, 0x20, 0x34, 0x39, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 
+0x42, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x41, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x39, 0x43, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x38, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x41, 0x33, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x37, 0x37, 0x20, 0x41, 0x41, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x37, 0x44, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x43, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 
+0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x39, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x31, 0x20, 0x41, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x41, 0x33, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x37, 0x37, 0x20, 0x41, 0x41, 0x20, 
+0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 
+0x34, 0x38, 0x70, 0x35, 0x36, 0x35, 0x30, 0x34, 0x5f, 0x35, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 
+0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x31, 0x30, 0x78, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 
+0x32, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x36, 0x37, 
+0x20, 0x31, 0x45, 0x20, 0x37, 0x35, 0x20, 0x30, 0x41, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x30, 0x30, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 
+0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x43, 0x20, 
+0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x33, 0x41, 0x20, 0x30, 0x43, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 
+0x20, 0x35, 0x37, 0x20, 0x27, 0x22, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x31, 0x32, 0x70, 0x63, 0x78, 
+0x34, 0x35, 0x36, 0x35, 0x30, 0x31, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 
+0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x36, 
+0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x44, 0x20, 0x37, 0x35, 0x20, 0x31, 0x41, 
+0x20, 0x36, 0x37, 0x20, 0x43, 0x32, 0x20, 0x37, 0x37, 0x20, 0x32, 0x30, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x41, 0x20, 0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x31, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x37, 0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x34, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x44, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x42, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x42, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 
+0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x34, 
+0x20, 0x30, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x37, 0x31, 0x20, 0x42, 0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 
+0x44, 0x20, 0x37, 0x35, 0x20, 0x42, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x42, 0x42, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x42, 0x20, 0x37, 0x37, 0x20, 0x43, 0x32, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x70, 
+0x6f, 0x65, 0x34, 0x38, 0x70, 0x35, 0x36, 0x35, 0x30, 0x34, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 
+0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 
+0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 
+0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 
+0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 
+0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 
+0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 
+0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 
+0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x39, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 
+0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x36, 0x38, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 0x20, 0x35, 0x32, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x35, 0x35, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x38, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x45, 0x34, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x44, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x44, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 0x45, 0x34, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x36, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x44, 
+0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x44, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x37, 0x31, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x44, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 
+0x36, 0x31, 0x30, 0x32, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 
+0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x46, 0x65, 0x6c, 0x69, 
+0x78, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 
+0x72, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 
+0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 
+0x78, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x31, 0x35, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 
+0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x36, 0x42, 0x20, 0x36, 0x37, 0x20, 0x41, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x30, 0x32, 0x20, 0x31, 0x39, 0x20, 0x32, 0x38, 0x20, 
+0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x34, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x33, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x33, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x34, 0x37, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x38, 0x20, 0x36, 0x37, 0x20, 0x43, 0x46, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x37, 0x20, 0x35, 0x35, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x45, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x38, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x45, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x44, 0x36, 0x20, 0x31, 0x32, 0x20, 0x41, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 0x46, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x44, 0x44, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 
+0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 
+0x37, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 
+0x20, 0x42, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x44, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x31, 0x20, 0x37, 0x31, 0x20, 0x44, 0x36, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 
+0x20, 0x43, 0x46, 0x20, 0x37, 0x35, 0x20, 0x44, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x45, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x44, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x44, 0x44, 0x20, 0x37, 0x37, 0x20, 
+0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 
+0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 
+0x23, 0x20, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 
+0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x35, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 
+0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 
+0x44, 0x20, 0x37, 0x35, 0x20, 0x32, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x44, 0x32, 
+0x20, 0x36, 0x37, 0x20, 0x35, 0x39, 0x20, 0x37, 0x37, 0x20, 0x32, 0x45, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 0x37, 0x20, 0x36, 
+0x37, 0x20, 0x43, 0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x44, 0x20, 0x37, 0x34, 0x20, 0x31, 0x39, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x33, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x34, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x35, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x36, 0x37, 0x20, 
+0x43, 0x34, 0x20, 0x36, 0x37, 0x20, 0x43, 0x34, 0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x43, 0x34, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 
+0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 
+0x20, 0x43, 0x42, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 
+0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x42, 0x20, 0x37, 0x37, 0x20, 0x44, 0x32, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x35, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x34, 0x20, 0x30, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x34, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x42, 0x44, 0x20, 0x37, 0x35, 
+0x20, 0x43, 0x34, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x43, 0x42, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x42, 0x20, 0x37, 0x37, 0x20, 0x44, 0x32, 0x20, 0x31, 0x32, 0x20, 
+0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 
+0x35, 0x36, 0x36, 0x30, 0x31, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 
+0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x45, 0x61, 0x73, 
+0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 
+0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x36, 0x30, 0x32, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x65, 0x61, 0x73, 0x79, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x31, 0x78, 0x31, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 
+0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x37, 
+0x43, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x38, 0x30, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x30, 0x32, 0x20, 
+0x30, 0x43, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x35, 0x20, 0x31, 0x44, 0x20, 0x36, 0x37, 0x20, 0x38, 0x41, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x39, 0x20, 0x37, 0x37, 0x20, 0x32, 0x35, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x38, 
+0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x30, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x31, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x33, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x31, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x5c, 
+0x0a, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x41, 0x44, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x38, 
+0x41, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x43, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x31, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 
+0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x38, 0x33, 0x20, 0x31, 0x36, 0x20, 0x45, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x38, 0x33, 
+0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 
+0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 
+0x27, 0x22, 0x20, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x36, 0x30, 0x32, 0x2e, 
+0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 
+0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 
+0x72, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x35, 0x33, 0x33, 0x30, 0x30, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6d, 0x69, 0x72, 0x61, 0x67, 0x65, 0x32, 0x34, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 
+0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 
+0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 
+0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 
+0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 
+0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 
+0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x45, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x39, 0x45, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 
+0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 
+0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 
+0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x39, 0x45, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x45, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x32, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 
+0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 
+0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x33, 0x33, 0x30, 0x30, 0x2e, 0x68, 0x65, 0x78, 
+0x0a, 0x0a, 0x23, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x20, 0x44, 0x65, 0x66, 0x61, 
+0x75, 0x6c, 0x74, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 
+0x66, 0x6f, 0x72, 0x20, 0x35, 0x36, 0x33, 0x31, 0x34, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 
+0x63, 0x6d, 0x35, 0x36, 0x33, 0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 0x65, 0x66, 0x20, 0x22, 0x6c, 
+0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 
+0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 
+0x37, 0x39, 0x20, 0x36, 0x37, 0x20, 0x33, 0x44, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 
+0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 
+0x20, 0x5c, 0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x37, 0x39, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 
+0x32, 0x20, 0x31, 0x43, 0x20, 0x37, 0x34, 0x20, 0x30, 0x46, 0x20, 0x31, 0x32, 0x20, 0x45, 0x32, 
+0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x37, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 
+0x20, 0x33, 0x31, 0x20, 0x35, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 
+0x31, 0x20, 0x33, 0x42, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x33, 0x38, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x34, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x35, 0x35, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x5c, 0x0a, 0x20, 
+0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 
+0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x36, 0x37, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x5c, 0x0a, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x42, 0x30, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x37, 0x31, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x43, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 
+0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x43, 0x20, 0x37, 0x37, 0x20, 0x42, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x38, 0x39, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x31, 0x20, 
+0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x33, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x41, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 
+0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x43, 0x20, 0x37, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x42, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 
+0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 
+0x20, 0x23, 0x20, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x33, 0x31, 0x34, 0x70, 0x32, 0x34, 0x72, 
+0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 
+0x64, 0x6c, 0x65, 0x79, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x31, 0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 
+0x36, 0x20, 0x46, 0x33, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x32, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 
+0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 
+0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 
+0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x34, 0x35, 0x20, 0x38, 
+0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 0x31, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x34, 0x46, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 
+0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 
+0x37, 0x31, 0x20, 0x38, 0x41, 0x20, 0x37, 0x37, 0x20, 0x39, 0x31, 0x20, 0x30, 0x36, 0x20, 0x46, 
+0x32, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x43, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 0x37, 0x34, 0x20, 0x36, 0x45, 0x20, 0x37, 0x37, 
+0x20, 0x37, 0x34, 0x20, 0x43, 0x36, 0x20, 0x46, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 
+0x39, 0x31, 0x20, 0x37, 0x37, 0x20, 0x38, 0x41, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x36, 
+0x37, 0x20, 0x37, 0x43, 0x20, 0x37, 0x35, 0x20, 0x38, 0x33, 0x20, 0x37, 0x37, 0x20, 0x39, 0x31, 
+0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x30, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 
+0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x32, 0x31, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x38, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x46, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 0x36, 0x20, 0x46, 0x33, 0x20, 
+0x31, 0x32, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x35, 0x20, 0x37, 0x31, 0x20, 0x31, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 
+0x20, 0x5c, 0x0a, 0x20, 0x32, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x37, 0x35, 0x20, 0x32, 0x44, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x39, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x33, 0x39, 0x20, 0x31, 0x32, 0x20, 
+0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x41, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x34, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x37, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x35, 0x44, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 
+0x20, 0x46, 0x45, 0x20, 0x46, 0x32, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 
+0x35, 0x35, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x30, 0x20, 0x31, 0x36, 0x20, 0x46, 
+0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x39, 0x30, 0x20, 0x37, 0x37, 
+0x20, 0x39, 0x37, 0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x43, 
+0x31, 0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 
+0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x37, 0x34, 0x20, 0x37, 0x37, 0x20, 0x37, 0x41, 0x20, 0x43, 
+0x36, 0x20, 0x46, 0x33, 0x20, 0x37, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x37, 0x20, 0x39, 0x30, 
+0x20, 0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x36, 0x37, 0x20, 0x38, 0x32, 0x20, 0x37, 0x35, 0x20, 
+0x38, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x37, 0x20, 0x39, 0x37, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x37, 0x30, 0x30, 0x2e, 
+0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 
+0x79, 0x5f, 0x31, 0x67, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 
+0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x42, 0x20, 
+0x30, 0x36, 0x20, 0x45, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 0x20, 0x37, 
+0x34, 0x20, 0x30, 0x31, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x32, 0x20, 0x38, 0x35, 
+0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x39, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x32, 0x33, 
+0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x44, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x42, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x42, 0x34, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x42, 0x34, 0x20, 0x46, 
+0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x39, 0x20, 0x38, 0x35, 
+0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 
+0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x38, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 
+0x41, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x45, 0x20, 0x45, 0x33, 0x20, 0x39, 0x35, 
+0x20, 0x37, 0x35, 0x20, 0x36, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x41, 0x31, 0x20, 0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x37, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x41, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x39, 0x41, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 
+0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x31, 
+0x20, 0x30, 0x36, 0x20, 0x45, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x41, 0x31, 0x20, 0x37, 0x37, 0x20, 0x41, 0x38, 0x20, 0x31, 0x32, 0x20, 0x38, 
+0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 
+0x35, 0x37, 0x20, 0x27, 0x22, 0x20, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x30, 
+0x30, 0x63, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x6f, 0x6c, 
+0x64, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 
+0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x45, 0x30, 0x20, 0x32, 0x38, 0x20, 0x36, 
+0x30, 0x20, 0x46, 0x33, 0x20, 0x44, 0x32, 0x20, 0x31, 0x30, 0x20, 0x37, 0x35, 0x20, 0x30, 0x45, 
+0x20, 0x36, 0x37, 0x20, 0x33, 0x42, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x37, 0x37, 0x20, 
+0x31, 0x32, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x33, 
+0x42, 0x20, 0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x34, 
+0x20, 0x37, 0x34, 0x20, 0x30, 0x31, 0x20, 0x38, 0x36, 0x20, 0x46, 0x34, 0x20, 0x31, 0x32, 0x20, 
+0x46, 0x32, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x46, 0x20, 0x37, 0x31, 0x20, 0x32, 0x35, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 
+0x20, 0x46, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 
+0x37, 0x31, 0x20, 0x32, 0x46, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x46, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 
+0x20, 0x37, 0x31, 0x20, 0x33, 0x39, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 
+0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x34, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 0x45, 0x20, 0x46, 0x33, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x33, 0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x42, 0x43, 0x20, 0x46, 0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x36, 0x35, 0x20, 0x38, 0x35, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 0x46, 
+0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x43, 0x30, 
+0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x37, 0x37, 0x20, 0x31, 0x32, 0x20, 0x41, 0x38, 0x20, 
+0x46, 0x45, 0x20, 0x46, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x46, 0x20, 0x38, 
+0x35, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x30, 
+0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x42, 0x39, 0x20, 0x37, 0x37, 0x20, 
+0x43, 0x30, 0x20, 0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 
+0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x30, 0x32, 0x20, 0x43, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x37, 0x34, 0x20, 0x38, 0x45, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x43, 0x31, 0x20, 
+0x37, 0x34, 0x20, 0x38, 0x45, 0x20, 0x30, 0x32, 0x20, 0x30, 0x38, 0x20, 0x43, 0x31, 0x20, 0x37, 
+0x34, 0x20, 0x38, 0x45, 0x20, 0x37, 0x37, 0x20, 0x42, 0x32, 0x20, 0x43, 0x36, 0x20, 0x46, 0x34, 
+0x20, 0x5c, 0x0a, 0x20, 0x37, 0x34, 0x20, 0x43, 0x30, 0x20, 0x37, 0x37, 0x20, 0x42, 0x39, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x42, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x37, 0x35, 0x20, 0x42, 0x32, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x30, 0x20, 
+0x30, 0x36, 0x20, 0x46, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x37, 0x31, 0x20, 0x42, 
+0x39, 0x20, 0x37, 0x37, 0x20, 0x43, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x27, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 
+0x73, 0x64, 0x6b, 0x35, 0x36, 0x35, 0x38, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x68, 0x75, 0x6d, 0x76, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x20, 
+0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 
+0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x32, 0x38, 0x20, 0x44, 0x32, 0x20, 0x30, 
+0x38, 0x20, 0x37, 0x34, 0x20, 0x30, 0x41, 0x20, 0x46, 0x32, 0x20, 0x30, 0x32, 0x20, 0x32, 0x38, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x37, 0x20, 0x36, 0x37, 0x20, 0x32, 0x39, 0x20, 0x37, 0x35, 0x20, 
+0x31, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x36, 0x30, 0x20, 0x45, 
+0x34, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 0x36, 0x30, 
+0x20, 0x45, 0x34, 0x20, 0x36, 0x37, 0x20, 0x34, 0x43, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x38, 
+0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x32, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x33, 0x41, 
+0x20, 0x33, 0x30, 0x20, 0x31, 0x32, 0x20, 0x38, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 
+0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x36, 0x20, 0x45, 
+0x34, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 
+0x20, 0x31, 0x30, 0x20, 0x43, 0x31, 0x20, 0x37, 0x30, 0x20, 0x34, 0x32, 0x20, 0x31, 0x32, 0x20, 
+0x44, 0x32, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x44, 0x32, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 
+0x36, 0x38, 0x20, 0x30, 0x36, 0x20, 0x45, 0x34, 0x20, 0x31, 0x32, 0x20, 0x39, 0x34, 0x20, 0x5c, 
+0x0a, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x20, 0x43, 0x31, 
+0x20, 0x37, 0x30, 0x20, 0x35, 0x45, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x45, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x5c, 0x0a, 0x20, 0x46, 0x45, 0x20, 0x45, 0x34, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 
+0x20, 0x36, 0x44, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x36, 0x38, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x44, 0x37, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x44, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x27, 0x22, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x23, 0x20, 0x6c, 0x6d, 0x31, 0x32, 0x70, 
+0x35, 0x36, 0x38, 0x30, 0x32, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 
+0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 
+0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 0x36, 0x34, 0x20, 
+0x36, 0x37, 0x20, 0x39, 0x33, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 0x38, 0x30, 0x20, 0x44, 
+0x32, 0x20, 0x33, 0x36, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 
+0x20, 0x30, 0x34, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 
+0x42, 0x42, 0x20, 0x37, 0x35, 0x20, 0x31, 0x45, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x37, 0x37, 0x20, 0x32, 0x31, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x5c, 0x0a, 
+0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x44, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x36, 0x20, 0x37, 0x34, 0x20, 0x31, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x31, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 
+0x20, 0x5c, 0x0a, 0x20, 0x42, 0x42, 0x20, 0x37, 0x35, 0x20, 0x33, 0x38, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x37, 0x37, 0x20, 0x33, 0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x46, 0x20, 0x38, 0x37, 0x20, 0x36, 0x37, 0x20, 0x37, 0x44, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 
+0x20, 0x38, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x44, 0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x34, 0x20, 
+0x32, 0x43, 0x20, 0x31, 0x32, 0x20, 0x46, 0x45, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 
+0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x34, 0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 
+0x20, 0x31, 0x32, 0x20, 0x46, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 
+0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x37, 0x31, 0x20, 0x35, 0x38, 0x20, 0x35, 0x32, 0x20, 0x30, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x46, 0x43, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x36, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x35, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x43, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x37, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 
+0x20, 0x37, 0x35, 0x20, 0x43, 0x39, 0x20, 0x31, 0x36, 0x20, 0x46, 0x43, 0x20, 0x5c, 0x0a, 0x20, 
+0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 0x20, 0x43, 0x39, 0x20, 0x37, 0x37, 0x20, 0x44, 
+0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x43, 0x32, 
+0x20, 0x37, 0x37, 0x20, 0x44, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x38, 0x36, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x38, 0x46, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 
+0x32, 0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x33, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x43, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x46, 0x44, 0x20, 0x44, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x43, 
+0x32, 0x20, 0x30, 0x36, 0x20, 0x46, 0x46, 0x20, 0x36, 0x37, 0x20, 0x42, 0x42, 0x20, 0x37, 0x35, 
+0x20, 0x43, 0x32, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 
+0x44, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x35, 0x20, 0x43, 0x39, 0x20, 0x30, 0x36, 0x20, 0x46, 0x45, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 
+0x20, 0x37, 0x31, 0x20, 0x43, 0x39, 0x20, 0x37, 0x37, 0x20, 0x44, 0x30, 0x20, 0x31, 0x32, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x30, 
+0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x5c, 
+0x0a, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 
+0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 
+0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 
+0x30, 0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x30, 0x31, 0x38, 0x2e, 0x68, 
+0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x70, 0x32, 0x34, 0x5f, 0x72, 0x65, 0x66, 0x20, 0x22, 
+0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 
+0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x45, 0x20, 0x37, 0x31, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x35, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x33, 0x20, 0x37, 0x34, 0x20, 0x31, 0x31, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 
+0x20, 0x34, 0x38, 0x20, 0x36, 0x37, 0x20, 0x33, 0x31, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 
+0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x32, 0x30, 0x20, 0x38, 
+0x36, 0x20, 0x45, 0x30, 0x20, 0x33, 0x41, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x38, 0x20, 0x30, 0x36, 
+0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x35, 0x30, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 
+0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 
+0x37, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x36, 
+0x20, 0x45, 0x30, 0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x35, 0x42, 0x20, 
+0x37, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x36, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x35, 
+0x30, 0x20, 0x37, 0x35, 0x20, 0x35, 0x37, 0x20, 0x37, 0x37, 0x20, 0x35, 0x42, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 
+0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 
+0x27, 0x22, 0x20, 0x23, 0x20, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x32, 0x31, 0x34, 0x2e, 0x68, 0x65, 
+0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x5f, 0x65, 0x62, 
+0x5f, 0x34, 0x38, 0x70, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 
+0x36, 0x43, 0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 
+0x45, 0x20, 0x37, 0x34, 0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 
+0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 
+0x31, 0x41, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 
+0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 
+0x20, 0x32, 0x34, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 
+0x38, 0x35, 0x20, 0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 
+0x45, 0x20, 0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x43, 0x20, 
+0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x41, 0x20, 0x35, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x34, 0x38, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x41, 
+0x20, 0x38, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 
+0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 
+0x37, 0x20, 0x39, 0x42, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 
+0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x34, 0x20, 0x38, 0x35, 0x20, 
+0x37, 0x37, 0x20, 0x41, 0x32, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 
+0x32, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x35, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x43, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x31, 0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 
+0x20, 0x30, 0x36, 0x20, 0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 
+0x37, 0x35, 0x20, 0x39, 0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 
+0x20, 0x41, 0x32, 0x20, 0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 
+0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 
+0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 
+0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x45, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 
+0x38, 0x37, 0x20, 0x35, 0x37, 0x27, 0x22, 0x20, 0x23, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x30, 
+0x32, 0x34, 0x70, 0x34, 0x38, 0x72, 0x65, 0x66, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x42, 0x43, 0x4d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x52, 0x35, 0x30, 0x54, 
+0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 
+0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 0x32, 0x38, 0x20, 0x36, 0x30, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 0x36, 0x43, 0x20, 0x30, 
+0x36, 0x20, 0x43, 0x33, 0x20, 0x38, 0x30, 0x20, 0x44, 0x32, 0x20, 0x31, 0x45, 0x20, 0x37, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x32, 0x20, 0x38, 0x35, 0x20, 
+0x30, 0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x46, 0x20, 0x37, 0x31, 0x20, 0x31, 0x41, 0x20, 0x35, 
+0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x31, 0x20, 0x38, 0x35, 0x20, 0x30, 0x35, 
+0x20, 0x44, 0x32, 0x20, 0x31, 0x46, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x31, 0x20, 0x32, 0x34, 0x20, 
+0x35, 0x32, 0x20, 0x30, 0x30, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x38, 0x35, 0x20, 0x30, 
+0x35, 0x20, 0x44, 0x32, 0x20, 0x30, 0x35, 0x20, 0x37, 0x31, 0x20, 0x32, 0x45, 0x20, 0x35, 0x32, 
+0x20, 0x30, 0x30, 0x20, 0x33, 0x41, 0x20, 0x36, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x30, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x43, 0x20, 0x31, 0x32, 0x20, 0x43, 
+0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 
+0x34, 0x38, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x41, 0x20, 0x35, 0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x30, 0x20, 0x46, 0x45, 
+0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 0x37, 0x35, 0x20, 0x35, 0x41, 0x20, 0x38, 0x35, 0x20, 
+0x5c, 0x0a, 0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 
+0x35, 0x20, 0x37, 0x35, 0x20, 0x41, 0x39, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x39, 0x42, 
+0x20, 0x31, 0x32, 0x20, 0x43, 0x30, 0x20, 0x46, 0x45, 0x20, 0x43, 0x33, 0x20, 0x39, 0x35, 0x20, 
+0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x34, 0x20, 0x38, 0x35, 0x20, 0x37, 0x37, 0x20, 0x41, 
+0x32, 0x20, 0x31, 0x36, 0x20, 0x43, 0x30, 0x20, 0x44, 0x41, 0x20, 0x30, 0x32, 0x20, 0x37, 0x31, 
+0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x33, 0x32, 0x20, 0x30, 0x35, 0x20, 
+0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x43, 0x20, 0x33, 0x32, 0x20, 0x30, 
+0x32, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 0x36, 0x20, 0x43, 0x31, 
+0x20, 0x44, 0x32, 0x20, 0x30, 0x31, 0x20, 0x37, 0x31, 0x20, 0x39, 0x42, 0x20, 0x30, 0x36, 0x20, 
+0x43, 0x33, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x37, 0x35, 0x20, 0x39, 
+0x42, 0x20, 0x33, 0x32, 0x20, 0x30, 0x33, 0x20, 0x39, 0x37, 0x20, 0x37, 0x31, 0x20, 0x41, 0x39, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x34, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x41, 0x32, 0x20, 
+0x30, 0x36, 0x20, 0x43, 0x32, 0x20, 0x44, 0x32, 0x20, 0x30, 0x37, 0x20, 0x5c, 0x0a, 0x20, 0x37, 
+0x31, 0x20, 0x41, 0x32, 0x20, 0x37, 0x37, 0x20, 0x41, 0x39, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 
+0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x5c, 
+0x0a, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 
+0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 
+0x37, 0x27, 0x22, 0x20, 0x23, 0x62, 0x63, 0x6d, 0x39, 0x35, 0x36, 0x30, 0x32, 0x34, 0x72, 0x35, 
+0x30, 0x74, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x73, 0x63, 0x6f, 
+0x72, 0x70, 0x69, 0x6f, 0x6e, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x63, 0x6f, 0x6e, 0x71, 0x75, 
+0x65, 0x72, 0x6f, 0x72, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x31, 0x38, 0x20, 0x32, 0x38, 
+0x20, 0x36, 0x30, 0x20, 0x45, 0x31, 0x20, 0x36, 0x37, 0x20, 0x31, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x45, 0x31, 0x20, 0x39, 0x30, 0x20, 0x44, 0x32, 0x20, 0x30, 0x30, 0x20, 0x37, 0x34, 0x20, 0x30, 
+0x32, 0x20, 0x38, 0x36, 0x20, 0x45, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x33, 0x41, 0x20, 0x31, 0x38, 
+0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x37, 0x35, 0x20, 0x33, 0x34, 0x20, 0x32, 0x38, 0x20, 
+0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 0x20, 0x42, 0x37, 0x20, 0x39, 
+0x37, 0x20, 0x37, 0x35, 0x20, 0x33, 0x38, 0x20, 0x31, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x45, 0x30, 
+0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x33, 0x38, 0x20, 0x37, 0x37, 0x20, 
+0x33, 0x34, 0x20, 0x36, 0x37, 0x20, 0x32, 0x44, 0x20, 0x37, 0x35, 0x20, 0x33, 0x34, 0x20, 0x37, 
+0x37, 0x20, 0x33, 0x38, 0x20, 0x31, 0x32, 0x20, 0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x5c, 0x0a, 
+0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 
+0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x45, 0x20, 0x38, 
+0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 
+0x20, 0x5c, 0x0a, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x27, 0x22, 0x20, 0x23, 
+0x73, 0x64, 0x6b, 0x35, 0x36, 0x38, 0x32, 0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x76, 0x61, 0x6c, 0x6b, 0x79, 0x72, 0x69, 0x65, 0x20, 0x22, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x5c, 0x0a, 0x20, 0x30, 
+0x32, 0x20, 0x30, 0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x30, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x35, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x5c, 
+0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x34, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x36, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 
+0x37, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x30, 0x32, 0x20, 0x30, 0x45, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x30, 0x46, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 
+0x31, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 
+0x20, 0x30, 0x32, 0x20, 0x31, 0x30, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 0x41, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 
+0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x31, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 
+0x32, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 
+0x20, 0x30, 0x32, 0x20, 0x32, 0x33, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x34, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x46, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 
+0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x45, 0x20, 
+0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x31, 
+0x42, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 
+0x20, 0x32, 0x42, 0x20, 0x5c, 0x0a, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 0x37, 0x20, 
+0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x43, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 0x20, 0x36, 
+0x37, 0x20, 0x39, 0x34, 0x20, 0x30, 0x32, 0x20, 0x32, 0x44, 0x20, 0x36, 0x37, 0x20, 0x41, 0x39, 
+0x20, 0x36, 0x37, 0x20, 0x39, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x38, 0x36, 0x20, 0x45, 0x30, 0x20, 
+0x33, 0x41, 0x20, 0x33, 0x30, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 0x20, 0x42, 
+0x36, 0x20, 0x32, 0x38, 0x20, 0x33, 0x32, 0x20, 0x30, 0x30, 0x20, 0x33, 0x32, 0x20, 0x30, 0x31, 
+0x20, 0x42, 0x37, 0x20, 0x39, 0x37, 0x20, 0x37, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x42, 0x36, 0x20, 
+0x31, 0x36, 0x20, 0x45, 0x30, 0x20, 0x43, 0x41, 0x20, 0x30, 0x35, 0x20, 0x37, 0x34, 0x20, 0x42, 
+0x41, 0x20, 0x37, 0x37, 0x20, 0x42, 0x36, 0x20, 0x36, 0x37, 0x20, 0x41, 0x46, 0x20, 0x37, 0x35, 
+0x20, 0x42, 0x36, 0x20, 0x37, 0x37, 0x20, 0x42, 0x41, 0x20, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 
+0x41, 0x30, 0x20, 0x46, 0x38, 0x20, 0x31, 0x35, 0x20, 0x31, 0x41, 0x20, 0x30, 0x30, 0x20, 0x35, 
+0x37, 0x20, 0x33, 0x32, 0x20, 0x30, 0x46, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x33, 0x32, 
+0x20, 0x30, 0x45, 0x20, 0x38, 0x37, 0x20, 0x35, 0x37, 0x20, 0x30, 0x30, 0x20, 0x30, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x30, 0x30, 0x27, 0x22, 0x20, 0x23, 0x73, 0x64, 0x6b, 0x35, 0x36, 0x36, 0x38, 
+0x30, 0x2e, 0x68, 0x65, 0x78, 0x0a, 0x0a, 0x23, 0x20, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 
+0x64, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 
+0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x20, 0x61, 0x6e, 
+0x64, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x28, 0x69, 0x66, 0x20, 0x61, 0x70, 0x70, 
+0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x65, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x26, 0x26, 
+0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x5c, 0x0a, 
+0x09, 0x22, 0x6c, 0x65, 0x64, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x20, 0x24, 0x6c, 0x65, 0x64, 0x63, 
+0x6f, 0x64, 0x65, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6c, 0x65, 0x64, 0x20, 0x61, 0x75, 0x74, 
+0x6f, 0x20, 0x6f, 0x6e, 0x3b, 0x20, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x49, 0x66, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6d, 
+0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x2c, 0x20, 
+0x75, 0x70, 0x6f, 0x6e, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x6c, 0x61, 0x73, 0x74, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x74, 
+0x61, 0x72, 0x74, 0x0a, 0x23, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x4c, 0x45, 0x44, 0x20, 0x70, 0x72, 
+0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x20, 0x73, 0x6f, 0x20, 0x61, 0x6e, 0x79, 0x20, 
+0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x20, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x20, 
+0x69, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 
+0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 
+0x22, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x2a, 0x3a, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x6f, 0x70, 
+0x3b, 0x20, 0x2a, 0x3a, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x52, 0x75, 0x6e, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x44, 0x4d, 
+0x41, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x34, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x20, 0x70, 
+0x65, 0x72, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x68, 
+0x69, 0x65, 0x76, 0x65, 0x20, 0x62, 0x65, 0x74, 0x74, 0x65, 0x72, 0x0a, 0x23, 0x20, 0x63, 0x74, 
+0x72, 0x5f, 0x78, 0x61, 0x75, 0x69, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x62, 0x72, 0x61, 0x64, 0x6c, 0x65, 0x79, 0x5f, 0x61, 0x6e, 
+0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x63, 0x74, 0x72, 
+0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x55, 0x43, 0x20, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x20, 0x30, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x6f, 0x69, 
+0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x43, 0x50, 0x55, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x09, 0x22, 
+0x77, 0x20, 0x75, 0x63, 0x20, 0x30, 0x20, 0x31, 0x20, 0x31, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x41, 
+0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x34, 0x38, 0x2d, 0x70, 
+0x6f, 0x72, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 
+0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0a, 0x23, 0x20, 0x4f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x34, 
+0x38, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2c, 
+0x20, 0x72, 0x63, 0x2e, 0x73, 0x6f, 0x63, 0x20, 0x69, 0x73, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x74, 
+0x77, 0x69, 0x63, 0x65, 0x3b, 0x20, 0x6f, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x30, 0x20, 0x61, 0x6e, 0x64, 0x0a, 0x23, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 
+0x6f, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x2e, 0x20, 
+0x20, 0x54, 0x68, 0x65, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x6f, 0x6e, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x4e, 0x20, 0x69, 0x73, 0x20, 0x67, 0x65, 0x4e, 
+0x2e, 0x0a, 0x23, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
+0x62, 0x65, 0x20, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x3b, 0x20, 0x73, 0x65, 0x65, 0x20, 0x76, 
+0x6c, 0x61, 0x6e, 0x20, 0x61, 0x64, 0x64, 0x20, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x2e, 0x0a, 0x23, 
+0x20, 0x53, 0x65, 0x65, 0x20, 0x24, 0x53, 0x44, 0x4b, 0x2f, 0x64, 0x6f, 0x63, 0x2f, 0x34, 0x38, 
+0x2d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x78, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x6f, 
+0x72, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 
+0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x6f, 0x77, 0x0a, 0x23, 0x20, 0x74, 
+0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x20, 0x49, 0x50, 0x47, 0x20, 
+0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 
+0x72, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 
+0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x30, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x20, 0x31, 0x3b, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 
+0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 
+0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x3b, 0x20, 0x6c, 0x6f, 0x63, 
+0x61, 0x6c, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x20, 0x32, 0x3b, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x70, 0x34, 0x38, 0x20, 0x5c, 0x0a, 0x09, 0x22, 0x6d, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x73, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x72, 
+0x72, 0x3d, 0x30, 0x20, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3d, 0x31, 0x20, 
+0x73, 0x74, 0x5f, 0x6d, 0x63, 0x6e, 0x74, 0x3d, 0x31, 0x20, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x6d, 
+0x70, 0x6c, 0x65, 0x78, 0x3d, 0x30, 0x20, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x3d, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 
+0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x74, 0x5f, 0x6c, 
+0x69, 0x6e, 0x6b, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x67, 0x6d, 0x61, 
+0x63, 0x63, 0x32, 0x2e, 0x67, 0x65, 0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x69, 0x70, 0x67, 0x74, 0x3d, 0x38, 0x20, 0x6d, 0x63, 0x6c, 0x6b, 0x66, 0x71, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x66, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x66, 
+0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x3d, 0x31, 0x35, 0x36, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 
+0x20, 0x6d, 0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x20, 0x6d, 0x61, 0x78, 0x66, 0x72, 0x3d, 0x31, 
+0x35, 0x36, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x32, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x24, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 
+0x67, 0x65, 0x24, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x70, 
+0x65, 0x65, 0x64, 0x3d, 0x32, 0x35, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x09, 0x20, 0x76, 0x6c, 
+0x61, 0x6e, 0x20, 0x61, 0x64, 0x64, 0x20, 0x31, 0x20, 0x70, 0x62, 0x6d, 0x3d, 0x67, 0x65, 0x24, 
+0x74, 0x75, 0x72, 0x62, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x75, 0x62, 0x6d, 0x3d, 0x6e, 
+0x6f, 0x6e, 0x65, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 
+0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x30, 0x78, 0x63, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 
+0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x78, 0x31, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 
+0x6e, 0x61, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x68, 0x69, 0x70, 0x5f, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x31, 
+0x3d, 0x31, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x30, 0x3d, 0x30, 0x3b, 0x22, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x74, 0x75, 0x63, 0x61, 0x6e, 0x61, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 
+0x6d, 0x61, 0x67, 0x6e, 0x75, 0x6d, 0x20, 0x26, 0x26, 0x20, 0x21, 0x24, 0x3f, 0x74, 0x75, 0x63, 
+0x61, 0x6e, 0x61, 0x5f, 0x6e, 0x6f, 0x68, 0x67, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x30, 0x78, 0x33, 0x38, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x32, 0x3d, 0x30, 0x78, 0x33, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x30, 0x3d, 
+0x30, 0x22, 0x0a, 0x23, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x6e, 0x6f, 0x5f, 0x62, 0x63, 0x6d, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x78, 0x67, 0x73, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
+0x20, 0x5c, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x22, 0x73, 0x20, 0x43, 0x4d, 0x49, 0x43, 0x5f, 0x43, 
+0x4f, 0x53, 0x5f, 0x43, 0x54, 0x52, 0x4c, 0x5f, 0x52, 0x58, 0x20, 0x43, 0x48, 0x30, 0x5f, 0x43, 
+0x4f, 0x53, 0x5f, 0x42, 0x4d, 0x50, 0x3d, 0x30, 0x2c, 0x43, 0x48, 0x31, 0x5f, 0x43, 0x4f, 0x53, 
+0x5f, 0x42, 0x4d, 0x50, 0x3d, 0x30, 0x78, 0x66, 0x66, 0x2c, 0x20, 0x5c, 0x0a, 0x23, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x43, 0x48, 0x32, 0x5f, 0x43, 0x4f, 0x53, 0x5f, 0x42, 0x4d, 
+0x50, 0x3d, 0x30, 0x2c, 0x43, 0x48, 0x33, 0x5f, 0x43, 0x4f, 0x53, 0x5f, 0x42, 0x4d, 0x50, 0x3d, 
+0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x42, 0x61, 0x63, 0x6b, 0x2d, 0x74, 0x6f, 0x2d, 0x62, 0x61, 
+0x63, 0x6b, 0x20, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x0a, 
+0x0a, 0x23, 0x20, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x63, 0x68, 0x69, 0x70, 0x73, 0x20, 0x6d, 
+0x75, 0x73, 0x74, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x61, 0x74, 0x20, 0x31, 0x32, 0x37, 0x4d, 0x48, 
+0x7a, 0x2e, 0x20, 0x53, 0x6f, 0x6d, 0x65, 0x20, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x20, 0x76, 0x65, 
+0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x0a, 0x23, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 
+0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x66, 0x72, 0x65, 
+0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x6f, 0x5f, 0x73, 0x74, 0x6b, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 
+0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 
+0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 
+0x6f, 0x63, 0x6b, 0x20, 0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 
+0x0a, 0x23, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x53, 0x44, 
+0x4b, 0x20, 0x42, 0x61, 0x73, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 
+0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 
+0x20, 0x6f, 0x72, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x48, 0x69, 0x67, 
+0x69, 0x67, 0x73, 0x2c, 0x0a, 0x23, 0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x20, 0x61, 
+0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x47, 0x61, 0x6c, 0x61, 0x68, 0x61, 0x64, 0x20, 0x72, 0x65, 
+0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 
+0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 
+0x32, 0x62, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 
+0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 
+0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x62, 0x32, 0x62, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 
+0x23, 0x20, 0x4d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x2c, 0x20, 0x57, 0x68, 0x69, 0x74, 0x65, 0x20, 
+0x4b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x2c, 0x20, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x20, 0x4b, 0x6e, 
+0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x0a, 0x23, 0x09, 0x44, 
+0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 
+0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 
+0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 
+0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x69, 0x32, 
+0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x62, 
+0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x52, 0x65, 0x66, 0x31, 0x32, 0x35, 0x20, 0x31, 
+0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x6f, 0x5f, 
+0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 
+0x72, 0x61, 0x63, 0x6f, 0x5f, 0x68, 0x65, 0x72, 0x63, 0x34, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x4c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 
+0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 
+0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 
+0x79, 0x20, 0x22, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x22, 0x29, 0x0a, 
+0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 
+0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x37, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 
+0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 
+0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 
+0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x34, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x34, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x24, 0x3f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x69, 0x32, 0x63, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 
+0x74, 0x3b, 0x20, 0x62, 0x62, 0x20, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x44, 0x72, 0x61, 0x63, 
+0x6f, 0x5f, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x31, 0x32, 0x37, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 
+0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 
+0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x6c, 
+0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x33, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x32, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x61, 
+0x6e, 0x63, 0x65, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 
+0x79, 0x6e, 0x78, 0x20, 0x53, 0x44, 0x4b, 0x20, 0x28, 0x54, 0x77, 0x6f, 0x4c, 0x79, 0x6e, 0x78, 
+0x29, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 
+0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 
+0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x74, 0x77, 0x6f, 0x6c, 0x79, 
+0x6e, 0x78, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x74, 0x77, 0x6f, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x23, 0x20, 0x48, 0x65, 0x72, 0x63, 0x75, 0x4c, 0x79, 
+0x6e, 0x78, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 
+0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x68, 0x65, 0x72, 0x63, 
+0x75, 0x6c, 0x79, 0x6e, 0x78, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 
+0x73, 0x3a, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x31, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x32, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x33, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x34, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x35, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x35, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x36, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x36, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x37, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x37, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x38, 
+0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x20, 0x38, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 
+0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x34, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 
+0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x35, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x32, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x32, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 
+0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x37, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x33, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x33, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x33, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x33, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x30, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x34, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 
+0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x35, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x34, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x35, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x35, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x36, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x35, 0x20, 0x37, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 
+0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x34, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x34, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x32, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x35, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x34, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x36, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x37, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 
+0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 
+0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 
+0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 
+0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 
+0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 
+0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 
+0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 
+0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 
+0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 
+0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 
+0x74, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 
+0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 
+0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x36, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 
+0x78, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x37, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x36, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x36, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x79, 0x6e, 0x78, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x38, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x37, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 
+0x37, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 
+0x79, 0x6e, 0x78, 0x61, 0x4c, 0x6f, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 
+0x22, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 
+0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x33, 0x20, 0x28, 0x68, 0x67, 0x32, 0x2f, 0x68, 0x70, 0x69, 0x63, 
+0x32, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x30, 0x29, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 
+0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 
+0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x20, 0x28, 0x68, 0x67, 0x33, 0x2f, 
+0x68, 0x70, 0x69, 0x63, 0x33, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x31, 0x29, 0x0a, 0x23, 
+0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x30, 0x20, 0x69, 0x73, 
+0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x35, 0x20, 
+0x28, 0x68, 0x67, 0x34, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 
+0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x36, 0x20, 0x28, 0x68, 0x67, 
+0x35, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x35, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 
+0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x37, 0x20, 0x28, 0x68, 0x67, 0x36, 0x2f, 0x68, 
+0x70, 0x69, 0x63, 0x36, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 
+0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 
+0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 0x20, 0x28, 
+0x68, 0x67, 0x37, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x37, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 
+0x33, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 
+0x35, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x31, 0x20, 0x28, 0x68, 0x67, 0x30, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x30, 0x29, 0x20, 
+0x28, 0x6d, 0x6f, 0x64, 0x20, 0x34, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 
+0x75, 0x6e, 0x69, 0x74, 0x20, 0x36, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 
+0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x20, 0x28, 0x68, 0x67, 0x31, 0x2f, 0x68, 0x70, 
+0x69, 0x63, 0x31, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x35, 0x29, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x30, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x30, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 
+0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x35, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x32, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 
+0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x33, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x32, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x33, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 
+0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 
+0x68, 0x70, 0x69, 0x63, 0x33, 0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x33, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x30, 0x30, 0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x31, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 
+0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x34, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x35, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 
+0x38, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 
+0x70, 0x69, 0x63, 0x37, 0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x31, 0x30, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x37, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x34, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x35, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x6c, 0x79, 
+0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 
+0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x5f, 0x61, 
+0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 
+0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 
+0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 
+0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 
+0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 
+0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 
+0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 
+0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 
+0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 
+0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 
+0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x35, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 
+0x6f, 0x64, 0x69, 0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 
+0x64, 0x3d, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x61, 0x6c, 0x6f, 0x74, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x36, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x35, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x35, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x67, 0x75, 0x65, 
+0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 
+0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 
+0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 
+0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 
+0x4e, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x68, 
+0x67, 0x58, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 
+0x20, 0x6f, 0x6e, 0x20, 0x70, 0x62, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x30, 
+0x3d, 0x30, 0x78, 0x31, 0x62, 0x37, 0x0a, 0x23, 0x09, 0x44, 0x72, 0x61, 0x63, 0x6f, 0x20, 0x75, 
+0x6e, 0x69, 0x74, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x31, 0x20, 0x28, 0x68, 0x67, 0x30, 0x2f, 0x68, 0x70, 0x69, 
+0x63, 0x30, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x30, 0x29, 0x0a, 0x23, 0x09, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x32, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 
+0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x20, 0x28, 0x68, 0x67, 
+0x31, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x31, 0x29, 0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x31, 0x29, 
+0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x33, 0x20, 0x69, 
+0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x38, 
+0x20, 0x28, 0x68, 0x67, 0x35, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x37, 0x29, 0x20, 0x28, 0x6d, 0x6f, 
+0x64, 0x20, 0x32, 0x29, 0x0a, 0x23, 0x09, 0x4c, 0x79, 0x6e, 0x78, 0x20, 0x75, 0x6e, 0x69, 0x74, 
+0x20, 0x34, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x20, 0x37, 0x20, 0x28, 0x68, 0x67, 0x34, 0x2f, 0x68, 0x70, 0x69, 0x63, 0x36, 0x29, 
+0x20, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x33, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 
+0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x20, 0x30, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 
+0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x34, 0x20, 0x28, 0x68, 0x67, 0x32, 0x2f, 0x68, 
+0x70, 0x69, 0x63, 0x33, 0x29, 0x0a, 0x23, 0x09, 0x48, 0x69, 0x67, 0x69, 0x67, 0x20, 0x63, 0x6f, 
+0x6e, 0x6e, 0x20, 0x31, 0x20, 0x69, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x35, 0x20, 0x28, 0x68, 0x67, 0x33, 0x2f, 0x68, 0x70, 0x69, 0x63, 
+0x34, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x48, 0x65, 0x72, 0x63, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x33, 0x20, 0x2d, 0x20, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x20, 
+0x28, 0x68, 0x70, 0x69, 0x63, 0x32, 0x29, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x48, 0x65, 0x72, 0x63, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x36, 0x20, 0x2d, 0x20, 0x55, 0x6e, 
+0x75, 0x73, 0x65, 0x64, 0x20, 0x28, 0x68, 0x70, 0x69, 0x63, 0x35, 0x29, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 
+0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x31, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x32, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 
+0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x30, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x38, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 
+0x31, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x31, 
+0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x32, 0x20, 0x31, 0x20, 
+0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x31, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 
+0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 
+0x63, 0x37, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 
+0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x32, 0x20, 0x31, 
+0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x37, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 0x78, 
+0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 
+0x69, 0x63, 0x36, 0x20, 0x30, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x32, 0x3b, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 
+0x20, 0x31, 0x20, 0x31, 0x20, 0x30, 0x78, 0x30, 0x30, 0x34, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x32, 0x20, 
+0x31, 0x20, 0x30, 0x78, 0x31, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x75, 0x63, 0x2e, 0x68, 0x70, 0x69, 0x63, 0x36, 0x20, 0x33, 0x20, 0x31, 0x20, 0x30, 
+0x78, 0x30, 0x38, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 
+0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x6c, 0x79, 0x6e, 0x78, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 
+0x5f, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x3b, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 
+0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x64, 0x72, 
+0x61, 0x63, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 
+0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 
+0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 
+0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 
+0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 0x31, 0x32, 0x20, 0x70, 
+0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 0x3d, 0x31, 0x32, 0x20, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 
+0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 
+0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x37, 0x5f, 0x30, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x30, 0x3d, 0x31, 0x32, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x31, 0x3d, 0x31, 
+0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 
+0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x32, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 
+0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x33, 0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x34, 0x3d, 
+0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x35, 
+0x3d, 0x31, 0x32, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x36, 0x3d, 0x31, 0x32, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x37, 0x3d, 0x31, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 
+0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 
+0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 
+0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x32, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 
+0x26, 0x26, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x33, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x22, 0x6d, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 
+0x69, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x32, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 0x69, 0x66, 
+0x20, 0x24, 0x3f, 0x67, 0x75, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x65, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x34, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 
+0x3d, 0x33, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x69, 0x63, 0x6f, 
+0x6e, 0x66, 0x69, 0x67, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x33, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x23, 0x20, 0x66, 0x65, 0x6c, 0x69, 
+0x78, 0x34, 0x38, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 
+0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 
+0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 0x22, 0x66, 0x65, 0x6c, 
+0x69, 0x78, 0x34, 0x38, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 0x65, 0x73, 
+0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x31, 
+0x30, 0x32, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2d, 0x30, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x36, 0x29, 0x20, 0x69, 
+0x73, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0a, 0x23, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x74, 0x6f, 0x20, 0x42, 0x43, 0x4d, 0x35, 0x36, 0x31, 0x30, 0x32, 0x20, 
+0x55, 0x6e, 0x69, 0x74, 0x2d, 0x31, 0x20, 0x68, 0x69, 0x67, 0x69, 0x67, 0x20, 0x70, 0x6f, 0x72, 
+0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x36, 0x29, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 
+0x64, 0x69, 0x66, 0x79, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x30, 0x20, 0x32, 0x39, 0x20, 0x4d, 
+0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 
+0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x32, 0x36, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 
+0x44, 0x49, 0x44, 0x3d, 0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 
+0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 
+0x45, 0x20, 0x32, 0x38, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 
+0x30, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x49, 0x45, 0x47, 
+0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 
+0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x58, 0x50, 0x4f, 0x52, 
+0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 
+0x44, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x4d, 0x4f, 
+0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x20, 0x31, 0x20, 0x31, 0x20, 0x48, 0x49, 
+0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 
+0x30, 0x78, 0x34, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x65, 0x6c, 0x69, 0x78, 0x34, 0x38, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6d, 
+0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x30, 0x20, 0x32, 0x39, 0x20, 
+0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x20, 0x32, 0x36, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 
+0x4f, 0x44, 0x49, 0x44, 0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x49, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x42, 
+0x4c, 0x45, 0x20, 0x32, 0x38, 0x20, 0x31, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 
+0x3d, 0x31, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x49, 0x45, 
+0x47, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x44, 
+0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x20, 0x58, 0x50, 0x4f, 
+0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x20, 0x4d, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 
+0x49, 0x44, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77, 0x20, 0x4d, 
+0x4f, 0x44, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x50, 0x20, 0x30, 0x20, 0x31, 0x20, 0x48, 
+0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 
+0x3d, 0x30, 0x78, 0x34, 0x20, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x0a, 
+0x23, 0x20, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x0a, 0x23, 0x20, 
+0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x64, 0x64, 0x69, 
+0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x20, 
+0x22, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 0x20, 0x4e, 0x6f, 0x74, 
+0x65, 0x73, 0x3a, 0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x35, 0x30, 0x34, 0x20, 0x75, 0x6e, 0x69, 0x74, 0x2d, 0x30, 0x20, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x37, 0x2c, 
+0x32, 0x38, 0x29, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 
+0x0a, 0x23, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6f, 0x20, 0x42, 0x43, 0x4d, 0x35, 
+0x36, 0x35, 0x30, 0x34, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x2d, 0x31, 0x20, 0x68, 0x69, 0x67, 0x69, 
+0x67, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x28, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x32, 0x37, 0x2c, 
+0x32, 0x38, 0x29, 0x0a, 0x23, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 
+0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 
+0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
+0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 
+0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5c, 
+0x0a, 0x20, 0x20, 0x20, 0x77, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 
+0x70, 0x20, 0x31, 0x20, 0x31, 0x20, 0x48, 0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 
+0x5f, 0x42, 0x49, 0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 0x78, 0x43, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 
+0x30, 0x20, 0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 
+0x3d, 0x30, 0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x31, 
+0x32, 0x20, 0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 
+0x3d, 0x30, 0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x32, 
+0x34, 0x20, 0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 
+0x30, 0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x77, 0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x32, 0x35, 
+0x20, 0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 
+0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 
+0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 
+0x6f, 0x65, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 0x70, 0x6f, 0x72, 0x74, 
+0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 
+0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 
+0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x77, 0x20, 0x6d, 0x6f, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x20, 0x30, 
+0x20, 0x31, 0x20, 0x48, 0x49, 0x47, 0x49, 0x47, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x49, 
+0x54, 0x4d, 0x41, 0x50, 0x3d, 0x30, 0x78, 0x43, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x33, 0x32, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x34, 0x34, 0x20, 
+0x31, 0x32, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 
+0x78, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 
+0x20, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x35, 0x36, 0x20, 
+0x31, 0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 0x78, 
+0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x77, 0x20, 
+0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x35, 0x37, 0x20, 0x31, 
+0x20, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x3d, 0x30, 0x78, 0x34, 
+0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x4c, 0x4d, 0x20, 0x66, 0x62, 
+0x34, 0x38, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x65, 0x74, 0x75, 
+0x70, 0x0a, 0x23, 0x20, 0x28, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 
+0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 
+0x72, 0x74, 0x79, 0x20, 0x22, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x3d, 0x31, 0x22, 0x29, 0x0a, 0x23, 
+0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 
+0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 0x26, 
+0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 
+0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 0x20, 
+0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 0x79, 
+0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 
+0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x30, 0x22, 
+0x0a, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x31, 0x20, 0x26, 0x26, 0x20, 
+0x24, 0x3f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x20, 0x26, 
+0x26, 0x20, 0x24, 0x3f, 0x6c, 0x6d, 0x34, 0x38, 0x70, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x6c, 
+0x6d, 0x34, 0x38, 0x70, 0x5f, 0x44, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x22, 0x6d, 0x6f, 0x64, 
+0x20, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x20, 0x30, 0x20, 0x32, 0x38, 0x20, 0x6d, 
+0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x6d, 0x6f, 0x64, 0x20, 0x69, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
+0x20, 0x32, 0x34, 0x20, 0x35, 0x20, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x64, 0x3d, 0x31, 
+0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 
+0x74, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6c, 0x65, 0x76, 0x65, 
+0x6c, 0x20, 0x31, 0x37, 0x30, 0x28, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x29, 0x20, 0x2d, 0x20, 0x31, 
+0x31, 0x30, 0x28, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x29, 0x20, 0x3d, 0x20, 0x36, 0x30, 0x0a, 
+0x69, 0x66, 0x20, 0x24, 0x3f, 0x66, 0x62, 0x70, 0x6f, 0x65, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x6f, 0x65, 0x70, 
+0x6f, 0x77, 0x65, 0x72, 0x20, 0x36, 0x30, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x53, 0x65, 0x74, 0x20, 
+0x44, 0x72, 0x61, 0x63, 0x6f, 0x31, 0x35, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x6f, 0x77, 0x65, 
+0x72, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x31, 0x37, 0x30, 0x28, 0x74, 0x6f, 0x74, 0x61, 
+0x6c, 0x29, 0x20, 0x2d, 0x20, 0x38, 0x30, 0x28, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x29, 0x20, 
+0x3d, 0x20, 0x39, 0x30, 0x0a, 0x69, 0x66, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x31, 0x35, 
+0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
+0x20, 0x70, 0x6f, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x39, 0x30, 0x22, 0x0a, 0x0a, 0x23, 
+0x20, 0x69, 0x66, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x65, 0x20, 0x69, 
+0x73, 0x20, 0x73, 0x65, 0x74, 0x2c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x65, 0x6e, 0x61, 0x62, 
+0x6c, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x50, 0x4f, 0x45, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 
+0x73, 0x73, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x0a, 0x23, 0x20, 0x65, 0x69, 0x74, 0x68, 0x65, 
+0x72, 0x20, 0x46, 0x69, 0x72, 0x65, 0x62, 0x6f, 0x6c, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x44, 0x72, 
+0x61, 0x63, 0x6f, 0x31, 0x35, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x0a, 0x69, 
+0x66, 0x20, 0x24, 0x3f, 0x75, 0x6e, 0x69, 0x74, 0x30, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x65, 
+0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x65, 0x20, 0x26, 0x26, 0x20, 0x24, 0x3f, 0x66, 
+0x62, 0x70, 0x6f, 0x65, 0x20, 0x7c, 0x7c, 0x20, 0x24, 0x3f, 0x64, 0x72, 0x61, 0x63, 0x31, 0x35, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x24, 0x65, 0x63, 0x68, 
+0x6f, 0x20, 0x72, 0x63, 0x3a, 0x20, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x50, 
+0x4f, 0x45, 0x20, 0x2e, 0x2e, 0x2e, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x70, 0x6f, 0x65, 0x73, 0x65, 0x6c, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3b, 
+0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x32, 0x63, 0x20, 
+0x70, 0x72, 0x6f, 0x62, 0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x76, 0x65, 0x72, 
+0x62, 0x6f, 0x73, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x20, 
+0x24, 0x70, 0x6f, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x78, 0x70, 0x6f, 0x65, 0x20, 0x76, 0x65, 0x72, 0x62, 0x6f, 
+0x73, 0x65, 0x20, 0x6f, 0x6e, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x70, 0x6f, 0x65, 0x73, 0x65, 0x6c, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 
+0x0a, 0x0a, 0x23, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x73, 0x6f, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x73, 0x75, 0x62, 0x73, 0x65, 
+0x71, 0x75, 0x65, 0x6e, 0x74, 0x20, 0x72, 0x63, 0x20, 0x72, 0x75, 0x6e, 0x73, 0x20, 0x61, 0x72, 
+0x65, 0x20, 0x71, 0x75, 0x69, 0x65, 0x74, 0x0a, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 0x72, 
+0x63, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x20, 0x31, 0x0a, 0x0a, 0x23, 0x20, 0x63, 0x61, 0x63, 0x68, 
+0x65, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x63, 0x2e, 0x73, 
+0x6f, 0x63, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x0a, 0x23, 0x20, 0x72, 
+0x63, 0x63, 0x61, 0x63, 0x68, 0x65, 0x20, 0x61, 0x64, 0x64, 0x71, 0x20, 0x72, 0x63, 0x2e, 0x73, 
+0x6f, 0x63, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x20, 0x63, 0x68, 0x61, 0x73, 
+0x73, 0x69, 0x73, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 
+0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x61, 0x75, 0x74, 
+0x6f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x32, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 
+0x69, 0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 
+0x22, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x22, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 
+0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x63, 0x20, 0x31, 
+0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x63, 0x6c, 0x6f, 0x61, 0x64, 0x20, 
+0x63, 0x32, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x6f, 0x63, 0x3b, 0x20, 0x5c, 0x0a, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x74, 0x65, 0x6e, 0x76, 0x20, 0x63, 0x68, 0x61, 0x73, 
+0x73, 0x69, 0x73, 0x32, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x63, 0x3b, 0x20, 0x5c, 0x0a, 0x20, 0x20, 
+0x20, 0x20, 0x22, 0x0a, 0x0a, 0x23, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x73, 0x74, 0x61, 
+0x63, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x66, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 
+0x65, 0x64, 0x0a, 0x69, 0x66, 0x20, 0x21, 0x22, 0x65, 0x78, 0x70, 0x72, 0x20, 0x24, 0x3f, 0x61, 
+0x75, 0x74, 0x6f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x26, 0x26, 0x20, 0x24, 0x75, 0x6e, 0x69, 
+0x74, 0x20, 0x3d, 0x3d, 0x20, 0x24, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x20, 0x2d, 0x20, 0x31, 0x22, 
+0x20, 0x5c, 0x0a, 0x09, 0x22, 0x72, 0x63, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x73, 0x74, 0x6b, 0x2e, 
+0x73, 0x6f, 0x63, 0x22, 0x0a, 0x00
+};
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/shell.c esw_sdk/src/appl/diag/shell.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/shell.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/diag/shell.c	2011-11-28 18:18:37.955765836 +0000
@@ -624,6 +624,101 @@ sh_rccache(int u, args_t *a)
 #endif	/* NO_FILEIO */
 }
 
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+extern unsigned char rc_soc_array[];
+extern unsigned char helixmem_soc_array[];
+extern unsigned char config_bcm_array[];
+
+typedef struct MEM_FILE_s 
+{
+  unsigned char *start;
+  unsigned char *current;
+  unsigned char *end;
+} MEM_FILE_t;
+
+MEM_FILE_t *mem_fopen(unsigned char *filename)
+{
+  MEM_FILE_t *fp;
+
+  fp = (MEM_FILE_t *)malloc(sizeof(MEM_FILE_t));
+  if (fp == NULL)
+  {
+    return NULL;
+  }
+
+  if (strcmp("rc.soc", (char *)filename) == 0)
+  {
+    fp->start = rc_soc_array;
+    fp->current = rc_soc_array;
+    fp->end = fp->start + strlen((char *)rc_soc_array);
+  }
+  else if (strcmp("helix.soc", (char *)filename) == 0)
+  {
+    fp->start = helixmem_soc_array;
+    fp->current = helixmem_soc_array;
+    fp->end = fp->start + strlen((char *)helixmem_soc_array);
+  }
+  else if (strcmp(SAL_CONFIG_FILE, (char *)filename) == 0)
+  {
+    fp->start = config_bcm_array;
+    fp->current = config_bcm_array;
+    fp->end = fp->start + strlen((char *)config_bcm_array);
+  }
+  else
+  {
+    free(fp);
+    return NULL;
+  }
+
+  return fp;
+}
+
+void mem_fclose(MEM_FILE_t *fp)
+{
+  if (fp != NULL)
+  {
+    free(fp);
+  }
+}
+
+char *mem_fgets(char *s, int size, MEM_FILE_t *fp)
+{
+  int i;
+
+  for(i = 0; i < (size - 1); i++)
+  {
+    /* check for EOF */
+    if (fp->current >= fp->end)
+    {
+      if (i == 0)
+      {
+        return 0;
+      }
+      else
+      {
+        break;
+      }
+    }
+
+    s[i] = fp->current[0];
+
+    /* check for newline */
+    if (fp->current[0] == '\n')
+    {
+      fp->current++;
+      i++;
+      break;
+    }
+
+    fp->current++;
+  }
+
+  s[i] = 0;
+
+  return s;
+}
+#endif
+
 cmd_result_t
 sh_rcload_file(int u, args_t *a, char *f, int add_rc)
 /*
@@ -639,7 +734,8 @@ sh_rcload_file(int u, args_t *a, char *f
  *		CMD_FAIL- some command failed and aborted file processing.
  */
 {
-#ifdef NO_FILEIO
+#if !defined(LVL7_FIXUP) && defined(NO_FILEIO)
+//#ifdef NO_FILEIO
     if(strstr(f, ".soc")) {
 	printk("proxyecho rcload %s\n", f);
     }
@@ -647,7 +743,11 @@ sh_rcload_file(int u, args_t *a, char *f
 #else
 
     static char fn[ARGS_BUFFER + 8];
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+    char *add_ext;
+#else
     char *path, *p, *add_ext;
+#endif
     static char line[ARGS_BUFFER], *s, *t;
     void * volatile scope = NULL;
     jmp_buf ctrl_c;
@@ -655,8 +755,12 @@ sh_rcload_file(int u, args_t *a, char *f
     /* These guys volatile because of long jump */
 
     volatile cmd_result_t rv = CMD_OK;
+#if defined(LVL7_FIXUP) && (!defined(VXWORKS))
+    MEM_FILE_t * volatile mem_fp = NULL;
+#else
     FILE * volatile 	  fp = NULL;
     char * volatile	  fstr = NULL;
+#endif
     volatile int  	  lineNum = 0;
 
     scope = var_push_scope(); /* Push current scope */
@@ -706,7 +810,7 @@ sh_rcload_file(int u, args_t *a, char *f
      * If name of script has a colon or slash, open it as-is.
      * Otherwise search for script in $path.
      */
-
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
     sal_strcpy(fn, f);
     strcat(fn, add_ext);
 
@@ -747,11 +851,20 @@ sh_rcload_file(int u, args_t *a, char *f
 	rv = CMD_NFND;
 	goto done;
     }
+#else
+    mem_fp = mem_fopen((unsigned char *)f);
+
+    if (mem_fp == NULL) {
+        rv = CMD_NFND;
+        goto done;
+    }
+#endif
 
     for (;;) {
 	s = line;
 	for (;;) {
 	    lineNum++;
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
 	    if (fp != NULL) {
 		if (fgets(s, line + sizeof (line) - s, fp) == 0) {
 		    goto done;
@@ -775,6 +888,12 @@ sh_rcload_file(int u, args_t *a, char *f
 		    }
 		}
 	    }
+#else
+                if (mem_fgets(s, line + sizeof (line) - s, mem_fp) == 0) {
+                    goto done;
+                }
+#endif
+
 	    line[sizeof (line) - 1] = 0;	/* Make sure NUL-terminated */
 	    if ((t = strchr(s, '\r')) != 0)
 		strrepl(s, t - s, 1, "");	/* I hate hate hate PCs */
@@ -823,9 +942,17 @@ sh_rcload_file(int u, args_t *a, char *f
 	var_pop_scope((void *)scope);
     }
 
+#if !defined(LVL7_FIXUP) || (defined(VXWORKS))
     if (fp) {
 	sal_fclose((FILE *)fp);
     }
+#else
+    if (mem_fp)
+    {
+      mem_fclose(mem_fp);
+    }
+#endif
+
     sh_pop_ctrl_c();
 
     if (rv == CMD_EXIT) {
@@ -834,7 +961,8 @@ sh_rcload_file(int u, args_t *a, char *f
     }
 
     return(rv);
-#endif /* NO_FILEIO */
+//#endif /* NO_FILEIO */
+#endif /* LVL7_FIXUP && NO_FILEIO */
 }
 
 
@@ -2337,11 +2465,15 @@ sh_print_version(int verbose)
 {
     printk("Broadcom Command Monitor: "
 	   "Copyright (c) 1998-2010 Broadcom Corporation\n");
+#if !defined(LVL7_FIXUP) || defined(VXWORKS)
     printk("Release: %s built %s (%s)\n",
 	   _build_release, _build_datestamp, _build_date);
     printk("From %s@%s:%s\n",
 	   _build_user, _build_host, _build_tree);
+#endif
+#if !defined(LVL7_FIXUP)
     printk("Platform: %s\n", BCM_PLATFORM_STRING); 
+#endif
     printk("OS: %s\n", sal_os_name() ? sal_os_name() : "unknown"); 
 
     if (verbose) {
@@ -4296,6 +4428,53 @@ sh_cd(int u, args_t *a)
     return(CMD_OK);
 }
 
+#if defined(LVL7_FIXUP) && !defined(VXWORKS)
+cmd_result_t
+sh_do_more(MEM_FILE_t *f)
+/*
+ * Function: 	sh_do_more
+ * Purpose:	Copy a file to console, stopping line "more".
+ * Parameters:	f - pointer to FILE to read from.
+ * Returns:	CMD_OK
+ */
+{
+    int		line, next_stop;
+    char	buf[1024];
+
+    line = 0;
+    next_stop = sh_set_more_lines;
+
+    while (mem_fgets(buf, sizeof(buf) - 1, f)) {
+	/* Dump data */
+	printk("%s", buf);
+	if (++line == next_stop) {
+	    extern char readchar(char *s);
+	    int c;
+	    printk(SAL_VT100_SO
+		   "Line: %d ----- 'q' to quit, any key to continue -----"
+		   SAL_VT100_SE,
+		   line);
+	    c = sal_readchar("");
+	    printk("\r" SAL_VT100_CE);
+	    switch (c) {
+	    case EOF:
+	    case 'q':
+	    case 'Q':
+		return(CMD_OK);
+	    case '\r':
+	    case '\n':
+		next_stop++;
+		break;
+	    default:
+		next_stop += sh_set_more_lines;
+		break;			/* Just keep going */
+	    }
+	}
+    }
+    return(CMD_OK);
+}
+#else
+
 cmd_result_t
 sh_do_more(FILE *f)
 /*
@@ -4344,6 +4523,7 @@ sh_do_more(FILE *f)
     return(CMD_OK);
 #endif /* NO_FILEIO */
 }
+#endif /* defined(LVL7_FIXUP) && !defined(VXWORKS) */
 
 char sh_more_usage[] =
     "Parameters: <file> ...\n\t"
@@ -4362,6 +4542,45 @@ sh_more(int u, args_t *a)
  * Returns:	CMD_OK/CMD_FAIL/CMD_USAGE
  */
 {
+#if defined(LVL7_FIXUP) && !defined(VXWORKS)
+  jmp_buf       ctrl_c;
+  volatile cmd_result_t rv = CMD_OK;
+  MEM_FILE_t * volatile mem_fp = NULL;
+  char  *c;
+
+  COMPILER_REFERENCE(u);
+
+  if (0 == ARG_CNT(a)) {
+  return(CMD_USAGE);
+  }
+
+  /*
+   * Try to catch ^C to avoid leaving file open if more is ^C'd.
+   * There are still a number of unlikely race conditions here.
+   */
+
+  if (!setjmp(ctrl_c)) {
+  sh_push_ctrl_c(&ctrl_c);
+  while ((CMD_OK == rv) && (NULL != (c = ARG_GET(a)))) {
+      mem_fp = mem_fopen((unsigned char *)c);
+      if (!mem_fp) {
+      printk("%s: Error: Unable to open file: %s\n",
+             ARG_CMD(a), c);
+      rv = CMD_FAIL;
+      } else {
+      rv = (volatile cmd_result_t)sh_do_more(mem_fp);
+      mem_fclose(mem_fp);
+      mem_fp = NULL;
+      }
+  }
+  } else if (mem_fp) {
+  mem_fclose(mem_fp);
+  mem_fp = NULL;
+  rv = CMD_INTR;
+  }
+  sh_pop_ctrl_c();
+  return(rv);
+#else
 #ifdef NO_FILEIO
     return -1;
 #else
@@ -4403,6 +4622,7 @@ sh_more(int u, args_t *a)
     sh_pop_ctrl_c();
     return(rv);
 #endif /* NO_FILEIO */
+#endif /* defined(LVL7_FIXUP) && !defined(VXWORKS) */
 }
 
 char sh_write_usage[] =
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/system.c esw_sdk/src/appl/diag/system.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/system.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/diag/system.c	2011-11-28 18:19:01.859092350 +0000
@@ -73,7 +73,7 @@
 
 #if defined(MOUSSE) || defined(BMW) || defined(IDTRP334) || defined(GTO) || \
     defined(MBZ) || defined(IDT438) || defined(NSX) || defined(ROBO_4704) || \
-    defined(METROCORE) || defined(KEYSTONE)
+    defined(METROCORE) || defined(KEYSTONE) || defined(LVL7_FIXUP)
 #if defined(VXWORKS)
 #include <config.h>      /* For INCLUDE_XXX */
 #endif /* VXWORKS */
@@ -1653,6 +1653,29 @@ diag_rc_get(int unit, const char **fname
           SOC_INIT_RC);
 }
 
+#if defined(LVL7_FIXUP) && defined(VXWORKS)
+extern unsigned char rc_soc_array[];
+extern unsigned char helixmem_soc_array[];
+extern unsigned char config_bcm_array[];
+void diag_file_create(char *fname, unsigned char *data, int len)
+{
+  FILE  *fp = NULL;
+  int   index;
+
+  printf("Generating %s ...\n", fname);
+  index = 0;
+  if ((fp = sal_fopen(fname, "w")) != NULL)
+  {
+    while ((0 != data[index]) && (index < len))
+    {
+      fputc((int)data[index++], fp);
+    }
+    sal_fclose(fp);
+  }
+  return;
+} 
+#endif
+
 int
 diag_rc_load(int unit)
 {
@@ -1711,6 +1734,11 @@ diag_shell(void)
      * In PLISIM, this is not done; the probe and attach commands
      * must be given explicitly.
      */
+#if defined(LVL7_FIXUP) && defined(VXWORKS)
+    diag_file_create("rc.soc", rc_soc_array, strlen(rc_soc_array));
+    diag_file_create("helixmem.soc", helixmem_soc_array, strlen(helixmem_soc_array));
+    diag_file_create("config.bcm", config_bcm_array, strlen(config_bcm_array));
+#endif
 
     flags = sal_boot_flags_get();
 
diff -rupN sdk-xgs-robo-5.9.4/src/appl/diag/tksdiag.c esw_sdk/src/appl/diag/tksdiag.c
--- sdk-xgs-robo-5.9.4/src/appl/diag/tksdiag.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/diag/tksdiag.c	2011-11-28 18:19:15.539088607 +0000
@@ -121,6 +121,12 @@ const bcm_mac_t _bcast_mac = {0xff, 0xff
  *
  ****************************************************************/
 
+#ifdef LVL7_FIXUP
+extern int bcmx_device_attach(int bcm_unit);
+extern int bcmx_device_detach(int bcm_unit);
+extern void tks_st_thread(void *cookie);
+#endif
+
 STATIC INLINE void
 db_entry_show(const cpudb_entry_t *entry)
 {
@@ -407,6 +413,11 @@ cpudb_ref_t db_refs[MAX_DBS];
 int cur_db;
 int num_db = 0;
 
+#ifdef LVL7_FIXUP
+extern void bcmx_attach_callback(int unit, int attach,
+                         cpudb_entry_t *cpuent, int cpuunit);
+#endif
+
 cmd_result_t
 ct_cpudb(int unit, args_t *args)
 {
@@ -1037,6 +1048,7 @@ static sal_sem_t st_done_sem;
 
 #define TOPO_ATP_FLAGS (ATP_F_NEXT_HOP | ATP_F_REASSEM_BUF)
 
+#ifndef LVL7_FIXUP
 STATIC void
 tks_st_thread(void *cookie)
 {
@@ -1109,6 +1121,7 @@ tks_st_thread(void *cookie)
     sal_sem_give(st_done_sem);
     sal_thread_exit(rv);
 }
+#endif
 
 typedef struct {
     int timeout;
diff -rupN sdk-xgs-robo-5.9.4/src/appl/discover/disc_int.h esw_sdk/src/appl/discover/disc_int.h
--- sdk-xgs-robo-5.9.4/src/appl/discover/disc_int.h	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/discover/disc_int.h	2011-11-28 19:47:17.163716387 +0000
@@ -289,7 +289,11 @@
 
 /* These are used to pre-allocate packet buffers for routing packets */
 #define ROUTE_ENTRIES_PER_PKT_MAX 4    /* Max entries allowed/pkt */
+#if defined(LVL7_FIXUP) && defined(L7_PRODUCT_SMB)
+#define ROUTE_PKTS_MAX            32 /* Max route pkts for table */
+#else
 #define ROUTE_PKTS_MAX            CPUDB_CPU_MAX /* Max route pkts for table */
+#endif
 #define ROUTE_PKT_BYTES_MAX    1500    /* Max route pkts for table */
 
 #endif /* _DISC_INT_H_ */
diff -rupN sdk-xgs-robo-5.9.4/src/appl/stktask/brd_common.c esw_sdk/src/appl/stktask/brd_common.c
--- sdk-xgs-robo-5.9.4/src/appl/stktask/brd_common.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/stktask/brd_common.c	2011-11-28 19:47:44.243042585 +0000
@@ -234,6 +234,9 @@ int bcm_board_trunk_callback_remove(bcm_
  *     for remote CPU entries.
  */
 
+#ifdef LVL7_FIXUP
+extern int lvl7_internal_hg_trunkid;
+#endif
 
 STATIC int
 _bcm_board_trunk_unit(int unit, cpudb_entry_t *entry, cpudb_ref_t db_ref,
@@ -253,6 +256,14 @@ _bcm_board_trunk_unit(int unit, cpudb_en
 
     /* Destroy any pre-existing fabric trunks */
     for (tid = start;; tid++) {
+#ifdef LVL7_FIXUP
+        /* Don't destroy the internal HG trunk */
+        if ((lvl7_internal_hg_trunkid != -1) && (tid == lvl7_internal_hg_trunkid))
+        {
+          continue;            
+        }
+#endif
+
         rv = bcm_trunk_destroy(unit, tid);
         if (rv < 0) {
             break;
diff -rupN sdk-xgs-robo-5.9.4/src/appl/stktask/topo_brd.c esw_sdk/src/appl/stktask/topo_brd.c
--- sdk-xgs-robo-5.9.4/src/appl/stktask/topo_brd.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/stktask/topo_brd.c	2011-11-28 19:47:56.116018186 +0000
@@ -518,6 +518,14 @@ _topo_board_default_program(cpudb_ref_t 
 #endif
 
     /* Set up the board based on device detection. */
+    #ifdef LVL7_FIXUP
+    extern int lvl7_topo_board_program(cpudb_ref_t db_ref, topo_cpu_t *topo_cpu,int *rv);
+
+    if (lvl7_topo_board_program(db_ref,topo_cpu,&rv)){
+      /* nothing to do but skip the rest of the board detections */
+    }
+    else
+    #endif
     if (soc_ndev == 2 &&
         SOC_IS_DRACO(0) &&
         SOC_IS_DRACO(1)) {
diff -rupN sdk-xgs-robo-5.9.4/src/appl/stktask/topology.c esw_sdk/src/appl/stktask/topology.c
--- sdk-xgs-robo-5.9.4/src/appl/stktask/topology.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/appl/stktask/topology.c	2011-11-28 19:48:11.347546240 +0000
@@ -194,14 +194,22 @@ tp_weights_init(cpudb_ref_t db_ref, weig
                 continue;
             }
 
+#ifdef LVL7_FIXUP
+            TP_WEIGHT(weights, s_idx, d_idx) = sp_base->weight;
+#else
             TP_WEIGHT(weights, s_idx, d_idx) = TOPO_DEFAULT_WEIGHT;
+#endif
             /* Below indicates is reachable and by what stk port */
             TP_TX_CXN(db_ref, s_idx, d_idx) = i;
             TP_RX_CXN(db_ref, d_idx, s_idx) = sp->tx_stk_idx;
             /* Check for duplex connection and set up if so. */
             if (sp->flags & CPUDB_SPF_DUPLEX) {
                 if (!TP_REACHABLE(db_ref, d_idx, s_idx)) {
+#ifdef LVL7_FIXUP
+                    TP_WEIGHT(weights, d_idx, s_idx) = dest_entry->base.stk_ports[sp->tx_stk_idx].weight;
+#else
                     TP_WEIGHT(weights, d_idx, s_idx) = TOPO_DEFAULT_WEIGHT;
+#endif
                     /* Below indicates is reachable and by what stk port */
                     TP_TX_CXN(db_ref, d_idx, s_idx) = sp->tx_stk_idx;
                     TP_RX_CXN(db_ref, s_idx, d_idx) = i;
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/common/rx.c esw_sdk/src/bcm/common/rx.c
--- sdk-xgs-robo-5.9.4/src/bcm/common/rx.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/common/rx.c	2011-11-28 19:49:21.291997396 +0000
@@ -3711,7 +3711,14 @@ rx_intr_process_packet(int unit, dv_t *d
                 if (BCM_SUCCESS(rv) && (tid != -1)) {
                     pkt->src_trunk = tid;
                     pkt->flags |= BCM_PKT_F_TRUNK;
+#ifndef LVL7_FIXUP
+   /* Don't destroy information!!
+   ** When frames are received from remote units the src_port is not the same as
+   ** rx_port. We still need to know the physical port on which the frame is
+   ** received even when the frame is for a trunk.
+   */
                     pkt->src_port = -1;
+#endif
                 }
             }
 #endif /* BCM_XGS3_SWITCH_SUPPORT */
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/common/tx.c esw_sdk/src/bcm/common/tx.c
--- sdk-xgs-robo-5.9.4/src/bcm/common/tx.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/common/tx.c	2011-11-28 19:49:57.751851479 +0000
@@ -1611,8 +1611,22 @@ _xgs3_tx(int unit, bcm_pkt_t *pkt, void 
         _xgs3_tx_cb_cookie->orig_cookie = cookie;
         _xgs3_tx_cb_cookie->cleanup_mem = packets_p;
 
+#ifdef LVL7_FIXUP
+        /* If original pkt was synchronous, make a synchronous call */
+        if (NULL == pkt->call_back) {
+          /* Make synchronous call, and invoke the callback */
+          rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, NULL, NULL);
+
+          _xgs3_tx_cb(unit, packet_pointers_p[0],  _xgs3_tx_cb_cookie);
+        }
+        else {
+           rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, &_xgs3_tx_cb,
+                _xgs3_tx_cb_cookie);
+        }
+#else
         rv = bcm_common_tx_array(unit, packet_pointers_p, pkt_cnt, &_xgs3_tx_cb,
                 _xgs3_tx_cb_cookie);
+#endif
 
         sal_free(packet_pointers_p);
         /* packets_p and _xgs3_tx_cb_cookie will be freed by _xgs3_tx_cb */
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/debug.c esw_sdk/src/bcm/debug.c
--- sdk-xgs-robo-5.9.4/src/bcm/debug.c	2011-10-22 11:06:15.000000000 +0100
+++ esw_sdk/src/bcm/debug.c	2011-11-28 20:11:18.787301796 +0000
@@ -60,6 +60,12 @@ uint32		bcm_debug_level = BCM_DBG_DEFAUL
 char		*bcm_debug_names[] = {BCM_DBG_NAMES};
 int		(*bcm_debug_print)(const char *format, ...) = soc_cm_print;
 
+#ifdef LVL7_FIXUP
+int		(*bcm_debug_error)(const char *format, ...) = soc_cm_debug_error;
+int		(*bcm_debug_warn)(const char *format, ...) = soc_cm_debug_warn;
+int		(*bcm_debug_debug)(const char *format, ...) = soc_cm_debug_debug;
+#endif
+
 /*
  * API Debug Message Helper.
  * Called from the BCM_API macro in <bcm/debug.h>
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/dispatch.c esw_sdk/src/bcm/dispatch.c
--- sdk-xgs-robo-5.9.4/src/bcm/dispatch.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/dispatch.c	2012-05-23 15:56:50.344299065 +0100
@@ -6920,7 +6920,6 @@ bcm_cosq_port_sched_set(
 	if (!BCM_UNIT_VALID(unit)) {
 		r_rv = BCM_E_UNIT;
 	} else {
-		BCM_API_XLATE_PORT_PBMP_DECL(t_pbm);
 		BCM_API_XLATE_PORT_PBMP_SAVE(t_pbm,pbm);
 		BCM_API_XLATE_PORT_PBMP_A2P(unit,&pbm);
 		dtype = BCM_DTYPE(unit);
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/cosq.c esw_sdk/src/bcm/esw/cosq.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/cosq.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/cosq.c	2012-05-23 15:56:50.344299065 +0100
@@ -233,11 +233,11 @@ int
 bcm_esw_cosq_mapping_set(int unit, bcm_cos_t priority, bcm_cos_queue_t cosq)
 {
     if (soc_feature(unit, soc_feature_ets)) {
-        return BCM_E_UNAVAIL;
+      return BCM_E_UNAVAIL;
     }
 
     if (!BCM_COSQ_QUEUE_VALID(unit, cosq)) {
-	return (BCM_E_PARAM);
+      return (BCM_E_PARAM);
     }
 
     return (mbcm_driver[unit]->mbcm_cosq_mapping_set(unit, -1,
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/diffserv.c esw_sdk/src/bcm/esw/diffserv.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/diffserv.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/diffserv.c	2011-11-28 19:54:11.759132393 +0000
@@ -168,7 +168,16 @@ typedef struct _bcm_ds_s {
 } _bcm_ds_t;
 
 static _bcm_ds_t *ds_info[BCM_MAX_NUM_UNITS];
+
+#ifdef LVL7_FIXUP 
+
+#if (!defined(L7_SAL_MAP_TO_OSAPI)) 
+static char ds_string[] = "DIFFSERV";
+#endif
+
+#else
 static char ds_string[] = "DIFFSERV";
+#endif
 
 #define DPID_HASH(_dpid)        (_dpid % DPID_BUCKETS)
 
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/field.c esw_sdk/src/bcm/esw/field.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/field.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/field.c	2011-11-28 20:04:00.135598021 +0000
@@ -25381,7 +25381,21 @@ _field_group_status_calc(int unit, _fiel
 
     while (fs != NULL)
     {
+#ifdef LVL7_FIXUP
+        /* Need to consider whether the group being queried is intraslice mode. */
+        if (fg->flags & _FP_GROUP_INTRASLICE_DOUBLEWIDE)
+        {
+          status->entries_total += fs->entry_count / 2;
+          status->natural_depth = fs->entry_count / 2;
+        }
+        else
+        {
+          status->entries_total += fs->entry_count;
+          status->natural_depth = fs->entry_count;
+        }
+#else
         status->entries_total += fs->entry_count;
+#endif
         fs = fs->next;
     }
 
@@ -25427,9 +25441,23 @@ _field_group_status_calc(int unit, _fiel
             {
                 fs = stage_fc->slices + slice_index;
 
+#ifdef LVL7_FIXUP
+                /* Need to consider whether the group being queried is intraslice mode.
+                   This will affect the number of rules available when expanding this group. */
+                if (fg->flags & _FP_GROUP_INTRASLICE_DOUBLEWIDE)
+                {
+                  status->entries_total += fs->entry_count / 2;
+                  status->entries_free += fs->entry_count / 2;
+                }
+                else
+                {
+                  status->entries_total += fs->entry_count;
+                  status->entries_free += fs->entry_count;
+                }
+#else
                 status->entries_total += fs->entry_count;
                 status->entries_free += fs->entry_count;
-
+#endif
                 status->counters_total += fs->counters_count;
                 status->counters_free += fs->counters_count;
 
@@ -25492,6 +25520,31 @@ bcm_esw_field_group_status_get(int unit,
         return (rv);
     }
 
+#ifdef LVL7_FIXUP
+    if (fg->flags & _FP_GROUP_SPAN_SINGLE_SLICE)
+    {
+      fg->group_status.slice_width_physical = 1;
+    }
+    else if (fg->flags & _FP_GROUP_SPAN_DOUBLE_SLICE)
+    {
+      fg->group_status.slice_width_physical = 2;
+    }
+    else 
+    {
+      fg->group_status.slice_width_physical = 4;
+    }
+
+    if (fg->flags & _FP_GROUP_INTRASLICE_DOUBLEWIDE)
+    {
+      fg->group_status.intraslice_mode_enable = 1;
+    }
+    else
+    {
+      fg->group_status.intraslice_mode_enable = 0;
+    }
+#endif
+
+
     *status = fg->group_status;
     FP_UNLOCK(fc);
     return (rv);
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/port.c esw_sdk/src/bcm/esw/port.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/port.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/port.c	2011-11-28 20:06:47.496044906 +0000
@@ -939,6 +939,10 @@ _bcm_port_mmu_update(int unit, bcm_port_
     int pause_tx, pause_rx, q_limit_enable, cos;
     uint32 psl_rval, opc_rval, oqc_rval;
 
+#ifdef LVL7_FIXUP
+    if (SOC_IS_SCORPION(unit)) return BCM_E_NONE;
+#endif
+
     if (!SOC_IS_HBX(unit)) {
         return (BCM_E_UNAVAIL);
     }
@@ -1011,6 +1015,9 @@ _bcm_port_untagged_vlan_set(int unit, bc
 
         BCM_IF_ERROR_RETURN
             (_bcm_trx_vlan_port_default_action_get(unit, port, &action));
+        #ifdef LVL7_FIXUP
+        action.it_inner_prio = bcmVlanActionNone;
+        #endif
         action.new_outer_vlan = vid;
         action.priority = PORT(unit, port).p_ut_prio;
 
@@ -14530,6 +14537,17 @@ bcm_esw_port_medium_config_set(int unit,
                            bcm_phy_config_t  *config)
 {
     int rv;
+#ifdef LVL7_FIXUP
+    bcm_phy_config_t currentConfig;
+    rv = bcm_esw_port_medium_config_get(unit, port, medium, &currentConfig);
+    if (rv == BCM_E_NONE)
+    {
+      if (memcmp(config, &currentConfig, sizeof(currentConfig)) == 0)
+      {
+        return rv;        
+      }
+    }
+#endif
     BCM_IF_ERROR_RETURN(_bcm_esw_port_gport_validate(unit, port, &port));
     
     PORT_LOCK(unit);
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/stat.c esw_sdk/src/bcm/esw/stat.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/stat.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/stat.c	2011-11-28 20:06:57.867403948 +0000
@@ -580,7 +580,19 @@ bcm_esw_stat_init(int unit)
                     SOC_IF_ERROR_RETURN(WRITE_IL_RX_CONFIGr(unit, port, rval32));
                 }
             } else {
+#ifdef LVL7_FIXUP
+                /* Set the Stack port Max size to 0x3fff */
+                if (IS_HG_PORT(unit,port))
+                {
+                  COMPILER_64_SET(rval, 0, 0x3fff);
+                }
+                else
+                {
+                  COMPILER_64_SET(rval, 0, _bcm_stat_ovr_threshold[unit][port]);
+                }
+#else
                 COMPILER_64_SET(rval, 0, _bcm_stat_ovr_threshold[unit][port]);
+#endif
                 SOC_IF_ERROR_RETURN(WRITE_MAC_CNTMAXSZr(unit, port, rval));
             }
 
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/stat_ge.c esw_sdk/src/bcm/esw/stat_ge.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/stat_ge.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/stat_ge.c	2011-11-28 20:07:20.080634431 +0000
@@ -302,9 +302,19 @@ _bcm_stat_ge_get(int unit, bcm_port_t po
         if (soc_feature(unit, soc_feature_stat_xgs3)) {
             if (incl_non_ge_stat) {
                 REG_ADD(unit, port, RDISCr, count); 
+#ifdef LVL7_FIXUP   
+               /* Add egress HOLD counter too. RFC is not very clear whether 
+                  it should be RX events only */
+                REG_ADD(unit, port, HOLDr, count); 
+#endif
             }
         } else {
             REG_ADD(unit, port, GRDISCr, count);
+#ifdef LVL7_FIXUP   
+               /* Add egress HOLD counter too. RFC is not very clear whether 
+                  it should be RX events only */
+                REG_ADD(unit, port, HOLDr, count); 
+#endif
         }
 	break;
     case snmpEtherStatsOctets:
@@ -630,6 +640,25 @@ _bcm_stat_ge_get(int unit, bcm_port_t po
         REG_ADD(unit, port, RRBYTr, count); /* Runt bytes */
 	break;
     case snmpIfHCInUcastPkts:
+#ifdef LVL7_FIXUP
+        if (SOC_IS_DRACO(unit) ||
+            soc_feature(unit, soc_feature_hw_stats_calc)) {
+            REG_ADD(unit, port, GRUCr, count);  /* unicast pkts rcvd */
+        } else if (SOC_IS_HELIX15(unit)) {
+          REG_ADD(unit, port, RUCr, count);     /* unicast pkts rcvd */
+        } else {
+            REG_ADD(unit, port, GRPKTr, count); /* all pkts rcvd */
+            REG_SUB(unit, port, GRMCAr, count); /* - multicast */
+            REG_SUB(unit, port, GRBCAr, count); /* - broadcast */
+            if (SOC_IS_XGS3_SWITCH(unit)) {
+               REG_SUB(unit, port, GRFCSr, count); /* - FCS Errors */
+               REG_SUB(unit, port, GRUNDr, count); /* - undersize, ok FCS */
+               REG_SUB(unit, port, GRFRGr, count); /* - Receive Fragment Counter
+. */
+               REG_SUB(unit, port, GRJBRr, count); /* - Jabber Frame Counter */
+               REG_SUB(unit, port, GRIPDr, count); /* - discards */
+            }
+#else
     	if (soc_feature(unit, soc_feature_hw_stats_calc)) {
             if (incl_non_ge_stat) {
                 if (SOC_REG_IS_VALID(unit, GRUCr)
@@ -644,6 +673,7 @@ _bcm_stat_ge_get(int unit, bcm_port_t po
             REG_SUB(unit, port, GRALNr, count); /* - bad FCS, dribble bit  */
             REG_SUB(unit, port, GRFCSr, count); /* - bad FCS, no dribble bit */
             REG_SUB(unit, port, GRJBRr, count); /* - oversize, bad FCS */
+#endif
             if (SOC_REG_IS_VALID(unit, GRMTUEr)) {
                 REG_SUB(unit, port, GRMTUEr, count); /* mtu exceeded pkts */
             } else if (COUNT_OVR_ERRORS(unit)) {
@@ -673,9 +703,11 @@ _bcm_stat_ge_get(int unit, bcm_port_t po
             REG_SUB(unit, port, GTBCAr, count);	/* - broadcast */
             REG_SUB(unit, port, GTFCSr, count); /* - bad FCS */
             REG_SUB(unit, port, GTJBRr, count); /* - oversize, bad FCS */
+#ifndef LVL7_FIXUP
             if (COUNT_OVR_ERRORS(unit)) {
                 REG_SUB(unit, port, GTOVRr, count); /* - oversize, good FCS */
             }
+#endif
         }
 	break;
     case snmpIfHCOutMulticastPkts:
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/stat_xe.c esw_sdk/src/bcm/esw/stat_xe.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/stat_xe.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/stat_xe.c	2011-11-28 20:07:37.120249195 +0000
@@ -256,6 +258,11 @@ _bcm_stat_xe_get(int unit, bcm_port_t po
 	    REG_ADD(unit, port, XRDISCr, count);
         } else {
             REG_ADD(unit, port, RDISCr, count);
+#ifdef LVL7_FIXUP
+            /* Add egress HOLD counter too. RFC is not very clear whether
+               it should be RX events only */
+            REG_ADD(unit, port, HOLDr, count);
+#endif
         }
         break;
     case snmpEtherStatsOctets:
@@ -522,9 +529,20 @@ _bcm_stat_xe_get(int unit, bcm_port_t po
             REG_SUB(unit, port, IRXCFr, count); /* - good FCS, all MAC ctrl */
             REG_SUB(unit, port, IRXPFr, count); /* - not included in IRXCFr */
             REG_SUB(unit, port, IRJBRr, count); /* - oversize, bad FCS */
+#ifdef LVL7_FIXUP
+            if (SOC_REG_IS_VALID(unit, IRMEGr)) 
+            {
+              REG_SUB(unit, port, IRMEGr, count); /* mtu exceeded pkts */
+            }
+            else if (COUNT_OVR_ERRORS(unit))
+            {
+              REG_SUB(unit, port, IROVRr, count); /* - oversize, good FCS */
+            }
+#else
             if (COUNT_OVR_ERRORS(unit)) {
                 REG_SUB(unit, port, IROVRr, count); /* - oversize, good FCS */
             }
+#endif
         }
 	break;
     case snmpIfHCInMulticastPkts:
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/switch.c esw_sdk/src/bcm/esw/switch.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/switch.c	2011-10-22 11:06:16.000000000 +0100
+++ esw_sdk/src/bcm/esw/switch.c	2011-11-28 20:10:19.059409607 +0000
@@ -2148,6 +2148,15 @@ _bcm_xgs3_igmp_action_set(int unit,
             case bcmSwitchIgmpPktDrop:
                 fields[0] = IGMP_PKT_DROPf;
                 break;
+#ifdef LVL7_FIXUP
+            /* See #77807 for details */
+            case bcmSwitchMldPktToCpu:
+                fields[0] = MLD_PKT_TO_CPUf;
+                break;
+            case bcmSwitchMldPktDrop:
+                fields[0] = MLD_PKT_DROPf;
+                break;
+#endif
             case bcmSwitchV4ResvdMcPktToCpu:
                 fields[0] = IPV4_RESVD_MC_PKT_TO_CPUf;
                 break;
@@ -2350,6 +2359,17 @@ _bcm_xgs3_igmp_action_get(int unit,
                 field = IGMP_PKT_DROPf;
                 act_value = 1;
                 break;
+#ifdef LVL7_FIXUP
+            /* See #77807 for details */
+            case bcmSwitchMldPktToCpu: 	 
+                field = MLD_PKT_TO_CPUf; 	 
+                act_value = 1; 	 
+                break; 	 
+            case bcmSwitchMldPktDrop: 	 
+                field = MLD_PKT_DROPf; 	 
+                act_value = 1; 	 
+                break;
+#endif
             case bcmSwitchV4ResvdMcPktToCpu:
                 field = IPV4_RESVD_MC_PKT_TO_CPUf;
                 act_value = 1;
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/trident/cosq.c esw_sdk/src/bcm/esw/trident/cosq.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/trident/cosq.c	2011-10-22 11:06:17.000000000 +0100
+++ esw_sdk/src/bcm/esw/trident/cosq.c	2011-11-29 15:07:06.780632695 +0000
@@ -1686,7 +1686,7 @@ _bcm_td_cosq_config_set(int unit, int nu
     uint32 i;
 #ifdef BCM_COSQ_HIGIG_MAP_DISABLE
     port_cos_map_entry_t hg_cos_map_entries[16];
-    uint32 rval;
+//    uint32 rval;  /* PTin removed: unused variable */
 #endif
 
     if (numq < 1 || numq > 8) {
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/triumph2/cosq.c esw_sdk/src/bcm/esw/triumph2/cosq.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/triumph2/cosq.c	2011-10-22 11:06:17.000000000 +0100
+++ esw_sdk/src/bcm/esw/triumph2/cosq.c	2011-11-28 19:52:42.904022724 +0000
@@ -913,6 +913,28 @@ bcm_tr2_cosq_port_bandwidth_set(int unit
      * c. if MISCCONFIG.METERING_CLK_EN not set before, enable it.
      */
 
+#ifdef LVL7_FIXUP
+    uint64 maskval_64;
+
+    meter_flags = flags;
+
+    /* first clear bit corresponding for que then optionally set it to enable packet mode */
+    BCM_IF_ERROR_RETURN(READ_SHAPING_MODEr(unit, port, &regval_64));
+    maskval_64 = COMPILER_64_INIT(0, 1);
+    COMPILER_64_SHL(maskval_64, cosq);
+    COMPILER_64_NOT(maskval_64);
+    COMPILER_64_AND(regval_64, maskval_64);
+
+    /* set SHAPING_MODE bit if required. */
+    if ((max_quantum !=0) && 
+        (_BCM_XGS_METER_FLAG_PACKET_MODE == (flags&_BCM_XGS_METER_FLAG_PACKET_MODE))) {
+      COMPILER_64_NOT(maskval_64);
+      COMPILER_64_OR(regval_64, maskval_64);
+    }
+
+    BCM_IF_ERROR_RETURN(WRITE_SHAPING_MODEr(unit, port, regval_64));
+#endif    
+
     BCM_IF_ERROR_RETURN(READ_MISCCONFIGr(unit, &regval));
     if (soc_reg_field_get(unit, MISCCONFIGr, regval, ITU_MODE_SELf)) {
         meter_flags |= _BCM_XGS_METER_FLAG_NON_LINEAR;
@@ -945,10 +967,19 @@ bcm_tr2_cosq_port_bandwidth_set(int unit
     bucket_bitsize =
         soc_reg_field_length(unit, MINBUCKETCONFIG_64r, MIN_THDf);
 
+#ifdef LVL7_FIXUP
+    /* Hardcode the burst size to accommodate jumbo frames (9216 bytes). The unit
+       for 'burst_quantum' is kbits. So (9216 * 8 / 1000 = 74)*/
     BCM_IF_ERROR_RETURN
-        (_bcm_xgs_kbits_to_bucket_encoding(min_quantum, min_quantum,
+        (_bcm_xgs_kbits_to_bucket_encoding(min_quantum, min_quantum ? 74 : 0,
                           meter_flags, refresh_bitsize, bucket_bitsize,
                           &refresh_rate, &bucketsize, &granularity));
+#else
+    BCM_IF_ERROR_RETURN
+        (_bcm_xgs_kbits_to_bucket_encoding(min_quantum, burst_quantum,
+                          meter_flags, refresh_bitsize, bucket_bitsize,
+                          &refresh_rate, &bucketsize, &granularity));
+#endif
 
     COMPILER_64_ZERO(regval_64);
     soc_reg64_field32_set(unit, MINBUCKETCONFIG_64r, &regval_64,
@@ -975,6 +1006,15 @@ bcm_tr2_cosq_port_bandwidth_set(int unit
                           METER_GRANf, granularity);
     soc_reg64_field32_set(unit, MAXBUCKETCONFIG_64r, &regval_64,
                           MAX_REFRESHf, refresh_rate);
+#ifdef LVL7_FIXUP
+    /* We want as small a burst size as possible... 4 KB in this case. */
+    bucketsize = bucketsize ? 1 : 0;
+    if ((0 != max_quantum) && (0 == bucketsize))
+    {
+      /* Max is specified. bucketsize cannot be zero or else shaping is disabled. */
+      bucketsize = 1;
+    }
+#endif
     soc_reg64_field32_set(unit, MAXBUCKETCONFIG_64r, &regval_64, MAX_THDf,
                           bucketsize);
     BCM_IF_ERROR_RETURN(WRITE_MAXBUCKETCONFIG_64r(unit, port, cosq, regval_64));
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/esw/triumph2/wlan.c esw_sdk/src/bcm/esw/triumph2/wlan.c
--- sdk-xgs-robo-5.9.4/src/bcm/esw/triumph2/wlan.c	2011-10-22 11:06:17.000000000 +0100
+++ esw_sdk/src/bcm/esw/triumph2/wlan.c	2011-11-28 19:53:49.999139444 +0000
@@ -835,6 +835,10 @@ bcm_tr2_wlan_init(int unit)
     uint64 rval64, *rval64s[1];
     uint32 capwap_frag_profile;
 
+#ifdef LVL7_FIXUP
+    (void)bcm_tr2_wlan_port_delete_all(unit); /* jls added */
+#endif
+
     if (!L3_INFO(unit)->l3_initialized) {
         soc_cm_debug(DK_L3, "L3 module must be initialized first\n");
         return BCM_E_NONE;
@@ -1538,7 +1542,11 @@ _bcm_tr2_wlan_l3_intf_add(int unit, _bcm
         }
     }
     /* Create an interface */
+#ifdef LVL7_FIXUP
+    BCM_IF_ERROR_RETURN(bcm_xgs3_l3_intf_id_create(unit, if_info));
+#else
     BCM_IF_ERROR_RETURN(bcm_xgs3_l3_intf_create(unit, if_info));
+#endif
     _BCM_WLAN_INTF_USED_SET(unit, if_info->l3i_index);
     return BCM_E_NONE;
 }
@@ -1610,6 +1618,12 @@ _bcm_tr2_wlan_nh_info_add(int unit, bcm_
         bcm_l3_egress_t_init(&nh_info);
 /*        sal_memset(&nh_info, 0, sizeof(bcm_l3_egress_t));*/
         nh_flags = _BCM_L3_SHR_MATCH_DISABLE | _BCM_L3_SHR_WRITE_DISABLE;
+#ifdef LVL7_FIXUP
+        if (*nh_index > 0)
+        {
+          nh_flags |= _BCM_L3_SHR_WITH_ID;
+        }
+#endif
         rv = bcm_xgs3_nh_add(unit, nh_flags, &nh_info, nh_index);
         BCM_IF_ERROR_RETURN(rv);
     }
@@ -1669,7 +1683,12 @@ _bcm_tr2_wlan_nh_info_add(int unit, bcm_
 
     /* Add an L3 interface entry with L2_SWITCH=1 - ref count if exists */
     sal_memset(&if_info, 0, sizeof(_bcm_l3_intf_cfg_t));
+#ifdef LVL7_FIXUP
+    if_info.l3i_flags |= BCM_L3_L2ONLY | BCM_L3_SECONDARY | BCM_L3_WITH_ID;
+    if_info.l3i_index = L3_INFO(unit)->l3_intf_table_size - 2;
+#else
     if_info.l3i_flags |= BCM_L3_L2ONLY | BCM_L3_SECONDARY;
+#endif
     rv = _bcm_tr2_wlan_l3_intf_add(unit, &if_info);
     if (BCM_FAILURE(rv)) {
         goto cleanup;
@@ -1989,7 +2008,11 @@ _bcm_tr2_wlan_match_add(int unit, bcm_wl
 int 
 bcm_tr2_wlan_port_add(int unit, bcm_wlan_port_t *wlan_port)
 {
+#ifdef LVL7_FIXUP
+    int drop, mode, is_local = 0, rv = BCM_E_PARAM, nh_index = wlan_port->encap_id;
+#else
     int drop, mode, is_local = 0, rv = BCM_E_PARAM, nh_index = 0;
+#endif
     bcm_port_t local_port;
     bcm_module_t my_modid;
     int vp, num_vp, lport_ptr = -1;
@@ -2120,10 +2143,20 @@ bcm_tr2_wlan_port_add(int unit, bcm_wlan
         soc_LPORT_TABm_field32_set(unit, &lport_profile, IPMC_DO_VLANf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, FILTER_ENABLEf, 0x1);
         soc_LPORT_TABm_field32_set(unit, &lport_profile, VFP_ENABLEf, 0x1);
+#ifdef LVL7_FIXUP
+        /* In FASTPATH, all the ports have the same sel_index for slices. Point
+         * the tunnel ports to pick up sel_index of 0. Otherwise IFP matching
+         * does not work on tunnel ports.
+         */
+        soc_LPORT_TABm_field32_set(unit, &lport_profile, 
+                                   FP_PORT_FIELD_SEL_INDEXf, 
+                                   0);
+#else
         /* Allocate a fixed high index for the PORT_FIELD_SEL */
         soc_LPORT_TABm_field32_set(unit, &lport_profile, 
                                    FP_PORT_FIELD_SEL_INDEXf, 
                                    soc_mem_index_max(unit, FP_PORT_FIELD_SELm));
+#endif
         /* The vt_key_types must be set to 0x3 or 0x7 for WLAN */
         soc_LPORT_TABm_field32_set(unit, &lport_profile, VT_KEY_TYPEf,
                                    TR_VLXLT_HASH_KEY_TYPE_VLAN_MAC);
@@ -2298,7 +2331,9 @@ _bcm_tr2_wlan_port_delete(int unit, int 
         }
     }
     rv = _bcm_lport_profile_entry_delete(unit, lport_ptr);
+#ifndef LVL7_FIXUP
     BCM_IF_ERROR_RETURN(rv);
+#endif
 
     /* Clear the SVP and DVP table entries */
     sal_memset(&svp, 0, sizeof(wlan_svp_table_entry_t));
@@ -2315,7 +2350,9 @@ _bcm_tr2_wlan_port_delete(int unit, int 
 
     /* Clear the next-hop table entries */
     rv = _bcm_tr2_wlan_nh_info_delete(unit, nh_index);
+#ifndef LVL7_FIXUP
     BCM_IF_ERROR_RETURN(rv);
+#endif
 
     /* Update the physical port's SW state */
     BCM_IF_ERROR_RETURN(
@@ -2434,9 +2471,11 @@ bcm_tr2_wlan_port_delete_all(int unit)
             WLAN_LOCK(unit);
             rv = _bcm_tr2_wlan_port_delete(unit, vp);
             WLAN_UNLOCK(unit);
+#ifndef LVL7_FIXUP
             if (rv < 0) {
                 goto done;
             }
+#endif
         }
     }
 done:
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/rpc/pack.c esw_sdk/src/bcm/rpc/pack.c
--- sdk-xgs-robo-5.9.4/src/bcm/rpc/pack.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcm/rpc/pack.c	2011-11-28 20:10:58.463299652 +0000
@@ -4484,7 +4484,11 @@ _bcm_pack_uint32_aBCM_CUSTOM_ARGS_MAX(ui
 	{
 		int _i;
 
+#ifdef LVL7_FIXUP
+		for (_i = 0; _i < BCM_CUSTOM_ARGS_MAX; _i++) {
+#else
 		for (_i = 0; _i < 256; _i++) {
+#endif
 			BCM_PACK_U32(buf, var[_i]);
 		}
 	}
@@ -4497,7 +4501,11 @@ _bcm_unpack_uint32_aBCM_CUSTOM_ARGS_MAX(
 	{
 		int _i;
 
+#ifdef LVL7_FIXUP
+		for (_i = 0; _i < BCM_CUSTOM_ARGS_MAX; _i++) {
+#else
 		for (_i = 0; _i < 256; _i++) {
+#endif
 			BCM_UNPACK_U32(buf, var[_i]);
 		}
 	}
diff -rupN sdk-xgs-robo-5.9.4/src/bcm/rpc/rpc.c esw_sdk/src/bcm/rpc/rpc.c
--- sdk-xgs-robo-5.9.4/src/bcm/rpc/rpc.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcm/rpc/rpc.c	2011-11-28 20:11:07.483603119 +0000
@@ -267,6 +267,16 @@ bcm_rpc_request(int unit, uint8 *buf, in
            was given, but if sal_sem_take returns in error then the
            request record needs to be be unlinked here.
         */
+#ifdef LVL7_FIXUP
+      RPC_ERR(("RPC - Timeout to CPU: %x:%x:%x:%x:%x:%x.\n",
+             cpu.key[0],
+             cpu.key[1],
+             cpu.key[2],
+             cpu.key[3],
+             cpu.key[4],
+             cpu.key[5]
+             ));
+#endif
         _bcm_rpc_unlink_request(&req);
         RPC_COUNT(_rpc_count_c_timeout);
         return BCM_E_TIMEOUT;
diff -rupN sdk-xgs-robo-5.9.4/src/bcmx/bcmx.c esw_sdk/src/bcmx/bcmx.c
--- sdk-xgs-robo-5.9.4/src/bcmx/bcmx.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcmx/bcmx.c	2011-11-28 20:11:39.083050874 +0000
@@ -1840,7 +1840,9 @@ _bcmx_dest_to_bcm(_bcmx_dest_bcmx_t *fro
         /* Check TRUNK flag next */
         flags_out |= BCMX_DEST_TRUNK;
         to_bcm->trunk = from_bcmx->trunk;
-
+#ifdef LVL7_FIXUP
+        to_bcm->module_id = 0;
+#endif
     } else {
         
         if (BCM_GPORT_IS_SET(from_bcmx->port)) {
diff -rupN sdk-xgs-robo-5.9.4/src/bcmx/custom.c esw_sdk/src/bcmx/custom.c
--- sdk-xgs-robo-5.9.4/src/bcmx/custom.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcmx/custom.c	2011-11-28 20:11:57.683505630 +0000
@@ -87,7 +87,17 @@ bcmx_custom_port_set(bcmx_lport_t port, 
                                                 BCMX_DEST_CONVERT_NON_GPORT))) {
             return BCM_E_PORT;
         }
+#ifdef LVL7_FIXUP
+        rv = bcm_custom_port_set(bcm_unit, bcm_port, type, args);
+        if (rv == BCM_E_UNIT)
+        {
+          rv = BCM_E_PORT;    
+        }
+
+        return rv;
+#else
         return bcm_custom_port_set(bcm_unit, bcm_port, type, args);
+#endif
     }
 
     /* Virtual port */
@@ -121,7 +131,18 @@ bcmx_custom_port_get(bcmx_lport_t port, 
                                                 BCMX_DEST_CONVERT_NON_GPORT))) {
             return BCM_E_PORT;
         }
+#ifdef LVL7_FIXUP
+        rv = bcm_custom_port_get(bcm_unit, bcm_port, type, args);
+
+        if (rv == BCM_E_UNIT)
+        {
+          rv = BCM_E_PORT;    
+        }
+
+        return rv;
+#else
         return bcm_custom_port_get(bcm_unit, bcm_port, type, args);
+#endif
     }
 
     /* Virtual port */
diff -rupN sdk-xgs-robo-5.9.4/src/bcmx/debug.c esw_sdk/src/bcmx/debug.c
--- sdk-xgs-robo-5.9.4/src/bcmx/debug.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcmx/debug.c	2011-11-28 20:12:03.891128505 +0000
@@ -59,5 +59,10 @@
 uint32		bcmx_debug_level = BCMX_DBG_DEFAULT;
 char		*bcmx_debug_names[] = {BCMX_DBG_NAMES};
 int		(*bcmx_debug_print)(const char *format, ...) = soc_cm_print;
+#ifdef LVL7_FIXUP
+int		(*bcmx_debug_error)(const char *format, ...) = soc_cm_debug_error;
+int		(*bcmx_debug_warn)(const char *format, ...) = soc_cm_debug_warn;
+int		(*bcmx_debug_debug)(const char *format, ...) = soc_cm_debug_debug;
+#endif
 
 #endif /* BROADCOM_DEBUG */
diff -rupN sdk-xgs-robo-5.9.4/src/bcmx/mcast.c esw_sdk/src/bcmx/mcast.c
--- sdk-xgs-robo-5.9.4/src/bcmx/mcast.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/bcmx/mcast.c	2011-11-28 20:12:10.987199104 +0000
@@ -372,11 +372,22 @@ bcmx_mcast_join(bcm_mac_t mac,
     BCM_IF_ERROR_RETURN
         (_bcmx_dest_to_unit_port(port, &bcm_unit, &bcm_port,
                                  BCMX_DEST_CONVERT_DEFAULT));
+#ifdef LVL7_FIXUP
+
+  /* If we pass NULL then code below will try to dereference
+  ** address 0.
+  */
+  rv = bcm_mcast_join(bcm_unit, mac, vid,
+                        bcm_port,
+                      &bcm_mca ,
+                      &pbmp );
+#else
 
     rv = bcm_mcast_join(bcm_unit, mac, vid,
                         bcm_port,
                         mcaddr ? &bcm_mca : NULL,
                         allrtr ? &pbmp : NULL);
+#endif
     if (BCM_SUCCESS(rv)) {
         if (mcaddr) {
             bcmx_mcast_addr_t_init(mcaddr, mac, vid);
diff -rupN sdk-xgs-robo-5.9.4/src/sal/appl/editline/sysunix.c esw_sdk/src/sal/appl/editline/sysunix.c
--- sdk-xgs-robo-5.9.4/src/sal/appl/editline/sysunix.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/sal/appl/editline/sysunix.c	2011-11-28 20:12:46.257447996 +0000
@@ -23,7 +23,10 @@
   0 put device into raw mode. Disable echo so that editline can control it.
   1 restore device back to mode prior to raw mode.
 */
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
 static int sRESET_CURRENT = -1;
+#endif
 
 #if	defined(HAVE_TCGETATTR)
 #include <termios.h>
@@ -32,6 +35,8 @@ void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct termios old;
     struct termios		  new;
 
@@ -67,6 +72,7 @@ rl_ttyset(Reset)
 	    (void)tcsetattr(0, TCSADRAIN, &old);
       }
     }
+#endif
 }
 
 #else
@@ -77,6 +83,8 @@ void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct termio old;
     struct termio		 new;
 
@@ -107,6 +115,7 @@ rl_ttyset(Reset)
         (void)ioctl(0, TCSETAW, &old);
       }
     }
+#endif
 }
 
 #else
@@ -116,6 +125,8 @@ void
 rl_ttyset(Reset)
     int				Reset;
 {
+/* PTin removed: serial port */
+#if (L7_SERIAL_COM_ATTR)
     static struct sgttyb	old_sgttyb;
     static struct tchars	old_tchars;
     struct sgttyb		new_sgttyb;
@@ -157,6 +168,7 @@ rl_ttyset(Reset)
         (void)ioctl(0, TIOCSETC, &old_tchars);
       }
     }
+#endif
 }
 #endif	/* defined(HAVE_TERMIO) */
 #endif	/* defined(HAVE_TCGETATTR) */
diff -rupN sdk-xgs-robo-5.9.4/src/sal/appl/io.c esw_sdk/src/sal/appl/io.c
--- sdk-xgs-robo-5.9.4/src/sal/appl/io.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/sal/appl/io.c	2011-11-28 20:13:34.847358611 +0000
@@ -409,7 +409,7 @@ int vprintk(const char *fmt, va_list ap)
 
     return retv;
 }
-
+#if defined(LVL7_FIXUP) && !defined(_L7_OS_ECOS_)
 int printk(const char *fmt, ...)
 {
     int retv;
@@ -419,6 +419,7 @@ int printk(const char *fmt, ...)
     va_end(varg);
     return retv;
 }
+#endif
 
 /*
  * debugk
diff -rupN sdk-xgs-robo-5.9.4/src/sal/appl/linux/sal.c esw_sdk/src/sal/appl/linux/sal.c
--- sdk-xgs-robo-5.9.4/src/sal/appl/linux/sal.c	2011-10-22 11:06:18.000000000 +0100
+++ esw_sdk/src/sal/appl/linux/sal.c	2011-11-28 20:13:06.321170524 +0000
@@ -46,9 +46,15 @@
  * Purpose:	Defines sal routines for Kernel-mode Linux targets.
  */
 
+#ifdef LVL7_FIXUP
+#include <ctype.h>
+#include <stdlib.h>
+#include "bspapi.h"
+#else
 #include <linux/ctype.h>
 #include <linux/kernel.h>
 #include <linux/random.h>
+#endif
 
 #include <sal/core/time.h>
 #include <sal/core/thread.h>
@@ -240,6 +246,9 @@ sal_appl_init(void)
 void
 sal_reboot(void)
 {
+#ifdef LVL7_FIXUP
+  bspapiSwitchReset();
+#endif
 }
 
 /*
@@ -359,7 +368,11 @@ sal_rand(void)
 {
     int rv;
 
+#ifdef LVL7_FIXUP
+    rv = rand();
+#else
     get_random_bytes(&rv, sizeof(rv));
+#endif
 
     return ((rv ^ sort_of_seed) & SAL_RAND_MAX);
 }
diff -rupN sdk-xgs-robo-5.9.4/src/sal/core/unix/alloc.c esw_sdk/src/sal/core/unix/alloc.c
--- sdk-xgs-robo-5.9.4/src/sal/core/unix/alloc.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/sal/core/unix/alloc.c	2011-11-28 21:31:40.622660001 +0000
@@ -52,6 +52,11 @@
 
 #include <sal/types.h>
 
+#ifdef LVL7_FIXUP
+#include <soc/cm.h>
+#else
+#endif
+
 /* To do: use real data segment limits for bad pointer detection */
 #define BAD_PTR(p)						\
 	(PTR_TO_INT(p) < 0x00001000U ||				\
@@ -275,9 +280,15 @@ sal_dma_alloc(size_t sz, char *s)
      */
     sz = (sz + 3) & ~3;
 
+#if defined(LVL7_FIXUP) && !defined(PLISIM)
+    if ((p = soc_cm_salloc(0,sz + 12 ,s)) == 0) {
+        return p;
+    }
+#else
     if ((p = malloc(sz + 12)) == 0) {
 	return p;
     }
+#endif
 
     assert(INT_TO_PTR(PTR_TO_INT(p)) == p);
 
@@ -334,8 +345,12 @@ sal_dma_free(void *addr)
 #endif
 #endif /* BROADCOM_DEBUG */
     p[-1] = 0;			/* Detect redundant frees */
+#if defined(LVL7_FIXUP) && !defined(PLISIM)
+    soc_cm_sfree(0,&p[-2]);
+#else
     /*    coverity[address_free : FALSE]    */
     free(&p[-2]);
+#endif
 }
 
 #endif /* LINUX_SAL_DMA_ALLOC_OVERRIDE */
diff -rupN sdk-xgs-robo-5.9.4/src/sal/core/unix/thread.c esw_sdk/src/sal/core/unix/thread.c
--- sdk-xgs-robo-5.9.4/src/sal/core/unix/thread.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/sal/core/unix/thread.c	2011-11-28 21:35:05.182723684 +0000
@@ -80,10 +80,12 @@
 #define NO_CONTROL_C
 #endif
 
+#ifndef LVL7_FIXUP
 static pthread_mutex_t _sal_thread_lock = PTHREAD_MUTEX_INITIALIZER;
 
 #define THREAD_LOCK() pthread_mutex_lock(&_sal_thread_lock)
 #define THREAD_UNLOCK() pthread_mutex_unlock(&_sal_thread_lock)
+#endif
 
 #if defined(BROADCOM_DEBUG) && defined(INCLUDE_BCM_SAL_PROFILE)
 static unsigned int _sal_thread_count_curr;
@@ -138,6 +138,11 @@ sal_thread_resource_usage_get(unsigned i
 #  endif
 #endif
 
+#ifdef LVL7_FIXUP
+#include <l7_common.h>
+#include <osapi.h>
+#else
+
 /*
  * Function:
  *	thread_boot
@@ -204,6 +209,7 @@ thread_boot(void *ti_void)
     /* Will never get here */
     return NULL;
 }
+#endif /* LVL7_FIXUP */
 
 /*
  * Function:
@@ -223,6 +229,16 @@ thread_boot(void *ti_void)
 sal_thread_t
 sal_thread_create(char *name, int ss, int prio, void (f)(void *), void *arg)
 {
+#ifdef LVL7_FIXUP
+    L7_int32 salTaskHandle;
+
+    salTaskHandle = osapiTaskCreate(name, f, (L7_uint32) arg,
+                                    L7_NULLPTR, ss,
+                                    L7_DEFAULT_TASK_PRIORITY,
+                                    L7_DEFAULT_TASK_SLICE);
+
+    return (sal_thread_t) salTaskHandle;
+#else
     pthread_attr_t	attribs;
     thread_info_t	*ti;
     pthread_t		id;
@@ -279,6 +295,7 @@ sal_thread_create(char *name, int ss, in
     sal_sem_destroy(sem);
 
     return ((sal_thread_t)id);
+#endif /* LVL7_FIXUP */
 }
 
 /*
@@ -304,6 +321,13 @@ sal_thread_create(char *name, int ss, in
 int
 sal_thread_destroy(sal_thread_t thread)
 {
+#ifdef LVL7_FIXUP
+    L7_int32 salTaskHandle = (L7_int32) thread;
+
+    osapiTaskDelete(salTaskHandle);
+
+    return 0;
+#else
 #ifdef netbsd
     /* not supported */
     return -1;
@@ -331,6 +355,7 @@ sal_thread_destroy(sal_thread_t thread)
 
     return 0;
 #endif
+#endif /* LVL7_FIXUP */
 }
 
 /*
@@ -347,7 +372,11 @@ sal_thread_destroy(sal_thread_t thread)
 sal_thread_t
 sal_thread_self(void)
 {
+#ifdef LVL7_FIXUP
+    return (sal_thread_t) osapiTaskIdSelf();
+#else
     return (sal_thread_t) pthread_self();
+#endif /* LVL7_FIXUP */
 }
 
 /*
@@ -364,10 +393,20 @@ sal_thread_self(void)
  *	NULL, if name not available
  *	thread_name, if name available
  */
+#ifdef LVL7_FIXUP
+extern pthread_key_t osapi_name_key;
+#endif /* LVL7_FIXUP */
 
 char *
 sal_thread_name(sal_thread_t thread, char *thread_name, int thread_name_size)
 {
+#ifdef LVL7_FIXUP
+    char *task_name;
+
+    task_name = (char *) pthread_getspecific(osapi_name_key);
+    strncpy(thread_name, task_name, thread_name_size);
+    return thread_name;
+#else
     thread_info_t	*ti;
     char                *name;
 
@@ -380,6 +419,7 @@ sal_thread_name(sal_thread_t thread, cha
     }
 
     return name;
+#endif /* LVL7_FIXUP */
 }
 
 /*
@@ -396,6 +436,14 @@ sal_thread_name(sal_thread_t thread, cha
 void
 sal_thread_exit(int rc)
 {
+#ifdef LVL7_FIXUP
+  L7_int32 salTaskHandler = osapiTaskIdSelf();
+
+  osapiTaskDelete(salTaskHandler);
+
+  return;
+
+#else
     thread_info_t	*ti, **tp;
     pthread_t		id = pthread_self();
 
@@ -414,6 +462,7 @@ sal_thread_exit(int rc)
     }
 
     pthread_exit(INT_TO_PTR(rc));
+#endif /* LVL7_FIXUP */
 }
 
 /*
diff -rupN sdk-xgs-robo-5.9.4/src/soc/common/cm.c esw_sdk/src/soc/common/cm.c
--- sdk-xgs-robo-5.9.4/src/soc/common/cm.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/common/cm.c	2011-11-28 21:36:22.811485093 +0000
@@ -4214,6 +4214,13 @@ soc_cm_sflush(int dev, void *addr, int l
 int
 soc_cm_sinval(int dev, void *addr, int length)
 {
+#if defined(LVL7_FIXUP) && defined(LVL7_DNI8541)
+/* The cache doesn't need to be synced on the PPC85XX processor. 
+** Invoking the function causes a crash on the PPC85XX devices.
+*/
+    return SOC_E_NONE;
+#endif	
+
     if (CMVEC(dev).sinval) {
         return CMVEC(dev).sinval(&CMDEV(dev).dev, addr, length);
     }
@@ -4374,6 +4381,58 @@ soc_cm_print(const char *format, ...)
     return rc; 
 }
 
+#ifdef LVL7_FIXUP
+int
+soc_cm_debug_error(const char *format, ...)
+{
+    int rc; 
+    va_list vargs;
+
+    if (_soc_cm_init_data.debug_out == NULL) {
+        return 0;
+    }
+
+    va_start(vargs, format);
+    rc = _soc_cm_init_data.debug_out(DK_ERR, format, vargs);
+    va_end(vargs); 
+
+    return rc; 
+}
+
+int
+soc_cm_debug_warn(const char *format, ...)
+{
+    int rc; 
+    va_list vargs;
+
+    if (_soc_cm_init_data.debug_out == NULL) {
+        return 0;
+    }
+
+    va_start(vargs, format);
+    rc = _soc_cm_init_data.debug_out(DK_WARN, format, vargs);
+    va_end(vargs); 
+
+    return rc; 
+}
+
+int
+soc_cm_debug_debug(const char *format, ...)
+{
+    int rc; 
+    va_list vargs;
+
+    if (_soc_cm_init_data.debug_out == NULL) {
+        return 0;
+    }
+
+    va_start(vargs, format);
+    rc = _soc_cm_init_data.debug_out(~(DK_WARN | DK_ERR), format, vargs);
+    va_end(vargs); 
+
+    return rc; 
+}
+#endif
 /*
  * Function:    soc_cm_vprint
  * Purpose:     Direct a message from the driver.
diff -rupN sdk-xgs-robo-5.9.4/src/soc/common/dma.c esw_sdk/src/soc/common/dma.c
--- sdk-xgs-robo-5.9.4/src/soc/common/dma.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/common/dma.c	2011-11-28 21:37:09.711641847 +0000
@@ -1225,9 +1225,22 @@ soc_dma_process_done_desc(int unit, dv_t
     for (; dv != NULL; dv = dv->dv_chain) {
         /* Process all DCBs in the current DV. */
 
+/* (brr) - The BMW platforms are cache coherant processors so */
+/* call is unnecessary. Unfortunately the BSP for the 8541 does not      */
+/* resolve the value to sinval correctly so it is necessary to commnet   */
+/* this call out */
+
+#ifdef LVL7_FIXUP	    
+#ifndef BMW
+        /* Clean cache of any dirty data */
+        soc_cm_sinval(unit, dv->dv_dcb,
+                      dv->dv_vcnt * SOC_DCB_SIZE(unit));
+#endif	
+#else
         /* Clean cache of any dirty data */
         soc_cm_sinval(unit, dv->dv_dcb,
                       dv->dv_vcnt * SOC_DCB_SIZE(unit));
+#endif	
 
         for (i = dv->dv_dcnt; i < dv->dv_vcnt; i++) {
             dcb = SOC_DCB_IDX2PTR(unit, dv->dv_dcb, i);
diff -rupN sdk-xgs-robo-5.9.4/src/soc/common/mem.c esw_sdk/src/soc/common/mem.c
--- sdk-xgs-robo-5.9.4/src/soc/common/mem.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/common/mem.c	2011-11-28 21:37:57.439186772 +0000
@@ -7203,13 +7203,25 @@ _soc_mem_dual_hash_insert(int unit,
         }
         hash_info.bucket_size = SOC_L2X_BUCKET_SIZE;
         hash_info.base_mem = mem;
+#ifdef LVL7_FIXUP
+       /* soc_l2x_freeze/thaw routine are very costly as they try to disable
+        * learning on all Physical and VPs. In cases where we are continously
+        * running into hash collision, freeze/thaw ends up taking a lot of 
+        * cpu time un-neccessarily as we have not enabled software dual-hash
+        * move by default. */
+       if (recurse_depth > 0)
+       {
+#endif
 
         /* Time to shuffle the entries */
         SOC_IF_ERROR_RETURN(soc_l2x_freeze(unit));
         rv = _soc_mem_dual_hash_move(unit, mem, SOC_MEM_HASH_BANK_BOTH,
                                      copyno, entry_data, &hash_info,
                                      NULL, recurse_depth - 1);
         SOC_IF_ERROR_RETURN(soc_l2x_thaw(unit));
+#ifdef LVL7_FIXUP
+       }
+#endif
         break;
 #if defined(BCM_TRIUMPH_SUPPORT)
     case MPLS_ENTRYm:
diff -rupN sdk-xgs-robo-5.9.4/src/soc/common/unimac.c esw_sdk/src/soc/common/unimac.c
--- sdk-xgs-robo-5.9.4/src/soc/common/unimac.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/common/unimac.c	2011-11-28 21:38:33.194998085 +0000
@@ -296,7 +296,12 @@ mac_uni_init(int unit, soc_port_t port)
 
     COMPILER_64_ZERO(rval64);
     soc_reg64_field32_set(unit, PAUSE_CONTROLr, &rval64, ENABLEf, 1);
+#ifdef LVL7_FIXUP
+    /* Reduce the timer for periodic pause. Otherwise we see small data loss */
+    soc_reg64_field32_set(unit, PAUSE_CONTROLr, &rval64, VALUEf, 0xc000);
+#else
     soc_reg64_field32_set(unit, PAUSE_CONTROLr, &rval64, VALUEf, 0x1ffff);
+#endif
     SOC_IF_ERROR_RETURN(WRITE_PAUSE_CONTROLr(unit, port, rval64));
 
     SOC_IF_ERROR_RETURN(WRITE_PAUSE_QUANTr(unit, port, 0xffff));
diff -rupN sdk-xgs-robo-5.9.4/src/soc/esw/hash.c esw_sdk/src/soc/esw/hash.c
--- sdk-xgs-robo-5.9.4/src/soc/esw/hash.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/esw/hash.c	2011-11-28 21:39:32.334615921 +0000
@@ -2149,6 +2149,41 @@ _soc_tr_l2x_dcc_entry_to_key(int unit, u
     return _soc_hash_generic_entry_to_key(unit, entry, key, L2Xm, field_list);
 }
 
+#ifdef LVL7_FIXUP
+static int
+_soc_tr2_l2x_scc_entry_to_key(int unit, uint32 *e, uint8 *key)
+{
+    int ovid, key_type = 1;
+
+    /* Key type 0x1 (SINGLE_CROSS_CONNECT) Key = {OVID} */
+    ovid = soc_L2Xm_field32_get(unit, e, OVIDf);
+
+    /* key[0] has 2 bits of padding of byte alignment */
+    key[0] = ((ovid << 4) & 0xf0) | ((key_type << 2) & 0x0c);
+    key[1] = (ovid >> 4) & 0xff;
+
+    return (64);
+}
+
+static int
+_soc_tr2_l2x_dcc_entry_to_key(int unit, uint32 *e, uint8 *key)
+{
+    int ivid, ovid, key_type = 2;
+
+    /* Key type 0x2 (DOUBLE_CROSS_CONNECT) Key = {OVID, IVOD} */
+    ovid = soc_L2Xm_field32_get(unit, e, OVIDf);
+    ivid = soc_L2Xm_field32_get(unit, e, IVIDf);
+
+    /* key[0] has 2 bits of padding of byte alignment */
+    key[0] = ((key_type << 2)& 0xc) | ((ovid << 4) & 0xf0);
+    key[1] = ((ovid >> 4) & 0xff); 
+    key[2] = (ivid & 0xff);
+    key[3] = ((ivid >> 8) & 0xf);
+
+    return (64);
+}
+#endif
+
 STATIC int
 _soc_tr_l2x_vfi_entry_to_key(int unit, uint32 *entry, uint8 *key)
 {
@@ -2243,9 +2278,27 @@ soc_tr_l2x_base_entry_to_key(int unit, v
     case TR_L2_HASH_KEY_TYPE_BRIDGE:
         return _soc_tr_l2x_bridge_entry_to_key(unit, entry, key);
     case TR_L2_HASH_KEY_TYPE_SINGLE_CROSS_CONNECT:
+#ifndef LVL7_FIXUP
         return _soc_tr_l2x_scc_entry_to_key(unit, entry, key);
+#else
+            if (SOC_IS_TRIUMPH2(unit) || SOC_IS_APOLLO(unit)/* || SOC_IS_VALKYRIE2(unit)*/) {    /* PTin modified */
+                return _soc_tr2_l2x_scc_entry_to_key(unit, entry, key);
+            }
+            else {
+                return _soc_tr_l2x_scc_entry_to_key(unit, entry, key);
+            }
+#endif
     case TR_L2_HASH_KEY_TYPE_DOUBLE_CROSS_CONNECT:
+#ifndef LVL7_FIXUP
         return _soc_tr_l2x_dcc_entry_to_key(unit, entry, key);
+#else
+            if (SOC_IS_TRIUMPH2(unit) || SOC_IS_APOLLO(unit)/* || SOC_IS_VALKYRIE2(unit)*/) {    /* PTin modified */
+                return _soc_tr2_l2x_dcc_entry_to_key(unit, entry, key);
+            }
+            else {
+                return _soc_tr_l2x_dcc_entry_to_key(unit, entry, key);
+            }
+#endif
     case TR_L2_HASH_KEY_TYPE_VFI:
         return _soc_tr_l2x_vfi_entry_to_key(unit, entry, key);
 #ifdef BCM_TRIDENT_SUPPORT
diff -rupN sdk-xgs-robo-5.9.4/src/soc/esw/l2xmsg.c esw_sdk/src/soc/esw/l2xmsg.c
--- sdk-xgs-robo-5.9.4/src/soc/esw/l2xmsg.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/esw/l2xmsg.c	2011-11-28 21:39:41.883614425 +0000
@@ -1305,6 +1305,14 @@ _soc_l2x_thread(void *unit_vp)
 
     cleanup_exit:
 
+#ifdef LVL7_FIXUP
+    /* 
+     * Allow the thread to be terminated by soc_l2x_stop, but not due to errors 
+     * Reset the box if it fails for any reason
+     */
+    assert(soc->l2x_interval == 0);
+#endif
+
     sal_sem_take(soc->l2x_lock, 0);
 
     if (chunk_buf != NULL) {
diff -rupN sdk-xgs-robo-5.9.4/src/soc/esw/trident.c esw_sdk/src/soc/esw/trident.c
--- sdk-xgs-robo-5.9.4/src/soc/esw/trident.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/esw/trident.c	2012-04-03 18:18:08.517925488 +0100
@@ -5240,7 +5240,7 @@ _soc_trident_misc_init(int unit)
     divisor = soc_property_get(unit, spn_RATE_EXT_MDIO_DIVISOR, 40);
     dividend = soc_property_get(unit, spn_RATE_EXT_MDIO_DIVIDEND, 1);
     rval = 0;
-    soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVISORf, divisor);
+    soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVISORf, divisor*2); /* PTin changed: LTX patch */
     soc_reg_field_set(unit, CMIC_RATE_ADJUSTr, &rval, DIVIDENDf, dividend);
     SOC_IF_ERROR_RETURN(WRITE_CMIC_RATE_ADJUSTr(unit, rval));
 
diff -rupN sdk-xgs-robo-5.9.4/src/soc/i2c/bus.c esw_sdk/src/soc/i2c/bus.c
--- sdk-xgs-robo-5.9.4/src/soc/i2c/bus.c	2011-10-22 11:06:19.000000000 +0100
+++ esw_sdk/src/soc/i2c/bus.c	2011-11-28 21:40:02.590586586 +0000
@@ -2077,3 +2077,97 @@ soc_i2c_show_speeds(int unit)
                      i2c_xgs3_freq_tab[i].speed : i2c_freq_tab[i].speed);
     }
 }
+
+#ifdef LVL7_FIXUP
+int
+soc_i2c_read_test(int unit, uint8 devid, uint8 *ptr, int len)
+{
+    int rv = SOC_E_NONE;
+    int i;
+
+    if ( (rv = soc_i2c_start(unit, SOC_I2C_RX_ADDR(devid) ) ) < 0 ) {
+        soc_cm_debug(DK_I2C, "i2c%d: soc_i2c_read_byte_data: "
+                     "failed to generate start.\n",
+                     unit);
+        return rv;
+    }
+
+    do {
+        for (i = 0; i < len; i++) {
+           if (i == len - 1) {
+             if ( (rv = soc_i2c_read_one_byte(unit, ptr,
+                                              FALSE)) < 0 ) {
+                 soc_cm_debug(DK_I2C, "i2c%d: soc_i2c_read_byte_data: "
+                              "failed to read data byte.\n",
+                              unit);
+             }
+           } else {
+             if ( (rv = soc_i2c_read_one_byte(unit, ptr,
+                                              TRUE)) < 0 ) {
+                 soc_cm_debug(DK_I2C, "i2c%d: soc_i2c_read_byte_data: "
+                              "failed to read data byte.\n",
+                              unit);
+             }
+           }
+           ptr++;
+        }
+    } while (0);
+
+    soc_i2c_stop(unit);
+
+    return rv;
+
+
+}
+
+int
+soc_i2c_write_test(int unit, uint8 devid, uint8 *ptr, int len)
+{
+    int rv = SOC_E_NONE;
+    int i;
+
+    if ( (rv = soc_i2c_start(unit, SOC_I2C_TX_ADDR(devid) ) ) < 0 ) {
+        soc_cm_debug(DK_I2C, "i2c%d: soc_i2c_read_byte_data: "
+                     "failed to generate start.\n",
+                     unit);
+        SOC_ERROR_PRINT((0, "soc_i2c_write_test: %s:%d Failed to generate START \n",
+              __func__, __LINE__));
+
+        return rv;
+    }
+
+    do {
+        for (i = 0; i < len; i++) {
+
+             SOC_ERROR_PRINT((0, "soc_i2c_write_test: %s:%d writing byte%d = %d\n",
+                     __func__, __LINE__, i, *ptr));
+
+             if ( (rv = soc_i2c_write_one_byte(unit, *ptr)) < 0 ) {
+                 soc_cm_debug(DK_I2C, "i2c%d: soc_i2c_write_one_byte: "
+                              "failed to write data byte.\n",
+                              unit);
+             }
+           ptr++;
+        }
+    } while (0);
+
+    soc_i2c_stop(unit);
+
+    return rv;
+
+}
+
+void soc_i2c_regdump()
+{
+  int unit = 0;
+
+  SOC_ERROR_PRINT((0, "soc_i2c_regdump: SLAVE_ADDR: 0x%02x DATA: 0x%02x CTRL: 0x%02x STAT: 0x%02x SLAVE_XADDR: 0x%02x RESET: 0x%02x\n", 
+        soc_i2c_pci_read(unit, CMIC_I2C_SLAVE_ADDR),
+        soc_i2c_pci_read(unit, CMIC_I2C_DATA),
+        soc_i2c_pci_read(unit, CMIC_I2C_CTRL),
+        soc_i2c_pci_read(unit, CMIC_I2C_STAT),
+        soc_i2c_pci_read(unit, CMIC_I2C_SLAVE_XADDR),
+        soc_i2c_pci_read(unit, CMIC_I2C_RESET)));
+}
+#endif /* LVL7_FIXUP */
+
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phy5464.c esw_sdk/src/soc/phy/phy5464.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/phy5464.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/phy5464.c	2011-11-28 21:41:20.051301649 +0000
@@ -149,6 +149,11 @@
 #include <soc/phy/phyctrl.h>
 #include <soc/phy/drv.h>
 
+#ifdef LVL7_FIXUP
+#include "sysapi_hpc.h"
+#include "hpc_phy.h"
+#endif
+
 #include "phydefs.h"      /* Must include before other phy related includes */
 
 #if defined(INCLUDE_PHY_5464_ESW)
@@ -238,6 +243,10 @@ _phy_5464_medium_check(int unit, soc_por
     phy_ctrl_t        *pc;    /* PHY state */
     uint16             tmp;    /* Temp variable */
     int                copper; /* Copper medium is active */
+#if (defined(LVL7_FIXUP) && \
+    (defined(LVL7_ALPHA8245) || defined(LVL7_DNI8541)))
+static int              fiberCnt[2][24];
+#endif
 
     pc    = EXT_PHY_SW_STATE(unit, port);
     /* Read Mode Register (0x1c shadow 11111) */
@@ -255,7 +264,22 @@ _phy_5464_medium_check(int unit, soc_por
                 /* 0x10 Fiber Signal Detect
                  * 0x20 Copper Energy Detect
                  */
+#if (defined(LVL7_FIXUP) && \
+    (defined(LVL7_ALPHA8245) || defined(LVL7_DNI8541)))
+                copper = TRUE;
+                if ((tmp & 0x10) == 0x10) {
+                    fiberCnt[unit][port]++;
+                    /* Require multiple detections so as not to prematurely    */
+                    /* disable the copper transmitter because of a transition. */
+                    if (fiberCnt[unit][port] > 5) {
+                        copper = FALSE;
+                    }
+                } else {
+                    fiberCnt[unit][port] = 0;
+                }
+#else
                 copper = ((tmp & 0x30) == 0x20); 
+#endif
             } else {
                 copper = ((tmp & 0x20) == 0x20);
             }
@@ -1313,6 +1337,13 @@ phy_5464_link_get(int unit, soc_port_t p
         SOC_IF_ERROR_RETURN
             (MODIFY_PHY5464_MII_ECRr(unit, pc, copper_transmit, 0x2000));
     }
+#ifdef LVL7_FIXUP 
+    /* alok relook*/
+    if (soc_property_get(unit, spn_LED_MODE_CUST, 0))
+    {
+      (void)sysapiHpcLedModeCustomization(unit, (int)port, *link);
+    }
+#endif
 
     if (DPRINTF_ENABLE && soc_cm_debug_check(DK_VERBOSE)) {
         DPRINTF("phy_5464_link_get: u=%d p=%d mode=%s%s%s link=%d\n",
@@ -3113,6 +3144,10 @@ phy_5464_shadow_dump(int unit, soc_port_
 
     pc       = EXT_PHY_SW_STATE(unit, port);
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     /* Register 0x18 Shadows */
     for (i = 0; i <= 7; i++) {
         WRITE_PHY_REG(unit, pc, 0x18, (i << 12) | 0x7);
@@ -3142,10 +3177,60 @@ phy_5464_shadow_dump(int unit, soc_port_
         }
         soc_cm_print("0x17[0x%x]=0x%04x\n", i, tmp);
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
 }
 
 #endif /* BROADCOM_DEBUG */
 
+#ifdef LVL7_FIXUP
+/*
+ * Function:    
+ *      phy_5464_link_up
+ * Purpose:     
+ *      Performs tasks on link up.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #. 
+ * Returns:     
+ *      SOC_E_XXX
+ * Notes:
+ *      sees link up.
+ */
+STATIC int
+phy_5464_link_up(int unit, soc_port_t port)
+{
+    int an, an_done;
+
+    SOC_DEBUG_PRINT((DK_PHY,
+                     "phy_5464_link_up: u=%d p=%d \n",
+                     unit, port));
+
+    /* For copper mode only */
+    if (PHY_FLAGS_TST(unit, port, PHY_FLAGS_COPPER)) {
+        /* Get the an status */
+        SOC_IF_ERROR_RETURN
+            (phy_5464_autoneg_get(unit, port, &an, &an_done));
+
+        /* If an is diabled and link up happens then enable PHY 
+        ** as on combp ports it does not happen 
+        */
+        if (an == FALSE) {
+
+            SOC_IF_ERROR_RETURN
+               (soc_phyctrl_notify(unit, port, phyEventResume, PHY_STOP_PHY_DIS));
+
+            SOC_DEBUG_PRINT((DK_PHY,
+                     "phy_5464_link_up: Resume PHY_STOP_PHY_DIS for u=%d p=%d \n",
+                     unit, port));
+        }
+    }
+    return SOC_E_NONE;
+}
+#endif /* LVL7_FIXUP */
+
 /*
  * Variable:    phy_5464drv_ge
  * Purpose:     PHY driver for 5464
@@ -3174,7 +3259,11 @@ phy_driver_t phy_5464drv_ge = {
     phy_5464_interface_set,
     phy_5464_interface_get,
     phy_5464_ability_get,
-    NULL,                       /* Link up event */
+#ifdef LVL7_FIXUP
+    phy_5464_link_up,          /* Link up event */
+#else 
+    NULL,
+#endif
     phy_5464_link_down,
     phy_5464_mdix_set,
     phy_5464_mdix_get,
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phy54680.c esw_sdk/src/soc/phy/phy54680.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/phy54680.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/phy54680.c	2011-11-28 21:47:36.378907482 +0000
@@ -909,6 +909,12 @@ phy_54680_enable_set(int unit, soc_port_
     SOC_IF_ERROR_RETURN
         (MODIFY_PHY54680_MII_CTRLr(unit, pc, power_down, MII_CTRL_PD));
 
+#ifdef LVL7_FIXUP
+        if (soc_property_port_get(unit, port, spn_PORT_SUPER_ISOLATE, 0) != 0) {
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY54680_MII_POWER_CTRLr(unit, pc, 0, 0x20));
+        }
+#endif
     if (!enable) {
         if ((PHY_FLAGS_TST(unit, port, PHY_FLAGS_EEE_CAPABLE)) &&
            (((pc->phy_rev & 0x4) == 0x0) || /* A0,A1,B0,B1 */
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phy8706.c esw_sdk/src/soc/phy/phy8706.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/phy8706.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/phy8706.c	2012-05-24 20:20:16.807157464 +0100
@@ -64,6 +64,9 @@
 
 #include "phydefs.h"      /* Must include before other phy related includes */
 
+///LTX for printf
+#include <stdio.h>
+
 #if defined(INCLUDE_PHY_8706)
 #include "phyconfig.h"    /* Must be the first phy include after phydefs.h */
 #include "phyident.h"
@@ -497,6 +500,9 @@ _8727_rom_load_war(int unit, int port, p
 STATIC int
 _8726_rom_load(int unit, int port, phy_ctrl_t *pc)
 {
+	printf("LTX: aborting _8726_rom_load\n");
+    return SOC_E_NONE;
+
     SOC_IF_ERROR_RETURN
         (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0001));
     sal_usleep(1000);
@@ -527,6 +533,10 @@ _8726_rom_load(int unit, int port, phy_c
 STATIC int
 _8747_rom_load(int unit, int port, phy_ctrl_t *pc)
 {
+//	printf("LTX: aborting _8747_rom_load\n");
+//    return SOC_E_NONE;
+
+
     uint16  phy_addr;
     int i;
 
@@ -538,7 +548,8 @@ _8747_rom_load(int unit, int port, phy_c
         pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc840), 0x000C);
 
         /* Set bit SPI Download (15), SER Boot (14) And SPI Port Enable (0) In C848, SPI_PORT_CTRL */
-        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0xC0F1);
+//        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0xC0F1);
+        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0x80F1);
     }
 
     /* Place Micro in reset */
@@ -662,8 +673,13 @@ phy_8706_init(int unit, soc_port_t port)
     
     PHY_FLAGS_SET(unit, port,  PHY_FLAGS_FIBER | PHY_FLAGS_C45);
 
-    phy_ext_rom_boot = soc_property_port_get(unit, port, 
-                                            spn_PHY_EXT_ROM_BOOT, 1);
+    ///LTX
+//    phy_ext_rom_boot = soc_property_port_get(unit, port,
+//                                            spn_PHY_EXT_ROM_BOOT, 1);
+    phy_ext_rom_boot=1;
+
+
+
     SOC_IF_ERROR_RETURN
         (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1));
 
@@ -1066,6 +1082,17 @@ phy_8706_init(int unit, soc_port_t port)
             PHYDRV_CALL_NOARG(pc,PHY_INIT);
         }
     }
+
+    ///LTX
+
+    printf("LTX: Hacking phy_8706_init to enable tx on address 0xc800\n");
+
+    (PHY8706_REG_WRITE(unit, pc,
+                      SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PMA_PMD,
+                                            0xC800),
+                      0xFF00));
+
+
  
     return SOC_E_NONE;
 }
@@ -1584,7 +1611,8 @@ phy_8706_ability_local_get(int unit, soc
     switch(pc->speed_max) {
         case 10000:
         default:
+//        	printf("LTX: phy_8706_ability_local_get setting full duplex to SOC_PA_SPEED_10GB\n");
             ability->speed_full_duplex |= SOC_PA_SPEED_10GB;
             break;
     }
                                                                                
@@ -1653,9 +1682,14 @@ _phy_8706_link_get(int unit, soc_port_t 
         SOC_IF_ERROR_RETURN
             (READ_PHY8706_PMA_PMD_STATr(unit, pc, &pma_mii_stat));
 
+//        printf("LTX: pcs_mii_stat= 0x%X\n", pcs_mii_stat);
+//        printf("LTX: pma_mii_stat= 0x%X\n", pma_mii_stat);
+
         link_stat = pma_mii_stat & pcs_mii_stat;
 
         *link = (link_stat & MII_STAT_LA) ? TRUE : FALSE;
+//        printf("LTX: link on port %d is %s\n", port, (link_stat & MII_STAT_LA) ? "UP" : "DOWN");
+
     } else {
         /* in 1G mode, the PMA/PMD and PCS status register's link bit always
          * show link down.
@@ -1691,7 +1725,11 @@ _phy_5942_link_get(int unit, soc_port_t 
     SOC_IF_ERROR_RETURN
         (READ_PHY8706_PHYXS_GP_STATUS_STATUS1000X1r(unit, pc, &status1000x1));
 
+//    printf("LTX: _phy_5942_link_get on port %d  XGXSSTATUS1r = 0x%X\n", port, xgxsstatus1);
+//    printf("LTX: _phy_5942_link_get on port %d  STATUS1000X1r= 0x%X\n", port, status1000x1);
+
     *link =  ((xgxsstatus1 & (1U << 9)) | (status1000x1 & (1U << 1))) ? 1 : 0;
+//    printf("LTX: _phy_5942_link_get  link on port %d is %s\n", port, ((xgxsstatus1 & (1U << 9)) | (status1000x1 & (1U << 1))) ? "UP" : "DOWN");
 
     soc_cm_debug(DK_PHY | DK_VERBOSE,
          "_phy_5942_link_get: u=%d port%d: link:%s\n",
@@ -1704,7 +1742,9 @@ _phy_5942_link_get(int unit, soc_port_t 
 STATIC int
 phy_8706_link_get(int unit, soc_port_t port, int *link)
 {
-    phy_ctrl_t *pc; 
+    phy_ctrl_t *pc;
+
+//    printf("LTX: phy_8706_link_get called for port %d\n", port);
 
     pc = EXT_PHY_SW_STATE(unit, port);
 
@@ -1943,6 +1983,7 @@ phy_8706_lb_set(int unit, soc_port_t por
 
     if (PHY_IS_BCM5942(pc)) {
         SOC_IF_ERROR_RETURN
+//        (_phy_8706_lb_set(unit, port, enable));
             (_phy_5942_lb_set(unit, port, enable));
     } else {
         SOC_IF_ERROR_RETURN
@@ -2717,9 +2758,12 @@ _phy_8706_speed_set(int unit, soc_port_t
     if (NULL != int_pc) {
         if (PHY_IS_BCM5942(pc)) {
             SOC_IF_ERROR_RETURN
-                (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_SFI));
+//            (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+                (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+            printf("LTX: internal phy on port %d set to SOC_PORT_IF_XFI\n", port);
             SOC_IF_ERROR_RETURN
                 (PHY_AUTO_NEGOTIATE_SET (int_pc->pd, unit, port, 0));
+            printf("LTX: internal phy on port %d set to AUTONEG OFF\n", port);
         }
         rv = PHY_SPEED_SET(int_pc->pd, unit, port, speed);
     }
@@ -2737,6 +2781,10 @@ STATIC int
 phy_8706_speed_set(int unit, soc_port_t port, int speed)
 {
     phy_ctrl_t  *pc;
+    printf("LTX: Called phy_8706_speed_set for port %d\n", port);
+
+//    return SOC_E_NONE;
+
 
     pc = EXT_PHY_SW_STATE(unit, port);
 
@@ -2933,6 +2981,21 @@ _phy_8747_firmware_ram_set(int unit, int
         return SOC_E_FAIL;
     }
 
+    ///LTX
+//    printf("LTX: Will hack _phy_8747_firmware_ram_set to configure port speed, autoneg and internal phy interface...\n");
+//    if (PHY_IS_BCM5942(pc)) {
+//        SOC_IF_ERROR_RETURN
+////            (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+//            (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_XFI));
+//        printf("LTX: internal phy on port %d set to SOC_PORT_IF_XFI\n", port);
+//        SOC_IF_ERROR_RETURN
+//            (PHY_AUTO_NEGOTIATE_SET (int_pc->pd, unit, port, 0));
+//        printf("LTX: internal phy on port %d set to AUTONEG OFF\n", port);
+//    }
+//    PHY_SPEED_SET(int_pc->pd, unit, port, speed);
+    ///LTX end
+
+
     return SOC_E_NONE;
 }
 
@@ -4088,6 +4151,10 @@ phy_8706_probe(int unit, phy_ctrl_t *pc)
         if (soc_property_port_get(unit, pc->port, spn_PORT_PHY_MODE_REVERSE, 0)) {
             pi->phy_name = "BCM5942";
             PHY_FLAGS_SET(pc->unit, pc->port, PHY_FLAGS_SECONDARY_SERDES);
+//            ///ltx: hack to set the speed
+//            phy_8706_speed_set(unit, pc->port, 10000);
+//            ///
+
         }
     break;
 
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phy8706.c.original esw_sdk/src/soc/phy/phy8706.c.original
--- sdk-xgs-robo-5.9.4/src/soc/phy/phy8706.c.original	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/src/soc/phy/phy8706.c.original	2011-11-29 15:43:39.256977183 +0000
@@ -0,0 +1,4159 @@
+
+/*
+ * $Id: phy8706.c 1.99.4.10 Broadcom SDK $
+ * $Copyright: Copyright 2011 Broadcom Corporation.
+ * This program is the proprietary software of Broadcom Corporation
+ * and/or its licensors, and may only be used, duplicated, modified
+ * or distributed pursuant to the terms and conditions of a separate,
+ * written license agreement executed between you and Broadcom
+ * (an "Authorized License").  Except as set forth in an Authorized
+ * License, Broadcom grants no license (express or implied), right
+ * to use, or waiver of any kind with respect to the Software, and
+ * Broadcom expressly reserves all rights in and to the Software
+ * and all intellectual property rights therein.  IF YOU HAVE
+ * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+ * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+ * ALL USE OF THE SOFTWARE.  
+ *  
+ * Except as expressly set forth in the Authorized License,
+ *  
+ * 1.     This program, including its structure, sequence and organization,
+ * constitutes the valuable trade secrets of Broadcom, and you shall use
+ * all reasonable efforts to protect the confidentiality thereof,
+ * and to use this information only in connection with your use of
+ * Broadcom integrated circuit products.
+ *  
+ * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+ * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+ * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+ * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+ * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+ * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+ * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+ * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+ * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+ * 
+ * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+ * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+ * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+ * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+ * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+ * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+ * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+ * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+ *
+ * File:        phy8706.c
+ * Purpose:    Phys Driver support for Broadcom 8706/8726 Serial 10Gig
+ *             transceiver with XAUI interface.
+ * Note:       To use this PHY driver, add phy_8706=1 config setting.
+ *             PHY probing doesn't detect 8706 because the device ID is 
+ *             the same as 8705.
+ */
+
+#include <sal/types.h>
+
+#include <soc/drv.h>
+#include <soc/debug.h>
+#include <soc/error.h>
+#include <soc/phyreg.h>
+
+#include <soc/phy.h>
+#include <soc/phy/phyctrl.h>
+#include <soc/phy/drv.h>
+
+#include "phydefs.h"      /* Must include before other phy related includes */
+
+#if defined(INCLUDE_PHY_8706)
+#include "phyconfig.h"    /* Must be the first phy include after phydefs.h */
+#include "phyident.h"
+#include "phyreg.h"
+#include "phynull.h"
+#include "phyxehg.h"
+#include "phy8706.h"
+
+#define BCM8727_MICROCODE_LOAD_WAR
+
+#ifdef INCLUDE_MACSEC
+#include <soc/macsecphy.h>
+#endif
+
+/* typedefs */
+
+typedef struct {
+    uint16 tx_pol_ln0;
+    uint16 tx_pol_ln1;
+    uint16 tx_pol_ln2;
+    uint16 tx_pol_ln3;
+    uint16 rx_pol_ln0;
+    uint16 rx_pol_ln1;
+    uint16 rx_pol_ln2;
+    uint16 rx_pol_ln3;
+    uint16 tx_ln_swap;
+    uint16 rx_ln_swap;
+    uint16 preemph;
+    uint16 inband_mdio;
+} XGXS_CFG_t;
+
+typedef struct {
+    uint16 xgxsblk0_misccontrol1;
+    uint16 rx_all_rx_control;
+} PHY5942_CFG_t;
+
+typedef struct {
+    int cached_down_link;
+} PHY8706_DEV_DESC_t;
+
+/* device field macros */
+#define CACHED_DOWN_LINK(_pc) (((PHY8706_DEV_DESC_t *)((_pc) + 1))->cached_down_link)
+
+/* 
+ * phy's revision info, device 1 
+ * Revision     reg 0x0003      reg 0xC806
+ *  A             0x6034            0x0010
+ *  B0            0x6035            0x0010
+ *  B1            0x6035            0x0011 
+ *  C0            0x6035            0x0012 
+ */
+
+#define PHY87X6_REV_A       0x6034
+#define PHY87X6_REV_BC      0x6035
+#define PHY_ID1_8727        0x6036
+#define PHY_ID1_8747        0x6037
+#define PHY87X6_REV_ID_REG  0xc806
+
+#define PHY_8706_PCS_LOOPBACK           1
+
+#define IS_8727_TYPE(phyid1)    (((phyid1) == PHY_ID1_8727) || ((phyid1) == PHY_ID1_8747))
+
+#define PHY_IS_BCM5942(_pc)     PHY_FLAGS_TST((_pc)->unit, (_pc)->port, \
+                                                        PHY_FLAGS_SECONDARY_SERDES)
+
+#if 0
+#define PHY_8706_PMA_PMD_LOOPBACK       1
+#define PHY_8706_SYSTEM_LOOPBACK        1
+#define PHY_8706_XAUI_LOOPBACK          1
+#endif
+
+/*
+ * SPI-ROM Program related defs
+ */
+#define SPI_CTRL_1_L        0xC000
+#define SPI_CTRL_1_H        0xC002
+#define SPI_CTRL_2_L        0xC400
+#define SPI_CTRL_2_H        0xC402
+#define SPI_TXFIFO          0xD000
+#define SPI_RXFIFO          0xD400                                                                                 
+#define WR_CPU_CTRL_REGS    0x11
+#define RD_CPU_CTRL_REGS    0xEE
+#define WR_CPU_CTRL_FIFO    0x66
+/*
+ * SPI Controller Commands(Messages).
+ */
+#define MSGTYPE_HWR          0x40
+#define MSGTYPE_HRD          0x80
+#define WRSR_OPCODE          0x01
+#define WR_OPCODE            0x02
+#define WRDI_OPCODE          0x04
+#define RDSR_OPCODE          0x05
+#define WREN_OPCODE          0x06
+#define WR_BLOCK_SIZE        0x40
+#define TOTAL_WR_BYTE        0x4000
+
+/* I2C related defines */
+#define PHY_8727_BSC_XFER_MAX     0x1F9
+#define PHY_8727_BSC_WR_MAX       16
+#define PHY_8727_WRITE_START_ADDR 0x8007
+#define PHY_8727_READ_START_ADDR  0x8007
+#define PHY_8727_WR_FREQ_400KHZ   0x0100
+#define PHY_8727_2W_STAT          0x000C
+#define PHY_8727_2W_STAT_IDLE     0x0000
+#define PHY_8727_2W_STAT_COMPLETE 0x0004
+#define PHY_8727_2W_STAT_IN_PRG   0x0008
+#define PHY_8727_2W_STAT_FAIL     0x000C
+#define PHY_8727_BSC_WRITE_OP     0x22
+#define PHY_8727_BSC_READ_OP      0x2
+#define PHY_8727_I2CDEV_WRITE     0x1
+#define PHY_8727_I2CDEV_READ      0x0
+#define PHY_8727_I2C_8BIT         0
+#define PHY_8727_I2C_16BIT        1     
+#define PHY_8727_I2C_TEMP_RAM     0xE
+#define PHY_8727_I2C_OP_TYPE(access_type,data_type) \
+        ((access_type) | ((data_type) << 8))
+#define PHY_8727_I2C_ACCESS_TYPE(op_type) ((op_type) & 0xff)
+#define PHY_8727_I2C_DATA_TYPE(op_type)   (((op_type) >> 8) & 0xff)
+#define PHY_8727_VERSION_C    7
+#define PHY_8727_EDC_AUTO_CONFIG_MASK   (1<<10)
+#define PHY_8727_EDC_MODE_MASK          0xff
+
+/* SFP EEPROM defines */
+#define EEPROM_I2C_ADDR 0x50
+#define SFP_ID             0
+#define SFP_TRCVER_CODE0   3
+#define SFP_TRCVER_CODE3   6
+#define SFP_TRCVER_CODE5   8
+#define SFP_TYPE_SFP_PLUS  0x3
+#define SFP_TRCVER_10G_ER  (1<<7)
+#define SFP_TRCVER_10G_LRM (1<<6)
+#define SFP_TRCVER_10G_LR  (1<<5)
+#define SFP_TRCVER_10G_SR  (1<<4)
+#define SFP_TRCVER_PASSIVE_CABLE  (1<<2)
+#define SFP_TRCVER_ACTIVE_CABLE   (1<<3)
+#define SFP_TRCVER_1000BASE_T    (1<<3)
+#define SFP_TRCVER_1000BASE_CX   (1<<2)
+#define SFP_TRCVER_1000BASE_LX   (1<<1)
+#define SFP_TRCVER_1000BASE_SX   (1<<0)
+#define SFP_8431_COMPLIANCE      (1<<0)
+#define SFP_8431_LIMITED_COMPLIANCE  (1<<2)
+#define SFP_8431_APPENDIX_E_COMPLIANCE  (1<<0)
+
+#define NXT_PC(pc) ((phy_ctrl_t *)((pc)->driver_data))
+#define PHYDRV_CALL_NOARG(pc,name) \
+     do { \
+        if (pc->driver_data) { \
+            int rv; \
+            phy_ctrl_t * tmp_pc = EXT_PHY_SW_STATE(pc->unit, pc->port); \
+            EXT_PHY_SW_STATE(pc->unit,pc->port) = (phy_ctrl_t *)(pc->driver_data); \
+            rv = name(((phy_ctrl_t *)(pc->driver_data))->pd,(pc)->unit,(pc)->port); \
+            EXT_PHY_SW_STATE(pc->unit, pc->port) = tmp_pc; \
+            if (SOC_FAILURE(rv)) { \
+                return rv; \
+            } \
+       } \
+    } while(0)
+
+#define PHYDRV_CALL_ARG1(pc,name,arg0) \
+    do { \
+       if (pc->driver_data) { \
+           int rv; \
+           phy_ctrl_t * tmp_pc = EXT_PHY_SW_STATE(pc->unit, pc->port); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = (phy_ctrl_t *)(pc->driver_data); \
+           rv = name(((phy_ctrl_t *)(pc->driver_data))->pd,(pc)->unit, \
+                (pc)->port,arg0); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = tmp_pc; \
+           if (SOC_FAILURE(rv)) { \
+               return rv; \
+           } \
+       } \
+    } while(0)
+
+#define PHYDRV_CALL_ARG2(pc,name,arg0,arg1) \
+    do { \
+       if (pc->driver_data) { \
+           int rv; \
+           phy_ctrl_t * tmp_pc = EXT_PHY_SW_STATE(pc->unit, pc->port); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = (phy_ctrl_t *)(pc->driver_data); \
+           rv=name(((phy_ctrl_t *)(pc->driver_data))->pd,(pc)->unit,(pc)->port,arg0, \
+                        arg1); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = tmp_pc; \
+           if (SOC_FAILURE(rv)) { \
+               return rv; \
+           } \
+       } \
+    } while(0)
+
+#define PHYDRV_CALL_ARG3(pc,name,arg0,arg1,arg2) \
+    do { \
+       if (pc->driver_data) { \
+           int rv; \
+           phy_ctrl_t * tmp_pc = EXT_PHY_SW_STATE(pc->unit, pc->port); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = (phy_ctrl_t *)(pc->driver_data); \
+           rv=name(((phy_ctrl_t *)(pc->driver_data))->pd,(pc)->unit,(pc)->port,arg0, \
+                        arg1,arg2); \
+           EXT_PHY_SW_STATE(pc->unit, pc->port) = tmp_pc; \
+           if (SOC_FAILURE(rv)) { \
+               return rv; \
+           } \
+       } \
+    } while(0)
+
+/* Local functions */
+STATIC int _phy_8727_firmware_ram_set(int unit, int port, int offset, 
+                                     uint8 *array,int datalen);
+STATIC int _phy_8747_firmware_ram_set(int unit, int port, int offset, 
+                                     uint8 *array,int datalen);
+STATIC int _phy_8706_speed_set(int unit, soc_port_t port, int speed);
+
+/* External functions and variables */
+
+extern unsigned char phy8727c_ucode_bin[];
+extern unsigned int phy8727c_ucode_bin_len;
+extern unsigned char phy8747_ucode_bin[];
+extern unsigned int phy8747_ucode_bin_len;
+
+#define WR_TIMEOUT   1000000
+static int write_message(int unit, phy_ctrl_t *pc, uint16 wrdata, uint16 * rddata);
+
+STATIC int _phy_8706_speed_get(int, soc_port_t, int *);
+int phy_8727_i2cdev_read(int unit, soc_port_t port, int dev_addr, 
+                     int offset, int nbytes,  uint8 *read_array);
+
+STATIC int
+_bcm8726_pmad_write_en(int unit, phy_ctrl_t *pc, int enable)
+{
+    if ( pc->phy_id1 == PHY87X6_REV_BC) {
+        uint16 data;
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, PHY87X6_REV_ID_REG, &data));
+        if ((data == 0x0011) || (data == 0x0012)) {
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x800d, enable ? 0x400d : 0x4009));
+            SOC_DEBUG_PRINT((DK_PHY, "_bcm8726_pmad_write_en: unit=%d port=%d\n", unit, pc->port));
+        }
+    }
+    return SOC_E_NONE;
+}
+
+#ifndef BCM8727_MICROCODE_LOAD_WAR
+
+STATIC int
+_8727_rom_load(int unit, int port, phy_ctrl_t *pc)
+{
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0001));
+    sal_usleep(1000);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x008C));
+    sal_usleep(1000);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0001));
+
+    sal_usleep(1000);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x018A));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0188));
+
+    /* Wait for atleast 100ms for code to download via SPI port*/
+    sal_usleep(200000);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0000));
+
+    sal_usleep(100000);
+    return SOC_E_NONE;
+}
+
+#else
+
+STATIC int
+_8727_rom_load_war(int unit, int port, phy_ctrl_t *pc)
+{
+    int delta1=0, delta2=0;
+    uint16 status1, status2, rev, data16;
+    soc_timeout_t  to;
+    int            rv;
+
+    SOC_IF_ERROR_RETURN
+        (pc->read(unit, pc->phy_id, SOC_PHY_CLAUSE45_ADDR(0x1,0xc801), &rev));
+
+    if ((rev == 0x2) || (rev == 0x3)) {
+        /* revA or revB */ 
+        if (pc->phy_id & 0x1) {
+            /* We are in channel 2 */
+            SOC_IF_ERROR_RETURN
+                (pc->read(unit, pc->phy_id-1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca1c), &status1));
+            SOC_IF_ERROR_RETURN
+                (pc->read(unit, pc->phy_id, SOC_PHY_CLAUSE45_ADDR(0x1,0xca1c), &status2));
+            SOC_DEBUG_PRINT((DK_PHY, "Channel 2: PRTAD = %x status1 = %x Status2 = %x\n",
+                             pc->phy_id, status1, status2)); 
+            if ((status1 == 0x600d) && (status2 == 0x600d)) {
+                return SOC_E_NONE;
+            } else {
+                delta2=0;
+                delta1=-1;
+            }
+        } else {
+            /* We are in channel 1 */
+            SOC_IF_ERROR_RETURN
+                (pc->read(unit, pc->phy_id, SOC_PHY_CLAUSE45_ADDR(0x1,0xca1c), &status1));
+            SOC_IF_ERROR_RETURN
+                (pc->read(unit, pc->phy_id+1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca1c), &status2));
+            SOC_DEBUG_PRINT((DK_PHY,"Channel 1: PRTAD = %x status1 = %x Status2 = %x\n",
+                             pc->phy_id, status1, status2)); 
+            if ((status1 == 0x600d) && (status2 == 0x600d)) {
+                return SOC_E_NONE;
+            } else {
+                delta2=1;
+                delta1=0;
+            }
+        } 
+
+        /* Reset the device */
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0x0), MII_CTRL_RESET));
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x3,0x0), MII_CTRL_RESET));
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x4,0x0), MII_CTRL_RESET));
+
+        /* Wait for device to come out of reset */
+        soc_timeout_init(&to, 10000, 0);
+        while (!soc_timeout_check(&to)) {
+            rv = pc->read(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x4,0x0), &data16);
+            if (((data16 & MII_CTRL_RESET) == 0) ||
+                SOC_FAILURE(rv)) {
+                break;
+            }
+        }
+        if ((data16 & MII_CTRL_RESET) != 0) {
+            SOC_DEBUG_PRINT((DK_WARN,
+                             "PHY8706/8726 reset failed: u=%d p=%d\n",
+                             unit, pc->port));
+        }
+        sal_usleep(10000);
+
+        /* load microcode into channel 2 first */
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x0001));
+        sal_usleep(1000);
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x008C));
+        sal_usleep(1000);
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca85), 0x0001));
+
+        sal_usleep(1000);
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x018A));
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x0188));
+
+        /* Wait for atleast 100ms for code to download via SPI port*/
+        sal_usleep(200000);
+
+        SOC_IF_ERROR_RETURN
+            (pc->write(unit, pc->phy_id+delta2, SOC_PHY_CLAUSE45_ADDR(0x1,0xca85), 0x0000));
+
+        sal_usleep(100000);
+    }
+
+    /* now into channel 1 if revA or revB, if not do regular microcode load as delta1=0 */
+
+    /* Reset the device */
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0x0), MII_CTRL_RESET));
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x3,0x0), MII_CTRL_RESET));
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x4,0x0), MII_CTRL_RESET));
+
+    /* Wait for device to come out of reset */
+    soc_timeout_init(&to, 10000, 0);
+    while (!soc_timeout_check(&to)) {
+        rv = pc->read(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x4,0x0), &data16);
+        if (((data16 & MII_CTRL_RESET) == 0) ||
+            SOC_FAILURE(rv)) {
+            break;
+        }
+    }
+    if ((data16 & MII_CTRL_RESET) != 0) {
+        SOC_DEBUG_PRINT((DK_WARN,
+                         "PHY8706/8726 reset failed: u=%d p=%d\n",
+                          unit, pc->port));
+    }
+    sal_usleep(10000);
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x0001));
+    sal_usleep(1000);
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x008C));
+    sal_usleep(1000);
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca85), 0x0001));
+
+    sal_usleep(1000);
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x018A));
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca10), 0x0188));
+
+    /* Wait for atleast 100ms for code to download via SPI port*/
+    sal_usleep(200000);
+
+    SOC_IF_ERROR_RETURN
+        (pc->write(unit, pc->phy_id+delta1, SOC_PHY_CLAUSE45_ADDR(0x1,0xca85), 0x0000));
+
+    sal_usleep(100000);
+
+    return SOC_E_NONE;
+}
+
+#endif
+
+STATIC int
+_8726_rom_load(int unit, int port, phy_ctrl_t *pc)
+{
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0001));
+    sal_usleep(1000);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0188));
+    sal_usleep(1000);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x018A));
+    sal_usleep(1000);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca1e, 0x73A0));
+    sal_usleep(1000);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0188));
+
+    /* Wait for atleast 100ms for code to download via SPI port*/
+    sal_usleep(200000);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca85, 0x0000));
+
+    sal_usleep(1000);
+    return SOC_E_NONE;
+}
+
+STATIC int
+_8747_rom_load(int unit, int port, phy_ctrl_t *pc)
+{
+    uint16  phy_addr;
+    int i;
+
+    phy_addr = pc->phy_id & 0xfffc;
+
+    for(i = 0; i < 4; i++) { 
+        /* Disable SPI for all ports, return value ignored on purpose */
+        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc843), 0x000f);
+        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc840), 0x000C);
+
+        /* Set bit SPI Download (15), SER Boot (14) And SPI Port Enable (0) In C848, SPI_PORT_CTRL */
+        pc->write(unit, phy_addr+i,SOC_PHY_CLAUSE45_ADDR(1, 0xc848), 0xC0F1);
+    }
+
+    /* Place Micro in reset */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x018f));
+
+    /* Enable SPI */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xc843, 0x0000));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xc840, 0x0000));
+
+    /* Remove M8051 resets */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xca10, 0x0188));
+
+    /* The rest is moved outside this routine. */
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_8726_nxt_dev_probe(int unit, soc_port_t port)
+{
+    phy_ctrl_t  *pc;
+    phy_ctrl_t phy_ctrl;
+    soc_phy_info_t phy_info;
+    extern int _ext_phy_probe(int unit, soc_port_t port,soc_phy_info_t *pi, 
+                              phy_ctrl_t *ext_pc);
+    soc_phy_info_t *pi;
+    int offset = 0;
+    static char new_name[25];
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* initialize the phy_ctrl for the next device connected to the xaui port */
+    sal_memset(&phy_ctrl, 0, sizeof(phy_ctrl_t));
+    phy_ctrl.unit = unit;
+    phy_ctrl.port = port;
+    phy_ctrl.speed_max = pc->speed_max;
+    phy_ctrl.read = pc->read;    /* use same MDIO read routine as this device's */
+    phy_ctrl.write = pc->write;  /* use same MDIO write routine as this device's */ 
+
+    /* get the mdio address of the next device */
+    phy_ctrl.phy_id = soc_property_port_get(unit, port,
+                                     spn_PORT_PHY_ADDR1, 0xff);
+
+    if (phy_ctrl.phy_id == 0xff) {
+        return SOC_E_NOT_FOUND;
+    }
+
+    /* probe the next device at the given address */
+    SOC_IF_ERROR_RETURN
+        (_ext_phy_probe(unit, port, &phy_info, &phy_ctrl));
+
+    /* If we have probed BCM8706/8726/8727 then we won't allow 
+     * to chain (physically its not possible) another 8706. The Probe depends
+     * on spn_PORT_PHY_ADDR1 to probe 2nd level PHYs. It could so
+     * happen that 8706/8726 could be chained with 8481. In such cases
+     * probing could end up in a loop.
+     */
+    if ((phy_ctrl.pd == NULL) || (phy_ctrl.phy_model == pc->phy_model)) {
+        pc->driver_data = NULL;
+        /* device not found */
+        return SOC_E_NOT_FOUND;
+    }
+
+    SOC_DEBUG_PRINT((DK_PHY, "8726_nxt_dev_probe: found phy device"
+        " u=%d p=%d id0=0x%x id1=0x%x\n", 
+        unit, port,phy_ctrl.phy_id0,phy_ctrl.phy_id1));
+
+    /* Found device, allocate control structure */
+    pc->driver_data = (void *)sal_alloc (sizeof (phy_ctrl_t), phy_ctrl.pd->drv_name);
+    if (pc->driver_data == NULL) {
+        return SOC_E_MEMORY;
+    }
+    sal_memcpy(pc->driver_data, &phy_ctrl, sizeof(phy_ctrl_t));
+
+    /* We need to append the (chanined) PHY's name to the parent */
+    pi = &SOC_PHY_INFO(unit, pc->port);
+    offset = sal_strlen(pi->phy_name);
+    sal_strcpy(new_name, (pi->phy_name));
+    sal_strcpy(new_name+offset, "->");
+    offset = sal_strlen(new_name);
+    sal_strcpy(new_name + offset, phy_info.phy_name);
+    pi->phy_name = new_name;
+
+
+    return SOC_E_NONE;
+}
+
+
+/* Function:
+ *    phy_8706_init
+ * Purpose:    
+ *    Initialize 8706 phys
+ * Parameters:
+ *    unit - StrataSwitch unit #.
+ *    port - StrataSwitch port #. 
+ * Returns:    
+ *    SOC_E_NONE
+ */
+
+STATIC int
+phy_8706_init(int unit, soc_port_t port)
+{
+    uint16         phyid1;
+    soc_timeout_t  to;
+    int            rv;
+    uint16         data16,ucode_ver;
+    phy_ctrl_t     *pc;
+    phy_ctrl_t     *int_pc;
+    uint32         phy_ext_rom_boot; 
+    char           *str;
+    int            reg;
+    uint16 rev_num;
+    uint16 mask16;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    int_pc = INT_PHY_SW_STATE(unit, port);
+    
+    PHY_FLAGS_SET(unit, port,  PHY_FLAGS_FIBER | PHY_FLAGS_C45);
+
+    phy_ext_rom_boot = soc_property_port_get(unit, port, 
+                                            spn_PHY_EXT_ROM_BOOT, 1);
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1));
+
+#ifdef BCM8727_MICROCODE_LOAD_WAR
+    if ((phyid1 != PHY_ID1_8727) || (!phy_ext_rom_boot))
+#endif
+    {
+        /* Reset the device */
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_CTRLr(unit, pc,
+                                          MII_CTRL_RESET, MII_CTRL_RESET));
+
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PCS_CTRLr(unit, pc,
+                                      MII_CTRL_RESET, MII_CTRL_RESET));
+
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PHYXS_CTRLr(unit, pc,
+                                        MII_CTRL_RESET, MII_CTRL_RESET));
+
+        /* Wait for device to come out of reset */
+        soc_timeout_init(&to, 10000, 0);
+        while (!soc_timeout_check(&to)) {
+            rv = READ_PHY8706_PHYXS_CTRLr(unit, pc, &data16);
+            if (((data16 & MII_CTRL_RESET) == 0) ||
+                SOC_FAILURE(rv)) {
+                break;
+            }
+        }
+        if ((data16 & MII_CTRL_RESET) != 0) {
+            SOC_DEBUG_PRINT((DK_WARN,
+                             "PHY8706/8726 reset failed: u=%d p=%d\n",
+                             unit, port));
+        }
+    }
+
+    if (phy_ext_rom_boot) {
+        if (phyid1 == PHY_ID1_8727) {
+#ifdef BCM8727_MICROCODE_LOAD_WAR
+            _8727_rom_load_war(unit, port,pc);
+#else
+            _8727_rom_load(unit, port,pc);
+#endif
+        } else if (phyid1 == PHY_ID1_8747) {
+            _8747_rom_load(unit, port,pc);
+        } else {
+            _8726_rom_load(unit, port,pc);
+        }
+    } else {
+        if (phyid1 == PHY_ID1_8727) {
+            SOC_IF_ERROR_RETURN
+                (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xc801, &rev_num));
+
+            if ((rev_num & 0xF) == PHY_8727_VERSION_C) {
+                rv = _phy_8727_firmware_ram_set(unit,port,0,phy8727c_ucode_bin,
+                             phy8727c_ucode_bin_len);
+                if (SOC_FAILURE(rv)) {
+                    soc_cm_debug(DK_WARN,"8706: p=%d RAM load didn't complete\n", port);
+                }
+            }
+        } else if (phyid1 == PHY_ID1_8747) {
+            rv = _phy_8747_firmware_ram_set(unit,port,0,phy8747_ucode_bin,
+                         phy8747_ucode_bin_len);
+            if (SOC_FAILURE(rv)) {
+                soc_cm_debug(DK_WARN,"8706: p=%d RAM load didn't complete\n", port);
+            }
+        }
+    }
+
+    /* read the microcode revision */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA1A,&ucode_ver));
+ 
+    /* Make sure SPI-ROM load is complete */
+    soc_timeout_init(&to, 600000, 0);
+    do  {
+        if (phyid1 == PHY_ID1_8727) {
+            
+            /* if microcode revision >  0xd101, then use the new method
+             * to check the completion of the SPI-ROM loading
+             */
+            if (ucode_ver < 0xd101) {
+                rv = (READ_PHY8706_GENREG1r(unit, pc, &data16));
+                if (data16 == 0x0AA0 || SOC_FAILURE(rv)) {
+                    break;
+                }
+            } else {
+                rv = READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA1C,&data16);
+                if (data16 == 0x600D || SOC_FAILURE(rv)) {
+                    break;
+                }
+            }
+        } else if (phyid1 == PHY_ID1_8747) {
+            rv = READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA1C,&data16);
+            if (data16 == 0x600D || SOC_FAILURE(rv)) {
+                break;
+            }
+            /* Read from 0xca1a done outside the loop */
+        } else {
+            rv = (READ_PHY8706_GENREG1r(unit, pc, &data16));
+            if ((data16 == 0x1234) || (data16 == 0x4321) || SOC_FAILURE(rv)) {
+                break;
+            }
+        }
+    } while (!soc_timeout_check(&to));
+
+    if (phyid1 == PHY_ID1_8747) {
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc843, 0x000f, 0x000f));
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc840, 0x000c, 0x000c));
+    }
+
+    if (soc_timeout_check(&to) || SOC_FAILURE(rv)) {
+        if (phy_ext_rom_boot) {
+            soc_cm_debug(DK_WARN,"8706: p=%d SPI-ROM load didn't complete (0x%x)\n",
+                    port,data16);
+        } else {
+            soc_cm_debug(DK_WARN,"8706: p=%d RAM boot didn't complete (0x%x)\n",
+                    port,data16);
+        }
+    } else {
+        /* re-read the microcode revision */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA1A,&ucode_ver));
+
+        if (phy_ext_rom_boot) {
+            soc_cm_print("8706: u=%d p=%d external rom boot complete f/w ver. "
+                         "0x%x: init.\n", unit, port,ucode_ver);
+        } else {
+            soc_cm_print("8706: u=%d p=%d internal RAM boot complete f/w ver. "
+                         "0x%x: init.\n", unit, port,ucode_ver);
+        }
+    }
+    if (PHY_IS_CHAINED(unit, port) && (phyid1 == PHY_ID1_8747) 
+                                   && (ucode_ver > 0x050d)) {
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xc842, 0x1000));
+    }
+    SOC_IF_ERROR_RETURN
+        (_bcm8726_pmad_write_en(unit, pc, FALSE));
+
+    /* For rev B: do not initialize any registers and use the default values
+     * if the configuration variable is not set 
+     */
+
+    /* Change XAUI TX Polarity */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_TX_POLARITY_FLIP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) { 
+
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port, 
+                                    spn_PHY_TX_POLARITY_FLIP, 0);
+        } else {  /* rev A */
+            rv = 1;
+        }
+           
+        mask16 = PHY8706_TX_POLARITY_FLIP_MASK;
+        if (rv) {
+            data16 = mask16;
+
+            /* flip all lanes */
+            if (rv == 1) {
+                SOC_IF_ERROR_RETURN
+                    (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TXA_CTRL_REG, 
+                                             data16, mask16));
+
+            } else { /* flip individual lanes */
+                if ((rv & 0x000F) == 0x000F) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TX0_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0x00F0) == 0x00F0) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TX1_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0x0F00) == 0x0F00) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TX2_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0xF000) == 0xF000) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TX3_CTRL_REG, 
+                                                data16, mask16));
+                }
+            }
+        } else {
+            data16 = 0;
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_TXA_CTRL_REG, 
+                                                data16, mask16));
+        }
+    }
+
+    /* Change XAUI RX Polarity */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_RX_POLARITY_FLIP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) {
+ 
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port,
+                                    spn_PHY_RX_POLARITY_FLIP, 0);
+        } else {  /* rev A */
+            rv = 0;
+        }
+
+        mask16 = PHY8706_RX_POLARITY_FLIP_MASK;
+        if (rv) {
+            data16 = mask16;
+
+            /* flip all lanes */
+            if (rv == 1) {
+                SOC_IF_ERROR_RETURN
+                    (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RXA_CTRL_REG, 
+                                            data16, mask16));
+
+            } else { /* flip individual lanes */
+                if ((rv & 0x000F) == 0x000F) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RX0_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0x00F0) == 0x00F0) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RX1_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0x0F00) == 0x0F00) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RX2_CTRL_REG, 
+                                                data16, mask16));
+                }
+                if ((rv & 0xF000) == 0xF000) {
+                    SOC_IF_ERROR_RETURN
+                        (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RX3_CTRL_REG, 
+                                                data16, mask16));
+                }
+            }
+        } else {
+            data16 = 0;
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY8706_XS_REG(unit, pc, PHY8706_RXA_CTRL_REG, 
+                                        data16, mask16));
+        }
+    }
+
+    /* XAUI RX Lane Swap (Lane A, B, C, D changes to Lane D, C, B, A) */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_XAUI_RX_LANE_SWAP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) {
+ 
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port,
+                                    spn_PHY_XAUI_RX_LANE_SWAP, 0);
+        } else {  /* rev A */
+            rv = 1;
+        }
+                                                                                      
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_XS_REG(unit, pc, 0x8100, &data16));
+
+        if (rv) {
+            data16 |= (1 << 15);
+        } else {
+            data16 &= ~(1 << 15);
+        }
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_XS_REG(unit, pc, 0x8100, data16));
+    }
+    
+    /* XAUI TX Lane Swap (Lane A, B, C, D changes to Lane D, C, B, A) */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_XAUI_TX_LANE_SWAP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) {
+ 
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port,
+                                    spn_PHY_XAUI_TX_LANE_SWAP, 0);
+        } else {  /* rev A */
+            rv = 0;
+        }
+
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_XS_REG(unit, pc, 0x8101, &data16));
+        if (rv) {
+            data16 |= (1 << 15);
+        } else {
+            data16 &= ~(1 << 15);
+        }
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_XS_REG(unit, pc, 0x8101, data16));
+    }
+
+    /* Change PCS TX Polarity */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_PCS_TX_POLARITY_FLIP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) {
+ 
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port,
+                                    spn_PHY_PCS_TX_POLARITY_FLIP, 0);
+        } else {  /* rev A */
+            rv = 0;
+        }
+
+        if (IS_8727_TYPE(phyid1)) {
+            reg = 0xcd08;
+        } else {
+            reg = 0xc808;
+        }
+
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, reg, &data16));
+        if (rv) {
+            data16 |= (1 << 10);
+        } else {
+            data16 &= ~(1 << 10);
+        }
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, reg, data16));
+    }
+
+    /* Change PCS RX Polarity */
+
+    str = soc_property_port_get_str(unit, port, spn_PHY_PCS_RX_POLARITY_FLIP); 
+    if ((phyid1 == PHY87X6_REV_A) || (str != NULL)) {
+ 
+        /* always use the configuration if available */
+        if (str != NULL) {
+            rv = soc_property_port_get(unit, port,
+                                    spn_PHY_PCS_RX_POLARITY_FLIP, 0);
+        } else {  /* rev A */
+            rv = 0;
+        }
+
+        if (IS_8727_TYPE(phyid1)) {
+            reg = 0xcd08;
+        } else {
+            reg = 0xc808;
+        }
+
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, reg, &data16));
+
+        if (rv) {
+            data16 |= (1 << 9);
+        } else {
+            data16 &= ~(1 << 9);
+        }
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, reg, data16));
+    }
+
+
+    /* Make sure 8706 XAUI lanes are synchronized with the SOC XAUI */
+    soc_timeout_init(&to, 100000, 0);
+    while (!soc_timeout_check(&to)) {
+        rv = (READ_PHY8706_PHYXS_XGXS_LANE_STATr(unit, pc, &data16));
+        if (((data16 & 0x000f) == 0x000f) || SOC_FAILURE(rv)) {
+            break;
+        }
+    }
+    if ((data16 & 0x000f) != 0x000f) {
+        soc_cm_debug(DK_PHY, "8706: u=%d p=%d XAUI lane out of sync (0x%x)\n",
+                     unit, port, (data16 & 0x000f));
+    }
+
+    /* default value for clause37 advertisement */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_AN_REG(unit, pc, 0xFFE4, MII_ANA_C37_FD));
+
+    if (IS_8727_TYPE(phyid1)) {
+       /* The register 0x7.0x8329 has been moved to 0x7.0x8309 
+          since the microcode ver. D102. This version of microcode
+          is obsolete now.
+        */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_AN_REG(unit, pc, 0x8309, 0));
+    }
+
+    /* fix for PHY-443 */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_XS_REG(unit, pc, 0x8111, 1 << 3, 1 << 3));
+
+    /* Probe for external PHYs connected */
+    if ((phyid1 == PHY87X6_REV_BC) || IS_8727_TYPE(phyid1)) {
+        rv = _8726_nxt_dev_probe(unit, port);
+        if (SOC_SUCCESS(rv)) {
+
+            /* Initialize the next Device */
+            PHYDRV_CALL_NOARG(pc,PHY_INIT);
+        }
+    }
+ 
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_xgxs_cfg_save(int unit, soc_port_t port, XGXS_CFG_t *xgxs_cfg)
+{
+    phy_ctrl_t  *pc;
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_TX0_CTRL_REG,
+                                         &xgxs_cfg->tx_pol_ln0));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_TX1_CTRL_REG,
+                                         &xgxs_cfg->tx_pol_ln1));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_TX2_CTRL_REG,
+                                         &xgxs_cfg->tx_pol_ln2));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_TX3_CTRL_REG,
+                                         &xgxs_cfg->tx_pol_ln3));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_RX0_CTRL_REG,
+                                &xgxs_cfg->rx_pol_ln0));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_RX1_CTRL_REG,
+                                &xgxs_cfg->rx_pol_ln1));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_RX2_CTRL_REG,
+                                &xgxs_cfg->rx_pol_ln2));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, PHY8706_RX3_CTRL_REG,
+                                &xgxs_cfg->rx_pol_ln3));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0x8100,
+                                &xgxs_cfg->rx_ln_swap));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0x8101,
+                                &xgxs_cfg->tx_ln_swap));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_TXA_ACTRL_3r(unit, pc,
+                                &xgxs_cfg->preemph));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0x8111,
+                                &xgxs_cfg->inband_mdio));
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_xgxs_cfg_restore(int unit, soc_port_t port, XGXS_CFG_t *xgxs_cfg)
+{
+    phy_ctrl_t  *pc;
+    pc = EXT_PHY_SW_STATE(unit, port);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_TX0_CTRL_REG,
+                                         xgxs_cfg->tx_pol_ln0));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_TX1_CTRL_REG,
+                                         xgxs_cfg->tx_pol_ln1));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_TX2_CTRL_REG,
+                                         xgxs_cfg->tx_pol_ln2));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_TX3_CTRL_REG,
+                                         xgxs_cfg->tx_pol_ln3));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_RX0_CTRL_REG,
+                                xgxs_cfg->rx_pol_ln0));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_RX1_CTRL_REG,
+                                xgxs_cfg->rx_pol_ln1));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_RX2_CTRL_REG,
+                                xgxs_cfg->rx_pol_ln2));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, PHY8706_RX3_CTRL_REG,
+                                xgxs_cfg->rx_pol_ln3));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, 0x8100,
+                                xgxs_cfg->rx_ln_swap));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, 0x8101,
+                                xgxs_cfg->tx_ln_swap));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_TXA_ACTRL_3r(unit, pc,
+                                xgxs_cfg->preemph));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, 0x8111,
+                                xgxs_cfg->inband_mdio));
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_5942_pd_status_save(int unit, soc_port_t port, PHY5942_CFG_t *phy_5942_cfg)
+{
+    phy_ctrl_t  *pc;
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PHYXS_XGXSBLK0_MISCCONTROL1r(unit, pc,
+               &phy_5942_cfg->xgxsblk0_misccontrol1));
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PHYXS_RX_ALL_RX_CONTROLr(unit, pc,
+               &phy_5942_cfg->rx_all_rx_control));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_5942_pd_status_restore(int unit, soc_port_t port, PHY5942_CFG_t *phy_5942_cfg)
+{
+    phy_ctrl_t  *pc;
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PHYXS_XGXSBLK0_MISCCONTROL1r(unit, pc,
+               phy_5942_cfg->xgxsblk0_misccontrol1));
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PHYXS_RX_ALL_RX_CONTROLr(unit, pc,
+               phy_5942_cfg->rx_all_rx_control));
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_an_get
+ * Purpose:
+ *      Get the current auto-negotiation status (enabled/busy)
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      an   - (OUT) if true, auto-negotiation is enabled.
+ *      an_done - (OUT) if true, auto-negotiation is complete. This
+ *              value is undefined if an == false.
+ * Returns:
+ *      SOC_E_XXX
+ */
+
+STATIC int
+_phy_8706_an_get(int unit, soc_port_t port, int *an, int *an_done)
+{
+    phy_ctrl_t *pc;
+    uint16 an_status;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, 0xffe0, &an_status));
+    *an = (an_status & AN_ENABLE)? TRUE: FALSE;
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, 0xffe1, &an_status));
+    *an_done = (an_status & AN_DONE)? TRUE: FALSE;
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+phy_8706_an_get(int unit, soc_port_t port, int *an, int *an_done)
+{
+    phy_ctrl_t *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG2(pc, PHY_AUTO_NEGOTIATE_GET, an, an_done);
+        return SOC_E_NONE;
+    }
+    SOC_IF_ERROR_RETURN
+        (_phy_8706_an_get(unit, port, an, an_done));
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_an_set
+ * Purpose:
+ *      Enable or disabled auto-negotiation on the specified port.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      an   - Boolean, if true, auto-negotiation is enabled
+ *              (and/or restarted). If false, autonegotiation is disabled.
+ * Returns:
+ *      SOC_E_XXX
+ */
+STATIC int
+phy_8706_an_set(int unit, soc_port_t port, int an)
+{
+    phy_ctrl_t  *pc;
+    XGXS_CFG_t xgxs_cfg;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_DEBUG_PRINT((DK_PHY, "phy_8706_an_set: u=%d p=%d an=%d\n",
+                     unit, port, an));
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc, PHY_AUTO_NEGOTIATE_SET, an);
+        an = 0;
+    }
+
+    /* for 8726 device, switching autoneg On/Off may reset XGXS(device 4).
+     * save/restore the software configuration for XGXS device in this case.
+     */
+    if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_xgxs_cfg_save(unit,port, &xgxs_cfg));
+    }
+
+    if (an) {
+        /* Allow Clause 37 through Clause 73 */
+        if ((pc->phy_id1 == PHY87X6_REV_BC) || 
+            (pc->phy_id1 == PHY87X6_REV_A)) {
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x8370,0x040c));
+        } 
+
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_CTRLr(unit, pc, 0x0040));
+                                      
+
+        /* Enable Clause 37 AN */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_AN_REG(unit, pc, 0xFFE0, 0x1300));
+
+        if (IS_8727_TYPE(pc->phy_id1)) {
+           /* The register 0x7.0x8329 has been moved to 0x7.0x8309 
+              since the microcode ver. D102. This version of microcode
+              is obsolete now.
+            */
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x8309, 0));
+        }
+
+        /* re-starts the 1G CDR in autoneg mode */
+        if ((pc->phy_id1 == PHY87X6_REV_BC) || 
+            (pc->phy_id1 == PHY87X6_REV_A)) {
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x80F1, 0x9C40));
+
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x80F1, 0x1C40));
+
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, AN_CTRL_REG,
+                          AN_EXT_NXT_PAGE | AN_ENABLE | AN_RESTART));
+                          
+        }
+    } else {
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_CTRLr(unit, pc, 0x2040));
+
+        if (IS_8727_TYPE(pc->phy_id1)) {
+           /* The register 0x7.0x8329 has been moved to 0x7.0x8309 
+              since the microcode ver. D102. This version of microcode
+              is obsolete now.
+            */
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, 0x8309, 0x0020));
+        }
+
+        /* disable Clause 37 AN */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_AN_REG(unit, pc, 0xFFE0, 0));
+
+        if ((pc->phy_id1 == PHY87X6_REV_A) || 
+            (pc->phy_id1 == PHY87X6_REV_BC)) {
+            SOC_IF_ERROR_RETURN
+                (WRITE_PHY8706_AN_REG(unit, pc, AN_CTRL_REG, 0x0));
+        }
+    }
+
+    if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_xgxs_cfg_restore(unit,port, &xgxs_cfg));
+    }
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_ability_advert_get
+ * Purpose:
+ *      Get the current advertisement for auto-negotiation.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      mode - (OUT) Port mode mask indicating supported options/speeds.
+ * Returns:
+ *      SOC_E_XXX
+ * Notes:
+ *      The advertisement is retrieved for the ACTIVE medium.
+ *      No synchronization performed at this level.
+ */
+
+STATIC int
+phy_8706_ability_advert_get(int unit, soc_port_t port,
+                           soc_port_ability_t *ability)
+{
+    uint16           an_adv;
+    soc_port_mode_t  mode;
+    phy_ctrl_t      *pc;
+
+    if (NULL == ability) {
+        return (SOC_E_PARAM);
+    }
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_ABILITY_ADVERT_GET,ability);
+        return SOC_E_NONE;
+    }
+                                          
+    /* Clause73 advert register 1 */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, 0x11, &an_adv));
+
+    mode = 0;
+    mode |= (an_adv & 0x20) ? SOC_PA_SPEED_1000MB : 0;
+
+    /* check Full Duplex advertisement on Clause 37 */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, 0xFFE4,&an_adv));
+    mode |= (an_adv & MII_ANA_C37_FD) ? SOC_PA_SPEED_1000MB : 0;
+
+    ability->speed_full_duplex = mode;
+    ability->pause = 0;
+
+    switch (an_adv & (MII_ANA_C37_PAUSE | MII_ANA_C37_ASYM_PAUSE)) {
+        case MII_ANA_C37_PAUSE:
+            ability->pause = SOC_PA_PAUSE_TX | SOC_PA_PAUSE_RX;
+            break;
+        case MII_ANA_C37_ASYM_PAUSE:
+            ability->pause = SOC_PA_PAUSE_TX;
+            break;
+        case MII_ANA_C37_PAUSE | MII_ANA_C37_ASYM_PAUSE:
+            ability->pause = SOC_PA_PAUSE_RX;
+            break;
+    }
+
+    SOC_DEBUG_PRINT((DK_PHY,
+        "phy_8706_ability_advert_get: u=%d p=%d speed(FD)=0x%x pause=0x%x\n",
+        unit, port, ability->speed_full_duplex, ability->pause));
+    return SOC_E_NONE;
+}
+
+/*
+* Function:
+*      phy_8706_ability_remote_get
+* Purpose:
+*      Get the device's complete abilities.
+* Parameters:
+*      unit - StrataSwitch unit #.
+*      port - StrataSwitch port #.
+*      ability - return device's abilities.
+* Returns:
+*      SOC_E_XXX
+*/
+
+STATIC int
+phy_8706_ability_remote_get(int unit, soc_port_t port, 
+                            soc_port_ability_t *ability)
+{
+    phy_ctrl_t *pc;
+    uint16      lp_abil;
+
+    if (NULL == ability) {
+        return SOC_E_PARAM;
+    }
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+                                           
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_ABILITY_REMOTE_GET,ability);
+        return SOC_E_NONE;
+    }
+                                          
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, 0xFFE5, &lp_abil));
+    ability->speed_full_duplex  = (lp_abil & MII_ANA_C37_FD) ? 
+                                   SOC_PA_SPEED_1000MB : 0;
+
+    ability->pause = 0;
+    switch (lp_abil & (MII_ANP_C37_PAUSE | MII_ANP_C37_ASYM_PAUSE)) {
+        case MII_ANP_C37_PAUSE:
+            ability->pause = SOC_PA_PAUSE_TX | SOC_PA_PAUSE_RX;
+            break;
+        case MII_ANP_C37_ASYM_PAUSE:
+            ability->pause = SOC_PA_PAUSE_TX;
+            break;
+        case MII_ANP_C37_PAUSE | MII_ANP_C37_ASYM_PAUSE:
+            ability->pause = SOC_PA_PAUSE_RX;
+            break;
+    }
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_AN_REG(unit, pc, AN_STATUS_REG, &lp_abil));
+    ability->flags     = (lp_abil & 0x1) ? SOC_PA_AUTONEG : 0;
+
+    SOC_DEBUG_PRINT((DK_PHY,
+        "phy_8706_ability_remote_get: u=%d p=%d speed(FD)=0x%x pause=0x%x\n",
+        unit, port, ability->speed_full_duplex, ability->pause));
+
+    return (SOC_E_NONE);
+}
+
+/*
+ * Function:
+ *      phy_8706_ability_advert_set
+ * Purpose:
+ *      Set the current advertisement for auto-negotiation.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      mode - Port mode mask indicating supported options/speeds.
+ * Returns:
+ *      SOC_E_XXX
+ * Notes:
+ *      The advertisement is set only for the ACTIVE medium.
+ *      No synchronization performed at this level.
+ */
+
+STATIC int
+phy_8706_ability_advert_set(int unit, soc_port_t port,
+                       soc_port_ability_t *ability)
+{
+    uint16           an_adv;
+    phy_ctrl_t      *pc;                                                                                  
+    if (NULL == ability) {
+        return (SOC_E_PARAM);
+    }
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_ABILITY_ADVERT_SET,ability);
+        return SOC_E_NONE;
+    }
+
+    /*
+     * Set advertised duplex (only FD supported).
+     */
+    an_adv =  (ability->speed_full_duplex & SOC_PA_SPEED_1000MB) ? 0x20 : 0;
+
+    /* CL73 advert register 1, advertising 1G only */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_AN_REG(unit, pc, 0x11, an_adv));
+
+    an_adv =  (ability->speed_full_duplex & SOC_PA_SPEED_1000MB) ? 
+               MII_ANA_C37_FD : 0;
+
+    switch (ability->pause & (SOC_PA_PAUSE_TX | SOC_PA_PAUSE_RX)) {
+        case SOC_PA_PAUSE_TX:
+            an_adv |= MII_ANA_C37_ASYM_PAUSE;
+            break;
+        case SOC_PA_PAUSE_RX:
+            an_adv |= MII_ANA_C37_ASYM_PAUSE | MII_ANA_C37_PAUSE;
+            break;
+        case SOC_PA_PAUSE_TX | SOC_PA_PAUSE_RX:
+            an_adv |= MII_ANA_C37_PAUSE;
+            break;
+    }
+
+    /* write Clause37 advertisement */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_AN_REG(unit, pc, 0xFFE4, an_adv, 
+                              MII_ANA_C37_ASYM_PAUSE | 
+                              MII_ANA_C37_PAUSE |
+                              MII_ANA_C37_FD |
+                              MII_ANA_C37_HD ));
+
+    SOC_DEBUG_PRINT((DK_PHY,
+        "phy_8706_ability_advert_set: u=%d p=%d pause=0x%08x adv_reg1=0x%04x\n",
+        unit, port, ability->pause, an_adv));
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_ability_local_get
+ * Purpose:
+ *      Get the device's complete abilities.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      ability - return device's abilities.
+ * Returns:
+ *      SOC_E_XXX
+ */
+
+STATIC int
+phy_8706_ability_local_get(int unit, soc_port_t port, soc_port_ability_t *ability)
+{
+    phy_ctrl_t *pc;
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+
+    SOC_DEBUG_PRINT((DK_PHY,
+                     "phy_8706_ability_local_get: u=%d p=%d\n",
+                     unit, port));
+                                                                               
+    if (NULL == ability) {
+        return SOC_E_PARAM;
+    }
+
+    ability->speed_half_duplex  = SOC_PA_ABILITY_NONE;
+    ability->speed_full_duplex  = SOC_PA_SPEED_1000MB;
+                                                                               
+    switch(pc->speed_max) {
+        case 10000:
+        default:
+            ability->speed_full_duplex |= SOC_PA_SPEED_10GB;
+    }
+                                                                               
+    ability->pause     = SOC_PA_PAUSE | SOC_PA_PAUSE_ASYMM; 
+    ability->interface = SOC_PA_INTF_XGMII;
+    ability->medium    = SOC_PA_MEDIUM_FIBER;
+    ability->loopback  = SOC_PA_LB_PHY;
+    ability->flags     = SOC_PA_AUTONEG;
+                                                                               
+    SOC_DEBUG_PRINT((DK_PHY,
+        "phy_8706_ability_local_get: u=%d p=%d speed=0x%x\n",
+        unit, port, ability->speed_full_duplex));
+                                                                               
+    return (SOC_E_NONE);
+}
+
+/*
+ * Function:
+ *    phy_8706_link_get
+ * Purpose:
+ *    Get layer2 connection status.
+ * Parameters:
+ *    unit - StrataSwitch unit #.
+ *    port - StrataSwitch port #. 
+ *      link - address of memory to store link up/down state.
+ * Returns:    
+ *    SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_link_get(int unit, soc_port_t port, int *link)
+{
+    uint16      pma_mii_stat, pcs_mii_stat, link_stat;
+    phy_ctrl_t *pc;
+    int cur_speed = 0;
+    int an,an_done;
+    uint16 speed_val; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    _phy_8706_an_get(unit,port,&an,&an_done);
+
+    /* return link false if in the middle of autoneg */
+    if (an == TRUE && an_done == FALSE) {
+        *link = FALSE;
+        return SOC_E_NONE;
+    }
+
+    /* AN only supports 1G */
+    if (!an) {
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG, &speed_val));
+        if ((speed_val & PMAD_CTRL2r_PMA_TYPE_MASK) !=
+                                           PMAD_CTRL2r_PMA_TYPE_1G_KX) {
+            cur_speed = 10000;
+        }
+    } else {
+        cur_speed = 1000;
+    }
+
+    if (cur_speed == 10000) { /* check all 3 device's link status if 10G */
+
+        /* Receive Link status */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PCS_STATr(unit, pc, &pcs_mii_stat));
+
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_STATr(unit, pc, &pma_mii_stat));
+
+        link_stat = pma_mii_stat & pcs_mii_stat;
+
+        *link = (link_stat & MII_STAT_LA) ? TRUE : FALSE;
+    } else {
+        /* in 1G mode, the PMA/PMD and PCS status register's link bit always
+         * show link down.
+         */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_AN_REG(unit, pc, AN_1G_STATUS_REG, &link_stat));
+        if ((link_stat & AN_1G_LINKUP) &&
+            (!(link_stat & AN_1G_LINK_CHANGE)) ) {
+            *link = TRUE;
+        } else {
+            *link = FALSE;
+        }
+    } 
+
+    soc_cm_debug(DK_PHY | DK_VERBOSE,
+         "_phy_8706_link_get: u=%d port%d: link:%s\n",
+         unit, port, *link ? "Up": "Down");
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_5942_link_get(int unit, soc_port_t port, int *link)
+{
+    phy_ctrl_t *pc; 
+    uint16      xgxsstatus1, status1000x1;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PHYXS_GP_STATUS_XGXSSTATUS1r(unit, pc, &xgxsstatus1));
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PHYXS_GP_STATUS_STATUS1000X1r(unit, pc, &status1000x1));
+
+    *link =  ((xgxsstatus1 & (1U << 9)) | (status1000x1 & (1U << 1))) ? 1 : 0;
+
+    soc_cm_debug(DK_PHY | DK_VERBOSE,
+         "_phy_5942_link_get: u=%d port%d: link:%s\n",
+         unit, port, *link ? "Up": "Down");
+
+    return SOC_E_NONE;
+}
+
+
+STATIC int
+phy_8706_link_get(int unit, soc_port_t port, int *link)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (link == NULL) {
+        return SOC_E_NONE;
+    }
+
+    if (PHY_FLAGS_TST(unit, port, PHY_FLAGS_DISABLE)) {
+        *link = FALSE;
+        return SOC_E_NONE;
+    }
+
+    if (PHY_IS_BCM5942(pc)) {
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_link_get(unit, port, link));
+    } else {
+        int down_link;
+        if (NXT_PC(pc)) {
+            PHYDRV_CALL_ARG1(pc, PHY_LINK_GET, &down_link);
+            /* assumes that the above routine returns a latched link status */
+
+            if (down_link && (down_link != CACHED_DOWN_LINK(pc))) {
+                int down_speed;
+                PHYDRV_CALL_ARG1(pc, PHY_SPEED_GET, &down_speed);
+                SOC_IF_ERROR_RETURN
+                    (_phy_8706_speed_set(unit, port, down_speed));
+            }
+            CACHED_DOWN_LINK(pc) = down_link;
+            if ( !down_link ) {
+                *link = FALSE;
+                return SOC_E_NONE;
+            }
+        }
+
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_link_get(unit, port, link));
+    }
+
+    return SOC_E_NONE;
+
+}
+
+
+/*
+ * Function:
+ *    phy_8706_enable_set
+ * Purpose:
+ *    Enable/Disable phy 
+ * Parameters:
+ *    unit - StrataSwitch unit #.
+ *    port - StrataSwitch port #. 
+ *      enable - on/off state to set
+ * Returns:    
+ *    SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_enable_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_TX_DISABLEr(unit, pc, enable ? 0 : (1U << 0), (1U << 0)));
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_ENABLE_SET,enable);
+    }
+
+    return (SOC_E_NONE);
+}
+
+STATIC int
+_phy_5942_enable_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* disable the Tx */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PHYXS_XGXSBLK0_MISCCONTROL1r(unit, pc,
+               enable? 0:XGXSBLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_MASK,
+               XGXSBLK0_MISCCONTROL1_GLOBAL_PMD_TX_DISABLE_MASK));
+
+    /* disable the Rx */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PHYXS_RX_ALL_RX_CONTROLr(unit, pc,
+               enable? 0:DSC_2_0_DSC_CTRL0_RXSEQSTART_MASK,
+               DSC_2_0_DSC_CTRL0_RXSEQSTART_MASK));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+phy_8706_enable_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (enable) {
+        PHY_FLAGS_CLR(unit, port, PHY_FLAGS_DISABLE);
+    } else {
+        PHY_FLAGS_SET(unit, port, PHY_FLAGS_DISABLE);
+    }
+
+    if (PHY_IS_BCM5942(pc)) {
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_enable_set(unit, port, enable));
+    } else {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_enable_set(unit, port, enable));
+    }
+
+    return SOC_E_NONE;
+
+}
+
+
+/*
+ * Function:
+ *    phy_8706_lb_set
+ * Purpose:
+ *    Put 8706 in PHY PCS/PMA/PMD loopback
+ * Parameters:
+ *    unit - StrataSwitch unit #.
+ *    port - StrataSwitch port #. 
+ *      enable - binary value for on/off (1/0)
+ * Returns:    
+ *    SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_lb_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc; 
+    uint16     tmp;
+    int  speed;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_LOOPBACK_SET,enable);
+        return SOC_E_NONE;
+    }
+
+
+    /* loopback may not supported in the passthru mode on this phy.
+     * So loopback from internal phy
+     */
+
+    SOC_IF_ERROR_RETURN
+        (_phy_8706_speed_get(unit,port,&speed));
+
+    if (speed < 10000) {
+        phy_ctrl_t    *int_pc;   /* PHY software state */
+        int rv;
+                                                               
+        int_pc = INT_PHY_SW_STATE(unit, port);
+                                                                                
+        if (NULL != int_pc) {
+                rv = (PHY_LOOPBACK_SET(int_pc->pd, unit, port, enable));
+            } else {
+                rv = SOC_E_INTERNAL;
+            }
+    return rv;
+    }
+
+#if defined(PHY_8706_PCS_LOOPBACK)
+    tmp = enable ? MII_CTRL_LE : 0;
+
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PCS_CTRLr(unit, pc, tmp, MII_CTRL_LE));
+#endif /* PHY_8706_PCS_LOOPBACK */
+
+#if defined(PHY_8706_PMA_PMD_LOOPBACK)
+    tmp = enable ? MII_CTRL_PMA_LOOPBACK : 0;
+
+    SOC_IF_ERROR_RETURN
+        (_bcm8726_pmad_write_en(unit,pc, TRUE));
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_CTRLr(unit, pc,
+                                      tmp, MII_CTRL_PMA_LOOPBACK));
+    SOC_IF_ERROR_RETURN
+        (_bcm8726_pmad_write_en(unit, pc, FALSE));
+#endif /* PHY_8706_PMA_PMD_LOOPBACK */
+
+#if defined(PHY_8706_SYSTEM_LOOPBACK)
+
+   tmp = enable? XGXS_MODE_SYSTEM_LOOPBACK | XGXS_CTRL_RLOOP
+         :XGXS_MODE_NORMAL;
+   SOC_IF_ERROR_RETURN
+       (MODIFY_PHY8706_XS_REG(unit,pc,XGXS_MODE_CTRLr,
+                     tmp,
+                     XGXS_MODE_MASK | XGXS_CTRL_RLOOP));
+
+#endif /* PHY_8706_SYSTEM_LOOPBACK */
+
+#if defined(PHY_8706_XAUI_LOOPBACK)
+   SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0x8000, &tmp));
+    tmp &= ~(0xf << 8);
+    tmp |= ((enable) ? 6 : 1) << 8;
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, 0x8000, tmp));
+
+    tmp = (enable) ? (0x00f0) : (0x0000);
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_XS_REG(unit, pc, 0x8017, tmp));
+#endif /* PHY_8706_XAUI_LOOPBACK */
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_5942_lb_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_XS_REG(unit, pc, 0, enable ? (1U << 14) : 0, (1U << 14)));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+phy_8706_lb_set(int unit, soc_port_t port, int enable)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (PHY_IS_BCM5942(pc)) {
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_lb_set(unit, port, enable));
+    } else {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_lb_set(unit, port, enable));
+    }
+
+    return SOC_E_NONE;
+
+}
+
+/*
+ * Function:
+ *    phy_8706_lb_get
+ * Purpose:
+ *    Get 8706 PHY loopback state
+ * Parameters:
+ *    unit - StrataSwitch unit #.
+ *    port - StrataSwitch port #. 
+ *      enable - address of location to store binary value for on/off (1/0)
+ * Returns:    
+ *    SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_lb_get(int unit, soc_port_t port, int *enable)
+{
+    uint16      tmp;
+    phy_ctrl_t *pc;
+    int  speed;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_LOOPBACK_GET,enable);
+        return SOC_E_NONE;
+    }
+
+
+    SOC_IF_ERROR_RETURN
+        (_phy_8706_speed_get(unit,port,&speed));
+
+    if (speed < 10000) {
+        phy_ctrl_t    *int_pc;   /* PHY software state */
+        int rv;
+                                                                                
+        int_pc = INT_PHY_SW_STATE(unit, port);
+                                                                                
+        if (NULL != int_pc) {
+                rv = (PHY_LOOPBACK_GET(int_pc->pd, unit, port, enable));
+            } else {
+                rv = SOC_E_INTERNAL;
+            }
+    return rv;
+    }
+
+#if defined(PHY_8706_PCS_LOOPBACK)
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PCS_CTRLr(unit, pc, &tmp));
+
+    *enable = (tmp & MII_CTRL_LE) ? TRUE : FALSE;
+#endif /* PHY_8706_PCS_LOOPBACK */
+
+#if defined(PHY_8706_PMA_PMD_LOOPBACK)
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_CTRLr(unit, pc, &tmp));
+
+    *enable = (tmp & MII_CTRL_PMA_LOOPBACK) ? TRUE : FALSE;
+#endif /* PHY_8706_PMA_PMD_LOOPBACK */
+
+#if defined(PHY_8706_SYSTEM_LOOPBACK)
+   SOC_IF_ERROR_RETURN
+       (READ_PHY8706_XS_REG(unit,pc,XGXS_MODE_CTRLr,&tmp));
+   *enable = (tmp & XGXS_MODE_MASK)? FALSE:TRUE;
+
+#endif /* PHY_8706_SYSTEM_LOOPBACK */
+
+#if defined(PHY_8706_XAUI_LOOPBACK)
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0x8000, &tmp));
+    *enable = ((tmp & (0xf << 8)) == (6 << 8));
+#endif /* PHY_8706_XAUI_LOOPBACK */
+
+    soc_cm_debug(DK_PHY,
+         "phy_8706_lb_get: u=%d port%d: loopback:%s\n",
+         unit, port, *enable ? "Enabled": "Disabled");
+    
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_5942_lb_get(int unit, soc_port_t port, int *enable)
+{
+    phy_ctrl_t *pc; 
+    uint16 tmp;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_XS_REG(unit, pc, 0, &tmp));
+
+    *enable = tmp & (1U << 14) ? TRUE : FALSE;
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+phy_8706_lb_get(int unit, soc_port_t port, int *enable)
+{
+    phy_ctrl_t *pc; 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (PHY_IS_BCM5942(pc)) {
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_lb_get(unit, port, enable));
+    } else {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_lb_get(unit, port, enable));
+    }
+
+    return SOC_E_NONE;
+
+}
+
+STATIC int
+_phy_8706_bit_order_msb2lsb(uint16 data, int len)
+{
+    int i;
+    uint16 new_data = 0;
+
+    for (i = len - 1; i >= 0; i--) {
+        if (data & (1 << (len - 1 - i))) {
+            new_data += (1 << i);
+        }
+    }
+    return new_data;
+}
+
+
+STATIC int
+_phy_8706_control_tx_driver_set(int unit, soc_port_t port,
+                                soc_phy_control_t type, uint32 value)
+{
+    uint16       data;  /* Temporary holder of reg value to be written */
+    uint16       mask;  /* Bit mask of reg value to be updated */
+    phy_ctrl_t  *pc;    /* PHY software state */
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* Dozen SerDes */
+    switch(type) {
+    case SOC_PHY_CONTROL_PREEMPHASIS:
+         data = (uint16)(value & 0xf);
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             data = _phy_8706_bit_order_msb2lsb(data,4);
+         }
+         data = data << 12;
+         mask = 0xf000;
+         break;
+    case SOC_PHY_CONTROL_DRIVER_CURRENT:
+         data = (uint16)(value & 0xf);
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             data = _phy_8706_bit_order_msb2lsb(data,4);
+         }
+         data = data << 8;
+         mask = 0x0f00;
+         break;
+    case SOC_PHY_CONTROL_PRE_DRIVER_CURRENT:
+         data = (uint16)(value & 0xf);
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             data = _phy_8706_bit_order_msb2lsb(data,4);
+         }
+         data = data << 4;
+         mask = 0x00f0;
+         break;
+    default:
+         /* should never get here */
+         return SOC_E_PARAM;
+    }
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_TXA_ACTRL_3r(unit, pc, data, mask));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_control_tx_driver_get(int unit, soc_port_t port,
+                                soc_phy_control_t type, uint32 *value)
+{
+    uint16         data16;   /* Temporary holder of a reg value */
+    phy_ctrl_t    *pc;       /* PHY software state */
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    data16 = 0;
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_TXA_ACTRL_3r(unit, pc, &data16));
+    switch(type) {
+    case SOC_PHY_CONTROL_PREEMPHASIS:
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             *value = _phy_8706_bit_order_msb2lsb((data16 & 0xf000) >> 12,4);
+         } else {
+             *value = (data16 & 0xf000) >> 12;
+         }
+         break;
+    case SOC_PHY_CONTROL_DRIVER_CURRENT:
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             *value = _phy_8706_bit_order_msb2lsb((data16 & 0x0f00) >> 8,4);
+         } else {
+             *value = (data16 & 0x0f00) >> 8;
+         }
+         break;
+    case SOC_PHY_CONTROL_PRE_DRIVER_CURRENT:
+         if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+             *value = _phy_8706_bit_order_msb2lsb((data16 & 0x00f0) >> 4,4);
+         } else {
+             *value = (data16 & 0x00f0) >> 4;
+         }
+         break;
+    default:
+         /* should never get here */
+         return SOC_E_PARAM;
+    }
+
+    return SOC_E_NONE;
+}
+
+
+STATIC int
+_phy_8706_edc_mode_select(int unit, soc_port_t port, int *mode) 
+{
+    int edc_mode;
+    uint8          eeprom[128];
+
+    /* read module's eeprom */
+    SOC_IF_ERROR_RETURN
+        (phy_8727_i2cdev_read(unit,port,EEPROM_I2C_ADDR,0,128,eeprom));
+
+    /* checks whether the module is either SFP or SFP+, addr0=(03h). */
+    if (eeprom[SFP_ID] == SFP_TYPE_SFP_PLUS) {
+        if (eeprom[SFP_TRCVER_CODE0] & SFP_TRCVER_10G_LRM) {
+            /* set edc mode 22 */
+            edc_mode = 0x22;
+        } else if (eeprom[SFP_TRCVER_CODE0] & (SFP_TRCVER_10G_ER |
+              SFP_TRCVER_10G_LR | SFP_TRCVER_10G_SR)) {
+            /* set edc mode 44 */
+            edc_mode = 0x44;
+        } else {
+            /* go check for CX1 cable */
+            if ((eeprom[SFP_TRCVER_CODE5] & SFP_TRCVER_PASSIVE_CABLE) &&
+                (eeprom[60] & SFP_8431_COMPLIANCE)) {
+                    /* set mode to 55 */
+                    edc_mode = 0x55;
+            } else if ((eeprom[SFP_TRCVER_CODE5] & SFP_TRCVER_ACTIVE_CABLE) &&
+                (eeprom[60] & SFP_8431_LIMITED_COMPLIANCE)) {
+                    /* set EDC 44 */
+                    edc_mode = 0x44;
+            } else if ((eeprom[SFP_TRCVER_CODE5] & SFP_TRCVER_ACTIVE_CABLE) &&
+                (eeprom[60] & SFP_8431_APPENDIX_E_COMPLIANCE)) {
+                    /* set EDC 55 */
+                    edc_mode = 0x55;
+            } else {
+                /* check for 1G module */
+                if (eeprom[SFP_TRCVER_CODE3] & (SFP_TRCVER_1000BASE_T |
+                    SFP_TRCVER_1000BASE_CX | SFP_TRCVER_1000BASE_LX |
+                    SFP_TRCVER_1000BASE_SX)) {
+                    /* set mode 11 */
+                    edc_mode = 0x11;
+                } else {
+                    /* set mode to 55 */
+                    edc_mode = 0x55;
+                }
+            }
+        }
+    } else {
+        /* set EDC mode 55 (CX1 passive) */
+        edc_mode = 0x55;
+    }
+    *mode = edc_mode;
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_control_edc_mode_set(int unit, soc_port_t port, uint32 value)
+{
+    uint16         data16;   
+    uint16         mask16;   
+    phy_ctrl_t    *pc;       /* PHY software state */
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* EDC mode programming sequence*/
+    mask16 = 1 << 9;
+
+    /* induce LOS condition: toggle register bit 0xc800.9 */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit,pc, 0xC800,&data16));
+    /* only change toggled bit 9 */ 
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xC800,~data16,mask16));
+
+    /* program EDC mode */
+    SOC_IF_ERROR_RETURN
+      (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xCA1A,(uint16)value,
+                                  PHY_8727_EDC_MODE_MASK));
+
+    /* remove LOS condition: restore back original value of bit 0xc800.9 */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xC800,data16,mask16));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_control_edc_mode_get(int unit, soc_port_t port, uint32 *value)
+{
+    uint16         data16;
+    phy_ctrl_t    *pc;       /* PHY software state */
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* program EDC mode */
+    SOC_IF_ERROR_RETURN
+      (READ_PHY8706_PMA_PMD_REG(unit,pc, 0xCA1A,&data16));
+
+    *value = data16 & PHY_8727_EDC_MODE_MASK;  
+    return SOC_E_NONE; 
+}
+
+STATIC int
+_phy_8706_control_edc_config(int unit, soc_port_t port, uint32 value)
+{
+    uint16         data16;   
+    uint16         mask16;   
+    phy_ctrl_t    *pc;       /* PHY software state */
+    int edc_mode;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+   
+    mask16 = PHY_8727_EDC_AUTO_CONFIG_MASK;
+    if (value == SOC_PHY_CONTROL_EDC_CONFIG_NONE) {
+
+        /* disable hardware EDC auto config */
+        data16 = 0;
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xC82B,data16,mask16));
+        return SOC_E_NONE;
+
+    } else if (value == SOC_PHY_CONTROL_EDC_CONFIG_HARDWARE) {
+
+       /* enable hardware EDC auto configuration */
+        data16 = mask16;
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xC82B,data16,mask16));
+        return SOC_E_NONE;
+
+    } else if (value == SOC_PHY_CONTROL_EDC_CONFIG_SOFTWARE) {
+
+        /* disable auto config, perform software EDC config */
+        data16 = 0;
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, 0xC82B,data16,mask16));
+
+        /* figure out the proper EDC mode based on module's type */
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_edc_mode_select(unit,port,&edc_mode));
+
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_control_edc_mode_set(unit,port,edc_mode));
+        return SOC_E_NONE;
+
+    }  else {
+        return SOC_E_PARAM;
+    }
+}
+
+STATIC int
+_phy_8706_control_edc_config_get(int unit, soc_port_t port, uint32 *value)
+{
+    uint16         data16;   
+    phy_ctrl_t    *pc;       /* PHY software state */
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit,pc, 0xC82B,&data16));
+    if (data16 & PHY_8727_EDC_AUTO_CONFIG_MASK) {
+        *value = SOC_PHY_CONTROL_EDC_CONFIG_HARDWARE;
+    } else {
+        *value = SOC_PHY_CONTROL_EDC_CONFIG_NONE;
+    }
+    return SOC_E_NONE;
+}
+STATIC int
+_phy_8706_control_linkdown_transmit_set(int unit, soc_port_t port, 
+                                         uint32 value)
+{
+    uint16        data;
+    uint16        speed, speed_val;
+    phy_ctrl_t    *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG, &speed_val));
+    speed = ((speed_val & PMAD_CTRL2r_PMA_TYPE_MASK) == 
+            PMAD_CTRL2r_PMA_TYPE_1G_KX) ? 1000 : 10000;
+
+
+    if (speed == 10000) {
+        /* link partner will not receive due to fault detection */
+        return SOC_E_UNAVAIL;
+    }
+
+    if (value) {
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_READ(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PHYXS, 
+                                                    0x8301),
+                              &data));
+        data |= 0x0020;
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_WRITE(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PHYXS, 
+                                                    0x8301),
+                              data));
+
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_READ(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_AN, 
+                                                    0x8301),
+                              &data));
+        data |= 0x0020;
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_WRITE(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_AN, 
+                                                    0x8301),
+                              data));
+    } else {
+        
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_READ(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PHYXS, 
+                                                    0x8301),
+                              &data));
+        data &= ~0x0020;
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_WRITE(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PHYXS, 
+                                                    0x8301),
+                              data));
+
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_READ(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_AN, 
+                                                    0x8301),
+                              &data));
+        data &= ~0x0020;
+        SOC_IF_ERROR_RETURN
+            (PHY8706_REG_WRITE(unit, pc, 
+                              SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_AN, 
+                                                    0x8301),
+                              data));
+
+    }
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8706_control_linkdown_transmit_get(int unit, soc_port_t port, 
+                                        uint32 *value)
+{
+    uint16        data;
+    uint16        speed, speed_val;
+    phy_ctrl_t    *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG, &speed_val));
+    speed = ((speed_val & PMAD_CTRL2r_PMA_TYPE_MASK) == 
+            PMAD_CTRL2r_PMA_TYPE_1G_KX) ? 1000 : 10000;
+
+    if (speed == 10000) {
+        /* 10G transmits regardless of link */
+        return SOC_E_UNAVAIL;
+    }
+
+    SOC_IF_ERROR_RETURN
+        (PHY8706_REG_READ(unit, pc, 
+                          SOC_PHY_CLAUSE45_ADDR(PHY8706_C45_DEV_PHYXS, 
+                                                0x8301),
+                          &data));
+    *value = (data & 0x0020) ? 1 : 0;
+
+    return SOC_E_NONE;
+}
+
+
+/*
+ * Function:
+ *      phy_8706_control_set
+ * Purpose:
+ *      Configure PHY device specific control fucntion.
+ * Parameters:
+ *      unit  - StrataSwitch unit #.
+ *      port  - StrataSwitch port #.
+ *      type  - Control to update
+ *      value - New setting for the control
+ * Returns:
+ *      SOC_E_NONE
+ */
+STATIC int
+phy_8706_control_set(int unit, soc_port_t port,
+                     soc_phy_control_t type, uint32 value)
+{
+    int rv;
+    phy_ctrl_t    *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if ((type < 0) || (type >= SOC_PHY_CONTROL_COUNT)) {
+        return SOC_E_PARAM;
+    }
+
+    rv = SOC_E_UNAVAIL;
+    switch(type) {
+    case SOC_PHY_CONTROL_PREEMPHASIS:
+        /* fall through */
+    case SOC_PHY_CONTROL_DRIVER_CURRENT:
+        /* fall through */
+    case SOC_PHY_CONTROL_PRE_DRIVER_CURRENT:
+        rv = _phy_8706_control_tx_driver_set(unit, port, type, value);
+        break;
+    case SOC_PHY_CONTROL_EDC_CONFIG:
+        rv = _phy_8706_control_edc_config(unit,port,value);
+        break;
+    case SOC_PHY_CONTROL_EDC_MODE:
+        rv = _phy_8706_control_edc_mode_set(unit,port,value);
+        break;
+    case SOC_PHY_CONTROL_LINKDOWN_TRANSMIT:
+        rv = _phy_8706_control_linkdown_transmit_set(unit, port, value);
+        break;
+    case SOC_PHY_CONTROL_CLOCK_ENABLE:
+        if (pc->phy_id1 == PHY_ID1_8747) {
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCACE, value ? (0x1 << 14) : 0, (0x3 << 14)));
+        } else {
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCA23, value ? (0x1 << 10) : 0, (0x1 << 10)));
+        }
+        rv = SOC_E_NONE;
+        break;
+    case SOC_PHY_CONTROL_CLOCK_FREQUENCY:
+        if (pc->phy_id1 == PHY_ID1_8747) {
+            uint16 freq;
+            switch (value) {
+            case 125000:
+                freq = 0x1;
+                break;
+            case 195312:
+                freq = 0x2;
+                break;
+            case 156250:
+                freq = 0x3;
+                break;
+            default:
+                freq = 0x0;
+                break;
+            } 
+            SOC_IF_ERROR_RETURN
+                (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCACE, (freq << 14), (0x3 << 14)));
+            rv = SOC_E_NONE;
+        } else {
+            rv = SOC_E_UNAVAIL;
+        }
+        break;
+    default:
+        rv = SOC_E_UNAVAIL;
+        break;
+    }
+    return rv;
+}
+/*
+ * Function:
+ *      phy_8706_control_get
+ * Purpose:
+ *      Get current control settign of the PHY.
+ * Parameters:
+ *      unit  - StrataSwitch unit #.
+ *      port  - StrataSwitch port #.
+ *      type  - Control to update
+ *      value - (OUT)Current setting for the control
+ * Returns:
+ *      SOC_E_NONE
+ */
+STATIC int
+phy_8706_control_get(int unit, soc_port_t port,
+                     soc_phy_control_t type, uint32 *value)
+{
+    int rv;
+    phy_ctrl_t    *pc;
+    uint16 temp16;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if ((type < 0) || (type >= SOC_PHY_CONTROL_COUNT)) {
+        return SOC_E_PARAM;
+    }
+
+    rv = SOC_E_UNAVAIL;
+    switch(type) {
+    case SOC_PHY_CONTROL_PREEMPHASIS:
+        /* fall through */
+    case SOC_PHY_CONTROL_DRIVER_CURRENT:
+        /* fall through */
+    case SOC_PHY_CONTROL_PRE_DRIVER_CURRENT:
+        rv = _phy_8706_control_tx_driver_get(unit, port, type, value);
+        break;
+    case SOC_PHY_CONTROL_EDC_MODE:
+        rv = _phy_8706_control_edc_mode_get(unit,port,value);
+        break;
+    case SOC_PHY_CONTROL_EDC_CONFIG:
+        rv = _phy_8706_control_edc_config_get(unit,port,value);
+        break;
+    case SOC_PHY_CONTROL_LINKDOWN_TRANSMIT:
+        rv = _phy_8706_control_linkdown_transmit_get(unit, port, value);
+        break;
+   case SOC_PHY_CONTROL_CLOCK_ENABLE:
+        if (pc->phy_id1 == PHY_ID1_8747) {
+            SOC_IF_ERROR_RETURN
+                (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCACE, &temp16));
+            *value = temp16 & (0x3<<14) ? TRUE : FALSE;
+        } else {
+            SOC_IF_ERROR_RETURN
+                (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA23, &temp16));
+            *value = temp16 & (0x1<<10) ? TRUE : FALSE;
+        }
+        rv = SOC_E_NONE;
+        break;
+    case SOC_PHY_CONTROL_CLOCK_FREQUENCY:
+        if (pc->phy_id1 == PHY_ID1_8747) {
+            SOC_IF_ERROR_RETURN
+                (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCACE, &temp16));
+            switch ((temp16 >> 14) & 0x3) {
+            case 0x1:
+                *value = 125000;
+                break;
+            case 0x2:
+                *value = 195312;
+                break;
+            case 0x3:
+                *value = 156250;
+                break;
+            default:
+                *value = 0x0;
+                break;
+            } 
+            rv = SOC_E_NONE;
+        } else {
+            rv = SOC_E_UNAVAIL;
+        }
+        break;
+    default:
+        rv = SOC_E_UNAVAIL;
+        break;
+    }
+
+    return rv;
+}
+
+
+/*
+ * Function:
+ *      phy_8706_speed_set
+ * Purpose:
+ *      Set PHY speed
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      speed - link speed in Mbps
+ * Returns:
+ *      SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_speed_set(int unit, soc_port_t port, int speed)
+{
+    phy_ctrl_t  *pc;
+    phy_ctrl_t  *int_pc;
+    XGXS_CFG_t xgxs_cfg;
+    PHY5942_CFG_t phy5942_cfg;
+    int rv = SOC_E_NONE;
+    int type;
+
+    COMPILER_REFERENCE(unit);
+    COMPILER_REFERENCE(port); 
+
+    soc_cm_debug(DK_PHY,"phy_8706_speed_set: u=%d p=%d speed=%d\n", 
+                 unit, port,speed);
+
+    if (!(speed == 10000 || speed == 1000 || speed == 2500)) {
+        return SOC_E_PARAM;
+    }
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    int_pc = INT_PHY_SW_STATE(unit, port);
+
+    /* for 8726 device, speed change will reset XGXS(device 4). 
+     * save/restore the software configuration for XGXS device
+     */
+    if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_xgxs_cfg_save(unit,port, &xgxs_cfg));
+    }
+    if (PHY_IS_BCM5942(pc)) {
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_pd_status_save(unit,port, &phy5942_cfg));
+    }
+    
+    if (speed == 10000) {
+        if (IS_8727_TYPE(pc->phy_id1)) {
+            type = PMAD_CTRL2r_PMA_TYPE_10G_LRM;
+        } else {
+            type = PMAD_CTRL2r_PMA_TYPE_10G_KR;
+        }
+        SOC_IF_ERROR_RETURN
+            (_bcm8726_pmad_write_en(unit, pc, TRUE));
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc, MII_CTRL_REG,
+                    MII_CTRL_SS_LSB,MII_CTRL_SS_LSB));
+
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG,
+                    type,PMAD_CTRL2r_PMA_TYPE_MASK));
+        SOC_IF_ERROR_RETURN
+            (_bcm8726_pmad_write_en(unit, pc, FALSE));
+
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_AN_REG(unit, pc, AN_CTRL_REG,
+                          AN_ENABLE |
+                          AN_RESTART));
+
+        sal_usleep(40000);
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_AN_REG(unit,pc, AN_CTRL_REG, 0x0));
+
+    } else {
+        SOC_IF_ERROR_RETURN
+            (_bcm8726_pmad_write_en(unit, pc, TRUE));
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG,
+                    PMAD_CTRL2r_PMA_TYPE_1G_KX,PMAD_CTRL2r_PMA_TYPE_MASK));
+
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit,pc,MII_CTRL_REG,
+                    0,MII_CTRL_SS_LSB));
+        SOC_IF_ERROR_RETURN
+            (_bcm8726_pmad_write_en(unit, pc, FALSE));
+    }
+
+    if (pc->phy_id1 == PHY87X6_REV_A || pc->phy_id1 == PHY87X6_REV_BC) {
+        SOC_IF_ERROR_RETURN
+            (_phy_8706_xgxs_cfg_restore(unit,port, &xgxs_cfg));
+    }
+    if (PHY_IS_BCM5942(pc)) {
+        sal_usleep(40000);
+        SOC_IF_ERROR_RETURN
+            (_phy_5942_pd_status_restore(unit,port, &phy5942_cfg));
+    }
+
+    /* need to set the internal phy's speed accordingly */
+
+    if (NULL != int_pc) {
+        if (PHY_IS_BCM5942(pc)) {
+            SOC_IF_ERROR_RETURN
+                (PHY_INTERFACE_SET(int_pc->pd, unit, port, SOC_PORT_IF_SFI));
+            SOC_IF_ERROR_RETURN
+                (PHY_AUTO_NEGOTIATE_SET (int_pc->pd, unit, port, 0));
+        }
+        rv = PHY_SPEED_SET(int_pc->pd, unit, port, speed);
+    }
+
+#if 0
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_SPEED_SET,speed);
+    }
+#endif
+
+    return rv;
+}
+
+STATIC int
+phy_8706_speed_set(int unit, soc_port_t port, int speed)
+{
+    phy_ctrl_t  *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    SOC_IF_ERROR_RETURN
+        (_phy_8706_speed_set (unit, port, speed));
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_SPEED_SET,speed);
+    }
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_speed_get
+ * Purpose:
+ *      Get PHY speed
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      speed - current link speed in Mbps
+ * Returns:
+ *      SOC_E_NONE
+ */
+
+STATIC int
+_phy_8706_speed_get(int unit, soc_port_t port, int *speed)
+{
+    phy_ctrl_t  *pc;
+    uint16       speed_val;
+    int an = 0;
+    int an_done;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_SPEED_GET,speed);
+        return SOC_E_NONE;
+    }
+
+    _phy_8706_an_get(unit,port,&an,&an_done);
+
+    *speed = 10000;
+    if (an) { /* autoneg is enabled */
+        if (an_done) { 
+            *speed = 1000;  /* can only do 1G autoneg */
+        }
+    } else { /* autoneg is not enabled, forced speed */
+
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit,pc,PMAD_CTRL2_REG, &speed_val));
+        if ((speed_val & PMAD_CTRL2r_PMA_TYPE_MASK) ==
+                                                PMAD_CTRL2r_PMA_TYPE_1G_KX) {
+            *speed = 1000;
+        } else {
+            *speed = 10000;
+        }
+    }    
+    return SOC_E_NONE;
+}
+
+STATIC int
+phy_8706_speed_get(int unit, soc_port_t port, int *speed)
+{
+    phy_ctrl_t  *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    if (NXT_PC(pc)) {
+        PHYDRV_CALL_ARG1(pc,PHY_SPEED_GET,speed);
+        return SOC_E_NONE;
+    }
+    SOC_IF_ERROR_RETURN
+        (_phy_8706_speed_get(unit, port, speed));
+
+    return SOC_E_NONE;
+}
+/*
+ * Function:
+ *      _phy_8747_firmware_ram_set
+ * Purpose:
+ *      write the given firmware to the internal RAM
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      offset - offset to the data stream
+ *      array  - the given data
+ *      datalen- the data length
+ * Returns:
+ *      SOC_E_NONE
+ */
+
+STATIC int
+_phy_8747_firmware_ram_set(int unit, int port, int offset, uint8 *array,int datalen)
+{
+    int j;
+    phy_ctrl_t *pc;
+    uint16 data16;
+    uint16 mask16;
+
+    if (array == NULL) {
+        return SOC_E_PARAM;
+    }
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* Programme SPA Control Register to Boot from MDIO
+     * bit 15, 0 MDIO for serial boot. bit 14, 1 serial boot, 
+     * bit 13, 0, clear download done which is set by uC 
+     */
+    mask16 = (1 << 13) | (1 << 14) | (1 << 15);
+    data16 = 1 << 14;
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, PHY8706_PMAD_SPA_CTRL_REG,
+                                        data16,mask16));
+
+    /* Reset, to download code from MDIO */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_CTRLr(unit, pc, &data16));
+
+    data16 |= 0x8000;
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_CTRLr(unit, pc, data16));
+
+    sal_usleep(3000); /* Wait for 3ms */
+
+    /* Write Starting Address, where the Code will reside in SRAM */
+    data16 = 0xC000;
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc,
+                              PHY8706_PMAD_M8051_MSGIN_REG, data16));
+    sal_udelay(20); /* Wait for 15us */
+
+    /* Write SPI SRAM Count Size */
+    data16 = (datalen)/2;
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc,
+                              PHY8706_PMAD_M8051_MSGIN_REG, data16));
+    sal_udelay(20); /* Wait for 15us */
+
+    /* Fill in the SPI RAM */
+    for (j = 0; j < datalen/2; j++) {
+        data16 = (array[2*j] << 8) | array[2*j+1];
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc,
+                               PHY8706_PMAD_M8051_MSGIN_REG, data16));
+
+        /* Make sure the word is read by the Micro */
+        sal_udelay(20); /* Wait for 15us */
+    }
+
+    /* Read Hand-Shake message (Done) from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc,
+                                 PHY8706_PMAD_M8051_MSGOUT_REG, &data16));
+
+    if (data16 != 0x4321) {
+        /* Download failure */
+        soc_cm_print("_phy8706_mdio_firmware_download fail,p=%d done msg 0x%x\n",
+                     port,data16);
+        return SOC_E_FAIL;
+    }
+
+    /* Clear LASI status */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc,
+                                 PHY8706_PMAD_RX_ALARM_STAT_REG, &data16));
+
+    /* Wait for LASI to be asserted when M8051 writes checksum to MSG_OUTr */
+    sal_udelay(400); /* Wait for 300us */
+
+    /* read message out reg */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc,
+                                 PHY8706_PMAD_M8051_MSGOUT_REG, &data16));
+
+    SOC_DEBUG_PRINT((DK_PHY, "_phy8706_mdio_firmware_download: p=%d msgout 0x%x\n",
+                     port,data16));
+
+    /* clear LASI  */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc,
+                                 PHY8706_PMAD_RX_ALARM_STAT_REG, &data16));
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA1C, &data16));
+
+    /* check if checksum is correct */
+    if (data16 != 0x600D) {
+        /* Bad CHECKSUM */
+        soc_cm_print("_phy8706_mdio_firmware_download, bad cksum: p=%d, cksum=0x%x\n",
+                    port,data16);
+        return SOC_E_FAIL;
+    }
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      _phy_8727_firmware_ram_set
+ * Purpose:
+ *      write the given firmware to the internal RAM
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      offset - offset to the data stream
+ *      array  - the given data
+ *      datalen- the data length
+ * Returns:
+ *      SOC_E_NONE
+ */
+
+STATIC int
+_phy_8727_firmware_ram_set(int unit, int port, int offset, uint8 *array,int datalen)
+{
+    int j;
+    soc_timeout_t  to;
+    int            rv; 
+    phy_ctrl_t *pc;
+    uint16 data16 = 0;
+
+    if (array == NULL) {
+        return SOC_E_PARAM;
+    }
+
+    rv = SOC_E_NONE;     
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* Reset, to download code from MDIO */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_CTRLr(unit, pc, &data16));
+
+    data16 |= 0x8000;
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_CTRLr(unit, pc, data16));
+
+    sal_usleep(500000); /* Wait for 500ms */
+
+    /* Read Hand-Shake message from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+    if (data16 != 0x101) {
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0x101);
+        return SOC_E_FAIL;
+    }
+
+    /* writes 0x5555 */ 
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, 0x5555));
+    sal_udelay(20); /* Wait for 15us */
+
+    /* Read Hand-Shake message from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+    if (data16 != 0xabcd) {
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0xabcd);
+        return SOC_E_FAIL;
+    }
+    
+    /* Write Starting Address, where the Code will reside in SRAM */
+    data16 = 0xC000;
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, data16));
+    sal_udelay(20); /* Wait for 15us */
+
+    /* Read Hand-Shake message from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+    if (data16 != 0xadd) {
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0xadd);
+        return SOC_E_FAIL;
+    }
+
+    /* Write SPI SRAM Count Size */
+    data16 = (datalen)/2;
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, data16));
+    sal_udelay(20); /* Wait for 15us */
+
+    /* Read Hand-Shake message from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+    if (data16 != 0xab00) {
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0xab00);
+        return SOC_E_FAIL;
+    }
+
+    /* Fill in the SPI RAM */
+    for (j = 0; j < datalen/2; j++) {
+        data16 = array[2*j] | (array[2*j+1] << 8); 
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, data16));
+
+        /* Make sure the word is read by the Micro */
+        sal_udelay(20); /* Wait for 15us */
+    }
+
+    /* Read Hand-Shake message (Done) from Micro */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+
+    if (data16 != 0x4321) {
+        /* Download failure */
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0x4321);
+        return SOC_E_FAIL;
+    }
+
+    /* Clear LASI status */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &data16));
+
+    /* Wait for LASI to be asserted when M8051 writes checksum to MSG_OUTr */
+    sal_udelay(400); /* Wait for 300us */
+
+    /* check if checksum is correct */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &data16));
+
+    /* Need to check if checksum is correct */
+    if (data16 != 0x300) {
+        /* Bad CHECKSUM */
+        soc_cm_debug(DK_WARN,"firmware_ram_set: p=%d wrong msgout value (0x%x) vs 0x%x\n",
+                    port,data16,0x300);
+        return SOC_E_FAIL;
+    }
+
+    /* clear LASI  */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &data16));
+
+    /* update SPI boot control bit, next time micro boots from SPI RAM */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCA85, 0x1, 0x1));
+
+    /* Apply soft reset to Micro and make sure SPI is not downloaded */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA10, 0x00C4));
+
+    /* remove soft reset */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA10, 0x00C0));
+
+    /* Wait for device to come out of reset */
+    soc_timeout_init(&to, 10000, 0);
+    while (!soc_timeout_check(&to)) {
+        rv = READ_PHY8706_PMA_PMD_REG(unit, pc, 0xca13, &data16);
+        if ((data16 == 0x202) || SOC_FAILURE(rv)) {
+            break;
+        }
+    }
+    if (data16 != 0x202) {
+        rv = SOC_E_TIMEOUT;
+        SOC_DEBUG_PRINT((DK_WARN, "firmware_ram_set fail: p=%d msgout 0x%x vs 0x%x\n",
+                   port,data16,0x202));
+    } 
+    return rv;
+}
+
+/*
+ *  Function:  *      phy_8706_rom_wait
+ *
+ *  Purpose:
+ *      Wait for data to be written to the SPI-ROM.
+ *  Input:
+ *      unit, port
+ */
+STATIC int
+phy_8706_rom_wait(int unit, int port)
+{
+    uint16     rd_data;     
+    uint16     wr_data;
+    int        count;     
+    phy_ctrl_t *pc;
+    soc_timeout_t to;     
+    int        rv;
+    int        SPI_READY; 
+
+    rv = SOC_E_NONE;     
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    rd_data = 0;
+    soc_timeout_init(&to, WR_TIMEOUT, 0);
+    do {
+        /* Write SPI Control Register Read Command. */
+        count = 1;
+        wr_data = ((RD_CPU_CTRL_REGS * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        wr_data = SPI_CTRL_1_L;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        if (rd_data & 0x0100) {
+            break;
+        }
+    } while (!soc_timeout_check(&to));
+    if (!(rd_data & 0x0100)) {
+        soc_cm_debug(DK_ERR,"phy_8706_rom_program: u = %d p = %d "
+                            "timeout 1\n", unit, port);
+        return SOC_E_TIMEOUT;
+    }
+
+    SPI_READY = 1;
+    while (SPI_READY == 1) {
+        /* Set-up SPI Controller To Receive SPI EEPROM Status. */
+        count = 1;
+        wr_data = ((WR_CPU_CTRL_REGS * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        wr_data = SPI_CTRL_2_H;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        wr_data = 0x0100;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Fill-up SPI Transmit Fifo To check SPI Status. */
+        count = 2;
+        wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write Tx Fifo Register Address. */
+        wr_data = SPI_TXFIFO;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Tx Fifo Control Word-1. */
+        wr_data = ((1 * 0x0100) | MSGTYPE_HRD);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Tx Fifo Control Word-2. */
+        wr_data = RDSR_OPCODE;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control Register Write Command. */
+        count = 2;
+        wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Address. */
+        wr_data = SPI_CTRL_1_L;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Word-1. */
+        wr_data = 0x0101;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Word-2. */
+        wr_data = 0x0100;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control Register Write Command. */
+        count = 1;
+        wr_data = ((WR_CPU_CTRL_REGS * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Address. */
+        wr_data = SPI_CTRL_1_H;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Word-2. */
+        wr_data = 0x0103;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Wait For 64 bytes To be written.   */
+        rd_data = 0x0000;
+        soc_timeout_init(&to, WR_TIMEOUT, 0);
+        do {
+            count = 1;
+            wr_data = ((RD_CPU_CTRL_REGS * 0x0100) | count);
+            SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+            wr_data = SPI_CTRL_1_L;
+            SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+            if (rd_data & 0x0100) {
+                break;
+            }
+        } while (!soc_timeout_check(&to));
+        if (!(rd_data & 0x0100)) {
+            soc_cm_debug(DK_ERR,"phy_8706_rom_program: u = %d p = %d "
+                                "timeout 2\n", unit, port);
+            return SOC_E_TIMEOUT;
+        }
+        /* Write SPI Control Register Read Command. */
+        count = 1;
+        wr_data = ((RD_CPU_CTRL_REGS * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+        /* Write SPI Control -1 Register Address. */
+        wr_data = SPI_RXFIFO;
+
+        SOC_IF_ERROR_RETURN         
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, wr_data));
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &rd_data));
+
+        /* Clear LASI Message Out Status. */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &wr_data));
+
+        if ((rd_data & 0x1) == 0) {
+            SPI_READY = 0;
+        }
+    } /* SPI_READY  */
+    return SOC_E_NONE;
+}
+
+
+/*
+ * Function:
+ *      phy_8706_rom_write_enable_set
+ *
+ * Purpose:
+ *      Enable disable protection on SPI_EEPROM
+ *
+ * Input:
+ *      unit
+ *      port
+ *      enable
+ * Output:
+ *      SOC_E_xxx
+ *
+ * Notes:
+ *          25AA256 256Kbit Serial EEPROM
+ *          STATUS Register
+ *          +------------------------------------------+
+ *          | WPEN | x | x | x | BP1 | BP0 | WEL | WIP |
+ *          +------------------------------------------+
+ *      BP1 BP0  :   Protected Blocks
+ *       0   0   :  Protect None
+ *       1   1   :  Protect All
+ *
+ *      WEL : Write Latch Enable
+ *       0  : Do not allow writes
+ *       1  : Allow writes
+ */
+
+STATIC int
+phy_8706_rom_write_enable_set(int unit, int port, int enable)
+{
+    uint16     rd_data;
+    uint16     wr_data;
+    uint8      wrsr_data;
+    int        count;
+    phy_ctrl_t *pc;
+    int        rv;
+
+    rv = SOC_E_NONE;
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /*
+     * Write SPI Control Register Write Command.
+     */
+    count = 2;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -2 Register Address.
+     */
+    wr_data = SPI_CTRL_2_L;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -2 Register Word-1.
+     */
+    wr_data = 0x8200;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -2 Register Word-2.
+     */
+    wr_data = 0x0100;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Fill-up SPI Transmit Fifo With SPI EEPROM Messages.
+     * Write SPI Control Register Write Command.
+     */
+    count = 4;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write Tx Fifo Register Address.
+     */
+    wr_data = SPI_TXFIFO;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Tx Fifo Control Word-1.
+     */
+    wr_data = ((1 * 0x0100) | MSGTYPE_HWR);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Tx Fifo Control Word-2.
+     */
+    wr_data = ((MSGTYPE_HWR * 0x0100) | WREN_OPCODE);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Tx Fifo Control Word-3.
+     */
+    wr_data = ((WRSR_OPCODE * 0x100) | (0x2));
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Tx Fifo Control Word-4.
+     */
+    wrsr_data = enable ? 0x2 : 0xc;
+    wr_data = ((wrsr_data * 0x0100) | wrsr_data);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control Register Write Command.
+     */
+    count = 2;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -1 Register Address.
+     */
+    wr_data = SPI_CTRL_1_L;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -1 Register Word-1.
+     */
+    wr_data = 0x0101;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Write SPI Control -1 Register Word-2.
+     */
+    wr_data = 0x0003;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * Wait For WRSR Command To be written.
+     */
+    SOC_IF_ERROR_RETURN(phy_8706_rom_wait(unit, port));
+
+    return SOC_E_NONE;
+}
+/*
+ * Function:
+ *      phy_8706_firmware_set
+ * Purpose:
+ *      program the given firmware into the SPI-ROM 
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      port - StrataSwitch port #.
+ *      offset - offset to the data stream
+ *      array  - the given data
+ *      datalen- the data length  
+ * Returns:
+ *      SOC_E_NONE
+ */
+
+STATIC int
+phy_8706_firmware_set(int unit, int port, int offset, uint8 *array,int datalen)
+{
+
+    uint16     rd_data;
+    uint16     wr_data;
+    uint16     tx_disable_reg;
+    int        j;
+    int        i = 0;
+    int        count;
+    phy_ctrl_t *pc;
+    uint8       spi_values[WR_BLOCK_SIZE];
+#ifdef BCM8727_MICROCODE_LOAD_WAR 
+    uint16 rev; 
+    uint16 phyid1; 
+#endif 
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* save the PMAD TX disable reg. */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9, &tx_disable_reg));
+
+    /* disable TX and bring the link down if it's up */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x9, 0x1));
+
+    if (pc->phy_id1 == PHY_ID1_8747) {
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc843, 0x0000, 0x000f));
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc840, 0x0000, 0x000c));
+    }
+
+    /*
+     * Read LASI Status registers To clear initial Failure status.
+     */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &rd_data));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9004, &rd_data));
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9005, &rd_data));
+
+    /*
+     * Enable the LASI For Message out. 
+     */
+    if (IS_8727_TYPE(pc->phy_id1)) {
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x9000, 0x0004));
+    } else {
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x9000, 0x0400));
+    }
+    /*
+     * 0x9002, bit 2 Is Rx Alarm enabled For LASI. 
+     */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x9002, 0x0004));
+    /*
+     * Read Any Residual Message out register.
+     */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &rd_data));
+    /*
+     * Clear LASI Message Out Status. 
+     */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &rd_data));
+
+    /*
+     * ser_boot pin HIGH
+     */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCA85, 0x1, 0x1));
+
+     /* set SPI-ROM write enable */
+    SOC_IF_ERROR_RETURN(phy_8706_rom_write_enable_set(unit, port, 1));
+
+    SOC_DEBUG_PRINT((DK_PHY, "init0: u=%d p=%d\n",
+                         unit, port));
+
+    for (j = 0; j < datalen; j += WR_BLOCK_SIZE) {
+        /*
+         * Setup SPI Controller. 
+         */
+        count = 2;
+        wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Control -2 Register Address.*/
+        wr_data = SPI_CTRL_2_L;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Control -2 Register Word-1. */
+        wr_data = 0x8200;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Control -2 Register Word-2. */
+        wr_data = 0x0100;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Fill-up SPI Transmit Fifo.
+         * Write SPI Control Register Write Command.
+         */
+        count = 4 + (WR_BLOCK_SIZE / 2);
+        wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write Tx Fifo Register Address. */
+        wr_data = SPI_TXFIFO;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Tx Fifo Control Word-1. */
+        wr_data = ((1 * 0x0100) | MSGTYPE_HWR);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Tx Fifo Control Word-2. */
+        wr_data = ((MSGTYPE_HWR * 0x0100) | WREN_OPCODE);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Tx Fifo Control Word-3. */
+        wr_data = ((WR_OPCODE * 0x0100) | (0x3 + WR_BLOCK_SIZE));
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Tx Fifo Control Word-4. */
+        wr_data = (((j & 0x00FF) * 0x0100) | ((j & 0xFF00) / 0x0100));
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        SOC_DEBUG_PRINT((DK_PHY, "loop: u=%d p=%d,inxj: %d,inxi:%d\n",
+                         unit, port,j,i));
+
+        if (datalen < (j + WR_BLOCK_SIZE)) {   /* last block */ 
+            sal_memset(spi_values,0,WR_BLOCK_SIZE);
+            sal_memcpy(spi_values,&array[j],datalen - j);
+
+            for (i = 0; i < WR_BLOCK_SIZE; i += 2) {
+                /* Write SPI Tx Fifo Data Word-4. */
+                wr_data = ((spi_values[i+1] * 0x0100) | spi_values[i]);
+                SOC_IF_ERROR_RETURN(write_message(unit, pc,wr_data, &rd_data));
+            }           
+        } else {        
+            for (i = 0; i < WR_BLOCK_SIZE; i += 2) {
+                /* Write SPI Tx Fifo Data Word-4. */
+                wr_data = ((array[j+i+1] * 0x0100) | array[j+i]);
+                SOC_IF_ERROR_RETURN(write_message(unit, pc,wr_data, &rd_data));
+            }
+        }
+
+        /* 
+         * Set-up SPI Controller To Transmit.
+         * Write SPI Control Register Write Command.
+         */
+        count = 2;
+        wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        wr_data = SPI_CTRL_1_L;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Control -1 Register Word-1. */
+        wr_data = 0x0501;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Write SPI Control -1 Register Word-2. */
+        wr_data = 0x0003;
+        SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+        /* Wait For 64 bytes To be written.   */
+        SOC_IF_ERROR_RETURN(phy_8706_rom_wait(unit,port));
+
+    } /* SPI_WRITE */
+
+    /* clear SPI-ROM write enable */
+    SOC_IF_ERROR_RETURN(phy_8706_rom_write_enable_set(unit, port, 0));
+
+    /* Disable SPI EEPROM. */
+    count = 2;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -2 Register Address. */
+    wr_data = SPI_CTRL_2_L;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -2 Register Word-1. */
+    wr_data = 0x8200;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -2 Register Word-2. */
+    wr_data = 0x0100;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+
+    /* Fill-up SPI Transmit Fifo With SPI EEPROM Messages. */
+    count = 2;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write Tx Fifo Register Address. */
+    wr_data = SPI_TXFIFO;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Tx Fifo Control Word-1. */
+    wr_data = ((0x1*0x0100) | MSGTYPE_HWR);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Tx Fifo Control Word-2. */
+    wr_data = WRDI_OPCODE;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control Register Write Command. */
+    count = 2;
+    wr_data = ((WR_CPU_CTRL_FIFO * 0x0100) | count);
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -1 Register Address. */
+    wr_data = SPI_CTRL_1_L;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -1 Register Word-1. */
+    wr_data = 0x0101;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /* Write SPI Control -1 Register Word-2. */
+    wr_data = 0x0003;
+    SOC_IF_ERROR_RETURN(write_message(unit, pc, wr_data, &rd_data));
+
+    /*
+     * ser_boot pin LOW
+     */
+    SOC_IF_ERROR_RETURN
+        (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xCA85, 0x0, 0x1)); 
+
+    if (pc->phy_id1 == PHY_ID1_8747) {
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc843, 0x000f, 0x000f));
+        SOC_IF_ERROR_RETURN
+            (MODIFY_PHY8706_PMA_PMD_REG(unit, pc, 0xc840, 0x000c, 0x000c));
+    }
+
+    /* restore the PMAD TX disable reg. */
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x9, tx_disable_reg));
+
+    soc_cm_debug(DK_PHY, "phy_8706_rom_program: u=%d p=%d done\n", unit, port);
+
+#ifdef BCM8727_MICROCODE_LOAD_WAR 
+   /* 
+    * After firmware in ROM is changed, enforce the microcode load 
+    * status in the device as 0xbaad (!=0x600d) so that firmware written 
+    * to ROM by this firmware_set is loaded to the device during port_init. 
+    * else _8727_rom_load_war( ) will not load the firmware to device and 
+    * device will run with previous firmware. 
+    */ 
+    SOC_IF_ERROR_RETURN 
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1)); 
+    if (phyid1 == PHY_ID1_8727) { 
+        SOC_IF_ERROR_RETURN 
+            (pc->read(unit, pc->phy_id, SOC_PHY_CLAUSE45_ADDR(0x1,0xc801), &rev)); 
+        if ((rev == 0x2) || (rev == 0x3)) { 
+            SOC_IF_ERROR_RETURN 
+                (pc->write(unit, pc->phy_id, SOC_PHY_CLAUSE45_ADDR(0x1,0xca1c), 0xBAAD)); 
+        } 
+    } 
+#endif 
+    return SOC_E_NONE;
+}
+
+static int
+write_message(int unit, phy_ctrl_t *pc, uint16 wrdata, uint16 *rddata)
+{
+
+    uint16     tmp_data = 0;
+    soc_timeout_t to;
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &tmp_data));
+    /* Clear any lingering LASI Message Out Status. */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &tmp_data));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0xCA12, wrdata));
+
+    soc_timeout_init(&to, WR_TIMEOUT, 0);
+    do {
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9005, &tmp_data));
+        if (tmp_data & 0x4)
+            break;
+    } while (!soc_timeout_check(&to));
+    if (!(tmp_data & 0x4)) {
+        soc_cm_debug(DK_ERR, "write_message failed: wrdata %04x\n", wrdata);
+        return SOC_E_FAIL;
+    }
+
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xCA13, &tmp_data));
+    *rddata = tmp_data;
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x9003, &tmp_data));
+
+    return SOC_E_NONE;
+}
+
+STATIC int
+_phy_8727_bsc_rw(int unit, soc_port_t port, int dev_addr, int opr,
+                    int addr, int count, void *data_array,uint32 ram_start)
+{
+    phy_ctrl_t  *pc;
+    int rv = SOC_E_NONE;
+    soc_timeout_t  to;
+    uint16 data16;
+    int i;
+    sal_usecs_t start;
+    sal_usecs_t end;
+    int access_type;
+    int data_type;
+
+    soc_cm_debug(DK_PHY,"phy_8727_bsc_read: u=%d p=%d addr=%04x\n", 
+                 unit, port, addr);
+
+    if (!data_array) {
+        return SOC_E_PARAM;
+    }
+
+    if (count > PHY_8727_BSC_XFER_MAX) {
+        return SOC_E_PARAM;
+    }
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    data_type = PHY_8727_I2C_DATA_TYPE(opr);
+    access_type = PHY_8727_I2C_ACCESS_TYPE(opr);
+
+    if (access_type == PHY_8727_I2CDEV_WRITE) {
+        for (i = 0; i < count; i++) {
+            if (data_type == PHY_8727_I2C_8BIT) {
+                SOC_IF_ERROR_RETURN
+                    (WRITE_PHY8706_PMA_PMD_REG(unit, pc, ram_start + i,
+                          ((uint8 *)data_array)[i]));
+            } else {  /* 16 bit */
+                SOC_IF_ERROR_RETURN
+                    (WRITE_PHY8706_PMA_PMD_REG(unit, pc, ram_start + i,
+                          ((uint16 *)data_array)[i]));
+            }
+        }
+    }
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x8000, 0x8000));
+    data16 = ram_start;
+    SOC_IF_ERROR_RETURN         
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x8004, data16));
+    SOC_IF_ERROR_RETURN         
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x8003, addr));
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x8002, count)); 
+
+    data16 = 1;
+    data16 |= (dev_addr<<9);
+    if (access_type == PHY_8727_I2CDEV_WRITE) { 
+        data16 |= PHY_8727_WR_FREQ_400KHZ;
+    } 
+
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit,pc,0x8005,data16)); 
+
+    if (access_type == PHY_8727_I2CDEV_WRITE) {
+        data16 =  0x8000 | PHY_8727_BSC_WRITE_OP; 
+    } else {
+        data16 =  0x8000 | PHY_8727_BSC_READ_OP; 
+    }
+
+    if (data_type == PHY_8727_I2C_16BIT) {
+        data16 |= (1 << 12);
+    }
+        
+    SOC_IF_ERROR_RETURN
+        (WRITE_PHY8706_PMA_PMD_REG(unit, pc, 0x8000, data16));
+
+    start = sal_time_usecs();
+    soc_timeout_init(&to, 1000000, 0);
+    while (!soc_timeout_check(&to)) {
+        rv = READ_PHY8706_PMA_PMD_REG(unit, pc, 0x8000, &data16);
+        if (((data16 & PHY_8727_2W_STAT) == PHY_8727_2W_STAT_COMPLETE)) {
+            break;
+        }
+    }
+    end = sal_time_usecs();
+
+    /* need some delays */
+    sal_usleep(10000);
+
+    SOC_DEBUG_PRINT((DK_PHY, "BSC command status %d time=%d\n", 
+            (data16 & PHY_8727_2W_STAT), SAL_USECS_SUB(end, start)));
+
+    if (access_type == PHY_8727_I2CDEV_WRITE) {
+        return SOC_E_NONE;
+    }
+
+    if ((data16 & PHY_8727_2W_STAT) == PHY_8727_2W_STAT_COMPLETE) {
+        for (i = 0; i < count; i++) {
+            SOC_IF_ERROR_RETURN 
+                (READ_PHY8706_PMA_PMD_REG(unit, pc, (ram_start+i), &data16));
+            if (data_type == PHY_8727_I2C_16BIT) {
+                ((uint16 *)data_array)[i] = data16;
+                SOC_DEBUG_PRINT((DK_PHY, "%04x ", data16));
+            } else {
+                ((uint8 *)data_array)[i] = (uint8)data16;
+                SOC_DEBUG_PRINT((DK_PHY, "%02x ", data16));
+            }
+        }
+    }
+    return SOC_E_NONE;
+}
+
+/*
+ * Read a slave device such as NVRAM/EEPROM connected to the 8727's I2C
+ * interface. This function will be mainly used for diagnostic or workaround
+ * purpose.
+ * Note:
+ * The size of read_array buffer must be greater than or equal to the 
+ * parameter nbytes.
+ * usage example:
+ *   Retrieve the first 100 byte data of the non-volatile storage device with
+ *   I2C bus device address 0x50(default SPF eeprom I2C address) on unit 0, 
+ *   port 2.
+ *   uint8 data8[100];
+ *   phy_8727_i2cdev_read(0,2,0x50,0,100,data8);
+ */
+int
+phy_8727_i2cdev_read(int unit, 
+                     soc_port_t port, 
+                     int dev_addr,  /* 7 bit I2C bus device address */
+                     int offset,    /* starting data address to read */
+                     int nbytes,    /* number of bytes to read */  
+                     uint8 *read_array)   /* buffer to hold retrieved data */
+{
+    return _phy_8727_bsc_rw(unit, port, dev_addr,PHY_8727_I2CDEV_READ,
+             offset, nbytes, (void *)read_array,PHY_8727_READ_START_ADDR); 
+
+}
+
+/*
+ * Write to a slave device such as NVRAM/EEPROM connected to the 8727's I2C
+ * interface. This function will be mainly used for diagnostic or workaround
+ * purpose.
+ * Note:
+ * The size of write_array buffer should be equal to the parameter nbytes.
+ * The EEPROM may limit the maximun write size to 16 bytes
+ * usage example:
+ *   Write to first 100 byte space of the non-volatile storage device with
+ *   I2C bus device address 0x50(default SPF eeprom I2C address) on unit 0,
+ *   port 2, with written data specified in array data8.
+ *   uint8 data8[100];
+ *   *** initialize the data8 array with written data ***
+ *
+ *   phy_8727_i2cdev_write(0,2,0x50,0,100,data8);
+ */
+
+int
+phy_8727_i2cdev_write(int unit,
+                     soc_port_t port,
+                     int dev_addr,  /* I2C bus device address */
+                     int offset,    /* starting data address to write to */
+                     int nbytes,    /* number of bytes to write */
+                     uint8 *write_array)   /* buffer to hold written data */
+{
+    int j;
+    int rv = SOC_E_NONE;
+    phy_ctrl_t  *pc;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    for (j = 0; j < (nbytes/PHY_8727_BSC_WR_MAX); j++) {
+        rv = _phy_8727_bsc_rw(unit, port, dev_addr,PHY_8727_I2CDEV_WRITE,
+                    offset + j * PHY_8727_BSC_WR_MAX, PHY_8727_BSC_WR_MAX,
+                    (void *)(write_array + j * PHY_8727_BSC_WR_MAX),
+                    PHY_8727_WRITE_START_ADDR);
+        if (rv != SOC_E_NONE) {
+            return rv;
+        }
+        sal_usleep(20000);
+    }
+    if (nbytes%PHY_8727_BSC_WR_MAX) {
+        rv = _phy_8727_bsc_rw(unit, port, dev_addr,PHY_8727_I2CDEV_WRITE,
+                offset + j * PHY_8727_BSC_WR_MAX, nbytes%PHY_8727_BSC_WR_MAX,
+                (void *)(write_array + j * PHY_8727_BSC_WR_MAX),
+                PHY_8727_WRITE_START_ADDR);
+    }
+    return rv;
+}
+
+/*
+ * Function:
+ *      phy_8706_reg_read
+ * Purpose:
+ *      Routine to read PHY register
+ * Parameters:
+ *      uint         - BCM unit number
+ *      port         - port number
+ *      flags        - Flags which specify the register type
+ *      phy_reg_addr - Encoded register address
+ *      phy_data     - (OUT) Value read from PHY register
+ * Note:
+ *      This register read function is not thread safe. Higher level
+ * function that calls this function must obtain a per port lock
+ * to avoid overriding register page mapping between threads.
+ */
+STATIC int
+phy_8706_reg_read(int unit, soc_port_t port, uint32 flags,
+                  uint32 phy_reg_addr, uint32 *phy_data)
+{
+    uint16               data16;
+    uint16               regdata;     
+    phy_ctrl_t          *pc;      /* PHY software state */
+    int rv = SOC_E_NONE;
+    int rd_cnt;
+    uint16 phyid1;
+    uint16 rev_num;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1));
+
+    if (flags & (SOC_PHY_I2C_DATA8 | SOC_PHY_I2C_DATA16)) {
+        if (!IS_8727_TYPE(phyid1)) {
+            return SOC_E_UNAVAIL;
+        }
+    }
+
+    /* 8727 errata indicates 1 byte read is not working for B version.
+     * The workaround is to read two bytes and return back one byte.
+     */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xc801, &rev_num));
+
+    rd_cnt = ((rev_num & 0xF) < PHY_8727_VERSION_C)? 2: 1;
+
+    if (flags & SOC_PHY_I2C_DATA8) {
+
+        /* read two bytes and return the first byte */
+        SOC_IF_ERROR_RETURN
+            (phy_8727_i2cdev_read(unit, port, 
+                        SOC_PHY_I2C_DEVAD(phy_reg_addr),
+                        SOC_PHY_I2C_REGAD(phy_reg_addr),
+                        rd_cnt,  
+                        (uint8 *)&data16));
+        *phy_data = *((uint8 *)&data16);
+
+    } else if (flags & SOC_PHY_I2C_DATA16) {
+        /* This operation is generally targeted to access 16-bit device,
+         * such as PHY IC inside the SFP.  However there is no 16-bit 
+         * scratch register space on the device.  Use 1.800e 
+         * for this operation.
+         */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, PHY_8727_I2C_TEMP_RAM, 
+                   &regdata));
+     
+        rv = _phy_8727_bsc_rw(unit, port, 
+               SOC_PHY_I2C_DEVAD(phy_reg_addr),
+               PHY_8727_I2C_OP_TYPE(PHY_8727_I2CDEV_READ,PHY_8727_I2C_16BIT),
+               SOC_PHY_I2C_REGAD(phy_reg_addr),1, 
+               (void *)&data16,PHY_8727_I2C_TEMP_RAM);
+
+        *phy_data = data16;
+
+        /* restore the ram register value */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, PHY_8727_I2C_TEMP_RAM,
+                 regdata));
+    } else {   
+        SOC_IF_ERROR_RETURN
+            (READ_PHY_REG(unit, pc, phy_reg_addr, &data16));
+        *phy_data = data16;
+    }
+
+    return rv;
+}
+
+/*
+ * Function:
+ *      phy_8706_reg_write
+ * Purpose:
+ *      Routine to write PHY register
+ * Parameters:
+ *      uint         - BCM unit number
+ *      port         - port number
+ *      flags        - Flags which specify the register type
+ *      phy_reg_addr - Encoded register address
+ *      phy_data     - Value write to PHY register
+ * Note:
+ *      This register read function is not thread safe. Higher level
+ * function that calls this function must obtain a per port lock
+ * to avoid overriding register page mapping between threads.
+ */
+STATIC int
+phy_8706_reg_write(int unit, soc_port_t port, uint32 flags,
+                   uint32 phy_reg_addr, uint32 phy_data)
+{
+    uint8  data8[4];
+    uint16 data16[2];  
+    uint16 regdata[2]; 
+    phy_ctrl_t          *pc;      /* PHY software state */
+    int rv;
+    uint16 phyid1;
+    uint16 rev_num;
+    int wr_cnt;
+
+    pc = EXT_PHY_SW_STATE(unit, port);
+
+    /* This feature is only supported on 8727 for now*/
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, MII_PHY_ID1_REG, &phyid1));
+
+    if (flags & (SOC_PHY_I2C_DATA8 | SOC_PHY_I2C_DATA16)) {
+        if (!IS_8727_TYPE(phyid1)) {
+            return SOC_E_UNAVAIL;
+        }
+    }
+
+    /* check which revision to implement rev. specific workaround */
+    /* 8727 errata indicates 1 byte/word write is not working for B version.
+     * The workaround is to send two bytes/words write command and actually
+     * only one gets written.
+     */
+    SOC_IF_ERROR_RETURN
+        (READ_PHY8706_PMA_PMD_REG(unit, pc, 0xc801, &rev_num));
+
+    wr_cnt = ((rev_num & 0xF) < PHY_8727_VERSION_C)? 2: 1; 
+      
+    if (flags & SOC_PHY_I2C_DATA8) {
+        data8[0] = (uint8)phy_data; 
+        SOC_IF_ERROR_RETURN
+            (phy_8727_i2cdev_write(unit, port,
+                        SOC_PHY_I2C_DEVAD(phy_reg_addr),
+                        SOC_PHY_I2C_REGAD(phy_reg_addr),
+                        wr_cnt,
+                        data8));
+    } else if (flags & SOC_PHY_I2C_DATA16) {
+        /* This operation is generally targeted to access 16-bit device,
+         * such as PHY IC inside the SFP.  However there is no 16-bit 
+         * scratch register space on the device.  Use 1.800e 
+         * for this operation.
+         */
+        /* save the temp ram register */
+        SOC_IF_ERROR_RETURN
+            (READ_PHY8706_PMA_PMD_REG(unit, pc, PHY_8727_I2C_TEMP_RAM,
+                 &regdata[0]));
+        data16[0] = phy_data;
+        rv = _phy_8727_bsc_rw(unit, port,
+              SOC_PHY_I2C_DEVAD(phy_reg_addr),
+              PHY_8727_I2C_OP_TYPE(PHY_8727_I2CDEV_WRITE,PHY_8727_I2C_16BIT),
+              SOC_PHY_I2C_REGAD(phy_reg_addr),wr_cnt,
+              (void *)data16,PHY_8727_I2C_TEMP_RAM);
+
+        /* restore the ram register value */
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY8706_PMA_PMD_REG(unit, pc, PHY_8727_I2C_TEMP_RAM,
+                  regdata[0]));
+    } else {
+        SOC_IF_ERROR_RETURN
+            (WRITE_PHY_REG(unit, pc, phy_reg_addr, (uint16)phy_data));
+    }
+
+    return SOC_E_NONE;
+}
+
+/*
+ * Function:
+ *      phy_8706_probe
+ * Purpose:
+ *      Complement the generic phy probe routine to identify this phy when its
+ *      phy id0 and id1 is same as some other phy's.
+ * Parameters:
+ *      unit - StrataSwitch unit #.
+ *      pc   - phy ctrl descriptor.
+ * Returns:
+ *      SOC_E_NONE,SOC_E_NOT_FOUND and SOC_E_<error>
+ */
+STATIC int
+phy_8706_probe(int unit, phy_ctrl_t *pc)
+{
+    uint16 id0, id1;
+    soc_phy_info_t *pi;
+
+    if (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x2, &id0) < 0) {
+        return SOC_E_NOT_FOUND;
+    }
+    if (READ_PHY8706_PMA_PMD_REG(unit, pc, 0x3, &id1) < 0) {
+        return SOC_E_NOT_FOUND;
+    }
+
+    pi = &SOC_PHY_INFO(unit, pc->port);
+
+    switch (PHY_MODEL(id0, id1)) {
+
+    case PHY_BCM8747_MODEL:
+        if (soc_property_port_get(unit, pc->port, spn_PORT_PHY_MODE_REVERSE, 0)) {
+            pi->phy_name = "BCM5942";
+            PHY_FLAGS_SET(pc->unit, pc->port, PHY_FLAGS_SECONDARY_SERDES);
+        }
+    break;
+
+    default:
+    break;
+
+    }
+    pc->size = sizeof(PHY8706_DEV_DESC_t);
+    return SOC_E_NONE;
+}
+
+
+/*
+ * Variable:
+ *    phy_8706_drv
+ * Purpose:
+ *    Phy Driver for 10G (XAUI x 4) Serdes PHY. 
+ */
+
+phy_driver_t phy_8706drv_xe = {
+    "8706 10-Gigabit PHY Driver",
+    phy_8706_init,        /* Init */
+    phy_null_reset,       /* Reset (dummy) */
+    phy_8706_link_get,    /* Link get   */
+    phy_8706_enable_set,  /* Enable set */
+    phy_null_enable_get,  /* Enable get */
+    phy_null_set,         /* Duplex set */
+    phy_null_one_get,     /* Duplex get */
+    phy_8706_speed_set,   /* Speed set  */
+    phy_8706_speed_get,   /* Speed get  */
+    phy_null_set,         /* Master set */
+    phy_null_zero_get,    /* Master get */
+    phy_8706_an_set,      /* ANA set */
+    phy_8706_an_get,      /* ANA get */
+    NULL,                 /* Local Advert set */
+    NULL,                 /* Local Advert get */
+    phy_null_mode_get,    /* Remote Advert get */
+    phy_8706_lb_set,      /* PHY loopback set */
+    phy_8706_lb_get,      /* PHY loopback set */
+    phy_null_interface_set, /* IO Interface set */
+    phy_xehg_interface_get, /* IO Interface get */
+    NULL,   /* PHY abilities mask */
+    NULL,
+    NULL,
+    phy_null_mdix_set,
+    phy_null_mdix_get,
+    phy_null_mdix_status_get,
+    NULL,
+    NULL,
+    phy_null_medium_get,
+    NULL,                    /* phy_cable_diag  */
+    NULL,                    /* phy_link_change */
+    phy_8706_control_set,    /* phy_control_set */
+    phy_8706_control_get,    /* phy_control_get */
+    phy_8706_reg_read,       /* phy_reg_read */
+    phy_8706_reg_write,      /* phy_reg_write */
+    NULL,                    /* phy_reg_modify */
+    NULL,                    /* phy_notify */
+    phy_8706_probe,          /* pd_probe  */
+    phy_8706_ability_advert_set,  /* pd_ability_advert_set */
+    phy_8706_ability_advert_get,  /* pd_ability_advert_get */
+    phy_8706_ability_remote_get,  /* pd_ability_remote_get */
+    phy_8706_ability_local_get,   /* pd_ability_local_get  */
+    phy_8706_firmware_set         /* pd_firmware_set */
+};
+
+#else /* INCLUDE_PHY_8706 */
+int _phy_8706_not_empty;
+#endif /* INCLUDE_PHY_8706 */
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phyident.c esw_sdk/src/soc/phy/phyident.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/phyident.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/phyident.c	2011-11-28 21:48:36.412059387 +0000
@@ -144,8 +144,13 @@ static int _chk_serdes(int unit, soc_por
 #endif /* INCLUDE_SERDES_ASSUMED */
 
 #if defined(INCLUDE_PHY_8706)
+#ifdef LVL7_FIXUP
+ int _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
+			   uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
+#else
 static int _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
                      uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi);
+#endif
 #endif /* INCLUDE_PHY_8706 */
 
 #if defined(INCLUDE_PHY_8072)
@@ -3162,7 +3167,11 @@ _chk_sfp_phy(int unit, soc_port_t port, 
 }
 
 #if defined(INCLUDE_PHY_8706)
-static int
+#ifndef LVL7_FIXUP
+static 
+#endif
+int
+//static int
 _chk_8706(int unit, soc_port_t port, soc_phy_table_t *my_entry,
              uint16 phy_id0, uint16 phy_id1, soc_phy_info_t *pi)
 {
@@ -4085,6 +4094,31 @@ _ext_phy_probe(int unit, soc_port_t port
             ext_pc->phy_rev   = PHY_REV(phy_id0, phy_id1);
 
             PHY_FLAGS_SET(unit, port, PHY_FLAGS_EXTERNAL_PHY);
+#ifdef LVL7_FIXUP
+#if L7_FEAT_SF10GBT
+            /* SDK only provides a way to configure a single phy address for 
+             * each port, whereas some of the customer boxes have different
+             * phy addresses for same port. So we use the custom driver 
+             * (registered in FP application) checkphy fuction to look for
+             * device ids at the secondary phy addresses, and return SUCESS
+             * if match is successful). _ext_phy_probe() uses two pointer 
+             * variables - pi and ext_pc. We manage to run our own custom 
+             * _check_phy function, which does the OUI check for us. But 
+             * our requirement is to change the phy addresses and other 
+             * parameters maintained in structures pointed to by pi 
+             * (soc_phy_info_t) and ext_pc(phy_ctrl_t), in  case the match 
+             * is successful.  We don't have a way to do that unless we run 
+             * our custom function below, or SDK functions are re-designed 
+             * to facilitate this operation.
+             */
+            soc_phy_cust_t* fixPhySet = NULL;
+            if (phy_table[i]->cookie != NULL)
+            {
+              fixPhySet = (soc_phy_cust_t*)(phy_table[i]->cookie);
+              (fixPhySet->custPhySettings)(unit, port, phy_table[i], pi, ext_pc);
+            }
+#endif
+#endif
 
             break;
             }
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/phyreg.c esw_sdk/src/soc/phy/phyreg.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/phyreg.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/phyreg.c	2011-11-28 21:49:55.503733763 +0000
@@ -22,6 +22,15 @@
 
 #include "phyreg.h"
 
+#ifdef LVL7_FIXUP
+#include "sysapi_hpc.h"
+#include "hpc_phy.h"
+
+#undef SOC_IF_ERROR_RETURN
+#define SOC_IF_ERROR_RETURN(op) \
+    do { int __rv__; if ((__rv__ = (op)) < 0) {HPC_PHY_SHADOW_REG_UNLOCK(unit); return(__rv__);} } while(0)
+#endif
+
 #define _SOC_PHY_REG_DIRECT \
         ((SOC_PHY_REG_1000X << 1) | (SOC_PHY_REG_1000X >> 1))
 
@@ -35,6 +44,10 @@ phy_reg_modify(int unit, phy_ctrl_t *pc,
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     reg_data = reg_data & reg_mask;
 
     SOC_IF_ERROR_RETURN
@@ -47,6 +60,10 @@ phy_reg_modify(int unit, phy_ctrl_t *pc,
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, reg_addr, tmp));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 int 
@@ -55,6 +72,10 @@ phy_reg_fe_read(int unit, phy_ctrl_t *pc
 {
     uint16 test_reg;
   
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
@@ -69,6 +90,10 @@ phy_reg_fe_read(int unit, phy_ctrl_t *pc
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, reg_addr, data));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -82,6 +107,10 @@ phy_reg_fe_write(int unit, phy_ctrl_t *p
         return SOC_E_NONE;
     }
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
@@ -96,6 +125,10 @@ phy_reg_fe_write(int unit, phy_ctrl_t *p
         SOC_IF_ERROR_RETURN
             (WRITE_PHY_REG(unit, pc, reg_addr, data));
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -109,6 +142,10 @@ phy_reg_fe_modify(int unit, phy_ctrl_t *
         return SOC_E_NONE;
     }
   
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_bank) {
         SOC_IF_ERROR_RETURN
             (READ_PHY_REG(unit, pc, 0x1f, &test_reg));
@@ -124,6 +161,10 @@ phy_reg_fe_modify(int unit, phy_ctrl_t *
             (MODIFY_PHY_REG(unit, pc, reg_addr, data, mask));
     }
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -135,6 +176,10 @@ phy_reg_ge_read(int unit, phy_ctrl_t *pc
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
@@ -203,6 +248,10 @@ phy_reg_ge_read(int unit, phy_ctrl_t *pc
             rv = READ_PHY_REG(unit, pc, reg_addr, data);
         }
     } 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         SOC_DEBUG_PRINT((DK_ERR, "phy_reg_ge_read failed:"
                         " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
@@ -223,6 +272,10 @@ phy_reg_ge_write(int unit, phy_ctrl_t *p
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
@@ -293,6 +346,10 @@ phy_reg_ge_write(int unit, phy_ctrl_t *p
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         SOC_DEBUG_PRINT((DK_ERR, "phy_reg_ge_write failed:"
                         " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
@@ -314,6 +371,10 @@ phy_reg_ge_modify(int unit, phy_ctrl_t *
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (flags & SOC_PHY_REG_1000X) {
         if (reg_addr <= 0x000f) {
             uint16 blk_sel;
@@ -390,6 +451,10 @@ phy_reg_ge_modify(int unit, phy_ctrl_t *
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         SOC_DEBUG_PRINT((DK_ERR, "phy_reg_ge_modify failed:"
                         " u=%d phy_id=0x%2x reg_bank=0x%04x reg_addr=0x%02x "
@@ -471,6 +536,10 @@ phy_reg_xge_write(int unit, phy_ctrl_t *
         return rv;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     {
         switch(reg_addr) {
         /* Map shadow registers */
@@ -515,6 +584,10 @@ phy_reg_xge_write(int unit, phy_ctrl_t *
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         SOC_DEBUG_PRINT((DK_ERR, "phy_reg_ge_write failed:"
                         " u=%d phy_id=0x%2x dev_addr=0x%02x reg_bank=0x%04x reg_addr=0x%02x "
@@ -532,6 +605,10 @@ phy_reg_xge_modify(int unit, phy_ctrl_t 
 
     rv       = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     {
         switch(reg_addr) {
         /* Map shadow registers */
@@ -585,6 +662,10 @@ phy_reg_xge_modify(int unit, phy_ctrl_t 
         }
     } 
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     if (SOC_FAILURE(rv)) {
         SOC_DEBUG_PRINT((DK_ERR, "phy_reg_ge_modify failed:"
                         " u=%d phy_id=0x%2x dev_addr=0x%02x reg_bank=0x%04x reg_addr=0x%02x "
@@ -601,6 +682,10 @@ phy_reg_serdes_read(int unit, phy_ctrl_t
  
     rv     = SOC_E_NONE; 
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) { 
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) { 
@@ -615,6 +700,10 @@ phy_reg_serdes_read(int unit, phy_ctrl_t
         rv = READ_PHY_REG(unit, pc, reg_addr, phy_rd_data);  
     } 
  
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv; 
 }
 
@@ -630,6 +719,10 @@ phy_reg_serdes_write(int unit, phy_ctrl_
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) {
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) {
@@ -644,6 +737,10 @@ phy_reg_serdes_write(int unit, phy_ctrl_
         rv = WRITE_PHY_REG(unit, pc, reg_addr, phy_wr_data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -660,6 +757,10 @@ phy_reg_serdes_modify(int unit, phy_ctrl
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
 #ifdef INCLUDE_PHY_XGXS6
     if (soc_feature(unit, soc_feature_xgxs_v6)) {
         if ((reg_bank != 0) || (reg_addr >= 0x0010)) {
@@ -674,6 +775,10 @@ phy_reg_serdes_modify(int unit, phy_ctrl
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, phy_mo_data, phy_mo_mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -684,12 +789,20 @@ phy_reg_xgxs_read(int unit, phy_ctrl_t *
 {
     int    rv;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = READ_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -703,12 +816,20 @@ phy_reg_xgxs_write(int unit, phy_ctrl_t 
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = WRITE_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -722,12 +843,20 @@ phy_reg_xgxs_modify(int unit, phy_ctrl_t
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv = WRITE_PHY_REG(unit, pc, 0x1f, reg_bank);
 
     if (SOC_SUCCESS(rv)) {
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, data, mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 #endif /* INCLUDE_PHY_XGXS */
@@ -741,6 +870,10 @@ phy_reg_xgxs6_read(int unit, phy_ctrl_t 
 
     rv     = SOC_E_NONE;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     if (reg_addr < 0x10) {
         /* Select between SerDes and XAUI mapping */
         SOC_IF_ERROR_RETURN
@@ -759,6 +892,10 @@ phy_reg_xgxs6_read(int unit, phy_ctrl_t 
         rv = READ_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -772,6 +909,10 @@ phy_reg_xgxs6_write(int unit, phy_ctrl_t
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_NONE;
 
     if (reg_addr < 0x10) {
@@ -792,6 +933,10 @@ phy_reg_xgxs6_write(int unit, phy_ctrl_t
         rv = WRITE_PHY_REG(unit, pc, reg_addr, data);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -805,6 +950,10 @@ phy_reg_xgxs6_modify(int unit, phy_ctrl_
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_NONE;
 
     if (reg_addr < 0x10) {
@@ -825,6 +974,10 @@ phy_reg_xgxs6_modify(int unit, phy_ctrl_
         rv = MODIFY_PHY_REG(unit, pc, reg_addr, data, mask);
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 #endif /* INCLUDE_PHY_XGXS6 */
@@ -837,6 +990,10 @@ _phy_reg_aer_cl45_read(int unit, phy_ctr
     uint16 phy_reg_addr;
     int    cl45_devid;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid   = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
@@ -859,6 +1016,11 @@ _phy_reg_aer_cl45_read(int unit, phy_ctr
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -874,6 +1036,10 @@ _phy_reg_aer_cl45_write(int unit, phy_ct
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
@@ -896,6 +1062,11 @@ _phy_reg_aer_cl45_write(int unit, phy_ct
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -911,6 +1082,10 @@ _phy_reg_aer_cl45_modify(int unit, phy_c
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_CL45_REGAD(reg_addr);
     cl45_devid = PHY_AER_REG_ADDR_CL45_DEVID(reg_addr);
@@ -933,6 +1108,11 @@ _phy_reg_aer_cl45_modify(int unit, phy_c
                 SOC_PHY_CLAUSE45_ADDR(cl45_devid,PHY_AER_REG),
                 0));
     }
+
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return SOC_E_NONE;
 }
 
@@ -947,6 +1127,10 @@ _phy_reg_aer_cl22_read(int unit, phy_ctr
 
     rv     = SOC_E_UNAVAIL;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_blk  = PHY_AER_REG_ADDR_BLK(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_REGAD(reg_addr);
@@ -984,6 +1168,10 @@ _phy_reg_aer_cl22_read(int unit, phy_ctr
             rv = WRITE_PHY_REG(unit, pc, 0x1f, 0x0);
         }
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -1000,6 +1188,10 @@ _phy_reg_aer_cl22_write(int unit, phy_ct
         return SOC_E_NONE;
     }
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     rv     = SOC_E_UNAVAIL;
 
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
@@ -1036,6 +1228,10 @@ _phy_reg_aer_cl22_write(int unit, phy_ct
             rv = WRITE_PHY_REG(unit, pc, 0x1e, 0);
         }
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 }
 
@@ -1054,6 +1250,10 @@ _phy_reg_aer_cl22_modify(int unit, phy_c
 
     rv     = SOC_E_UNAVAIL;
 
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_LOCK(unit);
+#endif
+
     phy_reg_aer  = PHY_AER_REG_ADDR_AER(reg_addr);
     phy_reg_blk  = PHY_AER_REG_ADDR_BLK(reg_addr);
     phy_reg_addr = PHY_AER_REG_ADDR_REGAD(reg_addr);
@@ -1089,6 +1289,10 @@ _phy_reg_aer_cl22_modify(int unit, phy_c
         }
 
     }
+#ifdef LVL7_FIXUP
+    HPC_PHY_SHADOW_REG_UNLOCK(unit);
+#endif
+
     return rv;
 
 }
diff -rupN sdk-xgs-robo-5.9.4/src/soc/phy/serdescombo65.c esw_sdk/src/soc/phy/serdescombo65.c
--- sdk-xgs-robo-5.9.4/src/soc/phy/serdescombo65.c	2011-10-22 11:06:22.000000000 +0100
+++ esw_sdk/src/soc/phy/serdescombo65.c	2011-11-28 21:50:07.187345633 +0000
@@ -1231,7 +1231,11 @@ phy_combo65_medium_config_get(int unit, 
         sal_memcpy(cfg, &pc->fiber, sizeof (*cfg));
         return SOC_E_NONE;
     default:
+#ifdef LVL7_FIXUP
+        return SOC_E_UNAVAIL;
+#else
         return SOC_E_PARAM;
+#endif
     }
 }
 
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/linux-kernel-bde.c esw_sdk/systems/bde/linux/kernel/linux-kernel-bde.c
--- sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/linux-kernel-bde.c	2011-10-22 11:06:24.000000000 +0100
+++ esw_sdk/systems/bde/linux/kernel/linux-kernel-bde.c	2011-11-28 21:52:11.654571204 +0000
@@ -117,7 +117,8 @@
 
 MODULE_AUTHOR("Broadcom Corporation");
 MODULE_DESCRIPTION("Kernel BDE");
-MODULE_LICENSE("Proprietary");
+MODULE_LICENSE("GPL");
+//MODULE_LICENSE("Proprietary");
 
 /* DMA memory pool size */
 static char *dmasize;
@@ -908,6 +914,11 @@ _pci_probe(struct pci_dev *dev, const st
             gprintk("Cannot enable PCI device : vendor_id = %x, device_id = %x\n",
                     dev->vendor, dev->device);
         }
+/* PTin added */
+        else {
+            gprintk("LTX: Enabled pci device : vendor_id = %x, device_id = %x\n",dev->vendor, dev->device);
+        }
+/* PTin end */
 
         
         /*
@@ -922,9 +933,11 @@ _pci_probe(struct pci_dev *dev, const st
          */
         if (pci_resource_start(dev, baroff) < _pci_mem_start) {
             _pci_mem_start = pci_resource_start(dev, baroff);
+            gprintk("LTX: Adjusted _pci_mem_start\n");
         }
         if (pci_resource_end(dev, baroff) > _pci_mem_end) {
             _pci_mem_end = pci_resource_end(dev, baroff);
+            gprintk("LTX: Adjusted _pci_mem_end\n");
         }
 
 #ifdef CONFIG_SANDPOINT
@@ -1025,6 +1038,7 @@ _pci_probe(struct pci_dev *dev, const st
         if (cap_base) {
             int max_val, max_cap;
             uint16 devcap, devctl;
+            gprintk("LTX: Will parse PCI_CAPABILITY_LIST\n");
 
             /* Get current device control settings */
             pci_read_config_word(dev, cap_base + PCI_EXP_DEVCTL, &devctl);
@@ -1093,6 +1112,41 @@ _pci_probe(struct pci_dev *dev, const st
         }
     }
 
+
+    if (debug >= 1) {
+        uint8 aux8;
+        uint32 aux32;
+
+        gprintk("***********PCI Conf registers: api 5.9.2**********\n");
+        pci_read_config_dword(dev, 0x0, &aux32);
+        gprintk("* Vendor ID | Device ID :  0x%08X *\n", aux32);
+        pci_read_config_dword(dev, 0x4, &aux32);
+        gprintk("* Class Code| rev ID    :  0x%08X *\n", aux32);
+        pci_read_config_byte(dev, 0xC, &aux8);
+        gprintk("* Cache line syze       :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0xD, &aux8);
+        gprintk("* Latency Timer         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0xE, &aux8);
+        gprintk("* Header Type           :  0x%02X       *\n", aux8);
+        pci_read_config_dword(dev, 0x10, &aux32);
+        gprintk("* BASE ADDRESS LOW      :  0x%08X *\n", aux32);
+        pci_read_config_dword(dev, 0x14, &aux32);
+        gprintk("* BASE ADDRESS HIGH     :  0x%08X *\n", aux32);
+        pci_read_config_byte(dev, 0x3C, &aux8);
+        gprintk("* Interrupt Line        :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3D, &aux8);
+        gprintk("* Interrupt Pin         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3E, &aux8);
+        gprintk("* Minimum Grant         :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x3F, &aux8);
+        gprintk("* Maximum Latency       :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x40, &aux8);
+        gprintk("* Retry Count           :  0x%02X       *\n", aux8);
+        pci_read_config_byte(dev, 0x41, &aux8);
+        gprintk("* TRDY Timeout          :  0x%02X       *\n", aux8);
+        gprintk("****************************\n");
+    }
+
     /* Prevent compiler warning */
     if (ctrl == NULL) {
         return 0;
@@ -1112,6 +1166,7 @@ _pci_probe(struct pci_dev *dev, const st
     ctrl->base_address = (sal_vaddr_t)
         IOREMAP(pci_resource_start(dev, baroff), pci_resource_len(dev, baroff));
     
+    gprintk("LTX: BCM: Mapped the device\n");
 
 
     /*
@@ -1189,6 +1246,7 @@ _pci_probe(struct pci_dev *dev, const st
 #endif
 
     /* Let's boogie */
+    gprintk("LTX: BCM: Reached end of _probe\n");
     return 0;
 }
 
@@ -2755,7 +2813,9 @@ _init(void)
     if (himem) {
         if ((himem[0] & ~0x20) == 'Y' || himem[0] == '1') {
             _use_himem = 1;
+            gprintk("LTX: Using himem dma allocation\n");
         } else if ((himem[0] & ~0x20) == 'N' || himem[0] == '0') {
+            gprintk("LTX: NOT Using himem dma allocation\n");
             _use_himem = 0;
         }
     }
@@ -2768,6 +2828,7 @@ _init(void)
         else {
             mpool_init();
             _dma_pool = mpool_create(_dma_vbase, _dma_mem_size);
+            gprintk("Allocated %d bytes for DMA memory\n", _dma_mem_size);  /* PTin added */
         }
     }
 
@@ -3244,6 +3305,15 @@ _interrupt_connect(int d,
     int isr2_dev;
     int isr_active;
 
+    /* PTin added: Kernel */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
+    struct device_node *np = NULL;
+    unsigned int eirq;
+#endif
+
+    gprintk("Setting IRQ...\n");
+    /* PTin end */
+
     isr2_dev = d & LKBDE_ISR2_DEV;
     d &= ~LKBDE_ISR2_DEV;
 
@@ -3288,11 +3358,31 @@ _interrupt_connect(int d,
         }
     }
 
+    /* PTin added: Kernel */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
+    np = of_find_compatible_node(NULL, NULL, "bcm,fastpath-pci");
+	  if (np == NULL){
+      gprintk ("LMP - Nao apanhei nenhum no' da devtree\n\r");
+      return -1;
+    }
+    eirq = irq_of_parse_and_map(np, 0);
+    if (eirq == NO_IRQ)
+    {
+      gprintk ("LMP - Nao apanhei nenhum irq devtree\n\r");
+      return -1;
+    }
+    ctrl->iLine = eirq;
+#endif
+    gprintk("irq to be used: %d\n",ctrl->iLine);
+    /* PTin end */
+
     if (ctrl->iLine != -1) {
 #if defined(CONFIG_PCI_MSI) && defined(BDE_LINUX_USE_MSI_INTERRUPT)
         use_msi = 1;
+        gprintk ("LTX: Trying to enable MSI\n");
         if (pci_enable_msi(ctrl->pci_device)) {
             use_msi = 0;
+            gprintk ("LTX: FAILED to enable MSI\n");
         }
 #else
         use_msi = 0;
@@ -3316,6 +3406,7 @@ _interrupt_connect(int d,
 #endif /* defined(CONFIG_PCI_MSI) && defined(BDE_LINUX_USE_MSI_INTERRUPT) */
             return -1;
         }
+        gprintk("Success requesting irq %d for device %d\n",ctrl->iLine,ctrl->pci_device->irq);
     }
 
     return 0;
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.24 esw_sdk/systems/bde/linux/kernel/Makefile.24
--- sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.24	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/kernel/Makefile.24	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,63 @@
+FP_BASE=../../../../../../..
+
+KERNLIB=kern_kbde.a
+
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+COMPONENT_INCLDIR += $(BROADCOM_INCL) \
+        -I$(BROADCOM_SRC)/../systems/bde/linux/include \
+        -I$(BROADCOM_SRC)/../systems/bde/linux/user/kernel \
+        -I$(BROADCOM_SRC)/../systems/linux/kernel/modules/include 
+
+COMPONENT_INCLDIR += \
+        -I$(KERNEL_SRC)/include \
+        -I../include
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) -D__KERNEL__ -O2 -Werror
+ifeq ($(L7_CPU),raptor)
+CFLAGSLOCAL+=-Wall -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -mlong-calls
+endif
+
+# Specify modules that need to be compiled.
+#
+LIBOBJS = linux-kernel-bde.o mpool.o
+
+KERNEL_LIBS = ../../../linux/kernel/modules/shared/kern_mod_shared.a
+
+bldlib: kbde.kmod
+	$(STRIP) -g kbde.kmod -o $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/kbde.o 
+	rm -f *.o
+
+kbde.kmod: $(KERNLIB)($(LIBOBJS)) $(KERNEL_LIBS)
+	rm -f kbde.kmod
+	$(MAKE) -f Makefile.24 $(LIBOBJS)
+	$(linkcmd) -o kbde.kmod -Map kbde.map -r $(LIBOBJS) $(KERNEL_LIBS)
+
+mpool.c: ../shared/mpool.c
+	rm -f mpool.c
+	cp ../shared/mpool.c .
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) $(KERNLIB)
+
+(%.o) : %.c
+	$(CC) -Wp,-MD,$(*F).d $(CFLAGS) $(CFLAGSLOCAL) -c $<
+	$(AR) r $@ $*.o
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.26 esw_sdk/systems/bde/linux/kernel/Makefile.26
--- sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.26	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/kernel/Makefile.26	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,30 @@
+FP_BASE:=$(shell ./abspath.sh ../../../../../../..)
+#FP_BASE=../../../../../../..
+PWD:=$(shell pwd) 
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+bldlib: kbde.ko
+	cp kbde.ko $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/kbde.ko 
+	rm -f *.o ../shared/*.o ../../../linux/kernel/modules/shared/*.o
+
+kbde.ko: linux-kernel-bde.c
+	rm -rf kbde.ko .tmp_versions ../shared/mpool.o  
+	$(MAKE) -C $(KERNEL_SRC) M=$(PWD) FP_BASE=$(FP_BASE) modules
+	$(CROSS_COMPILE)strip --strip-debug kbde.ko
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) kbde.ko
+
+installexe:
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.kbde esw_sdk/systems/bde/linux/kernel/Makefile.kbde
--- sdk-xgs-robo-5.9.4/systems/bde/linux/kernel/Makefile.kbde	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/kernel/Makefile.kbde	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,11 @@
+# This Makefile is copied to the objects/kmod output directory along with
+# the required .c files in order to build the kernel module in the output
+# location.
+#
+# Using the original kernel Makefile contents, but stripping off the
+# path names from the list of .o files being built.
+#
+
+include $(FP_ROOT)/vendor/broadcom/esw_sdk/systems/bde/linux/kernel/Makefile
+
+kbde-y := $(notdir $(kbde-y))
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/shared/Makefile esw_sdk/systems/bde/linux/shared/Makefile
--- sdk-xgs-robo-5.9.4/systems/bde/linux/shared/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/shared/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,40 @@
+FP_BASE=../../../../../../..
+
+FPLIB=fp_shared.a
+
+# -*- Makefile -*-
+# $Id: Makefile,v 1.4 Broadcom SDK $
+# $Copyright: (c) 2004 Broadcom Corp.
+# All Rights Reserved.$
+#
+# Makefile for Linux user BDE
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+COMPONENT_INCLDIR += $(BROADCOM_INCL) \
+	-I../include \
+	-I$(KERNEL_SRC)/arch/ppc
+	
+	
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) $(SWCFLAG)  \
+ 	-DBROADCOM_DEBUG
+
+# Specify modules that need to be compiled.
+#
+ifeq ($(findstring LINUX,$(L7_OS_VERSION)),LINUX) 
+LIBOBJS = mpool.o
+else
+LIBOBJS =
+endif
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
+
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.24 esw_sdk/systems/bde/linux/user/kernel/Makefile.24
--- sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.24	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/user/kernel/Makefile.24	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,58 @@
+FP_BASE=../../../../../../../..
+
+KERNLIB=kern_ubde.a
+
+# Linux Kernel module ubde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+COMPONENT_INCLDIR += \
+	-I$(KERNEL_SRC)/include \
+	$(BROADCOM_INCL) \
+	-I$(BROADCOM_SRC)/../systems/bde/linux/include \
+	-I$(BROADCOM_SRC)/../systems/bde/linux/user/kernel \
+        -I$(BROADCOM_SRC)/../systems/linux/kernel/modules/include \
+	-I../include
+
+# Specify compile flags.
+#
+CFLAGSLOCAL= $(GFLAG) -D__KERNEL__ -O2 -Werror
+ifeq ($(L7_CPU),raptor)
+CFLAGSLOCAL+=-Wall -Wstrict-prototypes -Wno-trigraphs -O2 -fno-strict-aliasing -fno-common -fomit-frame-pointer -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap -mlong-calls
+endif
+
+# Specify modules that need to be compiled.
+#
+
+LIBOBJS = linux-user-bde.o
+
+KERNEL_LIBS = ../../../../linux/kernel/modules/shared/kern_mod_shared.a \
+	      ../../../../../src/sal/core/linux/kern_sal.a
+
+bldlib: ubde.kmod
+	$(STRIP) -g ubde.kmod -o $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/ubde.o 
+	rm -f *.o
+
+ubde.kmod: $(KERNLIB)($(LIBOBJS)) $(KERNEL_LIBS)
+	rm -f ubde.kmod
+	$(MAKE) -f Makefile.24 $(LIBOBJS)
+	$(linkcmd) -o ubde.kmod -Map ubde.map -r $(LIBOBJS) $(KERNEL_LIBS)
+
+clean::
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) $(KERNLIB)
+
+(%.o) : %.c
+	$(CC) -Wp,-MD,$(*F).d $(CFLAGS) $(CFLAGSLOCAL) -c $<
+	$(AR) r $@ $*.o
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.footer
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.26 esw_sdk/systems/bde/linux/user/kernel/Makefile.26
--- sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.26	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/user/kernel/Makefile.26	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,31 @@
+FP_BASE:=$(shell ../../kernel/abspath.sh ../../../../../../../..)
+PWD:=$(shell pwd) 
+# Linux Kernel module kbde.o Makefile
+#
+#
+
+# Do not change this line.
+#
+include $(FP_BASE)/src/l7tools/build/make.cfg
+
+# Specify additional header directories needed by your component
+
+bldlib: ubde.ko
+	cp ubde.ko $(FP_BASE)/bsp/cpu/$(L7_CPU)/$(L7_TARGETOS)/target/ubde.ko 
+	rm -f *.o ../../../../linux/kernel/modules/shared/*.o ../../../../../src/sal/core/linux/*.o ../../../../../src/sal/core/*.o
+
+ubde.ko: linux-user-bde.c 
+	rm -rf ubde.ko .tmp_versions 
+	$(MAKE) -C $(KERNEL_SRC) M=$(PWD) FP_BASE=$(FP_BASE) modules
+	$(CROSS_COMPILE)strip --strip-debug ubde.ko
+
+clean::
+	-$(RM) mpool.c
+	-$(RM) *.o
+	-$(RM) *.map
+	-$(RM) *.kmod
+	-$(RM) *.ko
+	-$(RM) ubde.ko
+
+installexe:
+
diff -rupN sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.ubde esw_sdk/systems/bde/linux/user/kernel/Makefile.ubde
--- sdk-xgs-robo-5.9.4/systems/bde/linux/user/kernel/Makefile.ubde	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/bde/linux/user/kernel/Makefile.ubde	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,11 @@
+# This Makefile is copied to the objects/kmod output directory along with
+# the required .c files in order to build the kernel module in the output
+# location.
+#
+# Using the original kernel Makefile contents, but stripping off the
+# path names from the list of .o files being built.
+#
+
+include $(FP_ROOT)/vendor/broadcom/esw_sdk/systems/bde/linux/user/kernel/Makefile
+
+ubde-y := $(notdir $(ubde-y))
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/kernel/pq2pro-2_6/Makefile esw_sdk/systems/linux/kernel/pq2pro-2_6/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/kernel/pq2pro-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/kernel/pq2pro-2_6/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,84 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.10 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR     - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+override kernel_version=2_6
+platform=pq2pro-$(kernel_version)
+
+# Select build platform 
+#BUILD_PLATFORM=WR_LINUX
+#BUILD_PLATFORM=ELDK
+
+#Select the LINUX KERNEL VERSION 
+#KERN_VER = 2.6.21.7
+#KERN_VER = 2.6.24.4
+#KERN_VER = 2.6.25
+
+#Select the ELDK version
+#ELDK_VERSION=4.1
+#ELDK_VERSION=4.0
+
+#Select WRS linux version
+#WRS_LINUX_VERSION=2.0
+#WRS_LINUX_VERSION=3.0
+
+
+export KERN_VER
+export ELDK_VERSION
+export BUILD_PLATFORM
+export WRS_LINUX_VERSION
+include ${SDK}/make/Make.linux
+
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/kernel/pq3-2_6/Makefile esw_sdk/systems/linux/kernel/pq3-2_6/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/kernel/pq3-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/kernel/pq3-2_6/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,84 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.10 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR     - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+override kernel_version=2_6
+platform=pq3-$(kernel_version)
+
+# Select build platform 
+#BUILD_PLATFORM=WR_LINUX
+#BUILD_PLATFORM=ELDK
+
+#Select the LINUX KERNEL VERSION 
+#KERN_VER = 2.6.21.7
+#KERN_VER = 2.6.24.4
+#KERN_VER = 2.6.25
+
+#Select the ELDK version
+#ELDK_VERSION=4.1
+#ELDK_VERSION=4.0
+
+#Select WRS linux version
+#WRS_LINUX_VERSION=2.0
+#WRS_LINUX_VERSION=3.0
+
+
+export KERN_VER
+export ELDK_VERSION
+export BUILD_PLATFORM
+export WRS_LINUX_VERSION
+include ${SDK}/make/Make.linux
+
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/fastpath-2_6/Makefile esw_sdk/systems/linux/user/fastpath-2_6/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/user/fastpath-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/fastpath-2_6/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,27 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.1.2.2 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR      - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE  - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+override kernel_version=2_6
+platform=$(L7_CPU)-$(kernel_version)
+LINUX_MAKE_USER=1
+LINUX_MAKE_DIR := $(SDK)/systems/linux/user/fastpath_common
+include ${SDK}/make/Make.linux
+
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/bdecreate.c esw_sdk/systems/linux/user/fastpath_common/bdecreate.c
--- sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/bdecreate.c	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/fastpath_common/bdecreate.c	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,140 @@
+/*
+ * $Id: socdiag.c,v 1.13 Broadcom SDK $
+ * $Copyright: Copyright 2008 Broadcom Corporation.
+ * This program is the proprietary software of Broadcom Corporation
+ * and/or its licensors, and may only be used, duplicated, modified
+ * or distributed pursuant to the terms and conditions of a separate,
+ * written license agreement executed between you and Broadcom
+ * (an "Authorized License").  Except as set forth in an Authorized
+ * License, Broadcom grants no license (express or implied), right
+ * to use, or waiver of any kind with respect to the Software, and
+ * Broadcom expressly reserves all rights in and to the Software
+ * and all intellectual property rights therein.  IF YOU HAVE
+ * NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+ * IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+ * ALL USE OF THE SOFTWARE.  
+ *  
+ * Except as expressly set forth in the Authorized License,
+ *  
+ * 1.     This program, including its structure, sequence and organization,
+ * constitutes the valuable trade secrets of Broadcom, and you shall use
+ * all reasonable efforts to protect the confidentiality thereof,
+ * and to use this information only in connection with your use of
+ * Broadcom integrated circuit products.
+ *  
+ * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+ * PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+ * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+ * OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+ * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+ * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+ * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+ * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+ * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+ * 
+ * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+ * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+ * INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+ * ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+ * TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+ * THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
+ * WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+ * ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+ *
+ * socdiag: low-level diagnostics shell for Orion (SOC) driver.
+ */
+
+#include <unistd.h>
+#include <stdlib.h>
+
+#include <sal/core/boot.h>
+#include <sal/appl/sal.h>
+#include <sal/appl/config.h>
+#include <soc/debug.h>
+
+#include <appl/diag/system.h>
+
+#include <linux-bde.h>
+
+ibde_t *bde;
+
+/* The bus properties are (currently) the only system specific
+ * settings required. 
+ * These must be defined beforehand 
+ */
+
+#ifndef SYS_BE_PIO
+#error "SYS_BE_PIO must be defined for the target platform"
+#endif
+#ifndef SYS_BE_PACKET
+#error "SYS_BE_PACKET must be defined for the target platform"
+#endif
+#ifndef SYS_BE_OTHER
+#error "SYS_BE_OTHER must be defined for the target platform"
+#endif
+
+#if !defined(SYS_BE_PIO) || !defined(SYS_BE_PACKET) || !defined(SYS_BE_OTHER)
+#error "platform bus properties not defined."
+#endif
+
+int
+bde_create(void)
+{	
+    linux_bde_bus_t bus;
+    bus.be_pio = SYS_BE_PIO;
+    bus.be_packet = SYS_BE_PACKET;
+    bus.be_other = SYS_BE_OTHER;
+    return linux_bde_create(&bus, &bde);
+}
+
+/*
+ * These stubs are here for legacy compatability reasons. 
+ * They are used only by the diag/test code, not the driver, 
+ * so they are really not that important. 
+ */
+typedef void* pci_dev_t;
+
+int pci_dma_putw(pci_dev_t *dev, uint32 addr, uint32 data)
+{
+    *(uint32 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+int pci_dma_puth(pci_dev_t *dev, uint32 addr, uint16 data)
+{
+    *(uint16 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+int pci_dma_putb(pci_dev_t *dev, uint32 addr, uint8 data)
+{
+    *(uint8 *) INT_TO_PTR(addr) = data;
+    return 0;
+}
+
+uint32 pci_dma_getw(pci_dev_t *dev, uint32 addr)
+{
+  uint32 data;
+  data = *(uint32 *) INT_TO_PTR(addr);
+  return data;
+}
+
+uint16 pci_dma_geth(pci_dev_t *dev, uint32 addr)
+{
+  uint16 data;
+  data = *(uint16 *) INT_TO_PTR(addr);
+  return data;
+}
+
+uint8 pci_dma_getb(pci_dev_t *dev, uint32 addr)
+{
+  uint8 data;
+  data = *(uint8 *) INT_TO_PTR(addr);
+  return data;
+}
+
+int pci_print_all(void)
+{
+  return 0;
+}
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/Makefile esw_sdk/systems/linux/user/fastpath_common/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/fastpath_common/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,276 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.56 Broadcom SDK $
+# $Copyright: Copyright 2008 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+#
+
+override-target=unix-user
+
+all: check build
+
+ifeq ($(LINUX_MAKE_SHARED_LIB),1)
+libext = so.$(SHAREDLIBVER)
+else
+libext = a
+endif
+
+check:
+ifeq (,$(SDK))
+	@echo 'The $$SDK environment variable is not set'; exit 1
+else
+ifeq (,$(platform))
+	@echo 'Internal error: platform variable is not set'; exit 1
+else
+include $(SDK)/make/Make.config
+LOCALDIR=systems/linux/user/fastpath_common
+include $(SDK)/make/Make.depend
+kernel-override=linux-$(platform)
+ifdef LVL7_FIXUP
+KERN_BLDROOT=$(L7_OUTPUT)/$(kernel-override)$(bldroot_suffix)
+DEST_DIR=$(L7_OUTPUT_KMOD)
+else
+ifdef BLDCONFIG
+KERN_BLDROOT=$(SDK)/build/$(BLDCONFIG)/$(kernel-override)$(bldroot_suffix)
+else
+KERN_BLDROOT=$(SDK)/build/$(kernel-override)$(bldroot_suffix)
+endif
+endif # end LVL7_FIXUP
+endif
+endif
+
+ifeq (,$(kernel_version))
+kernel_version=2_4
+endif
+
+ifeq ($(kernel_version),2_6)
+ADD_TO_CFLAGS += -DLKM_2_6
+KOBJ=ko
+else
+ADD_TO_CFLAGS += -DLKM_2_4
+KOBJ=o
+endif
+
+ifneq (,$(TOOLS_DIR))
+override PATH := $(TOOLS_DIR):$(PATH)
+endif
+
+ifeq ($(DEST_DIR),)
+DEST_DIR=../$(platform)
+endif
+
+BCM = $(DEST_DIR)/bcm.$(targetplat)$(all_suffix)
+
+KERNEL_BDE=$(DEST_DIR)/linux-kernel-bde.$(KOBJ)
+USER_BDE=$(DEST_DIR)/linux-user-bde.$(KOBJ)
+
+NETSERVE = $(DEST_DIR)/netserve
+
+ifdef LVL7_FIXUP
+all_targets = kernel_modules user_libs $(KERNEL_BDE) $(USER_BDE)
+else
+all_targets = kernel_modules user_libs $(KERNEL_BDE) $(USER_BDE) $(BCM) $(NETSERVE)
+endif
+
+
+# Define targets to be built by default.
+build_targets = $(all_targets)
+
+# Target specific
+ifndef LVL7_FIXUP
+ADD_TO_CFLAGS += -DLINUX_SAL_DMA_ALLOC_OVERRIDE
+ADD_TO_CFLAGS += -DLINUX_SAL_USLEEP_OVERRIDE -DLINUX_SAL_SEM_OVERRIDE
+ADD_TO_CFLAGS += -DLINUX_SAL_UDELAY_OVERRIDE
+else # Only override SEM
+ADD_TO_CFLAGS += -DLINUX_SAL_SEM_OVERRIDE
+endif
+
+# User BDE libraries
+ADD_TO_CFLAGS += -I$(SDK)/systems/bde/linux/include
+
+CFLAGS += $(ADD_TO_CFLAGS)
+
+ifdef ESW_CHIPS
+ESW_DIAG_LIBS = libdiag_esw.a 
+endif
+
+ifdef ROBO_CHIPS
+ROBO_DIAG_LIBS = libdiagrobo.a
+endif
+
+ifdef SBX_CHIPS
+SBX_DIAG_LIBS = \
+	libdiag_sbx.$(libext)
+endif
+
+DIAG_LIBS = \
+        libdiag.a       \
+        ${ESW_DIAG_LIBS} \
+        ${ROBO_DIAG_LIBS} \
+        ${SBX_DIAG_LIBS} \
+	$(COND_LIB_EAV_APPL) \
+	${COND_LIB_BCMX_DIAG} \
+        ${COND_LIB_TEST} \
+	$(COND_LIB_TCL) \
+	$(APPL_LIBS) \
+	$(COND_LIB_EDITLINE) \
+	$(COND_LIB_WBDM) \
+	$(COND_LIB_SMB) \
+	$(COND_LIB_PHY_DIAGNOSTICS) \
+	$(COND_LIB_BSAFE) \
+	libsal_appl.a libsal_appl_plat.a liblubde.a
+
+ACL_LIB = $(COND_LIB_ACL)
+BCM_LIBS = $(DIAG_LIBS) $(DRV_LIBS) $(ACL_LIB) $(COND_LIB_ETH_DRV)
+BCM_LIBS_BLD = $(addprefix $(BLDDIR)/,$(BCM_LIBS))
+
+BCM_LIBS_BLD += ${EXTERNAL_LIBS}
+ifdef LVL7_FIXUP
+  ifdef QUIET
+    entry_msg    = @${ECHO} Generating $(notdir $@)
+    OBJCOPY      := @$(OBJCOPY)
+  endif
+endif
+
+
+build:: $(BLDDIR)/.tree $(build_targets)
+
+kernel_modules:
+	$(MAKE) -C $(SDK)/systems/bde/linux/kernel kernel_version=$(kernel_version)
+	$(MAKE) -C $(SDK)/systems/bde/linux/user/kernel kernel_version=$(kernel_version)
+
+# LVL7_FIXUP :
+# 1. Added $(MAKE) -C $(SDK)/systems/linux/user/common -f Makefile.fastpath CFLAGS="$(CFLAGS)"
+# 2. Remove $(MAKE) -C $(SDK)/systems/drv CFLAGS="$(CFLAGS)"
+user_libs:
+	$(MAKE) -C $(SDK)/systems/linux/user/fastpath_common -f Makefile.fastpath CFLAGS="$(CFLAGS)"
+	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS)"
+	$(MAKE) -C $(SDK)/src CFLAGS="$(ADD_TO_CFLAGS)"
+ifdef BUILD_MACSEC
+	@${ECHO} "Building MACSEC libraries ...."
+	$(MAKE) -C ${MACSEC_HOME} MACSEC_CC="${CC}" MACSEC_LD="${LD}" MACSEC_AR="$(AR)" MACSEC_CFLAGS="${MACSEC_BUILD_FLAG}" MACSEC_TARGET="${targetbase}/${targetplat}/${platform}"
+endif
+
+# Broadcom Command Monitor
+
+# Build platform_defines.c to compile in config.bcm
+#
+ifndef NO_SAL_APPL
+PLATFORM_DEFINES_OBJ=${BLDDIR}/platform_defines.o
+${BLDDIR}/platform_defines.c: ${SDK}/rc/config.bcm
+	$(PERL) ${SDK}/tools/bcm2c_linux.pl ${SDK}/rc/config.bcm >$@
+${BLDDIR}/platform_defines.o: ${BLDDIR}/platform_defines.c
+	${CC} ${CFLAGS} -c $< -o $@
+else
+PLATFORM_DEFINES_OBJ=
+endif
+
+
+$(BCM): $(BCM).dbg
+	$(OBJCOPY) --strip-debug $< $@
+
+
+$(BCM).dbg: $(BLDDIR)/bdecreate.o $(BLDDIR)/version.o \
+	${PLATFORM_DEFINES_OBJ} $(BCM_LIBS_BLD) 
+	@rm -f $@	# Prevent core dump if currently running
+	$(CC) $(CFLAGS) -o $@ $(BLDDIR)/bdecreate.o $(BLDDIR)/version.o \
+	${PLATFORM_DEFINES_OBJ} $(BCM_LIBS_BLD) $(LDFLAGS)
+
+$(KERNEL_BDE): $(KERN_BLDROOT)/linux-kernel-bde.$(KOBJ)
+ifdef LVL7_FIXUP
+	$(entry_msg)
+endif
+	$(OBJCOPY) --strip-debug $< $@
+
+$(USER_BDE): $(KERN_BLDROOT)/linux-user-bde.$(KOBJ)
+ifdef LVL7_FIXUP
+	$(entry_msg)
+endif
+	$(OBJCOPY) --strip-debug $< $@
+
+$(NETSERVE): $(BLDDIR)/netserve.o
+	$(CC) $(CFLAGS) -o $@ $(BLDDIR)/netserve.o $(LDFLAGS) -lutil
+	$(OBJCOPY) --strip-debug $@
+
+
+
+
+# Build Version
+
+$(BLDDIR)/version.c: $(BLDDIR)/bdecreate.o $(BCM_LIBS_BLD)
+	$(PERL) $(SDK)/tools/version.pl > $@
+$(BLDDIR)/version.o: $(BLDDIR)/version.c
+	$(CC) $(CFLAGS) -c $< -o $@
+
+clean::
+	$(MAKE) -C $(SDK)/systems/bde/linux/kernel $@
+	$(MAKE) -C $(SDK)/systems/bde/linux/user/kernel $@
+	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS)" $@
+	$(MAKE) -C $(SDK)/src CFLAGS="$(CFLAGS)" $@
+	$(RM) $(BLDDIR)/version.c $(BLDDIR)/version.o
+	$(RM) $(BLDDIR)/platform_defines.c $(BLDDIR)/platform_defines.o
+	$(RM) $(BLDDIR)/bdecreate.o
+	$(RM) $(KERNEL_BDE) $(USER_BDE) $(BCM) $(BCM).dbg
+	$(RM) $(BLDDIR)/netserve.o
+	$(RM) $(NETSERVE)
+
+distclean:: clean
+
+.PHONY: variable
+
+#
+# Echo variable values used for configuration
+# usage: make VAR=CC variable
+#
+variable::
+	@echo $($(VAR))
+
+# Make.config defines remaining phony targets
+.PHONY: build kernel_modules user_libs
+
+# Output the CFLAGS used by the SDK
+#
+ifdef LVL7_FIXUP
+.PHONY: get_sdk_flags
+
+get_sdk_flags::
+	@echo "CFLAGS_SDK := $(filter -D%,$(CFLAGS))" >$(L7_OUT_SDK_FLAGS)
+endif
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/Makefile.fastpath esw_sdk/systems/linux/user/fastpath_common/Makefile.fastpath
--- sdk-xgs-robo-5.9.4/systems/linux/user/fastpath_common/Makefile.fastpath	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/fastpath_common/Makefile.fastpath	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,17 @@
+#$Id: Makefile,v 1.3.4.1 Broadcom SDK $
+# $Copyright: Copyright 2007, Broadcom Corporation All Rights Reserved.
+# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES
+# OF ANY KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE.
+# BROADCOM SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.$
+#
+LOCALDIR = systems/linux/user/fastpath_common
+
+include ${SDK}/make/Make.config
+
+lib = liblusrcmmsys
+
+include ${SDK}/make/Make.lib
+
+include ${SDK}/make/Make.depend
+
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/pq2pro-2_6/Makefile esw_sdk/systems/linux/user/pq2pro-2_6/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/user/pq2pro-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/pq2pro-2_6/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,90 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.9 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR      - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE  - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+
+
+override kernel_version=2_6
+platform=pq2pro-$(kernel_version)
+LINUX_MAKE_USER=1
+export LINKER_RELAX=1
+
+# Select the build environment
+#BUILD_PLATFORM=ELDK
+#BUILD_PLATFORM=WR_LINUX
+
+#Select the LINUX KERNEL VERSION
+#KERN_VER = 2.6.21.7
+#KERN_VER = 2.6.24.4
+#KERN_VER = 2.6.25
+
+
+# Select the ELDK version
+#ELDK_VERSION=4.1
+#ELDK_VERSION=4.0
+
+#Select WRS Linux version
+#WRS_LINUX_VERSION=2.0
+#WRS_LINUX_VERSION=3.0
+
+
+export KERN_VER
+export ELDK_VERSION
+export BUILD_PLATFORM
+export WRS_LINUX_VERSION
+
+include ${SDK}/make/Make.linux
+
diff -rupN sdk-xgs-robo-5.9.4/systems/linux/user/pq3-2_6/Makefile esw_sdk/systems/linux/user/pq3-2_6/Makefile
--- sdk-xgs-robo-5.9.4/systems/linux/user/pq3-2_6/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ esw_sdk/systems/linux/user/pq3-2_6/Makefile	2011-11-28 17:01:57.000000000 +0000
@@ -0,0 +1,90 @@
+# -*- Makefile -*-
+# $Id: Makefile,v 1.9 Broadcom SDK $
+# $Copyright: Copyright 2010 Broadcom Corporation.
+# This program is the proprietary software of Broadcom Corporation
+# and/or its licensors, and may only be used, duplicated, modified
+# or distributed pursuant to the terms and conditions of a separate,
+# written license agreement executed between you and Broadcom
+# (an "Authorized License").  Except as set forth in an Authorized
+# License, Broadcom grants no license (express or implied), right
+# to use, or waiver of any kind with respect to the Software, and
+# Broadcom expressly reserves all rights in and to the Software
+# and all intellectual property rights therein.  IF YOU HAVE
+# NO AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE
+# IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE
+# ALL USE OF THE SOFTWARE.  
+#  
+# Except as expressly set forth in the Authorized License,
+#  
+# 1.     This program, including its structure, sequence and organization,
+# constitutes the valuable trade secrets of Broadcom, and you shall use
+# all reasonable efforts to protect the confidentiality thereof,
+# and to use this information only in connection with your use of
+# Broadcom integrated circuit products.
+#  
+# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS
+# PROVIDED "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
+# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY,
+# OR OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
+# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
+# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
+# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
+# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
+# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
+# 
+# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
+# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL,
+# INCIDENTAL, SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER
+# ARISING OUT OF OR IN ANY WAY RELATING TO YOUR USE OF OR INABILITY
+# TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF
+# THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR USD 1.00,
+# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING
+# ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.$
+
+#
+# This make job requires the following environment variables to be set:
+#
+# SDK                - path to StrataXGS SDK root directory
+#
+# Optionally the following environment variables can be set to
+# override the default build server configuration:
+#
+# PPC_TOOLS_DIR      - path to build tools (if not in PATH already)
+# PPC_CROSS_COMPILE  - cross compile tools prefix
+# LINUX_INCLUDE      - path to Linux kernel include directory
+#
+
+
+
+override kernel_version=2_6
+platform=pq3-$(kernel_version)
+LINUX_MAKE_USER=1
+export LINKER_RELAX=1
+
+# Select the build environment
+#BUILD_PLATFORM=ELDK
+#BUILD_PLATFORM=WR_LINUX
+
+#Select the LINUX KERNEL VERSION
+#KERN_VER = 2.6.21.7
+#KERN_VER = 2.6.24.4
+#KERN_VER = 2.6.25
+
+
+# Select the ELDK version
+#ELDK_VERSION=4.1
+#ELDK_VERSION=4.0
+
+#Select WRS Linux version
+#WRS_LINUX_VERSION=2.0
+#WRS_LINUX_VERSION=3.0
+
+
+export KERN_VER
+export ELDK_VERSION
+export BUILD_PLATFORM
+export WRS_LINUX_VERSION
+
+include ${SDK}/make/Make.linux
+
